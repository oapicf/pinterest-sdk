/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class BusinessAccessRelationshipsApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        DELETE /businesses/{business_id}/members : Terminate business memberships
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("biz_access:read","See business access data")
                        .withScope("biz_access:write","Create, update, or delete business access data")
                
            .endSecurityDefinition()
            .delete("/businesses/{business_id}/members")
                .description("Terminate business memberships")
                .id("deleteBusinessMembershipApi")
                .produces("application/json")
                .outType(DeletedMembersResponse.class)
                .consumes("application/json")
                .type(MembersToDeleteBody.class)
                
                .param()
                    .name("businessId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Business id")
                .endParam()
                .param()
                    .name("membersToDeleteBody")
                    .type(RestParamType.body)
                    .required(true)
                    .description("List of members with role to delete.")
                .endParam()
                .to("direct:deleteBusinessMembership");
        

        /**
        DELETE /businesses/{business_id}/partners : Terminate business partnerships
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("biz_access:write","Create, update, or delete business access data")
                
            .endSecurityDefinition()
            .delete("/businesses/{business_id}/partners")
                .description("Terminate business partnerships")
                .id("deleteBusinessPartnersApi")
                .produces("application/json")
                .outType(DeletePartnersResponse.class)
                .consumes("application/json")
                .type(DeletePartnersRequest.class)
                
                .param()
                    .name("businessId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of the requesting business.")
                .endParam()
                .param()
                    .name("deletePartnersRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("An object containing a \"partner_ids\" property composed of a list of partner IDs and a \"partners_type\" property specifying the type of partners to delete. ")
                .endParam()
                .to("direct:deleteBusinessPartners");
        

        /**
        GET /businesses/employers : List business employers for user
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("biz_access:read","See business access data")
                
            .endSecurityDefinition()
            .get("/businesses/employers")
                .description("List business employers for user")
                .id("getBusinessEmployersApi")
                .produces("application/json")
                .outType(GetBusinessEmployers200Response.class)
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .to("direct:getBusinessEmployers");
        

        /**
        GET /businesses/{business_id}/members : Get business members
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("biz_access:read","See business access data")
                
            .endSecurityDefinition()
            .get("/businesses/{business_id}/members")
                .description("Get business members")
                .id("getBusinessMembersApi")
                .produces("application/json")
                .outType(GetBusinessMembers200Response.class)
                .param()
                    .name("businessId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of the requesting business.")
                .endParam()
                .param()
                    .name("assetsSummary")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Include assets summary in the response if this is true.  The assets summary returns a dictionary representing a summary of the assets for the business user ID, with information like the ad accounts and profiles the user has permissions for and what those permissions are")
                .endParam()
                .param()
                    .name("businessRoles")
                    .type(RestParamType.query)
                    .required(false)
                    .description("A list of business roles to filter the members by. Only members whose roles are in the specified roles will be returned.")
                .endParam()
                .param()
                    .name("memberIds")
                    .type(RestParamType.query)
                    .required(false)
                    .description("A list of business members ids separated by comma.")
                .endParam()
                .param()
                    .name("startIndex")
                    .type(RestParamType.query)
                    .required(false)
                    .description("An index to start fetching the results from. Only the results starting from this index will be returned.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .to("direct:getBusinessMembers");
        

        /**
        GET /businesses/{business_id}/partners : Get business partners
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("biz_access:read","See business access data")
                
            .endSecurityDefinition()
            .get("/businesses/{business_id}/partners")
                .description("Get business partners")
                .id("getBusinessPartnersApi")
                .produces("application/json")
                .outType(GetBusinessPartners200Response.class)
                .param()
                    .name("businessId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of the requesting business.")
                .endParam()
                .param()
                    .name("assetsSummary")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Include assets summary in the response if this is true.  The assets summary returns a dictionary representing a summary of the assets for the business user ID, with information like the ad accounts and profiles the user has permissions for and what those permissions are")
                .endParam()
                .param()
                    .name("partnerType")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Specifies whether to fetch internal or external (shared) partners. If partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br> If partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset.")
                .endParam()
                .param()
                    .name("partnerIds")
                    .type(RestParamType.query)
                    .required(false)
                    .description("A list of business partner ids separated by commas used to filter the results. Only partners with the specified ids will be returned.")
                .endParam()
                .param()
                    .name("startIndex")
                    .type(RestParamType.query)
                    .required(false)
                    .description("An index to start fetching the results from. Only the results starting from this index will be returned.")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .to("direct:getBusinessPartners");
        

        /**
        PATCH /businesses/{business_id}/members : Update member&#39;s business role
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("biz_access:write","Create, update, or delete business access data")
                
            .endSecurityDefinition()
            .patch("/businesses/{business_id}/members")
                .description("Update member's business role")
                .id("updateBusinessMembershipsApi")
                .produces("application/json")
                .outType(UpdateMemberResultsResponseArray.class)
                .consumes("application/json")
                .type(UpdateMemberBusinessRoleBody[].class)
                
                .param()
                    .name("businessId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Business id")
                .endParam()
                .param()
                    .name("updateMemberBusinessRoleBody")
                    .type(RestParamType.body)
                    .required(true)
                    .description("List of objects with the member id and the business_role.")
                .endParam()
                .to("direct:updateBusinessMemberships");
        
    }
}
