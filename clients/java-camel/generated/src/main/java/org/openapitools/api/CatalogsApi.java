/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class CatalogsApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        POST /catalogs : Create catalog
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs")
                .description("Create catalog")
                .id("catalogsCreateApi")
                .produces("application/json")
                .outType(Catalog.class)
                .consumes("application/json")
                .type(CatalogsCreateRequest.class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("catalogsCreateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to created a feed.")
                .endParam()
                .to("direct:catalogsCreate");
        

        /**
        GET /catalogs : List catalogs
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs")
                .description("List catalogs")
                .id("catalogsListApi")
                .produces("application/json")
                .outType(CatalogsList200Response.class)
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:catalogsList");
        

        /**
        GET /catalogs/product_groups/{product_group_id}/products : List products by product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("pins:read","See your public Pins")
                
            .endSecurityDefinition()
            .get("/catalogs/product_groups/{product_group_id}/products")
                .description("List products by product group")
                .id("catalogsProductGroupPinsListApi")
                .produces("application/json")
                .outType(CatalogsProductGroupPinsList200Response.class)
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("pinMetrics")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.")
                .endParam()
                .to("direct:catalogsProductGroupPinsList");
        

        /**
        POST /catalogs/product_groups : Create product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/product_groups")
                .description("Create product group")
                .id("catalogsProductGroupsCreateApi")
                .produces("application/json")
                .outType(CatalogsVerticalProductGroup.class)
                .consumes("application/json")
                .type(MultipleProductGroupsInner.class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("multipleProductGroupsInner")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to create a single catalogs product groups.")
                .endParam()
                .to("direct:catalogsProductGroupsCreate");
        

        /**
        POST /catalogs/product_groups/multiple : Create product groups
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/product_groups/multiple")
                .description("Create product groups")
                .id("catalogsProductGroupsCreateManyApi")
                .produces("application/json")
                .outType(String[].class)
                .consumes("application/json")
                .type(MultipleProductGroupsInner[].class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("multipleProductGroupsInner")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to create one or more catalogs product groups.")
                .endParam()
                .to("direct:catalogsProductGroupsCreateMany");
        

        /**
        DELETE /catalogs/product_groups/{product_group_id} : Delete product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .delete("/catalogs/product_groups/{product_group_id}")
                .description("Delete product group")
                .id("catalogsProductGroupsDeleteApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:catalogsProductGroupsDelete");
        

        /**
        DELETE /catalogs/product_groups/multiple : Delete product groups
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .delete("/catalogs/product_groups/multiple")
                .description("Delete product groups")
                .id("catalogsProductGroupsDeleteManyApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("id")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Comma-separated list of product group ids")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:catalogsProductGroupsDeleteMany");
        

        /**
        GET /catalogs/product_groups/{product_group_id} : Get product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/product_groups/{product_group_id}")
                .description("Get product group")
                .id("catalogsProductGroupsGetApi")
                .produces("application/json")
                .outType(CatalogsVerticalProductGroup.class)
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:catalogsProductGroupsGet");
        

        /**
        GET /catalogs/product_groups : List product groups
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/product_groups")
                .description("List product groups")
                .id("catalogsProductGroupsListApi")
                .produces("application/json")
                .outType(CatalogsProductGroupsList200Response.class)
                .param()
                    .name("id")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Comma-separated list of product group ids")
                .endParam()
                .param()
                    .name("feedId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Filter entities for a given feed_id. If not given, all feeds are considered.")
                .endParam()
                .param()
                    .name("catalogId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Filter entities for a given catalog_id. If not given, all catalogs are considered.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:catalogsProductGroupsList");
        

        /**
        GET /catalogs/product_groups/{product_group_id}/product_counts : Get product counts
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/product_groups/{product_group_id}/product_counts")
                .description("Get product counts")
                .id("catalogsProductGroupsProductCountsGetApi")
                .produces("application/json")
                .outType(CatalogsProductGroupProductCountsVertical.class)
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:catalogsProductGroupsProductCountsGet");
        

        /**
        PATCH /catalogs/product_groups/{product_group_id} : Update single product group
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .patch("/catalogs/product_groups/{product_group_id}")
                .description("Update single product group")
                .id("catalogsProductGroupsUpdateApi")
                .produces("application/json")
                .outType(CatalogsVerticalProductGroup.class)
                .consumes("application/json")
                .type(CatalogsProductGroupsUpdateRequest.class)
                
                .param()
                    .name("productGroupId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a product group")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("catalogsProductGroupsUpdateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to Update a catalogs product group.")
                .endParam()
                .to("direct:catalogsProductGroupsUpdate");
        

        /**
        GET /catalogs/feeds/{feed_id}/processing_results : List feed processing results
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/feeds/{feed_id}/processing_results")
                .description("List feed processing results")
                .id("feedProcessingResultsListApi")
                .produces("application/json")
                .outType(FeedProcessingResultsList200Response.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:feedProcessingResultsList");
        

        /**
        POST /catalogs/feeds : Create feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/feeds")
                .description("Create feed")
                .id("feedsCreateApi")
                .produces("application/json")
                .outType(CatalogsFeed.class)
                .consumes("application/json")
                .type(FeedsCreateRequest.class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("feedsCreateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to created a feed.")
                .endParam()
                .to("direct:feedsCreate");
        

        /**
        DELETE /catalogs/feeds/{feed_id} : Delete feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .delete("/catalogs/feeds/{feed_id}")
                .description("Delete feed")
                .id("feedsDeleteApi")
                .produces("application/json")
                .outType(Void.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:feedsDelete");
        

        /**
        GET /catalogs/feeds/{feed_id} : Get feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/feeds/{feed_id}")
                .description("Get feed")
                .id("feedsGetApi")
                .produces("application/json")
                .outType(CatalogsFeed.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:feedsGet");
        

        /**
        POST /catalogs/feeds/{feed_id}/ingest : Ingest feed items
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/feeds/{feed_id}/ingest")
                .description("Ingest feed items")
                .id("feedsIngestApi")
                .produces("application/json")
                .outType(CatalogsFeedIngestion.class)
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:feedsIngest");
        

        /**
        GET /catalogs/feeds : List feeds
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/feeds")
                .description("List feeds")
                .id("feedsListApi")
                .produces("application/json")
                .outType(FeedsList200Response.class)
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("catalogId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Filter entities for a given catalog_id. If not given, all catalogs are considered.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:feedsList");
        

        /**
        PATCH /catalogs/feeds/{feed_id} : Update feed
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .patch("/catalogs/feeds/{feed_id}")
                .description("Update feed")
                .id("feedsUpdateApi")
                .produces("application/json")
                .outType(CatalogsFeed.class)
                .consumes("application/json")
                .type(FeedsUpdateRequest.class)
                
                .param()
                    .name("feedId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("feedsUpdateRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to update a feed.")
                .endParam()
                .to("direct:feedsUpdate");
        

        /**
        GET /catalogs/items/batch/{batch_id} : Get item batch status
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/items/batch/{batch_id}")
                .description("Get item batch status")
                .id("itemsBatchGetApi")
                .produces("application/json")
                .outType(CatalogsItemsBatch.class)
                .param()
                    .name("batchId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Id of a catalogs items batch to fetch")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:itemsBatchGet");
        

        /**
        POST /catalogs/items/batch : Operate on item batch
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                .end()
                .oauth2("client_credentials")
                    .flow("application")
                    .tokenUrl("https://api.pinterest.com/v3/oauth/access_token/")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("catalogs:write","Create, update, or delete your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/items/batch")
                .description("Operate on item batch")
                .id("itemsBatchPostApi")
                .produces("application/json")
                .outType(CatalogsItemsBatch.class)
                .consumes("application/json")
                .type(ItemsBatchPostRequest.class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("itemsBatchPostRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to create catalogs items in a batch")
                .endParam()
                .to("direct:itemsBatchPost");
        

        /**
        GET /catalogs/items : Get catalogs items
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/items")
                .description("Get catalogs items")
                .id("itemsGetApi")
                .produces("application/json")
                .outType(CatalogsItems.class)
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("country")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Country for the Catalogs Items")
                .endParam()
                .param()
                    .name("language")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Language for the Catalogs Items")
                .endParam()
                .param()
                    .name("itemIds")
                    .type(RestParamType.query)
                    .required(false)
                    .description("This parameter is deprecated. Use filters instead.")
                .endParam()
                .param()
                    .name("filters")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Identifies items to be retrieved. This is a required parameter.")
                .endParam()
                .to("direct:itemsGet");
        

        /**
        GET /catalogs/processing_results/{processing_result_id}/item_issues : List item issues
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/processing_results/{processing_result_id}/item_issues")
                .description("List item issues")
                .id("itemsIssuesListApi")
                .produces("application/json")
                .outType(ItemsIssuesList200Response.class)
                .param()
                    .name("processingResultId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Unique identifier of a feed processing result. It can be acquired from the \"id\" field of the \"items\" array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list).")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("itemNumbers")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation.")
                .endParam()
                .param()
                    .name("itemValidationIssue")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Filter item validation issues that have a given type of item validation issue.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .to("direct:itemsIssuesList");
        

        /**
        POST /catalogs/items : Get catalogs items (POST)
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/items")
                .description("Get catalogs items (POST)")
                .id("itemsPostApi")
                .produces("application/json")
                .outType(CatalogsItems.class)
                .consumes("application/json")
                .type(CatalogsItemsRequest.class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("catalogsItemsRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object used to get catalogs items")
                .endParam()
                .to("direct:itemsPost");
        

        /**
        POST /catalogs/products/get_by_product_group_filters : List products by filter
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("boards:read","See your public boards, including group boards you join")
                        .withScope("catalogs:read","See all of your catalogs data")
                        .withScope("pins:read","See your public Pins")
                
            .endSecurityDefinition()
            .post("/catalogs/products/get_by_product_group_filters")
                .description("List products by filter")
                .id("productsByProductGroupFilterListApi")
                .produces("application/json")
                .outType(CatalogsProductGroupPinsList200Response.class)
                .consumes("application/json")
                .type(CatalogsListProductsByFilterRequest.class)
                
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("pinMetrics")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.")
                .endParam()
                .param()
                    .name("catalogsListProductsByFilterRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Object holding a group of filters for a catalog product group")
                .endParam()
                .to("direct:productsByProductGroupFilterList");
        

        /**
        POST /catalogs/reports : Build catalogs report
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .post("/catalogs/reports")
                .description("Build catalogs report")
                .id("reportsCreateApi")
                .produces("application/json")
                .outType(CatalogsCreateReportResponse.class)
                .consumes("application/json")
                .type(CatalogsReportParameters.class)
                
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("catalogsReportParameters")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Request object to asynchronously create a report.")
                .endParam()
                .to("direct:reportsCreate");
        

        /**
        GET /catalogs/reports : Get catalogs report
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/reports")
                .description("Get catalogs report")
                .id("reportsGetApi")
                .produces("application/json")
                .outType(CatalogsReport.class)
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("token")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Token returned from async build report call")
                .endParam()
                .to("direct:reportsGet");
        

        /**
        GET /catalogs/reports/stats : List report stats
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("catalogs:read","See all of your catalogs data")
                
            .endSecurityDefinition()
            .get("/catalogs/reports/stats")
                .description("List report stats")
                .id("reportsStatsApi")
                .produces("application/json")
                .outType(ReportsStats200Response.class)
                .param()
                    .name("adAccountId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Unique identifier of an ad account.")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("parameters")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Contains the parameters for report identification.")
                .endParam()
                .to("direct:reportsStats");
        
    }
}
