/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class MediaApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        POST /media : Register media upload
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("pins:read","See your public Pins")
                        .withScope("pins:write","Create, update, or delete your public Pins")
                
            .endSecurityDefinition()
            .post("/media")
                .description("Register media upload")
                .id("mediaCreateApi")
                .produces("application/json")
                .outType(MediaUpload.class)
                .consumes("application/json")
                .type(MediaUploadRequest.class)
                
                .param()
                    .name("mediaUploadRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Create a media upload request")
                .endParam()
                .to("direct:mediaCreate");
        

        /**
        GET /media/{media_id} : Get media upload details
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("pins:read","See your public Pins")
                
            .endSecurityDefinition()
            .get("/media/{media_id}")
                .description("Get media upload details")
                .id("mediaGetApi")
                .produces("application/json")
                .outType(MediaUploadDetails.class)
                .param()
                    .name("mediaId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Media identifier")
                .endParam()
                .to("direct:mediaGet");
        

        /**
        GET /media : List media uploads
        **/
        rest()
            .securityDefinitions()
                .oauth2("pinterest_oauth2")
                    .flow("accessCode")
                    .tokenUrl("https://api.pinterest.com/v5/oauth/token")
                    .authorizationUrl("https://www.pinterest.com/oauth/")
                        .withScope("pins:read","See your public Pins")
                
            .endSecurityDefinition()
            .get("/media")
                .description("List media uploads")
                .id("mediaListApi")
                .produces("application/json")
                .outType(MediaList200Response.class)
                .param()
                    .name("bookmark")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Cursor used to fetch the next page of items")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.")
                .endParam()
                .to("direct:mediaList");
        
    }
}
