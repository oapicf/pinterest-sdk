# 
# Pinterest REST API
# 
# 
# Pinterest's REST API
# 
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech

# package openapi3graphql-server

# audiences_api



input AudiencesCreateInput {
    # Unique identifier of an ad account.
    adAccountId: String!, 
    # List of ads to create, size limit [1, 30]
    audienceCreateRequest: AudienceCreateRequestInput
}

input AudiencesCreateCustomInput {
    # Unique identifier of an ad account.
    adAccountId: String!, 
    # Custom audience to create.
    audienceCreateCustomRequest: AudienceCreateCustomRequestInput
}

input AudiencesUpdateInput {
    # Unique identifier of an ad account.
    adAccountId: String!, 
    # Unique identifier of an audience
    audienceId: String!, 
    # The audience to be updated.
    audienceUpdateRequest: AudienceUpdateRequestInput
}

type Mutation {
  # Create audience
  # Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with the ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude specific audience_ids when you create an ad group. &lt;p/&gt; For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;.
  # @param String! adAccountId Unique identifier of an ad account.
  # @param AudienceCreateRequest audienceCreateRequest List of ads to create, size limit [1, 30]
  # @return [Audience]
  AudiencesCreate(input: AudiencesCreateInput!): Audience
  # Create custom audience
  # Create a custom audience and find the audiences you want your ads to reach.
  # @param String! adAccountId Unique identifier of an ad account.
  # @param AudienceCreateCustomRequest audienceCreateCustomRequest Custom audience to create.
  # @return [Audience]
  AudiencesCreateCustom(input: AudiencesCreateCustomInput!): Audience
  # Update audience
  # Update (edit or remove) an existing targeting audience.
  # @param String! adAccountId Unique identifier of an ad account.
  # @param String! audienceId Unique identifier of an audience
  # @param AudienceUpdateRequest audienceUpdateRequest The audience to be updated.
  # @return [Audience]
  AudiencesUpdate(input: AudiencesUpdateInput!): Audience
}

type Query {
  # Get audience
  # Get a specific audience given the audience ID.
  # @param String! adAccountId Unique identifier of an ad account.
  # @param String! audienceId Unique identifier of an audience
  # @return [Audience]
  AudiencesGet(adAccountId: String!, audienceId: String!): Audience
  # List audiences
  # Get list of audiences for the ad account.
  # @param String! adAccountId Unique identifier of an ad account.
  # @param String! bookmark Cursor used to fetch the next page of items
  # @param String! order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. For received audiences, it is sorted by sharing event time. Note that higher-value IDs are associated with more-recently added items.
  # @param Int! pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.
  # @param String! ownershipType Filter audiences by ownership type.
  # @return [AudiencesList200Response]
  AudiencesList(adAccountId: String!, bookmark: String!, order: String!, pageSize: Int!, ownershipType: String!): AudiencesList200Response
}

