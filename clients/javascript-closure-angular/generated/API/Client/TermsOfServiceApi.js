/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.TermsOfServiceApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * Pinterest&#39;s REST API
 * Version: 5.14.0
* Generator version: 7.9.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license MIT
 * https://spdx.org/licenses/MIT
 */

goog.provide('API.Client.TermsOfServiceApi');

goog.require('API.Client.Error');
goog.require('API.Client.TermsOfService');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.TermsOfServiceApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('TermsOfServiceApiBasePath') ?
                   /** @type {!string} */ ($injector.get('TermsOfServiceApiBasePath')) :
                   'https://api.pinterest.com/v5';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('TermsOfServiceApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('TermsOfServiceApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.TermsOfServiceApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Get terms of service
 * Get the text of the terms of service and see whether the advertiser has accepted the terms of service.
 * @param {!string} adAccountId Unique identifier of an ad account.
 * @param {!boolean=} opt_includeHtml Return HTML in TOS text.
 * @param {!string=} opt_tosType Request type.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.TermsOfService>}
 */
API.Client.TermsOfServiceApi.prototype.termsOfServiceGet = function(adAccountId, opt_includeHtml, opt_tosType, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ad_accounts/{ad_account_id}/terms_of_service'
      .replace('{' + 'ad_account_id' + '}', String(adAccountId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'adAccountId' is set
  if (!adAccountId) {
    throw new Error('Missing required parameter adAccountId when calling termsOfServiceGet');
  }
  if (opt_includeHtml !== undefined) {
    queryParameters['include_html'] = opt_includeHtml;
  }

  if (opt_tosType !== undefined) {
    queryParameters['tos_type'] = opt_tosType;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
