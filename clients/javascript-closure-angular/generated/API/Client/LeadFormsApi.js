/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.LeadFormsApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * Pinterest&#39;s REST API
 * Version: 5.14.0
* Generator version: 7.9.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license MIT
 * https://spdx.org/licenses/MIT
 */

goog.provide('API.Client.LeadFormsApi');

goog.require('API.Client.Error');
goog.require('API.Client.LeadFormArrayResponse');
goog.require('API.Client.LeadFormCreateRequest');
goog.require('API.Client.LeadFormResponse');
goog.require('API.Client.LeadFormTestRequest');
goog.require('API.Client.LeadFormTestResponse');
goog.require('API.Client.LeadFormUpdateRequest');
goog.require('API.Client.lead_forms_list_200_response');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.LeadFormsApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('LeadFormsApiBasePath') ?
                   /** @type {!string} */ ($injector.get('LeadFormsApiBasePath')) :
                   'https://api.pinterest.com/v5';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('LeadFormsApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('LeadFormsApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.LeadFormsApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Get lead form by id
 * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Gets a lead form given it&#39;s ID. It must also be associated with the provided ad account ID.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
 * @param {!string} adAccountId Unique identifier of an ad account.
 * @param {!string} leadFormId Unique identifier of a lead form.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.LeadFormResponse>}
 */
API.Client.LeadFormsApi.prototype.leadFormGet = function(adAccountId, leadFormId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}'
      .replace('{' + 'ad_account_id' + '}', String(adAccountId))
      .replace('{' + 'lead_form_id' + '}', String(leadFormId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'adAccountId' is set
  if (!adAccountId) {
    throw new Error('Missing required parameter adAccountId when calling leadFormGet');
  }
  // verify required parameter 'leadFormId' is set
  if (!leadFormId) {
    throw new Error('Missing required parameter leadFormId when calling leadFormGet');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Create lead form test data
 * Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
 * @param {!string} adAccountId Unique identifier of an ad account.
 * @param {!string} leadFormId Unique identifier of a lead form.
 * @param {!LeadFormTestRequest} leadFormTestRequest Subscription to create.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.LeadFormTestResponse>}
 */
API.Client.LeadFormsApi.prototype.leadFormTestCreate = function(adAccountId, leadFormId, leadFormTestRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test'
      .replace('{' + 'ad_account_id' + '}', String(adAccountId))
      .replace('{' + 'lead_form_id' + '}', String(leadFormId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'adAccountId' is set
  if (!adAccountId) {
    throw new Error('Missing required parameter adAccountId when calling leadFormTestCreate');
  }
  // verify required parameter 'leadFormId' is set
  if (!leadFormId) {
    throw new Error('Missing required parameter leadFormId when calling leadFormTestCreate');
  }
  // verify required parameter 'leadFormTestRequest' is set
  if (!leadFormTestRequest) {
    throw new Error('Missing required parameter leadFormTestRequest when calling leadFormTestCreate');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: leadFormTestRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Create lead forms
 * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Create lead forms. Lead forms are used in lead ads and allow you to control what text appears on the lead form’ s description, questions and confirmation sections.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
 * @param {!string} adAccountId Unique identifier of an ad account.
 * @param {!Array<!API.Client.LeadFormCreateRequest>} leadFormCreateRequest List of lead forms to create, size limit [1, 30].
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.LeadFormArrayResponse>}
 */
API.Client.LeadFormsApi.prototype.leadFormsCreate = function(adAccountId, leadFormCreateRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ad_accounts/{ad_account_id}/lead_forms'
      .replace('{' + 'ad_account_id' + '}', String(adAccountId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'adAccountId' is set
  if (!adAccountId) {
    throw new Error('Missing required parameter adAccountId when calling leadFormsCreate');
  }
  // verify required parameter 'leadFormCreateRequest' is set
  if (!leadFormCreateRequest) {
    throw new Error('Missing required parameter leadFormCreateRequest when calling leadFormsCreate');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: leadFormCreateRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * List lead forms
 * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  List lead forms associated with an ad account ID.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
 * @param {!string} adAccountId Unique identifier of an ad account.
 * @param {!number=} opt_pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.
 * @param {!string=} opt_order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
 * @param {!string=} opt_bookmark Cursor used to fetch the next page of items
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.lead_forms_list_200_response>}
 */
API.Client.LeadFormsApi.prototype.leadFormsList = function(adAccountId, opt_pageSize, opt_order, opt_bookmark, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ad_accounts/{ad_account_id}/lead_forms'
      .replace('{' + 'ad_account_id' + '}', String(adAccountId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'adAccountId' is set
  if (!adAccountId) {
    throw new Error('Missing required parameter adAccountId when calling leadFormsList');
  }
  if (opt_pageSize !== undefined) {
    queryParameters['page_size'] = opt_pageSize;
  }

  if (opt_order !== undefined) {
    queryParameters['order'] = opt_order;
  }

  if (opt_bookmark !== undefined) {
    queryParameters['bookmark'] = opt_bookmark;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Update lead forms
 * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Update lead forms. Lead ads help you reach people who are actively looking for, and interested in, your goods and services. The lead form can be associated with an ad to allow people to fill out the form.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
 * @param {!string} adAccountId Unique identifier of an ad account.
 * @param {!Array<!API.Client.LeadFormUpdateRequest>} leadFormUpdateRequest List of lead forms to update, size limit [1, 30].
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.LeadFormArrayResponse>}
 */
API.Client.LeadFormsApi.prototype.leadFormsUpdate = function(adAccountId, leadFormUpdateRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/ad_accounts/{ad_account_id}/lead_forms'
      .replace('{' + 'ad_account_id' + '}', String(adAccountId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'adAccountId' is set
  if (!adAccountId) {
    throw new Error('Missing required parameter adAccountId when calling leadFormsUpdate');
  }
  // verify required parameter 'leadFormUpdateRequest' is set
  if (!leadFormUpdateRequest) {
    throw new Error('Missing required parameter leadFormUpdateRequest when calling leadFormsUpdate');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'PATCH',
    url: path,
    json: true,
    data: leadFormUpdateRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
