/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.Audience
import io.swagger.client.model.AudienceCreateCustomRequest
import io.swagger.client.model.AudienceCreateRequest
import io.swagger.client.model.AudienceUpdateRequest
import io.swagger.client.model.AudiencesList200Response
import io.swagger.client.model.Error

trait AudiencesApi extends Service {


  final override def descriptor = {
    import Service._
    named("AudiencesApi").withCalls(
      restCall(Method.POST, "/ad_accounts/:ad_account_id/audiences", audiencesCreate _), 
      restCall(Method.POST, "/ad_accounts/:ad_account_id/audiences/custom", audiencesCreateCustom _), 
      restCall(Method.GET, "/ad_accounts/:ad_account_id/audiences/:audience_id", audiencesGet _), 
      restCall(Method.GET, "/ad_accounts/:ad_account_id/audiences?bookmark&order&pageSize&ownershipType", audiencesList _), 
      restCall(Method.PATCH, "/ad_accounts/:ad_account_id/audiences/:audience_id", audiencesUpdate _)
    ).withAutoAcl(true)
  }


  /**
    * Create audience
    * Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with the ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude specific audience_ids when you create an ad group. &lt;p/&gt; For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;.
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @return Audience Body Parameter  List of ads to create, size limit [1, 30] 
    */
  def audiencesCreate(adAccountId: String): ServiceCall[AudienceCreateRequest ,Audience]
  
  /**
    * Create custom audience
    * Create a custom audience and find the audiences you want your ads to reach.
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @return Audience Body Parameter  Custom audience to create. 
    */
  def audiencesCreateCustom(adAccountId: String): ServiceCall[AudienceCreateCustomRequest ,Audience]
  
  /**
    * Get audience
    * Get a specific audience given the audience ID.
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @param audienceId Unique identifier of an audience 
    * @return Audience
    */
  def audiencesGet(adAccountId: String, audienceId: String): ServiceCall[NotUsed ,Audience]
        
  /**
    * List audiences
    * Get list of audiences for the ad account.
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. For received audiences, it is sorted by sharing event time. Note that higher-value IDs are associated with more-recently added items. (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25) 
    * @param ownershipType Filter audiences by ownership type. (optional, default to OWNED)
    * @return AudiencesList200Response
    */
  def audiencesList(bookmark:           Option[String] = None,order: Option[AudiencesApiOrderEnum.AudiencesApiOrderEnum]pageSize:           Option[Int] /* = 25*/,ownershipType: Option[AudiencesApiOwnershipTypeEnum.AudiencesApiOwnershipTypeEnum]adAccountId: String): ServiceCall[NotUsed ,AudiencesList200Response]
  
  /**
    * Update audience
    * Update (edit or remove) an existing targeting audience.
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @param audienceId Unique identifier of an audience  
    * @return Audience Body Parameter  The audience to be updated. 
    */
  def audiencesUpdate(adAccountId: String, audienceId: String): ServiceCall[AudienceUpdateRequest ,Audience]
  

        object AudiencesApiOrderEnum extends Enumeration {
        val   ASCENDING, DESCENDING = Value     
        type AudiencesApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AudiencesApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AudiencesApiOrderEnum] = PathParamSerializer.required("AudiencesApiOrderEnum")(withName)(_.toString)
        }
        object AudiencesApiOwnershipTypeEnum extends Enumeration {
        val   OWNED, RECEIVED = Value     
        type AudiencesApiOwnershipTypeEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[AudiencesApiOwnershipTypeEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[AudiencesApiOwnershipTypeEnum] = PathParamSerializer.required("AudiencesApiOwnershipTypeEnum")(withName)(_.toString)
        }
  }
