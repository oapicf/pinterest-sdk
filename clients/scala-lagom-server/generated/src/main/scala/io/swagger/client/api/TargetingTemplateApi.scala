/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.Error
import io.swagger.client.model.TargetingTemplateCreate
import io.swagger.client.model.TargetingTemplateGetResponseData
import io.swagger.client.model.TargetingTemplateList200Response
import io.swagger.client.model.TargetingTemplateUpdateRequest

trait TargetingTemplateApi extends Service {


  final override def descriptor = {
    import Service._
    named("TargetingTemplateApi").withCalls(
      restCall(Method.POST, "/ad_accounts/:ad_account_id/targeting_templates", targetingTemplateCreate _), 
      restCall(Method.GET, "/ad_accounts/:ad_account_id/targeting_templates?order&includeSizing&searchQuery&pageSize&bookmark", targetingTemplateList _), 
      restCall(Method.PATCH, "/ad_accounts/:ad_account_id/targeting_templates", targetingTemplateUpdate _)
    ).withAutoAcl(true)
  }


  /**
    * Create targeting templates
    * &lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;  &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.&lt;/p&gt;
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @return TargetingTemplateGetResponseData Body Parameter  targeting template creation entity 
    */
  def targetingTemplateCreate(adAccountId: String): ServiceCall[TargetingTemplateCreate ,TargetingTemplateGetResponseData]
        
  /**
    * List targeting templates
    * Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional) 
    * @param includeSizing Include audience sizing in result or not (optional, default to false) 
    * @param searchQuery Search keyword for targeting templates (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25) 
    * @param bookmark Cursor used to fetch the next page of items (optional)
    * @return TargetingTemplateList200Response
    */
  def targetingTemplateList(order: Option[TargetingTemplateApiOrderEnum.TargetingTemplateApiOrderEnum]includeSizing:           Option[Boolean] /* = false*/,searchQuery:           Option[String] = None,pageSize:           Option[Int] /* = 25*/,bookmark:           Option[String] = NoneadAccountId: String): ServiceCall[NotUsed ,TargetingTemplateList200Response]
  
  /**
    * Update targeting templates
    * &lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;
    *  
    * @param adAccountId Unique identifier of an ad account.  
    * @return void Body Parameter  Operation type and targeting template ID 
    */
  def targetingTemplateUpdate(adAccountId: String): ServiceCall[TargetingTemplateUpdateRequest ,Done]
  

        object TargetingTemplateApiOrderEnum extends Enumeration {
        val   ASCENDING, DESCENDING = Value     
        type TargetingTemplateApiOrderEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[TargetingTemplateApiOrderEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[TargetingTemplateApiOrderEnum] = PathParamSerializer.required("TargetingTemplateApiOrderEnum")(withName)(_.toString)
        }
  }
