/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.Error
import io.swagger.client.model.MediaList200Response
import io.swagger.client.model.MediaUpload
import io.swagger.client.model.MediaUploadDetails
import io.swagger.client.model.MediaUploadRequest

trait MediaApi extends Service {


  final override def descriptor = {
    import Service._
    named("MediaApi").withCalls(
      restCall(Method.POST, "/media", mediaCreate _), 
      restCall(Method.GET, "/media/:media_id", mediaGet _), 
      restCall(Method.GET, "/media?bookmark&pageSize", mediaList _)
    ).withAutoAcl(true)
  }


  /**
    * Register media upload
    * Register your intent to upload media  The response includes all of the information needed to upload the media to Pinterest.  To upload the media, make an HTTP POST request (using &lt;tt&gt;curl&lt;/tt&gt;, for example) to &lt;tt&gt;upload_url&lt;/tt&gt; using the &lt;tt&gt;Content-Type&lt;/tt&gt; header value. Send the media file&#39;s contents as the request&#39;s &lt;tt&gt;file&lt;/tt&gt; parameter and also include all of the parameters from &lt;tt&gt;upload_parameters&lt;/tt&gt;.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.
    *  
    * @return MediaUpload Body Parameter  Create a media upload request 
    */
  def mediaCreate(): ServiceCall[MediaUploadRequest ,MediaUpload]
  
  /**
    * Get media upload details
    * Get details for a registered media upload, including its current status.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.
    *  
    * @param mediaId Media identifier 
    * @return MediaUploadDetails
    */
  def mediaGet(mediaId: String): ServiceCall[NotUsed ,MediaUploadDetails]
        
  /**
    * List media uploads
    * List media uploads filtered by given parameters.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.
    *  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
    * @return MediaList200Response
    */
  def mediaList(bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/): ServiceCall[NotUsed ,MediaList200Response]
  

  }
