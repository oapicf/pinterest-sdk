/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.AuthRespondInvitesBody
import io.swagger.client.model.CancelInvitesBody
import io.swagger.client.model.CreateAssetAccessRequestBody
import io.swagger.client.model.CreateAssetAccessRequestResponse
import io.swagger.client.model.CreateAssetInvitesRequest
import io.swagger.client.model.CreateInvitesResultsResponseArray
import io.swagger.client.model.CreateMembershipOrPartnershipInvitesBody
import io.swagger.client.model.DeleteInvitesResultsResponseArray
import io.swagger.client.model.Error
import io.swagger.client.model.GetInvites200Response
import io.swagger.client.model.InviteType
import io.swagger.client.model.RespondToInvitesResponseArray
import io.swagger.client.model.UpdateInvitesResultsResponseArray

trait BusinessAccessInviteApi extends Service {


  final override def descriptor = {
    import Service._
    named("BusinessAccessInviteApi").withCalls(
      restCall(Method.POST, "/businesses/:business_id/requests/assets/access", assetAccessRequestsCreate _), 
      restCall(Method.DELETE, "/businesses/:business_id/invites", cancelInvitesOrRequests _), 
      restCall(Method.POST, "/businesses/:business_id/invites/assets/access", createAssetInvites _), 
      restCall(Method.POST, "/businesses/:business_id/invites", createMembershipOrPartnershipInvites _), 
      restCall(Method.GET, "/businesses/:business_id/invites?isMember&inviteStatus&inviteType&bookmark&pageSize", getInvites _), 
      restCall(Method.PATCH, "/businesses/invites", respondBusinessAccessInvites _)
    ).withAutoAcl(true)
  }


  /**
    * Create a request to access an existing partner&#39;s assets.
    * Create a request to access an existing partner&#39;s assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
    *  
    * @param businessId Unique identifier of the requesting business.  
    * @return CreateAssetAccessRequestResponse Body Parameter   
    */
  def assetAccessRequestsCreate(businessId: String): ServiceCall[CreateAssetAccessRequestBody ,CreateAssetAccessRequestResponse]
  
  /**
    * Cancel invites/requests
    * Cancel membership/partnership invites and/or requests.
    *  
    * @param businessId Business id  
    * @return DeleteInvitesResultsResponseArray Body Parameter  A list with invite ids 
    */
  def cancelInvitesOrRequests(businessId: String): ServiceCall[CancelInvitesBody ,DeleteInvitesResultsResponseArray]
  
  /**
    * Update invite/request with an asset permission
    * Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner&#39;s asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \&quot;Create a request to access an existing partner&#39;s assets\&quot; to request access to your   partner&#39;s assets.     - invite_type&#x3D;\&quot;PARTNER_REQUEST\&quot; - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \&quot;Assign/Update partner asset permissions\&quot; to assign a partner access to   new assets.     - invite_type&#x3D;\&quot;PARTNER_INVITE\&quot; - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \&quot;Assign/Update member asset permissions\&quot; to assign a member access to new   assets.     - invite_type&#x3D;\&quot;MEMBER_INVITE\&quot;  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
    *  
    * @param businessId Unique identifier of the requesting business.  
    * @return UpdateInvitesResultsResponseArray Body Parameter  A list of invites/requests together with the asset permissions to be assigned to the invite/request.  
    */
  def createAssetInvites(businessId: String): ServiceCall[CreateAssetInvitesRequest ,UpdateInvitesResultsResponseArray]
  
  /**
    * Create invites or requests
    * Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type&#x3D;\&quot;MEMBER_INVITE\&quot;     - business_role&#x3D;\&quot;EMPLOYEE\&quot; OR business_role&#x3D;\&quot;BIZ_ADMIN\&quot; (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type&#x3D;\&quot;PARTNER_INVITE\&quot;     - business_role&#x3D;\&quot;PARTNER\&quot;     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type&#x3D;\&quot;PARTNER_REQUEST\&quot;     - business_role&#x3D;\&quot;PARTNER\&quot;     - partners
    *  
    * @param businessId Business id  
    * @return CreateInvitesResultsResponseArray Body Parameter  An object with the properties: invite_type, partners, members, business_role 
    */
  def createMembershipOrPartnershipInvites(businessId: String): ServiceCall[CreateMembershipOrPartnershipInvitesBody ,CreateInvitesResultsResponseArray]
        
  // inviteStatus:Seq[String]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Get invites/requests
    * Get the membership/partnership invites and/or requests for the authorized user.
    *  
    * @param businessId Unique identifier of the requesting business.  
    * @param isMember A boolean field to indicate whether the invite is to create a partnership or a membership. (optional, default to true) 
    * @param inviteStatus A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned. (optional, default to new ListBuffer[String]() ) 
    * @param inviteType Invite type to filter invites by. Only invites of the specified type will be returned. (optional) 
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
    * @return GetInvites200Response
    */
  def getInvites(isMember:           Option[Boolean] /* = true*/,inviteStatus: Option[BusinessAccessInviteApiInviteStatusEnum.BusinessAccessInviteApiInviteStatusEnum]inviteType:           Option[InviteType] = None,bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/businessId: String): ServiceCall[NotUsed ,GetInvites200Response]
  
  /**
    * Accept or decline an invite/request
    * Accept or decline invites or requests.
    *  
    * @return RespondToInvitesResponseArray Body Parameter   
    */
  def respondBusinessAccessInvites(): ServiceCall[AuthRespondInvitesBody ,RespondToInvitesResponseArray]
  

        object BusinessAccessInviteApiInviteStatusEnum extends Enumeration {
        val   PENDING, EXPIRED = Value     
        type BusinessAccessInviteApiInviteStatusEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[BusinessAccessInviteApiInviteStatusEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[BusinessAccessInviteApiInviteStatusEnum] = PathParamSerializer.required("BusinessAccessInviteApiInviteStatusEnum")(withName)(_.toString)
        }
  }
