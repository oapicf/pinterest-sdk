/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.model
import play.api.libs.json._

case class PinMediaSource (
                  sourceType:  Option[PinMediaSourceSourceTypeEnum.PinMediaSourceSourceTypeEnum],
                  `contentType`:  Option[PinMediaSource&#x60;contentType&#x60;Enum.PinMediaSource&#x60;contentType&#x60;Enum],
                  data: String,
            /* Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users. */
                  isStandard: Option[Boolean],
                  url: String,
            /* Cover image url. */
                  coverImageUrl: Option[String],
                  coverImageContentType:  Option[PinMediaSourceCoverImageContentTypeEnum.PinMediaSourceCoverImageContentTypeEnum],
            /* Cover image Base64. */
                  coverImageData: Option[String],
                  mediaId: String,
            /* Array with image objects. */
                  items: Seq[PinMediaSourceImagesURLItemsInner],
                  index: Option[Int],
            /* This is an affiliate link or sponsored product. The FTC requires disclosure for paid partnerships and affiliate products. */
                  isAffiliateLink: Option[Boolean]
)

object PinMediaSource {
implicit val format: Format[PinMediaSource] = Json.format
}

object PinMediaSourceSourceTypeEnum extends Enumeration {
  val   pin_url = Value
  type PinMediaSourceSourceTypeEnum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[PinMediaSourceSourceTypeEnum.type])
}
object PinMediaSource&#x60;contentType&#x60;Enum extends Enumeration {
  val   image/jpeg, image/png = Value
  type PinMediaSource&#x60;contentType&#x60;Enum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[PinMediaSource&#x60;contentType&#x60;Enum.type])
}
object PinMediaSourceCoverImageContentTypeEnum extends Enumeration {
  val   image/jpeg, image/png = Value
  type PinMediaSourceCoverImageContentTypeEnum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[PinMediaSourceCoverImageContentTypeEnum.type])
}
