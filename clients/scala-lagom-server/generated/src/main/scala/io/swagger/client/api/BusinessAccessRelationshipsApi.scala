/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.DeletePartnersRequest
import io.swagger.client.model.DeletePartnersResponse
import io.swagger.client.model.DeletedMembersResponse
import io.swagger.client.model.Error
import io.swagger.client.model.GetBusinessEmployers200Response
import io.swagger.client.model.GetBusinessMembers200Response
import io.swagger.client.model.GetBusinessPartners200Response
import io.swagger.client.model.MemberBusinessRole
import io.swagger.client.model.MembersToDeleteBody
import io.swagger.client.model.PartnerType
import io.swagger.client.model.UpdateMemberBusinessRoleBody
import io.swagger.client.model.UpdateMemberResultsResponseArray

trait BusinessAccessRelationshipsApi extends Service {


  final override def descriptor = {
    import Service._
    named("BusinessAccessRelationshipsApi").withCalls(
      restCall(Method.DELETE, "/businesses/:business_id/members", deleteBusinessMembership _), 
      restCall(Method.DELETE, "/businesses/:business_id/partners", deleteBusinessPartners _), 
      restCall(Method.GET, "/businesses/employers?pageSize&bookmark", getBusinessEmployers _), 
      restCall(Method.GET, "/businesses/:business_id/members?assetsSummary&businessRoles&memberIds&startIndex&bookmark&pageSize", getBusinessMembers _), 
      restCall(Method.GET, "/businesses/:business_id/partners?assetsSummary&partnerType&partnerIds&startIndex&pageSize&bookmark", getBusinessPartners _), 
      restCall(Method.PATCH, "/businesses/:business_id/members", updateBusinessMemberships _)
    ).withAutoAcl(true)
  }


  /**
    * Terminate business memberships
    * Terminate memberships between the specified members and your business.
    *  
    * @param businessId Business id  
    * @return DeletedMembersResponse Body Parameter  List of members with role to delete. 
    */
  def deleteBusinessMembership(businessId: String): ServiceCall[MembersToDeleteBody ,DeletedMembersResponse]
  
  /**
    * Terminate business partnerships
    * Terminate partnerships between the specified partners and your business. Note: You may only batch terminate partners of the same partner type.
    *  
    * @param businessId Unique identifier of the requesting business.  
    * @return DeletePartnersResponse Body Parameter  An object containing a \&quot;partner_ids\&quot; property composed of a list of partner IDs and a \&quot;partners_type\&quot; property specifying the type of partners to delete.  
    */
  def deleteBusinessPartners(businessId: String): ServiceCall[DeletePartnersRequest ,DeletePartnersResponse]
        
  /**
    * List business employers for user
    * Get all of the viewing user&#39;s business employers.
    *  
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25) 
    * @param bookmark Cursor used to fetch the next page of items (optional)
    * @return GetBusinessEmployers200Response
    */
  def getBusinessEmployers(pageSize:           Option[Int] /* = 25*/,bookmark:           Option[String] = None): ServiceCall[NotUsed ,GetBusinessEmployers200Response]
        
  // businessRoles:Seq[MemberBusinessRole]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Get business members
    * Get all members of the specified business. The return response will include the member&#39;s business_role and assets they have access to if assets_summary&#x3D;TRUE
    *  
    * @param businessId Unique identifier of the requesting business.  
    * @param assetsSummary Include assets summary in the response if this is true.  The assets summary returns a dictionary representing a summary of the assets for the business user ID, with information like the ad accounts and profiles the user has permissions for and what those permissions are (optional, default to false) 
    * @param businessRoles A list of business roles to filter the members by. Only members whose roles are in the specified roles will be returned. (optional, default to new ListBuffer[MemberBusinessRole]() ) 
    * @param memberIds A list of business members ids separated by comma. (optional) 
    * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0) 
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
    * @return GetBusinessMembers200Response
    */
  def getBusinessMembers(assetsSummary:           Option[Boolean] /* = false*/,memberIds:           Option[String] = None,startIndex:           Option[Int] /* = 0*/,bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/businessId: String): ServiceCall[NotUsed ,GetBusinessMembers200Response]
        
  /**
    * Get business partners
    * Get all partners of the specified business.  If the assets_summary&#x3D;TRUE and: - partner_type&#x3D;INTERNAL, the business assets returned are your business assets the partner has access to. - partner_type&#x3D;EXTERNAL, the business assets returned are your partner&#39;s business assets the partner has granted you   access to.
    *  
    * @param businessId Unique identifier of the requesting business.  
    * @param assetsSummary Include assets summary in the response if this is true.  The assets summary returns a dictionary representing a summary of the assets for the business user ID, with information like the ad accounts and profiles the user has permissions for and what those permissions are (optional, default to false) 
    * @param partnerType Specifies whether to fetch internal or external (shared) partners. If partner_type&#x3D;INTERNAL, the asset being queried is for accesses the partner has to your business assets.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the asset being queried is for the accesses you have to the partner&#39;s business asset. (optional) 
    * @param partnerIds A list of business partner ids separated by commas used to filter the results. Only partners with the specified ids will be returned. (optional) 
    * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25) 
    * @param bookmark Cursor used to fetch the next page of items (optional)
    * @return GetBusinessPartners200Response
    */
  def getBusinessPartners(assetsSummary:           Option[Boolean] /* = false*/,partnerType:           Option[PartnerType] = None,partnerIds:           Option[String] = None,startIndex:           Option[Int] /* = 0*/,pageSize:           Option[Int] /* = 25*/,bookmark:           Option[String] = NonebusinessId: String): ServiceCall[NotUsed ,GetBusinessPartners200Response]
  
  /**
    * Update member&#39;s business role
    * Update a member&#39;s business role within the business.
    *  
    * @param businessId Business id  
    * @return UpdateMemberResultsResponseArray Body Parameter  List of objects with the member id and the business_role. 
    */
  def updateBusinessMemberships(businessId: String): ServiceCall[Seq[UpdateMemberBusinessRoleBody] ,UpdateMemberResultsResponseArray]
  

  }
