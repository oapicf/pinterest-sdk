/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.Account
import io.swagger.client.model.AnalyticsMetricsResponse
import io.swagger.client.model.BoardsUserFollowsList200Response
import io.swagger.client.model.Error
import io.swagger.client.model.FollowUserRequest
import io.swagger.client.model.FollowersList200Response
import io.swagger.client.model.LinkedBusiness
import java.time.LocalDate
import io.swagger.client.model.TopPinsAnalyticsResponse
import io.swagger.client.model.TopVideoPinsAnalyticsResponse
import io.swagger.client.model.UserAccountFollowedInterests200Response
import io.swagger.client.model.UserFollowingFeedType
import io.swagger.client.model.UserFollowingGet200Response
import io.swagger.client.model.UserSummary
import io.swagger.client.model.UserWebsiteSummary
import io.swagger.client.model.UserWebsiteVerificationCode
import io.swagger.client.model.UserWebsiteVerifyRequest
import io.swagger.client.model.UserWebsitesGet200Response

trait UserAccountApi extends Service {


  final override def descriptor = {
    import Service._
    named("UserAccountApi").withCalls(
      restCall(Method.GET, "/user_account/following/boards?bookmark&pageSize&explicitFollowing&adAccountId", boardsUserFollowsList _), 
      restCall(Method.POST, "/user_account/following/:username", followUserUpdate _), 
      restCall(Method.GET, "/user_account/followers?bookmark&pageSize", followersList _), 
      restCall(Method.GET, "/user_account/businesses", linkedBusinessAccountsGet _), 
      restCall(Method.DELETE, "/user_account/websites?website", unverifyWebsiteDelete _), 
      restCall(Method.GET, "/user_account/analytics?startDate&endDate&fromClaimedContent&pinFormat&appTypes&`contentType`&source&metricTypes&splitField&adAccountId", userAccountAnalytics _), 
      restCall(Method.GET, "/user_account/analytics/top_pins?startDate&endDate&sortBy&fromClaimedContent&pinFormat&appTypes&`contentType`&source&metricTypes&numOfPins&createdInLastNDays&adAccountId", userAccountAnalyticsTopPins _), 
      restCall(Method.GET, "/user_account/analytics/top_video_pins?startDate&endDate&sortBy&fromClaimedContent&pinFormat&appTypes&`contentType`&source&metricTypes&numOfPins&createdInLastNDays&adAccountId", userAccountAnalyticsTopVideoPins _), 
      restCall(Method.GET, "/users/:username/interests/follow?bookmark&pageSize", userAccountFollowedInterests _), 
      restCall(Method.GET, "/user_account?adAccountId", userAccountGet _), 
      restCall(Method.GET, "/user_account/following?bookmark&pageSize&feedType&explicitFollowing&adAccountId", userFollowingGet _), 
      restCall(Method.GET, "/user_account/websites?bookmark&pageSize", userWebsitesGet _), 
      restCall(Method.POST, "/user_account/websites?adAccountId", verifyWebsiteUpdate _), 
      restCall(Method.GET, "/user_account/websites/verification?adAccountId", websiteVerificationGet _)
    ).withAutoAcl(true)
  }

      
  /**
    * List following boards
    * Get a list of the boards a user follows. The request returns a board summary object array.
    *  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25) 
    * @param explicitFollowing Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows. (optional, default to false) 
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return BoardsUserFollowsList200Response
    */
  def boardsUserFollowsList(bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/,explicitFollowing:           Option[Boolean] /* = false*/,adAccountId:           Option[String] = None): ServiceCall[NotUsed ,BoardsUserFollowsList200Response]
  
  /**
    * Follow user
    * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Use this request, as a signed-in user, to follow another user.
    *  
    * @param username A valid username  
    * @return UserSummary Body Parameter  Follow a user. 
    */
  def followUserUpdate(username: String): ServiceCall[FollowUserRequest ,UserSummary]
        
  /**
    * List followers
    * Get a list of your followers.
    *  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
    * @return FollowersList200Response
    */
  def followersList(bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/): ServiceCall[NotUsed ,FollowersList200Response]
  
  /**
    * List linked businesses
    * Get a list of your linked business accounts.
    * 
    * @return Seq[LinkedBusiness]
    */
  def linkedBusinessAccountsGet(): ServiceCall[NotUsed ,Seq[LinkedBusiness]]
        
  /**
    * Unverify website
    * Unverifu a website verified by the signed-in user.
    *  
    * @param website Website with path or domain only 
    * @return void
    */
  def unverifyWebsiteDelete(website:String          ): ServiceCall[NotUsed ,Done]
        
  // metricTypes:Seq[String]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Get user account analytics
    * Get analytics for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
    *  
    * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.  
    * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.  
    * @param fromClaimedContent Filter on Pins that match your claimed domain. (optional, default to BOTH) 
    * @param pinFormat Pin formats to get data for, default is all. (optional, default to ALL) 
    * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL) 
    * @param `contentType` Filter to paid or organic data. Default is all. (optional, default to ALL) 
    * @param source Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts (optional, default to ALL) 
    * @param metricTypes Metric types to get data for, default is all.  (optional, default to new ListBuffer[String]() ) 
    * @param splitField How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to NO_SPLIT) 
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return Map[String, AnalyticsMetricsResponse]
    */
  def userAccountAnalytics(startDate:LocalDate          ,endDate:LocalDate          ,fromClaimedContent: Option[UserAccountApiFromClaimedContentEnum.UserAccountApiFromClaimedContentEnum]pinFormat: Option[UserAccountApiPinFormatEnum.UserAccountApiPinFormatEnum]appTypes: Option[UserAccountApiAppTypesEnum.UserAccountApiAppTypesEnum]`contentType`: Option[UserAccountApi&#x60;contentType&#x60;Enum.UserAccountApi&#x60;contentType&#x60;Enum]source: Option[UserAccountApiSourceEnum.UserAccountApiSourceEnum]metricTypes: Option[UserAccountApiMetricTypesEnum.UserAccountApiMetricTypesEnum]splitField: Option[UserAccountApiSplitFieldEnum.UserAccountApiSplitFieldEnum]adAccountId:           Option[String] = None): ServiceCall[NotUsed ,Map[String, AnalyticsMetricsResponse]]
        
  // metricTypes:Seq[String]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Get user account top pins analytics
    * Gets analytics data about a user&#39;s top pins (limited to the top 50). - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
    *  
    * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.  
    * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.  
    * @param sortBy Specify sorting order for metrics  
    * @param fromClaimedContent Filter on Pins that match your claimed domain. (optional, default to BOTH) 
    * @param pinFormat Pin formats to get data for, default is all. (optional, default to ALL) 
    * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL) 
    * @param `contentType` Filter to paid or organic data. Default is all. (optional, default to ALL) 
    * @param source Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts (optional, default to ALL) 
    * @param metricTypes Metric types to get data for, default is all.  (optional, default to new ListBuffer[String]() ) 
    * @param numOfPins Number of pins to include, default is 10. Max is 50. (optional, default to 10) 
    * @param createdInLastNDays Get metrics for pins created in the last \&quot;n\&quot; days. (optional) 
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return TopPinsAnalyticsResponse
    */
  def userAccountAnalyticsTopPins(startDate:LocalDate          ,endDate:LocalDate          ,sortBy: Option[UserAccountApiSortByEnum.UserAccountApiSortByEnum]fromClaimedContent: Option[UserAccountApiFromClaimedContentEnum.UserAccountApiFromClaimedContentEnum]pinFormat: Option[UserAccountApiPinFormatEnum.UserAccountApiPinFormatEnum]appTypes: Option[UserAccountApiAppTypesEnum.UserAccountApiAppTypesEnum]`contentType`: Option[UserAccountApi&#x60;contentType&#x60;Enum.UserAccountApi&#x60;contentType&#x60;Enum]source: Option[UserAccountApiSourceEnum.UserAccountApiSourceEnum]metricTypes: Option[UserAccountApiMetricTypesEnum.UserAccountApiMetricTypesEnum]numOfPins:           Option[Int] /* = 10*/,createdInLastNDays: Option[UserAccountApiCreatedInLastNDaysEnum.UserAccountApiCreatedInLastNDaysEnum]adAccountId:           Option[String] = None): ServiceCall[NotUsed ,TopPinsAnalyticsResponse]
        
  // metricTypes:Seq[String]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Get user account top video pins analytics
    * Gets analytics data about a user&#39;s top video pins (limited to the top 50). - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
    *  
    * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.  
    * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.  
    * @param sortBy Specify sorting order for video metrics  
    * @param fromClaimedContent Filter on Pins that match your claimed domain. (optional, default to BOTH) 
    * @param pinFormat Pin formats to get data for, default is all. (optional, default to ALL) 
    * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL) 
    * @param `contentType` Filter to paid or organic data. Default is all. (optional, default to ALL) 
    * @param source Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts (optional, default to ALL) 
    * @param metricTypes Metric types to get video data for, default is all.  (optional, default to new ListBuffer[String]() ) 
    * @param numOfPins Number of pins to include, default is 10. Max is 50. (optional, default to 10) 
    * @param createdInLastNDays Get metrics for pins created in the last \&quot;n\&quot; days. (optional) 
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return TopVideoPinsAnalyticsResponse
    */
  def userAccountAnalyticsTopVideoPins(startDate:LocalDate          ,endDate:LocalDate          ,sortBy: Option[UserAccountApiSortByEnum.UserAccountApiSortByEnum]fromClaimedContent: Option[UserAccountApiFromClaimedContentEnum.UserAccountApiFromClaimedContentEnum]pinFormat: Option[UserAccountApiPinFormatEnum.UserAccountApiPinFormatEnum]appTypes: Option[UserAccountApiAppTypesEnum.UserAccountApiAppTypesEnum]`contentType`: Option[UserAccountApi&#x60;contentType&#x60;Enum.UserAccountApi&#x60;contentType&#x60;Enum]source: Option[UserAccountApiSourceEnum.UserAccountApiSourceEnum]metricTypes: Option[UserAccountApiMetricTypesEnum.UserAccountApiMetricTypesEnum]numOfPins:           Option[Int] /* = 10*/,createdInLastNDays: Option[UserAccountApiCreatedInLastNDaysEnum.UserAccountApiCreatedInLastNDaysEnum]adAccountId:           Option[String] = None): ServiceCall[NotUsed ,TopVideoPinsAnalyticsResponse]
        
  /**
    * List following interests
    * Get a list of a user&#39;s following interests in one place.
    *  
    * @param username A valid username  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
    * @return UserAccountFollowedInterests200Response
    */
  def userAccountFollowedInterests(bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/username: String): ServiceCall[NotUsed ,UserAccountFollowedInterests200Response]
        
  /**
    * Get user account
    * Get account information for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. See &lt;a href&#x3D;&#39;/docs/getting-started/using-business-access/&#39;&gt;Understanding Business Access&lt;/a&gt; for more information.
    *  
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return Account
    */
  def userAccountGet(adAccountId:           Option[String] = None): ServiceCall[NotUsed ,Account]
        
  /**
    * List following
    * Get a list of who a certain user follows.
    *  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25) 
    * @param feedType Thrift param specifying what type of followees will be kept. Default to include all followees. (optional) 
    * @param explicitFollowing Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows. (optional, default to false) 
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return UserFollowingGet200Response
    */
  def userFollowingGet(bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/,feedType:           Option[UserFollowingFeedType] = None,explicitFollowing:           Option[Boolean] /* = false*/,adAccountId:           Option[String] = None): ServiceCall[NotUsed ,UserFollowingGet200Response]
        
  /**
    * Get user websites
    * Get user websites, claimed or not
    *  
    * @param bookmark Cursor used to fetch the next page of items (optional) 
    * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
    * @return UserWebsitesGet200Response
    */
  def userWebsitesGet(bookmark:           Option[String] = None,pageSize:           Option[Int] /* = 25*/): ServiceCall[NotUsed ,UserWebsitesGet200Response]
        
  /**
    * Verify website
    * Verify a website as a signed-in user.
    *   
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return UserWebsiteSummary Body Parameter  Verify a website. 
    */
  def verifyWebsiteUpdate(adAccountId:           Option[String] = None): ServiceCall[UserWebsiteVerifyRequest ,UserWebsiteSummary]
        
  /**
    * Get user verification code for website claiming
    * Get verification code for user to install on the website to claim it.
    *  
    * @param adAccountId Unique identifier of an ad account. (optional)
    * @return UserWebsiteVerificationCode
    */
  def websiteVerificationGet(adAccountId:           Option[String] = None): ServiceCall[NotUsed ,UserWebsiteVerificationCode]
  

        object UserAccountApiFromClaimedContentEnum extends Enumeration {
        val   OTHER, CLAIMED, BOTH = Value     
        type UserAccountApiFromClaimedContentEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiFromClaimedContentEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiFromClaimedContentEnum] = PathParamSerializer.required("UserAccountApiFromClaimedContentEnum")(withName)(_.toString)
        }
        object UserAccountApiPinFormatEnum extends Enumeration {
        val   ALL, ORGANIC_IMAGE, ORGANIC_PRODUCT, ORGANIC_VIDEO, ADS_STANDARD, ADS_PRODUCT, ADS_VIDEO, ADS_IDEA = Value     
        type UserAccountApiPinFormatEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiPinFormatEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiPinFormatEnum] = PathParamSerializer.required("UserAccountApiPinFormatEnum")(withName)(_.toString)
        }
        object UserAccountApiAppTypesEnum extends Enumeration {
        val   ALL, MOBILE, TABLET, WEB = Value     
        type UserAccountApiAppTypesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiAppTypesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiAppTypesEnum] = PathParamSerializer.required("UserAccountApiAppTypesEnum")(withName)(_.toString)
        }
        object UserAccountApi&#x60;contentType&#x60;Enum extends Enumeration {
        val   ALL, PAID, ORGANIC = Value     
        type UserAccountApi&#x60;contentType&#x60;Enum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApi&#x60;contentType&#x60;Enum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApi&#x60;contentType&#x60;Enum] = PathParamSerializer.required("UserAccountApi&#x60;contentType&#x60;Enum")(withName)(_.toString)
        }
        object UserAccountApiSourceEnum extends Enumeration {
        val   ALL, YOUR_PINS, OTHER_PINS = Value     
        type UserAccountApiSourceEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiSourceEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiSourceEnum] = PathParamSerializer.required("UserAccountApiSourceEnum")(withName)(_.toString)
        }
        object UserAccountApiMetricTypesEnum extends Enumeration {
        val   ENGAGEMENT, ENGAGEMENT_RATE, IMPRESSION, OUTBOUND_CLICK, OUTBOUND_CLICK_RATE, PIN_CLICK, PIN_CLICK_RATE, SAVE, SAVE_RATE = Value     
        type UserAccountApiMetricTypesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiMetricTypesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiMetricTypesEnum] = PathParamSerializer.required("UserAccountApiMetricTypesEnum")(withName)(_.toString)
        }
        object UserAccountApiSplitFieldEnum extends Enumeration {
        val   NO_SPLIT, APP_TYPE, OWNED_CONTENT, SOURCE, PIN_FORMAT = Value     
        type UserAccountApiSplitFieldEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiSplitFieldEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiSplitFieldEnum] = PathParamSerializer.required("UserAccountApiSplitFieldEnum")(withName)(_.toString)
        }
        object UserAccountApiSortByEnum extends Enumeration {
        val   ENGAGEMENT, IMPRESSION, OUTBOUND_CLICK, PIN_CLICK, SAVE = Value     
        type UserAccountApiSortByEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiSortByEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiSortByEnum] = PathParamSerializer.required("UserAccountApiSortByEnum")(withName)(_.toString)
        }
        object UserAccountApiFromClaimedContentEnum extends Enumeration {
        val   OTHER, CLAIMED, BOTH = Value     
        type UserAccountApiFromClaimedContentEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiFromClaimedContentEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiFromClaimedContentEnum] = PathParamSerializer.required("UserAccountApiFromClaimedContentEnum")(withName)(_.toString)
        }
        object UserAccountApiPinFormatEnum extends Enumeration {
        val   ALL, ORGANIC_IMAGE, ORGANIC_PRODUCT, ORGANIC_VIDEO, ADS_STANDARD, ADS_PRODUCT, ADS_VIDEO, ADS_IDEA = Value     
        type UserAccountApiPinFormatEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiPinFormatEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiPinFormatEnum] = PathParamSerializer.required("UserAccountApiPinFormatEnum")(withName)(_.toString)
        }
        object UserAccountApiAppTypesEnum extends Enumeration {
        val   ALL, MOBILE, TABLET, WEB = Value     
        type UserAccountApiAppTypesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiAppTypesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiAppTypesEnum] = PathParamSerializer.required("UserAccountApiAppTypesEnum")(withName)(_.toString)
        }
        object UserAccountApi&#x60;contentType&#x60;Enum extends Enumeration {
        val   ALL, PAID, ORGANIC = Value     
        type UserAccountApi&#x60;contentType&#x60;Enum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApi&#x60;contentType&#x60;Enum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApi&#x60;contentType&#x60;Enum] = PathParamSerializer.required("UserAccountApi&#x60;contentType&#x60;Enum")(withName)(_.toString)
        }
        object UserAccountApiSourceEnum extends Enumeration {
        val   ALL, YOUR_PINS, OTHER_PINS = Value     
        type UserAccountApiSourceEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiSourceEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiSourceEnum] = PathParamSerializer.required("UserAccountApiSourceEnum")(withName)(_.toString)
        }
        object UserAccountApiMetricTypesEnum extends Enumeration {
        val   ENGAGEMENT, ENGAGEMENT_RATE, IMPRESSION, OUTBOUND_CLICK, OUTBOUND_CLICK_RATE, PIN_CLICK, PIN_CLICK_RATE, SAVE, SAVE_RATE = Value     
        type UserAccountApiMetricTypesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiMetricTypesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiMetricTypesEnum] = PathParamSerializer.required("UserAccountApiMetricTypesEnum")(withName)(_.toString)
        }
        object UserAccountApiCreatedInLastNDaysEnum extends Enumeration {
        val   30 = Value     
        type UserAccountApiCreatedInLastNDaysEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiCreatedInLastNDaysEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiCreatedInLastNDaysEnum] = PathParamSerializer.required("UserAccountApiCreatedInLastNDaysEnum")(withName)(_.toString)
        }
        object UserAccountApiSortByEnum extends Enumeration {
        val   IMPRESSION, SAVE, OUTBOUND_CLICK, VIDEO_MRC_VIEW, VIDEO_AVG_WATCH_TIME, VIDEO_V50_WATCH_TIME, QUARTILE_95_PERCENT_VIEW, VIDEO_10S_VIEW, VIDEO_START = Value     
        type UserAccountApiSortByEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiSortByEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiSortByEnum] = PathParamSerializer.required("UserAccountApiSortByEnum")(withName)(_.toString)
        }
        object UserAccountApiFromClaimedContentEnum extends Enumeration {
        val   OTHER, CLAIMED, BOTH = Value     
        type UserAccountApiFromClaimedContentEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiFromClaimedContentEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiFromClaimedContentEnum] = PathParamSerializer.required("UserAccountApiFromClaimedContentEnum")(withName)(_.toString)
        }
        object UserAccountApiPinFormatEnum extends Enumeration {
        val   ALL, ORGANIC_IMAGE, ORGANIC_PRODUCT, ORGANIC_VIDEO, ADS_STANDARD, ADS_PRODUCT, ADS_VIDEO, ADS_IDEA = Value     
        type UserAccountApiPinFormatEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiPinFormatEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiPinFormatEnum] = PathParamSerializer.required("UserAccountApiPinFormatEnum")(withName)(_.toString)
        }
        object UserAccountApiAppTypesEnum extends Enumeration {
        val   ALL, MOBILE, TABLET, WEB = Value     
        type UserAccountApiAppTypesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiAppTypesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiAppTypesEnum] = PathParamSerializer.required("UserAccountApiAppTypesEnum")(withName)(_.toString)
        }
        object UserAccountApi&#x60;contentType&#x60;Enum extends Enumeration {
        val   ALL, PAID, ORGANIC = Value     
        type UserAccountApi&#x60;contentType&#x60;Enum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApi&#x60;contentType&#x60;Enum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApi&#x60;contentType&#x60;Enum] = PathParamSerializer.required("UserAccountApi&#x60;contentType&#x60;Enum")(withName)(_.toString)
        }
        object UserAccountApiSourceEnum extends Enumeration {
        val   ALL, YOUR_PINS, OTHER_PINS = Value     
        type UserAccountApiSourceEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiSourceEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiSourceEnum] = PathParamSerializer.required("UserAccountApiSourceEnum")(withName)(_.toString)
        }
        object UserAccountApiMetricTypesEnum extends Enumeration {
        val   IMPRESSION, SAVE, VIDEO_MRC_VIEW, VIDEO_AVG_WATCH_TIME, VIDEO_V50_WATCH_TIME, QUARTILE_95_PERCENT_VIEW, VIDEO_10S_VIEW, VIDEO_START, OUTBOUND_CLICK = Value     
        type UserAccountApiMetricTypesEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiMetricTypesEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiMetricTypesEnum] = PathParamSerializer.required("UserAccountApiMetricTypesEnum")(withName)(_.toString)
        }
        object UserAccountApiCreatedInLastNDaysEnum extends Enumeration {
        val   30 = Value     
        type UserAccountApiCreatedInLastNDaysEnum = Value
        implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[UserAccountApiCreatedInLastNDaysEnum.type])
        implicit val pathParamSerializer: PathParamSerializer[UserAccountApiCreatedInLastNDaysEnum] = PathParamSerializer.required("UserAccountApiCreatedInLastNDaysEnum")(withName)(_.toString)
        }
  }
