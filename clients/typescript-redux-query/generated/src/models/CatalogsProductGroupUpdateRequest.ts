// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsProductGroupFiltersRequest,
    CatalogsProductGroupFiltersRequestFromJSON,
    CatalogsProductGroupFiltersRequestToJSON,
} from './';

/**
 * Request object for updating a product group.
 * @export
 * @interface CatalogsProductGroupUpdateRequest
 */
export interface CatalogsProductGroupUpdateRequest  {
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    description?: string;
    /**
     * boolean indicator of whether the product group is being featured or not
     * @type {boolean}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    isFeatured?: boolean;
    /**
     * 
     * @type {CatalogsProductGroupFiltersRequest}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    filters?: CatalogsProductGroupFiltersRequest;
}

export function CatalogsProductGroupUpdateRequestFromJSON(json: any): CatalogsProductGroupUpdateRequest {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'isFeatured': !exists(json, 'is_featured') ? undefined : json['is_featured'],
        'filters': !exists(json, 'filters') ? undefined : CatalogsProductGroupFiltersRequestFromJSON(json['filters']),
    };
}

export function CatalogsProductGroupUpdateRequestToJSON(value?: CatalogsProductGroupUpdateRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'description': value.description,
        'is_featured': value.isFeatured,
        'filters': CatalogsProductGroupFiltersRequestToJSON(value.filters),
    };
}


