// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MediaUploadAllOfUploadParameters,
    MediaUploadAllOfUploadParametersFromJSON,
    MediaUploadAllOfUploadParametersToJSON,
    MediaUploadType,
    MediaUploadTypeFromJSON,
    MediaUploadTypeToJSON,
} from './';

/**
 * Media upload that has been registered but not uploaded/processed yet.
 * @export
 * @interface MediaUpload
 */
export interface MediaUpload  {
    /**
     * Unique identifier for this media upload. Used to track status and for attaching during Pin creation.
     * @type {string}
     * @memberof MediaUpload
     */
    mediaId?: string;
    /**
     * 
     * @type {MediaUploadType}
     * @memberof MediaUpload
     */
    mediaType?: MediaUploadType;
    /**
     * The URL where you will POST your media file.
     * @type {string}
     * @memberof MediaUpload
     */
    uploadUrl?: string;
    /**
     * 
     * @type {MediaUploadAllOfUploadParameters}
     * @memberof MediaUpload
     */
    uploadParameters?: MediaUploadAllOfUploadParameters;
}

export function MediaUploadFromJSON(json: any): MediaUpload {
    return {
        'mediaId': !exists(json, 'media_id') ? undefined : json['media_id'],
        'mediaType': !exists(json, 'media_type') ? undefined : MediaUploadTypeFromJSON(json['media_type']),
        'uploadUrl': !exists(json, 'upload_url') ? undefined : json['upload_url'],
        'uploadParameters': !exists(json, 'upload_parameters') ? undefined : MediaUploadAllOfUploadParametersFromJSON(json['upload_parameters']),
    };
}

export function MediaUploadToJSON(value?: MediaUpload): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'media_id': value.mediaId,
        'media_type': MediaUploadTypeToJSON(value.mediaType),
        'upload_url': value.uploadUrl,
        'upload_parameters': MediaUploadAllOfUploadParametersToJSON(value.uploadParameters),
    };
}



