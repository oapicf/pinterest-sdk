// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlacementGroupType,
    PlacementGroupTypeFromJSON,
    PlacementGroupTypeToJSON,
    TargetingSpec,
    TargetingSpecFromJSON,
    TargetingSpecToJSON,
    TargetingTemplateKeyword,
    TargetingTemplateKeywordFromJSON,
    TargetingTemplateKeywordToJSON,
    TrackingUrls,
    TrackingUrlsFromJSON,
    TrackingUrlsToJSON,
} from './';

/**
 * 
 * @export
 * @interface TargetingTemplateCommon
 */
export interface TargetingTemplateCommon  {
    /**
     * targeting template name
     * @type {string}
     * @memberof TargetingTemplateCommon
     */
    name?: string;
    /**
     * Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
     * @type {boolean}
     * @memberof TargetingTemplateCommon
     */
    autoTargetingEnabled?: boolean;
    /**
     * 
     * @type {TargetingSpec}
     * @memberof TargetingTemplateCommon
     */
    targetingAttributes?: TargetingSpec;
    /**
     * 
     * @type {PlacementGroupType}
     * @memberof TargetingTemplateCommon
     */
    placementGroup?: PlacementGroupType;
    /**
     * 
     * @type {Array<TargetingTemplateKeyword>}
     * @memberof TargetingTemplateCommon
     */
    keywords?: Array<TargetingTemplateKeyword>;
    /**
     * 
     * @type {TrackingUrls}
     * @memberof TargetingTemplateCommon
     */
    trackingUrls?: TrackingUrls;
}

export function TargetingTemplateCommonFromJSON(json: any): TargetingTemplateCommon {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'autoTargetingEnabled': !exists(json, 'auto_targeting_enabled') ? undefined : json['auto_targeting_enabled'],
        'targetingAttributes': !exists(json, 'targeting_attributes') ? undefined : TargetingSpecFromJSON(json['targeting_attributes']),
        'placementGroup': !exists(json, 'placement_group') ? undefined : PlacementGroupTypeFromJSON(json['placement_group']),
        'keywords': !exists(json, 'keywords') ? undefined : (json['keywords'] as Array<any>).map(TargetingTemplateKeywordFromJSON),
        'trackingUrls': !exists(json, 'tracking_urls') ? undefined : TrackingUrlsFromJSON(json['tracking_urls']),
    };
}

export function TargetingTemplateCommonToJSON(value?: TargetingTemplateCommon): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'auto_targeting_enabled': value.autoTargetingEnabled,
        'targeting_attributes': TargetingSpecToJSON(value.targetingAttributes),
        'placement_group': PlacementGroupTypeToJSON(value.placementGroup),
        'keywords': value.keywords === undefined ? undefined : (value.keywords as Array<any>).map(TargetingTemplateKeywordToJSON),
        'tracking_urls': TrackingUrlsToJSON(value.trackingUrls),
    };
}



