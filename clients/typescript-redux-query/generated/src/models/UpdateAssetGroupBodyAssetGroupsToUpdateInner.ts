// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AssetGroupType,
    AssetGroupTypeFromJSON,
    AssetGroupTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateAssetGroupBodyAssetGroupsToUpdateInner
 */
export interface UpdateAssetGroupBodyAssetGroupsToUpdateInner  {
    /**
     * Unique identifier of the asset group to update.
     * @type {string}
     * @memberof UpdateAssetGroupBodyAssetGroupsToUpdateInner
     */
    assetGroupId: string;
    /**
     * Asset Group name
     * @type {string}
     * @memberof UpdateAssetGroupBodyAssetGroupsToUpdateInner
     */
    name?: string;
    /**
     * Asset group description
     * @type {string}
     * @memberof UpdateAssetGroupBodyAssetGroupsToUpdateInner
     */
    description?: string;
    /**
     * Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
     * @type {Array<AssetGroupType>}
     * @memberof UpdateAssetGroupBodyAssetGroupsToUpdateInner
     */
    assetGroupTypes?: Array<AssetGroupType>;
    /**
     * A list of asset ids to add to the asset group.
     * @type {Array<string>}
     * @memberof UpdateAssetGroupBodyAssetGroupsToUpdateInner
     */
    assetsToAdd?: Array<string>;
    /**
     * A list of asset ids to remove from the asset group.
     * @type {Array<string>}
     * @memberof UpdateAssetGroupBodyAssetGroupsToUpdateInner
     */
    assetsToRemove?: Array<string>;
}

export function UpdateAssetGroupBodyAssetGroupsToUpdateInnerFromJSON(json: any): UpdateAssetGroupBodyAssetGroupsToUpdateInner {
    return {
        'assetGroupId': json['asset_group_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'assetGroupTypes': !exists(json, 'asset_group_types') ? undefined : (json['asset_group_types'] as Array<any>).map(AssetGroupTypeFromJSON),
        'assetsToAdd': !exists(json, 'assets_to_add') ? undefined : json['assets_to_add'],
        'assetsToRemove': !exists(json, 'assets_to_remove') ? undefined : json['assets_to_remove'],
    };
}

export function UpdateAssetGroupBodyAssetGroupsToUpdateInnerToJSON(value?: UpdateAssetGroupBodyAssetGroupsToUpdateInner): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'asset_group_id': value.assetGroupId,
        'name': value.name,
        'description': value.description,
        'asset_group_types': value.assetGroupTypes === undefined ? undefined : (value.assetGroupTypes as Array<any>).map(AssetGroupTypeToJSON),
        'assets_to_add': value.assetsToAdd,
        'assets_to_remove': value.assetsToRemove,
    };
}


