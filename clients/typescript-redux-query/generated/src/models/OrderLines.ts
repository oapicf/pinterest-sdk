// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderLinePaidType,
    OrderLinePaidTypeFromJSON,
    OrderLinePaidTypeToJSON,
    OrderLineStatus,
    OrderLineStatusFromJSON,
    OrderLineStatusToJSON,
} from './';

/**
 * Order Line
 * @export
 * @interface OrderLines
 */
export interface OrderLines  {
    /**
     * Order line ID.
     * @type {string}
     * @memberof OrderLines
     */
    id?: string;
    /**
     * Always \"orderline\".
     * @type {string}
     * @memberof OrderLines
     */
    type?: string;
    /**
     * Ad account ID.
     * @type {string}
     * @memberof OrderLines
     */
    adAccountId?: string;
    /**
     * Purchase order ID.
     * @type {string}
     * @memberof OrderLines
     */
    purchaseOrderId?: string;
    /**
     * Start time. Unix timestamp.
     * @type {number}
     * @memberof OrderLines
     */
    startTime?: number;
    /**
     * End time. Unix timestamp.
     * @type {number}
     * @memberof OrderLines
     */
    endTime?: number;
    /**
     * Order line budget in micro currency.
     * @type {number}
     * @memberof OrderLines
     */
    budget?: number;
    /**
     * Order line paid budget in micro currency.
     * @type {number}
     * @memberof OrderLines
     */
    paidBudget?: number;
    /**
     * Order line status.
     * @type {OrderLineStatus}
     * @memberof OrderLines
     */
    status?: OrderLineStatus;
    /**
     * Order line name.
     * @type {string}
     * @memberof OrderLines
     */
    name?: string;
    /**
     * Order line paid type.
     * @type {OrderLinePaidType}
     * @memberof OrderLines
     */
    paidType?: OrderLinePaidType;
}

export function OrderLinesFromJSON(json: any): OrderLines {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'adAccountId': !exists(json, 'ad_account_id') ? undefined : json['ad_account_id'],
        'purchaseOrderId': !exists(json, 'purchase_order_id') ? undefined : json['purchase_order_id'],
        'startTime': !exists(json, 'start_time') ? undefined : json['start_time'],
        'endTime': !exists(json, 'end_time') ? undefined : json['end_time'],
        'budget': !exists(json, 'budget') ? undefined : json['budget'],
        'paidBudget': !exists(json, 'paid_budget') ? undefined : json['paid_budget'],
        'status': !exists(json, 'status') ? undefined : OrderLineStatusFromJSON(json['status']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'paidType': !exists(json, 'paid_type') ? undefined : OrderLinePaidTypeFromJSON(json['paid_type']),
    };
}

export function OrderLinesToJSON(value?: OrderLines): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'type': value.type,
        'ad_account_id': value.adAccountId,
        'purchase_order_id': value.purchaseOrderId,
        'start_time': value.startTime,
        'end_time': value.endTime,
        'budget': value.budget,
        'paid_budget': value.paidBudget,
        'status': OrderLineStatusToJSON(value.status),
        'name': value.name,
        'paid_type': OrderLinePaidTypeToJSON(value.paidType),
    };
}



