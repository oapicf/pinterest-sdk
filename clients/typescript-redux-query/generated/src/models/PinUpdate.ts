// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PinUpdateCarouselSlotsInner,
    PinUpdateCarouselSlotsInnerFromJSON,
    PinUpdateCarouselSlotsInnerToJSON,
} from './';

/**
 * Pin fields for updates
 * @export
 * @interface PinUpdate
 */
export interface PinUpdate  {
    /**
     * Pin\'s alternative text.
     * @type {string}
     * @memberof PinUpdate
     */
    altText?: string;
    /**
     * The id of the board to move the Pin onto.
     * @type {string}
     * @memberof PinUpdate
     */
    boardId?: string;
    /**
     * <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID.
     * @type {string}
     * @memberof PinUpdate
     */
    boardSectionId?: string;
    /**
     * Pin description - 800 characters maximum.
     * @type {string}
     * @memberof PinUpdate
     */
    description?: string;
    /**
     * URL viewer is taken to when they click pin.
     * @type {string}
     * @memberof PinUpdate
     */
    link?: string;
    /**
     * The native pin title that creators explicitly prefer to display.
     * @type {string}
     * @memberof PinUpdate
     */
    title?: string;
    /**
     * Carousel Pin slots data.
     * @type {Array<PinUpdateCarouselSlotsInner>}
     * @memberof PinUpdate
     */
    carouselSlots?: Array<PinUpdateCarouselSlotsInner>;
    /**
     * Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
     * @type {string}
     * @memberof PinUpdate
     */
    note?: string;
}

export function PinUpdateFromJSON(json: any): PinUpdate {
    return {
        'altText': !exists(json, 'alt_text') ? undefined : json['alt_text'],
        'boardId': !exists(json, 'board_id') ? undefined : json['board_id'],
        'boardSectionId': !exists(json, 'board_section_id') ? undefined : json['board_section_id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'carouselSlots': !exists(json, 'carousel_slots') ? undefined : (json['carousel_slots'] as Array<any>).map(PinUpdateCarouselSlotsInnerFromJSON),
        'note': !exists(json, 'note') ? undefined : json['note'],
    };
}

export function PinUpdateToJSON(value?: PinUpdate): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'alt_text': value.altText,
        'board_id': value.boardId,
        'board_section_id': value.boardSectionId,
        'description': value.description,
        'link': value.link,
        'title': value.title,
        'carousel_slots': value.carouselSlots === undefined ? undefined : (value.carouselSlots as Array<any>).map(PinUpdateCarouselSlotsInnerToJSON),
        'note': value.note,
    };
}


