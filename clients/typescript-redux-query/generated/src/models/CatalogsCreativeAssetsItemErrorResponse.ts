// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsType,
    CatalogsTypeFromJSON,
    CatalogsTypeToJSON,
    ItemValidationEvent,
    ItemValidationEventFromJSON,
    ItemValidationEventToJSON,
} from './';

/**
 * Object describing a creative assets item error
 * @export
 * @interface CatalogsCreativeAssetsItemErrorResponse
 */
export interface CatalogsCreativeAssetsItemErrorResponse  {
    /**
     * 
     * @type {CatalogsType}
     * @memberof CatalogsCreativeAssetsItemErrorResponse
     */
    catalogType: CatalogsType;
    /**
     * The catalog creative assets id in the merchant namespace
     * @type {string}
     * @memberof CatalogsCreativeAssetsItemErrorResponse
     */
    creativeAssetsId?: string;
    /**
     * Array with the errors for the item id requested
     * @type {Array<ItemValidationEvent>}
     * @memberof CatalogsCreativeAssetsItemErrorResponse
     */
    errors?: Array<ItemValidationEvent>;
}

export function CatalogsCreativeAssetsItemErrorResponseFromJSON(json: any): CatalogsCreativeAssetsItemErrorResponse {
    return {
        'catalogType': CatalogsTypeFromJSON(json['catalog_type']),
        'creativeAssetsId': !exists(json, 'creative_assets_id') ? undefined : json['creative_assets_id'],
        'errors': !exists(json, 'errors') ? undefined : (json['errors'] as Array<any>).map(ItemValidationEventFromJSON),
    };
}

export function CatalogsCreativeAssetsItemErrorResponseToJSON(value?: CatalogsCreativeAssetsItemErrorResponse): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'catalog_type': CatalogsTypeToJSON(value.catalogType),
        'creative_assets_id': value.creativeAssetsId,
        'errors': value.errors === undefined ? undefined : (value.errors as Array<any>).map(ItemValidationEventToJSON),
    };
}



