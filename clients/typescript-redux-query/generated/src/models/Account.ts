// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Account
 */
export interface Account  {
    /**
     * Type of account
     * @type {string}
     * @memberof Account
     */
    accountType?: AccountAccountTypeEnum;
    /**
     * User account ID.
     * @type {string}
     * @memberof Account
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    profileImage?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    websiteUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    username?: string;
    /**
     * Profile about description.
     * @type {string}
     * @memberof Account
     */
    about?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    businessName?: string;
    /**
     * User account board count.<br/>**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
     * @type {number}
     * @memberof Account
     */
    readonly boardCount?: number;
    /**
     * User account pin count. This includes both created and saved pins.
     * @type {number}
     * @memberof Account
     */
    readonly pinCount?: number;
    /**
     * User account follower count.
     * @type {number}
     * @memberof Account
     */
    readonly followerCount?: number;
    /**
     * User account following count.
     * @type {number}
     * @memberof Account
     */
    readonly followingCount?: number;
    /**
     * User account monthly views.
     * @type {number}
     * @memberof Account
     */
    readonly monthlyViews?: number;
}

export function AccountFromJSON(json: any): Account {
    return {
        'accountType': !exists(json, 'account_type') ? undefined : json['account_type'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'profileImage': !exists(json, 'profile_image') ? undefined : json['profile_image'],
        'websiteUrl': !exists(json, 'website_url') ? undefined : json['website_url'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'about': !exists(json, 'about') ? undefined : json['about'],
        'businessName': !exists(json, 'business_name') ? undefined : json['business_name'],
        'boardCount': !exists(json, 'board_count') ? undefined : json['board_count'],
        'pinCount': !exists(json, 'pin_count') ? undefined : json['pin_count'],
        'followerCount': !exists(json, 'follower_count') ? undefined : json['follower_count'],
        'followingCount': !exists(json, 'following_count') ? undefined : json['following_count'],
        'monthlyViews': !exists(json, 'monthly_views') ? undefined : json['monthly_views'],
    };
}

export function AccountToJSON(value?: Account): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'account_type': value.accountType,
        'id': value.id,
        'profile_image': value.profileImage,
        'website_url': value.websiteUrl,
        'username': value.username,
        'about': value.about,
        'business_name': value.businessName,
    };
}

/**
* @export
* @enum {string}
*/
export enum AccountAccountTypeEnum {
    Pinner = 'PINNER',
    Business = 'BUSINESS'
}


