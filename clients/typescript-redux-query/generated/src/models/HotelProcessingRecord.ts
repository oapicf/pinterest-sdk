// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemProcessingStatus,
    ItemProcessingStatusFromJSON,
    ItemProcessingStatusToJSON,
    ItemValidationEvent,
    ItemValidationEventFromJSON,
    ItemValidationEventToJSON,
} from './';

/**
 * Object describing an item processing record
 * @export
 * @interface HotelProcessingRecord
 */
export interface HotelProcessingRecord  {
    /**
     * The catalog hotel id in the merchant namespace
     * @type {string}
     * @memberof HotelProcessingRecord
     */
    hotelId?: string;
    /**
     * Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail.
     * @type {Array<ItemValidationEvent>}
     * @memberof HotelProcessingRecord
     */
    errors?: Array<ItemValidationEvent>;
    /**
     * Array with the validation warnings for the item processing record
     * @type {Array<ItemValidationEvent>}
     * @memberof HotelProcessingRecord
     */
    warnings?: Array<ItemValidationEvent>;
    /**
     * 
     * @type {ItemProcessingStatus}
     * @memberof HotelProcessingRecord
     */
    status?: ItemProcessingStatus;
}

export function HotelProcessingRecordFromJSON(json: any): HotelProcessingRecord {
    return {
        'hotelId': !exists(json, 'hotel_id') ? undefined : json['hotel_id'],
        'errors': !exists(json, 'errors') ? undefined : (json['errors'] as Array<any>).map(ItemValidationEventFromJSON),
        'warnings': !exists(json, 'warnings') ? undefined : (json['warnings'] as Array<any>).map(ItemValidationEventFromJSON),
        'status': !exists(json, 'status') ? undefined : ItemProcessingStatusFromJSON(json['status']),
    };
}

export function HotelProcessingRecordToJSON(value?: HotelProcessingRecord): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'hotel_id': value.hotelId,
        'errors': value.errors === undefined ? undefined : (value.errors as Array<any>).map(ItemValidationEventToJSON),
        'warnings': value.warnings === undefined ? undefined : (value.warnings as Array<any>).map(ItemValidationEventToJSON),
        'status': ItemProcessingStatusToJSON(value.status),
    };
}



