// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The list of parameter key/value pairs you will need to send with your POST request to upload your media file.
 * @export
 * @interface MediaUploadAllOfUploadParameters
 */
export interface MediaUploadAllOfUploadParameters  {
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    xAmzDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    xAmzSignature?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    xAmzSecurityToken?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    xAmzAlgorithm?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    policy?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    xAmzCredential?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaUploadAllOfUploadParameters
     */
    contentType?: string;
}

export function MediaUploadAllOfUploadParametersFromJSON(json: any): MediaUploadAllOfUploadParameters {
    return {
        'xAmzDate': !exists(json, 'x-amz-date') ? undefined : json['x-amz-date'],
        'xAmzSignature': !exists(json, 'x-amz-signature') ? undefined : json['x-amz-signature'],
        'xAmzSecurityToken': !exists(json, 'x-amz-security-token') ? undefined : json['x-amz-security-token'],
        'xAmzAlgorithm': !exists(json, 'x-amz-algorithm') ? undefined : json['x-amz-algorithm'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'policy': !exists(json, 'policy') ? undefined : json['policy'],
        'xAmzCredential': !exists(json, 'x-amz-credential') ? undefined : json['x-amz-credential'],
        'contentType': !exists(json, 'Content-Type') ? undefined : json['Content-Type'],
    };
}

export function MediaUploadAllOfUploadParametersToJSON(value?: MediaUploadAllOfUploadParameters): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'x-amz-date': value.xAmzDate,
        'x-amz-signature': value.xAmzSignature,
        'x-amz-security-token': value.xAmzSecurityToken,
        'x-amz-algorithm': value.xAmzAlgorithm,
        'key': value.key,
        'policy': value.policy,
        'x-amz-credential': value.xAmzCredential,
        'Content-Type': value.contentType,
    };
}


