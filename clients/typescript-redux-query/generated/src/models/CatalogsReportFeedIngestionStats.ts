// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogsReportFeedIngestionStats
 */
export interface CatalogsReportFeedIngestionStats  {
    /**
     * 
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    reportType?: CatalogsReportFeedIngestionStatsReportTypeEnum;
    /**
     * ID of the catalog entity.
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    catalogId?: string;
    /**
     * The event code that a diagnostics aggregated number references
     * @type {number}
     * @memberof CatalogsReportFeedIngestionStats
     */
    code?: number;
    /**
     * A human-friendly label for the event code (e.g, \'AVAILABILITY_INVALID\')
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    codeLabel?: string;
    /**
     * Title message describing the diagnostic issue
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    message?: string;
    /**
     * Number of occurrences of the issue
     * @type {number}
     * @memberof CatalogsReportFeedIngestionStats
     */
    occurrences?: number;
    /**
     * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    severity?: CatalogsReportFeedIngestionStatsSeverityEnum;
}

export function CatalogsReportFeedIngestionStatsFromJSON(json: any): CatalogsReportFeedIngestionStats {
    return {
        'reportType': !exists(json, 'report_type') ? undefined : json['report_type'],
        'catalogId': !exists(json, 'catalog_id') ? undefined : json['catalog_id'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'codeLabel': !exists(json, 'code_label') ? undefined : json['code_label'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'occurrences': !exists(json, 'occurrences') ? undefined : json['occurrences'],
        'severity': !exists(json, 'severity') ? undefined : json['severity'],
    };
}

export function CatalogsReportFeedIngestionStatsToJSON(value?: CatalogsReportFeedIngestionStats): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'report_type': value.reportType,
        'catalog_id': value.catalogId,
        'code': value.code,
        'code_label': value.codeLabel,
        'message': value.message,
        'occurrences': value.occurrences,
        'severity': value.severity,
    };
}

/**
* @export
* @enum {string}
*/
export enum CatalogsReportFeedIngestionStatsReportTypeEnum {
    FeedIngestionIssues = 'FEED_INGESTION_ISSUES'
}
/**
* @export
* @enum {string}
*/
export enum CatalogsReportFeedIngestionStatsSeverityEnum {
    Warn = 'WARN',
    Error = 'ERROR'
}


