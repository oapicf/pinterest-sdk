// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsLocale,
    CatalogsLocaleFromJSON,
    CatalogsLocaleToJSON,
    CatalogsProductGroupFilters,
    CatalogsProductGroupFiltersFromJSON,
    CatalogsProductGroupFiltersToJSON,
    Country,
    CountryFromJSON,
    CountryToJSON,
} from './';

/**
 * Request object to list products for a given retail catalog_id and product group filter.
 * @export
 * @interface CatalogsRetailListProductsByCatalogBasedFilterRequest
 */
export interface CatalogsRetailListProductsByCatalogBasedFilterRequest  {
    /**
     * Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
     * @type {string}
     * @memberof CatalogsRetailListProductsByCatalogBasedFilterRequest
     */
    catalogType: CatalogsRetailListProductsByCatalogBasedFilterRequestCatalogTypeEnum;
    /**
     * Catalog id pertaining to the retail product group.
     * @type {string}
     * @memberof CatalogsRetailListProductsByCatalogBasedFilterRequest
     */
    catalogId: string;
    /**
     * 
     * @type {CatalogsProductGroupFilters}
     * @memberof CatalogsRetailListProductsByCatalogBasedFilterRequest
     */
    filters: CatalogsProductGroupFilters;
    /**
     * 
     * @type {Country}
     * @memberof CatalogsRetailListProductsByCatalogBasedFilterRequest
     */
    country: Country;
    /**
     * 
     * @type {CatalogsLocale}
     * @memberof CatalogsRetailListProductsByCatalogBasedFilterRequest
     */
    locale: CatalogsLocale;
}

export function CatalogsRetailListProductsByCatalogBasedFilterRequestFromJSON(json: any): CatalogsRetailListProductsByCatalogBasedFilterRequest {
    return {
        'catalogType': json['catalog_type'],
        'catalogId': json['catalog_id'],
        'filters': CatalogsProductGroupFiltersFromJSON(json['filters']),
        'country': CountryFromJSON(json['country']),
        'locale': CatalogsLocaleFromJSON(json['locale']),
    };
}

export function CatalogsRetailListProductsByCatalogBasedFilterRequestToJSON(value?: CatalogsRetailListProductsByCatalogBasedFilterRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'catalog_type': value.catalogType,
        'catalog_id': value.catalogId,
        'filters': CatalogsProductGroupFiltersToJSON(value.filters),
        'country': CountryToJSON(value.country),
        'locale': CatalogsLocaleToJSON(value.locale),
    };
}

/**
* @export
* @enum {string}
*/
export enum CatalogsRetailListProductsByCatalogBasedFilterRequestCatalogTypeEnum {
    Retail = 'RETAIL'
}


