// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BatchOperation,
    BatchOperationFromJSON,
    BatchOperationToJSON,
    CatalogsItemsRequestLanguage,
    CatalogsItemsRequestLanguageFromJSON,
    CatalogsItemsRequestLanguageToJSON,
    Country,
    CountryFromJSON,
    CountryToJSON,
    ItemDeleteBatchRecord,
    ItemDeleteBatchRecordFromJSON,
    ItemDeleteBatchRecordToJSON,
} from './';

/**
 * Request object to delete catalogs items
 * @export
 * @interface CatalogsItemsDeleteBatchRequest
 */
export interface CatalogsItemsDeleteBatchRequest  {
    /**
     * 
     * @type {Country}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    country: Country;
    /**
     * 
     * @type {CatalogsItemsRequestLanguage}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    language: CatalogsItemsRequestLanguage;
    /**
     * 
     * @type {BatchOperation}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    operation: BatchOperation;
    /**
     * Array with catalogs items
     * @type {Array<ItemDeleteBatchRecord>}
     * @memberof CatalogsItemsDeleteBatchRequest
     */
    items: Array<ItemDeleteBatchRecord>;
}

export function CatalogsItemsDeleteBatchRequestFromJSON(json: any): CatalogsItemsDeleteBatchRequest {
    return {
        'country': CountryFromJSON(json['country']),
        'language': CatalogsItemsRequestLanguageFromJSON(json['language']),
        'operation': BatchOperationFromJSON(json['operation']),
        'items': (json['items'] as Array<any>).map(ItemDeleteBatchRecordFromJSON),
    };
}

export function CatalogsItemsDeleteBatchRequestToJSON(value?: CatalogsItemsDeleteBatchRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'country': CountryToJSON(value.country),
        'language': CatalogsItemsRequestLanguageToJSON(value.language),
        'operation': BatchOperationToJSON(value.operation),
        'items': (value.items as Array<any>).map(ItemDeleteBatchRecordToJSON),
    };
}



