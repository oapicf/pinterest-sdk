// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AudienceRule,
    AudienceRuleFromJSON,
    AudienceRuleToJSON,
} from './';

/**
 * 
 * @export
 * @interface Audience
 */
export interface Audience  {
    /**
     * Ad account ID.
     * @type {string}
     * @memberof Audience
     */
    adAccountId?: string;
    /**
     * Audience ID.
     * @type {string}
     * @memberof Audience
     */
    id?: string;
    /**
     * Audience name.
     * @type {string}
     * @memberof Audience
     */
    name?: string;
    /**
     * <a href=\"/docs/reference/glossary/#Audience Types\">Audience types</a>: ACTALIKE, ENGAGEMENT, CUSTOMER_LIST and VISITOR
     * @type {string}
     * @memberof Audience
     */
    audienceType?: string;
    /**
     * Audience description.
     * @type {string}
     * @memberof Audience
     */
    description?: string;
    /**
     * 
     * @type {AudienceRule}
     * @memberof Audience
     */
    rule?: AudienceRule;
    /**
     * Audience size.
     * @type {number}
     * @memberof Audience
     */
    size?: number;
    /**
     * Audience status. READY, INITIALIZING, TOO_SMALL - Each audience list needs to have at least 100 people with Pinterest accounts before you can start using it.
     * @type {string}
     * @memberof Audience
     */
    status?: string;
    /**
     * Always \"audience\".
     * @type {string}
     * @memberof Audience
     */
    type?: string;
    /**
     * Creation time. Unix timestamp in seconds.
     * @type {number}
     * @memberof Audience
     */
    createdTimestamp?: number;
    /**
     * Last update time. Unix timestamp in seconds.
     * @type {number}
     * @memberof Audience
     */
    updatedTimestamp?: number;
}

export function AudienceFromJSON(json: any): Audience {
    return {
        'adAccountId': !exists(json, 'ad_account_id') ? undefined : json['ad_account_id'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'audienceType': !exists(json, 'audience_type') ? undefined : json['audience_type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'rule': !exists(json, 'rule') ? undefined : AudienceRuleFromJSON(json['rule']),
        'size': !exists(json, 'size') ? undefined : json['size'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'createdTimestamp': !exists(json, 'created_timestamp') ? undefined : json['created_timestamp'],
        'updatedTimestamp': !exists(json, 'updated_timestamp') ? undefined : json['updated_timestamp'],
    };
}

export function AudienceToJSON(value?: Audience): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'ad_account_id': value.adAccountId,
        'id': value.id,
        'name': value.name,
        'audience_type': value.audienceType,
        'description': value.description,
        'rule': AudienceRuleToJSON(value.rule),
        'size': value.size,
        'status': value.status,
        'type': value.type,
        'created_timestamp': value.createdTimestamp,
        'updated_timestamp': value.updatedTimestamp,
    };
}


