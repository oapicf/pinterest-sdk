// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LeadFormCommonPolicyLinksInner,
    LeadFormCommonPolicyLinksInnerFromJSON,
    LeadFormCommonPolicyLinksInnerToJSON,
    LeadFormQuestion,
    LeadFormQuestionFromJSON,
    LeadFormQuestionToJSON,
    LeadFormStatus,
    LeadFormStatusFromJSON,
    LeadFormStatusToJSON,
} from './';

/**
 * Creation fields
 * @export
 * @interface LeadFormCommon
 */
export interface LeadFormCommon  {
    /**
     * Internal name of the lead form.
     * @type {string}
     * @memberof LeadFormCommon
     */
    name?: string;
    /**
     * A link to the advertiser\'s privacy policy. This will be included in the lead form\'s disclosure language.
     * @type {string}
     * @memberof LeadFormCommon
     */
    privacyPolicyLink?: string;
    /**
     * Whether the advertiser has accepted Pinterest\'s terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest\'s <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO
     * @type {boolean}
     * @memberof LeadFormCommon
     */
    hasAcceptedTerms?: boolean;
    /**
     * A message for people who complete the form to let them know what happens next.
     * @type {string}
     * @memberof LeadFormCommon
     */
    completionMessage?: string;
    /**
     * 
     * @type {LeadFormStatus}
     * @memberof LeadFormCommon
     */
    status?: LeadFormStatus;
    /**
     * Additional disclosure language to be included in the lead form.
     * @type {string}
     * @memberof LeadFormCommon
     */
    disclosureLanguage?: string;
    /**
     * List of questions to be displayed on the lead form.
     * @type {Array<LeadFormQuestion>}
     * @memberof LeadFormCommon
     */
    questions?: Array<LeadFormQuestion>;
    /**
     * List of additional policy links to be displayed on the lead form.
     * @type {Array<LeadFormCommonPolicyLinksInner>}
     * @memberof LeadFormCommon
     */
    policyLinks?: Array<LeadFormCommonPolicyLinksInner>;
}

export function LeadFormCommonFromJSON(json: any): LeadFormCommon {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'privacyPolicyLink': !exists(json, 'privacy_policy_link') ? undefined : json['privacy_policy_link'],
        'hasAcceptedTerms': !exists(json, 'has_accepted_terms') ? undefined : json['has_accepted_terms'],
        'completionMessage': !exists(json, 'completion_message') ? undefined : json['completion_message'],
        'status': !exists(json, 'status') ? undefined : LeadFormStatusFromJSON(json['status']),
        'disclosureLanguage': !exists(json, 'disclosure_language') ? undefined : json['disclosure_language'],
        'questions': !exists(json, 'questions') ? undefined : (json['questions'] as Array<any>).map(LeadFormQuestionFromJSON),
        'policyLinks': !exists(json, 'policy_links') ? undefined : (json['policy_links'] as Array<any>).map(LeadFormCommonPolicyLinksInnerFromJSON),
    };
}

export function LeadFormCommonToJSON(value?: LeadFormCommon): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'privacy_policy_link': value.privacyPolicyLink,
        'has_accepted_terms': value.hasAcceptedTerms,
        'completion_message': value.completionMessage,
        'status': LeadFormStatusToJSON(value.status),
        'disclosure_language': value.disclosureLanguage,
        'questions': value.questions === undefined ? undefined : (value.questions as Array<any>).map(LeadFormQuestionToJSON),
        'policy_links': value.policyLinks === undefined ? undefined : (value.policyLinks as Array<any>).map(LeadFormCommonPolicyLinksInnerToJSON),
    };
}



