// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A successful OAuth access token response for the refresh token flow, with an added everlasting refresh token.
 * @export
 * @interface OauthAccessTokenResponseEverlastingRefresh
 */
export interface OauthAccessTokenResponseEverlastingRefresh  {
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    responseType?: OauthAccessTokenResponseEverlastingRefreshResponseTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    accessToken: string;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    tokenType: string;
    /**
     * 
     * @type {number}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    expiresIn: number;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    scope: string;
    /**
     * 
     * @type {string}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    refreshToken: string;
    /**
     * 
     * @type {number}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    refreshTokenExpiresIn: number;
    /**
     * 
     * @type {number}
     * @memberof OauthAccessTokenResponseEverlastingRefresh
     */
    refreshTokenExpiresAt: number;
}

export function OauthAccessTokenResponseEverlastingRefreshFromJSON(json: any): OauthAccessTokenResponseEverlastingRefresh {
    return {
        'responseType': !exists(json, 'response_type') ? undefined : json['response_type'],
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'expiresIn': json['expires_in'],
        'scope': json['scope'],
        'refreshToken': json['refresh_token'],
        'refreshTokenExpiresIn': json['refresh_token_expires_in'],
        'refreshTokenExpiresAt': json['refresh_token_expires_at'],
    };
}

export function OauthAccessTokenResponseEverlastingRefreshToJSON(value?: OauthAccessTokenResponseEverlastingRefresh): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'response_type': value.responseType,
        'access_token': value.accessToken,
        'token_type': value.tokenType,
        'expires_in': value.expiresIn,
        'scope': value.scope,
        'refresh_token': value.refreshToken,
        'refresh_token_expires_in': value.refreshTokenExpiresIn,
        'refresh_token_expires_at': value.refreshTokenExpiresAt,
    };
}

/**
* @export
* @enum {string}
*/
export enum OauthAccessTokenResponseEverlastingRefreshResponseTypeEnum {
    AuthorizationCode = 'authorization_code',
    RefreshToken = 'refresh_token',
    ClientCredentials = 'client_credentials'
}


