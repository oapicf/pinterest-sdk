// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AudienceCategory,
    AudienceCategoryFromJSON,
    AudienceCategoryToJSON,
    AudienceDemographics,
    AudienceDemographicsFromJSON,
    AudienceDemographicsToJSON,
    AudienceInsightType,
    AudienceInsightTypeFromJSON,
    AudienceInsightTypeToJSON,
} from './';

/**
 * Audience interests and demographics.
 * @export
 * @interface AudienceInsightsResponse
 */
export interface AudienceInsightsResponse  {
    /**
     * Category interest distribution
     * @type {Array<AudienceCategory>}
     * @memberof AudienceInsightsResponse
     */
    categories?: Array<AudienceCategory>;
    /**
     * 
     * @type {AudienceDemographics}
     * @memberof AudienceInsightsResponse
     */
    demographics?: AudienceDemographics;
    /**
     * 
     * @type {AudienceInsightType}
     * @memberof AudienceInsightsResponse
     */
    type?: AudienceInsightType;
    /**
     * Generation date
     * @type {string}
     * @memberof AudienceInsightsResponse
     */
    date?: string;
    /**
     * Population count.
     * @type {number}
     * @memberof AudienceInsightsResponse
     */
    size?: number;
    /**
     * Indicates whether the audience size has been rounded up to the next highest upper boundary.
     * @type {boolean}
     * @memberof AudienceInsightsResponse
     */
    sizeIsUpperBound?: boolean;
}

export function AudienceInsightsResponseFromJSON(json: any): AudienceInsightsResponse {
    return {
        'categories': !exists(json, 'categories') ? undefined : (json['categories'] as Array<any>).map(AudienceCategoryFromJSON),
        'demographics': !exists(json, 'demographics') ? undefined : AudienceDemographicsFromJSON(json['demographics']),
        'type': !exists(json, 'type') ? undefined : AudienceInsightTypeFromJSON(json['type']),
        'date': !exists(json, 'date') ? undefined : json['date'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'sizeIsUpperBound': !exists(json, 'size_is_upper_bound') ? undefined : json['size_is_upper_bound'],
    };
}

export function AudienceInsightsResponseToJSON(value?: AudienceInsightsResponse): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'categories': value.categories === undefined ? undefined : (value.categories as Array<any>).map(AudienceCategoryToJSON),
        'demographics': AudienceDemographicsToJSON(value.demographics),
        'type': AudienceInsightTypeToJSON(value.type),
        'date': value.date,
        'size': value.size,
        'size_is_upper_bound': value.sizeIsUpperBound,
    };
}



