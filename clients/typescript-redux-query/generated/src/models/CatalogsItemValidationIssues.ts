// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsItemValidationErrors,
    CatalogsItemValidationErrorsFromJSON,
    CatalogsItemValidationErrorsToJSON,
    CatalogsItemValidationWarnings,
    CatalogsItemValidationWarningsFromJSON,
    CatalogsItemValidationWarningsToJSON,
} from './';

/**
 * 
 * @export
 * @interface CatalogsItemValidationIssues
 */
export interface CatalogsItemValidationIssues  {
    /**
     * Item number based on order of appearance in the Catalogs Feed. For example, \'0\' refers to first item found in a feed that was downloaded from a \'location\' specified during feed creation.
     * @type {number}
     * @memberof CatalogsItemValidationIssues
     */
    itemNumber: number;
    /**
     * The merchant-created unique ID that represents the product.
     * @type {string}
     * @memberof CatalogsItemValidationIssues
     */
    itemId: string;
    /**
     * 
     * @type {CatalogsItemValidationErrors}
     * @memberof CatalogsItemValidationIssues
     */
    errors: CatalogsItemValidationErrors;
    /**
     * 
     * @type {CatalogsItemValidationWarnings}
     * @memberof CatalogsItemValidationIssues
     */
    warnings: CatalogsItemValidationWarnings;
}

export function CatalogsItemValidationIssuesFromJSON(json: any): CatalogsItemValidationIssues {
    return {
        'itemNumber': json['item_number'],
        'itemId': json['item_id'],
        'errors': CatalogsItemValidationErrorsFromJSON(json['errors']),
        'warnings': CatalogsItemValidationWarningsFromJSON(json['warnings']),
    };
}

export function CatalogsItemValidationIssuesToJSON(value?: CatalogsItemValidationIssues): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'item_number': value.itemNumber,
        'item_id': value.itemId,
        'errors': CatalogsItemValidationErrorsToJSON(value.errors),
        'warnings': CatalogsItemValidationWarningsToJSON(value.warnings),
    };
}


