// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AdGroupSummaryStatus,
    AdGroupSummaryStatusFromJSON,
    AdGroupSummaryStatusToJSON,
    AdsAnalyticsMetricsFilter,
    AdsAnalyticsMetricsFilterFromJSON,
    AdsAnalyticsMetricsFilterToJSON,
    AdsAnalyticsTargetingType,
    AdsAnalyticsTargetingTypeFromJSON,
    AdsAnalyticsTargetingTypeToJSON,
    CampaignSummaryStatus,
    CampaignSummaryStatusFromJSON,
    CampaignSummaryStatusToJSON,
    ConversionAttributionWindowDays,
    ConversionAttributionWindowDaysFromJSON,
    ConversionAttributionWindowDaysToJSON,
    ConversionReportAttributionType,
    ConversionReportAttributionTypeFromJSON,
    ConversionReportAttributionTypeToJSON,
    ConversionReportTimeType,
    ConversionReportTimeTypeFromJSON,
    ConversionReportTimeTypeToJSON,
    DataOutputFormat,
    DataOutputFormatFromJSON,
    DataOutputFormatToJSON,
    Granularity,
    GranularityFromJSON,
    GranularityToJSON,
    MetricsReportingLevel,
    MetricsReportingLevelFromJSON,
    MetricsReportingLevelToJSON,
    ObjectiveType,
    ObjectiveTypeFromJSON,
    ObjectiveTypeToJSON,
    PinPromotionSummaryStatus,
    PinPromotionSummaryStatusFromJSON,
    PinPromotionSummaryStatusToJSON,
    ProductGroupSummaryStatus,
    ProductGroupSummaryStatusFromJSON,
    ProductGroupSummaryStatusToJSON,
    ReportingColumnAsync,
    ReportingColumnAsyncFromJSON,
    ReportingColumnAsyncToJSON,
} from './';

/**
 * 
 * @export
 * @interface AdsAnalyticsCreateAsyncRequest
 */
export interface AdsAnalyticsCreateAsyncRequest  {
    /**
     * Metric report start date (UTC). Format: YYYY-MM-DD
     * @type {string}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    startDate: string;
    /**
     * Metric report end date (UTC). Format: YYYY-MM-DD
     * @type {string}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    endDate: string;
    /**
     * TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     * @type {Granularity}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    granularity: Granularity;
    /**
     * Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @type {ConversionAttributionWindowDays}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    clickWindowDays?: ConversionAttributionWindowDays;
    /**
     * Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @type {ConversionAttributionWindowDays}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    engagementWindowDays?: ConversionAttributionWindowDays;
    /**
     * Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
     * @type {ConversionAttributionWindowDays}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    viewWindowDays?: ConversionAttributionWindowDays;
    /**
     * The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
     * @type {ConversionReportTimeType}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    conversionReportTime?: ConversionReportTimeType;
    /**
     * List of types of attribution for the conversion report
     * @type {Array<ConversionReportAttributionType>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    attributionTypes?: Array<ConversionReportAttributionType>;
    /**
     * List of campaign ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    campaignIds?: Array<string>;
    /**
     * List of status values for filtering
     * @type {Array<CampaignSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    campaignStatuses?: Array<CampaignSummaryStatus>;
    /**
     * List of values for filtering. [\"WEB_SESSIONS\"] in BETA.
     * @type {Array<ObjectiveType>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    campaignObjectiveTypes?: Array<ObjectiveType>;
    /**
     * List of ad group ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adGroupIds?: Array<string>;
    /**
     * List of values for filtering
     * @type {Array<AdGroupSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adGroupStatuses?: Array<AdGroupSummaryStatus>;
    /**
     * List of ad ids [This parameter is no supported for Product Item Level Reports]
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adIds?: Array<string>;
    /**
     * List of values for filtering [This parameter is not supported for Product Item Level Reports]
     * @type {Array<PinPromotionSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    adStatuses?: Array<PinPromotionSummaryStatus>;
    /**
     * List of product group ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    productGroupIds?: Array<string>;
    /**
     * List of values for filtering
     * @type {Array<ProductGroupSummaryStatus>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    productGroupStatuses?: Array<ProductGroupSummaryStatus>;
    /**
     * List of product item ids
     * @type {Array<string>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    productItemIds?: Array<string>;
    /**
     * List of targeting types. Requires `level` to be a value ending in `_TARGETING`. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.
     * @type {Array<AdsAnalyticsTargetingType>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    targetingTypes?: Array<AdsAnalyticsTargetingType>;
    /**
     * List of metrics filters
     * @type {Array<AdsAnalyticsMetricsFilter>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    metricsFilters?: Array<AdsAnalyticsMetricsFilter>;
    /**
     * Metric and entity columns. Pin promotion and ad related columns are not supported for the Product Item level reports.
     * @type {Array<ReportingColumnAsync>}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    columns: Array<ReportingColumnAsync>;
    /**
     * Level of the report
     * @type {MetricsReportingLevel}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    level: MetricsReportingLevel;
    /**
     * Specification for formatting the report data. Reports in JSON will not zero-fill metrics, whereas reports in CSV will. Both report formats will omit rows where all the columns are equal to 0.
     * @type {DataOutputFormat}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    reportFormat?: DataOutputFormat;
    /**
     * Whether to first sort the report by date or by entity ID of the reporting entity level. Date will be used as the first level key for JSON reports that use BY_DATE. BY_DATE is recommended for large requests.
     * @type {string}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    primarySort?: AdsAnalyticsCreateAsyncRequestPrimarySortEnum;
    /**
     * Which hour of the start date to begin the report. The entire day will be included if no start hour is provided. Only allowed for hourly reports.
     * @type {number}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    startHour?: number;
    /**
     * Which hour of the end date to stop the report (inclusive). For example, with an end_date of \'2020-01-01\' and end_hour of \'15\', the report will contain metrics up to \'2020-01-01 14:59:59\'. The entire day will be included if no end hour is provided. Only allowed for hourly reports.
     * @type {number}
     * @memberof AdsAnalyticsCreateAsyncRequest
     */
    endHour?: number;
}

export function AdsAnalyticsCreateAsyncRequestFromJSON(json: any): AdsAnalyticsCreateAsyncRequest {
    return {
        'startDate': json['start_date'],
        'endDate': json['end_date'],
        'granularity': GranularityFromJSON(json['granularity']),
        'clickWindowDays': !exists(json, 'click_window_days') ? undefined : ConversionAttributionWindowDaysFromJSON(json['click_window_days']),
        'engagementWindowDays': !exists(json, 'engagement_window_days') ? undefined : ConversionAttributionWindowDaysFromJSON(json['engagement_window_days']),
        'viewWindowDays': !exists(json, 'view_window_days') ? undefined : ConversionAttributionWindowDaysFromJSON(json['view_window_days']),
        'conversionReportTime': !exists(json, 'conversion_report_time') ? undefined : ConversionReportTimeTypeFromJSON(json['conversion_report_time']),
        'attributionTypes': !exists(json, 'attribution_types') ? undefined : (json['attribution_types'] as Array<any>).map(ConversionReportAttributionTypeFromJSON),
        'campaignIds': !exists(json, 'campaign_ids') ? undefined : json['campaign_ids'],
        'campaignStatuses': !exists(json, 'campaign_statuses') ? undefined : (json['campaign_statuses'] as Array<any>).map(CampaignSummaryStatusFromJSON),
        'campaignObjectiveTypes': !exists(json, 'campaign_objective_types') ? undefined : (json['campaign_objective_types'] as Array<any>).map(ObjectiveTypeFromJSON),
        'adGroupIds': !exists(json, 'ad_group_ids') ? undefined : json['ad_group_ids'],
        'adGroupStatuses': !exists(json, 'ad_group_statuses') ? undefined : (json['ad_group_statuses'] as Array<any>).map(AdGroupSummaryStatusFromJSON),
        'adIds': !exists(json, 'ad_ids') ? undefined : json['ad_ids'],
        'adStatuses': !exists(json, 'ad_statuses') ? undefined : (json['ad_statuses'] as Array<any>).map(PinPromotionSummaryStatusFromJSON),
        'productGroupIds': !exists(json, 'product_group_ids') ? undefined : json['product_group_ids'],
        'productGroupStatuses': !exists(json, 'product_group_statuses') ? undefined : (json['product_group_statuses'] as Array<any>).map(ProductGroupSummaryStatusFromJSON),
        'productItemIds': !exists(json, 'product_item_ids') ? undefined : json['product_item_ids'],
        'targetingTypes': !exists(json, 'targeting_types') ? undefined : (json['targeting_types'] as Array<any>).map(AdsAnalyticsTargetingTypeFromJSON),
        'metricsFilters': !exists(json, 'metrics_filters') ? undefined : (json['metrics_filters'] as Array<any>).map(AdsAnalyticsMetricsFilterFromJSON),
        'columns': (json['columns'] as Array<any>).map(ReportingColumnAsyncFromJSON),
        'level': MetricsReportingLevelFromJSON(json['level']),
        'reportFormat': !exists(json, 'report_format') ? undefined : DataOutputFormatFromJSON(json['report_format']),
        'primarySort': !exists(json, 'primary_sort') ? undefined : json['primary_sort'],
        'startHour': !exists(json, 'start_hour') ? undefined : json['start_hour'],
        'endHour': !exists(json, 'end_hour') ? undefined : json['end_hour'],
    };
}

export function AdsAnalyticsCreateAsyncRequestToJSON(value?: AdsAnalyticsCreateAsyncRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'start_date': value.startDate,
        'end_date': value.endDate,
        'granularity': GranularityToJSON(value.granularity),
        'click_window_days': ConversionAttributionWindowDaysToJSON(value.clickWindowDays),
        'engagement_window_days': ConversionAttributionWindowDaysToJSON(value.engagementWindowDays),
        'view_window_days': ConversionAttributionWindowDaysToJSON(value.viewWindowDays),
        'conversion_report_time': ConversionReportTimeTypeToJSON(value.conversionReportTime),
        'attribution_types': value.attributionTypes === undefined ? undefined : (value.attributionTypes as Array<any>).map(ConversionReportAttributionTypeToJSON),
        'campaign_ids': value.campaignIds,
        'campaign_statuses': value.campaignStatuses === undefined ? undefined : (value.campaignStatuses as Array<any>).map(CampaignSummaryStatusToJSON),
        'campaign_objective_types': value.campaignObjectiveTypes === undefined ? undefined : (value.campaignObjectiveTypes as Array<any>).map(ObjectiveTypeToJSON),
        'ad_group_ids': value.adGroupIds,
        'ad_group_statuses': value.adGroupStatuses === undefined ? undefined : (value.adGroupStatuses as Array<any>).map(AdGroupSummaryStatusToJSON),
        'ad_ids': value.adIds,
        'ad_statuses': value.adStatuses === undefined ? undefined : (value.adStatuses as Array<any>).map(PinPromotionSummaryStatusToJSON),
        'product_group_ids': value.productGroupIds,
        'product_group_statuses': value.productGroupStatuses === undefined ? undefined : (value.productGroupStatuses as Array<any>).map(ProductGroupSummaryStatusToJSON),
        'product_item_ids': value.productItemIds,
        'targeting_types': value.targetingTypes === undefined ? undefined : (value.targetingTypes as Array<any>).map(AdsAnalyticsTargetingTypeToJSON),
        'metrics_filters': value.metricsFilters === undefined ? undefined : (value.metricsFilters as Array<any>).map(AdsAnalyticsMetricsFilterToJSON),
        'columns': (value.columns as Array<any>).map(ReportingColumnAsyncToJSON),
        'level': MetricsReportingLevelToJSON(value.level),
        'report_format': DataOutputFormatToJSON(value.reportFormat),
        'primary_sort': value.primarySort,
        'start_hour': value.startHour,
        'end_hour': value.endHour,
    };
}

/**
* @export
* @enum {string}
*/
export enum AdsAnalyticsCreateAsyncRequestPrimarySortEnum {
    Id = 'BY_ID',
    Date = 'BY_DATE'
}


