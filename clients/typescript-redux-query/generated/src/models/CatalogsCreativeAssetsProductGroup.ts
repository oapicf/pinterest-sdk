// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsCreativeAssetsProductGroupFilters,
    CatalogsCreativeAssetsProductGroupFiltersFromJSON,
    CatalogsCreativeAssetsProductGroupFiltersToJSON,
} from './';

/**
 * 
 * @export
 * @interface CatalogsCreativeAssetsProductGroup
 */
export interface CatalogsCreativeAssetsProductGroup  {
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    catalogType: CatalogsCreativeAssetsProductGroupCatalogTypeEnum;
    /**
     * ID of the creative assets product group.
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    id: string;
    /**
     * Name of creative assets product group
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    description?: string;
    /**
     * 
     * @type {CatalogsCreativeAssetsProductGroupFilters}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    filters: CatalogsCreativeAssetsProductGroupFilters;
    /**
     * Unix timestamp in seconds of when catalog product group was created.
     * @type {number}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    createdAt?: number;
    /**
     * Unix timestamp in seconds of last time catalog product group was updated.
     * @type {number}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    updatedAt?: number;
    /**
     * Catalog id pertaining to the creative assets product group.
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroup
     */
    catalogId: string;
}

export function CatalogsCreativeAssetsProductGroupFromJSON(json: any): CatalogsCreativeAssetsProductGroup {
    return {
        'catalogType': json['catalog_type'],
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'filters': CatalogsCreativeAssetsProductGroupFiltersFromJSON(json['filters']),
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'catalogId': json['catalog_id'],
    };
}

export function CatalogsCreativeAssetsProductGroupToJSON(value?: CatalogsCreativeAssetsProductGroup): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'catalog_type': value.catalogType,
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'filters': CatalogsCreativeAssetsProductGroupFiltersToJSON(value.filters),
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'catalog_id': value.catalogId,
    };
}

/**
* @export
* @enum {string}
*/
export enum CatalogsCreativeAssetsProductGroupCatalogTypeEnum {
    CreativeAssets = 'CREATIVE_ASSETS'
}


