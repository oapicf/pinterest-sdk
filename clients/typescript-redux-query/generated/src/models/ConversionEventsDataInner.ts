// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversionEventsDataInnerCustomData,
    ConversionEventsDataInnerCustomDataFromJSON,
    ConversionEventsDataInnerCustomDataToJSON,
    ConversionEventsUserData,
    ConversionEventsUserDataFromJSON,
    ConversionEventsUserDataToJSON,
} from './';

/**
 * 
 * @export
 * @interface ConversionEventsDataInner
 */
export interface ConversionEventsDataInner  {
    /**
     * <p>The type of the user event. Please use the right event_name otherwise the event won\'t be accepted and show up correctly in reports.   <ul>   <li><code>add_to_cart</code></li>   <li><code>checkout</code></li>   <li><code>custom</code></li>   <li><code>lead</code></li>   <li><code>page_visit</code></li>   <li><code>search</code></li>   <li><code>signup</code></li>   <li><code>view_category</code></li>   <li><code>watch_video</code></li>   </ul> </p> 
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    eventName: string;
    /**
     * <p>   The source indicating where the conversion event occurred.   <ul>     <li><code>app_android</code></li>     <li><code>app_ios</code></li>     <li><code>web</code></li>     <li><code>offline</code></li>   </ul> </p> 
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    actionSource: string;
    /**
     * The time when the event happened. Unix timestamp in seconds.
     * @type {number}
     * @memberof ConversionEventsDataInner
     */
    eventTime: number;
    /**
     * A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking. Without this, event\'s data is likely to be double counted and will cause report metric inflation. Third-party vendors make sure this field is updated on both Pinterest tag and Conversions API side before rolling out template for Conversions API.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    eventId: string;
    /**
     * URL of the web conversion event.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    eventSourceUrl?: string;
    /**
     * When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.
     * @type {boolean}
     * @memberof ConversionEventsDataInner
     */
    optOut?: boolean;
    /**
     * The third party partner name responsible to send the event to Conversions API on behalf of the advertiser. The naming convention is \"ss-partnername\" lowercase. E.g ‘ss-shopify’
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    partnerName?: string;
    /**
     * 
     * @type {ConversionEventsUserData}
     * @memberof ConversionEventsDataInner
     */
    userData: ConversionEventsUserData;
    /**
     * 
     * @type {ConversionEventsDataInnerCustomData}
     * @memberof ConversionEventsDataInner
     */
    customData?: ConversionEventsDataInnerCustomData;
    /**
     * The app store app ID.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    appId?: string;
    /**
     * Name of the app.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    appName?: string;
    /**
     * Version of the app.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    appVersion?: string;
    /**
     * Brand of the user device.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    deviceBrand?: string;
    /**
     * User device\'s mobile carrier.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    deviceCarrier?: string;
    /**
     * Model of the user device.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    deviceModel?: string;
    /**
     * Type of the user device.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    deviceType?: string;
    /**
     * Version of the device operating system.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    osVersion?: string;
    /**
     * Whether the event occurred when the user device was connected to wifi.
     * @type {boolean}
     * @memberof ConversionEventsDataInner
     */
    wifi?: boolean;
    /**
     * Two-character ISO-639-1 language code indicating the user\'s language.
     * @type {string}
     * @memberof ConversionEventsDataInner
     */
    language?: string;
}

export function ConversionEventsDataInnerFromJSON(json: any): ConversionEventsDataInner {
    return {
        'eventName': json['event_name'],
        'actionSource': json['action_source'],
        'eventTime': json['event_time'],
        'eventId': json['event_id'],
        'eventSourceUrl': !exists(json, 'event_source_url') ? undefined : json['event_source_url'],
        'optOut': !exists(json, 'opt_out') ? undefined : json['opt_out'],
        'partnerName': !exists(json, 'partner_name') ? undefined : json['partner_name'],
        'userData': ConversionEventsUserDataFromJSON(json['user_data']),
        'customData': !exists(json, 'custom_data') ? undefined : ConversionEventsDataInnerCustomDataFromJSON(json['custom_data']),
        'appId': !exists(json, 'app_id') ? undefined : json['app_id'],
        'appName': !exists(json, 'app_name') ? undefined : json['app_name'],
        'appVersion': !exists(json, 'app_version') ? undefined : json['app_version'],
        'deviceBrand': !exists(json, 'device_brand') ? undefined : json['device_brand'],
        'deviceCarrier': !exists(json, 'device_carrier') ? undefined : json['device_carrier'],
        'deviceModel': !exists(json, 'device_model') ? undefined : json['device_model'],
        'deviceType': !exists(json, 'device_type') ? undefined : json['device_type'],
        'osVersion': !exists(json, 'os_version') ? undefined : json['os_version'],
        'wifi': !exists(json, 'wifi') ? undefined : json['wifi'],
        'language': !exists(json, 'language') ? undefined : json['language'],
    };
}

export function ConversionEventsDataInnerToJSON(value?: ConversionEventsDataInner): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'event_name': value.eventName,
        'action_source': value.actionSource,
        'event_time': value.eventTime,
        'event_id': value.eventId,
        'event_source_url': value.eventSourceUrl,
        'opt_out': value.optOut,
        'partner_name': value.partnerName,
        'user_data': ConversionEventsUserDataToJSON(value.userData),
        'custom_data': ConversionEventsDataInnerCustomDataToJSON(value.customData),
        'app_id': value.appId,
        'app_name': value.appName,
        'app_version': value.appVersion,
        'device_brand': value.deviceBrand,
        'device_carrier': value.deviceCarrier,
        'device_model': value.deviceModel,
        'device_type': value.deviceType,
        'os_version': value.osVersion,
        'wifi': value.wifi,
        'language': value.language,
    };
}


