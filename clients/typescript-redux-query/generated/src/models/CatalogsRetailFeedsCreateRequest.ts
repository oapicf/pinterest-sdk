// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatalogsFeedCredentials,
    CatalogsFeedCredentialsFromJSON,
    CatalogsFeedCredentialsToJSON,
    CatalogsFeedProcessingSchedule,
    CatalogsFeedProcessingScheduleFromJSON,
    CatalogsFeedProcessingScheduleToJSON,
    CatalogsFeedsCreateRequestDefaultLocale,
    CatalogsFeedsCreateRequestDefaultLocaleFromJSON,
    CatalogsFeedsCreateRequestDefaultLocaleToJSON,
    CatalogsFormat,
    CatalogsFormatFromJSON,
    CatalogsFormatToJSON,
    CatalogsStatus,
    CatalogsStatusFromJSON,
    CatalogsStatusToJSON,
    CatalogsType,
    CatalogsTypeFromJSON,
    CatalogsTypeToJSON,
    Country,
    CountryFromJSON,
    CountryToJSON,
    NullableCurrency,
    NullableCurrencyFromJSON,
    NullableCurrencyToJSON,
    ProductAvailabilityType,
    ProductAvailabilityTypeFromJSON,
    ProductAvailabilityTypeToJSON,
} from './';

/**
 * Request object for creating a retail feed.
 * @export
 * @interface CatalogsRetailFeedsCreateRequest
 */
export interface CatalogsRetailFeedsCreateRequest  {
    /**
     * 
     * @type {NullableCurrency}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    defaultCurrency?: NullableCurrency;
    /**
     * A human-friendly name associated to a given feed.
     * @type {string}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    name: string;
    /**
     * 
     * @type {CatalogsFormat}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    format: CatalogsFormat;
    /**
     * 
     * @type {CatalogsFeedsCreateRequestDefaultLocale}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    defaultLocale: CatalogsFeedsCreateRequestDefaultLocale;
    /**
     * 
     * @type {CatalogsFeedCredentials}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    credentials?: CatalogsFeedCredentials;
    /**
     * The URL where a feed is available for download. This URL is what Pinterest will use to download a feed for processing.
     * @type {string}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    location: string;
    /**
     * 
     * @type {CatalogsFeedProcessingSchedule}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    preferredProcessingSchedule?: CatalogsFeedProcessingSchedule;
    /**
     * 
     * @type {CatalogsType}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    catalogType: CatalogsType;
    /**
     * 
     * @type {Country}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    defaultCountry: Country;
    /**
     * 
     * @type {ProductAvailabilityType}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    defaultAvailability?: ProductAvailabilityType;
    /**
     * 
     * @type {CatalogsStatus}
     * @memberof CatalogsRetailFeedsCreateRequest
     */
    status?: CatalogsStatus;
}

export function CatalogsRetailFeedsCreateRequestFromJSON(json: any): CatalogsRetailFeedsCreateRequest {
    return {
        'defaultCurrency': !exists(json, 'default_currency') ? undefined : NullableCurrencyFromJSON(json['default_currency']),
        'name': json['name'],
        'format': CatalogsFormatFromJSON(json['format']),
        'defaultLocale': CatalogsFeedsCreateRequestDefaultLocaleFromJSON(json['default_locale']),
        'credentials': !exists(json, 'credentials') ? undefined : CatalogsFeedCredentialsFromJSON(json['credentials']),
        'location': json['location'],
        'preferredProcessingSchedule': !exists(json, 'preferred_processing_schedule') ? undefined : CatalogsFeedProcessingScheduleFromJSON(json['preferred_processing_schedule']),
        'catalogType': CatalogsTypeFromJSON(json['catalog_type']),
        'defaultCountry': CountryFromJSON(json['default_country']),
        'defaultAvailability': !exists(json, 'default_availability') ? undefined : ProductAvailabilityTypeFromJSON(json['default_availability']),
        'status': !exists(json, 'status') ? undefined : CatalogsStatusFromJSON(json['status']),
    };
}

export function CatalogsRetailFeedsCreateRequestToJSON(value?: CatalogsRetailFeedsCreateRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'default_currency': NullableCurrencyToJSON(value.defaultCurrency),
        'name': value.name,
        'format': CatalogsFormatToJSON(value.format),
        'default_locale': CatalogsFeedsCreateRequestDefaultLocaleToJSON(value.defaultLocale),
        'credentials': CatalogsFeedCredentialsToJSON(value.credentials),
        'location': value.location,
        'preferred_processing_schedule': CatalogsFeedProcessingScheduleToJSON(value.preferredProcessingSchedule),
        'catalog_type': CatalogsTypeToJSON(value.catalogType),
        'default_country': CountryToJSON(value.defaultCountry),
        'default_availability': ProductAvailabilityTypeToJSON(value.defaultAvailability),
        'status': CatalogsStatusToJSON(value.status),
    };
}



