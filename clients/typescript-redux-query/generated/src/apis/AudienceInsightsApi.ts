// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { HttpMethods, QueryConfig, ResponseBody, ResponseText } from 'redux-query';
import * as runtime from '../runtime';
import {
    AudienceDefinitionResponse,
    AudienceDefinitionResponseFromJSON,
    AudienceDefinitionResponseToJSON,
    AudienceInsightType,
    AudienceInsightTypeFromJSON,
    AudienceInsightTypeToJSON,
    AudienceInsightsResponse,
    AudienceInsightsResponseFromJSON,
    AudienceInsightsResponseToJSON,
} from '../models';

export interface AudienceInsightsGetRequest {
    adAccountId: string;
    audienceInsightType: AudienceInsightType;
}

export interface AudienceInsightsScopeAndTypeGetRequest {
    adAccountId: string;
}


/**
 * Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account\'s engaged audience on Pinterest, the ad account\'s total audience on Pinterest and Pinterest\'s total audience.<p/> <a href=\"https://help.pinterest.com/en/business/article/audience-insights\" target=\"_blank\">Learn more about Audience Insights</a>.
 * Get audience insights
 */
function audienceInsightsGetRaw<T>(requestParameters: AudienceInsightsGetRequest, requestConfig: runtime.TypedQueryConfig<T, AudienceInsightsResponse> = {}): QueryConfig<T> {
    if (requestParameters.adAccountId === null || requestParameters.adAccountId === undefined) {
        throw new runtime.RequiredError('adAccountId','Required parameter requestParameters.adAccountId was null or undefined when calling audienceInsightsGet.');
    }

    if (requestParameters.audienceInsightType === null || requestParameters.audienceInsightType === undefined) {
        throw new runtime.RequiredError('audienceInsightType','Required parameter requestParameters.audienceInsightType was null or undefined when calling audienceInsightsGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.audienceInsightType !== undefined) {
        queryParameters['audience_insight_type'] = requestParameters.audienceInsightType;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["ads:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/ad_accounts/{ad_account_id}/audience_insights`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters.adAccountId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(AudienceInsightsResponseFromJSON(body), text);
    }

    return config;
}

/**
* Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account\'s engaged audience on Pinterest, the ad account\'s total audience on Pinterest and Pinterest\'s total audience.<p/> <a href=\"https://help.pinterest.com/en/business/article/audience-insights\" target=\"_blank\">Learn more about Audience Insights</a>.
* Get audience insights
*/
export function audienceInsightsGet<T>(requestParameters: AudienceInsightsGetRequest, requestConfig?: runtime.TypedQueryConfig<T, AudienceInsightsResponse>): QueryConfig<T> {
    return audienceInsightsGetRaw(requestParameters, requestConfig);
}

/**
 * Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.
 * Get audience insights scope and type
 */
function audienceInsightsScopeAndTypeGetRaw<T>(requestParameters: AudienceInsightsScopeAndTypeGetRequest, requestConfig: runtime.TypedQueryConfig<T, AudienceDefinitionResponse> = {}): QueryConfig<T> {
    if (requestParameters.adAccountId === null || requestParameters.adAccountId === undefined) {
        throw new runtime.RequiredError('adAccountId','Required parameter requestParameters.adAccountId was null or undefined when calling audienceInsightsScopeAndTypeGet.');
    }

    let queryParameters = null;


    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["ads:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/ad_accounts/{ad_account_id}/insights/audiences`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters.adAccountId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(AudienceDefinitionResponseFromJSON(body), text);
    }

    return config;
}

/**
* Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.
* Get audience insights scope and type
*/
export function audienceInsightsScopeAndTypeGet<T>(requestParameters: AudienceInsightsScopeAndTypeGetRequest, requestConfig?: runtime.TypedQueryConfig<T, AudienceDefinitionResponse>): QueryConfig<T> {
    return audienceInsightsScopeAndTypeGetRaw(requestParameters, requestConfig);
}

