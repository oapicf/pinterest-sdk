// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { HttpMethods, QueryConfig, ResponseBody, ResponseText } from 'redux-query';
import * as runtime from '../runtime';
import {
    Catalog,
    CatalogFromJSON,
    CatalogToJSON,
    CatalogsCreateReportResponse,
    CatalogsCreateReportResponseFromJSON,
    CatalogsCreateReportResponseToJSON,
    CatalogsCreateRequest,
    CatalogsCreateRequestFromJSON,
    CatalogsCreateRequestToJSON,
    CatalogsFeed,
    CatalogsFeedFromJSON,
    CatalogsFeedToJSON,
    CatalogsFeedIngestion,
    CatalogsFeedIngestionFromJSON,
    CatalogsFeedIngestionToJSON,
    CatalogsItemValidationIssue,
    CatalogsItemValidationIssueFromJSON,
    CatalogsItemValidationIssueToJSON,
    CatalogsItems,
    CatalogsItemsFromJSON,
    CatalogsItemsToJSON,
    CatalogsItemsBatch,
    CatalogsItemsBatchFromJSON,
    CatalogsItemsBatchToJSON,
    CatalogsItemsBatchRequest,
    CatalogsItemsBatchRequestFromJSON,
    CatalogsItemsBatchRequestToJSON,
    CatalogsItemsFilters,
    CatalogsItemsFiltersFromJSON,
    CatalogsItemsFiltersToJSON,
    CatalogsItemsRequest,
    CatalogsItemsRequestFromJSON,
    CatalogsItemsRequestToJSON,
    CatalogsList200Response,
    CatalogsList200ResponseFromJSON,
    CatalogsList200ResponseToJSON,
    CatalogsListProductsByFilterRequest,
    CatalogsListProductsByFilterRequestFromJSON,
    CatalogsListProductsByFilterRequestToJSON,
    CatalogsProductGroupPinsList200Response,
    CatalogsProductGroupPinsList200ResponseFromJSON,
    CatalogsProductGroupPinsList200ResponseToJSON,
    CatalogsProductGroupProductCountsVertical,
    CatalogsProductGroupProductCountsVerticalFromJSON,
    CatalogsProductGroupProductCountsVerticalToJSON,
    CatalogsProductGroupsList200Response,
    CatalogsProductGroupsList200ResponseFromJSON,
    CatalogsProductGroupsList200ResponseToJSON,
    CatalogsProductGroupsUpdateRequest,
    CatalogsProductGroupsUpdateRequestFromJSON,
    CatalogsProductGroupsUpdateRequestToJSON,
    CatalogsReport,
    CatalogsReportFromJSON,
    CatalogsReportToJSON,
    CatalogsReportParameters,
    CatalogsReportParametersFromJSON,
    CatalogsReportParametersToJSON,
    CatalogsVerticalBatchRequest,
    CatalogsVerticalBatchRequestFromJSON,
    CatalogsVerticalBatchRequestToJSON,
    CatalogsVerticalProductGroup,
    CatalogsVerticalProductGroupFromJSON,
    CatalogsVerticalProductGroupToJSON,
    FeedProcessingResultsList200Response,
    FeedProcessingResultsList200ResponseFromJSON,
    FeedProcessingResultsList200ResponseToJSON,
    FeedsCreateRequest,
    FeedsCreateRequestFromJSON,
    FeedsCreateRequestToJSON,
    FeedsList200Response,
    FeedsList200ResponseFromJSON,
    FeedsList200ResponseToJSON,
    FeedsUpdateRequest,
    FeedsUpdateRequestFromJSON,
    FeedsUpdateRequestToJSON,
    ItemsBatchPostRequest,
    ItemsBatchPostRequestFromJSON,
    ItemsBatchPostRequestToJSON,
    ItemsIssuesList200Response,
    ItemsIssuesList200ResponseFromJSON,
    ItemsIssuesList200ResponseToJSON,
    MultipleProductGroupsInner,
    MultipleProductGroupsInnerFromJSON,
    MultipleProductGroupsInnerToJSON,
    ReportsStats200Response,
    ReportsStats200ResponseFromJSON,
    ReportsStats200ResponseToJSON,
} from '../models';

export interface CatalogsCreateRequest {
    catalogsCreateRequest: CatalogsCreateRequest;
    adAccountId?: string;
}

export interface CatalogsListRequest {
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface CatalogsProductGroupPinsListRequest {
    productGroupId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
    pinMetrics?: boolean;
}

export interface CatalogsProductGroupsCreateRequest {
    multipleProductGroupsInner: MultipleProductGroupsInner;
    adAccountId?: string;
}

export interface CatalogsProductGroupsCreateManyRequest {
    multipleProductGroupsInner: Array<MultipleProductGroupsInner>;
    adAccountId?: string;
}

export interface CatalogsProductGroupsDeleteRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsDeleteManyRequest {
    id: Array<number>;
    adAccountId?: string;
}

export interface CatalogsProductGroupsGetRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsListRequest {
    id?: Array<number>;
    feedId?: string;
    catalogId?: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface CatalogsProductGroupsProductCountsGetRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsUpdateRequest {
    productGroupId: string;
    catalogsProductGroupsUpdateRequest: CatalogsProductGroupsUpdateRequest;
    adAccountId?: string;
}

export interface FeedProcessingResultsListRequest {
    feedId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface FeedsCreateRequest {
    feedsCreateRequest: FeedsCreateRequest;
    adAccountId?: string;
}

export interface FeedsDeleteRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsGetRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsIngestRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsListRequest {
    bookmark?: string;
    pageSize?: number;
    catalogId?: string;
    adAccountId?: string;
}

export interface FeedsUpdateRequest {
    feedId: string;
    feedsUpdateRequest: FeedsUpdateRequest;
    adAccountId?: string;
}

export interface ItemsBatchGetRequest {
    batchId: string;
    adAccountId?: string;
}

export interface ItemsBatchPostRequest {
    catalogsVerticalBatchRequestCatalogsItemsBatchRequest: CatalogsVerticalBatchRequest | CatalogsItemsBatchRequest;
    adAccountId?: string;
}

export interface ItemsGetRequest {
    country: string;
    language: string;
    adAccountId?: string;
    itemIds?: Array<string>;
    filters?: CatalogsItemsFilters;
}

export interface ItemsIssuesListRequest {
    processingResultId: string;
    bookmark?: string;
    pageSize?: number;
    itemNumbers?: Array<number>;
    itemValidationIssue?: CatalogsItemValidationIssue;
    adAccountId?: string;
}

export interface ItemsPostRequest {
    catalogsItemsRequest: CatalogsItemsRequest;
    adAccountId?: string;
}

export interface ProductsByProductGroupFilterListRequest {
    catalogsListProductsByFilterRequest: CatalogsListProductsByFilterRequest;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
    pinMetrics?: boolean;
}

export interface ReportsCreateRequest {
    catalogsReportParameters: CatalogsReportParameters;
    adAccountId?: string;
}

export interface ReportsGetRequest {
    token: string;
    adAccountId?: string;
}

export interface ReportsStatsRequest {
    parameters: CatalogsReportParameters;
    adAccountId?: string;
    pageSize?: number;
    bookmark?: string;
}


/**
 * Create a new catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: this API only supports the catalog type of HOTEL for now.
 * Create catalog
 */
function catalogsCreateRaw<T>(requestParameters: CatalogsCreateRequest, requestConfig: runtime.TypedQueryConfig<T, Catalog> = {}): QueryConfig<T> {
    if (requestParameters.catalogsCreateRequest === null || requestParameters.catalogsCreateRequest === undefined) {
        throw new runtime.RequiredError('catalogsCreateRequest','Required parameter requestParameters.catalogsCreateRequest was null or undefined when calling catalogsCreate.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || CatalogsCreateRequestToJSON(requestParameters.catalogsCreateRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogFromJSON(body), text);
    }

    return config;
}

/**
* Create a new catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: this API only supports the catalog type of HOTEL for now.
* Create catalog
*/
export function catalogsCreate<T>(requestParameters: CatalogsCreateRequest, requestConfig?: runtime.TypedQueryConfig<T, Catalog>): QueryConfig<T> {
    return catalogsCreateRaw(requestParameters, requestConfig);
}

/**
 * Fetch catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * List catalogs
 */
function catalogsListRaw<T>(requestParameters: CatalogsListRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsList200Response> = {}): QueryConfig<T> {
    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* Fetch catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* List catalogs
*/
export function catalogsList<T>(requestParameters: CatalogsListRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsList200Response>): QueryConfig<T> {
    return catalogsListRaw(requestParameters, requestConfig);
}

/**
 * Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * List products by product group
 */
function catalogsProductGroupPinsListRaw<T>(requestParameters: CatalogsProductGroupPinsListRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsProductGroupPinsList200Response> = {}): QueryConfig<T> {
    if (requestParameters.productGroupId === null || requestParameters.productGroupId === undefined) {
        throw new runtime.RequiredError('productGroupId','Required parameter requestParameters.productGroupId was null or undefined when calling catalogsProductGroupPinsList.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }


    if (requestParameters.pinMetrics !== undefined) {
        queryParameters['pin_metrics'] = requestParameters.pinMetrics;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["boards:read", "catalogs:read", "pins:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/{product_group_id}/products`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters.productGroupId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsProductGroupPinsList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* List products by product group
*/
export function catalogsProductGroupPinsList<T>(requestParameters: CatalogsProductGroupPinsListRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsProductGroupPinsList200Response>): QueryConfig<T> {
    return catalogsProductGroupPinsListRaw(requestParameters, requestConfig);
}

/**
 * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Create product group
 */
function catalogsProductGroupsCreateRaw<T>(requestParameters: CatalogsProductGroupsCreateRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsVerticalProductGroup> = {}): QueryConfig<T> {
    if (requestParameters.multipleProductGroupsInner === null || requestParameters.multipleProductGroupsInner === undefined) {
        throw new runtime.RequiredError('multipleProductGroupsInner','Required parameter requestParameters.multipleProductGroupsInner was null or undefined when calling catalogsProductGroupsCreate.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || MultipleProductGroupsInnerToJSON(requestParameters.multipleProductGroupsInner),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsVerticalProductGroupFromJSON(body), text);
    }

    return config;
}

/**
* Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Create product group
*/
export function catalogsProductGroupsCreate<T>(requestParameters: CatalogsProductGroupsCreateRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsVerticalProductGroup>): QueryConfig<T> {
    return catalogsProductGroupsCreateRaw(requestParameters, requestConfig);
}

/**
 * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Create product groups
 */
function catalogsProductGroupsCreateManyRaw<T>(requestParameters: CatalogsProductGroupsCreateManyRequest, requestConfig: runtime.TypedQueryConfig<T, Array<string>> = {}): QueryConfig<T> {
    if (requestParameters.multipleProductGroupsInner === null || requestParameters.multipleProductGroupsInner === undefined) {
        throw new runtime.RequiredError('multipleProductGroupsInner','Required parameter requestParameters.multipleProductGroupsInner was null or undefined when calling catalogsProductGroupsCreateMany.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/multiple`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || requestParameters.multipleProductGroupsInner?.map(MultipleProductGroupsInnerToJSON),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
    }

    return config;
}

/**
* Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Create product groups
*/
export function catalogsProductGroupsCreateMany<T>(requestParameters: CatalogsProductGroupsCreateManyRequest, requestConfig?: runtime.TypedQueryConfig<T, Array<string>>): QueryConfig<T> {
    return catalogsProductGroupsCreateManyRaw(requestParameters, requestConfig);
}

/**
 * Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * Delete product group
 */
function catalogsProductGroupsDeleteRaw<T>(requestParameters: CatalogsProductGroupsDeleteRequest, requestConfig: runtime.TypedQueryConfig<T, void> = {}): QueryConfig<T> {
    if (requestParameters.productGroupId === null || requestParameters.productGroupId === undefined) {
        throw new runtime.RequiredError('productGroupId','Required parameter requestParameters.productGroupId was null or undefined when calling catalogsProductGroupsDelete.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/{product_group_id}`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters.productGroupId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'DELETE',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
    }

    return config;
}

/**
* Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* Delete product group
*/
export function catalogsProductGroupsDelete<T>(requestParameters: CatalogsProductGroupsDeleteRequest, requestConfig?: runtime.TypedQueryConfig<T, void>): QueryConfig<T> {
    return catalogsProductGroupsDeleteRaw(requestParameters, requestConfig);
}

/**
 * Delete product groups owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * Delete product groups
 */
function catalogsProductGroupsDeleteManyRaw<T>(requestParameters: CatalogsProductGroupsDeleteManyRequest, requestConfig: runtime.TypedQueryConfig<T, void> = {}): QueryConfig<T> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
        throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling catalogsProductGroupsDeleteMany.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.id) {
        queryParameters['id'] = requestParameters.id?.join(runtime.COLLECTION_FORMATS["csv"]);
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/multiple`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'DELETE',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
    }

    return config;
}

/**
* Delete product groups owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* Delete product groups
*/
export function catalogsProductGroupsDeleteMany<T>(requestParameters: CatalogsProductGroupsDeleteManyRequest, requestConfig?: runtime.TypedQueryConfig<T, void>): QueryConfig<T> {
    return catalogsProductGroupsDeleteManyRaw(requestParameters, requestConfig);
}

/**
 * Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * Get product group
 */
function catalogsProductGroupsGetRaw<T>(requestParameters: CatalogsProductGroupsGetRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsVerticalProductGroup> = {}): QueryConfig<T> {
    if (requestParameters.productGroupId === null || requestParameters.productGroupId === undefined) {
        throw new runtime.RequiredError('productGroupId','Required parameter requestParameters.productGroupId was null or undefined when calling catalogsProductGroupsGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/{product_group_id}`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters.productGroupId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsVerticalProductGroupFromJSON(body), text);
    }

    return config;
}

/**
* Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* Get product group
*/
export function catalogsProductGroupsGet<T>(requestParameters: CatalogsProductGroupsGetRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsVerticalProductGroup>): QueryConfig<T> {
    return catalogsProductGroupsGetRaw(requestParameters, requestConfig);
}

/**
 * Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * List product groups
 */
function catalogsProductGroupsListRaw<T>(requestParameters: CatalogsProductGroupsListRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsProductGroupsList200Response> = {}): QueryConfig<T> {
    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.id) {
        queryParameters['id'] = requestParameters.id?.join(runtime.COLLECTION_FORMATS["csv"]);
    }


    if (requestParameters.feedId !== undefined) {
        queryParameters['feed_id'] = requestParameters.feedId;
    }


    if (requestParameters.catalogId !== undefined) {
        queryParameters['catalog_id'] = requestParameters.catalogId;
    }


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsProductGroupsList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* List product groups
*/
export function catalogsProductGroupsList<T>(requestParameters: CatalogsProductGroupsListRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsProductGroupsList200Response>): QueryConfig<T> {
    return catalogsProductGroupsListRaw(requestParameters, requestConfig);
}

/**
 * Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * Get product counts
 */
function catalogsProductGroupsProductCountsGetRaw<T>(requestParameters: CatalogsProductGroupsProductCountsGetRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsProductGroupProductCountsVertical> = {}): QueryConfig<T> {
    if (requestParameters.productGroupId === null || requestParameters.productGroupId === undefined) {
        throw new runtime.RequiredError('productGroupId','Required parameter requestParameters.productGroupId was null or undefined when calling catalogsProductGroupsProductCountsGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/{product_group_id}/product_counts`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters.productGroupId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsProductGroupProductCountsVerticalFromJSON(body), text);
    }

    return config;
}

/**
* Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* Get product counts
*/
export function catalogsProductGroupsProductCountsGet<T>(requestParameters: CatalogsProductGroupsProductCountsGetRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsProductGroupProductCountsVertical>): QueryConfig<T> {
    return catalogsProductGroupsProductCountsGetRaw(requestParameters, requestConfig);
}

/**
 * Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Update single product group
 */
function catalogsProductGroupsUpdateRaw<T>(requestParameters: CatalogsProductGroupsUpdateRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsVerticalProductGroup> = {}): QueryConfig<T> {
    if (requestParameters.productGroupId === null || requestParameters.productGroupId === undefined) {
        throw new runtime.RequiredError('productGroupId','Required parameter requestParameters.productGroupId was null or undefined when calling catalogsProductGroupsUpdate.');
    }

    if (requestParameters.catalogsProductGroupsUpdateRequest === null || requestParameters.catalogsProductGroupsUpdateRequest === undefined) {
        throw new runtime.RequiredError('catalogsProductGroupsUpdateRequest','Required parameter requestParameters.catalogsProductGroupsUpdateRequest was null or undefined when calling catalogsProductGroupsUpdate.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/product_groups/{product_group_id}`.replace(`{${"product_group_id"}}`, encodeURIComponent(String(requestParameters.productGroupId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'PATCH',
            headers: headerParameters,
        },
        body: queryParameters || CatalogsProductGroupsUpdateRequestToJSON(requestParameters.catalogsProductGroupsUpdateRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsVerticalProductGroupFromJSON(body), text);
    }

    return config;
}

/**
* Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Update single product group
*/
export function catalogsProductGroupsUpdate<T>(requestParameters: CatalogsProductGroupsUpdateRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsVerticalProductGroup>): QueryConfig<T> {
    return catalogsProductGroupsUpdateRaw(requestParameters, requestConfig);
}

/**
 * Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * List feed processing results
 */
function feedProcessingResultsListRaw<T>(requestParameters: FeedProcessingResultsListRequest, requestConfig: runtime.TypedQueryConfig<T, FeedProcessingResultsList200Response> = {}): QueryConfig<T> {
    if (requestParameters.feedId === null || requestParameters.feedId === undefined) {
        throw new runtime.RequiredError('feedId','Required parameter requestParameters.feedId was null or undefined when calling feedProcessingResultsList.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds/{feed_id}/processing_results`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters.feedId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(FeedProcessingResultsList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* List feed processing results
*/
export function feedProcessingResultsList<T>(requestParameters: FeedProcessingResultsListRequest, requestConfig?: runtime.TypedQueryConfig<T, FeedProcessingResultsList200Response>): QueryConfig<T> {
    return feedProcessingResultsListRaw(requestParameters, requestConfig);
}

/**
 * Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Create feed
 */
function feedsCreateRaw<T>(requestParameters: FeedsCreateRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsFeed> = {}): QueryConfig<T> {
    if (requestParameters.feedsCreateRequest === null || requestParameters.feedsCreateRequest === undefined) {
        throw new runtime.RequiredError('feedsCreateRequest','Required parameter requestParameters.feedsCreateRequest was null or undefined when calling feedsCreate.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || FeedsCreateRequestToJSON(requestParameters.feedsCreateRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsFeedFromJSON(body), text);
    }

    return config;
}

/**
* Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Create feed
*/
export function feedsCreate<T>(requestParameters: FeedsCreateRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsFeed>): QueryConfig<T> {
    return feedsCreateRaw(requestParameters, requestConfig);
}

/**
 * Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
 * Delete feed
 */
function feedsDeleteRaw<T>(requestParameters: FeedsDeleteRequest, requestConfig: runtime.TypedQueryConfig<T, void> = {}): QueryConfig<T> {
    if (requestParameters.feedId === null || requestParameters.feedId === undefined) {
        throw new runtime.RequiredError('feedId','Required parameter requestParameters.feedId was null or undefined when calling feedsDelete.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds/{feed_id}`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters.feedId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'DELETE',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
    }

    return config;
}

/**
* Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
* Delete feed
*/
export function feedsDelete<T>(requestParameters: FeedsDeleteRequest, requestConfig?: runtime.TypedQueryConfig<T, void>): QueryConfig<T> {
    return feedsDeleteRaw(requestParameters, requestConfig);
}

/**
 * Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
 * Get feed
 */
function feedsGetRaw<T>(requestParameters: FeedsGetRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsFeed> = {}): QueryConfig<T> {
    if (requestParameters.feedId === null || requestParameters.feedId === undefined) {
        throw new runtime.RequiredError('feedId','Required parameter requestParameters.feedId was null or undefined when calling feedsGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds/{feed_id}`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters.feedId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsFeedFromJSON(body), text);
    }

    return config;
}

/**
* Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
* Get feed
*/
export function feedsGet<T>(requestParameters: FeedsGetRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsFeed>): QueryConfig<T> {
    return feedsGetRaw(requestParameters, requestConfig);
}

/**
 * Ingest items for a given feed owned by the \"operation user_account\".  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Ingest feed items
 */
function feedsIngestRaw<T>(requestParameters: FeedsIngestRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsFeedIngestion> = {}): QueryConfig<T> {
    if (requestParameters.feedId === null || requestParameters.feedId === undefined) {
        throw new runtime.RequiredError('feedId','Required parameter requestParameters.feedId was null or undefined when calling feedsIngest.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds/{feed_id}/ingest`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters.feedId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsFeedIngestionFromJSON(body), text);
    }

    return config;
}

/**
* Ingest items for a given feed owned by the \"operation user_account\".  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Ingest feed items
*/
export function feedsIngest<T>(requestParameters: FeedsIngestRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsFeedIngestion>): QueryConfig<T> {
    return feedsIngestRaw(requestParameters, requestConfig);
}

/**
 * Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
 * List feeds
 */
function feedsListRaw<T>(requestParameters: FeedsListRequest, requestConfig: runtime.TypedQueryConfig<T, FeedsList200Response> = {}): QueryConfig<T> {
    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.catalogId !== undefined) {
        queryParameters['catalog_id'] = requestParameters.catalogId;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(FeedsList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
* List feeds
*/
export function feedsList<T>(requestParameters: FeedsListRequest, requestConfig?: runtime.TypedQueryConfig<T, FeedsList200Response>): QueryConfig<T> {
    return feedsListRaw(requestParameters, requestConfig);
}

/**
 * Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Update feed
 */
function feedsUpdateRaw<T>(requestParameters: FeedsUpdateRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsFeed> = {}): QueryConfig<T> {
    if (requestParameters.feedId === null || requestParameters.feedId === undefined) {
        throw new runtime.RequiredError('feedId','Required parameter requestParameters.feedId was null or undefined when calling feedsUpdate.');
    }

    if (requestParameters.feedsUpdateRequest === null || requestParameters.feedsUpdateRequest === undefined) {
        throw new runtime.RequiredError('feedsUpdateRequest','Required parameter requestParameters.feedsUpdateRequest was null or undefined when calling feedsUpdate.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/feeds/{feed_id}`.replace(`{${"feed_id"}}`, encodeURIComponent(String(requestParameters.feedId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'PATCH',
            headers: headerParameters,
        },
        body: queryParameters || FeedsUpdateRequestToJSON(requestParameters.feedsUpdateRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsFeedFromJSON(body), text);
    }

    return config;
}

/**
* Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Update feed
*/
export function feedsUpdate<T>(requestParameters: FeedsUpdateRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsFeed>): QueryConfig<T> {
    return feedsUpdateRaw(requestParameters, requestConfig);
}

/**
 * Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
 * Get item batch status
 */
function itemsBatchGetRaw<T>(requestParameters: ItemsBatchGetRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsItemsBatch> = {}): QueryConfig<T> {
    if (requestParameters.batchId === null || requestParameters.batchId === undefined) {
        throw new runtime.RequiredError('batchId','Required parameter requestParameters.batchId was null or undefined when calling itemsBatchGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/items/batch/{batch_id}`.replace(`{${"batch_id"}}`, encodeURIComponent(String(requestParameters.batchId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsItemsBatchFromJSON(body), text);
    }

    return config;
}

/**
* Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
* Get item batch status
*/
export function itemsBatchGet<T>(requestParameters: ItemsBatchGetRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsItemsBatch>): QueryConfig<T> {
    return itemsBatchGetRaw(requestParameters, requestConfig);
}

/**
 * This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
 * Operate on item batch
 */
function itemsBatchPostRaw<T>(requestParameters: ItemsBatchPostRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsItemsBatch> = {}): QueryConfig<T> {
    if (requestParameters.catalogsVerticalBatchRequestCatalogsItemsBatchRequest === null || requestParameters.catalogsVerticalBatchRequestCatalogsItemsBatchRequest === undefined) {
        throw new runtime.RequiredError('catalogsVerticalBatchRequestCatalogsItemsBatchRequest','Required parameter requestParameters.catalogsVerticalBatchRequestCatalogsItemsBatchRequest was null or undefined when calling itemsBatchPost.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    meta.authType = ['oauth', ["catalogs:read", "catalogs:write"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/items/batch`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || CatalogsVerticalBatchRequest | CatalogsItemsBatchRequestToJSON(requestParameters.catalogsVerticalBatchRequestCatalogsItemsBatchRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsItemsBatchFromJSON(body), text);
    }

    return config;
}

/**
* This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
* Operate on item batch
*/
export function itemsBatchPost<T>(requestParameters: ItemsBatchPostRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsItemsBatch>): QueryConfig<T> {
    return itemsBatchPostRaw(requestParameters, requestConfig);
}

/**
 * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use <a href=\'/docs/api/v5/#operation/items/post\'>Get catalogs items (POST)</a> instead.
 * Get catalogs items
 */
function itemsGetRaw<T>(requestParameters: ItemsGetRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsItems> = {}): QueryConfig<T> {
    if (requestParameters.country === null || requestParameters.country === undefined) {
        throw new runtime.RequiredError('country','Required parameter requestParameters.country was null or undefined when calling itemsGet.');
    }

    if (requestParameters.language === null || requestParameters.language === undefined) {
        throw new runtime.RequiredError('language','Required parameter requestParameters.language was null or undefined when calling itemsGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }


    if (requestParameters.country !== undefined) {
        queryParameters['country'] = requestParameters.country;
    }


    if (requestParameters.language !== undefined) {
        queryParameters['language'] = requestParameters.language;
    }


    if (requestParameters.itemIds) {
        queryParameters['item_ids'] = requestParameters.itemIds;
    }


    if (requestParameters.filters !== undefined) {
        queryParameters['filters'] = requestParameters.filters;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/items`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsItemsFromJSON(body), text);
    }

    return config;
}

/**
* Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use <a href=\'/docs/api/v5/#operation/items/post\'>Get catalogs items (POST)</a> instead.
* Get catalogs items
*/
export function itemsGet<T>(requestParameters: ItemsGetRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsItems>): QueryConfig<T> {
    return itemsGetRaw(requestParameters, requestConfig);
}

/**
 * List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters \'item_numbers\' and \'item_validation_issue\' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a> and <a href=\'/docs/api/v5/#operation/reports/get\'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * List item issues
 */
function itemsIssuesListRaw<T>(requestParameters: ItemsIssuesListRequest, requestConfig: runtime.TypedQueryConfig<T, ItemsIssuesList200Response> = {}): QueryConfig<T> {
    if (requestParameters.processingResultId === null || requestParameters.processingResultId === undefined) {
        throw new runtime.RequiredError('processingResultId','Required parameter requestParameters.processingResultId was null or undefined when calling itemsIssuesList.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.itemNumbers) {
        queryParameters['item_numbers'] = requestParameters.itemNumbers;
    }


    if (requestParameters.itemValidationIssue !== undefined) {
        queryParameters['item_validation_issue'] = requestParameters.itemValidationIssue;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/processing_results/{processing_result_id}/item_issues`.replace(`{${"processing_result_id"}}`, encodeURIComponent(String(requestParameters.processingResultId))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(ItemsIssuesList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters \'item_numbers\' and \'item_validation_issue\' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a> and <a href=\'/docs/api/v5/#operation/reports/get\'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* List item issues
*/
export function itemsIssuesList<T>(requestParameters: ItemsIssuesListRequest, requestConfig?: runtime.TypedQueryConfig<T, ItemsIssuesList200Response>): QueryConfig<T> {
    return itemsIssuesListRaw(requestParameters, requestConfig);
}

/**
 * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
 * Get catalogs items (POST)
 */
function itemsPostRaw<T>(requestParameters: ItemsPostRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsItems> = {}): QueryConfig<T> {
    if (requestParameters.catalogsItemsRequest === null || requestParameters.catalogsItemsRequest === undefined) {
        throw new runtime.RequiredError('catalogsItemsRequest','Required parameter requestParameters.catalogsItemsRequest was null or undefined when calling itemsPost.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/items`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || CatalogsItemsRequestToJSON(requestParameters.catalogsItemsRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsItemsFromJSON(body), text);
    }

    return config;
}

/**
* Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
* Get catalogs items (POST)
*/
export function itemsPost<T>(requestParameters: ItemsPostRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsItems>): QueryConfig<T> {
    return itemsPostRaw(requestParameters, requestConfig);
}

/**
 * List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
 * List products by filter
 */
function productsByProductGroupFilterListRaw<T>(requestParameters: ProductsByProductGroupFilterListRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsProductGroupPinsList200Response> = {}): QueryConfig<T> {
    if (requestParameters.catalogsListProductsByFilterRequest === null || requestParameters.catalogsListProductsByFilterRequest === undefined) {
        throw new runtime.RequiredError('catalogsListProductsByFilterRequest','Required parameter requestParameters.catalogsListProductsByFilterRequest was null or undefined when calling productsByProductGroupFilterList.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }


    if (requestParameters.pinMetrics !== undefined) {
        queryParameters['pin_metrics'] = requestParameters.pinMetrics;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["boards:read", "catalogs:read", "pins:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/products/get_by_product_group_filters`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || CatalogsListProductsByFilterRequestToJSON(requestParameters.catalogsListProductsByFilterRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsProductGroupPinsList200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
* List products by filter
*/
export function productsByProductGroupFilterList<T>(requestParameters: ProductsByProductGroupFilterListRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsProductGroupPinsList200Response>): QueryConfig<T> {
    return productsByProductGroupFilterListRaw(requestParameters, requestConfig);
}

/**
 * Async request to create a report of the catalog owned by the \"operation user_account\". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
 * Build catalogs report
 */
function reportsCreateRaw<T>(requestParameters: ReportsCreateRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsCreateReportResponse> = {}): QueryConfig<T> {
    if (requestParameters.catalogsReportParameters === null || requestParameters.catalogsReportParameters === undefined) {
        throw new runtime.RequiredError('catalogsReportParameters','Required parameter requestParameters.catalogsReportParameters was null or undefined when calling reportsCreate.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }

    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/reports`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || CatalogsReportParametersToJSON(requestParameters.catalogsReportParameters),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsCreateReportResponseFromJSON(body), text);
    }

    return config;
}

/**
* Async request to create a report of the catalog owned by the \"operation user_account\". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
* Build catalogs report
*/
export function reportsCreate<T>(requestParameters: ReportsCreateRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsCreateReportResponse>): QueryConfig<T> {
    return reportsCreateRaw(requestParameters, requestConfig);
}

/**
 * This returns a URL to a report given a token returned from <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a>. You can use the URL to download the report. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
 * Get catalogs report
 */
function reportsGetRaw<T>(requestParameters: ReportsGetRequest, requestConfig: runtime.TypedQueryConfig<T, CatalogsReport> = {}): QueryConfig<T> {
    if (requestParameters.token === null || requestParameters.token === undefined) {
        throw new runtime.RequiredError('token','Required parameter requestParameters.token was null or undefined when calling reportsGet.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }


    if (requestParameters.token !== undefined) {
        queryParameters['token'] = requestParameters.token;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/reports`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(CatalogsReportFromJSON(body), text);
    }

    return config;
}

/**
* This returns a URL to a report given a token returned from <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a>. You can use the URL to download the report. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
* Get catalogs report
*/
export function reportsGet<T>(requestParameters: ReportsGetRequest, requestConfig?: runtime.TypedQueryConfig<T, CatalogsReport>): QueryConfig<T> {
    return reportsGetRaw(requestParameters, requestConfig);
}

/**
 * List aggregated numbers of issues for a catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
 * List report stats
 */
function reportsStatsRaw<T>(requestParameters: ReportsStatsRequest, requestConfig: runtime.TypedQueryConfig<T, ReportsStats200Response> = {}): QueryConfig<T> {
    if (requestParameters.parameters === null || requestParameters.parameters === undefined) {
        throw new runtime.RequiredError('parameters','Required parameter requestParameters.parameters was null or undefined when calling reportsStats.');
    }

    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.adAccountId !== undefined) {
        queryParameters['ad_account_id'] = requestParameters.adAccountId;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['page_size'] = requestParameters.pageSize;
    }


    if (requestParameters.bookmark !== undefined) {
        queryParameters['bookmark'] = requestParameters.bookmark;
    }


    if (requestParameters.parameters !== undefined) {
        queryParameters['parameters'] = requestParameters.parameters;
    }

    const headerParameters : runtime.HttpHeaders = {};


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["catalogs:read"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/catalogs/reports/stats`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(ReportsStats200ResponseFromJSON(body), text);
    }

    return config;
}

/**
* List aggregated numbers of issues for a catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
* List report stats
*/
export function reportsStats<T>(requestParameters: ReportsStatsRequest, requestConfig?: runtime.TypedQueryConfig<T, ReportsStats200Response>): QueryConfig<T> {
    return reportsStatsRaw(requestParameters, requestConfig);
}

