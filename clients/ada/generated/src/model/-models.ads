--  Pinterest REST API
--  Pinterest's REST API
--
--  The version of the OpenAPI document: 5.14.0
--  Contact: blah+oapicf@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.9.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is
   pragma Style_Checks ("-bmrIu");



   type Account_Type is
     record
       Account_Type : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
       Profile_Image : Swagger.Nullable_UString;
       Website_Url : Swagger.Nullable_UString;
       Username : Swagger.Nullable_UString;
       About : Swagger.Nullable_UString;
       Business_Name : Swagger.Nullable_UString;
       Board_Count : Swagger.Nullable_Integer;
       Pin_Count : Swagger.Nullable_Integer;
       Follower_Count : Swagger.Nullable_Integer;
       Following_Count : Swagger.Nullable_Integer;
       Monthly_Views : Swagger.Nullable_Integer;
     end record;


   package Account_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Account_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Account_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Account_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Account_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Account_Type_Vectors.Vector);



   type ActionType_Type is (CLICKTHROUGH,IMPRESSION,VIDEO_V_50_MRC);

   function To_ActionType_Type (Value : in String) return .Models.ActionType_Type;

   function To_String (Value : in ActionType_Type) return String;


   package ActionType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ActionType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ActionType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ActionType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ActionType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ActionType_Type_Vectors.Vector);



   type AdAccountAnalyticsResponseInner_Type is
     record
       AD_ACCOUNT_ID : Swagger.UString;
       DATE : Swagger.Nullable_Date;
     end record;


   package AdAccountAnalyticsResponseInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountAnalyticsResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountAnalyticsResponseInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountAnalyticsResponseInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountAnalyticsResponseInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountAnalyticsResponseInner_Type_Vectors.Vector);



   type AdAccountCreateSubscriptionRequestPartnerMetadata_Type is
     record
       Subscriber_Key : Swagger.Nullable_UString;
     end record;


   package AdAccountCreateSubscriptionRequestPartnerMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountCreateSubscriptionRequestPartnerMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountCreateSubscriptionRequestPartnerMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountCreateSubscriptionRequestPartnerMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountCreateSubscriptionRequestPartnerMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountCreateSubscriptionRequestPartnerMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  AdAccountCreateSubscriptionResponse
   --  ------------------------------
   type AdAccountCreateSubscriptionResponse_Type is
     record
       Id : Swagger.Nullable_UString;
       Cryptographic_Key : Swagger.Nullable_UString;
       Cryptographic_Algorithm : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
     end record;


   package AdAccountCreateSubscriptionResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountCreateSubscriptionResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountCreateSubscriptionResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountCreateSubscriptionResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountCreateSubscriptionResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountCreateSubscriptionResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  AdAccountGetSubscriptionsResponse
   --  ------------------------------
   type AdAccountGetSubscriptionResponse_Type is
     record
       Lead_Form_Id : Swagger.Nullable_UString;
       Webhook_Url : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
       User_Account_Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Api_Version : Swagger.Nullable_UString;
       Cryptographic_Key : Swagger.Nullable_UString;
       Cryptographic_Algorithm : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
     end record;


   package AdAccountGetSubscriptionResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountGetSubscriptionResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountGetSubscriptionResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountGetSubscriptionResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountGetSubscriptionResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountGetSubscriptionResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  Ad account owner
   --  ------------------------------
   type AdAccountOwner_Type is
     record
       Username : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
     end record;


   package AdAccountOwner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountOwner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountOwner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountOwner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountOwner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountOwner_Type_Vectors.Vector);



   type AdAccountsCountryResponseData_Type is
     record
       Code : AdCountry_Type;
       Currency : Swagger.Nullable_UString;
       Index : Swagger.Number;
       Name : Swagger.Nullable_UString;
     end record;


   package AdAccountsCountryResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountsCountryResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountsCountryResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountsCountryResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountsCountryResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountsCountryResponseData_Type_Vectors.Vector);



   type AdCountry_Type is (AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH,ER,ES,ET,FI,FJ,FK,FM,FO,FR,GA,GB,GD,GE,GF,GG,GH,GI,GL,GM,GN,GP,GQ,GR,GS,GT,GU,GW,GY,HK,HM,HN,HR,HT,HU,ID,IE,IL,IM,IN,IO,IQ,IR,IS,IT,JE,JM,JO,JP,KE,KG,KH,KI,KM,KN,KR,KW,KY,KZ,LA,LB,LC,LI,LK,LR,LS,LT,LU,LV,LY,MA,MC,MD,ME,MF,MG,MH,MK,ML,MM,MN,MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ,NA,NC,NE,NF,NG,NI,NL,NO,NP,NR,NU,NZ,OM,PA,PE,PF,PG,PH,PK,PL,PM,PN,PR,PS,PT,PW,PY,QA,RE,RO,RS,RU,RW,SA,SB,SC,SD,SE,SG,SH,SI,SJ,SK,SL,SM,SN,SO,SR,SS,ST,SV,SX,SY,SZ,TC,TD,TF,TG,TH,TJ,TK,TL,TM,TN,TO,TR,TT,TV,TW,TZ,UA,UG,UM,US,UY,UZ,VA,VC,VE,VG,VI,VN,VU,WF,WS,YE,YT,ZA,ZM,ZW);

   function To_AdCountry_Type (Value : in String) return .Models.AdCountry_Type;

   function To_String (Value : in AdCountry_Type) return String;


   package AdCountry_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdCountry_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdCountry_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdCountry_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdCountry_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdCountry_Type_Vectors.Vector);



   type AdGroupAudienceSizingResponse_Type is
     record
       Audience_Size_Lower_Bound : Swagger.Number;
       Audience_Size_Upper_Bound : Swagger.Number;
     end record;


   package AdGroupAudienceSizingResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupAudienceSizingResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupAudienceSizingResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupAudienceSizingResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupAudienceSizingResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupAudienceSizingResponse_Type_Vectors.Vector);



   type AdGroupSummaryStatus_Type is (RUNNING,PAUSED,NOT_STARTED,COMPLETED,ADVERTISER_DISABLED,ARCHIVED,DRAFT,DELETED_DRAFT);

   function To_AdGroupSummaryStatus_Type (Value : in String) return .Models.AdGroupSummaryStatus_Type;

   function To_String (Value : in AdGroupSummaryStatus_Type) return String;


   package AdGroupSummaryStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupSummaryStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupSummaryStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupSummaryStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupSummaryStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupSummaryStatus_Type_Vectors.Vector);



   type AdGroupsAnalyticsResponseInner_Type is
     record
       AD_GROUP_ID : Swagger.UString;
       DATE : Swagger.Nullable_Date;
     end record;


   package AdGroupsAnalyticsResponseInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupsAnalyticsResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupsAnalyticsResponseInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupsAnalyticsResponseInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupsAnalyticsResponseInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupsAnalyticsResponseInner_Type_Vectors.Vector);



   type AdPinId_Type is
     record
       Pin_Id : Swagger.Nullable_UString;
     end record;


   package AdPinId_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdPinId_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdPinId_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdPinId_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdPinId_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdPinId_Type_Vectors.Vector);


   --  ------------------------------
   --  AdPreviewCreateFromImage
   --  ------------------------------
   type AdPreviewCreateFromImage_Type is
     record
       Image_Url : Swagger.UString;
       Title : Swagger.UString;
     end record;


   package AdPreviewCreateFromImage_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdPreviewCreateFromImage_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdPreviewCreateFromImage_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdPreviewCreateFromImage_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdPreviewCreateFromImage_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdPreviewCreateFromImage_Type_Vectors.Vector);


   --  ------------------------------
   --  AdPreviewCreateFromPin
   --  ------------------------------
   type AdPreviewCreateFromPin_Type is
     record
       Pin_Id : Swagger.UString;
     end record;


   package AdPreviewCreateFromPin_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdPreviewCreateFromPin_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdPreviewCreateFromPin_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdPreviewCreateFromPin_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdPreviewCreateFromPin_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdPreviewCreateFromPin_Type_Vectors.Vector);



   type AdPreviewRequest_Type is
     record
       Image_Url : Swagger.UString;
       Title : Swagger.UString;
       Pin_Id : Swagger.UString;
     end record;


   package AdPreviewRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdPreviewRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdPreviewRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdPreviewRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdPreviewRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdPreviewRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  AdPreviewURLResponse
   --  ------------------------------
   type AdPreviewURLResponse_Type is
     record
       Url : Swagger.Nullable_UString;
     end record;


   package AdPreviewURLResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdPreviewURLResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdPreviewURLResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdPreviewURLResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdPreviewURLResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdPreviewURLResponse_Type_Vectors.Vector);



   type AdsAnalyticsAdTargetingType_Type is (KEYWORD,APPTYPE,GENDER,LOCATION,PLACEMENT,COUNTRY,TARGETED_INTEREST,PINNER_INTEREST,AUDIENCE_INCLUDE,GEO,AGE_BUCKET,REGION,QUIZ_RESULT,AGE_BUCKET_AND_GENDER);

   function To_AdsAnalyticsAdTargetingType_Type (Value : in String) return .Models.AdsAnalyticsAdTargetingType_Type;

   function To_String (Value : in AdsAnalyticsAdTargetingType_Type) return String;


   package AdsAnalyticsAdTargetingType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsAdTargetingType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsAdTargetingType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsAdTargetingType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsAdTargetingType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsAdTargetingType_Type_Vectors.Vector);



   type AdsAnalyticsCampaignTargetingType_Type is (KEYWORD,APPTYPE,GENDER,LOCATION,PLACEMENT,COUNTRY,TARGETED_INTEREST,PINNER_INTEREST,AUDIENCE_INCLUDE,GEO,AGE_BUCKET,REGION,CREATIVE_TYPE,AGE_BUCKET_AND_GENDER);

   function To_AdsAnalyticsCampaignTargetingType_Type (Value : in String) return .Models.AdsAnalyticsCampaignTargetingType_Type;

   function To_String (Value : in AdsAnalyticsCampaignTargetingType_Type) return String;


   package AdsAnalyticsCampaignTargetingType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsCampaignTargetingType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsCampaignTargetingType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsCampaignTargetingType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsCampaignTargetingType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsCampaignTargetingType_Type_Vectors.Vector);



   type AdsAnalyticsFilterColumn_Type is (SPEND_IN_DOLLAR,TOTAL_IMPRESSION);

   function To_AdsAnalyticsFilterColumn_Type (Value : in String) return .Models.AdsAnalyticsFilterColumn_Type;

   function To_String (Value : in AdsAnalyticsFilterColumn_Type) return String;


   package AdsAnalyticsFilterColumn_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsFilterColumn_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsFilterColumn_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsFilterColumn_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsFilterColumn_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsFilterColumn_Type_Vectors.Vector);



   type AdsAnalyticsFilterOperator_Type is (LESS_THAN,GREATER_THAN);

   function To_AdsAnalyticsFilterOperator_Type (Value : in String) return .Models.AdsAnalyticsFilterOperator_Type;

   function To_String (Value : in AdsAnalyticsFilterOperator_Type) return String;


   package AdsAnalyticsFilterOperator_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsFilterOperator_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsFilterOperator_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsFilterOperator_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsFilterOperator_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsFilterOperator_Type_Vectors.Vector);



   type AdsAnalyticsResponseInner_Type is
     record
       AD_ID : Swagger.UString;
       DATE : Swagger.Nullable_Date;
     end record;


   package AdsAnalyticsResponseInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsResponseInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsResponseInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsResponseInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsResponseInner_Type_Vectors.Vector);



   type AdsAnalyticsTargetingType_Type is (KEYWORD,APPTYPE,GENDER,LOCATION,PLACEMENT,COUNTRY,TARGETED_INTEREST,PINNER_INTEREST,AUDIENCE_INCLUDE,GEO,AGE_BUCKET,REGION,AGE_BUCKET_AND_GENDER);

   function To_AdsAnalyticsTargetingType_Type (Value : in String) return .Models.AdsAnalyticsTargetingType_Type;

   function To_String (Value : in AdsAnalyticsTargetingType_Type) return String;


   package AdsAnalyticsTargetingType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsTargetingType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsTargetingType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsTargetingType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsTargetingType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsTargetingType_Type_Vectors.Vector);



   type AdsCreditDiscountsResponse_Type is
     record
       Active : Swagger.Nullable_Boolean;
       Advertiser_Id : Swagger.Nullable_UString;
       Discount_Type : Swagger.Nullable_UString;
       Discount_In_Micro_Currency : Swagger.Number;
       Discount_Currency : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Remaining_Discount_In_Micro_Currency : Swagger.Number;
     end record;


   package AdsCreditDiscountsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsCreditDiscountsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsCreditDiscountsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsCreditDiscountsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsCreditDiscountsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsCreditDiscountsResponse_Type_Vectors.Vector);



   type AdsCreditRedeemRequest_Type is
     record
       Offer_Code_Hash : Swagger.UString;
       Validate_Only : Boolean;
     end record;


   package AdsCreditRedeemRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsCreditRedeemRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsCreditRedeemRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsCreditRedeemRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsCreditRedeemRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsCreditRedeemRequest_Type_Vectors.Vector);



   type AdsCreditRedeemResponse_Type is
     record
       Success : Swagger.Nullable_Boolean;
       Error_Code : Swagger.Nullable_Integer;
       Error_Message : Swagger.Nullable_UString;
     end record;


   package AdsCreditRedeemResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsCreditRedeemResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsCreditRedeemResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsCreditRedeemResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsCreditRedeemResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsCreditRedeemResponse_Type_Vectors.Vector);



   type AdvancedAuctionOperationError_Type is
     record
       Code : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
     end record;


   package AdvancedAuctionOperationError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionOperationError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionOperationError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionOperationError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionOperationError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionOperationError_Type_Vectors.Vector);



   type AdvancedAuctionOperation_Type is (UPSERT,DELETE);

   function To_AdvancedAuctionOperation_Type (Value : in String) return .Models.AdvancedAuctionOperation_Type;

   function To_String (Value : in AdvancedAuctionOperation_Type) return String;


   package AdvancedAuctionOperation_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionOperation_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionOperation_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionOperation_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionOperation_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionOperation_Type_Vectors.Vector);



   type AssetGroupType_Type is (BRAND,LOCATION_OR_LANGUAGE,PRODUCT_LINE,OTHER);

   function To_AssetGroupType_Type (Value : in String) return .Models.AssetGroupType_Type;

   function To_String (Value : in AssetGroupType_Type) return String;


   package AssetGroupType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AssetGroupType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AssetGroupType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AssetGroupType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AssetGroupType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AssetGroupType_Type_Vectors.Vector);



   type AssetTypeResponse_Type is new string;


   package AssetTypeResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AssetTypeResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AssetTypeResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AssetTypeResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AssetTypeResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AssetTypeResponse_Type_Vectors.Vector);



   type AudienceAccountType_Type is (AD_ACCOUNT,BUSINESS_ACCOUNT);

   function To_AudienceAccountType_Type (Value : in String) return .Models.AudienceAccountType_Type;

   function To_String (Value : in AudienceAccountType_Type) return String;


   package AudienceAccountType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceAccountType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceAccountType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceAccountType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceAccountType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceAccountType_Type_Vectors.Vector);



   type AudienceCreateRequest1AudienceType_Type is new AudienceType;


   package AudienceCreateRequest1AudienceType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceCreateRequest1AudienceType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceCreateRequest1AudienceType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceCreateRequest1AudienceType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceCreateRequest1AudienceType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceCreateRequest1AudienceType_Type_Vectors.Vector);



   type AudienceDataParty_Type is (_1P,_3P);

   function To_AudienceDataParty_Type (Value : in String) return .Models.AudienceDataParty_Type;

   function To_String (Value : in AudienceDataParty_Type) return String;


   package AudienceDataParty_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDataParty_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDataParty_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDataParty_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDataParty_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDataParty_Type_Vectors.Vector);



   type AudienceDefinitionScope_Type is new string;


   package AudienceDefinitionScope_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDefinitionScope_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDefinitionScope_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDefinitionScope_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDefinitionScope_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDefinitionScope_Type_Vectors.Vector);



   type AudienceDefinitionType_Type is new string;


   package AudienceDefinitionType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDefinitionType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDefinitionType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDefinitionType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDefinitionType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDefinitionType_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceDefinition
   --  Queryable audience representation.
   --  ------------------------------
   type AudienceDefinition_Type is
     record
       Date : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
       Scope : Swagger.Nullable_UString;
     end record;


   package AudienceDefinition_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDefinition_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDefinition_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDefinition_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDefinition_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDefinition_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceDemographicValue
   --  Demographic detail for a single audience demographic
   --  ------------------------------
   type AudienceDemographicValue_Type is
     record
       Key : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Ratio : Swagger.Number;
     end record;


   package AudienceDemographicValue_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDemographicValue_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDemographicValue_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDemographicValue_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDemographicValue_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDemographicValue_Type_Vectors.Vector);


   --  ------------------------------
   --  description
   --  Audience description.
   --  ------------------------------
   type AudienceDescription_Type is new string;


   package AudienceDescription_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDescription_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDescription_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDescription_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDescription_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDescription_Type_Vectors.Vector);



   type AudienceInsightCategoryCommon_Type is
     record
       Key : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Ratio : Swagger.Number;
       Index : Swagger.Number;
       Id : Swagger.Nullable_UString;
     end record;


   package AudienceInsightCategoryCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceInsightCategoryCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceInsightCategoryCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceInsightCategoryCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceInsightCategoryCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceInsightCategoryCommon_Type_Vectors.Vector);



   type AudienceInsightType_Type is (YOUR_TOTAL_AUDIENCE,YOUR_ENGAGED_AUDIENCE,PINTEREST_TOTAL_AUDIENCE);

   function To_AudienceInsightType_Type (Value : in String) return .Models.AudienceInsightType_Type;

   function To_String (Value : in AudienceInsightType_Type) return String;


   package AudienceInsightType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceInsightType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceInsightType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceInsightType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceInsightType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceInsightType_Type_Vectors.Vector);



   type AudienceShareType_Type is (SHARED,RECEIVED);

   function To_AudienceShareType_Type (Value : in String) return .Models.AudienceShareType_Type;

   function To_String (Value : in AudienceShareType_Type) return String;


   package AudienceShareType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceShareType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceShareType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceShareType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceShareType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceShareType_Type_Vectors.Vector);



   type AudienceSharingType_Type is (CUSTOM,SYNDICATED);

   function To_AudienceSharingType_Type (Value : in String) return .Models.AudienceSharingType_Type;

   function To_String (Value : in AudienceSharingType_Type) return String;


   package AudienceSharingType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceSharingType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceSharingType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceSharingType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceSharingType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceSharingType_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceSubcategory
   --  ------------------------------
   type AudienceSubcategory_Type is
     record
       Key : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Ratio : Swagger.Number;
       Index : Swagger.Number;
       Id : Swagger.Nullable_UString;
     end record;


   package AudienceSubcategory_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceSubcategory_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceSubcategory_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceSubcategory_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceSubcategory_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceSubcategory_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceType
   --  Audience type
   --  ------------------------------
   type AudienceType_Type is (CUSTOMER_LIST,VISITOR,ENGAGEMENT,ACTALIKE,PERSONA);

   function To_AudienceType_Type (Value : in String) return .Models.AudienceType_Type;

   function To_String (Value : in AudienceType_Type) return String;


   package AudienceType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceType_Type_Vectors.Vector);


   --  ------------------------------
   --  operation_type
   --  Audience operation type (update or remove).
   --  ------------------------------
   type AudienceUpdateOperationType_Type is (UPDATE,REMOVE);

   function To_AudienceUpdateOperationType_Type (Value : in String) return .Models.AudienceUpdateOperationType_Type;

   function To_String (Value : in AudienceUpdateOperationType_Type) return String;


   package AudienceUpdateOperationType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceUpdateOperationType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceUpdateOperationType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceUpdateOperationType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceUpdateOperationType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceUpdateOperationType_Type_Vectors.Vector);



   type AuthRespondInvitesBodyInvitesInnerAction_Type is
     record
       Accept_Invite : Boolean;
       Asset_Id_To_Permissions : Swagger..Models.Permissions_Type_Vectors.Vector_Map;
     end record;


   package AuthRespondInvitesBodyInvitesInnerAction_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AuthRespondInvitesBodyInvitesInnerAction_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AuthRespondInvitesBodyInvitesInnerAction_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AuthRespondInvitesBodyInvitesInnerAction_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AuthRespondInvitesBodyInvitesInnerAction_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AuthRespondInvitesBodyInvitesInnerAction_Type_Vectors.Vector);



   type AvailabilityFilter_Type is
     record
       AVAILABILITY : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package AvailabilityFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AvailabilityFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AvailabilityFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AvailabilityFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AvailabilityFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AvailabilityFilter_Type_Vectors.Vector);



   type BaseInviteDataResponseInviteData_Type is
     record
       Invite_Expiration : Swagger.Nullable_Integer;
       Invite_Status : Swagger.Nullable_UString;
       Invite_Type : Swagger.Nullable_UString;
       Last_Updated_Time : Swagger.Nullable_Integer;
       Sent_At : Swagger.Nullable_Integer;
     end record;


   package BaseInviteDataResponseInviteData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BaseInviteDataResponseInviteData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BaseInviteDataResponseInviteData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BaseInviteDataResponseInviteData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BaseInviteDataResponseInviteData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BaseInviteDataResponseInviteData_Type_Vectors.Vector);



   type BatchOperationStatus_Type is (PROCESSING,COMPLETED,FAILED);

   function To_BatchOperationStatus_Type (Value : in String) return .Models.BatchOperationStatus_Type;

   function To_String (Value : in BatchOperationStatus_Type) return String;


   package BatchOperationStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BatchOperationStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BatchOperationStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BatchOperationStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BatchOperationStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BatchOperationStatus_Type_Vectors.Vector);



   type BatchOperation_Type is (UPDATE,UPSERT,CREATE,DELETE_DISCONTINUED,DELETE);

   function To_BatchOperation_Type (Value : in String) return .Models.BatchOperation_Type;

   function To_String (Value : in BatchOperation_Type) return String;


   package BatchOperation_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BatchOperation_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BatchOperation_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BatchOperation_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BatchOperation_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BatchOperation_Type_Vectors.Vector);


   --  ------------------------------
   --  BidFloor
   --  ------------------------------
   type BidFloor_Type is
     record
       Bid_Floors : Integer_Vectors.Vector;
       P_Type : Swagger.Nullable_UString;
     end record;


   package BidFloor_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BidFloor_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BidFloor_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BidFloor_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BidFloor_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BidFloor_Type_Vectors.Vector);



   type BidInMicroCurrency_Type is new long;


   package BidInMicroCurrency_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BidInMicroCurrency_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BidInMicroCurrency_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BidInMicroCurrency_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BidInMicroCurrency_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BidInMicroCurrency_Type_Vectors.Vector);



   type BillingProfilesResponse_Type is
     record
       Id : Swagger.Nullable_UString;
       Card_Type : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Advertiser_Id : Swagger.Nullable_UString;
       Payment_Method_Brand : Swagger.Nullable_UString;
     end record;


   package BillingProfilesResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BillingProfilesResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BillingProfilesResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BillingProfilesResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BillingProfilesResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BillingProfilesResponse_Type_Vectors.Vector);



   type BoardMedia_Type is
     record
       Image_Cover_Url : Swagger.Nullable_UString;
       Pin_Thumbnail_Urls : Swagger.UString_Vectors.Vector;
     end record;


   package BoardMedia_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardMedia_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardMedia_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardMedia_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardMedia_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardMedia_Type_Vectors.Vector);


   --  ------------------------------
   --  Board owner
   --  ------------------------------
   type BoardOwner_Type is
     record
       Username : Swagger.Nullable_UString;
     end record;


   package BoardOwner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardOwner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardOwner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardOwner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardOwner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardOwner_Type_Vectors.Vector);


   --  ------------------------------
   --  Board section
   --  Sections help organize pins within a board.
   --  ------------------------------
   type BoardSection_Type is
     record
       Id : Swagger.Nullable_UString;
       Name : Swagger.UString;
     end record;


   package BoardSection_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardSection_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardSection_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardSection_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardSection_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardSection_Type_Vectors.Vector);


   --  ------------------------------
   --  BoardUpdate
   --  Board fields for updates
   --  ------------------------------
   type BoardUpdate_Type is
     record
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Privacy : Swagger.Nullable_UString;
     end record;


   package BoardUpdate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardUpdate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardUpdate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardUpdate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardUpdate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardUpdate_Type_Vectors.Vector);


   --  ------------------------------
   --  BookClosed
   --  Creation fields
   --  ------------------------------
   type BookClosedResponse_Type is
     record
       Conversion_Metrics_Ready : Swagger.Nullable_Boolean;
       Non_Conversion_Metrics_Ready : Swagger.Nullable_Boolean;
     end record;


   package BookClosedResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BookClosedResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BookClosedResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BookClosedResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BookClosedResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BookClosedResponse_Type_Vectors.Vector);



   type BrandFilter_Type is
     record
       BRAND : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package BrandFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BrandFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BrandFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BrandFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BrandFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BrandFilter_Type_Vectors.Vector);



   type BudgetType_Type is (DAILY,LIFETIME,CBO_ADGROUP);

   function To_BudgetType_Type (Value : in String) return .Models.BudgetType_Type;

   function To_String (Value : in BudgetType_Type) return String;


   package BudgetType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BudgetType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BudgetType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BudgetType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BudgetType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BudgetType_Type_Vectors.Vector);



   type BulkDownloadResponse_Type is
     record
       Request_Id : Swagger.Nullable_UString;
     end record;


   package BulkDownloadResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkDownloadResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkDownloadResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkDownloadResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkDownloadResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkDownloadResponse_Type_Vectors.Vector);



   type BulkEntityType_Type is (CAMPAIGN,AD_GROUP,PRODUCT_GROUP,AD,KEYWORD);

   function To_BulkEntityType_Type (Value : in String) return .Models.BulkEntityType_Type;

   function To_String (Value : in BulkEntityType_Type) return String;


   package BulkEntityType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkEntityType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkEntityType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkEntityType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkEntityType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkEntityType_Type_Vectors.Vector);



   type BulkOutputFormat_Type is (CSV,JSON);

   function To_BulkOutputFormat_Type (Value : in String) return .Models.BulkOutputFormat_Type;

   function To_String (Value : in BulkOutputFormat_Type) return String;


   package BulkOutputFormat_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkOutputFormat_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkOutputFormat_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkOutputFormat_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkOutputFormat_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkOutputFormat_Type_Vectors.Vector);



   type BulkReportingJobStatus_Type is (DOES_NOT_EXIST,FINISHED,IN_PROGRESS,EXPIRED,FAILED,CANCELLED);

   function To_BulkReportingJobStatus_Type (Value : in String) return .Models.BulkReportingJobStatus_Type;

   function To_String (Value : in BulkReportingJobStatus_Type) return String;


   package BulkReportingJobStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkReportingJobStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkReportingJobStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkReportingJobStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkReportingJobStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkReportingJobStatus_Type_Vectors.Vector);



   type BulkUpsertResponse_Type is
     record
       Request_Id : Swagger.Nullable_UString;
     end record;


   package BulkUpsertResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkUpsertResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkUpsertResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkUpsertResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkUpsertResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkUpsertResponse_Type_Vectors.Vector);



   type BulkUpsertStatus_Type is (RUNNING,SUCCEEDED,FAILED);

   function To_BulkUpsertStatus_Type (Value : in String) return .Models.BulkUpsertStatus_Type;

   function To_String (Value : in BulkUpsertStatus_Type) return String;


   package BulkUpsertStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkUpsertStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkUpsertStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkUpsertStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkUpsertStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkUpsertStatus_Type_Vectors.Vector);



   type BusinessAccessError_Type is
     record
       Code : Integer;
       Message : Swagger.UString;
     end record;


   package BusinessAccessError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessAccessError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessAccessError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessAccessError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessAccessError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessAccessError_Type_Vectors.Vector);



   type BusinessAccessRole_Type is (OWNER,ADMIN,ANALYST,SOS_READER,FINANCE_MANAGER,AUDIENCE_MANAGER,CAMPAIGN_MANAGER,CATALOGS_MANAGER,RESTRICTED_OWNER,PROFILE_MANAGER,PROFILE_PUBLISHER,RESOURCE_PINNER_LIST_OWNER,RESOURCE_PINNER_LIST_READER,BIZ_PINNER_LIST_SHARER,RESOURCE_CONVERSION_TAGS_READER);

   function To_BusinessAccessRole_Type (Value : in String) return .Models.BusinessAccessRole_Type;

   function To_String (Value : in BusinessAccessRole_Type) return String;


   package BusinessAccessRole_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessAccessRole_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessAccessRole_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessAccessRole_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessAccessRole_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessAccessRole_Type_Vectors.Vector);



   type BusinessAccessUserSummary_Type is
     record
       Email : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
       Username : Swagger.Nullable_UString;
     end record;


   package BusinessAccessUserSummary_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessAccessUserSummary_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessAccessUserSummary_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessAccessUserSummary_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessAccessUserSummary_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessAccessUserSummary_Type_Vectors.Vector);



   type BusinessMemberAssetsSummaryAdAccountsInner_Type is
     record
       Id : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
     end record;


   package BusinessMemberAssetsSummaryAdAccountsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessMemberAssetsSummaryAdAccountsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessMemberAssetsSummaryAdAccountsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessMemberAssetsSummaryAdAccountsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessMemberAssetsSummaryAdAccountsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessMemberAssetsSummaryAdAccountsInner_Type_Vectors.Vector);



   type BusinessMemberAssetsSummaryProfilesInner_Type is
     record
       Id : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
     end record;


   package BusinessMemberAssetsSummaryProfilesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessMemberAssetsSummaryProfilesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessMemberAssetsSummaryProfilesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessMemberAssetsSummaryProfilesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessMemberAssetsSummaryProfilesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessMemberAssetsSummaryProfilesInner_Type_Vectors.Vector);



   type BusinessMembersAssetAccessDeleteRequestAccessesInner_Type is
     record
       Asset_Id : Swagger.UString;
       Member_Id : Swagger.UString;
     end record;


   package BusinessMembersAssetAccessDeleteRequestAccessesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessMembersAssetAccessDeleteRequestAccessesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessMembersAssetAccessDeleteRequestAccessesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessMembersAssetAccessDeleteRequestAccessesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessMembersAssetAccessDeleteRequestAccessesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessMembersAssetAccessDeleteRequestAccessesInner_Type_Vectors.Vector);



   type BusinessRoleCheckMode_Type is (INTERNAL,EXTERNAL);

   function To_BusinessRoleCheckMode_Type (Value : in String) return .Models.BusinessRoleCheckMode_Type;

   function To_String (Value : in BusinessRoleCheckMode_Type) return String;


   package BusinessRoleCheckMode_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessRoleCheckMode_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessRoleCheckMode_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessRoleCheckMode_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessRoleCheckMode_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessRoleCheckMode_Type_Vectors.Vector);



   type BusinessRoleForMembers_Type is (EMPLOYEE,BIZ_ADMIN);

   function To_BusinessRoleForMembers_Type (Value : in String) return .Models.BusinessRoleForMembers_Type;

   function To_String (Value : in BusinessRoleForMembers_Type) return String;


   package BusinessRoleForMembers_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessRoleForMembers_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessRoleForMembers_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessRoleForMembers_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessRoleForMembers_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessRoleForMembers_Type_Vectors.Vector);



   type BusinessRoleResponse_Type is new string;


   package BusinessRoleResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessRoleResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessRoleResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessRoleResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessRoleResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessRoleResponse_Type_Vectors.Vector);



   type BusinessRole_Type is (EMPLOYEE,BIZ_ADMIN,PARTNER);

   function To_BusinessRole_Type (Value : in String) return .Models.BusinessRole_Type;

   function To_String (Value : in BusinessRole_Type) return String;


   package BusinessRole_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessRole_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessRole_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessRole_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessRole_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessRole_Type_Vectors.Vector);



   type CampaignId_Type is
     record
       Id : Swagger.Nullable_UString;
     end record;


   package CampaignId_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignId_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignId_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignId_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignId_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignId_Type_Vectors.Vector);



   type CampaignIsAutomatedCampaign_Type is new boolean;


   package CampaignIsAutomatedCampaign_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignIsAutomatedCampaign_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignIsAutomatedCampaign_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignIsAutomatedCampaign_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignIsAutomatedCampaign_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignIsAutomatedCampaign_Type_Vectors.Vector);



   type CampaignIsCampaignBudgetOptimization_Type is new boolean;


   package CampaignIsCampaignBudgetOptimization_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignIsCampaignBudgetOptimization_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignIsCampaignBudgetOptimization_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignIsCampaignBudgetOptimization_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignIsCampaignBudgetOptimization_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignIsCampaignBudgetOptimization_Type_Vectors.Vector);



   type CampaignIsFlexibleDailyBudgets_Type is new boolean;


   package CampaignIsFlexibleDailyBudgets_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignIsFlexibleDailyBudgets_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignIsFlexibleDailyBudgets_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignIsFlexibleDailyBudgets_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignIsFlexibleDailyBudgets_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignIsFlexibleDailyBudgets_Type_Vectors.Vector);



   type CampaignSummaryStatus_Type is (RUNNING,PAUSED,NOT_STARTED,COMPLETED,ADVERTISER_DISABLED,ARCHIVED,DRAFT,DELETED_DRAFT);

   function To_CampaignSummaryStatus_Type (Value : in String) return .Models.CampaignSummaryStatus_Type;

   function To_String (Value : in CampaignSummaryStatus_Type) return String;


   package CampaignSummaryStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignSummaryStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignSummaryStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignSummaryStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignSummaryStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignSummaryStatus_Type_Vectors.Vector);



   type CampaignsAnalyticsResponseInner_Type is
     record
       CAMPAIGN_ID : Swagger.UString;
       DATE : Swagger.Nullable_Date;
     end record;


   package CampaignsAnalyticsResponseInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignsAnalyticsResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignsAnalyticsResponseInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignsAnalyticsResponseInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignsAnalyticsResponseInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignsAnalyticsResponseInner_Type_Vectors.Vector);



   type CancelInvitesBody_Type is
     record
       Invite_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package CancelInvitesBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CancelInvitesBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CancelInvitesBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CancelInvitesBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CancelInvitesBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CancelInvitesBody_Type_Vectors.Vector);



   type CatalogsCreateReportResponse_Type is
     record
       Token : Swagger.Nullable_UString;
     end record;


   package CatalogsCreateReportResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreateReportResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreateReportResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreateReportResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreateReportResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreateReportResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_create_request
   --  Request object for creating a catalog.
   --  ------------------------------
   type CatalogsCreateRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Name : Swagger.UString;
     end record;


   package CatalogsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreateRequest_Type_Vectors.Vector);



   type CatalogsCreativeAssetsAttributes_Type is
     record
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Google_Product_Category : Swagger.Nullable_UString;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Visibility : Swagger.Nullable_UString;
       Image_Link : Swagger.Nullable_UString;
       Video_Link : Swagger.Nullable_UString;
     end record;


   package CatalogsCreativeAssetsAttributes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsAttributes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsAttributes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsAttributes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsAttributes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsAttributes_Type_Vectors.Vector);



   type CatalogsCreativeAssetsItemsFilter_Type is
     record
       Catalog_Type : Swagger.UString;
       Creative_Assets_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsCreativeAssetsItemsFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsItemsFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsItemsFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsItemsFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsItemsFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsItemsFilter_Type_Vectors.Vector);



   type CatalogsCreativeAssetsItemsPostFilter_Type is
     record
       Catalog_Type : Swagger.UString;
       Creative_Assets_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsCreativeAssetsItemsPostFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsItemsPostFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsItemsPostFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsItemsPostFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsItemsPostFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsItemsPostFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_keys
   --  ------------------------------
   type CatalogsCreativeAssetsProductGroupFilterKeys_Type is
     record
       CREATIVE_ASSETS_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_0 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_1 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_2 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_3 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_4 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_6 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_5 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_4 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_3 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_2 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_1 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_0 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       MEDIA_TYPE : .Models.CatalogsProductGroupMultipleMediaTypesCriteria_Type;
     end record;


   package CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_creative_assets_product_group_product_counts
   --  Product counts for a Creative Assets CatalogsProductGroup
   --  ------------------------------
   type CatalogsCreativeAssetsProductGroupProductCounts_Type is
     record
       Catalog_Type : Swagger.UString;
       Total : Swagger.Number;
       Videos : Swagger.Number;
     end record;


   package CatalogsCreativeAssetsProductGroupProductCounts_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupProductCounts_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupProductCounts_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupProductCounts_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupProductCounts_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupProductCounts_Type_Vectors.Vector);


   --  ------------------------------
   --  db_item
   --  ------------------------------
   type CatalogsDbItem_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
     end record;


   package CatalogsDbItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsDbItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsDbItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsDbItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsDbItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsDbItem_Type_Vectors.Vector);



   type CatalogsDeleteCreativeAssetsItem_Type is
     record
       Creative_Assets_Id : Swagger.UString;
       Operation : Swagger.UString;
     end record;


   package CatalogsDeleteCreativeAssetsItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsDeleteCreativeAssetsItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsDeleteCreativeAssetsItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsDeleteCreativeAssetsItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsDeleteCreativeAssetsItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsDeleteCreativeAssetsItem_Type_Vectors.Vector);



   type CatalogsDeleteHotelItem_Type is
     record
       Hotel_Id : Swagger.UString;
       Operation : Swagger.UString;
     end record;


   package CatalogsDeleteHotelItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsDeleteHotelItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsDeleteHotelItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsDeleteHotelItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsDeleteHotelItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsDeleteHotelItem_Type_Vectors.Vector);



   type CatalogsDeleteRetailItem_Type is
     record
       Item_Id : Swagger.UString;
       Operation : Swagger.UString;
     end record;


   package CatalogsDeleteRetailItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsDeleteRetailItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsDeleteRetailItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsDeleteRetailItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsDeleteRetailItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsDeleteRetailItem_Type_Vectors.Vector);



   type CatalogsFeedCredentials_Type is
     record
       Password : Swagger.UString;
       Username : Swagger.UString;
     end record;


   package CatalogsFeedCredentials_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedCredentials_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedCredentials_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedCredentials_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedCredentials_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedCredentials_Type_Vectors.Vector);



   type CatalogsFeedIngestionErrors_Type is
     record
       LINE_LEVEL_INTERNAL_ERROR : Swagger.Nullable_Integer;
       LARGE_PRODUCT_COUNT_DECREASE : Swagger.Nullable_Integer;
       ACCOUNT_FLAGGED : Swagger.Nullable_Integer;
       IMAGE_LEVEL_INTERNAL_ERROR : Swagger.Nullable_Integer;
       IMAGE_FILE_NOT_ACCESSIBLE : Swagger.Nullable_Integer;
       IMAGE_MALFORMED_URL : Swagger.Nullable_Integer;
       IMAGE_FILE_NOT_FOUND : Swagger.Nullable_Integer;
       IMAGE_INVALID_FILE : Swagger.Nullable_Integer;
     end record;


   package CatalogsFeedIngestionErrors_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedIngestionErrors_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedIngestionErrors_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedIngestionErrors_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedIngestionErrors_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedIngestionErrors_Type_Vectors.Vector);



   type CatalogsFeedIngestionInfo_Type is
     record
       IN_STOCK : Swagger.Nullable_Integer;
       OUT_OF_STOCK : Swagger.Nullable_Integer;
       PREORDER : Swagger.Nullable_Integer;
     end record;


   package CatalogsFeedIngestionInfo_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedIngestionInfo_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedIngestionInfo_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedIngestionInfo_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedIngestionInfo_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedIngestionInfo_Type_Vectors.Vector);



   type CatalogsFeedIngestionWarnings_Type is
     record
       ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR : Swagger.Nullable_Integer;
       ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE : Swagger.Nullable_Integer;
       ADDITIONAL_IMAGE_MALFORMED_URL : Swagger.Nullable_Integer;
       ADDITIONAL_IMAGE_FILE_NOT_FOUND : Swagger.Nullable_Integer;
       ADDITIONAL_IMAGE_INVALID_FILE : Swagger.Nullable_Integer;
       HOTEL_PRICE_HEADER_IS_PRESENT : Swagger.Nullable_Integer;
     end record;


   package CatalogsFeedIngestionWarnings_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedIngestionWarnings_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedIngestionWarnings_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedIngestionWarnings_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedIngestionWarnings_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedIngestionWarnings_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_processing_schedule
   --  Daily processing schedule. This field is **OPTIONAL**. Use this to configure the preferred time for processing a feed (otherwise random).
   --  ------------------------------
   type CatalogsFeedProcessingSchedule_Type is
     record
       Time : Swagger.UString;
       Timezone : Swagger.UString;
     end record;


   package CatalogsFeedProcessingSchedule_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedProcessingSchedule_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedProcessingSchedule_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedProcessingSchedule_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedProcessingSchedule_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedProcessingSchedule_Type_Vectors.Vector);



   type CatalogsFeedProcessingStatus_Type is (COMPLETED,FAILED,PROCESSING);

   function To_CatalogsFeedProcessingStatus_Type (Value : in String) return .Models.CatalogsFeedProcessingStatus_Type;

   function To_String (Value : in CatalogsFeedProcessingStatus_Type) return String;


   package CatalogsFeedProcessingStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedProcessingStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedProcessingStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedProcessingStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedProcessingStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedProcessingStatus_Type_Vectors.Vector);



   type CatalogsFeedProductCounts_Type is
     record
       Original : Swagger.Nullable_Integer;
       Ingested : Swagger.Nullable_Integer;
     end record;


   package CatalogsFeedProductCounts_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedProductCounts_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedProductCounts_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedProductCounts_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedProductCounts_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedProductCounts_Type_Vectors.Vector);



   type CatalogsFeedValidationErrors_Type is
     record
       FETCH_ERROR : Swagger.Nullable_Integer;
       FETCH_INACTIVE_FEED_ERROR : Swagger.Nullable_Integer;
       ENCODING_ERROR : Swagger.Nullable_Integer;
       DELIMITER_ERROR : Swagger.Nullable_Integer;
       REQUIRED_COLUMNS_MISSING : Swagger.Nullable_Integer;
       DUPLICATE_PRODUCTS : Swagger.Nullable_Integer;
       IMAGE_LINK_INVALID : Swagger.Nullable_Integer;
       ITEMID_MISSING : Swagger.Nullable_Integer;
       TITLE_MISSING : Swagger.Nullable_Integer;
       DESCRIPTION_MISSING : Swagger.Nullable_Integer;
       PRODUCT_LINK_MISSING : Swagger.Nullable_Integer;
       IMAGE_LINK_MISSING : Swagger.Nullable_Integer;
       AVAILABILITY_INVALID : Swagger.Nullable_Integer;
       PRODUCT_PRICE_INVALID : Swagger.Nullable_Integer;
       LINK_FORMAT_INVALID : Swagger.Nullable_Integer;
       PARSE_LINE_ERROR : Swagger.Nullable_Integer;
       ADWORDS_FORMAT_INVALID : Swagger.Nullable_Integer;
       INTERNAL_SERVICE_ERROR : Swagger.Nullable_Integer;
       NO_VERIFIED_DOMAIN : Swagger.Nullable_Integer;
       ADULT_INVALID : Swagger.Nullable_Integer;
       IMAGE_LINK_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       INVALID_DOMAIN : Swagger.Nullable_Integer;
       FEED_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       LINK_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       MALFORMED_XML : Swagger.Nullable_Integer;
       PRICE_MISSING : Swagger.Nullable_Integer;
       FEED_TOO_SMALL : Swagger.Nullable_Integer;
       MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED : Swagger.Nullable_Integer;
       ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE : Swagger.Nullable_Integer;
       PINJOIN_CONTENT_UNSAFE : Swagger.Nullable_Integer;
       BLOCKLISTED_IMAGE_SIGNATURE : Swagger.Nullable_Integer;
       LIST_PRICE_INVALID : Swagger.Nullable_Integer;
       PRICE_CANNOT_BE_DETERMINED : Swagger.Nullable_Integer;
     end record;


   package CatalogsFeedValidationErrors_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedValidationErrors_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedValidationErrors_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedValidationErrors_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedValidationErrors_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedValidationErrors_Type_Vectors.Vector);



   type CatalogsFeedValidationWarnings_Type is
     record
       AD_LINK_FORMAT_WARNING : Swagger.Nullable_Integer;
       AD_LINK_SAME_AS_LINK : Swagger.Nullable_Integer;
       TITLE_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       DESCRIPTION_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       GENDER_INVALID : Swagger.Nullable_Integer;
       AGE_GROUP_INVALID : Swagger.Nullable_Integer;
       SIZE_TYPE_INVALID : Swagger.Nullable_Integer;
       SIZE_SYSTEM_INVALID : Swagger.Nullable_Integer;
       LINK_FORMAT_WARNING : Swagger.Nullable_Integer;
       SALES_PRICE_INVALID : Swagger.Nullable_Integer;
       PRODUCT_CATEGORY_DEPTH_WARNING : Swagger.Nullable_Integer;
       ADWORDS_FORMAT_WARNING : Swagger.Nullable_Integer;
       ADWORDS_SAME_AS_LINK : Swagger.Nullable_Integer;
       DUPLICATE_HEADERS : Swagger.Nullable_Integer;
       FETCH_SAME_SIGNATURE : Swagger.Nullable_Integer;
       ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       ADDITIONAL_IMAGE_LINK_WARNING : Swagger.Nullable_Integer;
       IMAGE_LINK_WARNING : Swagger.Nullable_Integer;
       SHIPPING_INVALID : Swagger.Nullable_Integer;
       TAX_INVALID : Swagger.Nullable_Integer;
       SHIPPING_WEIGHT_INVALID : Swagger.Nullable_Integer;
       EXPIRATION_DATE_INVALID : Swagger.Nullable_Integer;
       AVAILABILITY_DATE_INVALID : Swagger.Nullable_Integer;
       SALE_DATE_INVALID : Swagger.Nullable_Integer;
       WEIGHT_UNIT_INVALID : Swagger.Nullable_Integer;
       IS_BUNDLE_INVALID : Swagger.Nullable_Integer;
       UPDATED_TIME_INVALID : Swagger.Nullable_Integer;
       CUSTOM_LABEL_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       PRODUCT_TYPE_LENGTH_TOO_LONG : Swagger.Nullable_Integer;
       TOO_MANY_ADDITIONAL_IMAGE_LINKS : Swagger.Nullable_Integer;
       MULTIPACK_INVALID : Swagger.Nullable_Integer;
       INDEXED_PRODUCT_COUNT_LARGE_DELTA : Swagger.Nullable_Integer;
       ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE : Swagger.Nullable_Integer;
       OPTIONAL_PRODUCT_CATEGORY_MISSING : Swagger.Nullable_Integer;
       OPTIONAL_PRODUCT_CATEGORY_INVALID : Swagger.Nullable_Integer;
       OPTIONAL_CONDITION_MISSING : Swagger.Nullable_Integer;
       OPTIONAL_CONDITION_INVALID : Swagger.Nullable_Integer;
       IOS_DEEP_LINK_INVALID : Swagger.Nullable_Integer;
       ANDROID_DEEP_LINK_INVALID : Swagger.Nullable_Integer;
       UTM_SOURCE_AUTO_CORRECTED : Swagger.Nullable_Integer;
       COUNTRY_DOES_NOT_MAP_TO_CURRENCY : Swagger.Nullable_Integer;
       MIN_AD_PRICE_INVALID : Swagger.Nullable_Integer;
       GTIN_INVALID : Swagger.Nullable_Integer;
       INCONSISTENT_CURRENCY_VALUES : Swagger.Nullable_Integer;
       SALES_PRICE_TOO_LOW : Swagger.Nullable_Integer;
       SHIPPING_WIDTH_INVALID : Swagger.Nullable_Integer;
       SHIPPING_HEIGHT_INVALID : Swagger.Nullable_Integer;
       SALES_PRICE_TOO_HIGH : Swagger.Nullable_Integer;
       MPN_INVALID : Swagger.Nullable_Integer;
     end record;


   package CatalogsFeedValidationWarnings_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedValidationWarnings_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedValidationWarnings_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedValidationWarnings_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedValidationWarnings_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedValidationWarnings_Type_Vectors.Vector);



   type CatalogsFeedsCreateRequestDefaultLocale_Type is new anyOf<CatalogsLocale,string>;


   package CatalogsFeedsCreateRequestDefaultLocale_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedsCreateRequestDefaultLocale_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedsCreateRequestDefaultLocale_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedsCreateRequestDefaultLocale_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedsCreateRequestDefaultLocale_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedsCreateRequestDefaultLocale_Type_Vectors.Vector);



   type CatalogsFormat_Type is (TSV,CSV,XML);

   function To_CatalogsFormat_Type (Value : in String) return .Models.CatalogsFormat_Type;

   function To_String (Value : in CatalogsFormat_Type) return String;


   package CatalogsFormat_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFormat_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFormat_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFormat_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFormat_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFormat_Type_Vectors.Vector);



   type CatalogsHotelAddress_Type is
     record
       Addr_1 : Swagger.Nullable_UString;
       City : Swagger.Nullable_UString;
       Region : Swagger.Nullable_UString;
       Country : Swagger.Nullable_UString;
       Postal_Code : Swagger.Nullable_UString;
     end record;


   package CatalogsHotelAddress_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelAddress_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelAddress_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelAddress_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelAddress_Type_Vectors.Vector);



   type CatalogsHotelAttributesAllOfMainImage_Type is
     record
       Link : Swagger.Nullable_UString;
       Tag : Swagger.UString_Vectors.Vector;
     end record;


   package CatalogsHotelAttributesAllOfMainImage_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelAttributesAllOfMainImage_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelAttributesAllOfMainImage_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelAttributesAllOfMainImage_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelAttributesAllOfMainImage_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelAttributesAllOfMainImage_Type_Vectors.Vector);



   type CatalogsHotelGuestRatings_Type is
     record
       Score : Swagger.Number;
       Number_Of_Reviewers : Swagger.Nullable_Integer;
       Max_Score : Swagger.Number;
       Rating_System : Swagger.Nullable_UString;
     end record;


   package CatalogsHotelGuestRatings_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelGuestRatings_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelGuestRatings_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelGuestRatings_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelGuestRatings_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelGuestRatings_Type_Vectors.Vector);



   type CatalogsHotelItemsFilter_Type is
     record
       Catalog_Type : Swagger.UString;
       Hotel_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsHotelItemsFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelItemsFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelItemsFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelItemsFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelItemsFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelItemsFilter_Type_Vectors.Vector);



   type CatalogsHotelItemsPostFilter_Type is
     record
       Catalog_Type : Swagger.UString;
       Hotel_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsHotelItemsPostFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelItemsPostFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelItemsPostFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelItemsPostFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelItemsPostFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelItemsPostFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_hotel_product_group_product_counts
   --  Product counts for a Hotel CatalogsProductGroup
   --  ------------------------------
   type CatalogsHotelProductGroupProductCounts_Type is
     record
       Catalog_Type : Swagger.UString;
       Total : Swagger.Number;
     end record;


   package CatalogsHotelProductGroupProductCounts_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupProductCounts_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupProductCounts_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupProductCounts_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupProductCounts_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupProductCounts_Type_Vectors.Vector);



   type CatalogsHotelProductMetadata_Type is
     record
       Hotel_Id : Swagger.UString;
     end record;


   package CatalogsHotelProductMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductMetadata_Type_Vectors.Vector);



   type CatalogsHotelReportParametersReport_Type is
     record
       Report_Type : Swagger.Nullable_UString;
       Feed_Id : Swagger.UString;
       Processing_Result_Id : Swagger.Nullable_UString;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsHotelReportParametersReport_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelReportParametersReport_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelReportParametersReport_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelReportParametersReport_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelReportParametersReport_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelReportParametersReport_Type_Vectors.Vector);



   type CatalogsItemValidationIssue_Type is (AD_LINK_FORMAT_WARNING,AD_LINK_SAME_AS_LINK,ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG,ADDITIONAL_IMAGE_LINK_WARNING,ADULT_INVALID,ADWORDS_FORMAT_INVALID,ADWORDS_FORMAT_WARNING,ADWORDS_SAME_AS_LINK,AGE_GROUP_INVALID,ANDROID_DEEP_LINK_INVALID,AVAILABILITY_DATE_INVALID,AVAILABILITY_INVALID,BLOCKLISTED_IMAGE_SIGNATURE,COUNTRY_DOES_NOT_MAP_TO_CURRENCY,CUSTOM_LABEL_LENGTH_TOO_LONG,DESCRIPTION_LENGTH_TOO_LONG,DESCRIPTION_MISSING,DUPLICATE_PRODUCTS,EXPIRATION_DATE_INVALID,GENDER_INVALID,GTIN_INVALID,IMAGE_LINK_INVALID,IMAGE_LINK_LENGTH_TOO_LONG,IMAGE_LINK_MISSING,IMAGE_LINK_WARNING,INVALID_DOMAIN,IOS_DEEP_LINK_INVALID,IS_BUNDLE_INVALID,ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE,ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE,ITEMID_MISSING,LINK_FORMAT_INVALID,LINK_FORMAT_WARNING,LINK_LENGTH_TOO_LONG,LIST_PRICE_INVALID,MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED,MIN_AD_PRICE_INVALID,MPN_INVALID,MULTIPACK_INVALID,OPTIONAL_CONDITION_INVALID,OPTIONAL_CONDITION_MISSING,OPTIONAL_PRODUCT_CATEGORY_INVALID,OPTIONAL_PRODUCT_CATEGORY_MISSING,PARSE_LINE_ERROR,PINJOIN_CONTENT_UNSAFE,PRICE_CANNOT_BE_DETERMINED,PRICE_MISSING,PRODUCT_CATEGORY_DEPTH_WARNING,PRODUCT_LINK_MISSING,PRODUCT_PRICE_INVALID,PRODUCT_TYPE_LENGTH_TOO_LONG,SALE_DATE_INVALID,SALES_PRICE_INVALID,SALES_PRICE_TOO_HIGH,SALES_PRICE_TOO_LOW,SHIPPING_INVALID,SHIPPING_HEIGHT_INVALID,SHIPPING_WEIGHT_INVALID,SHIPPING_WIDTH_INVALID,SIZE_SYSTEM_INVALID,SIZE_TYPE_INVALID,TAX_INVALID,TITLE_LENGTH_TOO_LONG,TITLE_MISSING,TOO_MANY_ADDITIONAL_IMAGE_LINKS,UTM_SOURCE_AUTO_CORRECTED,WEIGHT_UNIT_INVALID);

   function To_CatalogsItemValidationIssue_Type (Value : in String) return .Models.CatalogsItemValidationIssue_Type;

   function To_String (Value : in CatalogsItemValidationIssue_Type) return String;


   package CatalogsItemValidationIssue_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemValidationIssue_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemValidationIssue_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemValidationIssue_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemValidationIssue_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemValidationIssue_Type_Vectors.Vector);



   type CatalogsItemsRequestLanguage_Type is new anyOf<CatalogsLocale,Language>;


   package CatalogsItemsRequestLanguage_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsRequestLanguage_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsRequestLanguage_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsRequestLanguage_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsRequestLanguage_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsRequestLanguage_Type_Vectors.Vector);



   type CatalogsLocale_Type is (AF_ZA,AR_SA,BG_BG,BN_IN,CS_CZ,DA_DK,DE,EL_GR,EN_AU,EN_CA,EN_GB,EN_IN,EN_US,ES_419,ES_AR,ES_ES,ES_MX,FI_FI,FR,FR_CA,HE_IL,HI_IN,HR_HR,HU_HU,ID_ID,IT,JA,KO_KR,MS_MY,NB_NO,NL,PL_PL,PT_BR,PT_PT,RO_RO,RU_RU,SK_SK,SV_SE,TE_IN,TH_TH,TL_PH,TR,UK_UA,VI_VN,ZH_CN,ZH_TW);

   function To_CatalogsLocale_Type (Value : in String) return .Models.CatalogsLocale_Type;

   function To_String (Value : in CatalogsLocale_Type) return String;


   package CatalogsLocale_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsLocale_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsLocale_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsLocale_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsLocale_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsLocale_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_keys
   --  ------------------------------
   type CatalogsProductGroupFilterKeys_Type is
     record
       MIN_PRICE : .Models.CatalogsProductGroupPricingCriteria_Type;
       MAX_PRICE : .Models.CatalogsProductGroupPricingCriteria_Type;
       CURRENCY : .Models.CatalogsProductGroupCurrencyCriteria_Type;
       ITEM_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       AVAILABILITY : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       BRAND : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CONDITION : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_0 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_1 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_2 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_3 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_4 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       ITEM_GROUP_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       GENDER : .Models.CatalogsProductGroupMultipleGenderCriteria_Type;
       MEDIA_TYPE : .Models.CatalogsProductGroupMultipleMediaTypesCriteria_Type;
       PRODUCT_TYPE_4 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       PRODUCT_TYPE_3 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       PRODUCT_TYPE_2 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       PRODUCT_TYPE_1 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       PRODUCT_TYPE_0 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_6 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_5 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_4 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_3 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_2 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_1 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       GOOGLE_PRODUCT_CATEGORY_0 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
       PRODUCT_GROUP : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CatalogsProductGroupFilterKeys_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFilterKeys_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFilterKeys_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFilterKeys_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFilterKeys_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFilterKeys_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_multiple_string_criteria
   --  ------------------------------
   type CatalogsProductGroupMultipleStringCriteria_Type is
     record
       Values : Swagger.UString_Vectors.Vector;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupMultipleStringCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupMultipleStringCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupMultipleStringCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupMultipleStringCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupMultipleStringCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupMultipleStringCriteria_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_multiple_string_list_criteria
   --  ------------------------------
   type CatalogsProductGroupMultipleStringListCriteria_Type is
     record
       Values : Swagger.UString_Vectors.Vector_Vectors.Vector;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupMultipleStringListCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupMultipleStringListCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupMultipleStringListCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupMultipleStringListCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupMultipleStringListCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupMultipleStringListCriteria_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_pricing_criteria
   --  ------------------------------
   type CatalogsProductGroupPricingCriteria_Type is
     record
       Inclusion : Swagger.Nullable_Boolean;
       Values : Swagger.Number;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupPricingCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupPricingCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupPricingCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupPricingCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupPricingCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupPricingCriteria_Type_Vectors.Vector);



   type CatalogsProductGroupStatus_Type is (ACTIVE,INACTIVE);

   function To_CatalogsProductGroupStatus_Type (Value : in String) return .Models.CatalogsProductGroupStatus_Type;

   function To_String (Value : in CatalogsProductGroupStatus_Type) return String;


   package CatalogsProductGroupStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupStatus_Type_Vectors.Vector);


   --  ------------------------------
   --  product_group_type
   --  <p>Catalog product group type</p> <p>MERCHANT_CREATED: Product groups created by merchants. <br>ALL_PRODUCTS: Consists of every product in your latest successful feed upload. <br>BEST_DEALS: Consists of products with the deepest drop in price. <br>PINNER_FAVORITES: Consists of products that are resonating most with people on Pinterest, based on engagement. <br>TOP_SELLERS: Consists of products with the highest conversion rate, if you have the conversion tag installed. <br>BACK_IN_STOCK: Consists of products that were previously out of stock and are now in stock. <br>NEW_ARRIVALS: Consists of products that are new to your Catalog. <br>SHOPIFY_COLLECTION: Product groups created based on Shopify Product Collections. <br>I2PC: Product groups created based on predicted product category.</p>
   --  ------------------------------
   type CatalogsProductGroupType_Type is (MERCHANT_CREATED,ALL_PRODUCTS,BEST_DEALS,PINNER_FAVORITES,TOP_SELLERS,BACK_IN_STOCK,NEW_ARRIVALS,SHOPIFY_COLLECTIONS,I2PC);

   function To_CatalogsProductGroupType_Type (Value : in String) return .Models.CatalogsProductGroupType_Type;

   function To_String (Value : in CatalogsProductGroupType_Type) return String;


   package CatalogsProductGroupType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupType_Type_Vectors.Vector);



   type CatalogsReportDistributionIssueFilter_Type is
     record
       Report_Type : Swagger.UString;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsReportDistributionIssueFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReportDistributionIssueFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReportDistributionIssueFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReportDistributionIssueFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReportDistributionIssueFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReportDistributionIssueFilter_Type_Vectors.Vector);



   type CatalogsReportDistributionStats_Type is
     record
       Report_Type : Swagger.Nullable_UString;
       Catalog_Id : Swagger.Nullable_UString;
       Code : Swagger.Nullable_Integer;
       Code_Label : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
       Occurrences : Swagger.Nullable_Integer;
       Ineligible_For_Ads : Swagger.Nullable_Boolean;
       Ineligible_For_Organic : Swagger.Nullable_Boolean;
     end record;


   package CatalogsReportDistributionStats_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReportDistributionStats_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReportDistributionStats_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReportDistributionStats_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReportDistributionStats_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReportDistributionStats_Type_Vectors.Vector);



   type CatalogsReportFeedIngestionFilter_Type is
     record
       Report_Type : Swagger.UString;
       Feed_Id : Swagger.UString;
       Processing_Result_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsReportFeedIngestionFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReportFeedIngestionFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReportFeedIngestionFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReportFeedIngestionFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReportFeedIngestionFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReportFeedIngestionFilter_Type_Vectors.Vector);



   type CatalogsReportFeedIngestionStats_Type is
     record
       Report_Type : Swagger.Nullable_UString;
       Catalog_Id : Swagger.Nullable_UString;
       Code : Swagger.Nullable_Integer;
       Code_Label : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
       Occurrences : Swagger.Nullable_Integer;
       Severity : Swagger.Nullable_UString;
     end record;


   package CatalogsReportFeedIngestionStats_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReportFeedIngestionStats_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReportFeedIngestionStats_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReportFeedIngestionStats_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReportFeedIngestionStats_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReportFeedIngestionStats_Type_Vectors.Vector);



   type CatalogsReportStats_Type is
     record
       Report_Type : Swagger.UString;
       Catalog_Id : Swagger.Nullable_UString;
       Code : Swagger.Nullable_Integer;
       Code_Label : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
       Occurrences : Swagger.Nullable_Integer;
       Severity : Swagger.Nullable_UString;
       Ineligible_For_Ads : Swagger.Nullable_Boolean;
       Ineligible_For_Organic : Swagger.Nullable_Boolean;
     end record;


   package CatalogsReportStats_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReportStats_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReportStats_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReportStats_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReportStats_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReportStats_Type_Vectors.Vector);



   type CatalogsReport_Type is
     record
       Report_Status : Swagger.Nullable_UString;
       Url : Swagger.Nullable_UString;
       Size : Swagger.Number;
     end record;


   package CatalogsReport_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReport_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReport_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReport_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReport_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReport_Type_Vectors.Vector);



   type CatalogsRetailItemsFilter_Type is
     record
       Catalog_Type : Swagger.UString;
       Item_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsRetailItemsFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailItemsFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailItemsFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailItemsFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailItemsFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailItemsFilter_Type_Vectors.Vector);



   type CatalogsRetailItemsPostFilter_Type is
     record
       Catalog_Type : Swagger.UString;
       Item_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsRetailItemsPostFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailItemsPostFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailItemsPostFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailItemsPostFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailItemsPostFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailItemsPostFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_retail_product_group_product_counts
   --  Product counts for a Retail CatalogsProductGroup
   --  ------------------------------
   type CatalogsRetailProductGroupProductCounts_Type is
     record
       Catalog_Type : Swagger.UString;
       In_Stock : Swagger.Number;
       Out_Of_Stock : Swagger.Number;
       Preorder : Swagger.Number;
       Total : Swagger.Number;
       Videos : Swagger.Number;
     end record;


   package CatalogsRetailProductGroupProductCounts_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailProductGroupProductCounts_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailProductGroupProductCounts_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailProductGroupProductCounts_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailProductGroupProductCounts_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailProductGroupProductCounts_Type_Vectors.Vector);



   type CatalogsStatus_Type is (ACTIVE,INACTIVE);

   function To_CatalogsStatus_Type (Value : in String) return .Models.CatalogsStatus_Type;

   function To_String (Value : in CatalogsStatus_Type) return String;


   package CatalogsStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsStatus_Type_Vectors.Vector);



   type CatalogsType_Type is (RETAIL,HOTEL,CREATIVE_ASSETS);

   function To_CatalogsType_Type (Value : in String) return .Models.CatalogsType_Type;

   function To_String (Value : in CatalogsType_Type) return String;


   package CatalogsType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsType_Type_Vectors.Vector);



   type CatalogsUpdatableCreativeAssetsAttributes_Type is
     record
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Google_Product_Category : Swagger.Nullable_UString;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Visibility : Swagger.Nullable_UString;
     end record;


   package CatalogsUpdatableCreativeAssetsAttributes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpdatableCreativeAssetsAttributes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpdatableCreativeAssetsAttributes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpdatableCreativeAssetsAttributes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpdatableCreativeAssetsAttributes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpdatableCreativeAssetsAttributes_Type_Vectors.Vector);



   type ConditionFilter_Type is
     record
       CONDITION : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package ConditionFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConditionFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConditionFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConditionFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConditionFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConditionFilter_Type_Vectors.Vector);



   type ConversionApiResponseEventsInner_Type is
     record
       Status : Swagger.UString;
       Error_Message : Swagger.Nullable_UString;
       Warning_Message : Swagger.Nullable_UString;
     end record;


   package ConversionApiResponseEventsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionApiResponseEventsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionApiResponseEventsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionApiResponseEventsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionApiResponseEventsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionApiResponseEventsInner_Type_Vectors.Vector);



   type ConversionAttributionWindowDays_Type is (_0,_1,_7,_14,_30,_60);

   function To_ConversionAttributionWindowDays_Type (Value : in String) return .Models.ConversionAttributionWindowDays_Type;

   function To_String (Value : in ConversionAttributionWindowDays_Type) return String;


   package ConversionAttributionWindowDays_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionAttributionWindowDays_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionAttributionWindowDays_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionAttributionWindowDays_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionAttributionWindowDays_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionAttributionWindowDays_Type_Vectors.Vector);


   --  ------------------------------
   --  ConversionEventResponse
   --  ------------------------------
   type ConversionEventResponse_Type is
     record
       Conversion_Event : ConversionTagType_Type;
       Conversion_Tag_Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
     end record;


   package ConversionEventResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventResponse_Type_Vectors.Vector);



   type ConversionEventsDataInnerCustomDataContentsInner_Type is
     record
       Id : Swagger.Nullable_UString;
       Item_Price : Swagger.Nullable_UString;
       Quantity : Swagger.Nullable_Long;
       Item_Name : Swagger.Nullable_UString;
       Item_Category : Swagger.Nullable_UString;
       Item_Brand : Swagger.Nullable_UString;
     end record;


   package ConversionEventsDataInnerCustomDataContentsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsDataInnerCustomDataContentsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsDataInnerCustomDataContentsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsDataInnerCustomDataContentsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsDataInnerCustomDataContentsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsDataInnerCustomDataContentsInner_Type_Vectors.Vector);



   type ConversionEventsUserDataAnyOf1_Type is
     record
       Em : Swagger.UString_Vectors.Vector;
       Hashed_Maids : Swagger.UString_Vectors.Vector;
       Client_Ip_Address : Swagger.Nullable_UString;
       Client_User_Agent : Swagger.Nullable_UString;
     end record;


   package ConversionEventsUserDataAnyOf1_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsUserDataAnyOf1_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsUserDataAnyOf1_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsUserDataAnyOf1_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsUserDataAnyOf1_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsUserDataAnyOf1_Type_Vectors.Vector);



   type ConversionEventsUserDataAnyOf2_Type is
     record
       Em : Swagger.UString_Vectors.Vector;
       Hashed_Maids : Swagger.UString_Vectors.Vector;
       Client_Ip_Address : Swagger.UString;
       Client_User_Agent : Swagger.UString;
     end record;


   package ConversionEventsUserDataAnyOf2_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsUserDataAnyOf2_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsUserDataAnyOf2_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsUserDataAnyOf2_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsUserDataAnyOf2_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsUserDataAnyOf2_Type_Vectors.Vector);



   type ConversionEventsUserDataAnyOf_Type is
     record
       Em : Swagger.UString_Vectors.Vector;
       Hashed_Maids : Swagger.UString_Vectors.Vector;
       Client_Ip_Address : Swagger.Nullable_UString;
       Client_User_Agent : Swagger.Nullable_UString;
     end record;


   package ConversionEventsUserDataAnyOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsUserDataAnyOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsUserDataAnyOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsUserDataAnyOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsUserDataAnyOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsUserDataAnyOf_Type_Vectors.Vector);



   type ConversionEventsUserData_Type is
     record
       Ph : Swagger.UString_Vectors.Vector;
       Ge : Swagger.UString_Vectors.Vector;
       Db : Swagger.UString_Vectors.Vector;
       Ln : Swagger.UString_Vectors.Vector;
       Fn : Swagger.UString_Vectors.Vector;
       Ct : Swagger.UString_Vectors.Vector;
       St : Swagger.UString_Vectors.Vector;
       Zp : Swagger.UString_Vectors.Vector;
       Country : Swagger.UString_Vectors.Vector;
       External_Id : Swagger.UString_Vectors.Vector;
       Click_Id : Swagger.Nullable_UString;
       Partner_Id : Swagger.Nullable_UString;
       Em : Swagger.UString_Vectors.Vector;
       Hashed_Maids : Swagger.UString_Vectors.Vector;
       Client_Ip_Address : Swagger.UString;
       Client_User_Agent : Swagger.UString;
     end record;


   package ConversionEventsUserData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsUserData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsUserData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsUserData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsUserData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsUserData_Type_Vectors.Vector);



   type ConversionReportAttributionType_Type is (INDIVIDUAL,HOUSEHOLD);

   function To_ConversionReportAttributionType_Type (Value : in String) return .Models.ConversionReportAttributionType_Type;

   function To_String (Value : in ConversionReportAttributionType_Type) return String;


   package ConversionReportAttributionType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionReportAttributionType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionReportAttributionType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionReportAttributionType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionReportAttributionType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionReportAttributionType_Type_Vectors.Vector);



   type ConversionReportTimeType_Type is (AD_ACTION,CONVERSION);

   function To_ConversionReportTimeType_Type (Value : in String) return .Models.ConversionReportTimeType_Type;

   function To_String (Value : in ConversionReportTimeType_Type) return String;


   package ConversionReportTimeType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionReportTimeType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionReportTimeType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionReportTimeType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionReportTimeType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionReportTimeType_Type_Vectors.Vector);


   --  ------------------------------
   --  ConversionTagConfigs
   --  ------------------------------
   type ConversionTagConfigs_Type is
     record
       Aem_Enabled : Swagger.Nullable_Boolean;
       Md_Frequency : Swagger.Number;
       Aem_Fnln_Enabled : Swagger.Nullable_Boolean;
       Aem_Ph_Enabled : Swagger.Nullable_Boolean;
       Aem_Ge_Enabled : Swagger.Nullable_Boolean;
       Aem_Db_Enabled : Swagger.Nullable_Boolean;
       Aem_Loc_Enabled : Swagger.Nullable_Boolean;
     end record;


   package ConversionTagConfigs_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionTagConfigs_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionTagConfigs_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionTagConfigs_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionTagConfigs_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionTagConfigs_Type_Vectors.Vector);


   --  ------------------------------
   --  ConversionTagCreate
   --  ------------------------------
   type ConversionTagCreate_Type is
     record
       Name : Swagger.UString;
       Aem_Enabled : Swagger.Nullable_Boolean;
       Md_Frequency : Swagger.Number;
       Aem_Fnln_Enabled : Swagger.Nullable_Boolean;
       Aem_Ph_Enabled : Swagger.Nullable_Boolean;
       Aem_Ge_Enabled : Swagger.Nullable_Boolean;
       Aem_Db_Enabled : Swagger.Nullable_Boolean;
       Aem_Loc_Enabled : Swagger.Nullable_Boolean;
     end record;


   package ConversionTagCreate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionTagCreate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionTagCreate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionTagCreate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionTagCreate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionTagCreate_Type_Vectors.Vector);


   --  ------------------------------
   --  ConversionTagType
   --  conversion tag type
   --  ------------------------------
   type ConversionTagType_Type is (PAGE_LOAD,UNKNOWN,INITIALIZED,PAGE_VISIT,SIGNUP,CHECKOUT,CUSTOM,VIEW_CATEGORY,SEARCH,ADD_TO_CART,WATCH_VIDEO,LEAD,APP_INSTALL,WEB_SESSION,EXTERNAL_MEASUREMENT);

   function To_ConversionTagType_Type (Value : in String) return .Models.ConversionTagType_Type;

   function To_String (Value : in ConversionTagType_Type) return String;


   package ConversionTagType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionTagType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionTagType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionTagType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionTagType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionTagType_Type_Vectors.Vector);



   type CountryFilter_Type is
     record
       COUNTRY : .Models.CatalogsProductGroupMultipleCountriesCriteria_Type;
     end record;


   package CountryFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CountryFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CountryFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CountryFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CountryFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CountryFilter_Type_Vectors.Vector);



   type Country_Type is (AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH,ER,ES,ET,FI,FJ,FK,FM,FO,FR,GA,GB,GD,GE,GF,GG,GH,GI,GL,GM,GN,GP,GQ,GR,GS,GT,GU,GW,GY,HK,HM,HN,HR,HT,HU,ID,IE,IL,IM,IN,IO,IQ,IR,IS,IT,JE,JM,JO,JP,KE,KG,KH,KI,KM,KN,KR,KW,KY,KZ,LA,LB,LC,LI,LK,LR,LS,LT,LU,LV,LY,MA,MC,MD,ME,MF,MG,MH,MK,ML,MM,MN,MO,MP,MQ,MR,MS,MT,MU,MV,MW,MX,MY,MZ,NA,NC,NE,NF,NG,NI,NL,NO,NP,NR,NU,NZ,OM,PA,PE,PF,PG,PH,PK,PL,PM,PN,PR,PS,PT,PW,PY,QA,RE,RO,RS,RU,RW,SA,SB,SC,SD,SE,SG,SH,SI,SJ,SK,SL,SM,SN,SO,SR,SS,ST,SV,SX,SY,SZ,TC,TD,TF,TG,TH,TJ,TK,TL,TM,TN,TO,TR,TT,TV,TW,TZ,UA,UG,UM,US,UY,UZ,VA,VC,VE,VG,VI,VN,VU,WF,WS,YE,YT,ZA,ZM,ZW);

   function To_Country_Type (Value : in String) return .Models.Country_Type;

   function To_String (Value : in Country_Type) return String;


   package Country_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Country_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Country_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Country_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Country_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Country_Type_Vectors.Vector);



   type CreateAssetAccessRequestBodyAssetRequestsInner_Type is
     record
       Partner_Id : Swagger.UString;
       Asset_Id_To_Permissions : Swagger..Models.Permissions_Type_Vectors.Vector_Map;
     end record;


   package CreateAssetAccessRequestBodyAssetRequestsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetAccessRequestBodyAssetRequestsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetAccessRequestBodyAssetRequestsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetAccessRequestBodyAssetRequestsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetAccessRequestBodyAssetRequestsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetAccessRequestBodyAssetRequestsInner_Type_Vectors.Vector);



   type CreateAssetAccessRequestErrorMessageInner_Type is
     record
       Code : Swagger.Nullable_Integer;
       Messages : Swagger.UString_Vectors.Vector;
     end record;


   package CreateAssetAccessRequestErrorMessageInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetAccessRequestErrorMessageInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetAccessRequestErrorMessageInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetAccessRequestErrorMessageInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetAccessRequestErrorMessageInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetAccessRequestErrorMessageInner_Type_Vectors.Vector);



   type CreativeAssetsIdFilter_Type is
     record
       CREATIVE_ASSETS_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CreativeAssetsIdFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreativeAssetsIdFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreativeAssetsIdFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreativeAssetsIdFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreativeAssetsIdFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreativeAssetsIdFilter_Type_Vectors.Vector);



   type CreativeAssetsVisibilityType_Type is (VISIBLE,HIDDEN);

   function To_CreativeAssetsVisibilityType_Type (Value : in String) return .Models.CreativeAssetsVisibilityType_Type;

   function To_String (Value : in CreativeAssetsVisibilityType_Type) return String;


   package CreativeAssetsVisibilityType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreativeAssetsVisibilityType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreativeAssetsVisibilityType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreativeAssetsVisibilityType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreativeAssetsVisibilityType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreativeAssetsVisibilityType_Type_Vectors.Vector);


   --  ------------------------------
   --  CreativeType
   --  Ad creative type enum. For update, only draft ads may update creative type. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.
   --  ------------------------------
   type CreativeType_Type is (REGULAR,VIDEO,SHOPPING,CAROUSEL,MAX_VIDEO,SHOP_THE_PIN,COLLECTION,IDEA,SHOWCASE,QUIZ);

   function To_CreativeType_Type (Value : in String) return .Models.CreativeType_Type;

   function To_String (Value : in CreativeType_Type) return String;


   package CreativeType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreativeType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreativeType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreativeType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreativeType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreativeType_Type_Vectors.Vector);



   type CurrencyFilter_Type is
     record
       CURRENCY : .Models.CatalogsProductGroupCurrencyCriteria_Type;
     end record;


   package CurrencyFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CurrencyFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CurrencyFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CurrencyFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CurrencyFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CurrencyFilter_Type_Vectors.Vector);



   type Currency_Type is (UNK,USD,GBP,CAD,EUR,AUD,NZD,SEK,ILS,CHF,HKD,JPY,SGD,KRW,NOK,DKK,PLN,RON,HUF,CZK,BRL,MXN,ARS,CLP,COP,INR,TRY);

   function To_Currency_Type (Value : in String) return .Models.Currency_Type;

   function To_String (Value : in Currency_Type) return String;


   package Currency_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Currency_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Currency_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Currency_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Currency_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Currency_Type_Vectors.Vector);



   type CustomColumnId_Type is new string;


   package CustomColumnId_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomColumnId_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomColumnId_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomColumnId_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomColumnId_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomColumnId_Type_Vectors.Vector);



   type CustomLabel0Filter_Type is
     record
       CUSTOM_LABEL_0 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CustomLabel0Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomLabel0Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomLabel0Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomLabel0Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomLabel0Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomLabel0Filter_Type_Vectors.Vector);



   type CustomLabel1Filter_Type is
     record
       CUSTOM_LABEL_1 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CustomLabel1Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomLabel1Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomLabel1Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomLabel1Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomLabel1Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomLabel1Filter_Type_Vectors.Vector);



   type CustomLabel2Filter_Type is
     record
       CUSTOM_LABEL_2 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CustomLabel2Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomLabel2Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomLabel2Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomLabel2Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomLabel2Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomLabel2Filter_Type_Vectors.Vector);



   type CustomLabel3Filter_Type is
     record
       CUSTOM_LABEL_3 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CustomLabel3Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomLabel3Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomLabel3Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomLabel3Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomLabel3Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomLabel3Filter_Type_Vectors.Vector);



   type CustomLabel4Filter_Type is
     record
       CUSTOM_LABEL_4 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package CustomLabel4Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomLabel4Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomLabel4Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomLabel4Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomLabel4Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomLabel4Filter_Type_Vectors.Vector);


   --  ------------------------------
   --  CustomerList
   --  ------------------------------
   type CustomerList_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Number;
       Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Num_Batches : Swagger.Number;
       Num_Removed_User_Records : Swagger.Number;
       Num_Uploaded_User_Records : Swagger.Number;
       Status : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
       Updated_Time : Swagger.Number;
       Exceptions : Swagger.Object;
     end record;


   package CustomerList_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomerList_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomerList_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomerList_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomerList_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomerList_Type_Vectors.Vector);



   type DataOutputFormat_Type is (JSON,CSV);

   function To_DataOutputFormat_Type (Value : in String) return .Models.DataOutputFormat_Type;

   function To_String (Value : in DataOutputFormat_Type) return String;


   package DataOutputFormat_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DataOutputFormat_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DataOutputFormat_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DataOutputFormat_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DataOutputFormat_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DataOutputFormat_Type_Vectors.Vector);



   type DataStatus_Type is (PROCESSING,READY,ESTIMATE,BEFORE_BUSINESS_CREATED,BEFORE_DATA_RETENTION_PERIOD,BEFORE_PIN_DATA_RETENTION_PERIOD,BEFORE_METRIC_START_DATE,BEFORE_CORE_METRIC_START_DATE,BEFORE_PIN_FORMAT_METRIC_START_DATE,BEFORE_AUDIENCE_METRIC_START_DATE,BEFORE_AUDIENCE_MONTHLY_METRIC_START_DATE,BEFORE_VIDEO_METRIC_START_DATE,BEFORE_CONVERSION_METRIC_START_DATE,PURCHASERS_METRIC_SMALLER_THAN_THRESHOLD,IN_BAD_TAG_DATE,BEFORE_PUBLISHED_METRIC_START_DATE,BEFORE_ASSIST_METRIC_START_DATE,BEFORE_PIN_CREATED,BEFORE_ACCOUNT_CLAIMED,BEFORE_DEMOGRAPHIC_FILTERS_START_DATE,AUDIENCE_SEGMENT_SMALLER_THAN_THRESHOLD,AUDIENCE_TOTAL_SMALLER_THAN_THRESHOLD,BEFORE_PRODUCT_GROUP_FILTER_START_DATE);

   function To_DataStatus_Type (Value : in String) return .Models.DataStatus_Type;

   function To_String (Value : in DataStatus_Type) return String;


   package DataStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DataStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DataStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DataStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DataStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DataStatus_Type_Vectors.Vector);



   type DeleteAssetGroupBody_Type is
     record
       Asset_Groups_To_Delete : Swagger.UString_Vectors.Vector;
     end record;


   package DeleteAssetGroupBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteAssetGroupBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteAssetGroupBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteAssetGroupBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteAssetGroupBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteAssetGroupBody_Type_Vectors.Vector);



   type DeleteAssetGroupResponseExceptionsInner_Type is
     record
       Code : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
       Asset_Group_Id : Swagger.Nullable_UString;
     end record;


   package DeleteAssetGroupResponseExceptionsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteAssetGroupResponseExceptionsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteAssetGroupResponseExceptionsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteAssetGroupResponseExceptionsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteAssetGroupResponseExceptionsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteAssetGroupResponseExceptionsInner_Type_Vectors.Vector);



   type DeleteInvitesResultsResponseArrayItemsInnerException_Type is
     record
       Invite_Id : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
     end record;


   package DeleteInvitesResultsResponseArrayItemsInnerException_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteInvitesResultsResponseArrayItemsInnerException_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteInvitesResultsResponseArrayItemsInnerException_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteInvitesResultsResponseArrayItemsInnerException_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteInvitesResultsResponseArrayItemsInnerException_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteInvitesResultsResponseArrayItemsInnerException_Type_Vectors.Vector);



   type DeleteMemberAccessResult_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Member_Id : Swagger.Nullable_UString;
     end record;


   package DeleteMemberAccessResult_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteMemberAccessResult_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteMemberAccessResult_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteMemberAccessResult_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteMemberAccessResult_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteMemberAccessResult_Type_Vectors.Vector);



   type DeletePartnerAssetAccessBodyAccessesInner_Type is
     record
       Partner_Id : Swagger.UString;
       Asset_Id : Swagger.UString;
       Partner_Type : Swagger.Nullable_UString;
     end record;


   package DeletePartnerAssetAccessBodyAccessesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletePartnerAssetAccessBodyAccessesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletePartnerAssetAccessBodyAccessesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletePartnerAssetAccessBodyAccessesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletePartnerAssetAccessBodyAccessesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletePartnerAssetAccessBodyAccessesInner_Type_Vectors.Vector);



   type DeletePartnerAssetsResult_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Asset_Type : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
       Is_Shared_Partner : Swagger.Nullable_Boolean;
       Partner_Id : Swagger.Nullable_UString;
     end record;


   package DeletePartnerAssetsResult_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletePartnerAssetsResult_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletePartnerAssetsResult_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletePartnerAssetsResult_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletePartnerAssetsResult_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletePartnerAssetsResult_Type_Vectors.Vector);



   type DeletePartnersRequest_Type is
     record
       Partner_Ids : Swagger.UString_Vectors.Vector;
       Partner_Type : Swagger.Nullable_UString;
     end record;


   package DeletePartnersRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletePartnersRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletePartnersRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletePartnersRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletePartnersRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletePartnersRequest_Type_Vectors.Vector);



   type DeletePartnersResponse_Type is
     record
       Deleted_Partners : Swagger.UString_Vectors.Vector;
     end record;


   package DeletePartnersResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletePartnersResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletePartnersResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletePartnersResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletePartnersResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletePartnersResponse_Type_Vectors.Vector);



   type DeletedMembersResponse_Type is
     record
       Deleted_Members : Swagger.UString_Vectors.Vector;
     end record;


   package DeletedMembersResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletedMembersResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletedMembersResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletedMembersResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletedMembersResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletedMembersResponse_Type_Vectors.Vector);



   type DeliveryMetricsResponseItemsInner_Type is
     record
       Name : Swagger.Nullable_UString;
       Category : Swagger.Nullable_UString;
       Definition : Swagger.Nullable_UString;
       Display_Name : Swagger.Nullable_UString;
     end record;


   package DeliveryMetricsResponseItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeliveryMetricsResponseItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeliveryMetricsResponseItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeliveryMetricsResponseItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeliveryMetricsResponseItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeliveryMetricsResponseItemsInner_Type_Vectors.Vector);


   --  ------------------------------
   --  Detailed Error
   --  Used for including extra details to a base error
   --  ------------------------------
   type DetailedError_Type is
     record
       Code : Integer;
       Message : Swagger.UString;
       Details : Swagger.Object;
     end record;


   package DetailedError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DetailedError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DetailedError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DetailedError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DetailedError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DetailedError_Type_Vectors.Vector);


   --  ------------------------------
   --  EnhancedMatchStatusType
   --  The enhanced match status of the tag
   --  ------------------------------
   type EnhancedMatchStatusType_Type is (UNKNOWN,NOT_VALIDATED,VALIDATING_IN_PROGRESS,VALIDATION_COMPLETE);

   function To_EnhancedMatchStatusType_Type (Value : in String) return .Models.EnhancedMatchStatusType_Type;

   function To_String (Value : in EnhancedMatchStatusType_Type) return String;


   package EnhancedMatchStatusType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.EnhancedMatchStatusType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.EnhancedMatchStatusType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EnhancedMatchStatusType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.EnhancedMatchStatusType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out EnhancedMatchStatusType_Type_Vectors.Vector);



   type EntityStatus_Type is (ACTIVE,PAUSED,ARCHIVED,DRAFT,DELETED_DRAFT);

   function To_EntityStatus_Type (Value : in String) return .Models.EntityStatus_Type;

   function To_String (Value : in EntityStatus_Type) return String;


   package EntityStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.EntityStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.EntityStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EntityStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.EntityStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out EntityStatus_Type_Vectors.Vector);


   --  ------------------------------
   --  Error
   --  ------------------------------
   type Error_Type is
     record
       Code : Integer;
       Message : Swagger.UString;
     end record;


   package Error_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Error_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Error_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Error_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Error_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Error_Type_Vectors.Vector);


   --  ------------------------------
   --  FollowUserRequest
   --  ------------------------------
   type FollowUserRequest_Type is
     record
       Auto_Follow : Swagger.Nullable_Boolean;
     end record;


   package FollowUserRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FollowUserRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FollowUserRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FollowUserRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FollowUserRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FollowUserRequest_Type_Vectors.Vector);



   type GenderFilter_Type is
     record
       GENDER : .Models.CatalogsProductGroupMultipleGenderCriteria_Type;
     end record;


   package GenderFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GenderFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GenderFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenderFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GenderFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GenderFilter_Type_Vectors.Vector);



   type Gender_Type is (FEMALE,MALE,UNISEX);

   function To_Gender_Type (Value : in String) return .Models.Gender_Type;

   function To_String (Value : in Gender_Type) return String;


   package Gender_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Gender_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Gender_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Gender_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Gender_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Gender_Type_Vectors.Vector);



   type GetAudiencesOrderBy_Type is (NONE,ID,SIZE,CREATION_DATE,UPDATED_TIME,NAME,STATUS,TYPE);

   function To_GetAudiencesOrderBy_Type (Value : in String) return .Models.GetAudiencesOrderBy_Type;

   function To_String (Value : in GetAudiencesOrderBy_Type) return String;


   package GetAudiencesOrderBy_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetAudiencesOrderBy_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetAudiencesOrderBy_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetAudiencesOrderBy_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetAudiencesOrderBy_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetAudiencesOrderBy_Type_Vectors.Vector);



   type GetBusinessAssetTypeResponse_Type is (AD_ACCOUNT,PROFILE,ASSET_GROUP,CONVERSION_TAG);

   function To_GetBusinessAssetTypeResponse_Type (Value : in String) return .Models.GetBusinessAssetTypeResponse_Type;

   function To_String (Value : in GetBusinessAssetTypeResponse_Type) return String;


   package GetBusinessAssetTypeResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetBusinessAssetTypeResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetBusinessAssetTypeResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetBusinessAssetTypeResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetBusinessAssetTypeResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetBusinessAssetTypeResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  GetMMMReportResponseData
   --  ------------------------------
   type GetMMMReportResponseData_Type is
     record
       Report_Status : Swagger.Nullable_UString;
       Url : Swagger.Nullable_UString;
       Size : Swagger.Number;
     end record;


   package GetMMMReportResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetMMMReportResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetMMMReportResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetMMMReportResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetMMMReportResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetMMMReportResponseData_Type_Vectors.Vector);



   type GoogleProductCategory0Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_0 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory0Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory0Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory0Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory0Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory0Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory0Filter_Type_Vectors.Vector);



   type GoogleProductCategory1Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_1 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory1Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory1Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory1Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory1Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory1Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory1Filter_Type_Vectors.Vector);



   type GoogleProductCategory2Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_2 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory2Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory2Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory2Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory2Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory2Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory2Filter_Type_Vectors.Vector);



   type GoogleProductCategory3Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_3 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory3Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory3Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory3Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory3Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory3Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory3Filter_Type_Vectors.Vector);



   type GoogleProductCategory4Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_4 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory4Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory4Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory4Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory4Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory4Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory4Filter_Type_Vectors.Vector);



   type GoogleProductCategory5Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_5 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory5Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory5Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory5Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory5Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory5Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory5Filter_Type_Vectors.Vector);



   type GoogleProductCategory6Filter_Type is
     record
       GOOGLE_PRODUCT_CATEGORY_6 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package GoogleProductCategory6Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GoogleProductCategory6Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GoogleProductCategory6Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GoogleProductCategory6Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GoogleProductCategory6Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GoogleProductCategory6Filter_Type_Vectors.Vector);



   type Granularity_Type is (TOTAL,DAY,HOUR,WEEK,MONTH);

   function To_Granularity_Type (Value : in String) return .Models.Granularity_Type;

   function To_String (Value : in Granularity_Type) return String;


   package Granularity_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Granularity_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Granularity_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Granularity_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Granularity_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Granularity_Type_Vectors.Vector);



   type GridClickType_Type is (CLOSEUP,DIRECT_TO_DESTINATION);

   function To_GridClickType_Type (Value : in String) return .Models.GridClickType_Type;

   function To_String (Value : in GridClickType_Type) return String;


   package GridClickType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GridClickType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GridClickType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GridClickType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GridClickType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GridClickType_Type_Vectors.Vector);



   type HotelIdFilter_Type is
     record
       HOTEL_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package HotelIdFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.HotelIdFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.HotelIdFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HotelIdFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.HotelIdFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out HotelIdFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  ImageDetails
   --  ------------------------------
   type ImageDetails_Type is
     record
       Width : Integer;
       Height : Integer;
       Url : Swagger.UString;
     end record;


   package ImageDetails_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ImageDetails_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ImageDetails_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ImageDetails_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ImageDetails_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ImageDetails_Type_Vectors.Vector);



   type ImageMetadataImages_Type is
     record
       P_150x_150 : .Models.ImageDetails_Type;
       P_400x_300 : .Models.ImageDetails_Type;
       P_600x : .Models.ImageDetails_Type;
       P_1200x : .Models.ImageDetails_Type;
     end record;


   package ImageMetadataImages_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ImageMetadataImages_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ImageMetadataImages_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ImageMetadataImages_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ImageMetadataImages_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ImageMetadataImages_Type_Vectors.Vector);



   type IntegrationLogClientError_Type is
     record
       Cause : Swagger.Nullable_UString;
       Column_Number : Swagger.Nullable_Integer;
       File_Name : Swagger.Nullable_UString;
       Line_Number : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
       Message_Detail : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Number : Swagger.Nullable_Integer;
       Stack_Trace : Swagger.Nullable_UString;
     end record;


   package IntegrationLogClientError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLogClientError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLogClientError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLogClientError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLogClientError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLogClientError_Type_Vectors.Vector);



   type IntegrationLogClientRequest_Type is
     record
       Method : Swagger.UString;
       Host : Swagger.UString;
       Path : Swagger.UString;
       Request_Headers : Swagger.UString_Map;
       Response_Headers : Swagger.UString_Map;
       Response_Status_Code : Swagger.Nullable_Integer;
     end record;


   package IntegrationLogClientRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLogClientRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLogClientRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLogClientRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLogClientRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLogClientRequest_Type_Vectors.Vector);



   type IntegrationLogsInvalidLogResponseRejectedLogsInner_Type is
     record
       Log_Index : Swagger.Nullable_Integer;
       Field : Swagger.UString;
       Value : Swagger.UString;
       Reason : Swagger.UString;
     end record;


   package IntegrationLogsInvalidLogResponseRejectedLogsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLogsInvalidLogResponseRejectedLogsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLogsInvalidLogResponseRejectedLogsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLogsInvalidLogResponseRejectedLogsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLogsInvalidLogResponseRejectedLogsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLogsInvalidLogResponseRejectedLogsInner_Type_Vectors.Vector);



   type IntegrationLogsSuccessResponse_Type is
     record
       Message : Swagger.Nullable_UString;
     end record;


   package IntegrationLogsSuccessResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLogsSuccessResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLogsSuccessResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLogsSuccessResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLogsSuccessResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLogsSuccessResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  integration
   --  Integration metadata
   --  ------------------------------
   type IntegrationMetadata_Type is
     record
       Id : Swagger.Nullable_UString;
       External_Business_Id : Swagger.Nullable_UString;
       Connected_Merchant_Id : Swagger.Nullable_UString;
       Connected_User_Id : Swagger.Nullable_UString;
       Connected_Advertiser_Id : Swagger.Nullable_UString;
       Connected_Lba_Id : Swagger.Nullable_UString;
       Connected_Tag_Id : Swagger.Nullable_UString;
       Partner_Access_Token_Expiry : Swagger.Number;
       Partner_Refresh_Token_Expiry : Swagger.Number;
       Scopes : Swagger.Nullable_UString;
       Created_Timestamp : Swagger.Number;
       Updated_Timestamp : Swagger.Number;
       Additional_Id_1 : Swagger.Nullable_UString;
       Partner_Metadata : Swagger.Nullable_UString;
     end record;


   package IntegrationMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  Integration record
   --  Integration record
   --  ------------------------------
   type IntegrationRecord_Type is
     record
       Id : Swagger.Nullable_UString;
       External_Business_Id : Swagger.Nullable_UString;
       Connected_Merchant_Id : Swagger.Nullable_UString;
       Connected_User_Id : Swagger.Nullable_UString;
       Connected_Advertiser_Id : Swagger.Nullable_UString;
       Connected_Lba_Id : Swagger.Nullable_UString;
       Connected_Tag_Id : Swagger.Nullable_UString;
       Partner_Access_Token : Swagger.Nullable_UString;
       Partner_Refresh_Token : Swagger.Nullable_UString;
       Partner_Primary_Email : Swagger.Nullable_UString;
       Partner_Access_Token_Expiry : Swagger.Nullable_Integer;
       Partner_Refresh_Token_Expiry : Swagger.Nullable_Integer;
       Scopes : Swagger.Nullable_UString;
       Partner_Metadata : Swagger.Nullable_UString;
       Additional_Id_1 : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
     end record;


   package IntegrationRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationRecord_Type_Vectors.Vector);



   type IntegrationRequestPatch_Type is
     record
       Connected_Merchant_Id : Swagger.Nullable_UString;
       Connected_Advertiser_Id : Swagger.Nullable_UString;
       Connected_Lba_Id : Swagger.Nullable_UString;
       Connected_Tag_Id : Swagger.Nullable_UString;
       Partner_Access_Token : Swagger.Nullable_UString;
       Partner_Refresh_Token : Swagger.Nullable_UString;
       Partner_Primary_Email : Swagger.Nullable_UString;
       Partner_Access_Token_Expiry : Swagger.Number;
       Partner_Refresh_Token_Expiry : Swagger.Number;
       Scopes : Swagger.Nullable_UString;
       Additional_Id_1 : Swagger.Nullable_UString;
       Partner_Metadata : Swagger.Nullable_UString;
     end record;


   package IntegrationRequestPatch_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationRequestPatch_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationRequestPatch_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationRequestPatch_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationRequestPatch_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationRequestPatch_Type_Vectors.Vector);



   type IntegrationRequest_Type is
     record
       External_Business_Id : Swagger.Nullable_UString;
       Connected_Merchant_Id : Swagger.Nullable_UString;
       Connected_Advertiser_Id : Swagger.Nullable_UString;
       Connected_Lba_Id : Swagger.Nullable_UString;
       Connected_Tag_Id : Swagger.Nullable_UString;
       Partner_Access_Token : Swagger.Nullable_UString;
       Partner_Refresh_Token : Swagger.Nullable_UString;
       Partner_Primary_Email : Swagger.Nullable_UString;
       Partner_Access_Token_Expiry : Swagger.Nullable_Integer;
       Partner_Refresh_Token_Expiry : Swagger.Nullable_Integer;
       Scopes : Swagger.Nullable_UString;
       Additional_Id_1 : Swagger.Nullable_UString;
       Partner_Metadata : Swagger.Nullable_UString;
     end record;


   package IntegrationRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  Interest
   --  ------------------------------
   type Interest_Type is
     record
       Canonical_Url : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
       Key : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
     end record;


   package Interest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Interest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Interest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Interest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Interest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Interest_Type_Vectors.Vector);



   type InviteAssetsSummaryAdAccountsInner_Type is
     record
       Id : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
     end record;


   package InviteAssetsSummaryAdAccountsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteAssetsSummaryAdAccountsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteAssetsSummaryAdAccountsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteAssetsSummaryAdAccountsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteAssetsSummaryAdAccountsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteAssetsSummaryAdAccountsInner_Type_Vectors.Vector);



   type InviteAssetsSummaryProfilesInner_Type is
     record
       Id : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
     end record;


   package InviteAssetsSummaryProfilesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteAssetsSummaryProfilesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteAssetsSummaryProfilesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteAssetsSummaryProfilesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteAssetsSummaryProfilesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteAssetsSummaryProfilesInner_Type_Vectors.Vector);



   type InviteExceptionResponse_Type is
     record
       Invite_Or_Request_Id : Swagger.Nullable_UString;
       Code : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
       Users_Or_Partner_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package InviteExceptionResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteExceptionResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteExceptionResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteExceptionResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteExceptionResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteExceptionResponse_Type_Vectors.Vector);



   type InviteStatus_Type is (PENDING,ACCEPTED,DECLINED,CANCELLED,EXPIRED);

   function To_InviteStatus_Type (Value : in String) return .Models.InviteStatus_Type;

   function To_String (Value : in InviteStatus_Type) return String;


   package InviteStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteStatus_Type_Vectors.Vector);



   type InviteType_Type is (MEMBER_INVITE,PARTNER_INVITE,PARTNER_REQUEST);

   function To_InviteType_Type (Value : in String) return .Models.InviteType_Type;

   function To_String (Value : in InviteType_Type) return String;


   package InviteType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteType_Type_Vectors.Vector);



   type ItemAttributesRequestAllOfImageLink_Type is new oneOf<array,string>;


   package ItemAttributesRequestAllOfImageLink_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemAttributesRequestAllOfImageLink_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemAttributesRequestAllOfImageLink_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemAttributesRequestAllOfImageLink_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemAttributesRequestAllOfImageLink_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemAttributesRequestAllOfImageLink_Type_Vectors.Vector);



   type ItemAttributes_Type is
     record
       Ad_Link : Swagger.Nullable_UString;
       Adult : Swagger.Nullable_Boolean;
       Age_Group : Swagger.Nullable_UString;
       Availability : Swagger.Nullable_UString;
       Average_Review_Rating : Swagger.Number;
       Brand : Swagger.Nullable_UString;
       Checkout_Enabled : Swagger.Nullable_Boolean;
       Color : Swagger.Nullable_UString;
       Condition : Swagger.Nullable_UString;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Free_Shipping_Label : Swagger.Nullable_Boolean;
       Free_Shipping_Limit : Swagger.Nullable_UString;
       Gender : Swagger.Nullable_UString;
       Google_Product_Category : Swagger.Nullable_UString;
       Gtin : Swagger.Nullable_Integer;
       Id : Swagger.Nullable_UString;
       Item_Group_Id : Swagger.Nullable_UString;
       Last_Updated_Time : Swagger.Nullable_Long;
       Link : Swagger.Nullable_UString;
       Material : Swagger.Nullable_UString;
       Min_Ad_Price : Swagger.Nullable_UString;
       Mobile_Link : Swagger.Nullable_UString;
       Mpn : Swagger.Nullable_UString;
       Number_Of_Ratings : Swagger.Nullable_Integer;
       Number_Of_Reviews : Swagger.Nullable_Integer;
       Pattern : Swagger.Nullable_UString;
       Price : Swagger.Nullable_UString;
       Product_Type : Swagger.Nullable_UString;
       Sale_Price : Swagger.Nullable_UString;
       Shipping : Swagger.Nullable_UString;
       Shipping_Height : Swagger.Nullable_UString;
       Shipping_Weight : Swagger.Nullable_UString;
       Shipping_Width : Swagger.Nullable_UString;
       Size : Swagger.Nullable_UString;
       Size_System : Swagger.Nullable_UString;
       Size_Type : Swagger.Nullable_UString;
       Tax : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Variant_Names : Swagger.UString_Vectors.Vector;
       Variant_Values : Swagger.UString_Vectors.Vector;
       Additional_Image_Link : Swagger.UString_Vectors.Vector;
       Image_Link : Swagger.UString_Vectors.Vector;
       Video_Link : Swagger.Nullable_UString;
     end record;


   package ItemAttributes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemAttributes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemAttributes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemAttributes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemAttributes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemAttributes_Type_Vectors.Vector);



   type ItemDeleteBatchRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
     end record;


   package ItemDeleteBatchRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemDeleteBatchRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemDeleteBatchRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemDeleteBatchRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemDeleteBatchRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemDeleteBatchRecord_Type_Vectors.Vector);



   type ItemDeleteDiscontinuedBatchRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
     end record;


   package ItemDeleteDiscontinuedBatchRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemDeleteDiscontinuedBatchRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemDeleteDiscontinuedBatchRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemDeleteDiscontinuedBatchRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemDeleteDiscontinuedBatchRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemDeleteDiscontinuedBatchRecord_Type_Vectors.Vector);



   type ItemGroupIdFilter_Type is
     record
       ITEM_GROUP_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package ItemGroupIdFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemGroupIdFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemGroupIdFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemGroupIdFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemGroupIdFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemGroupIdFilter_Type_Vectors.Vector);



   type ItemIdFilter_Type is
     record
       ITEM_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package ItemIdFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemIdFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemIdFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemIdFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemIdFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemIdFilter_Type_Vectors.Vector);



   type ItemProcessingStatus_Type is (SUCCESS,FAILURE,PROCESSING);

   function To_ItemProcessingStatus_Type (Value : in String) return .Models.ItemProcessingStatus_Type;

   function To_String (Value : in ItemProcessingStatus_Type) return String;


   package ItemProcessingStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemProcessingStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemProcessingStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemProcessingStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemProcessingStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemProcessingStatus_Type_Vectors.Vector);



   type ItemValidationEvent_Type is
     record
       Attribute : Swagger.Nullable_UString;
       Code : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
     end record;


   package ItemValidationEvent_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemValidationEvent_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemValidationEvent_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemValidationEvent_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemValidationEvent_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemValidationEvent_Type_Vectors.Vector);


   --  ------------------------------
   --  KeywordMetrics
   --  Keyword metrics JSON
   --  ------------------------------
   type KeywordMetrics_Type is
     record
       Avg_Cpc_In_Micro_Currency : Swagger.Number;
       Keyword_Query_Volume : Swagger.Nullable_UString;
     end record;


   package KeywordMetrics_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordMetrics_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordMetrics_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordMetrics_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordMetrics_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordMetrics_Type_Vectors.Vector);


   --  ------------------------------
   --  KeywordUpdate
   --  ------------------------------
   type KeywordUpdate_Type is
     record
       Id : Swagger.UString;
       Archived : Swagger.Nullable_Boolean;
       Bid : Swagger.Nullable_Integer;
     end record;


   package KeywordUpdate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordUpdate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordUpdate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordUpdate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordUpdate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordUpdate_Type_Vectors.Vector);



   type Language_Type is (AM,AR,AZ,BG,BN,BS,CA,CS,DA,DV,DZ,DE,EL,EN,ES,ET,FA,FI,FR,HE,HI,HR,HU,HY,ID,IN,IS,IT,IW,JA,KA,KM,KO,LO,LT,LV,MK,MN,MS,MY,NB,NE,NL,NO,PL,PT,RO,RU,SK,SL,SQ,SR,SV,TL,UK,VI,TE,TH,TR,XX,ZH);

   function To_Language_Type (Value : in String) return .Models.Language_Type;

   function To_String (Value : in Language_Type) return String;


   package Language_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Language_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Language_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Language_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Language_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Language_Type_Vectors.Vector);



   type LeadFormCommonPolicyLinksInner_Type is
     record
       Label : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
     end record;


   package LeadFormCommonPolicyLinksInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormCommonPolicyLinksInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormCommonPolicyLinksInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormCommonPolicyLinksInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormCommonPolicyLinksInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormCommonPolicyLinksInner_Type_Vectors.Vector);



   type LeadFormQuestionFieldType_Type is (TEXT_FIELD,TEXT_AREA,RADIO_LIST,CHECKBOX);

   function To_LeadFormQuestionFieldType_Type (Value : in String) return .Models.LeadFormQuestionFieldType_Type;

   function To_String (Value : in LeadFormQuestionFieldType_Type) return String;


   package LeadFormQuestionFieldType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormQuestionFieldType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormQuestionFieldType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormQuestionFieldType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormQuestionFieldType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormQuestionFieldType_Type_Vectors.Vector);



   type LeadFormQuestionType_Type is (CUSTOM,FULL_NAME,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,ZIP_CODE,GENDER,CITY,COUNTRY,STATE_PROVINCE,ADDRESS,DATE_OF_BIRTH,AGE);

   function To_LeadFormQuestionType_Type (Value : in String) return .Models.LeadFormQuestionType_Type;

   function To_String (Value : in LeadFormQuestionType_Type) return String;


   package LeadFormQuestionType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormQuestionType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormQuestionType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormQuestionType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormQuestionType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormQuestionType_Type_Vectors.Vector);



   type LeadFormStatus_Type is (DRAFT,ACTIVE);

   function To_LeadFormStatus_Type (Value : in String) return .Models.LeadFormStatus_Type;

   function To_String (Value : in LeadFormStatus_Type) return String;


   package LeadFormStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormStatus_Type_Vectors.Vector);


   --  ------------------------------
   --  LeadFormTestRequest
   --  Request to create test data for lead data test API.
   --  ------------------------------
   type LeadFormTestRequest_Type is
     record
       Answers : Swagger.UString_Vectors.Vector;
     end record;


   package LeadFormTestRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormTestRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormTestRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormTestRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormTestRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormTestRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  LeadFormTestResponse
   --  Response for lead data test API.
   --  ------------------------------
   type LeadFormTestResponse_Type is
     record
       Subscription_Id : Swagger.Nullable_UString;
     end record;


   package LeadFormTestResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormTestResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormTestResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormTestResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormTestResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormTestResponse_Type_Vectors.Vector);



   type LeadsExportCreateRequest_Type is
     record
       Start_Date : Swagger.UString;
       End_Date : Swagger.UString;
       Ad_Id : Swagger.UString;
     end record;


   package LeadsExportCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadsExportCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadsExportCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadsExportCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadsExportCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadsExportCreateRequest_Type_Vectors.Vector);



   type LeadsExportCreateResponse_Type is
     record
       Leads_Export_Id : Swagger.Nullable_UString;
     end record;


   package LeadsExportCreateResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadsExportCreateResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadsExportCreateResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadsExportCreateResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadsExportCreateResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadsExportCreateResponse_Type_Vectors.Vector);



   type LeadsExportStatus_Type is (IN_PROGRESS,FINISHED,FAILED);

   function To_LeadsExportStatus_Type (Value : in String) return .Models.LeadsExportStatus_Type;

   function To_String (Value : in LeadsExportStatus_Type) return String;


   package LeadsExportStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadsExportStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadsExportStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadsExportStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadsExportStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadsExportStatus_Type_Vectors.Vector);


   --  ------------------------------
   --  LineItem
   --  ------------------------------
   type LineItem_Type is
     record
       Product_Brand : Swagger.Nullable_UString;
       Product_Category : Swagger.Nullable_UString;
       Product_Id : Swagger.Nullable_Integer;
       Product_Name : Swagger.Nullable_UString;
       Product_Price : Swagger.Nullable_UString;
       Product_Quantity : Swagger.Nullable_Integer;
       Product_Variant : Swagger.Nullable_UString;
       Product_Variant_Id : Swagger.Nullable_UString;
     end record;


   package LineItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LineItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LineItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LineItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LineItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LineItem_Type_Vectors.Vector);


   --  ------------------------------
   --  LinkedBusiness
   --  ------------------------------
   type LinkedBusiness_Type is
     record
       Username : Swagger.Nullable_UString;
       Image_Small_Url : Swagger.Nullable_UString;
       Image_Medium_Url : Swagger.Nullable_UString;
       Image_Large_Url : Swagger.Nullable_UString;
       Image_Xlarge_Url : Swagger.Nullable_UString;
     end record;


   package LinkedBusiness_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LinkedBusiness_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LinkedBusiness_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LinkedBusiness_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LinkedBusiness_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LinkedBusiness_Type_Vectors.Vector);



   type MMMReportingColumn_Type is (SPEND_IN_DOLLAR,SPEND_IN_MICRO_DOLLAR,ECPC_IN_DOLLAR,ECTR,CAMPAIGN_NAME,TOTAL_ENGAGEMENT,EENGAGEMENT_RATE,ECPM_IN_DOLLAR,CAMPAIGN_ID,ADVERTISER_ID,AD_GROUP_ID,AD_GROUP_NAME,CLICKTHROUGH_1,IMPRESSION_1,CLICKTHROUGH_2,IMPRESSION_2,TOTAL_CLICKTHROUGH,TOTAL_IMPRESSION,ADVERTISER_NAME,SPEND_ORDER_LINE_PAID_TYPE);

   function To_MMMReportingColumn_Type (Value : in String) return .Models.MMMReportingColumn_Type;

   function To_String (Value : in MMMReportingColumn_Type) return String;


   package MMMReportingColumn_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MMMReportingColumn_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MMMReportingColumn_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MMMReportingColumn_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MMMReportingColumn_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MMMReportingColumn_Type_Vectors.Vector);



   type MMMReportingTargetingType_Type is (APPTYPE,COUNTRY,CREATIVE_TYPE,GENDER,LOCATION);

   function To_MMMReportingTargetingType_Type (Value : in String) return .Models.MMMReportingTargetingType_Type;

   function To_String (Value : in MMMReportingTargetingType_Type) return String;


   package MMMReportingTargetingType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MMMReportingTargetingType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MMMReportingTargetingType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MMMReportingTargetingType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MMMReportingTargetingType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MMMReportingTargetingType_Type_Vectors.Vector);



   type MatchTypeResponse_Type is (BROAD,PHRASE,EXACT,EXACT_NEGATIVE,PHRASE_NEGATIVE);

   function To_MatchTypeResponse_Type (Value : in String) return .Models.MatchTypeResponse_Type;

   function To_String (Value : in MatchTypeResponse_Type) return String;


   package MatchTypeResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MatchTypeResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MatchTypeResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MatchTypeResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MatchTypeResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MatchTypeResponse_Type_Vectors.Vector);



   type MatchType_Type is (BROAD,PHRASE,EXACT,EXACT_NEGATIVE,PHRASE_NEGATIVE);

   function To_MatchType_Type (Value : in String) return .Models.MatchType_Type;

   function To_String (Value : in MatchType_Type) return String;


   package MatchType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MatchType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MatchType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MatchType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MatchType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MatchType_Type_Vectors.Vector);



   type MaxPriceFilter_Type is
     record
       MAX_PRICE : .Models.CatalogsProductGroupPricingCriteria_Type;
     end record;


   package MaxPriceFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MaxPriceFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MaxPriceFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MaxPriceFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MaxPriceFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MaxPriceFilter_Type_Vectors.Vector);



   type MediaTypeFilter_Type is
     record
       MEDIA_TYPE : .Models.CatalogsProductGroupMultipleMediaTypesCriteria_Type;
     end record;


   package MediaTypeFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaTypeFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaTypeFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaTypeFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaTypeFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaTypeFilter_Type_Vectors.Vector);



   type MediaType_Type is (IMAGE,VIDEO);

   function To_MediaType_Type (Value : in String) return .Models.MediaType_Type;

   function To_String (Value : in MediaType_Type) return String;


   package MediaType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaType_Type_Vectors.Vector);



   type MediaUploadAllOfUploadParameters_Type is
     record
       X_Amz_Date : Swagger.Nullable_UString;
       X_Amz_Signature : Swagger.Nullable_UString;
       X_Amz_Security_Token : Swagger.Nullable_UString;
       X_Amz_Algorithm : Swagger.Nullable_UString;
       Key : Swagger.Nullable_UString;
       Policy : Swagger.Nullable_UString;
       X_Amz_Credential : Swagger.Nullable_UString;
       Content_Type : Swagger.Nullable_UString;
     end record;


   package MediaUploadAllOfUploadParameters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaUploadAllOfUploadParameters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaUploadAllOfUploadParameters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaUploadAllOfUploadParameters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaUploadAllOfUploadParameters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaUploadAllOfUploadParameters_Type_Vectors.Vector);



   type MediaUploadStatus_Type is (REGISTERED,PROCESSING,SUCCEEDED,FAILED);

   function To_MediaUploadStatus_Type (Value : in String) return .Models.MediaUploadStatus_Type;

   function To_String (Value : in MediaUploadStatus_Type) return String;


   package MediaUploadStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaUploadStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaUploadStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaUploadStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaUploadStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaUploadStatus_Type_Vectors.Vector);



   type MediaUploadType_Type is (VIDEO);

   function To_MediaUploadType_Type (Value : in String) return .Models.MediaUploadType_Type;

   function To_String (Value : in MediaUploadType_Type) return String;


   package MediaUploadType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaUploadType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaUploadType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaUploadType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaUploadType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaUploadType_Type_Vectors.Vector);



   type MemberBusinessRole_Type is (EMPLOYEE,BIZ_ADMIN);

   function To_MemberBusinessRole_Type (Value : in String) return .Models.MemberBusinessRole_Type;

   function To_String (Value : in MemberBusinessRole_Type) return String;


   package MemberBusinessRole_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MemberBusinessRole_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MemberBusinessRole_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MemberBusinessRole_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MemberBusinessRole_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MemberBusinessRole_Type_Vectors.Vector);



   type MetricsReportingLevel_Type is (ADVERTISER,ADVERTISER_TARGETING,CAMPAIGN,CAMPAIGN_TARGETING,AD_GROUP,AD_GROUP_TARGETING,PIN_PROMOTION,PIN_PROMOTION_TARGETING,KEYWORD,PRODUCT_GROUP,PRODUCT_GROUP_TARGETING,PRODUCT_ITEM,PRODUCT_ITEM_TARGETING);

   function To_MetricsReportingLevel_Type (Value : in String) return .Models.MetricsReportingLevel_Type;

   function To_String (Value : in MetricsReportingLevel_Type) return String;


   package MetricsReportingLevel_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MetricsReportingLevel_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MetricsReportingLevel_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MetricsReportingLevel_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MetricsReportingLevel_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MetricsReportingLevel_Type_Vectors.Vector);



   type MinPriceFilter_Type is
     record
       MIN_PRICE : .Models.CatalogsProductGroupPricingCriteria_Type;
     end record;


   package MinPriceFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MinPriceFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MinPriceFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MinPriceFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MinPriceFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MinPriceFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  Generic exception class to be used within schemas
   --  ------------------------------
   type Model_Exception is
     record
       Code : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
     end record;


   package Model_Exception_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Model_Exception);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Model_Exception);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Model_Exception_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Model_Exception);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Model_Exception_Vectors.Vector);



   type NonNullableCatalogsCurrency_Type is (AED,AFN,ALL,AMD,ANG,AOA,ARS,AUD,AWG,AZN,BAM,BBD,BDT,BGN,BHD,BIF,BMD,BND,BOB,BRL,BSD,BTN,BWP,BYN,BYR,BZD,CAD,CDF,CHF,CLP,CNY,COP,CRC,CUC,CUP,CVE,CZK,DJF,DKK,DOP,DZD,EGP,ERN,ETB,EUR,FJD,FKP,GBP,GEL,GGP,GHS,GIP,GMD,GNF,GTQ,GYD,HKD,HNL,HRK,HTG,HUF,IDR,ILS,IMP,INR,IQD,IRR,ISK,JEP,JMD,JOD,JPY,KES,KGS,KHR,KMF,KPW,KRW,KWD,KYD,KZT,LAK,LBP,LKR,LRD,LSL,LYD,MAD,MDL,MGA,MKD,MMK,MNT,MOP,MRO,MUR,MVR,MWK,MXN,MYR,MZN,NAD,NGN,NIO,NOK,NPR,NZD,OMR,PAB,PEN,PGK,PHP,PKR,PLN,PYG,QAR,RON,RSD,RUB,RWF,SAR,SBD,SCR,SDG,SEK,SGD,SHP,SLL,SOS,SPL,SRD,STD,SVC,SYP,SZL,THB,TJS,TMT,TND,TOP,TRY,TTD,TVD,TWD,TZS,UAH,UGX,USD,UYU,UZS,VEF,VND,VUV,WST,XAF,XCD,XDR,XOF,XPF,YER,ZAR,ZMW,ZWD);

   function To_NonNullableCatalogsCurrency_Type (Value : in String) return .Models.NonNullableCatalogsCurrency_Type;

   function To_String (Value : in NonNullableCatalogsCurrency_Type) return String;


   package NonNullableCatalogsCurrency_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.NonNullableCatalogsCurrency_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.NonNullableCatalogsCurrency_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NonNullableCatalogsCurrency_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.NonNullableCatalogsCurrency_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out NonNullableCatalogsCurrency_Type_Vectors.Vector);



   type NonNullableProductAvailabilityType_Type is (IN_STOCK,OUT_OF_STOCK,PREORDER);

   function To_NonNullableProductAvailabilityType_Type (Value : in String) return .Models.NonNullableProductAvailabilityType_Type;

   function To_String (Value : in NonNullableProductAvailabilityType_Type) return String;


   package NonNullableProductAvailabilityType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.NonNullableProductAvailabilityType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.NonNullableProductAvailabilityType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NonNullableProductAvailabilityType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.NonNullableProductAvailabilityType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out NonNullableProductAvailabilityType_Type_Vectors.Vector);



   type NullableCatalogsItemFieldType_Type is (ITEM_ID,ITEM_GROUP_ID,TITLE,DESCRIPTION,ITEM_LINK,ORGANIC_LINK,IMAGE_LINK,ADWORDS_REDIRECT_LINK,AD_LINK,SIZE,GOOGLE_PRODUCT_CATEGORY,PRODUCT_CATEGORY,CONDITION,AVAILABILITY,GENDER,AGE_GROUP,SIZE_TYPE,SIZE_SYSTEM,ADULT,SHIPPING,SHIPPING_WEIGHT,TAX,MULTIPACK,ADDITIONAL_IMAGE_LINK,PRICE,SALE_PRICE,IS_BUNDLE,EXPIRATION_DATE,SALE_PRICE_EFFECTIVE_DATE,AVAILABILITY_DATE,WEIGHT_UNIT,PRODUCT_TYPE,CUSTOM_LABEL_0,CUSTOM_LABEL_1,CUSTOM_LABEL_2,CUSTOM_LABEL_3,CUSTOM_LABEL_4,MATERIAL,PATTERN,COLOR,BRAND,GTIN,MPN,IOS_DEEP_LINK,ANDROID_DEEP_LINK,FREE_SHIPPING_LABEL,FREE_SHIPPING_LIMIT,AVG_REVIEW_RATING,NUM_RATINGS,NUM_REVIEWS,ALT_TEXT,VARIANT_NAMES,VARIANT_VALUES,MIN_AD_PRICE,SHIPPING_WIDTH,SHIPPING_HEIGHT);

   function To_NullableCatalogsItemFieldType_Type (Value : in String) return .Models.NullableCatalogsItemFieldType_Type;

   function To_String (Value : in NullableCatalogsItemFieldType_Type) return String;


   package NullableCatalogsItemFieldType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.NullableCatalogsItemFieldType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.NullableCatalogsItemFieldType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NullableCatalogsItemFieldType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.NullableCatalogsItemFieldType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out NullableCatalogsItemFieldType_Type_Vectors.Vector);



   type NullableCurrency_Type is (AED,AFN,ALL,AMD,ANG,AOA,ARS,AUD,AWG,AZN,BAM,BBD,BDT,BGN,BHD,BIF,BMD,BND,BOB,BRL,BSD,BTN,BWP,BYN,BYR,BZD,CAD,CDF,CHF,CLP,CNY,COP,CRC,CUC,CUP,CVE,CZK,DJF,DKK,DOP,DZD,EGP,ERN,ETB,EUR,FJD,FKP,GBP,GEL,GGP,GHS,GIP,GMD,GNF,GTQ,GYD,HKD,HNL,HRK,HTG,HUF,IDR,ILS,IMP,INR,IQD,IRR,ISK,JEP,JMD,JOD,JPY,KES,KGS,KHR,KMF,KPW,KRW,KWD,KYD,KZT,LAK,LBP,LKR,LRD,LSL,LYD,MAD,MDL,MGA,MKD,MMK,MNT,MOP,MRO,MUR,MVR,MWK,MXN,MYR,MZN,NAD,NGN,NIO,NOK,NPR,NZD,OMR,PAB,PEN,PGK,PHP,PKR,PLN,PYG,QAR,RON,RSD,RUB,RWF,SAR,SBD,SCR,SDG,SEK,SGD,SHP,SLL,SOS,SPL,SRD,STD,SVC,SYP,SZL,THB,TJS,TMT,TND,TOP,TRY,TTD,TVD,TWD,TZS,UAH,UGX,USD,UYU,UZS,VEF,VND,VUV,WST,XAF,XCD,XDR,XOF,XPF,YER,ZAR,ZMW,ZWD);

   function To_NullableCurrency_Type (Value : in String) return .Models.NullableCurrency_Type;

   function To_String (Value : in NullableCurrency_Type) return String;


   package NullableCurrency_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.NullableCurrency_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.NullableCurrency_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NullableCurrency_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.NullableCurrency_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out NullableCurrency_Type_Vectors.Vector);


   --  ------------------------------
   --  client_credentials
   --  A request to receive a client token.
   --  ------------------------------
   type OauthAccessTokenRequestClientCredentials_Type is
     record
       Grant_Type : Swagger.UString;
       Scope : Swagger.UString;
     end record;


   package OauthAccessTokenRequestClientCredentials_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenRequestClientCredentials_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenRequestClientCredentials_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenRequestClientCredentials_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenRequestClientCredentials_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenRequestClientCredentials_Type_Vectors.Vector);


   --  ------------------------------
   --  authorization_code
   --  A request to exchange an authorization code for an access token.
   --  ------------------------------
   type OauthAccessTokenRequestCode_Type is
     record
       Grant_Type : Swagger.UString;
       Code : Swagger.UString;
       Redirect_Uri : Swagger.UString;
     end record;


   package OauthAccessTokenRequestCode_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenRequestCode_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenRequestCode_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenRequestCode_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenRequestCode_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenRequestCode_Type_Vectors.Vector);


   --  ------------------------------
   --  refresh_token
   --  A request to exchange a refresh token for a new access token.
   --  ------------------------------
   type OauthAccessTokenRequestRefresh_Type is
     record
       Grant_Type : Swagger.UString;
       Refresh_Token : Swagger.UString;
       Scope : Swagger.Nullable_UString;
       Refresh_On : Swagger.Nullable_Boolean;
     end record;


   package OauthAccessTokenRequestRefresh_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenRequestRefresh_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenRequestRefresh_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenRequestRefresh_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenRequestRefresh_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenRequestRefresh_Type_Vectors.Vector);


   --  ------------------------------
   --  OAuth client token response
   --  A successful OAuth client token response for the client token flow.
   --  ------------------------------
   type OauthAccessTokenResponseClientCredentials_Type is
     record
       Response_Type : Swagger.Nullable_UString;
       Access_Token : Swagger.UString;
       Token_Type : Swagger.UString;
       Expires_In : Integer;
       Scope : Swagger.UString;
     end record;


   package OauthAccessTokenResponseClientCredentials_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenResponseClientCredentials_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenResponseClientCredentials_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenResponseClientCredentials_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenResponseClientCredentials_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenResponseClientCredentials_Type_Vectors.Vector);


   --  ------------------------------
   --  OAuth access token response
   --  A successful OAuth access token response for the authorization code flow.
   --  ------------------------------
   type OauthAccessTokenResponseCode_Type is
     record
       Response_Type : Swagger.Nullable_UString;
       Access_Token : Swagger.UString;
       Token_Type : Swagger.UString;
       Expires_In : Integer;
       Scope : Swagger.UString;
       Refresh_Token : Swagger.UString;
       Refresh_Token_Expires_In : Integer;
     end record;


   package OauthAccessTokenResponseCode_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenResponseCode_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenResponseCode_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenResponseCode_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenResponseCode_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenResponseCode_Type_Vectors.Vector);


   --  ------------------------------
   --  OAuth access token response
   --  A successful OAuth access token response for the refresh token flow, with an added everlasting refresh token.
   --  ------------------------------
   type OauthAccessTokenResponseEverlastingRefresh_Type is
     record
       Response_Type : Swagger.Nullable_UString;
       Access_Token : Swagger.UString;
       Token_Type : Swagger.UString;
       Expires_In : Integer;
       Scope : Swagger.UString;
       Refresh_Token : Swagger.UString;
       Refresh_Token_Expires_In : Integer;
       Refresh_Token_Expires_At : Integer;
     end record;


   package OauthAccessTokenResponseEverlastingRefresh_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenResponseEverlastingRefresh_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenResponseEverlastingRefresh_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenResponseEverlastingRefresh_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenResponseEverlastingRefresh_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenResponseEverlastingRefresh_Type_Vectors.Vector);


   --  ------------------------------
   --  OAuth access token response
   --  A successful OAuth access token response for the refresh token flow, with an added refresh token.
   --  ------------------------------
   type OauthAccessTokenResponseIntegrationRefresh_Type is
     record
       Response_Type : Swagger.Nullable_UString;
       Access_Token : Swagger.UString;
       Token_Type : Swagger.UString;
       Expires_In : Integer;
       Scope : Swagger.UString;
       Refresh_Token : Swagger.UString;
       Refresh_Token_Expires_In : Integer;
     end record;


   package OauthAccessTokenResponseIntegrationRefresh_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenResponseIntegrationRefresh_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenResponseIntegrationRefresh_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenResponseIntegrationRefresh_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenResponseIntegrationRefresh_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenResponseIntegrationRefresh_Type_Vectors.Vector);


   --  ------------------------------
   --  OAuth access token response
   --  A successful OAuth access token response for the refresh token flow.
   --  ------------------------------
   type OauthAccessTokenResponseRefresh_Type is
     record
       Response_Type : Swagger.Nullable_UString;
       Access_Token : Swagger.UString;
       Token_Type : Swagger.UString;
       Expires_In : Integer;
       Scope : Swagger.UString;
     end record;


   package OauthAccessTokenResponseRefresh_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenResponseRefresh_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenResponseRefresh_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenResponseRefresh_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenResponseRefresh_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenResponseRefresh_Type_Vectors.Vector);


   --  ------------------------------
   --  OAuth access token response
   --  A successful OAuth access token response.
   --  ------------------------------
   type OauthAccessTokenResponse_Type is
     record
       Response_Type : Swagger.Nullable_UString;
       Access_Token : Swagger.UString;
       Token_Type : Swagger.UString;
       Expires_In : Integer;
       Scope : Swagger.UString;
     end record;


   package OauthAccessTokenResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OauthAccessTokenResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OauthAccessTokenResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OauthAccessTokenResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OauthAccessTokenResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OauthAccessTokenResponse_Type_Vectors.Vector);



   type ObjectiveType_Type is (AWARENESS,CONSIDERATION,VIDEO_VIEW,WEB_CONVERSION,CATALOG_SALES,WEB_SESSIONS,VIDEO_COMPLETION);

   function To_ObjectiveType_Type (Value : in String) return .Models.ObjectiveType_Type;

   function To_String (Value : in ObjectiveType_Type) return String;


   package ObjectiveType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ObjectiveType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ObjectiveType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ObjectiveType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ObjectiveType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ObjectiveType_Type_Vectors.Vector);



   type OperationType_Type is (SHARE,REVOKE);

   function To_OperationType_Type (Value : in String) return .Models.OperationType_Type;

   function To_String (Value : in OperationType_Type) return String;


   package OperationType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OperationType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OperationType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OperationType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OperationType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OperationType_Type_Vectors.Vector);



   type OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type is
     record
       Click_Window_Days : Swagger.Nullable_Integer;
       Engagement_Window_Days : Swagger.Nullable_Integer;
       View_Window_Days : Swagger.Nullable_Integer;
     end record;


   package OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type_Vectors.Vector);



   type OptimizationGoalMetadataFrequencyGoalMetadata_Type is
     record
       Frequency : Swagger.Nullable_Integer;
       Timerange : Swagger.Nullable_UString;
     end record;


   package OptimizationGoalMetadataFrequencyGoalMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptimizationGoalMetadataFrequencyGoalMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptimizationGoalMetadataFrequencyGoalMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptimizationGoalMetadataFrequencyGoalMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptimizationGoalMetadataFrequencyGoalMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptimizationGoalMetadataFrequencyGoalMetadata_Type_Vectors.Vector);



   type OptimizationGoalMetadataScrollupGoalMetadata_Type is
     record
       Scrollup_Goal_Value_In_Micro_Currency : Swagger.Nullable_UString;
     end record;


   package OptimizationGoalMetadataScrollupGoalMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptimizationGoalMetadataScrollupGoalMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptimizationGoalMetadataScrollupGoalMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptimizationGoalMetadataScrollupGoalMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptimizationGoalMetadataScrollupGoalMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptimizationGoalMetadataScrollupGoalMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLineError
   --  ------------------------------
   type OrderLineError_Type is
     record
       Data : .Models.OrderLine_Type;
       Error_Messages : Swagger.UString_Vectors.Vector;
     end record;


   package OrderLineError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLineError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLineError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLineError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLineError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLineError_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLinePaidType
   --  Order Line Paid Type
   --  ------------------------------
   type OrderLinePaidType_Type is (PAID,BONUS,MAKE_GOOD,TEST);

   function To_OrderLinePaidType_Type (Value : in String) return .Models.OrderLinePaidType_Type;

   function To_String (Value : in OrderLinePaidType_Type) return String;


   package OrderLinePaidType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLinePaidType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLinePaidType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLinePaidType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLinePaidType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLinePaidType_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLineSingleResponse
   --  ------------------------------
   type OrderLineSingleResponse_Type is
     record
       Data : .Models.OrderLineResponse_Type;
     end record;


   package OrderLineSingleResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLineSingleResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLineSingleResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLineSingleResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLineSingleResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLineSingleResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLineStatus
   --  Order Line Status
   --  ------------------------------
   type OrderLineStatus_Type is (ACTIVE,PAUSED,DELETED);

   function To_OrderLineStatus_Type (Value : in String) return .Models.OrderLineStatus_Type;

   function To_String (Value : in OrderLineStatus_Type) return String;


   package OrderLineStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLineStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLineStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLineStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLineStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLineStatus_Type_Vectors.Vector);



   type PacingDeliveryType_Type is (STANDARD,ACCELERATED);

   function To_PacingDeliveryType_Type (Value : in String) return .Models.PacingDeliveryType_Type;

   function To_String (Value : in PacingDeliveryType_Type) return String;


   package PacingDeliveryType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PacingDeliveryType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PacingDeliveryType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PacingDeliveryType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PacingDeliveryType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PacingDeliveryType_Type_Vectors.Vector);



   type PartnerType_Type is (INTERNAL,EXTERNAL);

   function To_PartnerType_Type (Value : in String) return .Models.PartnerType_Type;

   function To_String (Value : in PartnerType_Type) return String;


   package PartnerType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PartnerType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PartnerType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PartnerType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PartnerType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PartnerType_Type_Vectors.Vector);



   type PermissionsWithOwner_Type is (ADMIN,ANALYST,FINANCE_MANAGER,AUDIENCE_MANAGER,CAMPAIGN_MANAGER,CATALOGS_MANAGER,CATALOGS_VIEWER,PROFILE_PUBLISHER,OWNER);

   function To_PermissionsWithOwner_Type (Value : in String) return .Models.PermissionsWithOwner_Type;

   function To_String (Value : in PermissionsWithOwner_Type) return String;


   package PermissionsWithOwner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PermissionsWithOwner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PermissionsWithOwner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PermissionsWithOwner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PermissionsWithOwner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PermissionsWithOwner_Type_Vectors.Vector);



   type Permissions_Type is (ADMIN,ANALYST,FINANCE_MANAGER,AUDIENCE_MANAGER,CAMPAIGN_MANAGER,CATALOGS_MANAGER,PROFILE_PUBLISHER);

   function To_Permissions_Type (Value : in String) return .Models.Permissions_Type;

   function To_String (Value : in Permissions_Type) return String;


   package Permissions_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Permissions_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Permissions_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Permissions_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Permissions_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Permissions_Type_Vectors.Vector);


   --  ------------------------------
   --  Image Base64
   --  Base64_encoded image media source
   --  ------------------------------
   type PinMediaSourceImageBase64_Type is
     record
       Source_Type : Swagger.UString;
       Content_Type : Swagger.UString;
       Data : Swagger.UString;
       Is_Standard : Swagger.Nullable_Boolean;
     end record;


   package PinMediaSourceImageBase64_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceImageBase64_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceImageBase64_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceImageBase64_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceImageBase64_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceImageBase64_Type_Vectors.Vector);


   --  ------------------------------
   --  Image URL
   --  Image URL_based media source
   --  ------------------------------
   type PinMediaSourceImageURL_Type is
     record
       Source_Type : Swagger.UString;
       Url : Swagger.UString;
       Is_Standard : Swagger.Nullable_Boolean;
     end record;


   package PinMediaSourceImageURL_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceImageURL_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceImageURL_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceImageURL_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceImageURL_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceImageURL_Type_Vectors.Vector);



   type PinMediaSourceImagesBase64ItemsInner_Type is
     record
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Content_Type : Swagger.UString;
       Data : Swagger.UString;
     end record;


   package PinMediaSourceImagesBase64ItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceImagesBase64ItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceImagesBase64ItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceImagesBase64ItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceImagesBase64ItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceImagesBase64ItemsInner_Type_Vectors.Vector);



   type PinMediaSourceImagesURLItemsInner_Type is
     record
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Url : Swagger.UString;
     end record;


   package PinMediaSourceImagesURLItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceImagesURLItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceImagesURLItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceImagesURLItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceImagesURLItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceImagesURLItemsInner_Type_Vectors.Vector);


   --  ------------------------------
   --  Pin URL
   --  Pin URL_based media source for product pin creation. Currently the field is only available to a list of beta users.
   --  ------------------------------
   type PinMediaSourcePinURL_Type is
     record
       Source_Type : Swagger.UString;
       Is_Affiliate_Link : Swagger.Nullable_Boolean;
     end record;


   package PinMediaSourcePinURL_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourcePinURL_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourcePinURL_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourcePinURL_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourcePinURL_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourcePinURL_Type_Vectors.Vector);


   --  ------------------------------
   --  Video ID
   --  Video ID_based media source
   --  ------------------------------
   type PinMediaSourceVideoID_Type is
     record
       Source_Type : Swagger.UString;
       Cover_Image_Url : Swagger.Nullable_UString;
       Cover_Image_Content_Type : Swagger.Nullable_UString;
       Cover_Image_Data : Swagger.Nullable_UString;
       Media_Id : Swagger.UString;
       Is_Standard : Swagger.Nullable_Boolean;
     end record;


   package PinMediaSourceVideoID_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceVideoID_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceVideoID_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceVideoID_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceVideoID_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceVideoID_Type_Vectors.Vector);



   type PinMediaWithImageAllOfImages_Type is
     record
       P_150x_150 : Swagger.Object;
       P_400x_300 : Swagger.Object;
       P_600x : Swagger.Object;
       P_1200x : Swagger.Object;
     end record;


   package PinMediaWithImageAllOfImages_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaWithImageAllOfImages_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaWithImageAllOfImages_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaWithImageAllOfImages_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaWithImageAllOfImages_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaWithImageAllOfImages_Type_Vectors.Vector);


   --  ------------------------------
   --  Pin media
   --  Pin media objects.
   --  ------------------------------
   type PinMedia_Type is
     record
       Media_Type : Swagger.Nullable_UString;
     end record;


   package PinMedia_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMedia_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMedia_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMedia_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMedia_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMedia_Type_Vectors.Vector);



   type PinPromotionSummaryStatus_Type is (APPROVED,PAUSED,PENDING,REJECTED,ADVERTISER_DISABLED,ARCHIVED,DRAFT,DELETED_DRAFT);

   function To_PinPromotionSummaryStatus_Type (Value : in String) return .Models.PinPromotionSummaryStatus_Type;

   function To_String (Value : in PinPromotionSummaryStatus_Type) return String;


   package PinPromotionSummaryStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinPromotionSummaryStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinPromotionSummaryStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinPromotionSummaryStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinPromotionSummaryStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinPromotionSummaryStatus_Type_Vectors.Vector);



   type PinUpdateCarouselSlotsInner_Type is
     record
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
     end record;


   package PinUpdateCarouselSlotsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinUpdateCarouselSlotsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinUpdateCarouselSlotsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinUpdateCarouselSlotsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinUpdateCarouselSlotsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinUpdateCarouselSlotsInner_Type_Vectors.Vector);



   type PinsAnalyticsMetricTypesParameterInner_Type is new oneOf<string,string>;


   package PinsAnalyticsMetricTypesParameterInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinsAnalyticsMetricTypesParameterInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinsAnalyticsMetricTypesParameterInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinsAnalyticsMetricTypesParameterInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinsAnalyticsMetricTypesParameterInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinsAnalyticsMetricTypesParameterInner_Type_Vectors.Vector);



   type PinsSaveRequest_Type is
     record
       Board_Id : Swagger.Nullable_UString;
       Board_Section_Id : Swagger.Nullable_UString;
     end record;


   package PinsSaveRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinsSaveRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinsSaveRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinsSaveRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinsSaveRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinsSaveRequest_Type_Vectors.Vector);



   type PlacementGroupType_Type is (ALL,SEARCH,BROWSE,OTHER);

   function To_PlacementGroupType_Type (Value : in String) return .Models.PlacementGroupType_Type;

   function To_String (Value : in PlacementGroupType_Type) return String;


   package PlacementGroupType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PlacementGroupType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PlacementGroupType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PlacementGroupType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PlacementGroupType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PlacementGroupType_Type_Vectors.Vector);



   type PlacementMultipliers_Type is
     record
       PLACEMENT : Swagger.Nullable_UString;
     end record;


   package PlacementMultipliers_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PlacementMultipliers_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PlacementMultipliers_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PlacementMultipliers_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PlacementMultipliers_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PlacementMultipliers_Type_Vectors.Vector);



   type ProductAvailabilityType_Type is (IN_STOCK,OUT_OF_STOCK,PREORDER);

   function To_ProductAvailabilityType_Type (Value : in String) return .Models.ProductAvailabilityType_Type;

   function To_String (Value : in ProductAvailabilityType_Type) return String;


   package ProductAvailabilityType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductAvailabilityType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductAvailabilityType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductAvailabilityType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductAvailabilityType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductAvailabilityType_Type_Vectors.Vector);



   type ProductGroupAnalyticsResponseInner_Type is
     record
       PRODUCT_GROUP_ID : Swagger.UString;
       DATE : Swagger.Nullable_Date;
     end record;


   package ProductGroupAnalyticsResponseInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupAnalyticsResponseInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupAnalyticsResponseInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupAnalyticsResponseInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupAnalyticsResponseInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupAnalyticsResponseInner_Type_Vectors.Vector);



   type ProductGroupReferenceFilter_Type is
     record
       PRODUCT_GROUP : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
     end record;


   package ProductGroupReferenceFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupReferenceFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupReferenceFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupReferenceFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupReferenceFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupReferenceFilter_Type_Vectors.Vector);



   type ProductGroupSummaryStatus_Type is (RUNNING,PAUSED,EXCLUDED,ARCHIVED);

   function To_ProductGroupSummaryStatus_Type (Value : in String) return .Models.ProductGroupSummaryStatus_Type;

   function To_String (Value : in ProductGroupSummaryStatus_Type) return String;


   package ProductGroupSummaryStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupSummaryStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupSummaryStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupSummaryStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupSummaryStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupSummaryStatus_Type_Vectors.Vector);



   type ProductType0Filter_Type is
     record
       PRODUCT_TYPE_0 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package ProductType0Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductType0Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductType0Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductType0Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductType0Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductType0Filter_Type_Vectors.Vector);



   type ProductType1Filter_Type is
     record
       PRODUCT_TYPE_1 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package ProductType1Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductType1Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductType1Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductType1Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductType1Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductType1Filter_Type_Vectors.Vector);



   type ProductType2Filter_Type is
     record
       PRODUCT_TYPE_2 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package ProductType2Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductType2Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductType2Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductType2Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductType2Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductType2Filter_Type_Vectors.Vector);



   type ProductType3Filter_Type is
     record
       PRODUCT_TYPE_3 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package ProductType3Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductType3Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductType3Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductType3Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductType3Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductType3Filter_Type_Vectors.Vector);



   type ProductType4Filter_Type is
     record
       PRODUCT_TYPE_4 : .Models.CatalogsProductGroupMultipleStringListCriteria_Type;
     end record;


   package ProductType4Filter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductType4Filter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductType4Filter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductType4Filter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductType4Filter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductType4Filter_Type_Vectors.Vector);



   type QuizPinOption_Type is
     record
       Id : Swagger.Number;
       Text : Swagger.Nullable_UString;
     end record;


   package QuizPinOption_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.QuizPinOption_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QuizPinOption_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QuizPinOption_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QuizPinOption_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QuizPinOption_Type_Vectors.Vector);



   type QuizPinResult_Type is
     record
       Organic_Pin_Id : Swagger.Nullable_UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Destination_Url : Swagger.Nullable_UString;
       Result_Id : Swagger.Number;
     end record;


   package QuizPinResult_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.QuizPinResult_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QuizPinResult_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QuizPinResult_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QuizPinResult_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QuizPinResult_Type_Vectors.Vector);



   type RelatedTermsRelatedTermsListInner_Type is
     record
       Term : Swagger.Nullable_UString;
       Related_Terms : Swagger.UString_Vectors.Vector;
     end record;


   package RelatedTermsRelatedTermsListInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RelatedTermsRelatedTermsListInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RelatedTermsRelatedTermsListInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RelatedTermsRelatedTermsListInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RelatedTermsRelatedTermsListInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RelatedTermsRelatedTermsListInner_Type_Vectors.Vector);



   type ReportingColumnAsync_Type is (SPEND_IN_MICRO_DOLLAR,PAID_IMPRESSION,SPEND_IN_DOLLAR,CPC_IN_MICRO_DOLLAR,ECPC_IN_MICRO_DOLLAR,ECPC_IN_DOLLAR,CTR,ECTR,OUTBOUND_CTR,COST_PER_OUTBOUND_CLICK,CAMPAIGN_NAME,CAMPAIGN_STATUS,PIN_PROMOTION_STATUS,AD_STATUS,PIN_ID,TOTAL_ENGAGEMENT,ENGAGEMENT_1,ENGAGEMENT_2,ECPE_IN_DOLLAR,ENGAGEMENT_RATE,EENGAGEMENT_RATE,ECPM_IN_MICRO_DOLLAR,REPIN_RATE,CTR_2,CAMPAIGN_ID,ADVERTISER_ID,AD_ACCOUNT_ID,PIN_PROMOTION_ID,AD_ID,AD_GROUP_ID,CAMPAIGN_ENTITY_STATUS,CAMPAIGN_MANAGED_STATUS,CAMPAIGN_OBJECTIVE_TYPE,CPM_IN_MICRO_DOLLAR,CPM_IN_DOLLAR,AD_GROUP_NAME,AD_GROUP_STATUS,AD_GROUP_ENTITY_STATUS,PRODUCT_GROUP_ID,PRODUCT_GROUP_STATUS,ORDER_LINE_ID,ORDER_LINE_NAME,CLICKTHROUGH_1,REPIN_1,IMPRESSION_1,IMPRESSION_1_GROSS,CLICKTHROUGH_1_GROSS,OUTBOUND_CLICK_1,CLICKTHROUGH_2,REPIN_2,IMPRESSION_2,OUTBOUND_CLICK_2,TOTAL_CLICKTHROUGH,TOTAL_IMPRESSION,TOTAL_IMPRESSION_USER,TOTAL_IMPRESSION_FREQUENCY,COST_PER_OUTBOUND_CLICK_IN_DOLLAR,TOTAL_ENGAGEMENT_PAGE_VISIT,TOTAL_ENGAGEMENT_SIGNUP,TOTAL_ENGAGEMENT_CHECKOUT,TOTAL_ENGAGEMENT_CUSTOM,TOTAL_ENGAGEMENT_ADD_TO_CART,TOTAL_ENGAGEMENT_LEAD,TOTAL_ENGAGEMENT_SEARCH,TOTAL_ENGAGEMENT_WATCH_VIDEO,TOTAL_ENGAGEMENT_VIEW_CATEGORY,TOTAL_ENGAGEMENT_APP_INSTALL,TOTAL_ENGAGEMENT_UNKNOWN,TOTAL_CLICK_PAGE_VISIT,TOTAL_CLICK_SIGNUP,TOTAL_CLICK_CHECKOUT,TOTAL_CLICK_CUSTOM,TOTAL_CLICK_ADD_TO_CART,TOTAL_CLICK_LEAD,TOTAL_CLICK_SEARCH,TOTAL_CLICK_WATCH_VIDEO,TOTAL_CLICK_VIEW_CATEGORY,TOTAL_CLICK_APP_INSTALL,TOTAL_CLICK_UNKNOWN,TOTAL_VIEW_PAGE_VISIT,TOTAL_VIEW_SIGNUP,TOTAL_VIEW_CHECKOUT,TOTAL_VIEW_CUSTOM,TOTAL_VIEW_ADD_TO_CART,TOTAL_VIEW_LEAD,TOTAL_VIEW_SEARCH,TOTAL_VIEW_WATCH_VIDEO,TOTAL_VIEW_VIEW_CATEGORY,TOTAL_VIEW_APP_INSTALL,TOTAL_VIEW_UNKNOWN,TOTAL_CONVERSIONS,TOTAL_ENGAGEMENT_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_CONVERSIONS_VALUE_IN_MICRO_DOLLAR,TOTAL_ENGAGEMENT_PAGE_VISIT_QUANTITY,TOTAL_ENGAGEMENT_SIGNUP_QUANTITY,TOTAL_ENGAGEMENT_CHECKOUT_QUANTITY,TOTAL_ENGAGEMENT_CUSTOM_QUANTITY,TOTAL_ENGAGEMENT_ADD_TO_CART_QUANTITY,TOTAL_ENGAGEMENT_LEAD_QUANTITY,TOTAL_ENGAGEMENT_SEARCH_QUANTITY,TOTAL_ENGAGEMENT_WATCH_VIDEO_QUANTITY,TOTAL_ENGAGEMENT_VIEW_CATEGORY_QUANTITY,TOTAL_ENGAGEMENT_UNKNOWN_QUANTITY,TOTAL_CLICK_PAGE_VISIT_QUANTITY,TOTAL_CLICK_SIGNUP_QUANTITY,TOTAL_CLICK_CHECKOUT_QUANTITY,TOTAL_CLICK_CUSTOM_QUANTITY,TOTAL_CLICK_ADD_TO_CART_QUANTITY,TOTAL_CLICK_LEAD_QUANTITY,TOTAL_CLICK_SEARCH_QUANTITY,TOTAL_CLICK_WATCH_VIDEO_QUANTITY,TOTAL_CLICK_VIEW_CATEGORY_QUANTITY,TOTAL_CLICK_UNKNOWN_QUANTITY,TOTAL_VIEW_PAGE_VISIT_QUANTITY,TOTAL_VIEW_SIGNUP_QUANTITY,TOTAL_VIEW_CHECKOUT_QUANTITY,TOTAL_VIEW_CUSTOM_QUANTITY,TOTAL_VIEW_ADD_TO_CART_QUANTITY,TOTAL_VIEW_LEAD_QUANTITY,TOTAL_VIEW_SEARCH_QUANTITY,TOTAL_VIEW_WATCH_VIDEO_QUANTITY,TOTAL_VIEW_VIEW_CATEGORY_QUANTITY,TOTAL_VIEW_UNKNOWN_QUANTITY,TOTAL_CONVERSIONS_QUANTITY,TOTAL_WEB_SESSIONS,WEB_SESSIONS_1,WEB_SESSIONS_2,ONSITE_CHECKOUTS_1,PIN_PROMOTION_NAME,AD_NAME,CAMPAIGN_LIFETIME_SPEND_CAP,CAMPAIGN_DAILY_SPEND_CAP,TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_PAGE_VISIT_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_PAGE_VISIT_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_PAGE_VISIT_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_PAGE_VISIT_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_PAGE_VISIT_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_SIGNUP_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_SIGNUP_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_SIGNUP_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_SIGNUP_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_SIGNUP_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_SIGNUP_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_SIGNUP_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_SIGNUP_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_SIGNUP_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_CHECKOUT_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_CHECKOUT_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_CHECKOUT_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_CHECKOUT_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_CHECKOUT_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_CHECKOUT_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_CHECKOUT_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_CHECKOUT_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_CHECKOUT_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_CUSTOM_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_CUSTOM_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_CUSTOM_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_CUSTOM_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_CUSTOM_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_CUSTOM_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_CUSTOM_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_CUSTOM_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_CUSTOM_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_ADD_TO_CART_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_ADD_TO_CART_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_ADD_TO_CART_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_ADD_TO_CART_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_ADD_TO_CART_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_LEAD_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_LEAD_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_LEAD_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_LEAD_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_LEAD_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_LEAD_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_LEAD_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_LEAD_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_LEAD_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_SEARCH_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_SEARCH_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_SEARCH_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_SEARCH_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_SEARCH_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_SEARCH_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_SEARCH_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_SEARCH_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_SEARCH_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_WATCH_VIDEO_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_WATCH_VIDEO_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_WATCH_VIDEO_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_VIEW_CATEGORY_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_VIEW_CATEGORY_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_VIEW_CATEGORY_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_APP_INSTALL_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_APP_INSTALL_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_APP_INSTALL_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_APP_INSTALL_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_APP_INSTALL_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_APP_INSTALL_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_APP_INSTALL_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_UNKNOWN_DESKTOP_ACTION_TO_DESKTOP_CONVERSION,TOTAL_UNKNOWN_DESKTOP_ACTION_TO_MOBILE_CONVERSION,TOTAL_UNKNOWN_DESKTOP_ACTION_TO_TABLET_CONVERSION,TOTAL_UNKNOWN_MOBILE_ACTION_TO_DESKTOP_CONVERSION,TOTAL_UNKNOWN_MOBILE_ACTION_TO_MOBILE_CONVERSION,TOTAL_UNKNOWN_MOBILE_ACTION_TO_TABLET_CONVERSION,TOTAL_UNKNOWN_TABLET_ACTION_TO_DESKTOP_CONVERSION,TOTAL_UNKNOWN_TABLET_ACTION_TO_MOBILE_CONVERSION,TOTAL_UNKNOWN_TABLET_ACTION_TO_TABLET_CONVERSION,TOTAL_PAGE_VISIT,TOTAL_SIGNUP,TOTAL_CHECKOUT,TOTAL_CUSTOM,TOTAL_ADD_TO_CART,TOTAL_LEAD,TOTAL_SEARCH,TOTAL_WATCH_VIDEO,TOTAL_VIEW_CATEGORY,TOTAL_APP_INSTALL,TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_CHECKOUT_QUANTITY,PAGE_VISIT_COST_PER_ACTION,APP_INSTALL_COST_PER_ACTION,PAGE_VISIT_ROAS,CHECKOUT_ROAS,CUSTOM_ROAS,VIDEO_3SEC_VIEWS_1,VIDEO_P100_COMPLETE_1,VIDEO_P0_COMBINED_1,VIDEO_P25_COMBINED_1,VIDEO_P50_COMBINED_1,VIDEO_P75_COMBINED_1,VIDEO_P95_COMBINED_1,VIDEO_MRC_VIEWS_1,VIDEO_3SEC_VIEWS_2,VIDEO_P100_COMPLETE_2,VIDEO_P0_COMBINED_2,VIDEO_P25_COMBINED_2,VIDEO_P50_COMBINED_2,VIDEO_P75_COMBINED_2,VIDEO_P95_COMBINED_2,VIDEO_MRC_VIEWS_2,PAID_VIDEO_VIEWABLE_RATE,VIDEO_LENGTH,CPV_IN_MICRO_DOLLAR,ECPV_IN_DOLLAR,CPCV_IN_MICRO_DOLLAR,ECPCV_IN_DOLLAR,CPCV_P95_IN_MICRO_DOLLAR,ECPCV_P95_IN_DOLLAR,TOTAL_VIDEO_3SEC_VIEWS,TOTAL_VIDEO_P100_COMPLETE,TOTAL_VIDEO_P0_COMBINED,TOTAL_VIDEO_P25_COMBINED,TOTAL_VIDEO_P50_COMBINED,TOTAL_VIDEO_P75_COMBINED,TOTAL_VIDEO_P95_COMBINED,TOTAL_VIDEO_MRC_VIEWS,VIDEO_AVG_WATCHTIME_IN_SECOND_1,VIDEO_AVG_WATCHTIME_IN_SECOND_2,TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND,TOTAL_DESTINATION_VIEWS,TOTAL_REPIN_RATE,WEB_CHECKOUT_COST_PER_ACTION,WEB_CHECKOUT_ROAS,TOTAL_WEB_CHECKOUT,TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_CHECKOUT,TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_CHECKOUT,TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_CHECKOUT,TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR,INAPP_CHECKOUT_COST_PER_ACTION,INAPP_CHECKOUT_ROAS,TOTAL_INAPP_CHECKOUT,TOTAL_INAPP_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_CLICK_CHECKOUT,TOTAL_INAPP_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_ENGAGEMENT_CHECKOUT,TOTAL_INAPP_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_VIEW_CHECKOUT,TOTAL_INAPP_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR,OFFLINE_CHECKOUT_COST_PER_ACTION,OFFLINE_CHECKOUT_ROAS,TOTAL_OFFLINE_CHECKOUT,TOTAL_OFFLINE_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_CLICK_CHECKOUT,TOTAL_OFFLINE_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_ENGAGEMENT_CHECKOUT,TOTAL_OFFLINE_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_VIEW_CHECKOUT,TOTAL_OFFLINE_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR,PINTEREST_CHECKOUT_COST_PER_ACTION,PINTEREST_CHECKOUT_ROAS,TOTAL_PINTEREST_CHECKOUT,TOTAL_PINTEREST_CHECKOUT_VALUE_IN_MICRO_DOLLAR,WEB_ADD_TO_CART_COST_PER_ACTION,WEB_ADD_TO_CART_ROAS,TOTAL_WEB_ADD_TO_CART,TOTAL_WEB_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_ADD_TO_CART,TOTAL_WEB_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_ADD_TO_CART,TOTAL_WEB_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_ADD_TO_CART,TOTAL_WEB_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,INAPP_ADD_TO_CART_COST_PER_ACTION,INAPP_ADD_TO_CART_ROAS,TOTAL_INAPP_ADD_TO_CART,TOTAL_INAPP_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_CLICK_ADD_TO_CART,TOTAL_INAPP_CLICK_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_ENGAGEMENT_ADD_TO_CART,TOTAL_INAPP_ENGAGEMENT_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_VIEW_ADD_TO_CART,TOTAL_INAPP_VIEW_ADD_TO_CART_VALUE_IN_MICRO_DOLLAR,WEB_PAGE_VISIT_COST_PER_ACTION,WEB_PAGE_VISIT_ROAS,TOTAL_WEB_PAGE_VISIT,TOTAL_WEB_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_PAGE_VISIT,TOTAL_WEB_CLICK_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_PAGE_VISIT,TOTAL_WEB_ENGAGEMENT_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_PAGE_VISIT,TOTAL_WEB_VIEW_PAGE_VISIT_VALUE_IN_MICRO_DOLLAR,WEB_SIGNUP_COST_PER_ACTION,WEB_SIGNUP_ROAS,TOTAL_WEB_SIGNUP,TOTAL_WEB_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_SIGNUP,TOTAL_WEB_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_SIGNUP,TOTAL_WEB_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_SIGNUP,TOTAL_WEB_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR,INAPP_SIGNUP_COST_PER_ACTION,INAPP_SIGNUP_ROAS,TOTAL_INAPP_SIGNUP,TOTAL_INAPP_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_CLICK_SIGNUP,TOTAL_INAPP_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_ENGAGEMENT_SIGNUP,TOTAL_INAPP_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_VIEW_SIGNUP,TOTAL_INAPP_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR,OFFLINE_SIGNUP_COST_PER_ACTION,OFFLINE_SIGNUP_ROAS,TOTAL_OFFLINE_SIGNUP,TOTAL_OFFLINE_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_CLICK_SIGNUP,TOTAL_OFFLINE_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_ENGAGEMENT_SIGNUP,TOTAL_OFFLINE_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_VIEW_SIGNUP,TOTAL_OFFLINE_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR,WEB_WATCH_VIDEO_COST_PER_ACTION,WEB_WATCH_VIDEO_ROAS,TOTAL_WEB_WATCH_VIDEO,TOTAL_WEB_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_WATCH_VIDEO,TOTAL_WEB_CLICK_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_WATCH_VIDEO,TOTAL_WEB_ENGAGEMENT_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_WATCH_VIDEO,TOTAL_WEB_VIEW_WATCH_VIDEO_VALUE_IN_MICRO_DOLLAR,WEB_LEAD_COST_PER_ACTION,WEB_LEAD_ROAS,TOTAL_WEB_LEAD,TOTAL_WEB_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_LEAD,TOTAL_WEB_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_LEAD,TOTAL_WEB_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_LEAD,TOTAL_WEB_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR,OFFLINE_LEAD_COST_PER_ACTION,OFFLINE_LEAD_ROAS,TOTAL_OFFLINE_LEAD,TOTAL_OFFLINE_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_CLICK_LEAD,TOTAL_OFFLINE_CLICK_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_ENGAGEMENT_LEAD,TOTAL_OFFLINE_ENGAGEMENT_LEAD_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_VIEW_LEAD,TOTAL_OFFLINE_VIEW_LEAD_VALUE_IN_MICRO_DOLLAR,WEB_SEARCH_COST_PER_ACTION,WEB_SEARCH_ROAS,TOTAL_WEB_SEARCH,TOTAL_WEB_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_SEARCH,TOTAL_WEB_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_SEARCH,TOTAL_WEB_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_SEARCH,TOTAL_WEB_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR,INAPP_SEARCH_COST_PER_ACTION,INAPP_SEARCH_ROAS,TOTAL_INAPP_SEARCH,TOTAL_INAPP_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_CLICK_SEARCH,TOTAL_INAPP_CLICK_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_ENGAGEMENT_SEARCH,TOTAL_INAPP_ENGAGEMENT_SEARCH_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_VIEW_SEARCH,TOTAL_INAPP_VIEW_SEARCH_VALUE_IN_MICRO_DOLLAR,WEB_VIEW_CATEGORY_COST_PER_ACTION,WEB_VIEW_CATEGORY_ROAS,TOTAL_WEB_VIEW_CATEGORY,TOTAL_WEB_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_VIEW_CATEGORY,TOTAL_WEB_CLICK_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_VIEW_CATEGORY,TOTAL_WEB_ENGAGEMENT_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_VIEW_CATEGORY,TOTAL_WEB_VIEW_VIEW_CATEGORY_VALUE_IN_MICRO_DOLLAR,WEB_CUSTOM_COST_PER_ACTION,WEB_CUSTOM_ROAS,TOTAL_WEB_CUSTOM,TOTAL_WEB_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_CUSTOM,TOTAL_WEB_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_CUSTOM,TOTAL_WEB_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_CUSTOM,TOTAL_WEB_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR,OFFLINE_CUSTOM_COST_PER_ACTION,OFFLINE_CUSTOM_ROAS,TOTAL_OFFLINE_CUSTOM,TOTAL_OFFLINE_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_CLICK_CUSTOM,TOTAL_OFFLINE_CLICK_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_ENGAGEMENT_CUSTOM,TOTAL_OFFLINE_ENGAGEMENT_CUSTOM_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_VIEW_CUSTOM,TOTAL_OFFLINE_VIEW_CUSTOM_VALUE_IN_MICRO_DOLLAR,WEB_UNKNOWN_COST_PER_ACTION,WEB_UNKNOWN_ROAS,TOTAL_WEB_UNKNOWN,TOTAL_WEB_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_CLICK_UNKNOWN,TOTAL_WEB_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_ENGAGEMENT_UNKNOWN,TOTAL_WEB_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_WEB_VIEW_UNKNOWN,TOTAL_WEB_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR,INAPP_UNKNOWN_COST_PER_ACTION,INAPP_UNKNOWN_ROAS,TOTAL_INAPP_UNKNOWN,TOTAL_INAPP_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_CLICK_UNKNOWN,TOTAL_INAPP_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_ENGAGEMENT_UNKNOWN,TOTAL_INAPP_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_VIEW_UNKNOWN,TOTAL_INAPP_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR,OFFLINE_UNKNOWN_COST_PER_ACTION,OFFLINE_UNKNOWN_ROAS,TOTAL_OFFLINE_UNKNOWN,TOTAL_OFFLINE_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_CLICK_UNKNOWN,TOTAL_OFFLINE_CLICK_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_ENGAGEMENT_UNKNOWN,TOTAL_OFFLINE_ENGAGEMENT_UNKNOWN_VALUE_IN_MICRO_DOLLAR,TOTAL_OFFLINE_VIEW_UNKNOWN,TOTAL_OFFLINE_VIEW_UNKNOWN_VALUE_IN_MICRO_DOLLAR,INAPP_APP_INSTALL_COST_PER_ACTION,INAPP_APP_INSTALL_ROAS,TOTAL_INAPP_APP_INSTALL,TOTAL_INAPP_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_CLICK_APP_INSTALL,TOTAL_INAPP_CLICK_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_ENGAGEMENT_APP_INSTALL,TOTAL_INAPP_ENGAGEMENT_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,TOTAL_INAPP_VIEW_APP_INSTALL,TOTAL_INAPP_VIEW_APP_INSTALL_VALUE_IN_MICRO_DOLLAR,IDEA_PIN_PRODUCT_TAG_VISIT_1,IDEA_PIN_PRODUCT_TAG_VISIT_2,TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT,LEADS,COST_PER_LEAD,QUIZ_COMPLETED,QUIZ_COMPLETION_RATE,SHOWCASE_PIN_CLICKTHROUGH,SHOWCASE_SUBPAGE_CLICKTHROUGH,SHOWCASE_SUBPIN_CLICKTHROUGH,SHOWCASE_SUBPAGE_IMPRESSION,SHOWCASE_SUBPIN_IMPRESSION,SHOWCASE_SUBPAGE_SWIPE_LEFT,SHOWCASE_SUBPAGE_SWIPE_RIGHT,SHOWCASE_SUBPIN_SWIPE_LEFT,SHOWCASE_SUBPIN_SWIPE_RIGHT,SHOWCASE_SUBPAGE_REPIN,SHOWCASE_SUBPIN_REPIN,SHOWCASE_SUBPAGE_CLOSEUP,SHOWCASE_CARD_THUMBNAIL_SWIPE_FORWARD,SHOWCASE_CARD_THUMBNAIL_SWIPE_BACKWARD,SHOWCASE_AVERAGE_SUBPAGE_CLOSEUP_PER_SESSION,TOTAL_CHECKOUT_CONVERSION_RATE,TOTAL_VIEW_CATEGORY_CONVERSION_RATE,TOTAL_ADD_TO_CART_CONVERSION_RATE,TOTAL_SIGNUP_CONVERSION_RATE,TOTAL_PAGE_VISIT_CONVERSION_RATE,TOTAL_LEAD_CONVERSION_RATE,TOTAL_SEARCH_CONVERSION_RATE,TOTAL_WATCH_VIDEO_CONVERSION_RATE,TOTAL_UNKNOWN_CONVERSION_RATE,TOTAL_CUSTOM_CONVERSION_RATE,STANDARD_AD_FEED_ITEM_ID);

   function To_ReportingColumnAsync_Type (Value : in String) return .Models.ReportingColumnAsync_Type;

   function To_String (Value : in ReportingColumnAsync_Type) return String;


   package ReportingColumnAsync_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ReportingColumnAsync_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ReportingColumnAsync_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ReportingColumnAsync_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ReportingColumnAsync_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ReportingColumnAsync_Type_Vectors.Vector);



   type ResourceIdToRoles_Type is new string;


   package ResourceIdToRoles_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ResourceIdToRoles_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ResourceIdToRoles_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ResourceIdToRoles_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ResourceIdToRoles_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ResourceIdToRoles_Type_Vectors.Vector);



   type Role_Type is (UNKNOWN,OWNER,ADMIN,ANALYST,SOS_READER,FINANCE_MANAGER,AUDIENCE_MANAGER,CAMPAIGN_MANAGER,CATALOGS_MANAGER,RESTRICTED_OWNER,PROFILE_MANAGER,PROFILE_PUBLISHER,RESOURCE_PINNER_LIST_OWNER,RESOURCE_PINNER_LIST_READER,BIZ_PINNER_LIST_SHARER,RESOURCE_CONVERSION_TAGS_READER);

   function To_Role_Type (Value : in String) return .Models.Role_Type;

   function To_String (Value : in Role_Type) return String;


   package Role_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Role_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Role_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Role_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Role_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Role_Type_Vectors.Vector);



   type SSIOAccountAddress_Type is
     record
       Display : Swagger.Nullable_UString;
       Purpose : Swagger.Nullable_UString;
       Address_Id : Swagger.Nullable_UString;
       Order_Legal_Entity : Swagger.Nullable_UString;
     end record;


   package SSIOAccountAddress_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOAccountAddress_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOAccountAddress_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOAccountAddress_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOAccountAddress_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOAccountAddress_Type_Vectors.Vector);



   type SSIOAccountPMPName_Type is
     record
       Name : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
     end record;


   package SSIOAccountPMPName_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOAccountPMPName_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOAccountPMPName_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOAccountPMPName_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOAccountPMPName_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOAccountPMPName_Type_Vectors.Vector);



   type SSIOCreateInsertionOrderResponse_Type is
     record
       Pin_Order_Id : Swagger.Nullable_UString;
     end record;


   package SSIOCreateInsertionOrderResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOCreateInsertionOrderResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOCreateInsertionOrderResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOCreateInsertionOrderResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOCreateInsertionOrderResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOCreateInsertionOrderResponse_Type_Vectors.Vector);



   type SSIOEditInsertionOrderRequest_Type is
     record
       Start_Date : Swagger.Nullable_UString;
       End_Date : Swagger.Nullable_UString;
       Po_Number : Swagger.Nullable_UString;
       Budget_Amount : Swagger.Number;
       Billing_Contact_Firstname : Swagger.Nullable_UString;
       Billing_Contact_Lastname : Swagger.Nullable_UString;
       Billing_Contact_Email : Swagger.Nullable_UString;
       Media_Contact_Firstname : Swagger.Nullable_UString;
       Media_Contact_Lastname : Swagger.Nullable_UString;
       Media_Contact_Email : Swagger.Nullable_UString;
       Agency_Link : Swagger.Nullable_UString;
       User_Email : Swagger.Nullable_UString;
       Oracle_Line_Id : Swagger.Nullable_UString;
       Salesforce_Order_Id : Swagger.Nullable_UString;
       Salesforce_Order_Line_Id : Swagger.Nullable_UString;
       Ads_Manager_Order_Line_Id : Swagger.Nullable_UString;
     end record;


   package SSIOEditInsertionOrderRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOEditInsertionOrderRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOEditInsertionOrderRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOEditInsertionOrderRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOEditInsertionOrderRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOEditInsertionOrderRequest_Type_Vectors.Vector);



   type SSIOEditInsertionOrderResponse_Type is
     record
       Pin_Order_Id : Swagger.Nullable_UString;
     end record;


   package SSIOEditInsertionOrderResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOEditInsertionOrderResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOEditInsertionOrderResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOEditInsertionOrderResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOEditInsertionOrderResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOEditInsertionOrderResponse_Type_Vectors.Vector);



   type SSIOInsertionOrderCommon_Type is
     record
       Start_Date : Swagger.Nullable_UString;
       End_Date : Swagger.Nullable_UString;
       Po_Number : Swagger.Nullable_UString;
       Budget_Amount : Swagger.Number;
       Billing_Contact_Firstname : Swagger.Nullable_UString;
       Billing_Contact_Lastname : Swagger.Nullable_UString;
       Billing_Contact_Email : Swagger.Nullable_UString;
       Media_Contact_Firstname : Swagger.Nullable_UString;
       Media_Contact_Lastname : Swagger.Nullable_UString;
       Media_Contact_Email : Swagger.Nullable_UString;
       Agency_Link : Swagger.Nullable_UString;
       User_Email : Swagger.Nullable_UString;
     end record;


   package SSIOInsertionOrderCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOInsertionOrderCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOInsertionOrderCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOInsertionOrderCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOInsertionOrderCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOInsertionOrderCommon_Type_Vectors.Vector);



   type SSIOInsertionOrderStatusResponse_Type is
     record
       Pin_Order_Id : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Creation_Time : Swagger.Nullable_UString;
     end record;


   package SSIOInsertionOrderStatusResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOInsertionOrderStatusResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOInsertionOrderStatusResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOInsertionOrderStatusResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOInsertionOrderStatusResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOInsertionOrderStatusResponse_Type_Vectors.Vector);



   type SSIOInsertionOrderStatus_Type is
     record
       Pin_Order_Id : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Creation_Time : Swagger.Nullable_UString;
     end record;


   package SSIOInsertionOrderStatus_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOInsertionOrderStatus_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOInsertionOrderStatus_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOInsertionOrderStatus_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOInsertionOrderStatus_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOInsertionOrderStatus_Type_Vectors.Vector);



   type SharedAudienceAccount_Type is
     record
       Account_Id : Swagger.UString;
       Account_Name : Swagger.UString;
       Account_Type : Swagger.UString;
       Shared_On_Timestamp : Integer;
     end record;


   package SharedAudienceAccount_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SharedAudienceAccount_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SharedAudienceAccount_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SharedAudienceAccount_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SharedAudienceAccount_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SharedAudienceAccount_Type_Vectors.Vector);


   --  ------------------------------
   --  SingleInterestTargetingOptionData
   --  ------------------------------
   type SingleInterestTargetingOptionResponse_Type is
     record
       Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Child_Interests : Swagger.UString_Vectors.Vector;
       Level : Swagger.Nullable_Integer;
     end record;


   package SingleInterestTargetingOptionResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SingleInterestTargetingOptionResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SingleInterestTargetingOptionResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SingleInterestTargetingOptionResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SingleInterestTargetingOptionResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SingleInterestTargetingOptionResponse_Type_Vectors.Vector);



   type TargetingAdvertiserCountry_Type is (US,GB,CA,IE,AU,NZ,FR,SE,IL,DE,AT,IT,ES,NL,BE,PT,CH,HK,JP,KR,SG,NO,DK,FI,CY,LU,MT,PL,RO,HU,CZ,GR,SK,BR,MX,AR,CL,CO);

   function To_TargetingAdvertiserCountry_Type (Value : in String) return .Models.TargetingAdvertiserCountry_Type;

   function To_String (Value : in TargetingAdvertiserCountry_Type) return String;


   package TargetingAdvertiserCountry_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingAdvertiserCountry_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingAdvertiserCountry_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingAdvertiserCountry_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingAdvertiserCountry_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingAdvertiserCountry_Type_Vectors.Vector);



   type TargetingSpecAppType_Type is (ANDROID_MOBILE,ANDROID_TABLET,IPAD,IPHONE,WEB,WEB_MOBILE);

   function To_TargetingSpecAppType_Type (Value : in String) return .Models.TargetingSpecAppType_Type;

   function To_String (Value : in TargetingSpecAppType_Type) return String;


   package TargetingSpecAppType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingSpecAppType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingSpecAppType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingSpecAppType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingSpecAppType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingSpecAppType_Type_Vectors.Vector);


   --  ------------------------------
   --  TargetingSpec_SHOPPING_RETARGETING
   --  ------------------------------
   type TargetingSpecSHOPPINGRETARGETING_Type is
     record
       Lookback_Window : Swagger.Nullable_Integer;
       Tag_Types : Integer_Vectors.Vector;
       Exclusion_Window : Swagger.Nullable_Integer;
     end record;


   package TargetingSpecSHOPPINGRETARGETING_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingSpecSHOPPINGRETARGETING_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingSpecSHOPPINGRETARGETING_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingSpecSHOPPINGRETARGETING_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingSpecSHOPPINGRETARGETING_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingSpecSHOPPINGRETARGETING_Type_Vectors.Vector);



   type TargetingTemplateAudienceSizingReachEstimate_Type is
     record
       Estimate : Swagger.Nullable_Long;
       Lower_Bound : Swagger.Nullable_Long;
       Upper_Bound : Swagger.Nullable_Long;
     end record;


   package TargetingTemplateAudienceSizingReachEstimate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateAudienceSizingReachEstimate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateAudienceSizingReachEstimate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateAudienceSizingReachEstimate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateAudienceSizingReachEstimate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateAudienceSizingReachEstimate_Type_Vectors.Vector);



   type TargetingTemplateUpdateRequest_Type is
     record
       Operation_Type : Swagger.UString;
       Id : Swagger.UString;
     end record;


   package TargetingTemplateUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateUpdateRequest_Type_Vectors.Vector);



   type TemplateResponseDateRangeAbsoluteDateRange_Type is
     record
       P_Type : Swagger.Nullable_UString;
       Start_Date : Swagger.Number;
       End_Date : Swagger.Number;
     end record;


   package TemplateResponseDateRangeAbsoluteDateRange_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TemplateResponseDateRangeAbsoluteDateRange_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TemplateResponseDateRangeAbsoluteDateRange_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TemplateResponseDateRangeAbsoluteDateRange_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TemplateResponseDateRangeAbsoluteDateRange_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TemplateResponseDateRangeAbsoluteDateRange_Type_Vectors.Vector);



   type TemplateResponseDateRangeDynamicDateRange_Type is
     record
       P_Type : Swagger.Nullable_UString;
       P_Range : Swagger.Nullable_UString;
     end record;


   package TemplateResponseDateRangeDynamicDateRange_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TemplateResponseDateRangeDynamicDateRange_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TemplateResponseDateRangeDynamicDateRange_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TemplateResponseDateRangeDynamicDateRange_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TemplateResponseDateRangeDynamicDateRange_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TemplateResponseDateRangeDynamicDateRange_Type_Vectors.Vector);



   type TemplateResponseDateRangeRelativeDateRange_Type is
     record
       P_Type : Swagger.Nullable_UString;
       Start_Days_In_Past : Swagger.Number;
       End_Days_In_Past : Swagger.Number;
     end record;


   package TemplateResponseDateRangeRelativeDateRange_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TemplateResponseDateRangeRelativeDateRange_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TemplateResponseDateRangeRelativeDateRange_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TemplateResponseDateRangeRelativeDateRange_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TemplateResponseDateRangeRelativeDateRange_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TemplateResponseDateRangeRelativeDateRange_Type_Vectors.Vector);


   --  ------------------------------
   --  TermsOfService
   --  ------------------------------
   type TermsOfService_Type is
     record
       Id : Swagger.Nullable_UString;
       Html : Swagger.Nullable_UString;
       Has_Accepted : Swagger.Nullable_Boolean;
       Ad_Account_Id : Swagger.Nullable_UString;
     end record;


   package TermsOfService_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TermsOfService_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TermsOfService_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TermsOfService_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TermsOfService_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TermsOfService_Type_Vectors.Vector);



   type TopPinsAnalyticsResponseDateAvailability_Type is
     record
       Latest_Available_Timestamp : Swagger.Number;
       Is_Realtime : Swagger.Nullable_Boolean;
     end record;


   package TopPinsAnalyticsResponseDateAvailability_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TopPinsAnalyticsResponseDateAvailability_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TopPinsAnalyticsResponseDateAvailability_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TopPinsAnalyticsResponseDateAvailability_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TopPinsAnalyticsResponseDateAvailability_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TopPinsAnalyticsResponseDateAvailability_Type_Vectors.Vector);



   type TrackingUrls_Type is
     record
       Impression : Swagger.UString_Vectors.Vector;
       Click : Swagger.UString_Vectors.Vector;
       Engagement : Swagger.UString_Vectors.Vector;
       Buyable_Button : Swagger.UString_Vectors.Vector;
       Audience_Verification : Swagger.UString_Vectors.Vector;
     end record;


   package TrackingUrls_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TrackingUrls_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TrackingUrls_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TrackingUrls_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TrackingUrls_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TrackingUrls_Type_Vectors.Vector);


   --  ------------------------------
   --  TrendType
   --  ------------------------------
   type TrendType_Type is (GROWING,MONTHLY,YEARLY,SEASONAL);

   function To_TrendType_Type (Value : in String) return .Models.TrendType_Type;

   function To_String (Value : in TrendType_Type) return String;


   package TrendType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TrendType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TrendType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TrendType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TrendType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TrendType_Type_Vectors.Vector);



   type TrendingKeywordsResponseTrendsInnerTimeSeries_Type is
     record
       Date : Swagger.Nullable_Date;
     end record;


   package TrendingKeywordsResponseTrendsInnerTimeSeries_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TrendingKeywordsResponseTrendsInnerTimeSeries_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TrendingKeywordsResponseTrendsInnerTimeSeries_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TrendingKeywordsResponseTrendsInnerTimeSeries_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TrendingKeywordsResponseTrendsInnerTimeSeries_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TrendingKeywordsResponseTrendsInnerTimeSeries_Type_Vectors.Vector);


   --  ------------------------------
   --  Region
   --  ------------------------------
   type TrendsSupportedRegion_Type is (US,CA,DE,FR,ES,IT,DE_AT_CH,GB_IE,IT_ES_PT_GR_MT,PL_RO_HU_SK_CZ,SE_DK_FI_NO,NL_BE_LU,AR,BR,CO,MX,MX_AR_CO_CL,AU_NZ);

   function To_TrendsSupportedRegion_Type (Value : in String) return .Models.TrendsSupportedRegion_Type;

   function To_String (Value : in TrendsSupportedRegion_Type) return String;


   package TrendsSupportedRegion_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TrendsSupportedRegion_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TrendsSupportedRegion_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TrendsSupportedRegion_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TrendsSupportedRegion_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TrendsSupportedRegion_Type_Vectors.Vector);



   type UpdatableItemAttributes_Type is
     record
       Ad_Link : Swagger.Nullable_UString;
       Adult : Swagger.Nullable_Boolean;
       Age_Group : Swagger.Nullable_UString;
       Availability : Swagger.Nullable_UString;
       Average_Review_Rating : Swagger.Number;
       Brand : Swagger.Nullable_UString;
       Checkout_Enabled : Swagger.Nullable_Boolean;
       Color : Swagger.Nullable_UString;
       Condition : Swagger.Nullable_UString;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Free_Shipping_Label : Swagger.Nullable_Boolean;
       Free_Shipping_Limit : Swagger.Nullable_UString;
       Gender : Swagger.Nullable_UString;
       Google_Product_Category : Swagger.Nullable_UString;
       Gtin : Swagger.Nullable_Integer;
       Id : Swagger.Nullable_UString;
       Item_Group_Id : Swagger.Nullable_UString;
       Last_Updated_Time : Swagger.Nullable_Long;
       Link : Swagger.Nullable_UString;
       Material : Swagger.Nullable_UString;
       Min_Ad_Price : Swagger.Nullable_UString;
       Mobile_Link : Swagger.Nullable_UString;
       Mpn : Swagger.Nullable_UString;
       Number_Of_Ratings : Swagger.Nullable_Integer;
       Number_Of_Reviews : Swagger.Nullable_Integer;
       Pattern : Swagger.Nullable_UString;
       Price : Swagger.Nullable_UString;
       Product_Type : Swagger.Nullable_UString;
       Sale_Price : Swagger.Nullable_UString;
       Shipping : Swagger.Nullable_UString;
       Shipping_Height : Swagger.Nullable_UString;
       Shipping_Weight : Swagger.Nullable_UString;
       Shipping_Width : Swagger.Nullable_UString;
       Size : Swagger.Nullable_UString;
       Size_System : Swagger.Nullable_UString;
       Size_Type : Swagger.Nullable_UString;
       Tax : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Variant_Names : Swagger.UString_Vectors.Vector;
       Variant_Values : Swagger.UString_Vectors.Vector;
     end record;


   package UpdatableItemAttributes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatableItemAttributes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatableItemAttributes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatableItemAttributes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatableItemAttributes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatableItemAttributes_Type_Vectors.Vector);



   type UpdateAssetGroupResponseExceptionsInner_Type is
     record
       Code : Swagger.Nullable_Integer;
       Message : Swagger.Nullable_UString;
       Asset_Group_Id : Swagger.Nullable_UString;
     end record;


   package UpdateAssetGroupResponseExceptionsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateAssetGroupResponseExceptionsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateAssetGroupResponseExceptionsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateAssetGroupResponseExceptionsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateAssetGroupResponseExceptionsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateAssetGroupResponseExceptionsInner_Type_Vectors.Vector);



   type UpdateMaskBidOptionField_Type is (BID,APP_TYPE_BID_MULTIPLIER_SET,PLACEMENT_BID_MULTIPLIER_SET);

   function To_UpdateMaskBidOptionField_Type (Value : in String) return .Models.UpdateMaskBidOptionField_Type;

   function To_String (Value : in UpdateMaskBidOptionField_Type) return String;


   package UpdateMaskBidOptionField_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMaskBidOptionField_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMaskBidOptionField_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMaskBidOptionField_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMaskBidOptionField_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMaskBidOptionField_Type_Vectors.Vector);



   type UpdateMaskFieldType_Type is (AD_LINK,ADULT,AGE_GROUP,AVAILABILITY,AVERAGE_REVIEW_RATING,BRAND,CHECKOUT_ENABLED,COLOR,CONDITION,CUSTOM_LABEL_0,CUSTOM_LABEL_1,CUSTOM_LABEL_2,CUSTOM_LABEL_3,CUSTOM_LABEL_4,DESCRIPTION,FREE_SHIPPING_LABEL,FREE_SHIPPING_LIMIT,GENDER,GOOGLE_PRODUCT_CATEGORY,GTIN,ITEM_GROUP_ID,LAST_UPDATED_TIME,LINK,MATERIAL,MIN_AD_PRICE,MPN,NUMBER_OF_RATINGS,NUMBER_OF_REVIEWS,PATTERN,PRICE,PRODUCT_TYPE,SALE_PRICE,SHIPPING,SHIPPING_HEIGHT,SHIPPING_WEIGHT,SHIPPING_WIDTH,SIZE,SIZE_SYSTEM,SIZE_TYPE,TAX,TITLE,VARIANT_NAMES,VARIANT_VALUES);

   function To_UpdateMaskFieldType_Type (Value : in String) return .Models.UpdateMaskFieldType_Type;

   function To_String (Value : in UpdateMaskFieldType_Type) return String;


   package UpdateMaskFieldType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMaskFieldType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMaskFieldType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMaskFieldType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMaskFieldType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMaskFieldType_Type_Vectors.Vector);



   type UpdateMemberResult_Type is
     record
       Business_Role : Swagger.Nullable_UString;
       Member_Id : Swagger.Nullable_UString;
     end record;


   package UpdateMemberResult_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberResult_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberResult_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberResult_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberResult_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberResult_Type_Vectors.Vector);



   type UpdatePartnerAssetsResult_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Asset_Type : Swagger.Nullable_UString;
       Partner_Id : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
     end record;


   package UpdatePartnerAssetsResult_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatePartnerAssetsResult_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatePartnerAssetsResult_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatePartnerAssetsResult_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatePartnerAssetsResult_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatePartnerAssetsResult_Type_Vectors.Vector);


   --  ------------------------------
   --  UserFollowingFeedType
   --  Specifies the type of followees to be kept when filtering them.
   --  ------------------------------
   type UserFollowingFeedType_Type is (ALL,RANKED,CREATOR_ONLY,RANKED_CREATOR_ONLY);

   function To_UserFollowingFeedType_Type (Value : in String) return .Models.UserFollowingFeedType_Type;

   function To_String (Value : in UserFollowingFeedType_Type) return String;


   package UserFollowingFeedType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserFollowingFeedType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserFollowingFeedType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserFollowingFeedType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserFollowingFeedType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserFollowingFeedType_Type_Vectors.Vector);


   --  ------------------------------
   --  UserListOperationType
   --  User list operation type (add or remove)
   --  ------------------------------
   type UserListOperationType_Type is (ADD,REMOVE);

   function To_UserListOperationType_Type (Value : in String) return .Models.UserListOperationType_Type;

   function To_String (Value : in UserListOperationType_Type) return String;


   package UserListOperationType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserListOperationType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserListOperationType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserListOperationType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserListOperationType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserListOperationType_Type_Vectors.Vector);


   --  ------------------------------
   --  UserListType
   --  User list type
   --  ------------------------------
   type UserListType_Type is (EMAIL,IDFA,MAID,LR_ID,DLX_ID,HASHED_PINNER_ID);

   function To_UserListType_Type (Value : in String) return .Models.UserListType_Type;

   function To_String (Value : in UserListType_Type) return String;


   package UserListType_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserListType_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserListType_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserListType_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserListType_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserListType_Type_Vectors.Vector);


   --  ------------------------------
   --  UserSummary
   --  ------------------------------
   type UserSummary_Type is
     record
       Username : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
     end record;


   package UserSummary_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserSummary_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserSummary_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserSummary_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserSummary_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserSummary_Type_Vectors.Vector);


   --  ------------------------------
   --  UserWebsiteSummary
   --  ------------------------------
   type UserWebsiteSummary_Type is
     record
       Website : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Verified_At : Swagger.Nullable_UString;
     end record;


   package UserWebsiteSummary_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserWebsiteSummary_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserWebsiteSummary_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserWebsiteSummary_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserWebsiteSummary_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserWebsiteSummary_Type_Vectors.Vector);


   --  ------------------------------
   --  UserWebsiteVerificationCode
   --  ------------------------------
   type UserWebsiteVerificationCode_Type is
     record
       Verification_Code : Swagger.Nullable_UString;
       Dns_Txt_Record : Swagger.Nullable_UString;
       Metatag : Swagger.Nullable_UString;
       Filename : Swagger.Nullable_UString;
       File_Content : Swagger.Nullable_UString;
     end record;


   package UserWebsiteVerificationCode_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserWebsiteVerificationCode_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserWebsiteVerificationCode_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserWebsiteVerificationCode_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserWebsiteVerificationCode_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserWebsiteVerificationCode_Type_Vectors.Vector);


   --  ------------------------------
   --  User website verification request
   --  User website verification request
   --  ------------------------------
   type UserWebsiteVerifyRequest_Type is
     record
       Website : Swagger.Nullable_UString;
       Verification_Method : Swagger.Nullable_UString;
     end record;


   package UserWebsiteVerifyRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserWebsiteVerifyRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserWebsiteVerifyRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserWebsiteVerifyRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserWebsiteVerifyRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserWebsiteVerifyRequest_Type_Vectors.Vector);



   type UsersForIndividualAssetResponse_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Member_Id : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
     end record;


   package UsersForIndividualAssetResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UsersForIndividualAssetResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UsersForIndividualAssetResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UsersForIndividualAssetResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UsersForIndividualAssetResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UsersForIndividualAssetResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  Video metadata
   --  ------------------------------
   type VideoMetadata_Type is
     record
       Item_Type : Swagger.Nullable_UString;
       Cover_Image_Url : Swagger.Nullable_UString;
       Video_Url : Swagger.Nullable_UString;
       Duration : Swagger.Number;
       Height : Swagger.Nullable_Integer;
       Width : Swagger.Nullable_Integer;
     end record;


   package VideoMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.VideoMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.VideoMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in VideoMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.VideoMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out VideoMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  AdAccountCreate
   --  ------------------------------
   type AdAccountCreateRequest_Type is
     record
       Country : .Models.Country_Type;
       Name : Swagger.Nullable_UString;
       Owner_User_Id : Swagger.Nullable_UString;
     end record;


   package AdAccountCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  AdAccountCreateSubscriptionRequest
   --  ------------------------------
   type AdAccountCreateSubscriptionRequest_Type is
     record
       Webhook_Url : Swagger.UString;
       Lead_Form_Id : Swagger.Nullable_UString;
       Partner_Access_Token : Swagger.Nullable_UString;
       Partner_Refresh_Token : Swagger.Nullable_UString;
       Partner_Metadata : .Models.AdAccountCreateSubscriptionRequestPartnerMetadata_Type;
     end record;


   package AdAccountCreateSubscriptionRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountCreateSubscriptionRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountCreateSubscriptionRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountCreateSubscriptionRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountCreateSubscriptionRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountCreateSubscriptionRequest_Type_Vectors.Vector);



   type AdAccountsAudiencesSharedAccountsList200Response_Type is
     record
       Items : .Models.SharedAudienceAccount_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AdAccountsAudiencesSharedAccountsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountsAudiencesSharedAccountsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountsAudiencesSharedAccountsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountsAudiencesSharedAccountsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountsAudiencesSharedAccountsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountsAudiencesSharedAccountsList200Response_Type_Vectors.Vector);



   type AdAccountsCountryResponse_Type is
     record
       Items : .Models.AdAccountsCountryResponseData_Type_Vectors.Vector;
     end record;


   package AdAccountsCountryResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountsCountryResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountsCountryResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountsCountryResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountsCountryResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountsCountryResponse_Type_Vectors.Vector);



   type AdAccountsSubscriptionsGetList200Response_Type is
     record
       Items : .Models.AdAccountGetSubscriptionResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AdAccountsSubscriptionsGetList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountsSubscriptionsGetList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountsSubscriptionsGetList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountsSubscriptionsGetList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountsSubscriptionsGetList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountsSubscriptionsGetList200Response_Type_Vectors.Vector);



   type AdGroupResponse_Type is
     record
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Optimization_Goal_Metadata : .Models.OptimizationGoalMetadata_Type;
       Budget_Type : .Models.BudgetType_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Targeting_Spec : .Models.TargetingSpec_Type;
       Lifetime_Frequency_Cap : Swagger.Nullable_Integer;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Placement_Group : .Models.PlacementGroupType_Type;
       Pacing_Delivery_Type : .Models.PacingDeliveryType_Type;
       Campaign_Id : Swagger.Nullable_UString;
       Billable_Event : .Models.ActionType_Type;
       Bid_Strategy_Type : Swagger.Nullable_UString;
       Targeting_Template_Ids : Swagger.UString_Vectors.Vector;
       Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
       P_Type : Swagger.Nullable_UString;
       Conversion_Learning_Mode_Type : Swagger.Nullable_UString;
       Summary_Status : .Models.AdGroupSummaryStatus_Type;
       Feed_Profile_Id : Swagger.Nullable_UString;
       Dca_Assets : .Models.AnyType_Type;
     end record;


   package AdGroupResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupResponse_Type_Vectors.Vector);



   type AdGroupArrayResponseElement_Type is
     record
       Data : .Models.AdGroupResponse_Type;
       Exceptions : .Models.Model_Exception_Vectors.Vector;
     end record;


   package AdGroupArrayResponseElement_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupArrayResponseElement_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupArrayResponseElement_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupArrayResponseElement_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupArrayResponseElement_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupArrayResponseElement_Type_Vectors.Vector);



   type AdGroupArrayResponse_Type is
     record
       Items : .Models.AdGroupArrayResponseElement_Type_Vectors.Vector;
     end record;


   package AdGroupArrayResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupArrayResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupArrayResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupArrayResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupArrayResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupArrayResponse_Type_Vectors.Vector);



   type AdGroupAudienceSizingRequestKeywordsInner_Type is
     record
       Match_Type : .Models.MatchTypeResponse_Type;
       Value : Swagger.UString;
     end record;


   package AdGroupAudienceSizingRequestKeywordsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupAudienceSizingRequestKeywordsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupAudienceSizingRequestKeywordsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupAudienceSizingRequestKeywordsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupAudienceSizingRequestKeywordsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupAudienceSizingRequestKeywordsInner_Type_Vectors.Vector);



   type AdGroupsList200Response_Type is
     record
       Items : .Models.AdGroupResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AdGroupsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupsList200Response_Type_Vectors.Vector);



   type AdsAnalyticsCreateAsyncResponse_Type is
     record
       Report_Status : .Models.BulkReportingJobStatus_Type;
       Token : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
     end record;


   package AdsAnalyticsCreateAsyncResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsCreateAsyncResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsCreateAsyncResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsCreateAsyncResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsCreateAsyncResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsCreateAsyncResponse_Type_Vectors.Vector);



   type AdsAnalyticsGetAsyncResponse_Type is
     record
       Report_Status : .Models.BulkReportingJobStatus_Type;
       Url : Swagger.Nullable_UString;
       Size : Swagger.Number;
     end record;


   package AdsAnalyticsGetAsyncResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsGetAsyncResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsGetAsyncResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsGetAsyncResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsGetAsyncResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsGetAsyncResponse_Type_Vectors.Vector);



   type AdsCreditsDiscountsGet200Response_Type is
     record
       Items : .Models.AdsCreditDiscountsResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AdsCreditsDiscountsGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsCreditsDiscountsGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsCreditsDiscountsGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsCreditsDiscountsGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsCreditsDiscountsGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsCreditsDiscountsGet200Response_Type_Vectors.Vector);



   type AdResponse_Type is
     record
       Ad_Group_Id : Swagger.Nullable_UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Carousel_Android_Deep_Links : Swagger.UString_Vectors.Vector;
       Carousel_Destination_Urls : Swagger.UString_Vectors.Vector;
       Carousel_Ios_Deep_Links : Swagger.UString_Vectors.Vector;
       Click_Tracking_Url : Swagger.Nullable_UString;
       Creative_Type : .Models.CreativeType_Type;
       Destination_Url : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Is_Pin_Deleted : Swagger.Nullable_Boolean;
       Is_Removable : Swagger.Nullable_Boolean;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Tracking_Urls : .Models.TrackingUrls_Type;
       View_Tracking_Url : Swagger.Nullable_UString;
       Lead_Form_Id : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
       Customizable_Cta_Type : Swagger.Nullable_UString;
       Quiz_Pin_Data : .Models.QuizPinData_Type;
       Pin_Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Campaign_Id : Swagger.Nullable_UString;
       Collection_Items_Destination_Url_Template : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
       Id : Swagger.Nullable_UString;
       Rejected_Reasons : Swagger.UString_Vectors.Vector;
       Rejection_Labels : Swagger.UString_Vectors.Vector;
       Review_Status : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
       Updated_Time : Swagger.Nullable_Integer;
       Summary_Status : .Models.PinPromotionSummaryStatus_Type;
     end record;


   package AdResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdResponse_Type_Vectors.Vector);



   type AdsList200Response_Type is
     record
       Items : .Models.AdResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AdsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsList200Response_Type_Vectors.Vector);



   type AdvancedAuctionItemsGetRecord_Type is
     record
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
     end record;


   package AdvancedAuctionItemsGetRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItemsGetRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItemsGetRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItemsGetRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItemsGetRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItemsGetRecord_Type_Vectors.Vector);



   type AdvancedAuctionItemsGetRequest_Type is
     record
       Catalog_Id : Swagger.UString;
       Items : .Models.AdvancedAuctionItemsGetRecord_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionItemsGetRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItemsGetRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItemsGetRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItemsGetRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItemsGetRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItemsGetRequest_Type_Vectors.Vector);



   type AdvancedAuctionItemsSubmitRecord_Type is
     record
       Operation : .Models.AdvancedAuctionOperation_Type;
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
       Bid_Options : .Models.AdvancedAuctionBidOptions_Type;
       Update_Mask : .Models.UpdateMaskBidOptionField_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionItemsSubmitRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItemsSubmitRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItemsSubmitRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItemsSubmitRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItemsSubmitRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItemsSubmitRecord_Type_Vectors.Vector);



   type AdvancedAuctionItemsSubmitRequest_Type is
     record
       Catalog_Id : Swagger.UString;
       Items : .Models.AdvancedAuctionItemsSubmitRecord_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionItemsSubmitRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItemsSubmitRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItemsSubmitRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItemsSubmitRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItemsSubmitRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItemsSubmitRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  Advanced Auction Item
   --  ------------------------------
   type AdvancedAuctionItem_Type is
     record
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
       Bid_Options : .Models.AdvancedAuctionBidOptions_Type;
     end record;


   package AdvancedAuctionItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItem_Type_Vectors.Vector);



   type AdvancedAuctionItems_Type is
     record
       Catalog_Id : Swagger.Nullable_UString;
       Items : .Models.AdvancedAuctionItem_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionItems_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItems_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItems_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItems_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItems_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItems_Type_Vectors.Vector);



   type AdvancedAuctionProcessedItem_Type is
     record
       Operation : .Models.AdvancedAuctionOperation_Type;
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
       Bid_Options : .Models.AdvancedAuctionBidOptions_Type;
       Update_Mask : .Models.UpdateMaskBidOptionField_Type_Vectors.Vector;
       Errors : .Models.AdvancedAuctionOperationError_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionProcessedItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionProcessedItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionProcessedItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionProcessedItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionProcessedItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionProcessedItem_Type_Vectors.Vector);



   type AdvancedAuctionProcessedItems_Type is
     record
       Catalog_Id : Swagger.Nullable_UString;
       Items : .Models.AdvancedAuctionProcessedItem_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionProcessedItems_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionProcessedItems_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionProcessedItems_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionProcessedItems_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionProcessedItems_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionProcessedItems_Type_Vectors.Vector);



   type AnalyticsDailyMetrics_Type is
     record
       Data_Status : .Models.DataStatus_Type;
       Date : Swagger.Nullable_UString;
       Metrics : Swagger.Number_Map;
     end record;


   package AnalyticsDailyMetrics_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AnalyticsDailyMetrics_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AnalyticsDailyMetrics_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AnalyticsDailyMetrics_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AnalyticsDailyMetrics_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AnalyticsDailyMetrics_Type_Vectors.Vector);



   type AnalyticsMetricsResponse_Type is
     record
       Summary_Metrics : Swagger.Number_Map;
       Daily_Metrics : .Models.AnalyticsDailyMetrics_Type_Vectors.Vector;
     end record;


   package AnalyticsMetricsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AnalyticsMetricsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AnalyticsMetricsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AnalyticsMetricsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AnalyticsMetricsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AnalyticsMetricsResponse_Type_Vectors.Vector);



   type AppTypeMultipliers_Type is
     record
       APP_TYPE : .Models.TargetingSpecAppType_Type;
     end record;


   package AppTypeMultipliers_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AppTypeMultipliers_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AppTypeMultipliers_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AppTypeMultipliers_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AppTypeMultipliers_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AppTypeMultipliers_Type_Vectors.Vector);



   type AssetGroupBinding_Type is
     record
       Id : Swagger.Nullable_UString;
       Asset_Group_Name : Swagger.Nullable_UString;
       Asset_Group_Description : Swagger.Nullable_UString;
       Asset_Group_Types : Swagger.UString_Vectors.Vector;
       Ad_Accounts_Ids : Swagger.UString_Vectors.Vector;
       Profiles_Ids : Swagger.UString_Vectors.Vector;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
       Owner : .Models.BusinessAccessUserSummary_Type;
       Created_By : .Models.BusinessAccessUserSummary_Type;
     end record;


   package AssetGroupBinding_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AssetGroupBinding_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AssetGroupBinding_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AssetGroupBinding_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AssetGroupBinding_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AssetGroupBinding_Type_Vectors.Vector);



   type AssetIdPermissions_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Asset_Type : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
       Asset_Group_Info : .Models.AssetGroupBinding_Type;
     end record;


   package AssetIdPermissions_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AssetIdPermissions_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AssetIdPermissions_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AssetIdPermissions_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AssetIdPermissions_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AssetIdPermissions_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceCategory
   --  ------------------------------
   type AudienceCategory_Type is
     record
       Key : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Ratio : Swagger.Number;
       Index : Swagger.Number;
       Id : Swagger.Nullable_UString;
       Subcategories : .Models.AudienceSubcategory_Type_Vectors.Vector;
     end record;


   package AudienceCategory_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceCategory_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceCategory_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceCategory_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceCategory_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceCategory_Type_Vectors.Vector);


   --  ------------------------------
   --  PinterestTagEventData
   --  Optional for VISITOR `audience_type`. With the Pinterest tag, you can use event data to capture event details from your website. This object lists all the available predefined event data fields in the Pinterest tag. You can include these event data fields as part of a VISITOR audience’ s `rule`; however, you **must** specify an `event` for the `event_data` fields to be evaluated. Besides what’s listed, you can also create your own set of `event_data` fields and define their usages or purposes according to your website needs. However, the benefit of using the predefined event data fields is that we can provide various metrics based on those fields' data.<br>Examples per `event` type:<br>`pagevisit`<br>\"event_data\": { \"page_name\": \"My online store 123 | view items | shoe\" }<br>`signup`<br>\"event_data\": { \"lead_type\": \"New release promotion\" }<br>`checkout`<br>\"event_data\": { \"value\": 116, \"order_quantity\": 2, \"currency\": \"USD\", \"line_items\": [ { \"product_name\": \"Pillows (Set of 2)\", \"product_id\": \"11\", \"product_price\": 48, \"product_quantity\": 1 }, { \"product_name\": \"Pillows, Large (Set of 2)\", \"product_id\": \"15\", \"product_price\": 68, \"product_quantity\": 1 } ] }<br>`addtocart`<br>\"event_data\": { \"value\": 499, \"order_quantity\": 1, \"currency\": \"USD\", \"line_items\": [ { \"product_name\": \"Red leather boots\", \"product_id\": \"3486\", \"product_category\": \"shoe\", \"product_variant_id\": \"JB11103000\", \"product_price\": 499, \"product_quantity\": \"1\" , \"product_brand\": \"My brand\" }]}<br>`watchvideo`<br>\"event_data\": { \"video_title\": \"My Product Video 01\" }<br>`lead`<br>\"event_data\": { \"lead_type\": \"Newsletter\" }
   --  ------------------------------
   type PinterestTagEventData_Type is
     record
       Currency : .Models.Currency_Type;
       Lead_Type : Swagger.Nullable_UString;
       Line_Items : .Models.LineItem_Type;
       Order_Id : Swagger.Nullable_UString;
       Order_Quantity : Swagger.Nullable_Integer;
       Page_Name : Swagger.Nullable_UString;
       Promo_Code : Swagger.Nullable_UString;
       Property : Swagger.Nullable_UString;
       Search_Query : Swagger.Nullable_UString;
       Value : Swagger.Nullable_UString;
       Video_Title : Swagger.Nullable_UString;
     end record;


   package PinterestTagEventData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinterestTagEventData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinterestTagEventData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinterestTagEventData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinterestTagEventData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinterestTagEventData_Type_Vectors.Vector);


   --  ------------------------------
   --  Rule
   --  JSON object defining targeted audience users. Example rule formats per audience type:<br>CUSTOMER_LIST: { \"customer_list_id\": \"&lt;customer list ID&gt;\"}<br>ACTALIKE: { \"seed_id\": [\"&lt;audience ID&gt;\"], \"country\": \"US\", \"percentage\": \"10\" }<br>(Valid countries include: \"US\", \"CA\", and \"GB\". Percentage should be 1_10.<br>The targeted audience should be this % size across Pinterest.)<br>VISITOR: { \"visitor_source_id\": [\"&lt;conversion tag ID&gt;\"], \"retention_days\": \"180\", \"event_source\": {\"=\": [\"web\", \"mobile\"]}, \"ingestion_source\": {\"=\": [\"tag\"]}}<br>(Retention days should be 1_540. Retention applies to specific customers.)<br>ENGAGEMENT: {\"engagement_domain\": [\"www.entomi.com\"], \"engager_type\": 1}<br>For more details on engagement audiences, see <a href=\"/docs/redoc/adtech_ads_v4/#section/November_2021\" target=\"_blank\">November 2021 changelog</a>.
   --  ------------------------------
   type AudienceRule_Type is
     record
       Country : Swagger.Nullable_UString;
       Customer_List_Id : Swagger.Nullable_UString;
       Engagement_Domain : Swagger.UString_Vectors.Vector;
       Engagement_Type : Swagger.Nullable_UString;
       Event : Swagger.Nullable_UString;
       Event_Data : .Models.PinterestTagEventData_Type;
       Percentage : Swagger.Nullable_Integer;
       Pin_Id : Swagger.UString_Vectors.Vector;
       Prefill : Swagger.Nullable_Boolean;
       Retention_Days : Swagger.Nullable_Integer;
       Seed_Id : Swagger.UString_Vectors.Vector;
       Url : Swagger.UString_Vectors.Vector;
       Visitor_Source_Id : Swagger.Nullable_UString;
       Event_Source : Swagger.Object;
       Ingestion_Source : Swagger.Object;
       Engager_Type : Swagger.Nullable_Integer;
       Campaign_Id : Swagger.UString_Vectors.Vector;
       Ad_Id : Swagger.UString_Vectors.Vector;
       Objective_Type : .Models.ObjectiveType_Type_Vectors.Vector;
       Ad_Account_Id : Swagger.Nullable_UString;
     end record;


   package AudienceRule_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceRule_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceRule_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceRule_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceRule_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceRule_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceCommon
   --  ------------------------------
   type AudienceCommon_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Rule : .Models.AudienceRule_Type;
     end record;


   package AudienceCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceCommon_Type_Vectors.Vector);



   type AudienceDefinitionResponse_Type is
     record
       Items : .Models.AudienceDefinition_Type_Vectors.Vector;
     end record;


   package AudienceDefinitionResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDefinitionResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDefinitionResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDefinitionResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDefinitionResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDefinitionResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceDemographics
   --  Audience demographics
   --  ------------------------------
   type AudienceDemographics_Type is
     record
       Ages : .Models.AudienceDemographicValue_Type_Vectors.Vector;
       Genders : .Models.AudienceDemographicValue_Type_Vectors.Vector;
       Devices : .Models.AudienceDemographicValue_Type_Vectors.Vector;
       Metros : .Models.AudienceDemographicValue_Type_Vectors.Vector;
       Countries : .Models.AudienceDemographicValue_Type_Vectors.Vector;
     end record;


   package AudienceDemographics_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceDemographics_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceDemographics_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceDemographics_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceDemographics_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceDemographics_Type_Vectors.Vector);



   type AudienceInsightCategoryArrayResponse_Type is
     record
       Items : .Models.AudienceInsightCategoryCommon_Type_Vectors.Vector;
     end record;


   package AudienceInsightCategoryArrayResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceInsightCategoryArrayResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceInsightCategoryArrayResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceInsightCategoryArrayResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceInsightCategoryArrayResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceInsightCategoryArrayResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  Audience
   --  ------------------------------
   type Audience_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Audience_Type : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Rule : .Models.AudienceRule_Type;
       Size : Swagger.Nullable_Integer;
       Status : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
       Created_Timestamp : Swagger.Nullable_Integer;
       Updated_Timestamp : Swagger.Nullable_Integer;
     end record;


   package Audience_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Audience_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Audience_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Audience_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Audience_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Audience_Type_Vectors.Vector);



   type AudiencesList200Response_Type is
     record
       Items : .Models.Audience_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AudiencesList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudiencesList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudiencesList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudiencesList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudiencesList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudiencesList200Response_Type_Vectors.Vector);



   type AuthRespondInvitesBodyInvitesInner_Type is
     record
       Action : .Models.AuthRespondInvitesBodyInvitesInnerAction_Type;
       Invite_Id : Swagger.UString;
     end record;


   package AuthRespondInvitesBodyInvitesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AuthRespondInvitesBodyInvitesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AuthRespondInvitesBodyInvitesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AuthRespondInvitesBodyInvitesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AuthRespondInvitesBodyInvitesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AuthRespondInvitesBodyInvitesInner_Type_Vectors.Vector);



   type AuthRespondInvitesBody_Type is
     record
       Invites : .Models.AuthRespondInvitesBodyInvitesInner_Type_Vectors.Vector;
     end record;


   package AuthRespondInvitesBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AuthRespondInvitesBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AuthRespondInvitesBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AuthRespondInvitesBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AuthRespondInvitesBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AuthRespondInvitesBody_Type_Vectors.Vector);



   type BillingProfilesGet200Response_Type is
     record
       Items : .Models.BillingProfilesResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BillingProfilesGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BillingProfilesGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BillingProfilesGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BillingProfilesGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BillingProfilesGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BillingProfilesGet200Response_Type_Vectors.Vector);



   type BoardSectionsList200Response_Type is
     record
       Items : .Models.BoardSection_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BoardSectionsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardSectionsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardSectionsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardSectionsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardSectionsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardSectionsList200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  Board
   --  Board
   --  ------------------------------
   type Board_Type is
     record
       Id : Swagger.Nullable_UString;
       Created_At : Swagger.Nullable_Date;
       Board_Pins_Modified_At : Swagger.Nullable_Date;
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Collaborator_Count : Swagger.Nullable_Integer;
       Pin_Count : Swagger.Nullable_Integer;
       Follower_Count : Swagger.Nullable_Integer;
       Media : .Models.BoardMedia_Type;
       Owner : .Models.BoardOwner_Type;
       Privacy : Swagger.Nullable_UString;
     end record;


   package Board_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Board_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Board_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Board_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Board_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Board_Type_Vectors.Vector);



   type BoardsList200Response_Type is
     record
       Items : .Models.Board_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BoardsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardsList200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  Pin
   --  Pin
   --  ------------------------------
   type Pin_Type is
     record
       Id : Swagger.Nullable_UString;
       Created_At : Swagger.Nullable_Date;
       Link : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Dominant_Color : Swagger.Nullable_UString;
       Alt_Text : Swagger.Nullable_UString;
       Creative_Type : .Models.CreativeType_Type;
       Board_Id : Swagger.Nullable_UString;
       Board_Section_Id : Swagger.Nullable_UString;
       Board_Owner : .Models.BoardOwner_Type;
       Is_Owner : Swagger.Nullable_Boolean;
       Media : .Models.PinMedia_Type;
       Media_Source : .Models.PinMediaSource_Type;
       Parent_Pin_Id : Swagger.Nullable_UString;
       Is_Standard : Swagger.Nullable_Boolean;
       Has_Been_Promoted : Swagger.Nullable_Boolean;
       Note : Swagger.Nullable_UString;
       Pin_Metrics : Swagger.Object;
     end record;


   package Pin_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Pin_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Pin_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Pin_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Pin_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Pin_Type_Vectors.Vector);



   type BoardsListPins200Response_Type is
     record
       Items : .Models.Pin_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BoardsListPins200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardsListPins200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardsListPins200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardsListPins200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardsListPins200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardsListPins200Response_Type_Vectors.Vector);



   type BoardsUserFollowsList200Response_Type is
     record
       Items : .Models.Board_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BoardsUserFollowsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BoardsUserFollowsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BoardsUserFollowsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BoardsUserFollowsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BoardsUserFollowsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BoardsUserFollowsList200Response_Type_Vectors.Vector);



   type BulkUpsertStatusResponse_Type is
     record
       Status : .Models.BulkUpsertStatus_Type;
       Result_Url : Swagger.Nullable_UString;
     end record;


   package BulkUpsertStatusResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkUpsertStatusResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkUpsertStatusResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkUpsertStatusResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkUpsertStatusResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkUpsertStatusResponse_Type_Vectors.Vector);



   type UserSingleAssetBinding_Type is
     record
       Permissions : Swagger.UString_Vectors.Vector;
       User : .Models.BusinessAccessUserSummary_Type;
     end record;


   package UserSingleAssetBinding_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserSingleAssetBinding_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserSingleAssetBinding_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserSingleAssetBinding_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserSingleAssetBinding_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserSingleAssetBinding_Type_Vectors.Vector);



   type BusinessAssetPartnersGet200Response_Type is
     record
       Items : .Models.UserSingleAssetBinding_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BusinessAssetPartnersGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessAssetPartnersGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessAssetPartnersGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessAssetPartnersGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessAssetPartnersGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessAssetPartnersGet200Response_Type_Vectors.Vector);



   type GetBusinessAssetsResponse_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Asset_Type : Swagger.Nullable_UString;
       Asset_Group_Info : .Models.AssetGroupBinding_Type;
     end record;


   package GetBusinessAssetsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetBusinessAssetsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetBusinessAssetsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetBusinessAssetsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetBusinessAssetsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetBusinessAssetsResponse_Type_Vectors.Vector);



   type BusinessAssetsGet200Response_Type is
     record
       Items : .Models.GetBusinessAssetsResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BusinessAssetsGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessAssetsGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessAssetsGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessAssetsGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessAssetsGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessAssetsGet200Response_Type_Vectors.Vector);



   type BusinessMemberAssetsGet200Response_Type is
     record
       Items : .Models.AssetIdPermissions_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BusinessMemberAssetsGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessMemberAssetsGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessMemberAssetsGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessMemberAssetsGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessMemberAssetsGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessMemberAssetsGet200Response_Type_Vectors.Vector);



   type BusinessMembersAssetAccessDeleteRequest_Type is
     record
       Accesses : .Models.BusinessMembersAssetAccessDeleteRequestAccessesInner_Type_Vectors.Vector;
     end record;


   package BusinessMembersAssetAccessDeleteRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessMembersAssetAccessDeleteRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessMembersAssetAccessDeleteRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessMembersAssetAccessDeleteRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessMembersAssetAccessDeleteRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessMembersAssetAccessDeleteRequest_Type_Vectors.Vector);



   type BusinessSharedAudienceResponse_Type is
     record
       Audience_Id : Swagger.Nullable_UString;
       Permissions : .Models.Role_Type_Vectors.Vector;
       Recipient_Business_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package BusinessSharedAudienceResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessSharedAudienceResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessSharedAudienceResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessSharedAudienceResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessSharedAudienceResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessSharedAudienceResponse_Type_Vectors.Vector);



   type BusinessSharedAudience_Type is
     record
       Audience_Id : Swagger.UString;
       Operation_Type : .Models.OperationType_Type;
       Recipient_Business_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package BusinessSharedAudience_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessSharedAudience_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessSharedAudience_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessSharedAudience_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessSharedAudience_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessSharedAudience_Type_Vectors.Vector);



   type CampaignCreateResponseData_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Lifetime_Spend_Cap : Swagger.Nullable_Integer;
       Daily_Spend_Cap : Swagger.Nullable_Integer;
       Order_Line_Id : Swagger.Nullable_UString;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Is_Flexible_Daily_Budgets : Swagger.Nullable_Boolean;
       Default_Ad_Group_Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Is_Automated_Campaign : Swagger.Nullable_Boolean;
       Id : Swagger.Nullable_UString;
       Objective_Type : .Models.ObjectiveType_Type;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
       P_Type : Swagger.Nullable_UString;
       Is_Campaign_Budget_Optimization : Swagger.Nullable_Boolean;
       Summary_Status : .Models.CampaignSummaryStatus_Type;
     end record;


   package CampaignCreateResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignCreateResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignCreateResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignCreateResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignCreateResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignCreateResponseData_Type_Vectors.Vector);



   type CampaignCreateResponseItem_Type is
     record
       Data : .Models.CampaignCreateResponseData_Type;
       Exceptions : .Models.Model_Exception_Vectors.Vector;
     end record;


   package CampaignCreateResponseItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignCreateResponseItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignCreateResponseItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignCreateResponseItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignCreateResponseItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignCreateResponseItem_Type_Vectors.Vector);



   type CampaignCreateResponse_Type is
     record
       Items : .Models.CampaignCreateResponseItem_Type_Vectors.Vector;
     end record;


   package CampaignCreateResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignCreateResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignCreateResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignCreateResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignCreateResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignCreateResponse_Type_Vectors.Vector);



   type CampaignUpdateResponse_Type is
     record
       Items : .Models.CampaignCreateResponseItem_Type_Vectors.Vector;
     end record;


   package CampaignUpdateResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignUpdateResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignUpdateResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignUpdateResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignUpdateResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignUpdateResponse_Type_Vectors.Vector);



   type CampaignResponse_Type is
     record
       Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Lifetime_Spend_Cap : Swagger.Nullable_Integer;
       Daily_Spend_Cap : Swagger.Nullable_Integer;
       Order_Line_Id : Swagger.Nullable_UString;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Is_Flexible_Daily_Budgets : Swagger.Nullable_Boolean;
       Objective_Type : .Models.ObjectiveType_Type;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
       P_Type : Swagger.Nullable_UString;
       Is_Campaign_Budget_Optimization : Swagger.Nullable_Boolean;
       Summary_Status : .Models.CampaignSummaryStatus_Type;
     end record;


   package CampaignResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignResponse_Type_Vectors.Vector);



   type CampaignsList200Response_Type is
     record
       Items : .Models.CampaignResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package CampaignsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignsList200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  catalog
   --  Catalog entity
   --  ------------------------------
   type Catalog_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
       Name : Swagger.UString;
       Catalog_Type : .Models.CatalogsType_Type;
     end record;


   package Catalog_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Catalog_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Catalog_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Catalog_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Catalog_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Catalog_Type_Vectors.Vector);



   type CatalogsCreateCreativeAssetsItem_Type is
     record
       Creative_Assets_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsCreativeAssetsAttributes_Type;
     end record;


   package CatalogsCreateCreativeAssetsItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreateCreativeAssetsItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreateCreativeAssetsItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreateCreativeAssetsItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreateCreativeAssetsItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreateCreativeAssetsItem_Type_Vectors.Vector);



   type CatalogsHotelAttributes_Type is
     record
       Name : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Brand : Swagger.Nullable_UString;
       Latitude : Swagger.Number;
       Longitude : Swagger.Number;
       Neighborhood : Swagger.UString_Vectors.Vector;
       Address : .Models.CatalogsHotelAddress_Type;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Category : Swagger.Nullable_UString;
       Base_Price : Swagger.Nullable_UString;
       Sale_Price : Swagger.Nullable_UString;
       Guest_Ratings : .Models.CatalogsHotelGuestRatings_Type;
       Main_Image : .Models.CatalogsHotelAttributesAllOfMainImage_Type;
       Additional_Image_Link : Swagger.UString_Vectors.Vector;
     end record;


   package CatalogsHotelAttributes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelAttributes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelAttributes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelAttributes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelAttributes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelAttributes_Type_Vectors.Vector);



   type CatalogsCreateHotelItem_Type is
     record
       Hotel_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsHotelAttributes_Type;
     end record;


   package CatalogsCreateHotelItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreateHotelItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreateHotelItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreateHotelItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreateHotelItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreateHotelItem_Type_Vectors.Vector);



   type ItemAttributesRequest_Type is
     record
       Ad_Link : Swagger.Nullable_UString;
       Adult : Swagger.Nullable_Boolean;
       Age_Group : Swagger.Nullable_UString;
       Availability : Swagger.Nullable_UString;
       Average_Review_Rating : Swagger.Number;
       Brand : Swagger.Nullable_UString;
       Checkout_Enabled : Swagger.Nullable_Boolean;
       Color : Swagger.Nullable_UString;
       Condition : Swagger.Nullable_UString;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Free_Shipping_Label : Swagger.Nullable_Boolean;
       Free_Shipping_Limit : Swagger.Nullable_UString;
       Gender : Swagger.Nullable_UString;
       Google_Product_Category : Swagger.Nullable_UString;
       Gtin : Swagger.Nullable_Integer;
       Id : Swagger.Nullable_UString;
       Item_Group_Id : Swagger.Nullable_UString;
       Last_Updated_Time : Swagger.Nullable_Long;
       Link : Swagger.Nullable_UString;
       Material : Swagger.Nullable_UString;
       Min_Ad_Price : Swagger.Nullable_UString;
       Mobile_Link : Swagger.Nullable_UString;
       Mpn : Swagger.Nullable_UString;
       Number_Of_Ratings : Swagger.Nullable_Integer;
       Number_Of_Reviews : Swagger.Nullable_Integer;
       Pattern : Swagger.Nullable_UString;
       Price : Swagger.Nullable_UString;
       Product_Type : Swagger.Nullable_UString;
       Sale_Price : Swagger.Nullable_UString;
       Shipping : Swagger.Nullable_UString;
       Shipping_Height : Swagger.Nullable_UString;
       Shipping_Weight : Swagger.Nullable_UString;
       Shipping_Width : Swagger.Nullable_UString;
       Size : Swagger.Nullable_UString;
       Size_System : Swagger.Nullable_UString;
       Size_Type : Swagger.Nullable_UString;
       Tax : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Variant_Names : Swagger.UString_Vectors.Vector;
       Variant_Values : Swagger.UString_Vectors.Vector;
       Additional_Image_Link : Swagger.UString_Vectors.Vector;
       Image_Link : .Models.ItemAttributesRequestAllOfImageLink_Type;
       Video_Link : Swagger.Nullable_UString;
     end record;


   package ItemAttributesRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemAttributesRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemAttributesRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemAttributesRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemAttributesRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemAttributesRequest_Type_Vectors.Vector);



   type CatalogsCreateRetailItem_Type is
     record
       Item_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.ItemAttributesRequest_Type;
     end record;


   package CatalogsCreateRetailItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreateRetailItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreateRetailItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreateRetailItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreateRetailItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreateRetailItem_Type_Vectors.Vector);



   type CatalogsCreativeAssetsBatchItem_Type is
     record
       Creative_Assets_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsUpdatableCreativeAssetsAttributes_Type;
     end record;


   package CatalogsCreativeAssetsBatchItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsBatchItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsBatchItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsBatchItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsBatchItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsBatchItem_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_filters
   --  Object holding a group of filters for a creative assets product group
   --  ------------------------------
   type CatalogsCreativeAssetsProductGroupFilters_Type is
     record
       Any_Of : .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors.Vector;
       All_Of : .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsCreativeAssetsProductGroupFilters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupFilters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupFilters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupFilters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupFilters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupFilters_Type_Vectors.Vector);


   --  ------------------------------
   --  creative_assets_list_products_by_catalog_based_filter_request
   --  Request object to list products for a given creative assets catalog_id and product group filter.
   --  ------------------------------
   type CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Catalog_Id : Swagger.UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
     end record;


   package CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  creative_assets_product_groups_create_request
   --  Request object for creating a creative assets product group.
   --  ------------------------------
   type CatalogsCreativeAssetsProductGroupCreateRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsCreativeAssetsProductGroupCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupCreateRequest_Type_Vectors.Vector);



   type CatalogsCreativeAssetsProductGroupFiltersAllOf_Type is
     record
       All_Of : .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsCreativeAssetsProductGroupFiltersAllOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupFiltersAllOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupFiltersAllOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupFiltersAllOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupFiltersAllOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupFiltersAllOf_Type_Vectors.Vector);



   type CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type is
     record
       Any_Of : .Models.CatalogsCreativeAssetsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupFiltersAnyOf_Type_Vectors.Vector);


   --  ------------------------------
   --  creative_assets_product_groups_update_request
   --  Request object for updating a creative assets product group.
   --  ------------------------------
   type CatalogsCreativeAssetsProductGroupUpdateRequest_Type is
     record
       Catalog_Type : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
     end record;


   package CatalogsCreativeAssetsProductGroupUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroupUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroupUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroupUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroupUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroupUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  creative_assets_product_group
   --  ------------------------------
   type CatalogsCreativeAssetsProductGroup_Type is
     record
       Catalog_Type : Swagger.UString;
       Id : Swagger.UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Created_At : Swagger.Nullable_Integer;
       Updated_At : Swagger.Nullable_Integer;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsCreativeAssetsProductGroup_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductGroup_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductGroup_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductGroup_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductGroup_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductGroup_Type_Vectors.Vector);



   type CatalogsCreativeAssetsProductMetadata_Type is
     record
       Creative_Assets_Id : Swagger.UString;
       Visibility : .Models.CreativeAssetsVisibilityType_Type;
     end record;


   package CatalogsCreativeAssetsProductMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProductMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProductMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProductMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProductMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProductMetadata_Type_Vectors.Vector);



   type CatalogsFeedIngestion_Type is
     record
       Id : Swagger.UString;
       Feed_Id : Swagger.UString;
       Created_At : Swagger.Datetime;
       Status : .Models.CatalogsFeedProcessingStatus_Type;
     end record;


   package CatalogsFeedIngestion_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedIngestion_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedIngestion_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedIngestion_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedIngestion_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedIngestion_Type_Vectors.Vector);



   type CatalogsUpdatableHotelAttributes_Type is
     record
       Name : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Brand : Swagger.Nullable_UString;
       Latitude : Swagger.Number;
       Longitude : Swagger.Number;
       Neighborhood : Swagger.UString_Vectors.Vector;
       Address : .Models.CatalogsHotelAddress_Type;
       Custom_Label_0 : Swagger.Nullable_UString;
       Custom_Label_1 : Swagger.Nullable_UString;
       Custom_Label_2 : Swagger.Nullable_UString;
       Custom_Label_3 : Swagger.Nullable_UString;
       Custom_Label_4 : Swagger.Nullable_UString;
       Category : Swagger.Nullable_UString;
       Base_Price : Swagger.Nullable_UString;
       Sale_Price : Swagger.Nullable_UString;
       Guest_Ratings : .Models.CatalogsHotelGuestRatings_Type;
     end record;


   package CatalogsUpdatableHotelAttributes_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpdatableHotelAttributes_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpdatableHotelAttributes_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpdatableHotelAttributes_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpdatableHotelAttributes_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpdatableHotelAttributes_Type_Vectors.Vector);



   type CatalogsHotelBatchItem_Type is
     record
       Hotel_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsUpdatableHotelAttributes_Type;
     end record;


   package CatalogsHotelBatchItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelBatchItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelBatchItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelBatchItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelBatchItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelBatchItem_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_filters
   --  Object holding a group of filters for a hotel product group
   --  ------------------------------
   type CatalogsHotelProductGroupFilters_Type is
     record
       Any_Of : .Models.CatalogsHotelProductGroupFilterKeys_Type_Vectors.Vector;
       All_Of : .Models.CatalogsHotelProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsHotelProductGroupFilters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupFilters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupFilters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupFilters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupFilters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupFilters_Type_Vectors.Vector);


   --  ------------------------------
   --  hotel_list_products_by_catalog_based_filter_request
   --  Request object to list products for a given hotel catalog_id and product group filter.
   --  ------------------------------
   type CatalogsHotelListProductsByCatalogBasedFilterRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Catalog_Id : Swagger.UString;
       Filters : .Models.CatalogsHotelProductGroupFilters_Type;
     end record;


   package CatalogsHotelListProductsByCatalogBasedFilterRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelListProductsByCatalogBasedFilterRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelListProductsByCatalogBasedFilterRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelListProductsByCatalogBasedFilterRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  hotel_product_groups_create_request
   --  Request object for creating a hotel product group.
   --  ------------------------------
   type CatalogsHotelProductGroupCreateRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsHotelProductGroupFilters_Type;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsHotelProductGroupCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_pricing_currency_criteria
   --  ------------------------------
   type CatalogsProductGroupPricingCurrencyCriteria_Type is
     record
       Operator : Swagger.UString;
       Value : Swagger.Number;
       Currency : .Models.NonNullableCatalogsCurrency_Type;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupPricingCurrencyCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupPricingCurrencyCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupPricingCurrencyCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupPricingCurrencyCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupPricingCurrencyCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupPricingCurrencyCriteria_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_keys
   --  ------------------------------
   type CatalogsHotelProductGroupFilterKeys_Type is
     record
       PRICE : .Models.CatalogsProductGroupPricingCurrencyCriteria_Type;
       HOTEL_ID : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       BRAND : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_0 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_1 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_2 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_3 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       CUSTOM_LABEL_4 : .Models.CatalogsProductGroupMultipleStringCriteria_Type;
       COUNTRY : .Models.CatalogsProductGroupMultipleCountriesCriteria_Type;
     end record;


   package CatalogsHotelProductGroupFilterKeys_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupFilterKeys_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupFilterKeys_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupFilterKeys_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupFilterKeys_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupFilterKeys_Type_Vectors.Vector);



   type CatalogsHotelProductGroupFiltersAllOf_Type is
     record
       All_Of : .Models.CatalogsHotelProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsHotelProductGroupFiltersAllOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupFiltersAllOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupFiltersAllOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupFiltersAllOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupFiltersAllOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupFiltersAllOf_Type_Vectors.Vector);



   type CatalogsHotelProductGroupFiltersAnyOf_Type is
     record
       Any_Of : .Models.CatalogsHotelProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsHotelProductGroupFiltersAnyOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupFiltersAnyOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupFiltersAnyOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupFiltersAnyOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupFiltersAnyOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupFiltersAnyOf_Type_Vectors.Vector);


   --  ------------------------------
   --  hotel_product_groups_update_request
   --  Request object for updating a hotel product group.
   --  ------------------------------
   type CatalogsHotelProductGroupUpdateRequest_Type is
     record
       Catalog_Type : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsHotelProductGroupFilters_Type;
     end record;


   package CatalogsHotelProductGroupUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroupUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroupUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroupUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroupUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroupUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  hotel_product_group
   --  ------------------------------
   type CatalogsHotelProductGroup_Type is
     record
       Catalog_Type : Swagger.UString;
       Id : Swagger.UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsHotelProductGroupFilters_Type;
       Created_At : Swagger.Nullable_Integer;
       Updated_At : Swagger.Nullable_Integer;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsHotelProductGroup_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProductGroup_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProductGroup_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProductGroup_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProductGroup_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProductGroup_Type_Vectors.Vector);



   type CatalogsHotelReportParameters_Type is
     record
       Catalog_Type : Swagger.UString;
       Report : .Models.CatalogsHotelReportParametersReport_Type;
     end record;


   package CatalogsHotelReportParameters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelReportParameters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelReportParameters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelReportParameters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelReportParameters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelReportParameters_Type_Vectors.Vector);



   type CatalogsItemValidationDetails_Type is
     record
       Attribute_Name : .Models.NullableCatalogsItemFieldType_Type;
       Provided_Value : Swagger.UString;
     end record;


   package CatalogsItemValidationDetails_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemValidationDetails_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemValidationDetails_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemValidationDetails_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemValidationDetails_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemValidationDetails_Type_Vectors.Vector);



   type CatalogsItemValidationErrors_Type is
     record
       ADULT_INVALID : .Models.CatalogsItemValidationDetails_Type;
       ADWORDS_FORMAT_INVALID : .Models.CatalogsItemValidationDetails_Type;
       AVAILABILITY_INVALID : .Models.CatalogsItemValidationDetails_Type;
       BLOCKLISTED_IMAGE_SIGNATURE : .Models.CatalogsItemValidationDetails_Type;
       DESCRIPTION_MISSING : .Models.CatalogsItemValidationDetails_Type;
       DUPLICATE_PRODUCTS : .Models.CatalogsItemValidationDetails_Type;
       IMAGE_LINK_INVALID : .Models.CatalogsItemValidationDetails_Type;
       IMAGE_LINK_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       IMAGE_LINK_MISSING : .Models.CatalogsItemValidationDetails_Type;
       INVALID_DOMAIN : .Models.CatalogsItemValidationDetails_Type;
       ITEMID_MISSING : .Models.CatalogsItemValidationDetails_Type;
       ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE : .Models.CatalogsItemValidationDetails_Type;
       LINK_FORMAT_INVALID : .Models.CatalogsItemValidationDetails_Type;
       LINK_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       LIST_PRICE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED : .Models.CatalogsItemValidationDetails_Type;
       PARSE_LINE_ERROR : .Models.CatalogsItemValidationDetails_Type;
       PINJOIN_CONTENT_UNSAFE : .Models.CatalogsItemValidationDetails_Type;
       PRICE_CANNOT_BE_DETERMINED : .Models.CatalogsItemValidationDetails_Type;
       PRICE_MISSING : .Models.CatalogsItemValidationDetails_Type;
       PRODUCT_LINK_MISSING : .Models.CatalogsItemValidationDetails_Type;
       PRODUCT_PRICE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       TITLE_MISSING : .Models.CatalogsItemValidationDetails_Type;
     end record;


   package CatalogsItemValidationErrors_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemValidationErrors_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemValidationErrors_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemValidationErrors_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemValidationErrors_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemValidationErrors_Type_Vectors.Vector);



   type CatalogsItemValidationWarnings_Type is
     record
       AD_LINK_FORMAT_WARNING : .Models.CatalogsItemValidationDetails_Type;
       AD_LINK_SAME_AS_LINK : .Models.CatalogsItemValidationDetails_Type;
       ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       ADDITIONAL_IMAGE_LINK_WARNING : .Models.CatalogsItemValidationDetails_Type;
       ADWORDS_FORMAT_WARNING : .Models.CatalogsItemValidationDetails_Type;
       ADWORDS_SAME_AS_LINK : .Models.CatalogsItemValidationDetails_Type;
       AGE_GROUP_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SIZE_SYSTEM_INVALID : .Models.CatalogsItemValidationDetails_Type;
       ANDROID_DEEP_LINK_INVALID : .Models.CatalogsItemValidationDetails_Type;
       AVAILABILITY_DATE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       COUNTRY_DOES_NOT_MAP_TO_CURRENCY : .Models.CatalogsItemValidationDetails_Type;
       CUSTOM_LABEL_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       DESCRIPTION_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       EXPIRATION_DATE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       GENDER_INVALID : .Models.CatalogsItemValidationDetails_Type;
       GTIN_INVALID : .Models.CatalogsItemValidationDetails_Type;
       IMAGE_LINK_WARNING : .Models.CatalogsItemValidationDetails_Type;
       IOS_DEEP_LINK_INVALID : .Models.CatalogsItemValidationDetails_Type;
       IS_BUNDLE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE : .Models.CatalogsItemValidationDetails_Type;
       LINK_FORMAT_WARNING : .Models.CatalogsItemValidationDetails_Type;
       MIN_AD_PRICE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       MPN_INVALID : .Models.CatalogsItemValidationDetails_Type;
       MULTIPACK_INVALID : .Models.CatalogsItemValidationDetails_Type;
       OPTIONAL_CONDITION_INVALID : .Models.CatalogsItemValidationDetails_Type;
       OPTIONAL_CONDITION_MISSING : .Models.CatalogsItemValidationDetails_Type;
       OPTIONAL_PRODUCT_CATEGORY_INVALID : .Models.CatalogsItemValidationDetails_Type;
       OPTIONAL_PRODUCT_CATEGORY_MISSING : .Models.CatalogsItemValidationDetails_Type;
       PRODUCT_CATEGORY_DEPTH_WARNING : .Models.CatalogsItemValidationDetails_Type;
       PRODUCT_TYPE_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       SALES_PRICE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SALES_PRICE_TOO_LOW : .Models.CatalogsItemValidationDetails_Type;
       SALES_PRICE_TOO_HIGH : .Models.CatalogsItemValidationDetails_Type;
       SALE_DATE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SHIPPING_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SHIPPING_HEIGHT_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SHIPPING_WEIGHT_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SHIPPING_WIDTH_INVALID : .Models.CatalogsItemValidationDetails_Type;
       SIZE_TYPE_INVALID : .Models.CatalogsItemValidationDetails_Type;
       TAX_INVALID : .Models.CatalogsItemValidationDetails_Type;
       TITLE_LENGTH_TOO_LONG : .Models.CatalogsItemValidationDetails_Type;
       TOO_MANY_ADDITIONAL_IMAGE_LINKS : .Models.CatalogsItemValidationDetails_Type;
       UTM_SOURCE_AUTO_CORRECTED : .Models.CatalogsItemValidationDetails_Type;
       WEIGHT_UNIT_INVALID : .Models.CatalogsItemValidationDetails_Type;
     end record;


   package CatalogsItemValidationWarnings_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemValidationWarnings_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemValidationWarnings_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemValidationWarnings_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemValidationWarnings_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemValidationWarnings_Type_Vectors.Vector);



   type CatalogsItemsFilters_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
       Hotel_Ids : Swagger.UString_Vectors.Vector;
       Creative_Assets_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package CatalogsItemsFilters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsFilters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsFilters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsFilters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsFilters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsFilters_Type_Vectors.Vector);



   type CatalogsItemsPostFilters_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Ids : Swagger.UString_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
       Hotel_Ids : Swagger.UString_Vectors.Vector;
       Creative_Assets_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package CatalogsItemsPostFilters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsPostFilters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsPostFilters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsPostFilters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsPostFilters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsPostFilters_Type_Vectors.Vector);



   type ItemResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Id : Swagger.Nullable_UString;
       Pins : .Models.Pin_Type_Vectors.Vector;
       Attributes : .Models.CatalogsCreativeAssetsAttributes_Type;
       Hotel_Id : Swagger.Nullable_UString;
       Creative_Assets_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
     end record;


   package ItemResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemResponse_Type_Vectors.Vector);



   type CatalogsItems_Type is
     record
       Items : .Models.ItemResponse_Type_Vectors.Vector;
     end record;


   package CatalogsItems_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItems_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItems_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItems_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItems_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItems_Type_Vectors.Vector);



   type CatalogsList200Response_Type is
     record
       Items : .Models.Catalog_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package CatalogsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsList200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_filters
   --  Object holding a group of filters for a catalog product group
   --  ------------------------------
   type CatalogsProductGroupFilters_Type is
     record
       Any_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
       All_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsProductGroupFilters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFilters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFilters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFilters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFilters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFilters_Type_Vectors.Vector);


   --  ------------------------------
   --  feed based product group
   --  Request object to list products for a given feed_id and product group filter.
   --  ------------------------------
   type CatalogsListProductsByFeedBasedFilter_Type is
     record
       Feed_Id : Swagger.UString;
       Filters : .Models.CatalogsProductGroupFilters_Type;
     end record;


   package CatalogsListProductsByFeedBasedFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsListProductsByFeedBasedFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsListProductsByFeedBasedFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsListProductsByFeedBasedFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsListProductsByFeedBasedFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsListProductsByFeedBasedFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_filters
   --  Object holding a group of filters for request on catalog product group. This is a distinct schema It is not possible to create or update a Product Group with empty filters. But some automatically generated Product Groups might have empty filters.
   --  ------------------------------
   type CatalogsProductGroupFiltersRequest_Type is
     record
       Any_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
       All_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsProductGroupFiltersRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFiltersRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFiltersRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFiltersRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFiltersRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFiltersRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  retail feed based
   --  Request object for creating a product group.
   --  ------------------------------
   type CatalogsProductGroupCreateRequest_Type is
     record
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Is_Featured : Swagger.Nullable_Boolean;
       Filters : .Models.CatalogsProductGroupFiltersRequest_Type;
       Feed_Id : Swagger.UString;
     end record;


   package CatalogsProductGroupCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_currency_criteria
   --  A currency filter. This filter cannot be negated
   --  ------------------------------
   type CatalogsProductGroupCurrencyCriteria_Type is
     record
       Values : .Models.NonNullableCatalogsCurrency_Type;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupCurrencyCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupCurrencyCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupCurrencyCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupCurrencyCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupCurrencyCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupCurrencyCriteria_Type_Vectors.Vector);



   type CatalogsProductGroupFiltersAllOf_Type is
     record
       All_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsProductGroupFiltersAllOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFiltersAllOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFiltersAllOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFiltersAllOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFiltersAllOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFiltersAllOf_Type_Vectors.Vector);



   type CatalogsProductGroupFiltersAnyOf_Type is
     record
       Any_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsProductGroupFiltersAnyOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFiltersAnyOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFiltersAnyOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFiltersAnyOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFiltersAnyOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFiltersAnyOf_Type_Vectors.Vector);



   type CatalogsProductGroupFiltersRequestAnyOf1_Type is
     record
       All_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsProductGroupFiltersRequestAnyOf1_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFiltersRequestAnyOf1_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFiltersRequestAnyOf1_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFiltersRequestAnyOf1_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFiltersRequestAnyOf1_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFiltersRequestAnyOf1_Type_Vectors.Vector);



   type CatalogsProductGroupFiltersRequestAnyOf_Type is
     record
       Any_Of : .Models.CatalogsProductGroupFilterKeys_Type_Vectors.Vector;
     end record;


   package CatalogsProductGroupFiltersRequestAnyOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupFiltersRequestAnyOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupFiltersRequestAnyOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupFiltersRequestAnyOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupFiltersRequestAnyOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupFiltersRequestAnyOf_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_multiple_country_criteria
   --  ------------------------------
   type CatalogsProductGroupMultipleCountriesCriteria_Type is
     record
       Values : .Models.Country_Type_Vectors.Vector;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupMultipleCountriesCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupMultipleCountriesCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupMultipleCountriesCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupMultipleCountriesCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupMultipleCountriesCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupMultipleCountriesCriteria_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_multiple_gender_criteria
   --  ------------------------------
   type CatalogsProductGroupMultipleGenderCriteria_Type is
     record
       Values : .Models.Gender_Type_Vectors.Vector;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupMultipleGenderCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupMultipleGenderCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupMultipleGenderCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupMultipleGenderCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupMultipleGenderCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupMultipleGenderCriteria_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_product_group_multiple_media_type_criteria
   --  ------------------------------
   type CatalogsProductGroupMultipleMediaTypesCriteria_Type is
     record
       Values : .Models.MediaType_Type_Vectors.Vector;
       Negated : Swagger.Nullable_Boolean;
     end record;


   package CatalogsProductGroupMultipleMediaTypesCriteria_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupMultipleMediaTypesCriteria_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupMultipleMediaTypesCriteria_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupMultipleMediaTypesCriteria_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupMultipleMediaTypesCriteria_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupMultipleMediaTypesCriteria_Type_Vectors.Vector);



   type CatalogsProduct_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Metadata : .Models.CatalogsCreativeAssetsProductMetadata_Type;
       Pin : .Models.Pin_Type;
     end record;


   package CatalogsProduct_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProduct_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProduct_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProduct_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProduct_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProduct_Type_Vectors.Vector);



   type CatalogsProductGroupPinsList200Response_Type is
     record
       Items : .Models.CatalogsProduct_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package CatalogsProductGroupPinsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupPinsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupPinsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupPinsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupPinsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupPinsList200Response_Type_Vectors.Vector);



   type CatalogsProductGroupProductCountsVertical_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       In_Stock : Swagger.Number;
       Out_Of_Stock : Swagger.Number;
       Preorder : Swagger.Number;
       Total : Swagger.Number;
       Videos : Swagger.Number;
     end record;


   package CatalogsProductGroupProductCountsVertical_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupProductCountsVertical_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupProductCountsVertical_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupProductCountsVertical_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupProductCountsVertical_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupProductCountsVertical_Type_Vectors.Vector);


   --  ------------------------------
   --  retail feed based
   --  Request object for updating a product group.
   --  ------------------------------
   type CatalogsProductGroupUpdateRequest_Type is
     record
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Is_Featured : Swagger.Nullable_Boolean;
       Filters : .Models.CatalogsProductGroupFiltersRequest_Type;
     end record;


   package CatalogsProductGroupUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  product_group
   --  ------------------------------
   type CatalogsVerticalProductGroup_Type is
     record
       Catalog_Type : Swagger.UString;
       Id : Swagger.UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Is_Featured : Swagger.Nullable_Boolean;
       P_Type : .Models.CatalogsProductGroupType_Type;
       Status : .Models.CatalogsProductGroupStatus_Type;
       Created_At : Swagger.Nullable_Integer;
       Updated_At : Swagger.Nullable_Integer;
       Catalog_Id : Swagger.UString;
       Feed_Id : Swagger.UString;
       Country : Swagger.Nullable_UString;
       Locale : Swagger.Nullable_UString;
     end record;


   package CatalogsVerticalProductGroup_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalProductGroup_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalProductGroup_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalProductGroup_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalProductGroup_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalProductGroup_Type_Vectors.Vector);



   type CatalogsProductGroupsList200Response_Type is
     record
       Items : .Models.CatalogsVerticalProductGroup_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package CatalogsProductGroupsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupsList200Response_Type_Vectors.Vector);



   type CatalogsRetailReportParameters_Type is
     record
       Catalog_Type : Swagger.UString;
       Report : .Models.CatalogsHotelReportParametersReport_Type;
     end record;


   package CatalogsRetailReportParameters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailReportParameters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailReportParameters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailReportParameters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailReportParameters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailReportParameters_Type_Vectors.Vector);



   type CatalogsUpdateCreativeAssetsItem_Type is
     record
       Creative_Assets_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsUpdatableCreativeAssetsAttributes_Type;
     end record;


   package CatalogsUpdateCreativeAssetsItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpdateCreativeAssetsItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpdateCreativeAssetsItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpdateCreativeAssetsItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpdateCreativeAssetsItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpdateCreativeAssetsItem_Type_Vectors.Vector);



   type CatalogsUpdateHotelItem_Type is
     record
       Hotel_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsUpdatableHotelAttributes_Type;
     end record;


   package CatalogsUpdateHotelItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpdateHotelItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpdateHotelItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpdateHotelItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpdateHotelItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpdateHotelItem_Type_Vectors.Vector);



   type CatalogsUpsertCreativeAssetsItem_Type is
     record
       Creative_Assets_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsCreativeAssetsAttributes_Type;
     end record;


   package CatalogsUpsertCreativeAssetsItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpsertCreativeAssetsItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpsertCreativeAssetsItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpsertCreativeAssetsItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpsertCreativeAssetsItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpsertCreativeAssetsItem_Type_Vectors.Vector);



   type CatalogsUpsertHotelItem_Type is
     record
       Hotel_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.CatalogsHotelAttributes_Type;
     end record;


   package CatalogsUpsertHotelItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpsertHotelItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpsertHotelItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpsertHotelItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpsertHotelItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpsertHotelItem_Type_Vectors.Vector);



   type CatalogsUpsertRetailItem_Type is
     record
       Item_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.ItemAttributesRequest_Type;
     end record;


   package CatalogsUpsertRetailItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpsertRetailItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpsertRetailItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpsertRetailItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpsertRetailItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpsertRetailItem_Type_Vectors.Vector);



   type ConversionApiResponse_Type is
     record
       Num_Events_Received : Integer;
       Num_Events_Processed : Integer;
       Events : .Models.ConversionApiResponseEventsInner_Type_Vectors.Vector;
     end record;


   package ConversionApiResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionApiResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionApiResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionApiResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionApiResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionApiResponse_Type_Vectors.Vector);



   type ConversionEventsDataInnerCustomData_Type is
     record
       Currency : Swagger.Nullable_UString;
       Value : Swagger.Nullable_UString;
       Content_Ids : Swagger.UString_Vectors.Vector;
       Content_Name : Swagger.Nullable_UString;
       Content_Category : Swagger.Nullable_UString;
       Content_Brand : Swagger.Nullable_UString;
       Contents : .Models.ConversionEventsDataInnerCustomDataContentsInner_Type_Vectors.Vector;
       Num_Items : Swagger.Nullable_Long;
       Order_Id : Swagger.Nullable_UString;
       Search_String : Swagger.Nullable_UString;
       Opt_Out_Type : Swagger.Nullable_UString;
       Np : Swagger.Nullable_UString;
     end record;


   package ConversionEventsDataInnerCustomData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsDataInnerCustomData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsDataInnerCustomData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsDataInnerCustomData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsDataInnerCustomData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsDataInnerCustomData_Type_Vectors.Vector);



   type ConversionEventsDataInner_Type is
     record
       Event_Name : Swagger.UString;
       Action_Source : Swagger.UString;
       Event_Time : Swagger.Long;
       Event_Id : Swagger.UString;
       Event_Source_Url : Swagger.Nullable_UString;
       Opt_Out : Swagger.Nullable_Boolean;
       Partner_Name : Swagger.Nullable_UString;
       User_Data : .Models.ConversionEventsUserData_Type;
       Custom_Data : .Models.ConversionEventsDataInnerCustomData_Type;
       App_Id : Swagger.Nullable_UString;
       App_Name : Swagger.Nullable_UString;
       App_Version : Swagger.Nullable_UString;
       Device_Brand : Swagger.Nullable_UString;
       Device_Carrier : Swagger.Nullable_UString;
       Device_Model : Swagger.Nullable_UString;
       Device_Type : Swagger.Nullable_UString;
       Os_Version : Swagger.Nullable_UString;
       Wifi : Swagger.Nullable_Boolean;
       Language : Swagger.Nullable_UString;
     end record;


   package ConversionEventsDataInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEventsDataInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEventsDataInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEventsDataInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEventsDataInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEventsDataInner_Type_Vectors.Vector);



   type ConversionEvents_Type is
     record
       Data : .Models.ConversionEventsDataInner_Type_Vectors.Vector;
     end record;


   package ConversionEvents_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionEvents_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionEvents_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionEvents_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionEvents_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionEvents_Type_Vectors.Vector);


   --  ------------------------------
   --  ConversionTagResponse
   --  ------------------------------
   type ConversionTagResponse_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Code_Snippet : Swagger.Nullable_UString;
       Enhanced_Match_Status : .Models.EnhancedMatchStatusType_Type;
       Id : Swagger.Nullable_UString;
       Last_Fired_Time_Ms : Swagger.Number;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Version : Swagger.Nullable_UString;
       Configs : .Models.ConversionTagConfigs_Type;
     end record;


   package ConversionTagResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionTagResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionTagResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionTagResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionTagResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionTagResponse_Type_Vectors.Vector);



   type ConversionTagListResponse_Type is
     record
       Items : .Models.ConversionTagResponse_Type_Vectors.Vector;
     end record;


   package ConversionTagListResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionTagListResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionTagListResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionTagListResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionTagListResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionTagListResponse_Type_Vectors.Vector);



   type CreateAssetAccessRequestBody_Type is
     record
       Asset_Requests : .Models.CreateAssetAccessRequestBodyAssetRequestsInner_Type_Vectors.Vector;
     end record;


   package CreateAssetAccessRequestBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetAccessRequestBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetAccessRequestBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetAccessRequestBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetAccessRequestBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetAccessRequestBody_Type_Vectors.Vector);



   type CreateAssetAccessRequestResponse_Type is
     record
       Exceptions : .Models.CreateAssetAccessRequestErrorMessageInner_Type_Vectors.Vector;
       Invites : Swagger.UString_Map;
     end record;


   package CreateAssetAccessRequestResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetAccessRequestResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetAccessRequestResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetAccessRequestResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetAccessRequestResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetAccessRequestResponse_Type_Vectors.Vector);



   type CreateAssetGroupBody_Type is
     record
       Asset_Group_Name : Swagger.UString;
       Asset_Group_Description : Swagger.UString;
       Asset_Group_Types : .Models.AssetGroupType_Type_Vectors.Vector;
     end record;


   package CreateAssetGroupBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetGroupBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetGroupBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetGroupBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetGroupBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetGroupBody_Type_Vectors.Vector);



   type CreateAssetGroupResponse_Type is
     record
       Asset_Group : .Models.AssetGroupBinding_Type;
     end record;


   package CreateAssetGroupResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetGroupResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetGroupResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetGroupResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetGroupResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetGroupResponse_Type_Vectors.Vector);



   type CreateAssetInvitesRequestItem_Type is
     record
       Invite_Id : Swagger.UString;
       Invite_Type : .Models.InviteType_Type;
       Asset_Id_To_Permissions : Swagger..Models.Permissions_Type_Vectors.Vector_Map;
     end record;


   package CreateAssetInvitesRequestItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetInvitesRequestItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetInvitesRequestItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetInvitesRequestItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetInvitesRequestItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetInvitesRequestItem_Type_Vectors.Vector);



   type CreateAssetInvitesRequest_Type is
     record
       Invites : .Models.CreateAssetInvitesRequestItem_Type_Vectors.Vector;
     end record;


   package CreateAssetInvitesRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateAssetInvitesRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateAssetInvitesRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateAssetInvitesRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateAssetInvitesRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateAssetInvitesRequest_Type_Vectors.Vector);



   type CreateInvitesResultsResponseArrayItemsInnerInvite_Type is
     record
       Id : Swagger.Nullable_UString;
       User : .Models.BusinessAccessUserSummary_Type;
     end record;


   package CreateInvitesResultsResponseArrayItemsInnerInvite_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateInvitesResultsResponseArrayItemsInnerInvite_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateInvitesResultsResponseArrayItemsInnerInvite_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateInvitesResultsResponseArrayItemsInnerInvite_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateInvitesResultsResponseArrayItemsInnerInvite_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateInvitesResultsResponseArrayItemsInnerInvite_Type_Vectors.Vector);



   type CreateInvitesResultsResponseArrayItemsInner_Type is
     record
       P_Exception : .Models.InviteExceptionResponse_Type;
       Invite : .Models.CreateInvitesResultsResponseArrayItemsInnerInvite_Type;
     end record;


   package CreateInvitesResultsResponseArrayItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateInvitesResultsResponseArrayItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateInvitesResultsResponseArrayItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateInvitesResultsResponseArrayItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector);



   type CreateInvitesResultsResponseArray_Type is
     record
       Items : .Models.CreateInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector;
     end record;


   package CreateInvitesResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateInvitesResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateInvitesResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateInvitesResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateInvitesResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateInvitesResultsResponseArray_Type_Vectors.Vector);


   --  ------------------------------
   --  CreateMMMReportResponseData
   --  ------------------------------
   type CreateMMMReportResponseData_Type is
     record
       Report_Status : .Models.BulkReportingJobStatus_Type;
       Token : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
     end record;


   package CreateMMMReportResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateMMMReportResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateMMMReportResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateMMMReportResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateMMMReportResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateMMMReportResponseData_Type_Vectors.Vector);



   type CreateMMMReportResponse_Type is
     record
       Code : Swagger.Number;
       Data : .Models.CreateMMMReportResponseData_Type;
     end record;


   package CreateMMMReportResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateMMMReportResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateMMMReportResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateMMMReportResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateMMMReportResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateMMMReportResponse_Type_Vectors.Vector);



   type CreateMembershipOrPartnershipInvitesBody_Type is
     record
       Business_Role : Swagger.UString;
       Invite_Type : .Models.InviteType_Type;
       Members : Swagger.UString_Vectors.Vector;
       Partners : Swagger.UString_Vectors.Vector;
     end record;


   package CreateMembershipOrPartnershipInvitesBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateMembershipOrPartnershipInvitesBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateMembershipOrPartnershipInvitesBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateMembershipOrPartnershipInvitesBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateMembershipOrPartnershipInvitesBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateMembershipOrPartnershipInvitesBody_Type_Vectors.Vector);


   --  ------------------------------
   --  CustomerListCreate
   --  ------------------------------
   type CustomerListRequest_Type is
     record
       Name : Swagger.UString;
       Records : Swagger.UString;
       List_Type : .Models.UserListType_Type;
       Exceptions : Swagger.Object;
     end record;


   package CustomerListRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomerListRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomerListRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomerListRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomerListRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomerListRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  CustomerListUpdate
   --  ------------------------------
   type CustomerListUpdateRequest_Type is
     record
       Records : Swagger.UString;
       Operation_Type : .Models.UserListOperationType_Type;
       Exceptions : .Models.Model_Exception;
     end record;


   package CustomerListUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomerListUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomerListUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomerListUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomerListUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomerListUpdateRequest_Type_Vectors.Vector);



   type CustomerListsList200Response_Type is
     record
       Items : .Models.CustomerList_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package CustomerListsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CustomerListsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CustomerListsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CustomerListsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CustomerListsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CustomerListsList200Response_Type_Vectors.Vector);



   type DeleteAssetGroupResponse_Type is
     record
       Deleted_Asset_Groups : Swagger.UString_Vectors.Vector;
       Exceptions : .Models.DeleteAssetGroupResponseExceptionsInner_Type_Vectors.Vector;
     end record;


   package DeleteAssetGroupResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteAssetGroupResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteAssetGroupResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteAssetGroupResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteAssetGroupResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteAssetGroupResponse_Type_Vectors.Vector);



   type DeleteInvitesResultsResponseArrayItemsInner_Type is
     record
       P_Exception : .Models.DeleteInvitesResultsResponseArrayItemsInnerException_Type;
       Invite : .Models.BaseInviteDataResponse_Type;
     end record;


   package DeleteInvitesResultsResponseArrayItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteInvitesResultsResponseArrayItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteInvitesResultsResponseArrayItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteInvitesResultsResponseArrayItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector);



   type DeleteInvitesResultsResponseArray_Type is
     record
       Items : .Models.DeleteInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector;
     end record;


   package DeleteInvitesResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteInvitesResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteInvitesResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteInvitesResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteInvitesResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteInvitesResultsResponseArray_Type_Vectors.Vector);



   type DeleteMemberAccessResultsResponseArray_Type is
     record
       Items : .Models.DeleteMemberAccessResult_Type_Vectors.Vector;
     end record;


   package DeleteMemberAccessResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeleteMemberAccessResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeleteMemberAccessResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeleteMemberAccessResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeleteMemberAccessResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeleteMemberAccessResultsResponseArray_Type_Vectors.Vector);



   type DeletePartnerAssetAccessBody_Type is
     record
       Accesses : .Models.DeletePartnerAssetAccessBodyAccessesInner_Type_Vectors.Vector;
     end record;


   package DeletePartnerAssetAccessBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletePartnerAssetAccessBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletePartnerAssetAccessBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletePartnerAssetAccessBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletePartnerAssetAccessBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletePartnerAssetAccessBody_Type_Vectors.Vector);



   type DeletePartnerAssetsResultsResponseArray_Type is
     record
       Items : .Models.DeletePartnerAssetsResult_Type_Vectors.Vector;
     end record;


   package DeletePartnerAssetsResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeletePartnerAssetsResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeletePartnerAssetsResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeletePartnerAssetsResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeletePartnerAssetsResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeletePartnerAssetsResultsResponseArray_Type_Vectors.Vector);



   type DeliveryMetricsResponse_Type is
     record
       Items : .Models.DeliveryMetricsResponseItemsInner_Type_Vectors.Vector;
     end record;


   package DeliveryMetricsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.DeliveryMetricsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.DeliveryMetricsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DeliveryMetricsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.DeliveryMetricsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out DeliveryMetricsResponse_Type_Vectors.Vector);



   type CatalogsFeedProcessingResult_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
       Ingestion_Details : .Models.CatalogsFeedIngestionDetails_Type;
       Status : .Models.CatalogsFeedProcessingStatus_Type;
       Product_Counts : .Models.CatalogsFeedProductCounts_Type;
       Validation_Details : .Models.CatalogsFeedValidationDetails_Type;
     end record;


   package CatalogsFeedProcessingResult_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedProcessingResult_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedProcessingResult_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedProcessingResult_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedProcessingResult_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedProcessingResult_Type_Vectors.Vector);



   type FeedProcessingResultsList200Response_Type is
     record
       Items : .Models.CatalogsFeedProcessingResult_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package FeedProcessingResultsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FeedProcessingResultsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FeedProcessingResultsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FeedProcessingResultsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FeedProcessingResultsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FeedProcessingResultsList200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_feed
   --  Catalogs Feed object
   --  ------------------------------
   type CatalogsFeed_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Default_Currency : .Models.NullableCurrency_Type;
       Default_Locale : Swagger.UString;
       Default_Country : .Models.Country_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsFeed_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeed_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeed_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeed_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeed_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeed_Type_Vectors.Vector);



   type FeedsList200Response_Type is
     record
       Items : .Models.CatalogsFeed_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package FeedsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FeedsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FeedsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FeedsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FeedsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FeedsList200Response_Type_Vectors.Vector);



   type FollowersList200Response_Type is
     record
       Items : .Models.UserSummary_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package FollowersList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FollowersList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FollowersList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FollowersList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FollowersList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FollowersList200Response_Type_Vectors.Vector);



   type UserBusinessRoleBinding_Type is
     record
       Assets_Summary : .Models.BusinessMemberAssetsSummary_Type;
       Business_Roles : Swagger.UString_Vectors.Vector;
       Created_By_Business : .Models.BusinessAccessUserSummary_Type;
       Created_By_User : .Models.BusinessAccessUserSummary_Type;
       Created_Time : Swagger.Nullable_Integer;
       Id : Swagger.Nullable_UString;
       Is_Shared_Partner : Swagger.Nullable_Boolean;
       User : .Models.BusinessAccessUserSummary_Type;
     end record;


   package UserBusinessRoleBinding_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserBusinessRoleBinding_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserBusinessRoleBinding_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserBusinessRoleBinding_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserBusinessRoleBinding_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserBusinessRoleBinding_Type_Vectors.Vector);



   type GetBusinessEmployers200Response_Type is
     record
       Items : .Models.UserBusinessRoleBinding_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package GetBusinessEmployers200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetBusinessEmployers200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetBusinessEmployers200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetBusinessEmployers200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetBusinessEmployers200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetBusinessEmployers200Response_Type_Vectors.Vector);



   type GetBusinessMembers200Response_Type is
     record
       Items : .Models.UserBusinessRoleBinding_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package GetBusinessMembers200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetBusinessMembers200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetBusinessMembers200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetBusinessMembers200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetBusinessMembers200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetBusinessMembers200Response_Type_Vectors.Vector);



   type GetBusinessPartners200Response_Type is
     record
       Items : .Models.UserBusinessRoleBinding_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package GetBusinessPartners200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetBusinessPartners200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetBusinessPartners200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetBusinessPartners200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetBusinessPartners200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetBusinessPartners200Response_Type_Vectors.Vector);



   type InviteResponse_Type is
     record
       Assets_Summary : .Models.InviteAssetsSummary_Type;
       Business_Roles : Swagger.UString_Vectors.Vector;
       Created_By_Business : .Models.BusinessAccessUserSummary_Type;
       Created_By_User : .Models.BusinessAccessUserSummary_Type;
       Created_Time : Swagger.Nullable_Integer;
       Id : Swagger.Nullable_UString;
       Invite_Data : .Models.BaseInviteDataResponseInviteData_Type;
       Is_Received_Invite : Swagger.Nullable_Boolean;
       User : .Models.BusinessAccessUserSummary_Type;
     end record;


   package InviteResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteResponse_Type_Vectors.Vector);



   type GetInvites200Response_Type is
     record
       Items : .Models.InviteResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package GetInvites200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetInvites200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetInvites200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetInvites200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetInvites200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetInvites200Response_Type_Vectors.Vector);



   type GetMMMReportResponse_Type is
     record
       Code : Swagger.Number;
       Data : .Models.GetMMMReportResponseData_Type;
       Message : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
     end record;


   package GetMMMReportResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetMMMReportResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetMMMReportResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetMMMReportResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetMMMReportResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetMMMReportResponse_Type_Vectors.Vector);



   type GetPartnerAssetsResponse_Type is
     record
       Asset_Id : Swagger.Nullable_UString;
       Asset_Type : Swagger.Nullable_UString;
       Permissions : Swagger.UString_Vectors.Vector;
       Asset_Group_Info : .Models.AssetGroupBinding_Type;
     end record;


   package GetPartnerAssetsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.GetPartnerAssetsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.GetPartnerAssetsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GetPartnerAssetsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.GetPartnerAssetsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out GetPartnerAssetsResponse_Type_Vectors.Vector);



   type BusinessPartnerAssetAccessGet200Response_Type is
     record
       Items : .Models.GetPartnerAssetsResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BusinessPartnerAssetAccessGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessPartnerAssetAccessGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessPartnerAssetAccessGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessPartnerAssetAccessGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessPartnerAssetAccessGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessPartnerAssetAccessGet200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  Image metadata
   --  ------------------------------
   type ImageMetadata_Type is
     record
       Item_Type : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Images : .Models.ImageMetadataImages_Type;
     end record;


   package ImageMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ImageMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ImageMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ImageMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ImageMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ImageMetadata_Type_Vectors.Vector);



   type IntegrationLogsInvalidLogResponse_Type is
     record
       Rejected_Logs : .Models.IntegrationLogsInvalidLogResponseRejectedLogsInner_Type_Vectors.Vector;
     end record;


   package IntegrationLogsInvalidLogResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLogsInvalidLogResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLogsInvalidLogResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLogsInvalidLogResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLogsInvalidLogResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLogsInvalidLogResponse_Type_Vectors.Vector);



   type IntegrationLog_Type is
     record
       Client_Timestamp : Integer;
       Event_Type : Swagger.UString;
       Log_Level : Swagger.UString;
       External_Business_Id : Swagger.Nullable_UString;
       Advertiser_Id : Swagger.Nullable_UString;
       Merchant_Id : Swagger.Nullable_UString;
       Tag_Id : Swagger.Nullable_UString;
       Feed_Profile_Id : Swagger.Nullable_UString;
       Message : Swagger.Nullable_UString;
       App_Version_Number : Swagger.Nullable_UString;
       Platform_Version_Number : Swagger.Nullable_UString;
       Error : .Models.IntegrationLogClientError_Type;
       Request : .Models.IntegrationLogClientRequest_Type;
     end record;


   package IntegrationLog_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLog_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLog_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLog_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLog_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLog_Type_Vectors.Vector);



   type IntegrationLogsRequest_Type is
     record
       Logs : .Models.IntegrationLog_Type_Vectors.Vector;
     end record;


   package IntegrationLogsRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationLogsRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationLogsRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationLogsRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationLogsRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationLogsRequest_Type_Vectors.Vector);



   type IntegrationsGetList200Response_Type is
     record
       Items : .Models.IntegrationRecord_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package IntegrationsGetList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.IntegrationsGetList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.IntegrationsGetList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in IntegrationsGetList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.IntegrationsGetList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out IntegrationsGetList200Response_Type_Vectors.Vector);



   type ItemCreateBatchRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
       Attributes : .Models.ItemAttributesRequest_Type;
     end record;


   package ItemCreateBatchRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemCreateBatchRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemCreateBatchRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemCreateBatchRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemCreateBatchRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemCreateBatchRecord_Type_Vectors.Vector);



   type ItemUpsertBatchRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
       Attributes : .Models.ItemAttributesRequest_Type;
     end record;


   package ItemUpsertBatchRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemUpsertBatchRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemUpsertBatchRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemUpsertBatchRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemUpsertBatchRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemUpsertBatchRecord_Type_Vectors.Vector);



   type CatalogsItemValidationIssues_Type is
     record
       Item_Number : Integer;
       Item_Id : Swagger.UString;
       Errors : .Models.CatalogsItemValidationErrors_Type;
       Warnings : .Models.CatalogsItemValidationWarnings_Type;
     end record;


   package CatalogsItemValidationIssues_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemValidationIssues_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemValidationIssues_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemValidationIssues_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemValidationIssues_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemValidationIssues_Type_Vectors.Vector);



   type ItemsIssuesList200Response_Type is
     record
       Items : .Models.CatalogsItemValidationIssues_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package ItemsIssuesList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemsIssuesList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemsIssuesList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemsIssuesList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemsIssuesList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemsIssuesList200Response_Type_Vectors.Vector);



   type Keyword_Type is
     record
       Bid : Swagger.Nullable_Integer;
       Match_Type : .Models.MatchTypeResponse_Type;
       Value : Swagger.UString;
       Archived : Swagger.Nullable_Boolean;
       Id : Swagger.Nullable_UString;
       Parent_Id : Swagger.Nullable_UString;
       Parent_Type : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
     end record;


   package Keyword_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Keyword_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Keyword_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Keyword_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Keyword_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Keyword_Type_Vectors.Vector);



   type KeywordError_Type is
     record
       Data : .Models.Keyword_Type;
       Error_Messages : Swagger.UString_Vectors.Vector;
     end record;


   package KeywordError_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordError_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordError_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordError_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordError_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordError_Type_Vectors.Vector);


   --  ------------------------------
   --  KeywordMetricsResponse
   --  ------------------------------
   type KeywordMetricsResponse_Type is
     record
       Keyword : Swagger.Nullable_UString;
       Metrics : .Models.KeywordMetrics_Type;
     end record;


   package KeywordMetricsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordMetricsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordMetricsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordMetricsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordMetricsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordMetricsResponse_Type_Vectors.Vector);



   type KeywordUpdateBody_Type is
     record
       Keywords : .Models.KeywordUpdate_Type_Vectors.Vector;
     end record;


   package KeywordUpdateBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordUpdateBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordUpdateBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordUpdateBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordUpdateBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordUpdateBody_Type_Vectors.Vector);



   type KeywordsCommon_Type is
     record
       Bid : Swagger.Nullable_Integer;
       Match_Type : .Models.MatchTypeResponse_Type;
       Value : Swagger.UString;
     end record;


   package KeywordsCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordsCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordsCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordsCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordsCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordsCommon_Type_Vectors.Vector);



   type KeywordsGet200Response_Type is
     record
       Items : .Models.Keyword_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package KeywordsGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordsGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordsGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordsGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordsGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordsGet200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  KeywordMetricsArrayResponse
   --  ------------------------------
   type KeywordsMetricsArrayResponse_Type is
     record
       Data : .Models.KeywordMetricsResponse_Type_Vectors.Vector;
     end record;


   package KeywordsMetricsArrayResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordsMetricsArrayResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordsMetricsArrayResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordsMetricsArrayResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordsMetricsArrayResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordsMetricsArrayResponse_Type_Vectors.Vector);



   type KeywordsRequest_Type is
     record
       Keywords : .Models.KeywordsCommon_Type_Vectors.Vector;
       Parent_Id : Swagger.UString;
     end record;


   package KeywordsRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordsRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordsRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordsRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordsRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordsRequest_Type_Vectors.Vector);



   type LeadFormResponse_Type is
     record
       Name : Swagger.Nullable_UString;
       Privacy_Policy_Link : Swagger.Nullable_UString;
       Has_Accepted_Terms : Swagger.Nullable_Boolean;
       Completion_Message : Swagger.Nullable_UString;
       Status : .Models.LeadFormStatus_Type;
       Disclosure_Language : Swagger.Nullable_UString;
       Questions : .Models.LeadFormQuestion_Type_Vectors.Vector;
       Policy_Links : .Models.LeadFormCommonPolicyLinksInner_Type_Vectors.Vector;
       Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
     end record;


   package LeadFormResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormResponse_Type_Vectors.Vector);



   type LeadFormArrayResponseItemsInner_Type is
     record
       Data : .Models.LeadFormResponse_Type;
       Exceptions : .Models.Model_Exception_Vectors.Vector;
     end record;


   package LeadFormArrayResponseItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormArrayResponseItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormArrayResponseItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormArrayResponseItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormArrayResponseItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormArrayResponseItemsInner_Type_Vectors.Vector);



   type LeadFormArrayResponse_Type is
     record
       Items : .Models.LeadFormArrayResponseItemsInner_Type_Vectors.Vector;
     end record;


   package LeadFormArrayResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormArrayResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormArrayResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormArrayResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormArrayResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormArrayResponse_Type_Vectors.Vector);



   type LeadFormsList200Response_Type is
     record
       Items : .Models.LeadFormResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package LeadFormsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormsList200Response_Type_Vectors.Vector);



   type LeadsExportResponseData_Type is
     record
       Export_Status : .Models.LeadsExportStatus_Type;
       Download_Url : Swagger.Nullable_UString;
     end record;


   package LeadsExportResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadsExportResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadsExportResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadsExportResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadsExportResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadsExportResponseData_Type_Vectors.Vector);


   --  ------------------------------
   --  Media upload details
   --  Media upload details
   --  ------------------------------
   type MediaUploadDetails_Type is
     record
       Media_Id : Swagger.Nullable_UString;
       Media_Type : .Models.MediaUploadType_Type;
       Status : .Models.MediaUploadStatus_Type;
     end record;


   package MediaUploadDetails_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaUploadDetails_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaUploadDetails_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaUploadDetails_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaUploadDetails_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaUploadDetails_Type_Vectors.Vector);



   type MediaList200Response_Type is
     record
       Items : .Models.MediaUploadDetails_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package MediaList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaList200Response_Type_Vectors.Vector);


   --  ------------------------------
   --  Media upload request
   --  Media upload request
   --  ------------------------------
   type MediaUploadRequest_Type is
     record
       Media_Type : .Models.MediaUploadType_Type;
     end record;


   package MediaUploadRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaUploadRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaUploadRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaUploadRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaUploadRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaUploadRequest_Type_Vectors.Vector);



   type MembersToDeleteBodyMembersInner_Type is
     record
       Member_Id : Swagger.UString;
       Business_Role : .Models.BusinessRoleForMembers_Type;
     end record;


   package MembersToDeleteBodyMembersInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MembersToDeleteBodyMembersInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MembersToDeleteBodyMembersInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MembersToDeleteBodyMembersInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MembersToDeleteBodyMembersInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MembersToDeleteBodyMembersInner_Type_Vectors.Vector);



   type MembersToDeleteBody_Type is
     record
       Members : .Models.MembersToDeleteBodyMembersInner_Type_Vectors.Vector;
     end record;


   package MembersToDeleteBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MembersToDeleteBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MembersToDeleteBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MembersToDeleteBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MembersToDeleteBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MembersToDeleteBody_Type_Vectors.Vector);



   type MetricsResponse_Type is
     record
       Data : Swagger.Object_Vectors.Vector;
     end record;


   package MetricsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MetricsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MetricsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MetricsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MetricsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MetricsResponse_Type_Vectors.Vector);



   type OptimizationGoalMetadataConversionTagV3GoalMetadata_Type is
     record
       Attribution_Windows : .Models.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows_Type;
       Conversion_Event : Swagger.Nullable_UString;
       Conversion_Tag_Id : Swagger.Nullable_UString;
       Cpa_Goal_Value_In_Micro_Currency : Swagger.Nullable_UString;
       Is_Roas_Optimized : Swagger.Nullable_Boolean;
       Learning_Mode_Type : Swagger.Nullable_UString;
     end record;


   package OptimizationGoalMetadataConversionTagV3GoalMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptimizationGoalMetadataConversionTagV3GoalMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptimizationGoalMetadataConversionTagV3GoalMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptimizationGoalMetadataConversionTagV3GoalMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptimizationGoalMetadataConversionTagV3GoalMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptimizationGoalMetadataConversionTagV3GoalMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLines
   --  Order Line
   --  ------------------------------
   type OrderLines_Type is
     record
       Id : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Purchase_Order_Id : Swagger.Nullable_UString;
       Start_Time : Swagger.Number;
       End_Time : Swagger.Number;
       Budget : Swagger.Number;
       Paid_Budget : Swagger.Number;
       Status : .Models.OrderLineStatus_Type;
       Name : Swagger.Nullable_UString;
       Paid_Type : .Models.OrderLinePaidType_Type;
     end record;


   package OrderLines_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLines_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLines_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLines_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLines_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLines_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLinesArrayResponse
   --  ------------------------------
   type OrderLinesArrayResponse_Type is
     record
       Items : .Models.OrderLines_Type_Vectors.Vector;
     end record;


   package OrderLinesArrayResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLinesArrayResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLinesArrayResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLinesArrayResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLinesArrayResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLinesArrayResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLine
   --  ------------------------------
   type OrderLine_Type is
     record
       Id : Swagger.Nullable_UString;
       P_Type : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Purchase_Order_Id : Swagger.Nullable_UString;
       Start_Time : Swagger.Number;
       End_Time : Swagger.Number;
       Budget : Swagger.Number;
       Paid_Budget : Swagger.Number;
       Status : .Models.OrderLineStatus_Type;
       Name : Swagger.Nullable_UString;
       Paid_Type : .Models.OrderLinePaidType_Type;
       Campaign_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package OrderLine_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLine_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLine_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLine_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLine_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLine_Type_Vectors.Vector);



   type OrderLinesList200Response_Type is
     record
       Items : .Models.OrderLine_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package OrderLinesList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLinesList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLinesList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLinesList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLinesList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLinesList200Response_Type_Vectors.Vector);



   type PageVisitConversionTagsGet200Response_Type is
     record
       Items : .Models.ConversionEventResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package PageVisitConversionTagsGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PageVisitConversionTagsGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PageVisitConversionTagsGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PageVisitConversionTagsGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PageVisitConversionTagsGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PageVisitConversionTagsGet200Response_Type_Vectors.Vector);



   type Paginated_Type is
     record
       Items : Swagger.Object_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package Paginated_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.Paginated_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.Paginated_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Paginated_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.Paginated_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out Paginated_Type_Vectors.Vector);



   type PinAnalyticsMetricsResponseDailyMetricsInner_Type is
     record
       Data_Status : .Models.DataStatus_Type;
       Date : Swagger.Nullable_UString;
       Metrics : Swagger.Number_Map;
     end record;


   package PinAnalyticsMetricsResponseDailyMetricsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinAnalyticsMetricsResponseDailyMetricsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinAnalyticsMetricsResponseDailyMetricsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinAnalyticsMetricsResponseDailyMetricsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinAnalyticsMetricsResponseDailyMetricsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinAnalyticsMetricsResponseDailyMetricsInner_Type_Vectors.Vector);



   type PinAnalyticsMetricsResponse_Type is
     record
       Lifetime_Metrics : Swagger.Integer_Map;
       Daily_Metrics : .Models.PinAnalyticsMetricsResponseDailyMetricsInner_Type_Vectors.Vector;
       Summary_Metrics : Swagger.Number_Map;
     end record;


   package PinAnalyticsMetricsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinAnalyticsMetricsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinAnalyticsMetricsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinAnalyticsMetricsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinAnalyticsMetricsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinAnalyticsMetricsResponse_Type_Vectors.Vector);



   type PinMediaMetadata_Type is
     record
       Item_Type : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Images : .Models.ImageMetadataImages_Type;
       Cover_Image_Url : Swagger.Nullable_UString;
       Video_Url : Swagger.Nullable_UString;
       Duration : Swagger.Number;
       Height : Swagger.Nullable_Integer;
       Width : Swagger.Nullable_Integer;
     end record;


   package PinMediaMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  Images Base64
   --  Multiple Base64_encoded images media source
   --  ------------------------------
   type PinMediaSourceImagesBase64_Type is
     record
       Source_Type : Swagger.Nullable_UString;
       Items : .Models.PinMediaSourceImagesBase64ItemsInner_Type_Vectors.Vector;
       Index : Swagger.Nullable_Integer;
     end record;


   package PinMediaSourceImagesBase64_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceImagesBase64_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceImagesBase64_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceImagesBase64_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceImagesBase64_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceImagesBase64_Type_Vectors.Vector);


   --  ------------------------------
   --  Images urls
   --  Multiple images urls_based media source
   --  ------------------------------
   type PinMediaSourceImagesURL_Type is
     record
       Source_Type : Swagger.Nullable_UString;
       Items : .Models.PinMediaSourceImagesURLItemsInner_Type_Vectors.Vector;
       Index : Swagger.Nullable_Integer;
     end record;


   package PinMediaSourceImagesURL_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSourceImagesURL_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSourceImagesURL_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSourceImagesURL_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSourceImagesURL_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSourceImagesURL_Type_Vectors.Vector);


   --  ------------------------------
   --  Pin media source
   --  Pin media source.
   --  ------------------------------
   type PinMediaSource_Type is
     record
       Source_Type : Swagger.UString;
       Content_Type : Swagger.UString;
       Data : Swagger.UString;
       Is_Standard : Swagger.Nullable_Boolean;
       Url : Swagger.UString;
       Cover_Image_Url : Swagger.Nullable_UString;
       Cover_Image_Content_Type : Swagger.Nullable_UString;
       Cover_Image_Data : Swagger.Nullable_UString;
       Media_Id : Swagger.UString;
       Items : .Models.PinMediaSourceImagesURLItemsInner_Type_Vectors.Vector;
       Index : Swagger.Nullable_Integer;
       Is_Affiliate_Link : Swagger.Nullable_Boolean;
     end record;


   package PinMediaSource_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaSource_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaSource_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaSource_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaSource_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaSource_Type_Vectors.Vector);


   --  ------------------------------
   --  Video and image
   --  Pin with a mix of images and videos.
   --  ------------------------------
   type PinMediaWithImageAndVideo_Type is
     record
       Media_Type : Swagger.Nullable_UString;
       Items : .Models.PinMediaMetadata_Type_Vectors.Vector;
     end record;


   package PinMediaWithImageAndVideo_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaWithImageAndVideo_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaWithImageAndVideo_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaWithImageAndVideo_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaWithImageAndVideo_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaWithImageAndVideo_Type_Vectors.Vector);


   --  ------------------------------
   --  image
   --  Pin with image.
   --  ------------------------------
   type PinMediaWithImage_Type is
     record
       Media_Type : Swagger.Nullable_UString;
       Images : .Models.PinMediaWithImageAllOfImages_Type;
     end record;


   package PinMediaWithImage_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaWithImage_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaWithImage_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaWithImage_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaWithImage_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaWithImage_Type_Vectors.Vector);


   --  ------------------------------
   --  Images
   --  Pin with multiple images.
   --  ------------------------------
   type PinMediaWithImages_Type is
     record
       Media_Type : Swagger.Nullable_UString;
       Items : .Models.ImageMetadata_Type_Vectors.Vector;
     end record;


   package PinMediaWithImages_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaWithImages_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaWithImages_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaWithImages_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaWithImages_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaWithImages_Type_Vectors.Vector);


   --  ------------------------------
   --  video
   --  Pin with video.
   --  ------------------------------
   type PinMediaWithVideo_Type is
     record
       Media_Type : Swagger.Nullable_UString;
       Images : .Models.PinMediaWithImageAllOfImages_Type;
       Cover_Image_Url : Swagger.Nullable_UString;
       Video_Url : Swagger.Nullable_UString;
       Duration : Swagger.Number;
       Height : Swagger.Nullable_Integer;
       Width : Swagger.Nullable_Integer;
     end record;


   package PinMediaWithVideo_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaWithVideo_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaWithVideo_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaWithVideo_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaWithVideo_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaWithVideo_Type_Vectors.Vector);


   --  ------------------------------
   --  Videos
   --  Pin with multiple videos.
   --  ------------------------------
   type PinMediaWithVideos_Type is
     record
       Media_Type : Swagger.Nullable_UString;
       Items : .Models.VideoMetadata_Type_Vectors.Vector;
     end record;


   package PinMediaWithVideos_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinMediaWithVideos_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinMediaWithVideos_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinMediaWithVideos_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinMediaWithVideos_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinMediaWithVideos_Type_Vectors.Vector);


   --  ------------------------------
   --  PinUpdate
   --  Pin fields for updates
   --  ------------------------------
   type PinUpdate_Type is
     record
       Alt_Text : Swagger.Nullable_UString;
       Board_Id : Swagger.Nullable_UString;
       Board_Section_Id : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Carousel_Slots : .Models.PinUpdateCarouselSlotsInner_Type_Vectors.Vector;
       Note : Swagger.Nullable_UString;
     end record;


   package PinUpdate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinUpdate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinUpdate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinUpdate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinUpdate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinUpdate_Type_Vectors.Vector);



   type PinsList200Response_Type is
     record
       Items : .Models.Pin_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package PinsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinsList200Response_Type_Vectors.Vector);



   type PriceFilter_Type is
     record
       PRICE : .Models.CatalogsProductGroupPricingCurrencyCriteria_Type;
     end record;


   package PriceFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PriceFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PriceFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PriceFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PriceFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PriceFilter_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotionCreateRequestElement
   --  ------------------------------
   type ProductGroupPromotionCreateRequestElement_Type is
     record
       Id : Swagger.Nullable_UString;
       Ad_Group_Id : Swagger.Nullable_UString;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Included : Swagger.Nullable_Boolean;
       Definition : Swagger.Nullable_UString;
       Relative_Definition : Swagger.Nullable_UString;
       Parent_Id : Swagger.Nullable_UString;
       Slideshow_Collections_Title : Swagger.Nullable_UString;
       Slideshow_Collections_Description : Swagger.Nullable_UString;
       Is_Mdl : Swagger.Nullable_Boolean;
       Status : .Models.EntityStatus_Type;
       Tracking_Url : Swagger.Nullable_UString;
       Catalog_Product_Group_Id : Swagger.Nullable_UString;
       Catalog_Product_Group_Name : Swagger.Nullable_UString;
       Collections_Hero_Pin_Id : Swagger.Nullable_UString;
       Collections_Hero_Destination_Url : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
       Creative_Type : .Models.CreativeType_Type;
     end record;


   package ProductGroupPromotionCreateRequestElement_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionCreateRequestElement_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionCreateRequestElement_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionCreateRequestElement_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionCreateRequestElement_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionCreateRequestElement_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotionCreateRequest
   --  ------------------------------
   type ProductGroupPromotionCreateRequest_Type is
     record
       Ad_Group_Id : Swagger.UString;
       Product_Group_Promotion : .Models.ProductGroupPromotionCreateRequestElement_Type_Vectors.Vector;
     end record;


   package ProductGroupPromotionCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotionResponseElement
   --  ------------------------------
   type ProductGroupPromotionResponseElement_Type is
     record
       Id : Swagger.Nullable_UString;
       Ad_Group_Id : Swagger.Nullable_UString;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Included : Swagger.Nullable_Boolean;
       Definition : Swagger.Nullable_UString;
       Relative_Definition : Swagger.Nullable_UString;
       Parent_Id : Swagger.Nullable_UString;
       Slideshow_Collections_Title : Swagger.Nullable_UString;
       Slideshow_Collections_Description : Swagger.Nullable_UString;
       Is_Mdl : Swagger.Nullable_Boolean;
       Status : .Models.EntityStatus_Type;
       Tracking_Url : Swagger.Nullable_UString;
       Catalog_Product_Group_Id : Swagger.Nullable_UString;
       Catalog_Product_Group_Name : Swagger.Nullable_UString;
       Collections_Hero_Pin_Id : Swagger.Nullable_UString;
       Collections_Hero_Destination_Url : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
       Creative_Type : .Models.CreativeType_Type;
     end record;


   package ProductGroupPromotionResponseElement_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionResponseElement_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionResponseElement_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionResponseElement_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionResponseElement_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionResponseElement_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotionResponseItem
   --  ------------------------------
   type ProductGroupPromotionResponseItem_Type is
     record
       Data : .Models.ProductGroupPromotionResponseElement_Type;
       Exceptions : .Models.Model_Exception_Vectors.Vector;
     end record;


   package ProductGroupPromotionResponseItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionResponseItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionResponseItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionResponseItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionResponseItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionResponseItem_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotionResponse
   --  ------------------------------
   type ProductGroupPromotionResponse_Type is
     record
       Items : .Models.ProductGroupPromotionResponseItem_Type_Vectors.Vector;
     end record;


   package ProductGroupPromotionResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotion
   --  ------------------------------
   type ProductGroupPromotion_Type is
     record
       Id : Swagger.Nullable_UString;
       Ad_Group_Id : Swagger.Nullable_UString;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Included : Swagger.Nullable_Boolean;
       Definition : Swagger.Nullable_UString;
       Relative_Definition : Swagger.Nullable_UString;
       Parent_Id : Swagger.Nullable_UString;
       Slideshow_Collections_Title : Swagger.Nullable_UString;
       Slideshow_Collections_Description : Swagger.Nullable_UString;
       Is_Mdl : Swagger.Nullable_Boolean;
       Status : .Models.EntityStatus_Type;
       Tracking_Url : Swagger.Nullable_UString;
       Catalog_Product_Group_Id : Swagger.Nullable_UString;
       Catalog_Product_Group_Name : Swagger.Nullable_UString;
       Collections_Hero_Pin_Id : Swagger.Nullable_UString;
       Collections_Hero_Destination_Url : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
     end record;


   package ProductGroupPromotion_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotion_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotion_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotion_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotion_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotion_Type_Vectors.Vector);


   --  ------------------------------
   --  ProductGroupPromotionUpdateRequest
   --  ------------------------------
   type ProductGroupPromotionUpdateRequest_Type is
     record
       Ad_Group_Id : Swagger.UString;
       Product_Group_Promotion : .Models.ProductGroupPromotion_Type_Vectors.Vector;
     end record;


   package ProductGroupPromotionUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionUpdateRequest_Type_Vectors.Vector);



   type ProductGroupPromotionsList200Response_Type is
     record
       Items : .Models.ProductGroupPromotionResponseItem_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package ProductGroupPromotionsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ProductGroupPromotionsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ProductGroupPromotionsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ProductGroupPromotionsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ProductGroupPromotionsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ProductGroupPromotionsList200Response_Type_Vectors.Vector);



   type QuizPinQuestion_Type is
     record
       Question_Id : Swagger.Number;
       Question_Text : Swagger.Nullable_UString;
       Options : .Models.QuizPinOption_Type_Vectors.Vector;
     end record;


   package QuizPinQuestion_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.QuizPinQuestion_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QuizPinQuestion_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QuizPinQuestion_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QuizPinQuestion_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QuizPinQuestion_Type_Vectors.Vector);



   type RelatedTerms_Type is
     record
       Id : Swagger.Nullable_UString;
       Related_Term_Count : Swagger.Nullable_Integer;
       Related_Terms_List : .Models.RelatedTermsRelatedTermsListInner_Type_Vectors.Vector;
     end record;


   package RelatedTerms_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RelatedTerms_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RelatedTerms_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RelatedTerms_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RelatedTerms_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RelatedTerms_Type_Vectors.Vector);



   type ReportsStats200Response_Type is
     record
       Items : .Models.CatalogsReportStats_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package ReportsStats200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ReportsStats200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ReportsStats200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ReportsStats200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ReportsStats200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ReportsStats200Response_Type_Vectors.Vector);



   type RespondToInvitesResponseArrayItemsInner_Type is
     record
       P_Exception : .Models.InviteExceptionResponse_Type;
       Invite : .Models.BaseInviteDataResponse_Type;
     end record;


   package RespondToInvitesResponseArrayItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RespondToInvitesResponseArrayItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RespondToInvitesResponseArrayItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RespondToInvitesResponseArrayItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RespondToInvitesResponseArrayItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RespondToInvitesResponseArrayItemsInner_Type_Vectors.Vector);



   type RespondToInvitesResponseArray_Type is
     record
       Items : .Models.RespondToInvitesResponseArrayItemsInner_Type_Vectors.Vector;
     end record;


   package RespondToInvitesResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.RespondToInvitesResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.RespondToInvitesResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in RespondToInvitesResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.RespondToInvitesResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out RespondToInvitesResponseArray_Type_Vectors.Vector);



   type SSIOAccountItem_Type is
     record
       Id : Swagger.Nullable_UString;
       Io_Terms_Id : Swagger.Nullable_UString;
       Io_Terms : Swagger.Nullable_UString;
       Us_Terms_Id : Swagger.Nullable_UString;
       Us_Terms : Swagger.Nullable_UString;
       Row_Terms_Id : Swagger.Nullable_UString;
       Row_Terms : Swagger.Nullable_UString;
       Io_Type : Swagger.Nullable_UString;
       Addresses : .Models.SSIOAccountAddress_Type_Vectors.Vector;
     end record;


   package SSIOAccountItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOAccountItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOAccountItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOAccountItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOAccountItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOAccountItem_Type_Vectors.Vector);



   type SSIOCreateInsertionOrderRequest_Type is
     record
       Start_Date : Swagger.UString;
       End_Date : Swagger.Nullable_UString;
       Po_Number : Swagger.UString;
       Budget_Amount : Swagger.Number;
       Billing_Contact_Firstname : Swagger.UString;
       Billing_Contact_Lastname : Swagger.UString;
       Billing_Contact_Email : Swagger.UString;
       Media_Contact_Firstname : Swagger.UString;
       Media_Contact_Lastname : Swagger.UString;
       Media_Contact_Email : Swagger.UString;
       Agency_Link : Swagger.Nullable_UString;
       User_Email : Swagger.Nullable_UString;
       Accepted_Terms_Time : Swagger.Nullable_Integer;
       Pmp_Id : Swagger.UString;
       Order_Name : Swagger.UString;
       Order_Line_Type : Swagger.UString;
       Accepted_Terms_Id : Swagger.UString;
       Billto_Company_Id : Swagger.UString;
       Billto_Business_Address_Id : Swagger.UString;
       Billto_Billing_Address_Id : Swagger.UString;
       Estimated_Monthly_Spend : Swagger.Number;
       Currency_Info : .Models.Currency_Type;
     end record;


   package SSIOCreateInsertionOrderRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOCreateInsertionOrderRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOCreateInsertionOrderRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOCreateInsertionOrderRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOCreateInsertionOrderRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOCreateInsertionOrderRequest_Type_Vectors.Vector);



   type SSIOOrderLine_Type is
     record
       Salesforce_Order_Line_Id : Swagger.Nullable_UString;
       Ads_Manager_Order_Line_Id : Swagger.Nullable_UString;
       Pin_Order_Id : Swagger.Nullable_UString;
       Last_Modified_Date_Time : Swagger.Nullable_UString;
       Start_Date : Swagger.Nullable_Date;
       End_Date : Swagger.Nullable_Date;
       Bill_To_Company_Name : Swagger.Nullable_UString;
       Billing_Contact_Firstname : Swagger.Nullable_UString;
       Billing_Contact_Lastname : Swagger.Nullable_UString;
       Billing_Contact_Email : Swagger.Nullable_UString;
       Media_Contact_Email : Swagger.Nullable_UString;
       Media_Contact_Firstname : Swagger.Nullable_UString;
       Media_Contact_Lastname : Swagger.Nullable_UString;
       Currency_Info : .Models.Currency_Type;
       Agency_Link : Swagger.Nullable_UString;
       Po_Number : Swagger.Nullable_UString;
       Order_Name : Swagger.Nullable_UString;
       Pmp_Name : Swagger.Nullable_UString;
       Accepted_Terms_Id : Swagger.Nullable_UString;
       Accepted_Terms_Time : Swagger.Nullable_UString;
       Budget_Amount : Swagger.Number;
       Estimated_Monthly_Spend : Swagger.Number;
     end record;


   package SSIOOrderLine_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOOrderLine_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOOrderLine_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOOrderLine_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOOrderLine_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOOrderLine_Type_Vectors.Vector);


   --  ------------------------------
   --  SummaryPin
   --  Summarized pin information
   --  ------------------------------
   type SummaryPin_Type is
     record
       Media : .Models.PinMedia_Type;
       Alt_Text : Swagger.Nullable_UString;
       Link : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
     end record;


   package SummaryPin_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SummaryPin_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SummaryPin_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SummaryPin_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SummaryPin_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SummaryPin_Type_Vectors.Vector);



   type SearchPartnerPins200Response_Type is
     record
       Items : .Models.SummaryPin_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package SearchPartnerPins200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SearchPartnerPins200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SearchPartnerPins200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SearchPartnerPins200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SearchPartnerPins200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SearchPartnerPins200Response_Type_Vectors.Vector);



   type SharedAudienceCommon_Type is
     record
       Audience_Id : Swagger.Nullable_UString;
       Operation_Type : .Models.OperationType_Type;
     end record;


   package SharedAudienceCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SharedAudienceCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SharedAudienceCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SharedAudienceCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SharedAudienceCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SharedAudienceCommon_Type_Vectors.Vector);



   type SharedAudienceResponseCommon_Type is
     record
       Audience_Id : Swagger.Nullable_UString;
       Permissions : .Models.Role_Type_Vectors.Vector;
     end record;


   package SharedAudienceResponseCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SharedAudienceResponseCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SharedAudienceResponseCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SharedAudienceResponseCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SharedAudienceResponseCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SharedAudienceResponseCommon_Type_Vectors.Vector);



   type SharedAudienceResponse_Type is
     record
       Audience_Id : Swagger.Nullable_UString;
       Permissions : .Models.Role_Type_Vectors.Vector;
       Recipient_Account_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package SharedAudienceResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SharedAudienceResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SharedAudienceResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SharedAudienceResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SharedAudienceResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SharedAudienceResponse_Type_Vectors.Vector);



   type SharedAudience_Type is
     record
       Audience_Id : Swagger.UString;
       Operation_Type : .Models.OperationType_Type;
       Recipient_Account_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package SharedAudience_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SharedAudience_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SharedAudience_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SharedAudience_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SharedAudience_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SharedAudience_Type_Vectors.Vector);



   type SsioInsertionOrdersStatusGetByAdAccount200Response_Type is
     record
       Items : .Models.SSIOInsertionOrderStatus_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package SsioInsertionOrdersStatusGetByAdAccount200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SsioInsertionOrdersStatusGetByAdAccount200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SsioInsertionOrdersStatusGetByAdAccount200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SsioInsertionOrdersStatusGetByAdAccount200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SsioInsertionOrdersStatusGetByAdAccount200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SsioInsertionOrdersStatusGetByAdAccount200Response_Type_Vectors.Vector);



   type SsioOrderLinesGetByAdAccount200Response_Type is
     record
       Items : .Models.SSIOOrderLine_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package SsioOrderLinesGetByAdAccount200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SsioOrderLinesGetByAdAccount200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SsioOrderLinesGetByAdAccount200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SsioOrderLinesGetByAdAccount200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SsioOrderLinesGetByAdAccount200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SsioOrderLinesGetByAdAccount200Response_Type_Vectors.Vector);



   type TargetingSpec_Type is
     record
       AGE_BUCKET : Swagger.UString_Vectors.Vector;
       APPTYPE : Swagger.UString_Vectors.Vector;
       AUDIENCE_EXCLUDE : Swagger.UString_Vectors.Vector;
       AUDIENCE_INCLUDE : Swagger.UString_Vectors.Vector;
       GENDER : Swagger.UString_Vectors.Vector;
       GEO : Swagger.UString_Vectors.Vector;
       INTEREST : Swagger.UString_Vectors.Vector;
       LOCALE : Swagger.UString_Vectors.Vector;
       LOCATION : Swagger.UString_Vectors.Vector;
       SHOPPING_RETARGETING : .Models.TargetingSpecSHOPPINGRETARGETING_Type_Vectors.Vector;
       TARGETING_STRATEGY : Swagger.UString_Vectors.Vector;
     end record;


   package TargetingSpec_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingSpec_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingSpec_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingSpec_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingSpec_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingSpec_Type_Vectors.Vector);



   type TargetingTemplateAudienceSizing_Type is
     record
       Reach_Estimate : .Models.TargetingTemplateAudienceSizingReachEstimate_Type;
     end record;


   package TargetingTemplateAudienceSizing_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateAudienceSizing_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateAudienceSizing_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateAudienceSizing_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateAudienceSizing_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateAudienceSizing_Type_Vectors.Vector);



   type TargetingTemplateKeyword_Type is
     record
       Match_Type : .Models.MatchType_Type;
       Value : Swagger.Nullable_UString;
     end record;


   package TargetingTemplateKeyword_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateKeyword_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateKeyword_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateKeyword_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateKeyword_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateKeyword_Type_Vectors.Vector);



   type TargetingTemplateResponseData_Type is
     record
       Name : Swagger.Nullable_UString;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Targeting_Attributes : .Models.TargetingSpec_Type;
       Placement_Group : .Models.PlacementGroupType_Type;
       Keywords : .Models.TargetingTemplateKeyword_Type_Vectors.Vector;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
       Ad_Account_Id : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Sizing : .Models.TargetingTemplateAudienceSizing_Type;
     end record;


   package TargetingTemplateResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateResponseData_Type_Vectors.Vector);



   type TargetingTemplateList200Response_Type is
     record
       Items : .Models.TargetingTemplateResponseData_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package TargetingTemplateList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateList200Response_Type_Vectors.Vector);



   type TargetingTypeFilter_Type is
     record
       Targeting_Types : .Models.AdsAnalyticsTargetingType_Type_Vectors.Vector;
     end record;


   package TargetingTypeFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTypeFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTypeFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTypeFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTypeFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTypeFilter_Type_Vectors.Vector);



   type TemplateResponse_Type is
     record
       Id : Swagger.Nullable_UString;
       Ad_Account_Id : Swagger.Nullable_UString;
       Ad_Account_Ids : Swagger.UString_Vectors.Vector;
       User_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Report_Start_Relative_Days_In_Past : Swagger.Number;
       Report_End_Relative_Days_In_Past : Swagger.Number;
       Date_Range : .Models.TemplateResponseDateRange_Type;
       Report_Level : .Models.MetricsReportingLevel_Type;
       Report_Format : .Models.DataOutputFormat_Type;
       Columns : Swagger.UString_Vectors.Vector;
       Granularity : .Models.Granularity_Type;
       View_Window_Days : Swagger.Number;
       Click_Window_Days : Swagger.Number;
       Engagement_Window_Days : Swagger.Number;
       Conversion_Report_Time_Type : Swagger.Nullable_UString;
       Filters_Json : Swagger.Nullable_UString;
       Is_Owned_By_User : Swagger.Nullable_Boolean;
       Is_Scheduled : Swagger.Nullable_Boolean;
       Creation_Source : Swagger.Nullable_UString;
       Is_Deleted : Swagger.Nullable_Boolean;
       Updated_Time : Swagger.Number;
       Custom_Column_Ids : Swagger.UString_Vectors.Vector;
       P_Type : Swagger.Nullable_UString;
       Ingestion_Sources : Swagger.UString_Vectors.Vector;
     end record;


   package TemplateResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TemplateResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TemplateResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TemplateResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TemplateResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TemplateResponse_Type_Vectors.Vector);



   type TemplatesList200Response_Type is
     record
       Items : .Models.TemplateResponse_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package TemplatesList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TemplatesList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TemplatesList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TemplatesList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TemplatesList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TemplatesList200Response_Type_Vectors.Vector);



   type TopPinsAnalyticsResponsePinsInner_Type is
     record
       Metrics : Swagger.Number_Map;
       Data_Status : .Models.DataStatus_Type;
       Pin_Id : Swagger.Nullable_UString;
     end record;


   package TopPinsAnalyticsResponsePinsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TopPinsAnalyticsResponsePinsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TopPinsAnalyticsResponsePinsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TopPinsAnalyticsResponsePinsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TopPinsAnalyticsResponsePinsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TopPinsAnalyticsResponsePinsInner_Type_Vectors.Vector);



   type TopVideoPinsAnalyticsResponsePinsInner_Type is
     record
       Metrics : Swagger.Number_Map;
       Data_Status : .Models.DataStatus_Type;
       Pin_Id : Swagger.Nullable_UString;
     end record;


   package TopVideoPinsAnalyticsResponsePinsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TopVideoPinsAnalyticsResponsePinsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TopVideoPinsAnalyticsResponsePinsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TopVideoPinsAnalyticsResponsePinsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TopVideoPinsAnalyticsResponsePinsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TopVideoPinsAnalyticsResponsePinsInner_Type_Vectors.Vector);



   type TrendingKeywordsResponseTrendsInner_Type is
     record
       Keyword : Swagger.Nullable_UString;
       Pct_Growth_Wow : Swagger.Nullable_Integer;
       Pct_Growth_Mom : Swagger.Nullable_Integer;
       Pct_Growth_Yoy : Swagger.Nullable_Integer;
       Time_Series : .Models.TrendingKeywordsResponseTrendsInnerTimeSeries_Type;
     end record;


   package TrendingKeywordsResponseTrendsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TrendingKeywordsResponseTrendsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TrendingKeywordsResponseTrendsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TrendingKeywordsResponseTrendsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TrendingKeywordsResponseTrendsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TrendingKeywordsResponseTrendsInner_Type_Vectors.Vector);



   type TrendingKeywordsResponse_Type is
     record
       Trends : .Models.TrendingKeywordsResponseTrendsInner_Type_Vectors.Vector;
     end record;


   package TrendingKeywordsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TrendingKeywordsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TrendingKeywordsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TrendingKeywordsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TrendingKeywordsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TrendingKeywordsResponse_Type_Vectors.Vector);



   type UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type is
     record
       Asset_Group_Id : Swagger.UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Asset_Group_Types : .Models.AssetGroupType_Type_Vectors.Vector;
       Assets_To_Add : Swagger.UString_Vectors.Vector;
       Assets_To_Remove : Swagger.UString_Vectors.Vector;
     end record;


   package UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type_Vectors.Vector);



   type UpdateAssetGroupBody_Type is
     record
       Asset_Groups_To_Update : .Models.UpdateAssetGroupBodyAssetGroupsToUpdateInner_Type_Vectors.Vector;
     end record;


   package UpdateAssetGroupBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateAssetGroupBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateAssetGroupBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateAssetGroupBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateAssetGroupBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateAssetGroupBody_Type_Vectors.Vector);



   type UpdateInvitesResultsResponseArrayItemsInner_Type is
     record
       P_Exception : .Models.InviteExceptionResponse_Type;
       Invite : .Models.InviteBusinessRoleBinding_Type;
     end record;


   package UpdateInvitesResultsResponseArrayItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateInvitesResultsResponseArrayItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateInvitesResultsResponseArrayItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateInvitesResultsResponseArrayItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector);



   type UpdateInvitesResultsResponseArray_Type is
     record
       Items : .Models.UpdateInvitesResultsResponseArrayItemsInner_Type_Vectors.Vector;
     end record;


   package UpdateInvitesResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateInvitesResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateInvitesResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateInvitesResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateInvitesResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateInvitesResultsResponseArray_Type_Vectors.Vector);



   type UpdateMemberAssetAccessBodyAccessesInner_Type is
     record
       Asset_Id : Swagger.UString;
       Member_Id : Swagger.UString;
       Permissions : .Models.Permissions_Type_Vectors.Vector;
     end record;


   package UpdateMemberAssetAccessBodyAccessesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberAssetAccessBodyAccessesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberAssetAccessBodyAccessesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberAssetAccessBodyAccessesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberAssetAccessBodyAccessesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberAssetAccessBodyAccessesInner_Type_Vectors.Vector);



   type UpdateMemberAssetAccessBody_Type is
     record
       Accesses : .Models.UpdateMemberAssetAccessBodyAccessesInner_Type_Vectors.Vector;
     end record;


   package UpdateMemberAssetAccessBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberAssetAccessBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberAssetAccessBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberAssetAccessBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberAssetAccessBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberAssetAccessBody_Type_Vectors.Vector);



   type UpdateMemberAssetsResultsResponseArrayItemsInner_Type is
     record
       Response : .Models.UsersForIndividualAssetResponse_Type;
     end record;


   package UpdateMemberAssetsResultsResponseArrayItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberAssetsResultsResponseArrayItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberAssetsResultsResponseArrayItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberAssetsResultsResponseArrayItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberAssetsResultsResponseArrayItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberAssetsResultsResponseArrayItemsInner_Type_Vectors.Vector);



   type UpdateMemberAssetsResultsResponseArray_Type is
     record
       Items : .Models.UpdateMemberAssetsResultsResponseArrayItemsInner_Type_Vectors.Vector;
     end record;


   package UpdateMemberAssetsResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberAssetsResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberAssetsResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberAssetsResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberAssetsResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberAssetsResultsResponseArray_Type_Vectors.Vector);



   type UpdateMemberBusinessRoleBody_Type is
     record
       Business_Role : .Models.BusinessRoleForMembers_Type;
       Member_Id : Swagger.UString;
     end record;


   package UpdateMemberBusinessRoleBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberBusinessRoleBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberBusinessRoleBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberBusinessRoleBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberBusinessRoleBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberBusinessRoleBody_Type_Vectors.Vector);



   type UpdateMemberResultsResponseArray_Type is
     record
       Items : .Models.UpdateMemberResult_Type_Vectors.Vector;
     end record;


   package UpdateMemberResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateMemberResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateMemberResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateMemberResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateMemberResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateMemberResultsResponseArray_Type_Vectors.Vector);



   type UpdatePartnerAssetAccessBodyAccessesInner_Type is
     record
       Partner_Id : Swagger.UString;
       Asset_Id : Swagger.UString;
       Permissions : .Models.Permissions_Type_Vectors.Vector;
     end record;


   package UpdatePartnerAssetAccessBodyAccessesInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatePartnerAssetAccessBodyAccessesInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatePartnerAssetAccessBodyAccessesInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatePartnerAssetAccessBodyAccessesInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatePartnerAssetAccessBodyAccessesInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatePartnerAssetAccessBodyAccessesInner_Type_Vectors.Vector);



   type UpdatePartnerAssetAccessBody_Type is
     record
       Accesses : .Models.UpdatePartnerAssetAccessBodyAccessesInner_Type_Vectors.Vector;
     end record;


   package UpdatePartnerAssetAccessBody_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatePartnerAssetAccessBody_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatePartnerAssetAccessBody_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatePartnerAssetAccessBody_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatePartnerAssetAccessBody_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatePartnerAssetAccessBody_Type_Vectors.Vector);



   type UpdatePartnerAssetsResultsResponseArray_Type is
     record
       Items : .Models.UpdatePartnerAssetsResult_Type_Vectors.Vector;
     end record;


   package UpdatePartnerAssetsResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatePartnerAssetsResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatePartnerAssetsResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatePartnerAssetsResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatePartnerAssetsResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatePartnerAssetsResultsResponseArray_Type_Vectors.Vector);



   type UpdatePartnerResultsResponseArrayItemsInner_Type is
     record
       P_Exception : .Models.BusinessAccessError_Type;
       Member_Or_Partner_Id : Swagger.Nullable_UString;
     end record;


   package UpdatePartnerResultsResponseArrayItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatePartnerResultsResponseArrayItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatePartnerResultsResponseArrayItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatePartnerResultsResponseArrayItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatePartnerResultsResponseArrayItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatePartnerResultsResponseArrayItemsInner_Type_Vectors.Vector);



   type UpdatePartnerResultsResponseArray_Type is
     record
       Items : .Models.UpdatePartnerResultsResponseArrayItemsInner_Type_Vectors.Vector;
     end record;


   package UpdatePartnerResultsResponseArray_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdatePartnerResultsResponseArray_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdatePartnerResultsResponseArray_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdatePartnerResultsResponseArray_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdatePartnerResultsResponseArray_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdatePartnerResultsResponseArray_Type_Vectors.Vector);



   type UserAccountFollowedInterests200Response_Type is
     record
       Items : .Models.Interest_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package UserAccountFollowedInterests200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserAccountFollowedInterests200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserAccountFollowedInterests200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserAccountFollowedInterests200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserAccountFollowedInterests200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserAccountFollowedInterests200Response_Type_Vectors.Vector);



   type UserFollowingGet200Response_Type is
     record
       Items : .Models.UserSummary_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package UserFollowingGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserFollowingGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserFollowingGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserFollowingGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserFollowingGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserFollowingGet200Response_Type_Vectors.Vector);



   type BusinessAssetMembersGet200Response_Type is
     record
       Items : .Models.UserSingleAssetBinding_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package BusinessAssetMembersGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessAssetMembersGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessAssetMembersGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessAssetMembersGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessAssetMembersGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessAssetMembersGet200Response_Type_Vectors.Vector);



   type UserWebsitesGet200Response_Type is
     record
       Items : .Models.UserWebsiteSummary_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package UserWebsitesGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UserWebsitesGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UserWebsitesGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UserWebsitesGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UserWebsitesGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UserWebsitesGet200Response_Type_Vectors.Vector);



   type AdArrayResponseElement_Type is
     record
       Data : .Models.AdResponse_Type;
       Exceptions : .Models.Model_Exception;
     end record;


   package AdArrayResponseElement_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdArrayResponseElement_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdArrayResponseElement_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdArrayResponseElement_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdArrayResponseElement_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdArrayResponseElement_Type_Vectors.Vector);


   --  ------------------------------
   --  AdArrayResponse
   --  ------------------------------
   type AdArrayResponse_Type is
     record
       Items : .Models.AdArrayResponseElement_Type_Vectors.Vector;
     end record;


   package AdArrayResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdArrayResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdArrayResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdArrayResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdArrayResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdArrayResponse_Type_Vectors.Vector);



   type AdsAnalyticsMetricsFilter_Type is
     record
       Field : .Models.AdsAnalyticsFilterColumn_Type;
       Operator : .Models.AdsAnalyticsFilterOperator_Type;
       Values : Swagger.Number_Vectors.Vector;
     end record;


   package AdsAnalyticsMetricsFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsMetricsFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsMetricsFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsMetricsFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsMetricsFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsMetricsFilter_Type_Vectors.Vector);



   type AdvancedAuctionBidOptions_Type is
     record
       Bid_In_Micro_Currency : Swagger.Nullable_Long;
       App_Type_Multipliers : .Models.AppTypeMultipliers_Type;
       Placement_Multipliers : .Models.PlacementMultipliers_Type;
     end record;


   package AdvancedAuctionBidOptions_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionBidOptions_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionBidOptions_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionBidOptions_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionBidOptions_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionBidOptions_Type_Vectors.Vector);



   type AdvancedAuctionItemsSubmitDeleteRecord_Type is
     record
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
     end record;


   package AdvancedAuctionItemsSubmitDeleteRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItemsSubmitDeleteRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItemsSubmitDeleteRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItemsSubmitDeleteRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItemsSubmitDeleteRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItemsSubmitDeleteRecord_Type_Vectors.Vector);



   type AdvancedAuctionKey_Type is
     record
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
     end record;


   package AdvancedAuctionKey_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionKey_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionKey_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionKey_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionKey_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionKey_Type_Vectors.Vector);



   type AudienceCreateRequest_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.UString;
       Rule : .Models.AudienceRule_Type;
       Description : Swagger.Nullable_UString;
       Audience_Type : .Models.AudienceCreateRequest1AudienceType_Type;
     end record;


   package AudienceCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceCreateRequest_Type_Vectors.Vector);



   type AudienceUpdateRequest_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Rule : .Models.AudienceRule_Type;
       Description : Swagger.Nullable_UString;
       Operation_Type : .Models.AudienceUpdateOperationType_Type;
     end record;


   package AudienceUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceUpdateRequest_Type_Vectors.Vector);



   type BaseInviteDataResponse_Type is
     record
       Id : Swagger.Nullable_UString;
       Invite_Data : .Models.BaseInviteDataResponseInviteData_Type;
       Is_Received_Invite : Swagger.Nullable_Boolean;
       User : .Models.BusinessAccessUserSummary_Type;
     end record;


   package BaseInviteDataResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BaseInviteDataResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BaseInviteDataResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BaseInviteDataResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BaseInviteDataResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BaseInviteDataResponse_Type_Vectors.Vector);


   --  ------------------------------
   --  BidFloorSpec
   --  ------------------------------
   type BidFloorSpec_Type is
     record
       Countries : .Models.Country_Type_Vectors.Vector;
       Currency : .Models.Currency_Type;
       Objective_Type : .Models.ObjectiveType_Type;
       Billable_Event : .Models.ActionType_Type;
       Optimization_Goal_Metadata : .Models.OptimizationGoalMetadata_Type;
       Creative_Type : .Models.CreativeType_Type;
     end record;


   package BidFloorSpec_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BidFloorSpec_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BidFloorSpec_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BidFloorSpec_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BidFloorSpec_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BidFloorSpec_Type_Vectors.Vector);


   --  ------------------------------
   --  BidFloorBody
   --  ------------------------------
   type BidFloorRequest_Type is
     record
       Bid_Floor_Specs : .Models.BidFloorSpec_Type_Vectors.Vector;
       Targeting_Spec : .Models.TargetingSpec_Type;
     end record;


   package BidFloorRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BidFloorRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BidFloorRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BidFloorRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BidFloorRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BidFloorRequest_Type_Vectors.Vector);



   type SearchUserBoardsGet200Response_Type is
     record
       Items : .Models.Board_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package SearchUserBoardsGet200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SearchUserBoardsGet200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SearchUserBoardsGet200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SearchUserBoardsGet200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SearchUserBoardsGet200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SearchUserBoardsGet200Response_Type_Vectors.Vector);



   type BulkDownloadRequestCampaignFilter_Type is
     record
       Start_Time : Swagger.Nullable_UString;
       End_Time : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Campaign_Status : .Models.CampaignSummaryStatus_Type_Vectors.Vector;
       Objective_Type : .Models.ObjectiveType_Type_Vectors.Vector;
     end record;


   package BulkDownloadRequestCampaignFilter_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkDownloadRequestCampaignFilter_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkDownloadRequestCampaignFilter_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkDownloadRequestCampaignFilter_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkDownloadRequestCampaignFilter_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkDownloadRequestCampaignFilter_Type_Vectors.Vector);



   type AdGroupCreateRequest_Type is
     record
       Name : Swagger.UString;
       Status : .Models.EntityStatus_Type;
       Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Optimization_Goal_Metadata : .Models.OptimizationGoalMetadata_Type;
       Budget_Type : .Models.BudgetType_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Targeting_Spec : .Models.TargetingSpec_Type;
       Lifetime_Frequency_Cap : Swagger.Nullable_Integer;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Placement_Group : .Models.PlacementGroupType_Type;
       Pacing_Delivery_Type : .Models.PacingDeliveryType_Type;
       Campaign_Id : Swagger.UString;
       Billable_Event : .Models.ActionType_Type;
       Bid_Strategy_Type : Swagger.Nullable_UString;
       Targeting_Template_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package AdGroupCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupCreateRequest_Type_Vectors.Vector);



   type BulkUpsertRequestCreate_Type is
     record
       Campaigns : .Models.CampaignCreateRequest_Type_Vectors.Vector;
       Ad_Groups : .Models.AdGroupCreateRequest_Type_Vectors.Vector;
       Ads : .Models.AdCreateRequest_Type_Vectors.Vector;
       Product_Groups : .Models.ProductGroupPromotionCreateRequest_Type_Vectors.Vector;
       Keywords : .Models.KeywordsRequest_Type_Vectors.Vector;
     end record;


   package BulkUpsertRequestCreate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkUpsertRequestCreate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkUpsertRequestCreate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkUpsertRequestCreate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkUpsertRequestCreate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkUpsertRequestCreate_Type_Vectors.Vector);



   type AdGroupUpdateRequest_Type is
     record
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Optimization_Goal_Metadata : .Models.OptimizationGoalMetadata_Type;
       Budget_Type : .Models.BudgetType_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Targeting_Spec : .Models.TargetingSpec_Type;
       Lifetime_Frequency_Cap : Swagger.Nullable_Integer;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Placement_Group : .Models.PlacementGroupType_Type;
       Pacing_Delivery_Type : .Models.PacingDeliveryType_Type;
       Campaign_Id : Swagger.Nullable_UString;
       Billable_Event : .Models.ActionType_Type;
       Bid_Strategy_Type : Swagger.Nullable_UString;
       Targeting_Template_Ids : Swagger.UString_Vectors.Vector;
       Id : Swagger.UString;
     end record;


   package AdGroupUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupUpdateRequest_Type_Vectors.Vector);



   type BulkUpsertRequestUpdate_Type is
     record
       Campaigns : .Models.CampaignUpdateRequest_Type_Vectors.Vector;
       Ad_Groups : .Models.AdGroupUpdateRequest_Type_Vectors.Vector;
       Ads : .Models.AdUpdateRequest_Type_Vectors.Vector;
       Product_Groups : .Models.ProductGroupPromotionUpdateRequest_Type_Vectors.Vector;
       Keywords : .Models.KeywordUpdate_Type_Vectors.Vector;
     end record;


   package BulkUpsertRequestUpdate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkUpsertRequestUpdate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkUpsertRequestUpdate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkUpsertRequestUpdate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkUpsertRequestUpdate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkUpsertRequestUpdate_Type_Vectors.Vector);



   type BulkUpsertRequest_Type is
     record
       Create : .Models.BulkUpsertRequestCreate_Type;
       Update : .Models.BulkUpsertRequestUpdate_Type;
     end record;


   package BulkUpsertRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkUpsertRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkUpsertRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkUpsertRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkUpsertRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkUpsertRequest_Type_Vectors.Vector);



   type BusinessMemberAssetsSummary_Type is
     record
       Ad_Accounts : .Models.BusinessMemberAssetsSummaryAdAccountsInner_Type_Vectors.Vector;
       Profiles : .Models.BusinessMemberAssetsSummaryProfilesInner_Type_Vectors.Vector;
     end record;


   package BusinessMemberAssetsSummary_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BusinessMemberAssetsSummary_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BusinessMemberAssetsSummary_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BusinessMemberAssetsSummary_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BusinessMemberAssetsSummary_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BusinessMemberAssetsSummary_Type_Vectors.Vector);



   type CampaignCommon_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Lifetime_Spend_Cap : Swagger.Nullable_Integer;
       Daily_Spend_Cap : Swagger.Nullable_Integer;
       Order_Line_Id : Swagger.Nullable_UString;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Is_Flexible_Daily_Budgets : Swagger.Nullable_Boolean;
     end record;


   package CampaignCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignCommon_Type_Vectors.Vector);



   type CampaignCreateCommon_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Lifetime_Spend_Cap : Swagger.Nullable_Integer;
       Daily_Spend_Cap : Swagger.Nullable_Integer;
       Order_Line_Id : Swagger.Nullable_UString;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Is_Flexible_Daily_Budgets : Swagger.Nullable_Boolean;
       Default_Ad_Group_Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Is_Automated_Campaign : Swagger.Nullable_Boolean;
     end record;


   package CampaignCreateCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignCreateCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignCreateCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignCreateCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignCreateCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignCreateCommon_Type_Vectors.Vector);



   type CatalogsCreativeAssetsItemErrorResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Creative_Assets_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
     end record;


   package CatalogsCreativeAssetsItemErrorResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsItemErrorResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsItemErrorResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsItemErrorResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsItemErrorResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsItemErrorResponse_Type_Vectors.Vector);



   type CatalogsCreativeAssetsProduct_Type is
     record
       Catalog_Type : Swagger.UString;
       Metadata : .Models.CatalogsCreativeAssetsProductMetadata_Type;
       Pin : .Models.Pin_Type;
     end record;


   package CatalogsCreativeAssetsProduct_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsProduct_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsProduct_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsProduct_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsProduct_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsProduct_Type_Vectors.Vector);



   type CatalogsFeedValidationDetails_Type is
     record
       Errors : .Models.CatalogsFeedValidationErrors_Type;
       Warnings : .Models.CatalogsFeedValidationWarnings_Type;
     end record;


   package CatalogsFeedValidationDetails_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedValidationDetails_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedValidationDetails_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedValidationDetails_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedValidationDetails_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedValidationDetails_Type_Vectors.Vector);



   type CatalogsHotelItemErrorResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Hotel_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
     end record;


   package CatalogsHotelItemErrorResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelItemErrorResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelItemErrorResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelItemErrorResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelItemErrorResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelItemErrorResponse_Type_Vectors.Vector);



   type CatalogsHotelProduct_Type is
     record
       Catalog_Type : Swagger.UString;
       Metadata : .Models.CatalogsHotelProductMetadata_Type;
       Pin : .Models.Pin_Type;
     end record;


   package CatalogsHotelProduct_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelProduct_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelProduct_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelProduct_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelProduct_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelProduct_Type_Vectors.Vector);



   type CatalogsReportParameters_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Report : .Models.CatalogsHotelReportParametersReport_Type;
     end record;


   package CatalogsReportParameters_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsReportParameters_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsReportParameters_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsReportParameters_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsReportParameters_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsReportParameters_Type_Vectors.Vector);



   type CatalogsRetailBatchRequestItemsInner_Type is
     record
       Item_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.ItemAttributesRequest_Type;
       Update_Mask : .Models.UpdateMaskFieldType_Type_Vectors.Vector;
     end record;


   package CatalogsRetailBatchRequestItemsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailBatchRequestItemsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailBatchRequestItemsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailBatchRequestItemsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailBatchRequestItemsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailBatchRequestItemsInner_Type_Vectors.Vector);



   type CatalogsRetailItemErrorResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
     end record;


   package CatalogsRetailItemErrorResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailItemErrorResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailItemErrorResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailItemErrorResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailItemErrorResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailItemErrorResponse_Type_Vectors.Vector);



   type CatalogsRetailProductMetadata_Type is
     record
       Item_Id : Swagger.UString;
       Item_Group_Id : Swagger.UString;
       Availability : .Models.NonNullableProductAvailabilityType_Type;
       Price : Swagger.Number;
       Sale_Price : Swagger.Number;
       Currency : .Models.NonNullableCatalogsCurrency_Type;
     end record;


   package CatalogsRetailProductMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailProductMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailProductMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailProductMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailProductMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailProductMetadata_Type_Vectors.Vector);



   type CatalogsRetailProduct_Type is
     record
       Catalog_Type : Swagger.UString;
       Metadata : .Models.CatalogsRetailProductMetadata_Type;
       Pin : .Models.Pin_Type;
     end record;


   package CatalogsRetailProduct_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailProduct_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailProduct_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailProduct_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailProduct_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailProduct_Type_Vectors.Vector);



   type CatalogsUpdateRetailItem_Type is
     record
       Item_Id : Swagger.UString;
       Operation : Swagger.UString;
       Attributes : .Models.UpdatableItemAttributes_Type;
       Update_Mask : .Models.UpdateMaskFieldType_Type_Vectors.Vector;
     end record;


   package CatalogsUpdateRetailItem_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsUpdateRetailItem_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsUpdateRetailItem_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsUpdateRetailItem_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsUpdateRetailItem_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsUpdateRetailItem_Type_Vectors.Vector);



   type CreativeAssetsProcessingRecord_Type is
     record
       Creative_Assets_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Warnings : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Status : .Models.ItemProcessingStatus_Type;
     end record;


   package CreativeAssetsProcessingRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreativeAssetsProcessingRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreativeAssetsProcessingRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreativeAssetsProcessingRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreativeAssetsProcessingRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreativeAssetsProcessingRecord_Type_Vectors.Vector);



   type HotelProcessingRecord_Type is
     record
       Hotel_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Warnings : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Status : .Models.ItemProcessingStatus_Type;
     end record;


   package HotelProcessingRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.HotelProcessingRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.HotelProcessingRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HotelProcessingRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.HotelProcessingRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out HotelProcessingRecord_Type_Vectors.Vector);



   type InviteAssetsSummary_Type is
     record
       Ad_Accounts : .Models.InviteAssetsSummaryAdAccountsInner_Type_Vectors.Vector;
       Profiles : .Models.InviteAssetsSummaryProfilesInner_Type_Vectors.Vector;
     end record;


   package InviteAssetsSummary_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteAssetsSummary_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteAssetsSummary_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteAssetsSummary_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteAssetsSummary_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteAssetsSummary_Type_Vectors.Vector);



   type InviteBusinessRoleBinding_Type is
     record
       Created_By_Business_Id : Swagger.Nullable_UString;
       Created_By_User_Id : Swagger.Nullable_UString;
       User : .Models.BusinessAccessUserSummary_Type;
       Id : Swagger.Nullable_UString;
       Invite_Data : .Models.BaseInviteDataResponseInviteData_Type;
       Is_Received_Invite : Swagger.Nullable_Boolean;
     end record;


   package InviteBusinessRoleBinding_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.InviteBusinessRoleBinding_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.InviteBusinessRoleBinding_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InviteBusinessRoleBinding_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.InviteBusinessRoleBinding_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out InviteBusinessRoleBinding_Type_Vectors.Vector);



   type ItemBatchRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
       Attributes : .Models.ItemAttributesRequest_Type;
       Update_Mask : .Models.UpdateMaskFieldType_Type_Vectors.Vector;
     end record;


   package ItemBatchRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemBatchRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemBatchRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemBatchRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemBatchRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemBatchRecord_Type_Vectors.Vector);



   type ItemProcessingRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Warnings : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Status : .Models.ItemProcessingStatus_Type;
     end record;


   package ItemProcessingRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemProcessingRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemProcessingRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemProcessingRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemProcessingRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemProcessingRecord_Type_Vectors.Vector);



   type ItemResponseAnyOf1_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Id : Swagger.Nullable_UString;
       Errors : .Models.ItemValidationEvent_Type_Vectors.Vector;
       Hotel_Id : Swagger.Nullable_UString;
       Creative_Assets_Id : Swagger.Nullable_UString;
     end record;


   package ItemResponseAnyOf1_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemResponseAnyOf1_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemResponseAnyOf1_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemResponseAnyOf1_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemResponseAnyOf1_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemResponseAnyOf1_Type_Vectors.Vector);



   type ItemUpdateBatchRecord_Type is
     record
       Item_Id : Swagger.Nullable_UString;
       Attributes : .Models.UpdatableItemAttributes_Type;
       Update_Mask : .Models.UpdateMaskFieldType_Type_Vectors.Vector;
     end record;


   package ItemUpdateBatchRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemUpdateBatchRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemUpdateBatchRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemUpdateBatchRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemUpdateBatchRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemUpdateBatchRecord_Type_Vectors.Vector);



   type KeywordsResponse_Type is
     record
       Errors : .Models.KeywordError_Type_Vectors.Vector;
       Keywords : .Models.Keyword_Type_Vectors.Vector;
     end record;


   package KeywordsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.KeywordsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.KeywordsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in KeywordsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.KeywordsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out KeywordsResponse_Type_Vectors.Vector);



   type LeadFormQuestion_Type is
     record
       Question_Type : .Models.LeadFormQuestionType_Type;
       Custom_Question_Field_Type : .Models.LeadFormQuestionFieldType_Type;
       Custom_Question_Label : Swagger.Nullable_UString;
       Custom_Question_Options : Swagger.UString_Vectors.Vector;
     end record;


   package LeadFormQuestion_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormQuestion_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormQuestion_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormQuestion_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormQuestion_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormQuestion_Type_Vectors.Vector);


   --  ------------------------------
   --  Media upload
   --  Media upload that has been registered but not uploaded/processed yet.
   --  ------------------------------
   type MediaUpload_Type is
     record
       Media_Id : Swagger.Nullable_UString;
       Media_Type : .Models.MediaUploadType_Type;
       Upload_Url : Swagger.Nullable_UString;
       Upload_Parameters : .Models.MediaUploadAllOfUploadParameters_Type;
     end record;


   package MediaUpload_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MediaUpload_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MediaUpload_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MediaUpload_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MediaUpload_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MediaUpload_Type_Vectors.Vector);


   --  ------------------------------
   --  OrderLineResponse
   --  ------------------------------
   type OrderLineResponse_Type is
     record
       Errors : .Models.OrderLineError_Type_Vectors.Vector;
       Order_Line : .Models.OrderLine_Type_Vectors.Vector;
     end record;


   package OrderLineResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OrderLineResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OrderLineResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OrderLineResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OrderLineResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OrderLineResponse_Type_Vectors.Vector);



   type QuizPinData_Type is
     record
       Questions : .Models.QuizPinQuestion_Type_Vectors.Vector;
       Results : .Models.QuizPinResult_Type_Vectors.Vector;
       Tie_Breaker_Type : Swagger.Nullable_UString;
       Tie_Breaker_Custom_Result : .Models.QuizPinResult_Type;
     end record;


   package QuizPinData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.QuizPinData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.QuizPinData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QuizPinData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.QuizPinData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out QuizPinData_Type_Vectors.Vector);



   type SSIOAccountResponse_Type is
     record
       Eligible : Swagger.Nullable_Boolean;
       Can_Edit : Swagger.Nullable_Boolean;
       Billto_Infos : .Models.SSIOAccountItem_Type_Vectors.Vector;
       Currency : Swagger.Nullable_UString;
       Pmp_Names : .Models.SSIOAccountPMPName_Type_Vectors.Vector;
       Error : Swagger.Nullable_UString;
     end record;


   package SSIOAccountResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.SSIOAccountResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.SSIOAccountResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SSIOAccountResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.SSIOAccountResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out SSIOAccountResponse_Type_Vectors.Vector);



   type TopPinsAnalyticsResponse_Type is
     record
       Date_Availability : .Models.TopPinsAnalyticsResponseDateAvailability_Type;
       Pins : .Models.TopPinsAnalyticsResponsePinsInner_Type_Vectors.Vector;
       Sort_By : Swagger.Nullable_UString;
     end record;


   package TopPinsAnalyticsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TopPinsAnalyticsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TopPinsAnalyticsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TopPinsAnalyticsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TopPinsAnalyticsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TopPinsAnalyticsResponse_Type_Vectors.Vector);



   type TopVideoPinsAnalyticsResponse_Type is
     record
       Date_Availability : .Models.TopPinsAnalyticsResponseDateAvailability_Type;
       Pins : .Models.TopVideoPinsAnalyticsResponsePinsInner_Type_Vectors.Vector;
       Sort_By : Swagger.Nullable_UString;
     end record;


   package TopVideoPinsAnalyticsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TopVideoPinsAnalyticsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TopVideoPinsAnalyticsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TopVideoPinsAnalyticsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TopVideoPinsAnalyticsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TopVideoPinsAnalyticsResponse_Type_Vectors.Vector);



   type UpdateAssetGroupResponse_Type is
     record
       Updated_Asset_Groups : .Models.AssetGroupBinding_Type_Vectors.Vector;
       Exceptions : .Models.UpdateAssetGroupResponseExceptionsInner_Type_Vectors.Vector;
     end record;


   package UpdateAssetGroupResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.UpdateAssetGroupResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.UpdateAssetGroupResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UpdateAssetGroupResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.UpdateAssetGroupResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out UpdateAssetGroupResponse_Type_Vectors.Vector);



   type AdGroupAudienceSizingRequest_Type is
     record
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Placement_Group : .Models.PlacementGroupType_Type;
       Creative_Types : Swagger.UString_Vectors.Vector;
       Targeting_Spec : .Models.TargetingSpec_Type;
       Product_Group_Ids : Swagger.UString_Vectors.Vector;
       Keywords : .Models.AdGroupAudienceSizingRequestKeywordsInner_Type_Vectors.Vector;
     end record;


   package AdGroupAudienceSizingRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupAudienceSizingRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupAudienceSizingRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupAudienceSizingRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupAudienceSizingRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupAudienceSizingRequest_Type_Vectors.Vector);



   type AudienceCreateCustomRequest_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Name : Swagger.UString;
       Rule : .Models.AudienceRule_Type;
       Sharing_Type : .Models.AudienceSharingType_Type;
       Data_Party : .Models.AudienceDataParty_Type;
       Category : Swagger.Nullable_UString;
     end record;


   package AudienceCreateCustomRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceCreateCustomRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceCreateCustomRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceCreateCustomRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceCreateCustomRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceCreateCustomRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  AudienceInsightsResponse
   --  Audience interests and demographics.
   --  ------------------------------
   type AudienceInsightsResponse_Type is
     record
       Categories : .Models.AudienceCategory_Type_Vectors.Vector;
       Demographics : .Models.AudienceDemographics_Type;
       P_Type : .Models.AudienceInsightType_Type;
       Date : Swagger.Nullable_UString;
       Size : Swagger.Nullable_Integer;
       Size_Is_Upper_Bound : Swagger.Nullable_Boolean;
     end record;


   package AudienceInsightsResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AudienceInsightsResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AudienceInsightsResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AudienceInsightsResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AudienceInsightsResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AudienceInsightsResponse_Type_Vectors.Vector);



   type BulkDownloadRequest_Type is
     record
       Entity_Types : BulkEntityType_Type_Vectors.Vector;
       Entity_Ids : Swagger.UString_Vectors.Vector;
       Updated_Since : Swagger.Nullable_UString;
       Campaign_Filter : .Models.BulkDownloadRequestCampaignFilter_Type;
       Output_Format : .Models.BulkOutputFormat_Type;
     end record;


   package BulkDownloadRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.BulkDownloadRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.BulkDownloadRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BulkDownloadRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.BulkDownloadRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out BulkDownloadRequest_Type_Vectors.Vector);



   type CampaignCreateRequest_Type is
     record
       Ad_Account_Id : Swagger.UString;
       Name : Swagger.UString;
       Status : .Models.EntityStatus_Type;
       Lifetime_Spend_Cap : Swagger.Nullable_Integer;
       Daily_Spend_Cap : Swagger.Nullable_Integer;
       Order_Line_Id : Swagger.Nullable_UString;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Is_Flexible_Daily_Budgets : Swagger.Nullable_Boolean;
       Default_Ad_Group_Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Is_Automated_Campaign : Swagger.Nullable_Boolean;
       Objective_Type : .Models.ObjectiveType_Type;
     end record;


   package CampaignCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignCreateRequest_Type_Vectors.Vector);



   type CampaignUpdateRequest_Type is
     record
       Id : Swagger.UString;
       Ad_Account_Id : Swagger.UString;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Lifetime_Spend_Cap : Swagger.Nullable_Integer;
       Daily_Spend_Cap : Swagger.Nullable_Integer;
       Order_Line_Id : Swagger.Nullable_UString;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Is_Flexible_Daily_Budgets : Swagger.Nullable_Boolean;
       Default_Ad_Group_Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Is_Automated_Campaign : Swagger.Nullable_Boolean;
       Is_Campaign_Budget_Optimization : Swagger.Nullable_Boolean;
       Objective_Type : .Models.ObjectiveType_Type;
     end record;


   package CampaignUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CampaignUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CampaignUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CampaignUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CampaignUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CampaignUpdateRequest_Type_Vectors.Vector);



   type CatalogsCreativeAssetsBatchRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Items : .Models.CatalogsCreativeAssetsBatchItem_Type_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsCreativeAssetsBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsBatchRequest_Type_Vectors.Vector);



   type CatalogsCreativeAssetsItemResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Creative_Assets_Id : Swagger.Nullable_UString;
       Pins : .Models.Pin_Type_Vectors.Vector;
       Attributes : .Models.CatalogsCreativeAssetsAttributes_Type;
     end record;


   package CatalogsCreativeAssetsItemResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsItemResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsItemResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsItemResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsItemResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsItemResponse_Type_Vectors.Vector);



   type CatalogsCreativeAssetsItemsBatch_Type is
     record
       Batch_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Date;
       Completed_Time : Swagger.Nullable_Date;
       Status : .Models.BatchOperationStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Items : .Models.CreativeAssetsProcessingRecord_Type_Vectors.Vector;
     end record;


   package CatalogsCreativeAssetsItemsBatch_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsItemsBatch_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsItemsBatch_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsItemsBatch_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsItemsBatch_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsItemsBatch_Type_Vectors.Vector);



   type CatalogsFeedIngestionDetails_Type is
     record
       Errors : .Models.CatalogsFeedIngestionErrors_Type;
       Info : .Models.CatalogsFeedIngestionInfo_Type;
       Warnings : .Models.CatalogsFeedIngestionWarnings_Type;
     end record;


   package CatalogsFeedIngestionDetails_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedIngestionDetails_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedIngestionDetails_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedIngestionDetails_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedIngestionDetails_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedIngestionDetails_Type_Vectors.Vector);



   type CatalogsHotelBatchRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Items : .Models.CatalogsHotelBatchItem_Type_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsHotelBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelBatchRequest_Type_Vectors.Vector);



   type CatalogsHotelItemResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Hotel_Id : Swagger.Nullable_UString;
       Pins : .Models.Pin_Type_Vectors.Vector;
       Attributes : .Models.CatalogsHotelAttributes_Type;
     end record;


   package CatalogsHotelItemResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelItemResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelItemResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelItemResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelItemResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelItemResponse_Type_Vectors.Vector);



   type CatalogsHotelItemsBatch_Type is
     record
       Batch_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Date;
       Completed_Time : Swagger.Nullable_Date;
       Status : .Models.BatchOperationStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Items : .Models.HotelProcessingRecord_Type_Vectors.Vector;
     end record;


   package CatalogsHotelItemsBatch_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelItemsBatch_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelItemsBatch_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelItemsBatch_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelItemsBatch_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelItemsBatch_Type_Vectors.Vector);



   type CatalogsItemsBatch_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Batch_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Date;
       Completed_Time : Swagger.Nullable_Date;
       Status : .Models.BatchOperationStatus_Type;
       Items : .Models.CreativeAssetsProcessingRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsBatch_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsBatch_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsBatch_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsBatch_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsBatch_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsBatch_Type_Vectors.Vector);



   type CatalogsItemsRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Filters : .Models.CatalogsItemsPostFilters_Type;
     end record;


   package CatalogsItemsRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsRequest_Type_Vectors.Vector);



   type CatalogsListProductsByFilterRequest_Type is
     record
       Feed_Id : Swagger.UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Catalog_Type : Swagger.UString;
       Catalog_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsListProductsByFilterRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsListProductsByFilterRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsListProductsByFilterRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsListProductsByFilterRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsListProductsByFilterRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsListProductsByFilterRequest_Type_Vectors.Vector);



   type CatalogsProductGroupsUpdateRequest_Type is
     record
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Is_Featured : Swagger.Nullable_Boolean;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Catalog_Type : Swagger.Nullable_UString;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsProductGroupsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsProductGroupsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsProductGroupsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsProductGroupsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsProductGroupsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsProductGroupsUpdateRequest_Type_Vectors.Vector);



   type CatalogsRetailBatchRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Items : .Models.CatalogsRetailBatchRequestItemsInner_Type_Vectors.Vector;
     end record;


   package CatalogsRetailBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailBatchRequest_Type_Vectors.Vector);



   type CatalogsRetailItemResponse_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Id : Swagger.Nullable_UString;
       Pins : .Models.Pin_Type_Vectors.Vector;
       Attributes : .Models.ItemAttributes_Type;
     end record;


   package CatalogsRetailItemResponse_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailItemResponse_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailItemResponse_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailItemResponse_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailItemResponse_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailItemResponse_Type_Vectors.Vector);



   type CatalogsRetailItemsBatch_Type is
     record
       Batch_Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Date;
       Completed_Time : Swagger.Nullable_Date;
       Status : .Models.BatchOperationStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Items : .Models.ItemProcessingRecord_Type_Vectors.Vector;
     end record;


   package CatalogsRetailItemsBatch_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailItemsBatch_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailItemsBatch_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailItemsBatch_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailItemsBatch_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailItemsBatch_Type_Vectors.Vector);


   --  ------------------------------
   --  retail_list_products_by_catalog_based_filter_request
   --  Request object to list products for a given retail catalog_id and product group filter.
   --  ------------------------------
   type CatalogsRetailListProductsByCatalogBasedFilterRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Catalog_Id : Swagger.UString;
       Filters : .Models.CatalogsProductGroupFilters_Type;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsRetailListProductsByCatalogBasedFilterRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailListProductsByCatalogBasedFilterRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailListProductsByCatalogBasedFilterRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailListProductsByCatalogBasedFilterRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  retail_product_groups_create_request
   --  Request object for creating a product group.
   --  ------------------------------
   type CatalogsRetailProductGroupCreateRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsProductGroupFiltersRequest_Type;
       Catalog_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsRetailProductGroupCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailProductGroupCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailProductGroupCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailProductGroupCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailProductGroupCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailProductGroupCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  retail_product_groups_update_request
   --  Request object for updating a retail product group.
   --  ------------------------------
   type CatalogsRetailProductGroupUpdateRequest_Type is
     record
       Catalog_Type : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsProductGroupFiltersRequest_Type;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsRetailProductGroupUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailProductGroupUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailProductGroupUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailProductGroupUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailProductGroupUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailProductGroupUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  retail_product_group
   --  ------------------------------
   type CatalogsRetailProductGroup_Type is
     record
       Catalog_Type : Swagger.UString;
       Id : Swagger.UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsProductGroupFilters_Type;
       Is_Featured : Swagger.Nullable_Boolean;
       P_Type : .Models.CatalogsProductGroupType_Type;
       Status : .Models.CatalogsProductGroupStatus_Type;
       Created_At : Swagger.Nullable_Integer;
       Updated_At : Swagger.Nullable_Integer;
       Catalog_Id : Swagger.UString;
       Feed_Id : Swagger.UString;
       Country : Swagger.Nullable_UString;
       Locale : Swagger.Nullable_UString;
     end record;


   package CatalogsRetailProductGroup_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailProductGroup_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailProductGroup_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailProductGroup_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailProductGroup_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailProductGroup_Type_Vectors.Vector);


   --  ------------------------------
   --  operate on item batch
   --  A request object that can have multiple operations on a single batch
   --  ------------------------------
   type CatalogsVerticalBatchRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Items : .Models.CatalogsCreativeAssetsBatchItem_Type_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsVerticalBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalBatchRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalog based
   --  Request object for creating a catalog based product group.
   --  ------------------------------
   type CatalogsVerticalProductGroupCreateRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Catalog_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsVerticalProductGroupCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalProductGroupCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalProductGroupCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalProductGroupCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalProductGroupCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalProductGroupCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalog based
   --  Request object for updating a catalog based product group.
   --  ------------------------------
   type CatalogsVerticalProductGroupUpdateRequest_Type is
     record
       Catalog_Type : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsVerticalProductGroupUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalProductGroupUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalProductGroupUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalProductGroupUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalProductGroupUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalProductGroupUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalog based product group
   --  Request object to list products for a given catalog_id and product group filter.
   --  ------------------------------
   type CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Catalog_Id : Swagger.UString;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalsListProductsByCatalogBasedFilterRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  ConversionTagCommon
   --  ------------------------------
   type ConversionTagCommon_Type is
     record
       Ad_Account_Id : Swagger.Nullable_UString;
       Code_Snippet : Swagger.Nullable_UString;
       Enhanced_Match_Status : .Models.EnhancedMatchStatusType_Type;
       Id : Swagger.Nullable_UString;
       Last_Fired_Time_Ms : Swagger.Number;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Version : Swagger.Nullable_UString;
       Configs : .Models.ConversionTagConfigs_Type;
     end record;


   package ConversionTagCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ConversionTagCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ConversionTagCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ConversionTagCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ConversionTagCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ConversionTagCommon_Type_Vectors.Vector);



   type CreateMMMReportRequest_Type is
     record
       Report_Name : Swagger.UString;
       Start_Date : Swagger.UString;
       End_Date : Swagger.UString;
       Granularity : Swagger.UString;
       Level : Swagger.UString;
       Targeting_Types : .Models.MMMReportingTargetingType_Type_Vectors.Vector;
       Columns : .Models.MMMReportingColumn_Type_Vectors.Vector;
       Countries : .Models.TargetingAdvertiserCountry_Type_Vectors.Vector;
     end record;


   package CreateMMMReportRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CreateMMMReportRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CreateMMMReportRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CreateMMMReportRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CreateMMMReportRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CreateMMMReportRequest_Type_Vectors.Vector);



   type ItemResponseAnyOf_Type is
     record
       Catalog_Type : .Models.CatalogsType_Type;
       Item_Id : Swagger.Nullable_UString;
       Pins : .Models.Pin_Type_Vectors.Vector;
       Attributes : .Models.CatalogsCreativeAssetsAttributes_Type;
       Hotel_Id : Swagger.Nullable_UString;
       Creative_Assets_Id : Swagger.Nullable_UString;
     end record;


   package ItemResponseAnyOf_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemResponseAnyOf_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemResponseAnyOf_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemResponseAnyOf_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemResponseAnyOf_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemResponseAnyOf_Type_Vectors.Vector);



   type LeadFormCommon_Type is
     record
       Name : Swagger.Nullable_UString;
       Privacy_Policy_Link : Swagger.Nullable_UString;
       Has_Accepted_Terms : Swagger.Nullable_Boolean;
       Completion_Message : Swagger.Nullable_UString;
       Status : .Models.LeadFormStatus_Type;
       Disclosure_Language : Swagger.Nullable_UString;
       Questions : .Models.LeadFormQuestion_Type_Vectors.Vector;
       Policy_Links : .Models.LeadFormCommonPolicyLinksInner_Type_Vectors.Vector;
     end record;


   package LeadFormCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormCommon_Type_Vectors.Vector);



   type LeadFormCreateRequest_Type is
     record
       Name : Swagger.UString;
       Privacy_Policy_Link : Swagger.UString;
       Has_Accepted_Terms : Boolean;
       Completion_Message : Swagger.UString;
       Status : .Models.LeadFormStatus_Type;
       Disclosure_Language : Swagger.Nullable_UString;
       Questions : .Models.LeadFormQuestion_Type_Vectors.Vector;
       Policy_Links : .Models.LeadFormCommonPolicyLinksInner_Type_Vectors.Vector;
     end record;


   package LeadFormCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormCreateRequest_Type_Vectors.Vector);



   type LeadFormUpdateRequest_Type is
     record
       Name : Swagger.Nullable_UString;
       Privacy_Policy_Link : Swagger.Nullable_UString;
       Has_Accepted_Terms : Swagger.Nullable_Boolean;
       Completion_Message : Swagger.Nullable_UString;
       Status : .Models.LeadFormStatus_Type;
       Disclosure_Language : Swagger.Nullable_UString;
       Questions : .Models.LeadFormQuestion_Type_Vectors.Vector;
       Policy_Links : .Models.LeadFormCommonPolicyLinksInner_Type_Vectors.Vector;
       Id : Swagger.UString;
     end record;


   package LeadFormUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.LeadFormUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.LeadFormUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in LeadFormUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.LeadFormUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out LeadFormUpdateRequest_Type_Vectors.Vector);



   type MultipleProductGroupsInner_Type is
     record
       Name : Swagger.UString;
       Description : Swagger.Nullable_UString;
       Is_Featured : Swagger.Nullable_Boolean;
       Filters : .Models.CatalogsCreativeAssetsProductGroupFilters_Type;
       Feed_Id : Swagger.UString;
       Catalog_Type : Swagger.UString;
       Catalog_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Locale : .Models.CatalogsLocale_Type;
     end record;


   package MultipleProductGroupsInner_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.MultipleProductGroupsInner_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.MultipleProductGroupsInner_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MultipleProductGroupsInner_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.MultipleProductGroupsInner_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out MultipleProductGroupsInner_Type_Vectors.Vector);



   type OptimizationGoalMetadata_Type is
     record
       Conversion_Tag_V_3_Goal_Metadata : .Models.OptimizationGoalMetadataConversionTagV3GoalMetadata_Type;
       Frequency_Goal_Metadata : .Models.OptimizationGoalMetadataFrequencyGoalMetadata_Type;
       Scrollup_Goal_Metadata : .Models.OptimizationGoalMetadataScrollupGoalMetadata_Type;
     end record;


   package OptimizationGoalMetadata_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.OptimizationGoalMetadata_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.OptimizationGoalMetadata_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in OptimizationGoalMetadata_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.OptimizationGoalMetadata_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out OptimizationGoalMetadata_Type_Vectors.Vector);


   --  ------------------------------
   --  PinCreate
   --  Pin
   --  ------------------------------
   type PinCreate_Type is
     record
       Id : Swagger.Nullable_UString;
       Created_At : Swagger.Nullable_Date;
       Link : Swagger.Nullable_UString;
       Title : Swagger.Nullable_UString;
       Description : Swagger.Nullable_UString;
       Dominant_Color : Swagger.Nullable_UString;
       Alt_Text : Swagger.Nullable_UString;
       Board_Id : Swagger.Nullable_UString;
       Board_Section_Id : Swagger.Nullable_UString;
       Board_Owner : .Models.BoardOwner_Type;
       Media : .Models.PinMedia_Type;
       Media_Source : .Models.PinMediaSource_Type;
       Parent_Pin_Id : Swagger.Nullable_UString;
       Note : Swagger.Nullable_UString;
     end record;


   package PinCreate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.PinCreate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.PinCreate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PinCreate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.PinCreate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out PinCreate_Type_Vectors.Vector);



   type TemplateResponseDateRange_Type is
     record
       Dynamic_Date_Range : .Models.TemplateResponseDateRangeDynamicDateRange_Type;
       Relative_Date_Range : .Models.TemplateResponseDateRangeRelativeDateRange_Type;
       Absolute_Date_Range : .Models.TemplateResponseDateRangeAbsoluteDateRange_Type;
     end record;


   package TemplateResponseDateRange_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TemplateResponseDateRange_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TemplateResponseDateRange_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TemplateResponseDateRange_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TemplateResponseDateRange_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TemplateResponseDateRange_Type_Vectors.Vector);



   type AdAccount_Type is
     record
       Id : Swagger.Nullable_UString;
       Name : Swagger.Nullable_UString;
       Owner : .Models.AdAccountOwner_Type;
       Country : .Models.Country_Type;
       Currency : .Models.Currency_Type;
       Permissions : .Models.BusinessAccessRole_Type_Vectors.Vector;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
     end record;


   package AdAccount_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccount_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccount_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccount_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccount_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccount_Type_Vectors.Vector);



   type AdAccountsList200Response_Type is
     record
       Items : .Models.AdAccount_Type_Vectors.Vector;
       Bookmark : Swagger.Nullable_UString;
     end record;


   package AdAccountsList200Response_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdAccountsList200Response_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdAccountsList200Response_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdAccountsList200Response_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdAccountsList200Response_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdAccountsList200Response_Type_Vectors.Vector);



   type AdvancedAuctionItemsSubmitUpsertRecord_Type is
     record
       Item_Id : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.Language_Type;
       Bid_Options : .Models.AdvancedAuctionBidOptions_Type;
       Update_Mask : .Models.UpdateMaskBidOptionField_Type_Vectors.Vector;
     end record;


   package AdvancedAuctionItemsSubmitUpsertRecord_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdvancedAuctionItemsSubmitUpsertRecord_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdvancedAuctionItemsSubmitUpsertRecord_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdvancedAuctionItemsSubmitUpsertRecord_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdvancedAuctionItemsSubmitUpsertRecord_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdvancedAuctionItemsSubmitUpsertRecord_Type_Vectors.Vector);


   --  ------------------------------
   --  legacy_retail_only
   --  Request object of catalogs items batch
   --  ------------------------------
   type CatalogsItemsBatchRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Operation : .Models.BatchOperation_Type;
       Items : .Models.ItemDeleteBatchRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsBatchRequest_Type_Vectors.Vector);



   type CatalogsItemsCreateBatchRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Operation : .Models.BatchOperation_Type;
       Items : .Models.ItemCreateBatchRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsCreateBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsCreateBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsCreateBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsCreateBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsCreateBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsCreateBatchRequest_Type_Vectors.Vector);



   type CatalogsItemsDeleteBatchRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Operation : .Models.BatchOperation_Type;
       Items : .Models.ItemDeleteBatchRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsDeleteBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsDeleteBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsDeleteBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsDeleteBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsDeleteBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsDeleteBatchRequest_Type_Vectors.Vector);



   type CatalogsItemsDeleteDiscontinuedBatchRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Operation : .Models.BatchOperation_Type;
       Items : .Models.ItemDeleteDiscontinuedBatchRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsDeleteDiscontinuedBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsDeleteDiscontinuedBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsDeleteDiscontinuedBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsDeleteDiscontinuedBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsDeleteDiscontinuedBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsDeleteDiscontinuedBatchRequest_Type_Vectors.Vector);



   type CatalogsItemsUpdateBatchRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Operation : .Models.BatchOperation_Type;
       Items : .Models.ItemUpdateBatchRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsUpdateBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsUpdateBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsUpdateBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsUpdateBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsUpdateBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsUpdateBatchRequest_Type_Vectors.Vector);



   type CatalogsItemsUpsertBatchRequest_Type is
     record
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Operation : .Models.BatchOperation_Type;
       Items : .Models.ItemUpsertBatchRecord_Type_Vectors.Vector;
     end record;


   package CatalogsItemsUpsertBatchRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsItemsUpsertBatchRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsItemsUpsertBatchRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsItemsUpsertBatchRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsItemsUpsertBatchRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsItemsUpsertBatchRequest_Type_Vectors.Vector);



   type ItemsBatchPostRequest_Type is
     record
       Catalog_Type : Swagger.UString;
       Country : .Models.Country_Type;
       Language : .Models.CatalogsItemsRequestLanguage_Type;
       Items : .Models.ItemDeleteBatchRecord_Type_Vectors.Vector;
       Catalog_Id : Swagger.Nullable_UString;
       Operation : .Models.BatchOperation_Type;
     end record;


   package ItemsBatchPostRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.ItemsBatchPostRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.ItemsBatchPostRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemsBatchPostRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.ItemsBatchPostRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out ItemsBatchPostRequest_Type_Vectors.Vector);



   type TargetingTemplateCommon_Type is
     record
       Name : Swagger.Nullable_UString;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Targeting_Attributes : .Models.TargetingSpec_Type;
       Placement_Group : .Models.PlacementGroupType_Type;
       Keywords : .Models.TargetingTemplateKeyword_Type_Vectors.Vector;
       Tracking_Urls : .Models.TrackingUrls_Type;
     end record;


   package TargetingTemplateCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateCommon_Type_Vectors.Vector);



   type TargetingTemplateCreate_Type is
     record
       Name : Swagger.UString;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Targeting_Attributes : .Models.TargetingSpec_Type;
       Placement_Group : .Models.PlacementGroupType_Type;
       Keywords : .Models.TargetingTemplateKeyword_Type_Vectors.Vector;
       Tracking_Urls : .Models.TrackingUrls_Type;
     end record;


   package TargetingTemplateCreate_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateCreate_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateCreate_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateCreate_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateCreate_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateCreate_Type_Vectors.Vector);



   type AdCommon_Type is
     record
       Ad_Group_Id : Swagger.Nullable_UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Carousel_Android_Deep_Links : Swagger.UString_Vectors.Vector;
       Carousel_Destination_Urls : Swagger.UString_Vectors.Vector;
       Carousel_Ios_Deep_Links : Swagger.UString_Vectors.Vector;
       Click_Tracking_Url : Swagger.Nullable_UString;
       Creative_Type : .Models.CreativeType_Type;
       Destination_Url : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Is_Pin_Deleted : Swagger.Nullable_Boolean;
       Is_Removable : Swagger.Nullable_Boolean;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Tracking_Urls : .Models.TrackingUrls_Type;
       View_Tracking_Url : Swagger.Nullable_UString;
       Lead_Form_Id : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
       Customizable_Cta_Type : Swagger.Nullable_UString;
       Quiz_Pin_Data : .Models.QuizPinData_Type;
     end record;


   package AdCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdCommon_Type_Vectors.Vector);



   type AdCreateRequest_Type is
     record
       Ad_Group_Id : Swagger.UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Carousel_Android_Deep_Links : Swagger.UString_Vectors.Vector;
       Carousel_Destination_Urls : Swagger.UString_Vectors.Vector;
       Carousel_Ios_Deep_Links : Swagger.UString_Vectors.Vector;
       Click_Tracking_Url : Swagger.Nullable_UString;
       Creative_Type : .Models.CreativeType_Type;
       Destination_Url : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Is_Pin_Deleted : Swagger.Nullable_Boolean;
       Is_Removable : Swagger.Nullable_Boolean;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Tracking_Urls : .Models.TrackingUrls_Type;
       View_Tracking_Url : Swagger.Nullable_UString;
       Lead_Form_Id : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
       Customizable_Cta_Type : Swagger.Nullable_UString;
       Quiz_Pin_Data : .Models.QuizPinData_Type;
       Pin_Id : Swagger.UString;
     end record;


   package AdCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdCreateRequest_Type_Vectors.Vector);



   type AdUpdateRequest_Type is
     record
       Ad_Group_Id : Swagger.Nullable_UString;
       Android_Deep_Link : Swagger.Nullable_UString;
       Carousel_Android_Deep_Links : Swagger.UString_Vectors.Vector;
       Carousel_Destination_Urls : Swagger.UString_Vectors.Vector;
       Carousel_Ios_Deep_Links : Swagger.UString_Vectors.Vector;
       Click_Tracking_Url : Swagger.Nullable_UString;
       Creative_Type : .Models.CreativeType_Type;
       Destination_Url : Swagger.Nullable_UString;
       Ios_Deep_Link : Swagger.Nullable_UString;
       Is_Pin_Deleted : Swagger.Nullable_Boolean;
       Is_Removable : Swagger.Nullable_Boolean;
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Tracking_Urls : .Models.TrackingUrls_Type;
       View_Tracking_Url : Swagger.Nullable_UString;
       Lead_Form_Id : Swagger.Nullable_UString;
       Grid_Click_Type : .Models.GridClickType_Type;
       Customizable_Cta_Type : Swagger.Nullable_UString;
       Quiz_Pin_Data : .Models.QuizPinData_Type;
       Id : Swagger.UString;
       Pin_Id : Swagger.Nullable_UString;
     end record;


   package AdUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdUpdateRequest_Type_Vectors.Vector);



   type TargetingTemplateGetResponseData_Type is
     record
       Name : Swagger.Nullable_UString;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Targeting_Attributes : .Models.TargetingSpec_Type;
       Placement_Group : .Models.PlacementGroupType_Type;
       Keywords : .Models.TargetingTemplateKeyword_Type_Vectors.Vector;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Id : Swagger.Nullable_UString;
       Created_Time : Swagger.Nullable_Integer;
       Updated_Time : Swagger.Nullable_Integer;
       Ad_Account_Id : Swagger.Nullable_UString;
       Status : Swagger.Nullable_UString;
       Sizing : .Models.TargetingTemplateAudienceSizing_Type;
       Valid : Swagger.Nullable_Boolean;
     end record;


   package TargetingTemplateGetResponseData_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.TargetingTemplateGetResponseData_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.TargetingTemplateGetResponseData_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in TargetingTemplateGetResponseData_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.TargetingTemplateGetResponseData_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out TargetingTemplateGetResponseData_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_feeds_update_request
   --  Request object for updating a feed.
   --  ------------------------------
   type CatalogsCreativeAssetsFeedsUpdateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.Nullable_UString;
       Format : .Models.CatalogsFormat_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.Nullable_UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
     end record;


   package CatalogsCreativeAssetsFeedsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsFeedsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsFeedsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsFeedsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsFeedsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsFeedsUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  legacy_retail_only
   --  Request object for updating a feed.
   --  ------------------------------
   type CatalogsFeedsUpdateRequest_Type is
     record
       Default_Availability : .Models.ProductAvailabilityType_Type;
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.Nullable_UString;
       Format : .Models.CatalogsFormat_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.Nullable_UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
     end record;


   package CatalogsFeedsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedsUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_hotel_feed
   --  Catalogs Hotel Feed object
   --  ------------------------------
   type CatalogsHotelFeed_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Default_Currency : .Models.NullableCurrency_Type;
       Default_Locale : Swagger.UString;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsHotelFeed_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelFeed_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelFeed_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelFeed_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelFeed_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelFeed_Type_Vectors.Vector);


   --  ------------------------------
   --  feeds_hotel_create_request
   --  Request object for creating a feed. Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.
   --  ------------------------------
   type CatalogsHotelFeedsCreateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Default_Locale : .Models.CatalogsFeedsCreateRequestDefaultLocale_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Catalog_Id : Swagger.Nullable_UString;
       Status : CatalogsStatus_Type;
     end record;


   package CatalogsHotelFeedsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelFeedsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelFeedsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelFeedsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelFeedsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelFeedsCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_feeds_update_request
   --  Request object for updating a feed.
   --  ------------------------------
   type CatalogsHotelFeedsUpdateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.Nullable_UString;
       Format : .Models.CatalogsFormat_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.Nullable_UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
     end record;


   package CatalogsHotelFeedsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsHotelFeedsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsHotelFeedsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsHotelFeedsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsHotelFeedsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsHotelFeedsUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_creative_assets_feed
   --  Catalogs Creative Asset Feed object
   --  ------------------------------
   type CatalogsCreativeAssetsFeed_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Default_Currency : .Models.NullableCurrency_Type;
       Default_Locale : Swagger.UString;
       Default_Country : .Models.Country_Type;
       Catalog_Id : Swagger.UString;
     end record;


   package CatalogsCreativeAssetsFeed_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsFeed_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsFeed_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsFeed_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsFeed_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsFeed_Type_Vectors.Vector);


   --  ------------------------------
   --  feeds_creative_assets_create_request
   --  Request object for creating a feed.
   --  ------------------------------
   type CatalogsCreativeAssetsFeedsCreateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Default_Locale : .Models.CatalogsFeedsCreateRequestDefaultLocale_Type;
       Default_Country : .Models.Country_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Catalog_Id : Swagger.Nullable_UString;
       Status : CatalogsStatus_Type;
     end record;


   package CatalogsCreativeAssetsFeedsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsCreativeAssetsFeedsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsCreativeAssetsFeedsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsCreativeAssetsFeedsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsCreativeAssetsFeedsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsCreativeAssetsFeedsCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  legacy_retail_only
   --  Request object for creating a feed. Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.
   --  ------------------------------
   type CatalogsFeedsCreateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Default_Locale : .Models.CatalogsFeedsCreateRequestDefaultLocale_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Default_Country : .Models.Country_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
       Status : CatalogsStatus_Type;
     end record;


   package CatalogsFeedsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsFeedsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsFeedsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsFeedsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsFeedsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsFeedsCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_feeds_update_request
   --  Request object for updating a feed.
   --  ------------------------------
   type CatalogsRetailFeedsUpdateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.Nullable_UString;
       Format : .Models.CatalogsFormat_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.Nullable_UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
     end record;


   package CatalogsRetailFeedsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailFeedsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailFeedsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailFeedsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailFeedsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailFeedsUpdateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  feeds_update_request
   --  Request object for updating a feed.
   --  ------------------------------
   type CatalogsVerticalFeedsUpdateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.Nullable_UString;
       Format : .Models.CatalogsFormat_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.Nullable_UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
     end record;


   package CatalogsVerticalFeedsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalFeedsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalFeedsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalFeedsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalFeedsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalFeedsUpdateRequest_Type_Vectors.Vector);



   type FeedsUpdateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.Nullable_UString;
       Format : .Models.CatalogsFormat_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.Nullable_UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
     end record;


   package FeedsUpdateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FeedsUpdateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FeedsUpdateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FeedsUpdateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FeedsUpdateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FeedsUpdateRequest_Type_Vectors.Vector);



   type AdGroupCommon_Type is
     record
       Name : Swagger.Nullable_UString;
       Status : .Models.EntityStatus_Type;
       Budget_In_Micro_Currency : Swagger.Nullable_Integer;
       Bid_In_Micro_Currency : Swagger.Nullable_Integer;
       Optimization_Goal_Metadata : .Models.OptimizationGoalMetadata_Type;
       Budget_Type : .Models.BudgetType_Type;
       Start_Time : Swagger.Nullable_Integer;
       End_Time : Swagger.Nullable_Integer;
       Targeting_Spec : .Models.TargetingSpec_Type;
       Lifetime_Frequency_Cap : Swagger.Nullable_Integer;
       Tracking_Urls : .Models.TrackingUrls_Type;
       Auto_Targeting_Enabled : Swagger.Nullable_Boolean;
       Placement_Group : .Models.PlacementGroupType_Type;
       Pacing_Delivery_Type : .Models.PacingDeliveryType_Type;
       Campaign_Id : Swagger.Nullable_UString;
       Billable_Event : .Models.ActionType_Type;
       Bid_Strategy_Type : Swagger.Nullable_UString;
       Targeting_Template_Ids : Swagger.UString_Vectors.Vector;
     end record;


   package AdGroupCommon_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdGroupCommon_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdGroupCommon_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdGroupCommon_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdGroupCommon_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdGroupCommon_Type_Vectors.Vector);


   --  ------------------------------
   --  catalogs_retail_feed
   --  Catalogs Retail Feed object
   --  ------------------------------
   type CatalogsRetailFeed_Type is
     record
       Created_At : Swagger.Datetime;
       Id : Swagger.UString;
       Updated_At : Swagger.Datetime;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Status : .Models.CatalogsStatus_Type;
       Default_Currency : .Models.NullableCurrency_Type;
       Default_Locale : Swagger.UString;
       Default_Country : .Models.Country_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
     end record;


   package CatalogsRetailFeed_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailFeed_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailFeed_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailFeed_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailFeed_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailFeed_Type_Vectors.Vector);


   --  ------------------------------
   --  feeds_retail_create_request
   --  Request object for creating a retail feed.
   --  ------------------------------
   type CatalogsRetailFeedsCreateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Default_Locale : .Models.CatalogsFeedsCreateRequestDefaultLocale_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Default_Country : .Models.Country_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
       Status : CatalogsStatus_Type;
     end record;


   package CatalogsRetailFeedsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsRetailFeedsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsRetailFeedsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsRetailFeedsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsRetailFeedsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsRetailFeedsCreateRequest_Type_Vectors.Vector);


   --  ------------------------------
   --  feeds_create_request
   --  Request object for creating a feed.
   --  ------------------------------
   type CatalogsVerticalFeedsCreateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Default_Locale : .Models.CatalogsFeedsCreateRequestDefaultLocale_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Default_Country : .Models.Country_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
       Status : CatalogsStatus_Type;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package CatalogsVerticalFeedsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.CatalogsVerticalFeedsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.CatalogsVerticalFeedsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CatalogsVerticalFeedsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.CatalogsVerticalFeedsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out CatalogsVerticalFeedsCreateRequest_Type_Vectors.Vector);



   type FeedsCreateRequest_Type is
     record
       Default_Currency : .Models.NullableCurrency_Type;
       Name : Swagger.UString;
       Format : .Models.CatalogsFormat_Type;
       Default_Locale : .Models.CatalogsFeedsCreateRequestDefaultLocale_Type;
       Credentials : .Models.CatalogsFeedCredentials_Type;
       Location : Swagger.UString;
       Preferred_Processing_Schedule : .Models.CatalogsFeedProcessingSchedule_Type;
       Catalog_Type : .Models.CatalogsType_Type;
       Default_Country : .Models.Country_Type;
       Default_Availability : .Models.ProductAvailabilityType_Type;
       Status : CatalogsStatus_Type;
       Catalog_Id : Swagger.Nullable_UString;
     end record;


   package FeedsCreateRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.FeedsCreateRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.FeedsCreateRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FeedsCreateRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.FeedsCreateRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out FeedsCreateRequest_Type_Vectors.Vector);



   type AdsAnalyticsCreateAsyncRequest_Type is
     record
       Start_Date : Swagger.UString;
       End_Date : Swagger.UString;
       Granularity : .Models.Granularity_Type;
       Click_Window_Days : .Models.ConversionAttributionWindowDays_Type;
       Engagement_Window_Days : .Models.ConversionAttributionWindowDays_Type;
       View_Window_Days : .Models.ConversionAttributionWindowDays_Type;
       Conversion_Report_Time : .Models.ConversionReportTimeType_Type;
       Attribution_Types : .Models.ConversionReportAttributionType_Type_Vectors.Vector;
       Campaign_Ids : Swagger.UString_Vectors.Vector;
       Campaign_Statuses : .Models.CampaignSummaryStatus_Type_Vectors.Vector;
       Campaign_Objective_Types : .Models.ObjectiveType_Type_Vectors.Vector;
       Ad_Group_Ids : Swagger.UString_Vectors.Vector;
       Ad_Group_Statuses : .Models.AdGroupSummaryStatus_Type_Vectors.Vector;
       Ad_Ids : Swagger.UString_Vectors.Vector;
       Ad_Statuses : .Models.PinPromotionSummaryStatus_Type_Vectors.Vector;
       Product_Group_Ids : Swagger.UString_Vectors.Vector;
       Product_Group_Statuses : .Models.ProductGroupSummaryStatus_Type_Vectors.Vector;
       Product_Item_Ids : Swagger.UString_Vectors.Vector;
       Targeting_Types : .Models.AdsAnalyticsTargetingType_Type_Vectors.Vector;
       Metrics_Filters : .Models.AdsAnalyticsMetricsFilter_Type_Vectors.Vector;
       Columns : .Models.ReportingColumnAsync_Type_Vectors.Vector;
       Level : .Models.MetricsReportingLevel_Type;
       Report_Format : .Models.DataOutputFormat_Type;
       Primary_Sort : Swagger.Nullable_UString;
       Start_Hour : Swagger.Nullable_Integer;
       End_Hour : Swagger.Nullable_Integer;
     end record;


   package AdsAnalyticsCreateAsyncRequest_Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => .Models.AdsAnalyticsCreateAsyncRequest_Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in .Models.AdsAnalyticsCreateAsyncRequest_Type);
   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AdsAnalyticsCreateAsyncRequest_Type_Vectors.Vector);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out .Models.AdsAnalyticsCreateAsyncRequest_Type);
   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : in out AdsAnalyticsCreateAsyncRequest_Type_Vectors.Vector);


end .Models;
