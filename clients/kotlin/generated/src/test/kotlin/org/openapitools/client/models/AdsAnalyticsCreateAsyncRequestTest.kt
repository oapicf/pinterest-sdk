/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.AdsAnalyticsCreateAsyncRequest
import org.openapitools.client.models.AdGroupSummaryStatus
import org.openapitools.client.models.AdsAnalyticsMetricsFilter
import org.openapitools.client.models.AdsAnalyticsTargetingType
import org.openapitools.client.models.CampaignSummaryStatus
import org.openapitools.client.models.ConversionAttributionWindowDays
import org.openapitools.client.models.ConversionReportAttributionType
import org.openapitools.client.models.ConversionReportTimeType
import org.openapitools.client.models.DataOutputFormat
import org.openapitools.client.models.Granularity
import org.openapitools.client.models.MetricsReportingLevel
import org.openapitools.client.models.ObjectiveType
import org.openapitools.client.models.PinPromotionSummaryStatus
import org.openapitools.client.models.ProductGroupSummaryStatus
import org.openapitools.client.models.ReportingColumnAsync

class AdsAnalyticsCreateAsyncRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AdsAnalyticsCreateAsyncRequest
        //val modelInstance = AdsAnalyticsCreateAsyncRequest()

        // to test the property `startDate` - Metric report start date (UTC). Format: YYYY-MM-DD
        should("test startDate") {
            // uncomment below to test the property
            //modelInstance.startDate shouldBe ("TODO")
        }

        // to test the property `endDate` - Metric report end date (UTC). Format: YYYY-MM-DD
        should("test endDate") {
            // uncomment below to test the property
            //modelInstance.endDate shouldBe ("TODO")
        }

        // to test the property `granularity` - TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
        should("test granularity") {
            // uncomment below to test the property
            //modelInstance.granularity shouldBe ("TODO")
        }

        // to test the property `columns` - Metric and entity columns. Pin promotion and ad related columns are not supported for the Product Item level reports.
        should("test columns") {
            // uncomment below to test the property
            //modelInstance.columns shouldBe ("TODO")
        }

        // to test the property `level` - Level of the report
        should("test level") {
            // uncomment below to test the property
            //modelInstance.level shouldBe ("TODO")
        }

        // to test the property `clickWindowDays` - Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
        should("test clickWindowDays") {
            // uncomment below to test the property
            //modelInstance.clickWindowDays shouldBe ("TODO")
        }

        // to test the property `engagementWindowDays` - Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
        should("test engagementWindowDays") {
            // uncomment below to test the property
            //modelInstance.engagementWindowDays shouldBe ("TODO")
        }

        // to test the property `viewWindowDays` - Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
        should("test viewWindowDays") {
            // uncomment below to test the property
            //modelInstance.viewWindowDays shouldBe ("TODO")
        }

        // to test the property `conversionReportTime` - The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
        should("test conversionReportTime") {
            // uncomment below to test the property
            //modelInstance.conversionReportTime shouldBe ("TODO")
        }

        // to test the property `attributionTypes` - List of types of attribution for the conversion report
        should("test attributionTypes") {
            // uncomment below to test the property
            //modelInstance.attributionTypes shouldBe ("TODO")
        }

        // to test the property `campaignIds` - List of campaign ids
        should("test campaignIds") {
            // uncomment below to test the property
            //modelInstance.campaignIds shouldBe ("TODO")
        }

        // to test the property `campaignStatuses` - List of status values for filtering
        should("test campaignStatuses") {
            // uncomment below to test the property
            //modelInstance.campaignStatuses shouldBe ("TODO")
        }

        // to test the property `campaignObjectiveTypes` - List of values for filtering. [\"WEB_SESSIONS\"] in BETA.
        should("test campaignObjectiveTypes") {
            // uncomment below to test the property
            //modelInstance.campaignObjectiveTypes shouldBe ("TODO")
        }

        // to test the property `adGroupIds` - List of ad group ids
        should("test adGroupIds") {
            // uncomment below to test the property
            //modelInstance.adGroupIds shouldBe ("TODO")
        }

        // to test the property `adGroupStatuses` - List of values for filtering
        should("test adGroupStatuses") {
            // uncomment below to test the property
            //modelInstance.adGroupStatuses shouldBe ("TODO")
        }

        // to test the property `adIds` - List of ad ids [This parameter is no supported for Product Item Level Reports]
        should("test adIds") {
            // uncomment below to test the property
            //modelInstance.adIds shouldBe ("TODO")
        }

        // to test the property `adStatuses` - List of values for filtering [This parameter is not supported for Product Item Level Reports]
        should("test adStatuses") {
            // uncomment below to test the property
            //modelInstance.adStatuses shouldBe ("TODO")
        }

        // to test the property `productGroupIds` - List of product group ids
        should("test productGroupIds") {
            // uncomment below to test the property
            //modelInstance.productGroupIds shouldBe ("TODO")
        }

        // to test the property `productGroupStatuses` - List of values for filtering
        should("test productGroupStatuses") {
            // uncomment below to test the property
            //modelInstance.productGroupStatuses shouldBe ("TODO")
        }

        // to test the property `productItemIds` - List of product item ids
        should("test productItemIds") {
            // uncomment below to test the property
            //modelInstance.productItemIds shouldBe ("TODO")
        }

        // to test the property `targetingTypes` - List of targeting types. Requires `level` to be a value ending in `_TARGETING`. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.
        should("test targetingTypes") {
            // uncomment below to test the property
            //modelInstance.targetingTypes shouldBe ("TODO")
        }

        // to test the property `metricsFilters` - List of metrics filters
        should("test metricsFilters") {
            // uncomment below to test the property
            //modelInstance.metricsFilters shouldBe ("TODO")
        }

        // to test the property `reportFormat` - Specification for formatting the report data. Reports in JSON will not zero-fill metrics, whereas reports in CSV will. Both report formats will omit rows where all the columns are equal to 0.
        should("test reportFormat") {
            // uncomment below to test the property
            //modelInstance.reportFormat shouldBe ("TODO")
        }

        // to test the property `primarySort` - Whether to first sort the report by date or by entity ID of the reporting entity level. Date will be used as the first level key for JSON reports that use BY_DATE. BY_DATE is recommended for large requests.
        should("test primarySort") {
            // uncomment below to test the property
            //modelInstance.primarySort shouldBe ("TODO")
        }

        // to test the property `startHour` - Which hour of the start date to begin the report. The entire day will be included if no start hour is provided. Only allowed for hourly reports.
        should("test startHour") {
            // uncomment below to test the property
            //modelInstance.startHour shouldBe ("TODO")
        }

        // to test the property `endHour` - Which hour of the end date to stop the report (inclusive). For example, with an end_date of '2020-01-01' and end_hour of '15', the report will contain metrics up to '2020-01-01 14:59:59'. The entire day will be included if no end hour is provided. Only allowed for hourly reports.
        should("test endHour") {
            // uncomment below to test the property
            //modelInstance.endHour shouldBe ("TODO")
        }

    }
}
