/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.TargetingTemplateGetResponseData
import org.openapitools.client.models.PlacementGroupType
import org.openapitools.client.models.TargetingSpec
import org.openapitools.client.models.TargetingTemplateAudienceSizing
import org.openapitools.client.models.TargetingTemplateKeyword
import org.openapitools.client.models.TrackingUrls

class TargetingTemplateGetResponseDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TargetingTemplateGetResponseData
        //val modelInstance = TargetingTemplateGetResponseData()

        // to test the property `name` - targeting template name
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `autoTargetingEnabled` - Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
        should("test autoTargetingEnabled") {
            // uncomment below to test the property
            //modelInstance.autoTargetingEnabled shouldBe ("TODO")
        }

        // to test the property `targetingAttributes`
        should("test targetingAttributes") {
            // uncomment below to test the property
            //modelInstance.targetingAttributes shouldBe ("TODO")
        }

        // to test the property `placementGroup`
        should("test placementGroup") {
            // uncomment below to test the property
            //modelInstance.placementGroup shouldBe ("TODO")
        }

        // to test the property `keywords`
        should("test keywords") {
            // uncomment below to test the property
            //modelInstance.keywords shouldBe ("TODO")
        }

        // to test the property `trackingUrls`
        should("test trackingUrls") {
            // uncomment below to test the property
            //modelInstance.trackingUrls shouldBe ("TODO")
        }

        // to test the property `id` - Targeting template ID.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `createdTime` - Targeting template created time. Unix timestamp in seconds.
        should("test createdTime") {
            // uncomment below to test the property
            //modelInstance.createdTime shouldBe ("TODO")
        }

        // to test the property `updatedTime` - Targeting template updated time.Unix timestamp in seconds.
        should("test updatedTime") {
            // uncomment below to test the property
            //modelInstance.updatedTime shouldBe ("TODO")
        }

        // to test the property `adAccountId` - The ID of the advertiser that this targeting template belongs to.
        should("test adAccountId") {
            // uncomment below to test the property
            //modelInstance.adAccountId shouldBe ("TODO")
        }

        // to test the property `status` - Indicate targeting template is active or Deleted
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `sizing`
        should("test sizing") {
            // uncomment below to test the property
            //modelInstance.sizing shouldBe ("TODO")
        }

        // to test the property `valid` - Inform if the targeting template is valid (ex. would be false if has revoked audience)
        should("test valid") {
            // uncomment below to test the property
            //modelInstance.valid shouldBe ("TODO")
        }

    }
}
