/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.PinsApi
import org.openapitools.client.models.Error
import org.openapitools.client.models.Pin
import org.openapitools.client.models.PinAnalyticsMetricsResponse
import org.openapitools.client.models.PinCreate
import org.openapitools.client.models.PinUpdate
import org.openapitools.client.models.PinsAnalyticsMetricTypesParameterInner
import org.openapitools.client.models.PinsList200Response
import org.openapitools.client.models.PinsSaveRequest

class PinsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PinsApi
        //val apiInstance = PinsApi()

        // to test multiPinsAnalytics
        should("test multiPinsAnalytics") {
            // uncomment below to test multiPinsAnalytics
            //val pinIds : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | List of Pin IDs.
            //val startDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
            //val endDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
            //val metricTypes : kotlin.collections.List<PinsAnalyticsMetricTypesParameterInner> =  // kotlin.collections.List<PinsAnalyticsMetricTypesParameterInner> | Pin metric types to get data for.
            //val appTypes : kotlin.String = appTypes_example // kotlin.String | Apps or devices to get data for, default is all.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : kotlin.collections.Map<kotlin.String, kotlin.collections.Map<kotlin.String, PinAnalyticsMetricsResponse>> = apiInstance.multiPinsAnalytics(pinIds, startDate, endDate, metricTypes, appTypes, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test pinsAnalytics
        should("test pinsAnalytics") {
            // uncomment below to test pinsAnalytics
            //val pinId : kotlin.String = pinId_example // kotlin.String | Unique identifier of a Pin.
            //val startDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
            //val endDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
            //val metricTypes : kotlin.collections.List<PinsAnalyticsMetricTypesParameterInner> =  // kotlin.collections.List<PinsAnalyticsMetricTypesParameterInner> | Pin metric types to get data for. VIDEO_MRC_VIEW are Video views, VIDEO_V50_WATCH_TIME is Total play time. If Pin was created before <code>2023-03-20</code>, Profile visits and Follows will only be available for Idea Pins. These metrics are available for all Pin formats since then. Keep in mind this cannot have ALL if split_field is set to any value other than <code>NO_SPLIT</code>.
            //val appTypes : kotlin.String = appTypes_example // kotlin.String | Apps or devices to get data for, default is all.
            //val splitField : kotlin.String = splitField_example // kotlin.String | How to split the data into groups. Not including this param means data won't be split.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : kotlin.collections.Map<kotlin.String, PinAnalyticsMetricsResponse> = apiInstance.pinsAnalytics(pinId, startDate, endDate, metricTypes, appTypes, splitField, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test pinsCreate
        should("test pinsCreate") {
            // uncomment below to test pinsCreate
            //val pinCreate : PinCreate =  // PinCreate | Create a new Pin.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Pin = apiInstance.pinsCreate(pinCreate, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test pinsDelete
        should("test pinsDelete") {
            // uncomment below to test pinsDelete
            //val pinId : kotlin.String = pinId_example // kotlin.String | Unique identifier of a Pin.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //apiInstance.pinsDelete(pinId, adAccountId)
        }

        // to test pinsGet
        should("test pinsGet") {
            // uncomment below to test pinsGet
            //val pinId : kotlin.String = pinId_example // kotlin.String | Unique identifier of a Pin.
            //val pinMetrics : kotlin.Boolean = true // kotlin.Boolean | Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Pin = apiInstance.pinsGet(pinId, pinMetrics, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test pinsList
        should("test pinsList") {
            // uncomment below to test pinsList
            //val bookmark : kotlin.String = bookmark_example // kotlin.String | Cursor used to fetch the next page of items
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
            //val pinFilter : kotlin.String = pinFilter_example // kotlin.String | Pin filter.
            //val includeProtectedPins : kotlin.Boolean = true // kotlin.Boolean | Specify if return pins from protected boards
            //val pinType : kotlin.String = pinType_example // kotlin.String | The type of pins to return, currently only enabled for private pins
            //val creativeTypes : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Pin creative types filter. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val pinMetrics : kotlin.Boolean = true // kotlin.Boolean | Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
            //val result : PinsList200Response = apiInstance.pinsList(bookmark, pageSize, pinFilter, includeProtectedPins, pinType, creativeTypes, adAccountId, pinMetrics)
            //result shouldBe ("TODO")
        }

        // to test pinsSave
        should("test pinsSave") {
            // uncomment below to test pinsSave
            //val pinId : kotlin.String = pinId_example // kotlin.String | Unique identifier of a Pin.
            //val pinsSaveRequest : PinsSaveRequest =  // PinsSaveRequest | Request object used to save an existing pin
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Pin = apiInstance.pinsSave(pinId, pinsSaveRequest, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test pinsUpdate
        should("test pinsUpdate") {
            // uncomment below to test pinsUpdate
            //val pinId : kotlin.String = pinId_example // kotlin.String | Unique identifier of a Pin.
            //val pinUpdate : PinUpdate =  // PinUpdate | 
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Pin = apiInstance.pinsUpdate(pinId, pinUpdate, adAccountId)
            //result shouldBe ("TODO")
        }

    }
}
