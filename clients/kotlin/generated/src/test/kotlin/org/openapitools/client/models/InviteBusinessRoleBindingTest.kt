/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.InviteBusinessRoleBinding
import org.openapitools.client.models.BaseInviteDataResponseInviteData
import org.openapitools.client.models.BusinessAccessUserSummary

class InviteBusinessRoleBindingTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of InviteBusinessRoleBinding
        //val modelInstance = InviteBusinessRoleBinding()

        // to test the property `createdByBusinessId` - Unique identifier for the business that created the invite/request.
        should("test createdByBusinessId") {
            // uncomment below to test the property
            //modelInstance.createdByBusinessId shouldBe ("TODO")
        }

        // to test the property `createdByUserId` - Unique identifier for the user that created the invite/request.
        should("test createdByUserId") {
            // uncomment below to test the property
            //modelInstance.createdByUserId shouldBe ("TODO")
        }

        // to test the property `user` - Metadata for the user that updated the invite/request.
        should("test user") {
            // uncomment below to test the property
            //modelInstance.user shouldBe ("TODO")
        }

        // to test the property `id` - Unique identifier of the invite/request.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `inviteData`
        should("test inviteData") {
            // uncomment below to test the property
            //modelInstance.inviteData shouldBe ("TODO")
        }

        // to test the property `isReceivedInvite` - Indicates whether the invite/request was received.
        should("test isReceivedInvite") {
            // uncomment below to test the property
            //modelInstance.isReceivedInvite shouldBe ("TODO")
        }

    }
}
