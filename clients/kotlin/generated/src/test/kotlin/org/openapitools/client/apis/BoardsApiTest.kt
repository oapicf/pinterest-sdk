/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.BoardsApi
import org.openapitools.client.models.Board
import org.openapitools.client.models.BoardSection
import org.openapitools.client.models.BoardSectionsList200Response
import org.openapitools.client.models.BoardUpdate
import org.openapitools.client.models.BoardsList200Response
import org.openapitools.client.models.BoardsListPins200Response
import org.openapitools.client.models.Error

class BoardsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of BoardsApi
        //val apiInstance = BoardsApi()

        // to test boardSectionsCreate
        should("test boardSectionsCreate") {
            // uncomment below to test boardSectionsCreate
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val boardSection : BoardSection =  // BoardSection | Create a board section.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : BoardSection = apiInstance.boardSectionsCreate(boardId, boardSection, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test boardSectionsDelete
        should("test boardSectionsDelete") {
            // uncomment below to test boardSectionsDelete
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val sectionId : kotlin.String = sectionId_example // kotlin.String | Unique identifier of a board section.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //apiInstance.boardSectionsDelete(boardId, sectionId, adAccountId)
        }

        // to test boardSectionsList
        should("test boardSectionsList") {
            // uncomment below to test boardSectionsList
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val bookmark : kotlin.String = bookmark_example // kotlin.String | Cursor used to fetch the next page of items
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
            //val result : BoardSectionsList200Response = apiInstance.boardSectionsList(boardId, adAccountId, bookmark, pageSize)
            //result shouldBe ("TODO")
        }

        // to test boardSectionsListPins
        should("test boardSectionsListPins") {
            // uncomment below to test boardSectionsListPins
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val sectionId : kotlin.String = sectionId_example // kotlin.String | Unique identifier of a board section.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val bookmark : kotlin.String = bookmark_example // kotlin.String | Cursor used to fetch the next page of items
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
            //val result : BoardsListPins200Response = apiInstance.boardSectionsListPins(boardId, sectionId, adAccountId, bookmark, pageSize)
            //result shouldBe ("TODO")
        }

        // to test boardSectionsUpdate
        should("test boardSectionsUpdate") {
            // uncomment below to test boardSectionsUpdate
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val sectionId : kotlin.String = sectionId_example // kotlin.String | Unique identifier of a board section.
            //val boardSection : BoardSection =  // BoardSection | Update a board section.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : BoardSection = apiInstance.boardSectionsUpdate(boardId, sectionId, boardSection, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test boardsCreate
        should("test boardsCreate") {
            // uncomment below to test boardsCreate
            //val board : Board =  // Board | Create a board using a single board json object.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Board = apiInstance.boardsCreate(board, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test boardsDelete
        should("test boardsDelete") {
            // uncomment below to test boardsDelete
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //apiInstance.boardsDelete(boardId, adAccountId)
        }

        // to test boardsGet
        should("test boardsGet") {
            // uncomment below to test boardsGet
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Board = apiInstance.boardsGet(boardId, adAccountId)
            //result shouldBe ("TODO")
        }

        // to test boardsList
        should("test boardsList") {
            // uncomment below to test boardsList
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val bookmark : kotlin.String = bookmark_example // kotlin.String | Cursor used to fetch the next page of items
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
            //val privacy : kotlin.String = privacy_example // kotlin.String | Privacy setting for a board.
            //val result : BoardsList200Response = apiInstance.boardsList(adAccountId, bookmark, pageSize, privacy)
            //result shouldBe ("TODO")
        }

        // to test boardsListPins
        should("test boardsListPins") {
            // uncomment below to test boardsListPins
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val bookmark : kotlin.String = bookmark_example // kotlin.String | Cursor used to fetch the next page of items
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
            //val creativeTypes : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Pin creative types filter. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val pinMetrics : kotlin.Boolean = true // kotlin.Boolean | Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
            //val result : BoardsListPins200Response = apiInstance.boardsListPins(boardId, bookmark, pageSize, creativeTypes, adAccountId, pinMetrics)
            //result shouldBe ("TODO")
        }

        // to test boardsUpdate
        should("test boardsUpdate") {
            // uncomment below to test boardsUpdate
            //val boardId : kotlin.String = boardId_example // kotlin.String | Unique identifier of a board.
            //val boardUpdate : BoardUpdate =  // BoardUpdate | Update a board.
            //val adAccountId : kotlin.String = adAccountId_example // kotlin.String | Unique identifier of an ad account.
            //val result : Board = apiInstance.boardsUpdate(boardId, boardUpdate, adAccountId)
            //result shouldBe ("TODO")
        }

    }
}
