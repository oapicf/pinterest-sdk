/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.MediaApi
import org.openapitools.client.models.Error
import org.openapitools.client.models.MediaList200Response
import org.openapitools.client.models.MediaUpload
import org.openapitools.client.models.MediaUploadDetails
import org.openapitools.client.models.MediaUploadRequest

class MediaApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MediaApi
        //val apiInstance = MediaApi()

        // to test mediaCreate
        should("test mediaCreate") {
            // uncomment below to test mediaCreate
            //val mediaUploadRequest : MediaUploadRequest =  // MediaUploadRequest | Create a media upload request
            //val result : MediaUpload = apiInstance.mediaCreate(mediaUploadRequest)
            //result shouldBe ("TODO")
        }

        // to test mediaGet
        should("test mediaGet") {
            // uncomment below to test mediaGet
            //val mediaId : kotlin.String = mediaId_example // kotlin.String | Media identifier
            //val result : MediaUploadDetails = apiInstance.mediaGet(mediaId)
            //result shouldBe ("TODO")
        }

        // to test mediaList
        should("test mediaList") {
            // uncomment below to test mediaList
            //val bookmark : kotlin.String = bookmark_example // kotlin.String | Cursor used to fetch the next page of items
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
            //val result : MediaList200Response = apiInstance.mediaList(bookmark, pageSize)
            //result shouldBe ("TODO")
        }

    }
}
