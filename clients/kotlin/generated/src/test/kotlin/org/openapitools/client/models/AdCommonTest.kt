/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.AdCommon
import org.openapitools.client.models.CreativeType
import org.openapitools.client.models.EntityStatus
import org.openapitools.client.models.GridClickType
import org.openapitools.client.models.QuizPinData
import org.openapitools.client.models.TrackingUrls

class AdCommonTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AdCommon
        //val modelInstance = AdCommon()

        // to test the property `adGroupId` - ID of the ad group that contains the ad.
        should("test adGroupId") {
            // uncomment below to test the property
            //modelInstance.adGroupId shouldBe ("TODO")
        }

        // to test the property `androidDeepLink` - Deep link URL for Android devices.
        should("test androidDeepLink") {
            // uncomment below to test the property
            //modelInstance.androidDeepLink shouldBe ("TODO")
        }

        // to test the property `carouselAndroidDeepLinks` - Comma-separated deep links for the carousel pin on Android.
        should("test carouselAndroidDeepLinks") {
            // uncomment below to test the property
            //modelInstance.carouselAndroidDeepLinks shouldBe ("TODO")
        }

        // to test the property `carouselDestinationUrls` - Comma-separated destination URLs for the carousel pin to promote.
        should("test carouselDestinationUrls") {
            // uncomment below to test the property
            //modelInstance.carouselDestinationUrls shouldBe ("TODO")
        }

        // to test the property `carouselIosDeepLinks` - Comma-separated deep links for the carousel pin on iOS.
        should("test carouselIosDeepLinks") {
            // uncomment below to test the property
            //modelInstance.carouselIosDeepLinks shouldBe ("TODO")
        }

        // to test the property `clickTrackingUrl` - Tracking url for the ad clicks.
        should("test clickTrackingUrl") {
            // uncomment below to test the property
            //modelInstance.clickTrackingUrl shouldBe ("TODO")
        }

        // to test the property `creativeType`
        should("test creativeType") {
            // uncomment below to test the property
            //modelInstance.creativeType shouldBe ("TODO")
        }

        // to test the property `destinationUrl` - Destination URL.
        should("test destinationUrl") {
            // uncomment below to test the property
            //modelInstance.destinationUrl shouldBe ("TODO")
        }

        // to test the property `iosDeepLink` - Deep link URL for iOS devices.
        should("test iosDeepLink") {
            // uncomment below to test the property
            //modelInstance.iosDeepLink shouldBe ("TODO")
        }

        // to test the property `isPinDeleted` - Is original pin deleted?
        should("test isPinDeleted") {
            // uncomment below to test the property
            //modelInstance.isPinDeleted shouldBe ("TODO")
        }

        // to test the property `isRemovable` - Is pin repinnable?
        should("test isRemovable") {
            // uncomment below to test the property
            //modelInstance.isRemovable shouldBe ("TODO")
        }

        // to test the property `name` - Name of the ad - 255 chars max.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `trackingUrls`
        should("test trackingUrls") {
            // uncomment below to test the property
            //modelInstance.trackingUrls shouldBe ("TODO")
        }

        // to test the property `viewTrackingUrl` - Tracking URL for ad impressions.
        should("test viewTrackingUrl") {
            // uncomment below to test the property
            //modelInstance.viewTrackingUrl shouldBe ("TODO")
        }

        // to test the property `leadFormId` - Lead form ID for lead ad generation.
        should("test leadFormId") {
            // uncomment below to test the property
            //modelInstance.leadFormId shouldBe ("TODO")
        }

        // to test the property `gridClickType`
        should("test gridClickType") {
            // uncomment below to test the property
            //modelInstance.gridClickType shouldBe ("TODO")
        }

        // to test the property `customizableCtaType` - Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
        should("test customizableCtaType") {
            // uncomment below to test the property
            //modelInstance.customizableCtaType shouldBe ("TODO")
        }

        // to test the property `quizPinData` - Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved.
        should("test quizPinData") {
            // uncomment below to test the property
            //modelInstance.quizPinData shouldBe ("TODO")
        }

    }
}
