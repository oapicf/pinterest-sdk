/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.PinMediaSourceImageBase64
import org.openapitools.client.models.PinMediaSourceImageURL
import org.openapitools.client.models.PinMediaSourceImagesBase64
import org.openapitools.client.models.PinMediaSourceImagesURL
import org.openapitools.client.models.PinMediaSourceImagesURLItemsInner
import org.openapitools.client.models.PinMediaSourcePinURL
import org.openapitools.client.models.PinMediaSourceVideoID

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Pin media source.
 *
 * @param sourceType 
 * @param contentType 
 * @param `data` 
 * @param url 
 * @param mediaId 
 * @param items Array with image objects.
 * @param isStandard Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
 * @param coverImageUrl Cover image url.
 * @param coverImageContentType Content type for cover image Base64.
 * @param coverImageData Cover image Base64.
 * @param index 
 * @param isAffiliateLink This is an affiliate link or sponsored product. The FTC requires disclosure for paid partnerships and affiliate products.
 */


interface PinMediaSource {

    @Json(name = "source_type")
    val sourceType: PinMediaSource.SourceType
    @Json(name = "content_type")
    val contentType: PinMediaSource.ContentType
    @Json(name = "data")
    val `data`: kotlin.String
    @Json(name = "url")
    val url: kotlin.String
    @Json(name = "media_id")
    val mediaId: kotlin.String
    /* Array with image objects. */
    @Json(name = "items")
    val items: kotlin.collections.List<PinMediaSourceImagesURLItemsInner>
    /* Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users. */
    @Json(name = "is_standard")
    val isStandard: kotlin.Boolean?
    /* Cover image url. */
    @Json(name = "cover_image_url")
    val coverImageUrl: kotlin.String?
    /* Content type for cover image Base64. */
    @Json(name = "cover_image_content_type")
    val coverImageContentType: PinMediaSource.CoverImageContentType?
    /* Cover image Base64. */
    @Json(name = "cover_image_data")
    val coverImageData: kotlin.String?
    @Json(name = "index")
    val index: kotlin.Int?
    /* This is an affiliate link or sponsored product. The FTC requires disclosure for paid partnerships and affiliate products. */
    @Json(name = "is_affiliate_link")
    val isAffiliateLink: kotlin.Boolean?
    /**
     * 
     *
     * Values: pin_url
     */
    @JsonClass(generateAdapter = false)
    enum class SourceType(val value: kotlin.String) {
        @Json(name = "pin_url") pin_url("pin_url");
    }
    /**
     * 
     *
     * Values: jpeg,png
     */
    @JsonClass(generateAdapter = false)
    enum class ContentType(val value: kotlin.String) {
        @Json(name = "image/jpeg") jpeg("image/jpeg"),
        @Json(name = "image/png") png("image/png");
    }
    /**
     * Content type for cover image Base64.
     *
     * Values: jpeg,png
     */
    @JsonClass(generateAdapter = false)
    enum class CoverImageContentType(val value: kotlin.String) {
        @Json(name = "image/jpeg") jpeg("image/jpeg"),
        @Json(name = "image/png") png("image/png");
    }

}

