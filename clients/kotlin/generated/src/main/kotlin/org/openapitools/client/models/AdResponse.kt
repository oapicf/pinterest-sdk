/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CreativeType
import org.openapitools.client.models.EntityStatus
import org.openapitools.client.models.GridClickType
import org.openapitools.client.models.PinPromotionSummaryStatus
import org.openapitools.client.models.QuizPinData
import org.openapitools.client.models.TrackingUrls

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param adGroupId ID of the ad group that contains the ad.
 * @param androidDeepLink Deep link URL for Android devices.
 * @param carouselAndroidDeepLinks Comma-separated deep links for the carousel pin on Android.
 * @param carouselDestinationUrls Comma-separated destination URLs for the carousel pin to promote.
 * @param carouselIosDeepLinks Comma-separated deep links for the carousel pin on iOS.
 * @param clickTrackingUrl Tracking url for the ad clicks.
 * @param creativeType 
 * @param destinationUrl Destination URL.
 * @param iosDeepLink Deep link URL for iOS devices.
 * @param isPinDeleted Is original pin deleted?
 * @param isRemovable Is pin repinnable?
 * @param name Name of the ad - 255 chars max.
 * @param status 
 * @param trackingUrls 
 * @param viewTrackingUrl Tracking URL for ad impressions.
 * @param leadFormId Lead form ID for lead ad generation.
 * @param gridClickType 
 * @param customizableCtaType Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
 * @param quizPinData Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved.
 * @param pinId Pin ID.
 * @param adAccountId The ID of the advertiser that this ad belongs to.
 * @param campaignId ID of the ad campaign that contains this ad.
 * @param collectionItemsDestinationUrlTemplate Destination URL template for all items within a collections drawer.
 * @param createdTime Pin creation time. Unix timestamp in seconds.
 * @param id The ID of this ad.
 * @param rejectedReasons Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
 * @param rejectionLabels Text reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
 * @param reviewStatus Ad review status
 * @param type Always \"ad\".
 * @param updatedTime Last update time. Unix timestamp in seconds.
 * @param summaryStatus Ad summary status
 */


data class AdResponse (

    /* ID of the ad group that contains the ad. */
    @Json(name = "ad_group_id")
    val adGroupId: kotlin.String? = null,

    /* Deep link URL for Android devices. */
    @Json(name = "android_deep_link")
    val androidDeepLink: kotlin.String? = null,

    /* Comma-separated deep links for the carousel pin on Android. */
    @Json(name = "carousel_android_deep_links")
    val carouselAndroidDeepLinks: kotlin.collections.List<kotlin.String>? = null,

    /* Comma-separated destination URLs for the carousel pin to promote. */
    @Json(name = "carousel_destination_urls")
    val carouselDestinationUrls: kotlin.collections.List<kotlin.String>? = null,

    /* Comma-separated deep links for the carousel pin on iOS. */
    @Json(name = "carousel_ios_deep_links")
    val carouselIosDeepLinks: kotlin.collections.List<kotlin.String>? = null,

    /* Tracking url for the ad clicks. */
    @Json(name = "click_tracking_url")
    val clickTrackingUrl: kotlin.String? = null,

    @Json(name = "creative_type")
    val creativeType: CreativeType? = null,

    /* Destination URL. */
    @Json(name = "destination_url")
    val destinationUrl: kotlin.String? = null,

    /* Deep link URL for iOS devices. */
    @Json(name = "ios_deep_link")
    val iosDeepLink: kotlin.String? = null,

    /* Is original pin deleted? */
    @Json(name = "is_pin_deleted")
    val isPinDeleted: kotlin.Boolean? = null,

    /* Is pin repinnable? */
    @Json(name = "is_removable")
    val isRemovable: kotlin.Boolean? = null,

    /* Name of the ad - 255 chars max. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "status")
    val status: EntityStatus? = null,

    @Json(name = "tracking_urls")
    val trackingUrls: TrackingUrls? = null,

    /* Tracking URL for ad impressions. */
    @Json(name = "view_tracking_url")
    val viewTrackingUrl: kotlin.String? = null,

    /* Lead form ID for lead ad generation. */
    @Json(name = "lead_form_id")
    val leadFormId: kotlin.String? = null,

    @Json(name = "grid_click_type")
    val gridClickType: GridClickType? = null,

    /* Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only) */
    @Json(name = "customizable_cta_type")
    val customizableCtaType: AdResponse.CustomizableCtaType? = null,

    /* Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved. */
    @Json(name = "quiz_pin_data")
    val quizPinData: QuizPinData? = null,

    /* Pin ID. */
    @Json(name = "pin_id")
    val pinId: kotlin.String? = null,

    /* The ID of the advertiser that this ad belongs to. */
    @Json(name = "ad_account_id")
    val adAccountId: kotlin.String? = null,

    /* ID of the ad campaign that contains this ad. */
    @Json(name = "campaign_id")
    val campaignId: kotlin.String? = null,

    /* Destination URL template for all items within a collections drawer. */
    @Json(name = "collection_items_destination_url_template")
    val collectionItemsDestinationUrlTemplate: kotlin.String? = null,

    /* Pin creation time. Unix timestamp in seconds. */
    @Json(name = "created_time")
    val createdTime: kotlin.Int? = null,

    /* The ID of this ad. */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\". */
    @Json(name = "rejected_reasons")
    val rejectedReasons: kotlin.collections.List<AdResponse.RejectedReasons>? = null,

    /* Text reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\". */
    @Json(name = "rejection_labels")
    val rejectionLabels: kotlin.collections.List<kotlin.String>? = null,

    /* Ad review status */
    @Json(name = "review_status")
    val reviewStatus: AdResponse.ReviewStatus? = null,

    /* Always \"ad\". */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* Last update time. Unix timestamp in seconds. */
    @Json(name = "updated_time")
    val updatedTime: kotlin.Int? = null,

    /* Ad summary status */
    @Json(name = "summary_status")
    val summaryStatus: PinPromotionSummaryStatus? = null

) {

    /**
     * Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
     *
     * Values: GET_OFFER,LEARN_MORE,ORDER_NOW,SHOP_NOW,SIGN_UP,SUBSCRIBE,BUY_NOW,CONTACT_US,GET_QUOTE,VISIT_SITE,APPLY_NOW,BOOK_NOW,REQUEST_DEMO,REGISTER_NOW,FIND_A_DEALER,ADD_TO_CART,WATCH_NOW,READ_MORE
     */
    @JsonClass(generateAdapter = false)
    enum class CustomizableCtaType(val value: kotlin.String) {
        @Json(name = "GET_OFFER") GET_OFFER("GET_OFFER"),
        @Json(name = "LEARN_MORE") LEARN_MORE("LEARN_MORE"),
        @Json(name = "ORDER_NOW") ORDER_NOW("ORDER_NOW"),
        @Json(name = "SHOP_NOW") SHOP_NOW("SHOP_NOW"),
        @Json(name = "SIGN_UP") SIGN_UP("SIGN_UP"),
        @Json(name = "SUBSCRIBE") SUBSCRIBE("SUBSCRIBE"),
        @Json(name = "BUY_NOW") BUY_NOW("BUY_NOW"),
        @Json(name = "CONTACT_US") CONTACT_US("CONTACT_US"),
        @Json(name = "GET_QUOTE") GET_QUOTE("GET_QUOTE"),
        @Json(name = "VISIT_SITE") VISIT_SITE("VISIT_SITE"),
        @Json(name = "APPLY_NOW") APPLY_NOW("APPLY_NOW"),
        @Json(name = "BOOK_NOW") BOOK_NOW("BOOK_NOW"),
        @Json(name = "REQUEST_DEMO") REQUEST_DEMO("REQUEST_DEMO"),
        @Json(name = "REGISTER_NOW") REGISTER_NOW("REGISTER_NOW"),
        @Json(name = "FIND_A_DEALER") FIND_A_DEALER("FIND_A_DEALER"),
        @Json(name = "ADD_TO_CART") ADD_TO_CART("ADD_TO_CART"),
        @Json(name = "WATCH_NOW") WATCH_NOW("WATCH_NOW"),
        @Json(name = "READ_MORE") READ_MORE("READ_MORE");
    }
    /**
     * Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
     *
     * Values: HASHTAGS,PROMOTIONS_AND_PRICES,TARGETING,LANDING_PAGE,CAPS_AND_SYMBOLS,SHOCKING,WEIGHT_LOSS,PROHIBITED_PRODUCT,AUTHENTICITY,NUDITY,CONFUSING_DESIGN,URGENCY,RATINGS,APP,ALCOHOL,CONTESTS,POLITICAL,OTHER,IMAGE,NAR,INCONSISTENT,CLICKBAIT,NO_DESCRIPTION,LOW_QUALITY,EXAGGERATED_CLAIMS,PINTEREST_BRAND,ALCOHOL_NO_SALE,LANDING_PAGE_SPEED,LANDING_PAGE_HARDWALL,LANDING_PAGE_BROKEN,LANDING_PAGE_QUALITY,OUT_OF_STOCK,IMAGE_LOW_QUALITY,IMAGE_BUSY,IMAGE_POORLY_EDITED,IMAGE_BEFORE_AFTER,UGC,FAKE_BUTTONS,WEAPONS,SENSITIVE,UNACCEPTABLE_BUSINESS,SUSPICIOUS_CLAIMS,PHARMA,SUSPICIOUS_SUPPLEMENTS,ILLEGAL_RECREATIONAL_DRUG,LOW_QUALITY_LANDING_PAGE,RESTRICTED_HEALTHCARE,INCONSISTENT_LANG_FR
     */
    @JsonClass(generateAdapter = false)
    enum class RejectedReasons(val value: kotlin.String) {
        @Json(name = "HASHTAGS") HASHTAGS("HASHTAGS"),
        @Json(name = "PROMOTIONS_AND_PRICES") PROMOTIONS_AND_PRICES("PROMOTIONS_AND_PRICES"),
        @Json(name = "TARGETING") TARGETING("TARGETING"),
        @Json(name = "LANDING_PAGE") LANDING_PAGE("LANDING_PAGE"),
        @Json(name = "CAPS_AND_SYMBOLS") CAPS_AND_SYMBOLS("CAPS_AND_SYMBOLS"),
        @Json(name = "SHOCKING") SHOCKING("SHOCKING"),
        @Json(name = "WEIGHT_LOSS") WEIGHT_LOSS("WEIGHT_LOSS"),
        @Json(name = "PROHIBITED_PRODUCT") PROHIBITED_PRODUCT("PROHIBITED_PRODUCT"),
        @Json(name = "AUTHENTICITY") AUTHENTICITY("AUTHENTICITY"),
        @Json(name = "NUDITY") NUDITY("NUDITY"),
        @Json(name = "CONFUSING_DESIGN") CONFUSING_DESIGN("CONFUSING_DESIGN"),
        @Json(name = "URGENCY") URGENCY("URGENCY"),
        @Json(name = "RATINGS") RATINGS("RATINGS"),
        @Json(name = "APP") APP("APP"),
        @Json(name = "ALCOHOL") ALCOHOL("ALCOHOL"),
        @Json(name = "CONTESTS") CONTESTS("CONTESTS"),
        @Json(name = "POLITICAL") POLITICAL("POLITICAL"),
        @Json(name = "OTHER") OTHER("OTHER"),
        @Json(name = "IMAGE") IMAGE("IMAGE"),
        @Json(name = "NAR") NAR("NAR"),
        @Json(name = "INCONSISTENT") INCONSISTENT("INCONSISTENT"),
        @Json(name = "CLICKBAIT") CLICKBAIT("CLICKBAIT"),
        @Json(name = "NO_DESCRIPTION") NO_DESCRIPTION("NO_DESCRIPTION"),
        @Json(name = "LOW_QUALITY") LOW_QUALITY("LOW_QUALITY"),
        @Json(name = "EXAGGERATED_CLAIMS") EXAGGERATED_CLAIMS("EXAGGERATED_CLAIMS"),
        @Json(name = "PINTEREST_BRAND") PINTEREST_BRAND("PINTEREST_BRAND"),
        @Json(name = "ALCOHOL_NO_SALE") ALCOHOL_NO_SALE("ALCOHOL_NO_SALE"),
        @Json(name = "LANDING_PAGE_SPEED") LANDING_PAGE_SPEED("LANDING_PAGE_SPEED"),
        @Json(name = "LANDING_PAGE_HARDWALL") LANDING_PAGE_HARDWALL("LANDING_PAGE_HARDWALL"),
        @Json(name = "LANDING_PAGE_BROKEN") LANDING_PAGE_BROKEN("LANDING_PAGE_BROKEN"),
        @Json(name = "LANDING_PAGE_QUALITY") LANDING_PAGE_QUALITY("LANDING_PAGE_QUALITY"),
        @Json(name = "OUT_OF_STOCK") OUT_OF_STOCK("OUT_OF_STOCK"),
        @Json(name = "IMAGE_LOW_QUALITY") IMAGE_LOW_QUALITY("IMAGE_LOW_QUALITY"),
        @Json(name = "IMAGE_BUSY") IMAGE_BUSY("IMAGE_BUSY"),
        @Json(name = "IMAGE_POORLY_EDITED") IMAGE_POORLY_EDITED("IMAGE_POORLY_EDITED"),
        @Json(name = "IMAGE_BEFORE_AFTER") IMAGE_BEFORE_AFTER("IMAGE_BEFORE_AFTER"),
        @Json(name = "UGC") UGC("UGC"),
        @Json(name = "FAKE_BUTTONS") FAKE_BUTTONS("FAKE_BUTTONS"),
        @Json(name = "WEAPONS") WEAPONS("WEAPONS"),
        @Json(name = "SENSITIVE") SENSITIVE("SENSITIVE"),
        @Json(name = "UNACCEPTABLE_BUSINESS") UNACCEPTABLE_BUSINESS("UNACCEPTABLE_BUSINESS"),
        @Json(name = "SUSPICIOUS_CLAIMS") SUSPICIOUS_CLAIMS("SUSPICIOUS_CLAIMS"),
        @Json(name = "PHARMA") PHARMA("PHARMA"),
        @Json(name = "SUSPICIOUS_SUPPLEMENTS") SUSPICIOUS_SUPPLEMENTS("SUSPICIOUS_SUPPLEMENTS"),
        @Json(name = "ILLEGAL_RECREATIONAL_DRUG") ILLEGAL_RECREATIONAL_DRUG("ILLEGAL_RECREATIONAL_DRUG"),
        @Json(name = "LOW_QUALITY_LANDING_PAGE") LOW_QUALITY_LANDING_PAGE("LOW_QUALITY_LANDING_PAGE"),
        @Json(name = "RESTRICTED_HEALTHCARE") RESTRICTED_HEALTHCARE("RESTRICTED_HEALTHCARE"),
        @Json(name = "INCONSISTENT_LANG_FR") INCONSISTENT_LANG_FR("INCONSISTENT_LANG_FR");
    }
    /**
     * Ad review status
     *
     * Values: OTHER,PENDING,REJECTED,APPROVED
     */
    @JsonClass(generateAdapter = false)
    enum class ReviewStatus(val value: kotlin.String) {
        @Json(name = "OTHER") OTHER("OTHER"),
        @Json(name = "PENDING") PENDING("PENDING"),
        @Json(name = "REJECTED") REJECTED("REJECTED"),
        @Json(name = "APPROVED") APPROVED("APPROVED");
    }

}

