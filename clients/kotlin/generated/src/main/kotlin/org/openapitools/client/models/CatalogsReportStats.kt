/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CatalogsReportDistributionStats
import org.openapitools.client.models.CatalogsReportFeedIngestionStats

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Diagnostics aggregated numbers
 *
 * @param reportType 
 * @param catalogId ID of the catalog entity.
 * @param code The event code that a diagnostics aggregated number references
 * @param codeLabel A human-friendly label for the event code (e.g, 'SPAM')
 * @param message Title message describing the diagnostic issue
 * @param occurrences Number of occurrences of the issue
 * @param severity An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
 * @param ineligibleForAds Indicates if issue makes items ineligible for ads distribution
 * @param ineligibleForOrganic Indicates if issue makes items ineligible for organic distribution
 */


interface CatalogsReportStats {

    @Json(name = "report_type")
    val reportType: CatalogsReportStats.ReportType
    /* ID of the catalog entity. */
    @Json(name = "catalog_id")
    val catalogId: kotlin.String?
    /* The event code that a diagnostics aggregated number references */
    @Json(name = "code")
    val code: kotlin.Int?
    /* A human-friendly label for the event code (e.g, 'SPAM') */
    @Json(name = "code_label")
    val codeLabel: kotlin.String?
    /* Title message describing the diagnostic issue */
    @Json(name = "message")
    val message: kotlin.String?
    /* Number of occurrences of the issue */
    @Json(name = "occurrences")
    val occurrences: kotlin.Int?
    /* An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue */
    @Json(name = "severity")
    val severity: CatalogsReportStats.Severity?
    /* Indicates if issue makes items ineligible for ads distribution */
    @Json(name = "ineligible_for_ads")
    val ineligibleForAds: kotlin.Boolean?
    /* Indicates if issue makes items ineligible for organic distribution */
    @Json(name = "ineligible_for_organic")
    val ineligibleForOrganic: kotlin.Boolean?
    /**
     * 
     *
     * Values: FEED_INGESTION_ISSUES,DISTRIBUTION_ISSUES
     */
    @JsonClass(generateAdapter = false)
    enum class ReportType(val value: kotlin.String) {
        @Json(name = "FEED_INGESTION_ISSUES") FEED_INGESTION_ISSUES("FEED_INGESTION_ISSUES"),
        @Json(name = "DISTRIBUTION_ISSUES") DISTRIBUTION_ISSUES("DISTRIBUTION_ISSUES");
    }
    /**
     * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
     *
     * Values: WARN,ERROR
     */
    @JsonClass(generateAdapter = false)
    enum class Severity(val value: kotlin.String) {
        @Json(name = "WARN") WARN("WARN"),
        @Json(name = "ERROR") ERROR("ERROR");
    }

}

