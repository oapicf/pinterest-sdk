/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param adAccountId Associated ad account ID.
 * @param createdTime Creation time. Unix timestamp in seconds.
 * @param id Customer list ID.
 * @param name Customer list name.
 * @param numBatches Total number of list updates.  List creation counts as one batch. Each <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append</a> or <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
 * @param numRemovedUserRecords Number of removed user records. In a <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call, this counter increases even if the user is not found in the list.
 * @param numUploadedUserRecords Number of uploaded user records. In an <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append API</a> call, this counter increases even if the uploaded user is already in the list.
 * @param status Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
 * @param type Always \"customerlist\".
 * @param updatedTime Last update time. Unix timestamp in seconds.
 * @param exceptions Customer list errors
 */


data class CustomerList (

    /* Associated ad account ID. */
    @Json(name = "ad_account_id")
    val adAccountId: kotlin.String? = null,

    /* Creation time. Unix timestamp in seconds. */
    @Json(name = "created_time")
    val createdTime: java.math.BigDecimal? = null,

    /* Customer list ID. */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* Customer list name. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Total number of list updates.  List creation counts as one batch. Each <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append</a> or <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists. */
    @Json(name = "num_batches")
    val numBatches: java.math.BigDecimal? = null,

    /* Number of removed user records. In a <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call, this counter increases even if the user is not found in the list. */
    @Json(name = "num_removed_user_records")
    val numRemovedUserRecords: java.math.BigDecimal? = null,

    /* Number of uploaded user records. In an <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append API</a> call, this counter increases even if the uploaded user is already in the list. */
    @Json(name = "num_uploaded_user_records")
    val numUploadedUserRecords: java.math.BigDecimal? = null,

    /* Customer list status. TOO_SMALL - the list has less than 100 Pinterest users. */
    @Json(name = "status")
    val status: CustomerList.Status? = null,

    /* Always \"customerlist\". */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* Last update time. Unix timestamp in seconds. */
    @Json(name = "updated_time")
    val updatedTime: java.math.BigDecimal? = null,

    /* Customer list errors */
    @Json(name = "exceptions")
    val exceptions: kotlin.Any? = null

) {

    /**
     * Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
     *
     * Values: PROCESSING,READY,TOO_SMALL,UPLOADING
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "PROCESSING") PROCESSING("PROCESSING"),
        @Json(name = "READY") READY("READY"),
        @Json(name = "TOO_SMALL") TOO_SMALL("TOO_SMALL"),
        @Json(name = "UPLOADING") UPLOADING("UPLOADING");
    }

}

