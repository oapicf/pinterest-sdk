/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.CreativeType;
import com.github.oapicf.pinterestsdk.model.EntityStatus;
import com.github.oapicf.pinterestsdk.model.GridClickType;
import com.github.oapicf.pinterestsdk.model.QuizPinData;
import com.github.oapicf.pinterestsdk.model.TrackingUrls;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * AdCreateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class AdCreateRequest {
  public static final String SERIALIZED_NAME_AD_GROUP_ID = "ad_group_id";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_ID)
  private String adGroupId;

  public static final String SERIALIZED_NAME_ANDROID_DEEP_LINK = "android_deep_link";
  @SerializedName(SERIALIZED_NAME_ANDROID_DEEP_LINK)
  private String androidDeepLink;

  public static final String SERIALIZED_NAME_CAROUSEL_ANDROID_DEEP_LINKS = "carousel_android_deep_links";
  @SerializedName(SERIALIZED_NAME_CAROUSEL_ANDROID_DEEP_LINKS)
  private List<String> carouselAndroidDeepLinks;

  public static final String SERIALIZED_NAME_CAROUSEL_DESTINATION_URLS = "carousel_destination_urls";
  @SerializedName(SERIALIZED_NAME_CAROUSEL_DESTINATION_URLS)
  private List<String> carouselDestinationUrls;

  public static final String SERIALIZED_NAME_CAROUSEL_IOS_DEEP_LINKS = "carousel_ios_deep_links";
  @SerializedName(SERIALIZED_NAME_CAROUSEL_IOS_DEEP_LINKS)
  private List<String> carouselIosDeepLinks;

  public static final String SERIALIZED_NAME_CLICK_TRACKING_URL = "click_tracking_url";
  @SerializedName(SERIALIZED_NAME_CLICK_TRACKING_URL)
  private String clickTrackingUrl;

  public static final String SERIALIZED_NAME_CREATIVE_TYPE = "creative_type";
  @SerializedName(SERIALIZED_NAME_CREATIVE_TYPE)
  private CreativeType creativeType;

  public static final String SERIALIZED_NAME_DESTINATION_URL = "destination_url";
  @SerializedName(SERIALIZED_NAME_DESTINATION_URL)
  private String destinationUrl;

  public static final String SERIALIZED_NAME_IOS_DEEP_LINK = "ios_deep_link";
  @SerializedName(SERIALIZED_NAME_IOS_DEEP_LINK)
  private String iosDeepLink;

  public static final String SERIALIZED_NAME_IS_PIN_DELETED = "is_pin_deleted";
  @SerializedName(SERIALIZED_NAME_IS_PIN_DELETED)
  private Boolean isPinDeleted;

  public static final String SERIALIZED_NAME_IS_REMOVABLE = "is_removable";
  @SerializedName(SERIALIZED_NAME_IS_REMOVABLE)
  private Boolean isRemovable;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EntityStatus status;

  public static final String SERIALIZED_NAME_TRACKING_URLS = "tracking_urls";
  @SerializedName(SERIALIZED_NAME_TRACKING_URLS)
  private TrackingUrls trackingUrls;

  public static final String SERIALIZED_NAME_VIEW_TRACKING_URL = "view_tracking_url";
  @SerializedName(SERIALIZED_NAME_VIEW_TRACKING_URL)
  private String viewTrackingUrl;

  public static final String SERIALIZED_NAME_LEAD_FORM_ID = "lead_form_id";
  @SerializedName(SERIALIZED_NAME_LEAD_FORM_ID)
  private String leadFormId;

  public static final String SERIALIZED_NAME_GRID_CLICK_TYPE = "grid_click_type";
  @SerializedName(SERIALIZED_NAME_GRID_CLICK_TYPE)
  private GridClickType gridClickType;

  /**
   * Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
   */
  @JsonAdapter(CustomizableCtaTypeEnum.Adapter.class)
  public enum CustomizableCtaTypeEnum {
    GET_OFFER("GET_OFFER"),
    
    LEARN_MORE("LEARN_MORE"),
    
    ORDER_NOW("ORDER_NOW"),
    
    SHOP_NOW("SHOP_NOW"),
    
    SIGN_UP("SIGN_UP"),
    
    SUBSCRIBE("SUBSCRIBE"),
    
    BUY_NOW("BUY_NOW"),
    
    CONTACT_US("CONTACT_US"),
    
    GET_QUOTE("GET_QUOTE"),
    
    VISIT_SITE("VISIT_SITE"),
    
    APPLY_NOW("APPLY_NOW"),
    
    BOOK_NOW("BOOK_NOW"),
    
    REQUEST_DEMO("REQUEST_DEMO"),
    
    REGISTER_NOW("REGISTER_NOW"),
    
    FIND_A_DEALER("FIND_A_DEALER"),
    
    ADD_TO_CART("ADD_TO_CART"),
    
    WATCH_NOW("WATCH_NOW"),
    
    READ_MORE("READ_MORE");

    private String value;

    CustomizableCtaTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomizableCtaTypeEnum fromValue(String value) {
      for (CustomizableCtaTypeEnum b : CustomizableCtaTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CustomizableCtaTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomizableCtaTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomizableCtaTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CustomizableCtaTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CustomizableCtaTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CUSTOMIZABLE_CTA_TYPE = "customizable_cta_type";
  @SerializedName(SERIALIZED_NAME_CUSTOMIZABLE_CTA_TYPE)
  private CustomizableCtaTypeEnum customizableCtaType;

  public static final String SERIALIZED_NAME_QUIZ_PIN_DATA = "quiz_pin_data";
  @SerializedName(SERIALIZED_NAME_QUIZ_PIN_DATA)
  private QuizPinData quizPinData;

  public static final String SERIALIZED_NAME_PIN_ID = "pin_id";
  @SerializedName(SERIALIZED_NAME_PIN_ID)
  private String pinId;

  public AdCreateRequest() {
  }

  public AdCreateRequest adGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
    return this;
  }

  /**
   * ID of the ad group that contains the ad.
   * @return adGroupId
   */
  @javax.annotation.Nonnull
  public String getAdGroupId() {
    return adGroupId;
  }

  public void setAdGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
  }


  public AdCreateRequest androidDeepLink(String androidDeepLink) {
    this.androidDeepLink = androidDeepLink;
    return this;
  }

  /**
   * Deep link URL for Android devices.
   * @return androidDeepLink
   */
  @javax.annotation.Nullable
  public String getAndroidDeepLink() {
    return androidDeepLink;
  }

  public void setAndroidDeepLink(String androidDeepLink) {
    this.androidDeepLink = androidDeepLink;
  }


  public AdCreateRequest carouselAndroidDeepLinks(List<String> carouselAndroidDeepLinks) {
    this.carouselAndroidDeepLinks = carouselAndroidDeepLinks;
    return this;
  }

  public AdCreateRequest addCarouselAndroidDeepLinksItem(String carouselAndroidDeepLinksItem) {
    if (this.carouselAndroidDeepLinks == null) {
      this.carouselAndroidDeepLinks = new ArrayList<>();
    }
    this.carouselAndroidDeepLinks.add(carouselAndroidDeepLinksItem);
    return this;
  }

  /**
   * Comma-separated deep links for the carousel pin on Android.
   * @return carouselAndroidDeepLinks
   */
  @javax.annotation.Nullable
  public List<String> getCarouselAndroidDeepLinks() {
    return carouselAndroidDeepLinks;
  }

  public void setCarouselAndroidDeepLinks(List<String> carouselAndroidDeepLinks) {
    this.carouselAndroidDeepLinks = carouselAndroidDeepLinks;
  }


  public AdCreateRequest carouselDestinationUrls(List<String> carouselDestinationUrls) {
    this.carouselDestinationUrls = carouselDestinationUrls;
    return this;
  }

  public AdCreateRequest addCarouselDestinationUrlsItem(String carouselDestinationUrlsItem) {
    if (this.carouselDestinationUrls == null) {
      this.carouselDestinationUrls = new ArrayList<>();
    }
    this.carouselDestinationUrls.add(carouselDestinationUrlsItem);
    return this;
  }

  /**
   * Comma-separated destination URLs for the carousel pin to promote.
   * @return carouselDestinationUrls
   */
  @javax.annotation.Nullable
  public List<String> getCarouselDestinationUrls() {
    return carouselDestinationUrls;
  }

  public void setCarouselDestinationUrls(List<String> carouselDestinationUrls) {
    this.carouselDestinationUrls = carouselDestinationUrls;
  }


  public AdCreateRequest carouselIosDeepLinks(List<String> carouselIosDeepLinks) {
    this.carouselIosDeepLinks = carouselIosDeepLinks;
    return this;
  }

  public AdCreateRequest addCarouselIosDeepLinksItem(String carouselIosDeepLinksItem) {
    if (this.carouselIosDeepLinks == null) {
      this.carouselIosDeepLinks = new ArrayList<>();
    }
    this.carouselIosDeepLinks.add(carouselIosDeepLinksItem);
    return this;
  }

  /**
   * Comma-separated deep links for the carousel pin on iOS.
   * @return carouselIosDeepLinks
   */
  @javax.annotation.Nullable
  public List<String> getCarouselIosDeepLinks() {
    return carouselIosDeepLinks;
  }

  public void setCarouselIosDeepLinks(List<String> carouselIosDeepLinks) {
    this.carouselIosDeepLinks = carouselIosDeepLinks;
  }


  public AdCreateRequest clickTrackingUrl(String clickTrackingUrl) {
    this.clickTrackingUrl = clickTrackingUrl;
    return this;
  }

  /**
   * Tracking url for the ad clicks.
   * @return clickTrackingUrl
   */
  @javax.annotation.Nullable
  public String getClickTrackingUrl() {
    return clickTrackingUrl;
  }

  public void setClickTrackingUrl(String clickTrackingUrl) {
    this.clickTrackingUrl = clickTrackingUrl;
  }


  public AdCreateRequest creativeType(CreativeType creativeType) {
    this.creativeType = creativeType;
    return this;
  }

  /**
   * Get creativeType
   * @return creativeType
   */
  @javax.annotation.Nonnull
  public CreativeType getCreativeType() {
    return creativeType;
  }

  public void setCreativeType(CreativeType creativeType) {
    this.creativeType = creativeType;
  }


  public AdCreateRequest destinationUrl(String destinationUrl) {
    this.destinationUrl = destinationUrl;
    return this;
  }

  /**
   * Destination URL.
   * @return destinationUrl
   */
  @javax.annotation.Nullable
  public String getDestinationUrl() {
    return destinationUrl;
  }

  public void setDestinationUrl(String destinationUrl) {
    this.destinationUrl = destinationUrl;
  }


  public AdCreateRequest iosDeepLink(String iosDeepLink) {
    this.iosDeepLink = iosDeepLink;
    return this;
  }

  /**
   * Deep link URL for iOS devices.
   * @return iosDeepLink
   */
  @javax.annotation.Nullable
  public String getIosDeepLink() {
    return iosDeepLink;
  }

  public void setIosDeepLink(String iosDeepLink) {
    this.iosDeepLink = iosDeepLink;
  }


  public AdCreateRequest isPinDeleted(Boolean isPinDeleted) {
    this.isPinDeleted = isPinDeleted;
    return this;
  }

  /**
   * Is original pin deleted?
   * @return isPinDeleted
   */
  @javax.annotation.Nullable
  public Boolean getIsPinDeleted() {
    return isPinDeleted;
  }

  public void setIsPinDeleted(Boolean isPinDeleted) {
    this.isPinDeleted = isPinDeleted;
  }


  public AdCreateRequest isRemovable(Boolean isRemovable) {
    this.isRemovable = isRemovable;
    return this;
  }

  /**
   * Is pin repinnable?
   * @return isRemovable
   */
  @javax.annotation.Nullable
  public Boolean getIsRemovable() {
    return isRemovable;
  }

  public void setIsRemovable(Boolean isRemovable) {
    this.isRemovable = isRemovable;
  }


  public AdCreateRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the ad - 255 chars max.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AdCreateRequest status(EntityStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EntityStatus getStatus() {
    return status;
  }

  public void setStatus(EntityStatus status) {
    this.status = status;
  }


  public AdCreateRequest trackingUrls(TrackingUrls trackingUrls) {
    this.trackingUrls = trackingUrls;
    return this;
  }

  /**
   * Get trackingUrls
   * @return trackingUrls
   */
  @javax.annotation.Nullable
  public TrackingUrls getTrackingUrls() {
    return trackingUrls;
  }

  public void setTrackingUrls(TrackingUrls trackingUrls) {
    this.trackingUrls = trackingUrls;
  }


  public AdCreateRequest viewTrackingUrl(String viewTrackingUrl) {
    this.viewTrackingUrl = viewTrackingUrl;
    return this;
  }

  /**
   * Tracking URL for ad impressions.
   * @return viewTrackingUrl
   */
  @javax.annotation.Nullable
  public String getViewTrackingUrl() {
    return viewTrackingUrl;
  }

  public void setViewTrackingUrl(String viewTrackingUrl) {
    this.viewTrackingUrl = viewTrackingUrl;
  }


  public AdCreateRequest leadFormId(String leadFormId) {
    this.leadFormId = leadFormId;
    return this;
  }

  /**
   * Lead form ID for lead ad generation.
   * @return leadFormId
   */
  @javax.annotation.Nullable
  public String getLeadFormId() {
    return leadFormId;
  }

  public void setLeadFormId(String leadFormId) {
    this.leadFormId = leadFormId;
  }


  public AdCreateRequest gridClickType(GridClickType gridClickType) {
    this.gridClickType = gridClickType;
    return this;
  }

  /**
   * Get gridClickType
   * @return gridClickType
   */
  @javax.annotation.Nullable
  public GridClickType getGridClickType() {
    return gridClickType;
  }

  public void setGridClickType(GridClickType gridClickType) {
    this.gridClickType = gridClickType;
  }


  public AdCreateRequest customizableCtaType(CustomizableCtaTypeEnum customizableCtaType) {
    this.customizableCtaType = customizableCtaType;
    return this;
  }

  /**
   * Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
   * @return customizableCtaType
   */
  @javax.annotation.Nullable
  public CustomizableCtaTypeEnum getCustomizableCtaType() {
    return customizableCtaType;
  }

  public void setCustomizableCtaType(CustomizableCtaTypeEnum customizableCtaType) {
    this.customizableCtaType = customizableCtaType;
  }


  public AdCreateRequest quizPinData(QuizPinData quizPinData) {
    this.quizPinData = quizPinData;
    return this;
  }

  /**
   * Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved.
   * @return quizPinData
   */
  @javax.annotation.Nullable
  public QuizPinData getQuizPinData() {
    return quizPinData;
  }

  public void setQuizPinData(QuizPinData quizPinData) {
    this.quizPinData = quizPinData;
  }


  public AdCreateRequest pinId(String pinId) {
    this.pinId = pinId;
    return this;
  }

  /**
   * Pin ID.
   * @return pinId
   */
  @javax.annotation.Nonnull
  public String getPinId() {
    return pinId;
  }

  public void setPinId(String pinId) {
    this.pinId = pinId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdCreateRequest adCreateRequest = (AdCreateRequest) o;
    return Objects.equals(this.adGroupId, adCreateRequest.adGroupId) &&
        Objects.equals(this.androidDeepLink, adCreateRequest.androidDeepLink) &&
        Objects.equals(this.carouselAndroidDeepLinks, adCreateRequest.carouselAndroidDeepLinks) &&
        Objects.equals(this.carouselDestinationUrls, adCreateRequest.carouselDestinationUrls) &&
        Objects.equals(this.carouselIosDeepLinks, adCreateRequest.carouselIosDeepLinks) &&
        Objects.equals(this.clickTrackingUrl, adCreateRequest.clickTrackingUrl) &&
        Objects.equals(this.creativeType, adCreateRequest.creativeType) &&
        Objects.equals(this.destinationUrl, adCreateRequest.destinationUrl) &&
        Objects.equals(this.iosDeepLink, adCreateRequest.iosDeepLink) &&
        Objects.equals(this.isPinDeleted, adCreateRequest.isPinDeleted) &&
        Objects.equals(this.isRemovable, adCreateRequest.isRemovable) &&
        Objects.equals(this.name, adCreateRequest.name) &&
        Objects.equals(this.status, adCreateRequest.status) &&
        Objects.equals(this.trackingUrls, adCreateRequest.trackingUrls) &&
        Objects.equals(this.viewTrackingUrl, adCreateRequest.viewTrackingUrl) &&
        Objects.equals(this.leadFormId, adCreateRequest.leadFormId) &&
        Objects.equals(this.gridClickType, adCreateRequest.gridClickType) &&
        Objects.equals(this.customizableCtaType, adCreateRequest.customizableCtaType) &&
        Objects.equals(this.quizPinData, adCreateRequest.quizPinData) &&
        Objects.equals(this.pinId, adCreateRequest.pinId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(adGroupId, androidDeepLink, carouselAndroidDeepLinks, carouselDestinationUrls, carouselIosDeepLinks, clickTrackingUrl, creativeType, destinationUrl, iosDeepLink, isPinDeleted, isRemovable, name, status, trackingUrls, viewTrackingUrl, leadFormId, gridClickType, customizableCtaType, quizPinData, pinId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdCreateRequest {\n");
    sb.append("    adGroupId: ").append(toIndentedString(adGroupId)).append("\n");
    sb.append("    androidDeepLink: ").append(toIndentedString(androidDeepLink)).append("\n");
    sb.append("    carouselAndroidDeepLinks: ").append(toIndentedString(carouselAndroidDeepLinks)).append("\n");
    sb.append("    carouselDestinationUrls: ").append(toIndentedString(carouselDestinationUrls)).append("\n");
    sb.append("    carouselIosDeepLinks: ").append(toIndentedString(carouselIosDeepLinks)).append("\n");
    sb.append("    clickTrackingUrl: ").append(toIndentedString(clickTrackingUrl)).append("\n");
    sb.append("    creativeType: ").append(toIndentedString(creativeType)).append("\n");
    sb.append("    destinationUrl: ").append(toIndentedString(destinationUrl)).append("\n");
    sb.append("    iosDeepLink: ").append(toIndentedString(iosDeepLink)).append("\n");
    sb.append("    isPinDeleted: ").append(toIndentedString(isPinDeleted)).append("\n");
    sb.append("    isRemovable: ").append(toIndentedString(isRemovable)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trackingUrls: ").append(toIndentedString(trackingUrls)).append("\n");
    sb.append("    viewTrackingUrl: ").append(toIndentedString(viewTrackingUrl)).append("\n");
    sb.append("    leadFormId: ").append(toIndentedString(leadFormId)).append("\n");
    sb.append("    gridClickType: ").append(toIndentedString(gridClickType)).append("\n");
    sb.append("    customizableCtaType: ").append(toIndentedString(customizableCtaType)).append("\n");
    sb.append("    quizPinData: ").append(toIndentedString(quizPinData)).append("\n");
    sb.append("    pinId: ").append(toIndentedString(pinId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ad_group_id");
    openapiFields.add("android_deep_link");
    openapiFields.add("carousel_android_deep_links");
    openapiFields.add("carousel_destination_urls");
    openapiFields.add("carousel_ios_deep_links");
    openapiFields.add("click_tracking_url");
    openapiFields.add("creative_type");
    openapiFields.add("destination_url");
    openapiFields.add("ios_deep_link");
    openapiFields.add("is_pin_deleted");
    openapiFields.add("is_removable");
    openapiFields.add("name");
    openapiFields.add("status");
    openapiFields.add("tracking_urls");
    openapiFields.add("view_tracking_url");
    openapiFields.add("lead_form_id");
    openapiFields.add("grid_click_type");
    openapiFields.add("customizable_cta_type");
    openapiFields.add("quiz_pin_data");
    openapiFields.add("pin_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ad_group_id");
    openapiRequiredFields.add("creative_type");
    openapiRequiredFields.add("pin_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdCreateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdCreateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdCreateRequest is not found in the empty JSON string", AdCreateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdCreateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdCreateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AdCreateRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ad_group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ad_group_id").toString()));
      }
      if ((jsonObj.get("android_deep_link") != null && !jsonObj.get("android_deep_link").isJsonNull()) && !jsonObj.get("android_deep_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `android_deep_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("android_deep_link").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("carousel_android_deep_links") != null && !jsonObj.get("carousel_android_deep_links").isJsonNull() && !jsonObj.get("carousel_android_deep_links").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `carousel_android_deep_links` to be an array in the JSON string but got `%s`", jsonObj.get("carousel_android_deep_links").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("carousel_destination_urls") != null && !jsonObj.get("carousel_destination_urls").isJsonNull() && !jsonObj.get("carousel_destination_urls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `carousel_destination_urls` to be an array in the JSON string but got `%s`", jsonObj.get("carousel_destination_urls").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("carousel_ios_deep_links") != null && !jsonObj.get("carousel_ios_deep_links").isJsonNull() && !jsonObj.get("carousel_ios_deep_links").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `carousel_ios_deep_links` to be an array in the JSON string but got `%s`", jsonObj.get("carousel_ios_deep_links").toString()));
      }
      if ((jsonObj.get("click_tracking_url") != null && !jsonObj.get("click_tracking_url").isJsonNull()) && !jsonObj.get("click_tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `click_tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("click_tracking_url").toString()));
      }
      // validate the required field `creative_type`
      CreativeType.validateJsonElement(jsonObj.get("creative_type"));
      if ((jsonObj.get("destination_url") != null && !jsonObj.get("destination_url").isJsonNull()) && !jsonObj.get("destination_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_url").toString()));
      }
      if ((jsonObj.get("ios_deep_link") != null && !jsonObj.get("ios_deep_link").isJsonNull()) && !jsonObj.get("ios_deep_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ios_deep_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ios_deep_link").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        EntityStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `tracking_urls`
      if (jsonObj.get("tracking_urls") != null && !jsonObj.get("tracking_urls").isJsonNull()) {
        TrackingUrls.validateJsonElement(jsonObj.get("tracking_urls"));
      }
      if ((jsonObj.get("view_tracking_url") != null && !jsonObj.get("view_tracking_url").isJsonNull()) && !jsonObj.get("view_tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_tracking_url").toString()));
      }
      if ((jsonObj.get("lead_form_id") != null && !jsonObj.get("lead_form_id").isJsonNull()) && !jsonObj.get("lead_form_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lead_form_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lead_form_id").toString()));
      }
      // validate the optional field `grid_click_type`
      if (jsonObj.get("grid_click_type") != null && !jsonObj.get("grid_click_type").isJsonNull()) {
        GridClickType.validateJsonElement(jsonObj.get("grid_click_type"));
      }
      if ((jsonObj.get("customizable_cta_type") != null && !jsonObj.get("customizable_cta_type").isJsonNull()) && !jsonObj.get("customizable_cta_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customizable_cta_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customizable_cta_type").toString()));
      }
      // validate the optional field `customizable_cta_type`
      if (jsonObj.get("customizable_cta_type") != null && !jsonObj.get("customizable_cta_type").isJsonNull()) {
        CustomizableCtaTypeEnum.validateJsonElement(jsonObj.get("customizable_cta_type"));
      }
      // validate the optional field `quiz_pin_data`
      if (jsonObj.get("quiz_pin_data") != null && !jsonObj.get("quiz_pin_data").isJsonNull()) {
        QuizPinData.validateJsonElement(jsonObj.get("quiz_pin_data"));
      }
      if (!jsonObj.get("pin_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pin_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pin_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AdCreateRequest>() {
           @Override
           public void write(JsonWriter out, AdCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdCreateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdCreateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdCreateRequest
   * @throws IOException if the JSON string is invalid with respect to AdCreateRequest
   */
  public static AdCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdCreateRequest.class);
  }

  /**
   * Convert an instance of AdCreateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

