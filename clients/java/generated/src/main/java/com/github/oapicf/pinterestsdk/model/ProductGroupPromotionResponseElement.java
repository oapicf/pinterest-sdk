/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.CreativeType;
import com.github.oapicf.pinterestsdk.model.EntityStatus;
import com.github.oapicf.pinterestsdk.model.GridClickType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * ProductGroupPromotionResponseElement
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class ProductGroupPromotionResponseElement {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_AD_GROUP_ID = "ad_group_id";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_ID)
  private String adGroupId;

  public static final String SERIALIZED_NAME_BID_IN_MICRO_CURRENCY = "bid_in_micro_currency";
  @SerializedName(SERIALIZED_NAME_BID_IN_MICRO_CURRENCY)
  private Integer bidInMicroCurrency;

  public static final String SERIALIZED_NAME_INCLUDED = "included";
  @SerializedName(SERIALIZED_NAME_INCLUDED)
  private Boolean included;

  public static final String SERIALIZED_NAME_DEFINITION = "definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private String definition;

  public static final String SERIALIZED_NAME_RELATIVE_DEFINITION = "relative_definition";
  @SerializedName(SERIALIZED_NAME_RELATIVE_DEFINITION)
  private String relativeDefinition;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_SLIDESHOW_COLLECTIONS_TITLE = "slideshow_collections_title";
  @SerializedName(SERIALIZED_NAME_SLIDESHOW_COLLECTIONS_TITLE)
  private String slideshowCollectionsTitle;

  public static final String SERIALIZED_NAME_SLIDESHOW_COLLECTIONS_DESCRIPTION = "slideshow_collections_description";
  @SerializedName(SERIALIZED_NAME_SLIDESHOW_COLLECTIONS_DESCRIPTION)
  private String slideshowCollectionsDescription;

  public static final String SERIALIZED_NAME_IS_MDL = "is_mdl";
  @SerializedName(SERIALIZED_NAME_IS_MDL)
  private Boolean isMdl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EntityStatus status;

  public static final String SERIALIZED_NAME_TRACKING_URL = "tracking_url";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public static final String SERIALIZED_NAME_CATALOG_PRODUCT_GROUP_ID = "catalog_product_group_id";
  @SerializedName(SERIALIZED_NAME_CATALOG_PRODUCT_GROUP_ID)
  private String catalogProductGroupId;

  public static final String SERIALIZED_NAME_CATALOG_PRODUCT_GROUP_NAME = "catalog_product_group_name";
  @SerializedName(SERIALIZED_NAME_CATALOG_PRODUCT_GROUP_NAME)
  private String catalogProductGroupName;

  public static final String SERIALIZED_NAME_COLLECTIONS_HERO_PIN_ID = "collections_hero_pin_id";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS_HERO_PIN_ID)
  private String collectionsHeroPinId;

  public static final String SERIALIZED_NAME_COLLECTIONS_HERO_DESTINATION_URL = "collections_hero_destination_url";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS_HERO_DESTINATION_URL)
  private String collectionsHeroDestinationUrl;

  public static final String SERIALIZED_NAME_GRID_CLICK_TYPE = "grid_click_type";
  @SerializedName(SERIALIZED_NAME_GRID_CLICK_TYPE)
  private GridClickType gridClickType;

  public static final String SERIALIZED_NAME_CREATIVE_TYPE = "creative_type";
  @SerializedName(SERIALIZED_NAME_CREATIVE_TYPE)
  private CreativeType creativeType;

  public ProductGroupPromotionResponseElement() {
  }

  public ProductGroupPromotionResponseElement id(String id) {
    this.id = id;
    return this;
  }

  /**
   * ID of the product group promotion.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ProductGroupPromotionResponseElement adGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
    return this;
  }

  /**
   * ID of the ad group the product group belongs to.
   * @return adGroupId
   */
  @javax.annotation.Nullable
  public String getAdGroupId() {
    return adGroupId;
  }

  public void setAdGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
  }


  public ProductGroupPromotionResponseElement bidInMicroCurrency(Integer bidInMicroCurrency) {
    this.bidInMicroCurrency = bidInMicroCurrency;
    return this;
  }

  /**
   * The bid in micro currency.
   * @return bidInMicroCurrency
   */
  @javax.annotation.Nullable
  public Integer getBidInMicroCurrency() {
    return bidInMicroCurrency;
  }

  public void setBidInMicroCurrency(Integer bidInMicroCurrency) {
    this.bidInMicroCurrency = bidInMicroCurrency;
  }


  public ProductGroupPromotionResponseElement included(Boolean included) {
    this.included = included;
    return this;
  }

  /**
   * True if the group is BIDDABLE, false if it should be EXCLUDED from serving ads.
   * @return included
   */
  @javax.annotation.Nullable
  public Boolean getIncluded() {
    return included;
  }

  public void setIncluded(Boolean included) {
    this.included = included;
  }


  public ProductGroupPromotionResponseElement definition(String definition) {
    this.definition = definition;
    return this;
  }

  /**
   * The full product group definition path
   * @return definition
   */
  @javax.annotation.Nullable
  public String getDefinition() {
    return definition;
  }

  public void setDefinition(String definition) {
    this.definition = definition;
  }


  public ProductGroupPromotionResponseElement relativeDefinition(String relativeDefinition) {
    this.relativeDefinition = relativeDefinition;
    return this;
  }

  /**
   * The definition of the product group, relative to its parent - an attribute name/value pair
   * @return relativeDefinition
   */
  @javax.annotation.Nullable
  public String getRelativeDefinition() {
    return relativeDefinition;
  }

  public void setRelativeDefinition(String relativeDefinition) {
    this.relativeDefinition = relativeDefinition;
  }


  public ProductGroupPromotionResponseElement parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * The parent Product Group ID of this Product Group
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public ProductGroupPromotionResponseElement slideshowCollectionsTitle(String slideshowCollectionsTitle) {
    this.slideshowCollectionsTitle = slideshowCollectionsTitle;
    return this;
  }

  /**
   * Slideshow Collections Title
   * @return slideshowCollectionsTitle
   */
  @javax.annotation.Nullable
  public String getSlideshowCollectionsTitle() {
    return slideshowCollectionsTitle;
  }

  public void setSlideshowCollectionsTitle(String slideshowCollectionsTitle) {
    this.slideshowCollectionsTitle = slideshowCollectionsTitle;
  }


  public ProductGroupPromotionResponseElement slideshowCollectionsDescription(String slideshowCollectionsDescription) {
    this.slideshowCollectionsDescription = slideshowCollectionsDescription;
    return this;
  }

  /**
   * Slideshow Collections Description
   * @return slideshowCollectionsDescription
   */
  @javax.annotation.Nullable
  public String getSlideshowCollectionsDescription() {
    return slideshowCollectionsDescription;
  }

  public void setSlideshowCollectionsDescription(String slideshowCollectionsDescription) {
    this.slideshowCollectionsDescription = slideshowCollectionsDescription;
  }


  public ProductGroupPromotionResponseElement isMdl(Boolean isMdl) {
    this.isMdl = isMdl;
    return this;
  }

  /**
   * If set to true products promoted in this product group will use the Mobile Deep Link specified in your catalog
   * @return isMdl
   */
  @javax.annotation.Nullable
  public Boolean getIsMdl() {
    return isMdl;
  }

  public void setIsMdl(Boolean isMdl) {
    this.isMdl = isMdl;
  }


  public ProductGroupPromotionResponseElement status(EntityStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EntityStatus getStatus() {
    return status;
  }

  public void setStatus(EntityStatus status) {
    this.status = status;
  }


  public ProductGroupPromotionResponseElement trackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  /**
   * Tracking template for proudct group promotions. 4000 limit
   * @return trackingUrl
   */
  @javax.annotation.Nullable
  public String getTrackingUrl() {
    return trackingUrl;
  }

  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }


  public ProductGroupPromotionResponseElement catalogProductGroupId(String catalogProductGroupId) {
    this.catalogProductGroupId = catalogProductGroupId;
    return this;
  }

  /**
   * ID of the catalogs product group that this product group promotion references
   * @return catalogProductGroupId
   */
  @javax.annotation.Nullable
  public String getCatalogProductGroupId() {
    return catalogProductGroupId;
  }

  public void setCatalogProductGroupId(String catalogProductGroupId) {
    this.catalogProductGroupId = catalogProductGroupId;
  }


  public ProductGroupPromotionResponseElement catalogProductGroupName(String catalogProductGroupName) {
    this.catalogProductGroupName = catalogProductGroupName;
    return this;
  }

  /**
   * Catalogs product group name
   * @return catalogProductGroupName
   */
  @javax.annotation.Nullable
  public String getCatalogProductGroupName() {
    return catalogProductGroupName;
  }

  public void setCatalogProductGroupName(String catalogProductGroupName) {
    this.catalogProductGroupName = catalogProductGroupName;
  }


  public ProductGroupPromotionResponseElement collectionsHeroPinId(String collectionsHeroPinId) {
    this.collectionsHeroPinId = collectionsHeroPinId;
    return this;
  }

  /**
   * Hero Pin ID if this PG is promoted as a Collection
   * @return collectionsHeroPinId
   */
  @javax.annotation.Nullable
  public String getCollectionsHeroPinId() {
    return collectionsHeroPinId;
  }

  public void setCollectionsHeroPinId(String collectionsHeroPinId) {
    this.collectionsHeroPinId = collectionsHeroPinId;
  }


  public ProductGroupPromotionResponseElement collectionsHeroDestinationUrl(String collectionsHeroDestinationUrl) {
    this.collectionsHeroDestinationUrl = collectionsHeroDestinationUrl;
    return this;
  }

  /**
   * Collections Hero Destination Url
   * @return collectionsHeroDestinationUrl
   */
  @javax.annotation.Nullable
  public String getCollectionsHeroDestinationUrl() {
    return collectionsHeroDestinationUrl;
  }

  public void setCollectionsHeroDestinationUrl(String collectionsHeroDestinationUrl) {
    this.collectionsHeroDestinationUrl = collectionsHeroDestinationUrl;
  }


  public ProductGroupPromotionResponseElement gridClickType(GridClickType gridClickType) {
    this.gridClickType = gridClickType;
    return this;
  }

  /**
   * Get gridClickType
   * @return gridClickType
   */
  @javax.annotation.Nullable
  public GridClickType getGridClickType() {
    return gridClickType;
  }

  public void setGridClickType(GridClickType gridClickType) {
    this.gridClickType = gridClickType;
  }


  public ProductGroupPromotionResponseElement creativeType(CreativeType creativeType) {
    this.creativeType = creativeType;
    return this;
  }

  /**
   * Get creativeType
   * @return creativeType
   */
  @javax.annotation.Nullable
  public CreativeType getCreativeType() {
    return creativeType;
  }

  public void setCreativeType(CreativeType creativeType) {
    this.creativeType = creativeType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductGroupPromotionResponseElement productGroupPromotionResponseElement = (ProductGroupPromotionResponseElement) o;
    return Objects.equals(this.id, productGroupPromotionResponseElement.id) &&
        Objects.equals(this.adGroupId, productGroupPromotionResponseElement.adGroupId) &&
        Objects.equals(this.bidInMicroCurrency, productGroupPromotionResponseElement.bidInMicroCurrency) &&
        Objects.equals(this.included, productGroupPromotionResponseElement.included) &&
        Objects.equals(this.definition, productGroupPromotionResponseElement.definition) &&
        Objects.equals(this.relativeDefinition, productGroupPromotionResponseElement.relativeDefinition) &&
        Objects.equals(this.parentId, productGroupPromotionResponseElement.parentId) &&
        Objects.equals(this.slideshowCollectionsTitle, productGroupPromotionResponseElement.slideshowCollectionsTitle) &&
        Objects.equals(this.slideshowCollectionsDescription, productGroupPromotionResponseElement.slideshowCollectionsDescription) &&
        Objects.equals(this.isMdl, productGroupPromotionResponseElement.isMdl) &&
        Objects.equals(this.status, productGroupPromotionResponseElement.status) &&
        Objects.equals(this.trackingUrl, productGroupPromotionResponseElement.trackingUrl) &&
        Objects.equals(this.catalogProductGroupId, productGroupPromotionResponseElement.catalogProductGroupId) &&
        Objects.equals(this.catalogProductGroupName, productGroupPromotionResponseElement.catalogProductGroupName) &&
        Objects.equals(this.collectionsHeroPinId, productGroupPromotionResponseElement.collectionsHeroPinId) &&
        Objects.equals(this.collectionsHeroDestinationUrl, productGroupPromotionResponseElement.collectionsHeroDestinationUrl) &&
        Objects.equals(this.gridClickType, productGroupPromotionResponseElement.gridClickType) &&
        Objects.equals(this.creativeType, productGroupPromotionResponseElement.creativeType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, adGroupId, bidInMicroCurrency, included, definition, relativeDefinition, parentId, slideshowCollectionsTitle, slideshowCollectionsDescription, isMdl, status, trackingUrl, catalogProductGroupId, catalogProductGroupName, collectionsHeroPinId, collectionsHeroDestinationUrl, gridClickType, creativeType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductGroupPromotionResponseElement {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    adGroupId: ").append(toIndentedString(adGroupId)).append("\n");
    sb.append("    bidInMicroCurrency: ").append(toIndentedString(bidInMicroCurrency)).append("\n");
    sb.append("    included: ").append(toIndentedString(included)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    relativeDefinition: ").append(toIndentedString(relativeDefinition)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    slideshowCollectionsTitle: ").append(toIndentedString(slideshowCollectionsTitle)).append("\n");
    sb.append("    slideshowCollectionsDescription: ").append(toIndentedString(slideshowCollectionsDescription)).append("\n");
    sb.append("    isMdl: ").append(toIndentedString(isMdl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("    catalogProductGroupId: ").append(toIndentedString(catalogProductGroupId)).append("\n");
    sb.append("    catalogProductGroupName: ").append(toIndentedString(catalogProductGroupName)).append("\n");
    sb.append("    collectionsHeroPinId: ").append(toIndentedString(collectionsHeroPinId)).append("\n");
    sb.append("    collectionsHeroDestinationUrl: ").append(toIndentedString(collectionsHeroDestinationUrl)).append("\n");
    sb.append("    gridClickType: ").append(toIndentedString(gridClickType)).append("\n");
    sb.append("    creativeType: ").append(toIndentedString(creativeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("ad_group_id");
    openapiFields.add("bid_in_micro_currency");
    openapiFields.add("included");
    openapiFields.add("definition");
    openapiFields.add("relative_definition");
    openapiFields.add("parent_id");
    openapiFields.add("slideshow_collections_title");
    openapiFields.add("slideshow_collections_description");
    openapiFields.add("is_mdl");
    openapiFields.add("status");
    openapiFields.add("tracking_url");
    openapiFields.add("catalog_product_group_id");
    openapiFields.add("catalog_product_group_name");
    openapiFields.add("collections_hero_pin_id");
    openapiFields.add("collections_hero_destination_url");
    openapiFields.add("grid_click_type");
    openapiFields.add("creative_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductGroupPromotionResponseElement
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductGroupPromotionResponseElement.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductGroupPromotionResponseElement is not found in the empty JSON string", ProductGroupPromotionResponseElement.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductGroupPromotionResponseElement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductGroupPromotionResponseElement` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("ad_group_id") != null && !jsonObj.get("ad_group_id").isJsonNull()) && !jsonObj.get("ad_group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ad_group_id").toString()));
      }
      if ((jsonObj.get("definition") != null && !jsonObj.get("definition").isJsonNull()) && !jsonObj.get("definition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `definition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("definition").toString()));
      }
      if ((jsonObj.get("relative_definition") != null && !jsonObj.get("relative_definition").isJsonNull()) && !jsonObj.get("relative_definition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relative_definition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relative_definition").toString()));
      }
      if ((jsonObj.get("parent_id") != null && !jsonObj.get("parent_id").isJsonNull()) && !jsonObj.get("parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_id").toString()));
      }
      if ((jsonObj.get("slideshow_collections_title") != null && !jsonObj.get("slideshow_collections_title").isJsonNull()) && !jsonObj.get("slideshow_collections_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slideshow_collections_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slideshow_collections_title").toString()));
      }
      if ((jsonObj.get("slideshow_collections_description") != null && !jsonObj.get("slideshow_collections_description").isJsonNull()) && !jsonObj.get("slideshow_collections_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slideshow_collections_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slideshow_collections_description").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        EntityStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("tracking_url") != null && !jsonObj.get("tracking_url").isJsonNull()) && !jsonObj.get("tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_url").toString()));
      }
      if ((jsonObj.get("catalog_product_group_id") != null && !jsonObj.get("catalog_product_group_id").isJsonNull()) && !jsonObj.get("catalog_product_group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `catalog_product_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("catalog_product_group_id").toString()));
      }
      if ((jsonObj.get("catalog_product_group_name") != null && !jsonObj.get("catalog_product_group_name").isJsonNull()) && !jsonObj.get("catalog_product_group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `catalog_product_group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("catalog_product_group_name").toString()));
      }
      if ((jsonObj.get("collections_hero_pin_id") != null && !jsonObj.get("collections_hero_pin_id").isJsonNull()) && !jsonObj.get("collections_hero_pin_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collections_hero_pin_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collections_hero_pin_id").toString()));
      }
      if ((jsonObj.get("collections_hero_destination_url") != null && !jsonObj.get("collections_hero_destination_url").isJsonNull()) && !jsonObj.get("collections_hero_destination_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collections_hero_destination_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collections_hero_destination_url").toString()));
      }
      // validate the optional field `grid_click_type`
      if (jsonObj.get("grid_click_type") != null && !jsonObj.get("grid_click_type").isJsonNull()) {
        GridClickType.validateJsonElement(jsonObj.get("grid_click_type"));
      }
      // validate the optional field `creative_type`
      if (jsonObj.get("creative_type") != null && !jsonObj.get("creative_type").isJsonNull()) {
        CreativeType.validateJsonElement(jsonObj.get("creative_type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductGroupPromotionResponseElement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductGroupPromotionResponseElement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductGroupPromotionResponseElement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductGroupPromotionResponseElement.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductGroupPromotionResponseElement>() {
           @Override
           public void write(JsonWriter out, ProductGroupPromotionResponseElement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductGroupPromotionResponseElement read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductGroupPromotionResponseElement given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductGroupPromotionResponseElement
   * @throws IOException if the JSON string is invalid with respect to ProductGroupPromotionResponseElement
   */
  public static ProductGroupPromotionResponseElement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductGroupPromotionResponseElement.class);
  }

  /**
   * Convert an instance of ProductGroupPromotionResponseElement to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

