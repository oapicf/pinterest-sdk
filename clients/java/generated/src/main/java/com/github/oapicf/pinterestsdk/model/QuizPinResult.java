/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * The result, and link out, based on the userâ€™s choice.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class QuizPinResult {
  public static final String SERIALIZED_NAME_ORGANIC_PIN_ID = "organic_pin_id";
  @SerializedName(SERIALIZED_NAME_ORGANIC_PIN_ID)
  private String organicPinId;

  public static final String SERIALIZED_NAME_ANDROID_DEEP_LINK = "android_deep_link";
  @SerializedName(SERIALIZED_NAME_ANDROID_DEEP_LINK)
  private String androidDeepLink;

  public static final String SERIALIZED_NAME_IOS_DEEP_LINK = "ios_deep_link";
  @SerializedName(SERIALIZED_NAME_IOS_DEEP_LINK)
  private String iosDeepLink;

  public static final String SERIALIZED_NAME_DESTINATION_URL = "destination_url";
  @SerializedName(SERIALIZED_NAME_DESTINATION_URL)
  private String destinationUrl;

  public static final String SERIALIZED_NAME_RESULT_ID = "result_id";
  @SerializedName(SERIALIZED_NAME_RESULT_ID)
  private BigDecimal resultId;

  public QuizPinResult() {
  }

  public QuizPinResult organicPinId(String organicPinId) {
    this.organicPinId = organicPinId;
    return this;
  }

  /**
   * Get organicPinId
   * @return organicPinId
   */
  @javax.annotation.Nullable
  public String getOrganicPinId() {
    return organicPinId;
  }

  public void setOrganicPinId(String organicPinId) {
    this.organicPinId = organicPinId;
  }


  public QuizPinResult androidDeepLink(String androidDeepLink) {
    this.androidDeepLink = androidDeepLink;
    return this;
  }

  /**
   * Get androidDeepLink
   * @return androidDeepLink
   */
  @javax.annotation.Nullable
  public String getAndroidDeepLink() {
    return androidDeepLink;
  }

  public void setAndroidDeepLink(String androidDeepLink) {
    this.androidDeepLink = androidDeepLink;
  }


  public QuizPinResult iosDeepLink(String iosDeepLink) {
    this.iosDeepLink = iosDeepLink;
    return this;
  }

  /**
   * Get iosDeepLink
   * @return iosDeepLink
   */
  @javax.annotation.Nullable
  public String getIosDeepLink() {
    return iosDeepLink;
  }

  public void setIosDeepLink(String iosDeepLink) {
    this.iosDeepLink = iosDeepLink;
  }


  public QuizPinResult destinationUrl(String destinationUrl) {
    this.destinationUrl = destinationUrl;
    return this;
  }

  /**
   * Get destinationUrl
   * @return destinationUrl
   */
  @javax.annotation.Nullable
  public String getDestinationUrl() {
    return destinationUrl;
  }

  public void setDestinationUrl(String destinationUrl) {
    this.destinationUrl = destinationUrl;
  }


  public QuizPinResult resultId(BigDecimal resultId) {
    this.resultId = resultId;
    return this;
  }

  /**
   * Get resultId
   * @return resultId
   */
  @javax.annotation.Nullable
  public BigDecimal getResultId() {
    return resultId;
  }

  public void setResultId(BigDecimal resultId) {
    this.resultId = resultId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuizPinResult quizPinResult = (QuizPinResult) o;
    return Objects.equals(this.organicPinId, quizPinResult.organicPinId) &&
        Objects.equals(this.androidDeepLink, quizPinResult.androidDeepLink) &&
        Objects.equals(this.iosDeepLink, quizPinResult.iosDeepLink) &&
        Objects.equals(this.destinationUrl, quizPinResult.destinationUrl) &&
        Objects.equals(this.resultId, quizPinResult.resultId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organicPinId, androidDeepLink, iosDeepLink, destinationUrl, resultId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuizPinResult {\n");
    sb.append("    organicPinId: ").append(toIndentedString(organicPinId)).append("\n");
    sb.append("    androidDeepLink: ").append(toIndentedString(androidDeepLink)).append("\n");
    sb.append("    iosDeepLink: ").append(toIndentedString(iosDeepLink)).append("\n");
    sb.append("    destinationUrl: ").append(toIndentedString(destinationUrl)).append("\n");
    sb.append("    resultId: ").append(toIndentedString(resultId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("organic_pin_id");
    openapiFields.add("android_deep_link");
    openapiFields.add("ios_deep_link");
    openapiFields.add("destination_url");
    openapiFields.add("result_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuizPinResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuizPinResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuizPinResult is not found in the empty JSON string", QuizPinResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuizPinResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuizPinResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("organic_pin_id") != null && !jsonObj.get("organic_pin_id").isJsonNull()) && !jsonObj.get("organic_pin_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organic_pin_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organic_pin_id").toString()));
      }
      if ((jsonObj.get("android_deep_link") != null && !jsonObj.get("android_deep_link").isJsonNull()) && !jsonObj.get("android_deep_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `android_deep_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("android_deep_link").toString()));
      }
      if ((jsonObj.get("ios_deep_link") != null && !jsonObj.get("ios_deep_link").isJsonNull()) && !jsonObj.get("ios_deep_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ios_deep_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ios_deep_link").toString()));
      }
      if ((jsonObj.get("destination_url") != null && !jsonObj.get("destination_url").isJsonNull()) && !jsonObj.get("destination_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuizPinResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuizPinResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuizPinResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuizPinResult.class));

       return (TypeAdapter<T>) new TypeAdapter<QuizPinResult>() {
           @Override
           public void write(JsonWriter out, QuizPinResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuizPinResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuizPinResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuizPinResult
   * @throws IOException if the JSON string is invalid with respect to QuizPinResult
   */
  public static QuizPinResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuizPinResult.class);
  }

  /**
   * Convert an instance of QuizPinResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

