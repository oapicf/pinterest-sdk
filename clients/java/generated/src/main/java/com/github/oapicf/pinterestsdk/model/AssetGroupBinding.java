/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.BusinessAccessUserSummary;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * AssetGroupBinding
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class AssetGroupBinding {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ASSET_GROUP_NAME = "asset_group_name";
  @SerializedName(SERIALIZED_NAME_ASSET_GROUP_NAME)
  private String assetGroupName;

  public static final String SERIALIZED_NAME_ASSET_GROUP_DESCRIPTION = "asset_group_description";
  @SerializedName(SERIALIZED_NAME_ASSET_GROUP_DESCRIPTION)
  private String assetGroupDescription;

  public static final String SERIALIZED_NAME_ASSET_GROUP_TYPES = "asset_group_types";
  @SerializedName(SERIALIZED_NAME_ASSET_GROUP_TYPES)
  private List<String> assetGroupTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_ACCOUNTS_IDS = "ad_accounts_ids";
  @SerializedName(SERIALIZED_NAME_AD_ACCOUNTS_IDS)
  private List<String> adAccountsIds;

  public static final String SERIALIZED_NAME_PROFILES_IDS = "profiles_ids";
  @SerializedName(SERIALIZED_NAME_PROFILES_IDS)
  private List<String> profilesIds;

  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private Integer createdTime;

  public static final String SERIALIZED_NAME_UPDATED_TIME = "updated_time";
  @SerializedName(SERIALIZED_NAME_UPDATED_TIME)
  private Integer updatedTime;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private BusinessAccessUserSummary owner;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private BusinessAccessUserSummary createdBy;

  public AssetGroupBinding() {
  }

  public AssetGroupBinding id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Asset Group ID.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AssetGroupBinding assetGroupName(String assetGroupName) {
    this.assetGroupName = assetGroupName;
    return this;
  }

  /**
   * Asset Group name
   * @return assetGroupName
   */
  @javax.annotation.Nullable
  public String getAssetGroupName() {
    return assetGroupName;
  }

  public void setAssetGroupName(String assetGroupName) {
    this.assetGroupName = assetGroupName;
  }


  public AssetGroupBinding assetGroupDescription(String assetGroupDescription) {
    this.assetGroupDescription = assetGroupDescription;
    return this;
  }

  /**
   * Asset group description
   * @return assetGroupDescription
   */
  @javax.annotation.Nullable
  public String getAssetGroupDescription() {
    return assetGroupDescription;
  }

  public void setAssetGroupDescription(String assetGroupDescription) {
    this.assetGroupDescription = assetGroupDescription;
  }


  public AssetGroupBinding assetGroupTypes(List<String> assetGroupTypes) {
    this.assetGroupTypes = assetGroupTypes;
    return this;
  }

  public AssetGroupBinding addAssetGroupTypesItem(String assetGroupTypesItem) {
    if (this.assetGroupTypes == null) {
      this.assetGroupTypes = new ArrayList<>();
    }
    this.assetGroupTypes.add(assetGroupTypesItem);
    return this;
  }

  /**
   * Asset group types
   * @return assetGroupTypes
   */
  @javax.annotation.Nullable
  public List<String> getAssetGroupTypes() {
    return assetGroupTypes;
  }

  public void setAssetGroupTypes(List<String> assetGroupTypes) {
    this.assetGroupTypes = assetGroupTypes;
  }


  public AssetGroupBinding adAccountsIds(List<String> adAccountsIds) {
    this.adAccountsIds = adAccountsIds;
    return this;
  }

  public AssetGroupBinding addAdAccountsIdsItem(String adAccountsIdsItem) {
    if (this.adAccountsIds == null) {
      this.adAccountsIds = new ArrayList<>();
    }
    this.adAccountsIds.add(adAccountsIdsItem);
    return this;
  }

  /**
   * A list of ad account IDs under the asset group
   * @return adAccountsIds
   */
  @javax.annotation.Nullable
  public List<String> getAdAccountsIds() {
    return adAccountsIds;
  }

  public void setAdAccountsIds(List<String> adAccountsIds) {
    this.adAccountsIds = adAccountsIds;
  }


  public AssetGroupBinding profilesIds(List<String> profilesIds) {
    this.profilesIds = profilesIds;
    return this;
  }

  public AssetGroupBinding addProfilesIdsItem(String profilesIdsItem) {
    if (this.profilesIds == null) {
      this.profilesIds = new ArrayList<>();
    }
    this.profilesIds.add(profilesIdsItem);
    return this;
  }

  /**
   * A list of profile IDs under asset group
   * @return profilesIds
   */
  @javax.annotation.Nullable
  public List<String> getProfilesIds() {
    return profilesIds;
  }

  public void setProfilesIds(List<String> profilesIds) {
    this.profilesIds = profilesIds;
  }


  public AssetGroupBinding createdTime(Integer createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * The creation time of the asset group
   * @return createdTime
   */
  @javax.annotation.Nullable
  public Integer getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(Integer createdTime) {
    this.createdTime = createdTime;
  }


  public AssetGroupBinding updatedTime(Integer updatedTime) {
    this.updatedTime = updatedTime;
    return this;
  }

  /**
   * The last update time of the asset group
   * @return updatedTime
   */
  @javax.annotation.Nullable
  public Integer getUpdatedTime() {
    return updatedTime;
  }

  public void setUpdatedTime(Integer updatedTime) {
    this.updatedTime = updatedTime;
  }


  public AssetGroupBinding owner(BusinessAccessUserSummary owner) {
    this.owner = owner;
    return this;
  }

  /**
   * The data of the business that owns the asset group.
   * @return owner
   */
  @javax.annotation.Nullable
  public BusinessAccessUserSummary getOwner() {
    return owner;
  }

  public void setOwner(BusinessAccessUserSummary owner) {
    this.owner = owner;
  }


  public AssetGroupBinding createdBy(BusinessAccessUserSummary createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * The data of the user that created the asset group.
   * @return createdBy
   */
  @javax.annotation.Nullable
  public BusinessAccessUserSummary getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(BusinessAccessUserSummary createdBy) {
    this.createdBy = createdBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetGroupBinding assetGroupBinding = (AssetGroupBinding) o;
    return Objects.equals(this.id, assetGroupBinding.id) &&
        Objects.equals(this.assetGroupName, assetGroupBinding.assetGroupName) &&
        Objects.equals(this.assetGroupDescription, assetGroupBinding.assetGroupDescription) &&
        Objects.equals(this.assetGroupTypes, assetGroupBinding.assetGroupTypes) &&
        Objects.equals(this.adAccountsIds, assetGroupBinding.adAccountsIds) &&
        Objects.equals(this.profilesIds, assetGroupBinding.profilesIds) &&
        Objects.equals(this.createdTime, assetGroupBinding.createdTime) &&
        Objects.equals(this.updatedTime, assetGroupBinding.updatedTime) &&
        Objects.equals(this.owner, assetGroupBinding.owner) &&
        Objects.equals(this.createdBy, assetGroupBinding.createdBy);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, assetGroupName, assetGroupDescription, assetGroupTypes, adAccountsIds, profilesIds, createdTime, updatedTime, owner, createdBy);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetGroupBinding {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    assetGroupName: ").append(toIndentedString(assetGroupName)).append("\n");
    sb.append("    assetGroupDescription: ").append(toIndentedString(assetGroupDescription)).append("\n");
    sb.append("    assetGroupTypes: ").append(toIndentedString(assetGroupTypes)).append("\n");
    sb.append("    adAccountsIds: ").append(toIndentedString(adAccountsIds)).append("\n");
    sb.append("    profilesIds: ").append(toIndentedString(profilesIds)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    updatedTime: ").append(toIndentedString(updatedTime)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("asset_group_name");
    openapiFields.add("asset_group_description");
    openapiFields.add("asset_group_types");
    openapiFields.add("ad_accounts_ids");
    openapiFields.add("profiles_ids");
    openapiFields.add("created_time");
    openapiFields.add("updated_time");
    openapiFields.add("owner");
    openapiFields.add("created_by");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssetGroupBinding
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssetGroupBinding.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssetGroupBinding is not found in the empty JSON string", AssetGroupBinding.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssetGroupBinding.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssetGroupBinding` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("asset_group_name") != null && !jsonObj.get("asset_group_name").isJsonNull()) && !jsonObj.get("asset_group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_group_name").toString()));
      }
      if ((jsonObj.get("asset_group_description") != null && !jsonObj.get("asset_group_description").isJsonNull()) && !jsonObj.get("asset_group_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_group_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_group_description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("asset_group_types") != null && !jsonObj.get("asset_group_types").isJsonNull() && !jsonObj.get("asset_group_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_group_types` to be an array in the JSON string but got `%s`", jsonObj.get("asset_group_types").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ad_accounts_ids") != null && !jsonObj.get("ad_accounts_ids").isJsonNull() && !jsonObj.get("ad_accounts_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_accounts_ids` to be an array in the JSON string but got `%s`", jsonObj.get("ad_accounts_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("profiles_ids") != null && !jsonObj.get("profiles_ids").isJsonNull() && !jsonObj.get("profiles_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `profiles_ids` to be an array in the JSON string but got `%s`", jsonObj.get("profiles_ids").toString()));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        BusinessAccessUserSummary.validateJsonElement(jsonObj.get("owner"));
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        BusinessAccessUserSummary.validateJsonElement(jsonObj.get("created_by"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssetGroupBinding.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssetGroupBinding' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssetGroupBinding> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssetGroupBinding.class));

       return (TypeAdapter<T>) new TypeAdapter<AssetGroupBinding>() {
           @Override
           public void write(JsonWriter out, AssetGroupBinding value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssetGroupBinding read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssetGroupBinding given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssetGroupBinding
   * @throws IOException if the JSON string is invalid with respect to AssetGroupBinding
   */
  public static AssetGroupBinding fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssetGroupBinding.class);
  }

  /**
   * Convert an instance of AssetGroupBinding to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

