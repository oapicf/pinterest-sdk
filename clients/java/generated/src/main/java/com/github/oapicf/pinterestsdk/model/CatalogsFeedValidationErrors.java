/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * CatalogsFeedValidationErrors
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class CatalogsFeedValidationErrors {
  public static final String SERIALIZED_NAME_F_E_T_C_H_E_R_R_O_R = "FETCH_ERROR";
  @SerializedName(SERIALIZED_NAME_F_E_T_C_H_E_R_R_O_R)
  private Integer FETCH_ERROR;

  public static final String SERIALIZED_NAME_F_E_T_C_H_I_N_A_C_T_I_V_E_F_E_E_D_E_R_R_O_R = "FETCH_INACTIVE_FEED_ERROR";
  @SerializedName(SERIALIZED_NAME_F_E_T_C_H_I_N_A_C_T_I_V_E_F_E_E_D_E_R_R_O_R)
  private Integer FETCH_INACTIVE_FEED_ERROR;

  public static final String SERIALIZED_NAME_E_N_C_O_D_I_N_G_E_R_R_O_R = "ENCODING_ERROR";
  @SerializedName(SERIALIZED_NAME_E_N_C_O_D_I_N_G_E_R_R_O_R)
  private Integer ENCODING_ERROR;

  public static final String SERIALIZED_NAME_D_E_L_I_M_I_T_E_R_E_R_R_O_R = "DELIMITER_ERROR";
  @SerializedName(SERIALIZED_NAME_D_E_L_I_M_I_T_E_R_E_R_R_O_R)
  private Integer DELIMITER_ERROR;

  public static final String SERIALIZED_NAME_R_E_Q_U_I_R_E_D_C_O_L_U_M_N_S_M_I_S_S_I_N_G = "REQUIRED_COLUMNS_MISSING";
  @SerializedName(SERIALIZED_NAME_R_E_Q_U_I_R_E_D_C_O_L_U_M_N_S_M_I_S_S_I_N_G)
  private Integer REQUIRED_COLUMNS_MISSING;

  public static final String SERIALIZED_NAME_D_U_P_L_I_C_A_T_E_P_R_O_D_U_C_T_S = "DUPLICATE_PRODUCTS";
  @SerializedName(SERIALIZED_NAME_D_U_P_L_I_C_A_T_E_P_R_O_D_U_C_T_S)
  private Integer DUPLICATE_PRODUCTS;

  public static final String SERIALIZED_NAME_I_M_A_G_E_L_I_N_K_I_N_V_A_L_I_D = "IMAGE_LINK_INVALID";
  @SerializedName(SERIALIZED_NAME_I_M_A_G_E_L_I_N_K_I_N_V_A_L_I_D)
  private Integer IMAGE_LINK_INVALID;

  public static final String SERIALIZED_NAME_I_T_E_M_I_D_M_I_S_S_I_N_G = "ITEMID_MISSING";
  @SerializedName(SERIALIZED_NAME_I_T_E_M_I_D_M_I_S_S_I_N_G)
  private Integer ITEMID_MISSING;

  public static final String SERIALIZED_NAME_T_I_T_L_E_M_I_S_S_I_N_G = "TITLE_MISSING";
  @SerializedName(SERIALIZED_NAME_T_I_T_L_E_M_I_S_S_I_N_G)
  private Integer TITLE_MISSING;

  public static final String SERIALIZED_NAME_D_E_S_C_R_I_P_T_I_O_N_M_I_S_S_I_N_G = "DESCRIPTION_MISSING";
  @SerializedName(SERIALIZED_NAME_D_E_S_C_R_I_P_T_I_O_N_M_I_S_S_I_N_G)
  private Integer DESCRIPTION_MISSING;

  public static final String SERIALIZED_NAME_P_R_O_D_U_C_T_L_I_N_K_M_I_S_S_I_N_G = "PRODUCT_LINK_MISSING";
  @SerializedName(SERIALIZED_NAME_P_R_O_D_U_C_T_L_I_N_K_M_I_S_S_I_N_G)
  private Integer PRODUCT_LINK_MISSING;

  public static final String SERIALIZED_NAME_I_M_A_G_E_L_I_N_K_M_I_S_S_I_N_G = "IMAGE_LINK_MISSING";
  @SerializedName(SERIALIZED_NAME_I_M_A_G_E_L_I_N_K_M_I_S_S_I_N_G)
  private Integer IMAGE_LINK_MISSING;

  public static final String SERIALIZED_NAME_A_V_A_I_L_A_B_I_L_I_T_Y_I_N_V_A_L_I_D = "AVAILABILITY_INVALID";
  @SerializedName(SERIALIZED_NAME_A_V_A_I_L_A_B_I_L_I_T_Y_I_N_V_A_L_I_D)
  private Integer AVAILABILITY_INVALID;

  public static final String SERIALIZED_NAME_P_R_O_D_U_C_T_P_R_I_C_E_I_N_V_A_L_I_D = "PRODUCT_PRICE_INVALID";
  @SerializedName(SERIALIZED_NAME_P_R_O_D_U_C_T_P_R_I_C_E_I_N_V_A_L_I_D)
  private Integer PRODUCT_PRICE_INVALID;

  public static final String SERIALIZED_NAME_L_I_N_K_F_O_R_M_A_T_I_N_V_A_L_I_D = "LINK_FORMAT_INVALID";
  @SerializedName(SERIALIZED_NAME_L_I_N_K_F_O_R_M_A_T_I_N_V_A_L_I_D)
  private Integer LINK_FORMAT_INVALID;

  public static final String SERIALIZED_NAME_P_A_R_S_E_L_I_N_E_E_R_R_O_R = "PARSE_LINE_ERROR";
  @SerializedName(SERIALIZED_NAME_P_A_R_S_E_L_I_N_E_E_R_R_O_R)
  private Integer PARSE_LINE_ERROR;

  public static final String SERIALIZED_NAME_A_D_W_O_R_D_S_F_O_R_M_A_T_I_N_V_A_L_I_D = "ADWORDS_FORMAT_INVALID";
  @SerializedName(SERIALIZED_NAME_A_D_W_O_R_D_S_F_O_R_M_A_T_I_N_V_A_L_I_D)
  private Integer ADWORDS_FORMAT_INVALID;

  public static final String SERIALIZED_NAME_I_N_T_E_R_N_A_L_S_E_R_V_I_C_E_E_R_R_O_R = "INTERNAL_SERVICE_ERROR";
  @SerializedName(SERIALIZED_NAME_I_N_T_E_R_N_A_L_S_E_R_V_I_C_E_E_R_R_O_R)
  private Integer INTERNAL_SERVICE_ERROR;

  public static final String SERIALIZED_NAME_N_O_V_E_R_I_F_I_E_D_D_O_M_A_I_N = "NO_VERIFIED_DOMAIN";
  @SerializedName(SERIALIZED_NAME_N_O_V_E_R_I_F_I_E_D_D_O_M_A_I_N)
  private Integer NO_VERIFIED_DOMAIN;

  public static final String SERIALIZED_NAME_A_D_U_L_T_I_N_V_A_L_I_D = "ADULT_INVALID";
  @SerializedName(SERIALIZED_NAME_A_D_U_L_T_I_N_V_A_L_I_D)
  private Integer ADULT_INVALID;

  public static final String SERIALIZED_NAME_I_M_A_G_E_L_I_N_K_L_E_N_G_T_H_T_O_O_L_O_N_G = "IMAGE_LINK_LENGTH_TOO_LONG";
  @SerializedName(SERIALIZED_NAME_I_M_A_G_E_L_I_N_K_L_E_N_G_T_H_T_O_O_L_O_N_G)
  private Integer IMAGE_LINK_LENGTH_TOO_LONG;

  public static final String SERIALIZED_NAME_I_N_V_A_L_I_D_D_O_M_A_I_N = "INVALID_DOMAIN";
  @SerializedName(SERIALIZED_NAME_I_N_V_A_L_I_D_D_O_M_A_I_N)
  private Integer INVALID_DOMAIN;

  public static final String SERIALIZED_NAME_F_E_E_D_L_E_N_G_T_H_T_O_O_L_O_N_G = "FEED_LENGTH_TOO_LONG";
  @SerializedName(SERIALIZED_NAME_F_E_E_D_L_E_N_G_T_H_T_O_O_L_O_N_G)
  private Integer FEED_LENGTH_TOO_LONG;

  public static final String SERIALIZED_NAME_L_I_N_K_L_E_N_G_T_H_T_O_O_L_O_N_G = "LINK_LENGTH_TOO_LONG";
  @SerializedName(SERIALIZED_NAME_L_I_N_K_L_E_N_G_T_H_T_O_O_L_O_N_G)
  private Integer LINK_LENGTH_TOO_LONG;

  public static final String SERIALIZED_NAME_M_A_L_F_O_R_M_E_D_X_M_L = "MALFORMED_XML";
  @SerializedName(SERIALIZED_NAME_M_A_L_F_O_R_M_E_D_X_M_L)
  private Integer MALFORMED_XML;

  public static final String SERIALIZED_NAME_P_R_I_C_E_M_I_S_S_I_N_G = "PRICE_MISSING";
  @SerializedName(SERIALIZED_NAME_P_R_I_C_E_M_I_S_S_I_N_G)
  private Integer PRICE_MISSING;

  public static final String SERIALIZED_NAME_F_E_E_D_T_O_O_S_M_A_L_L = "FEED_TOO_SMALL";
  @SerializedName(SERIALIZED_NAME_F_E_E_D_T_O_O_S_M_A_L_L)
  private Integer FEED_TOO_SMALL;

  public static final String SERIALIZED_NAME_M_A_X_I_T_E_M_S_P_E_R_I_T_E_M_G_R_O_U_P_E_X_C_E_E_D_E_D = "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED";
  @SerializedName(SERIALIZED_NAME_M_A_X_I_T_E_M_S_P_E_R_I_T_E_M_G_R_O_U_P_E_X_C_E_E_D_E_D)
  private Integer MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED;

  public static final String SERIALIZED_NAME_I_T_E_M_M_A_I_N_I_M_A_G_E_D_O_W_N_L_O_A_D_F_A_I_L_U_R_E = "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE";
  @SerializedName(SERIALIZED_NAME_I_T_E_M_M_A_I_N_I_M_A_G_E_D_O_W_N_L_O_A_D_F_A_I_L_U_R_E)
  private Integer ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE;

  public static final String SERIALIZED_NAME_P_I_N_J_O_I_N_C_O_N_T_E_N_T_U_N_S_A_F_E = "PINJOIN_CONTENT_UNSAFE";
  @SerializedName(SERIALIZED_NAME_P_I_N_J_O_I_N_C_O_N_T_E_N_T_U_N_S_A_F_E)
  private Integer PINJOIN_CONTENT_UNSAFE;

  public static final String SERIALIZED_NAME_B_L_O_C_K_L_I_S_T_E_D_I_M_A_G_E_S_I_G_N_A_T_U_R_E = "BLOCKLISTED_IMAGE_SIGNATURE";
  @SerializedName(SERIALIZED_NAME_B_L_O_C_K_L_I_S_T_E_D_I_M_A_G_E_S_I_G_N_A_T_U_R_E)
  private Integer BLOCKLISTED_IMAGE_SIGNATURE;

  public static final String SERIALIZED_NAME_L_I_S_T_P_R_I_C_E_I_N_V_A_L_I_D = "LIST_PRICE_INVALID";
  @SerializedName(SERIALIZED_NAME_L_I_S_T_P_R_I_C_E_I_N_V_A_L_I_D)
  private Integer LIST_PRICE_INVALID;

  public static final String SERIALIZED_NAME_P_R_I_C_E_C_A_N_N_O_T_B_E_D_E_T_E_R_M_I_N_E_D = "PRICE_CANNOT_BE_DETERMINED";
  @SerializedName(SERIALIZED_NAME_P_R_I_C_E_C_A_N_N_O_T_B_E_D_E_T_E_R_M_I_N_E_D)
  private Integer PRICE_CANNOT_BE_DETERMINED;

  public CatalogsFeedValidationErrors() {
  }

  public CatalogsFeedValidationErrors FETCH_ERROR(Integer FETCH_ERROR) {
    this.FETCH_ERROR = FETCH_ERROR;
    return this;
  }

  /**
   * Pinterest couldn&#39;t download your feed.
   * @return FETCH_ERROR
   */
  @javax.annotation.Nullable
  public Integer getFETCHERROR() {
    return FETCH_ERROR;
  }

  public void setFETCHERROR(Integer FETCH_ERROR) {
    this.FETCH_ERROR = FETCH_ERROR;
  }


  public CatalogsFeedValidationErrors FETCH_INACTIVE_FEED_ERROR(Integer FETCH_INACTIVE_FEED_ERROR) {
    this.FETCH_INACTIVE_FEED_ERROR = FETCH_INACTIVE_FEED_ERROR;
    return this;
  }

  /**
   * Your feed wasn&#39;t ingested because it hasnâ€™t changed in the previous 90 days.
   * @return FETCH_INACTIVE_FEED_ERROR
   */
  @javax.annotation.Nullable
  public Integer getFETCHINACTIVEFEEDERROR() {
    return FETCH_INACTIVE_FEED_ERROR;
  }

  public void setFETCHINACTIVEFEEDERROR(Integer FETCH_INACTIVE_FEED_ERROR) {
    this.FETCH_INACTIVE_FEED_ERROR = FETCH_INACTIVE_FEED_ERROR;
  }


  public CatalogsFeedValidationErrors ENCODING_ERROR(Integer ENCODING_ERROR) {
    this.ENCODING_ERROR = ENCODING_ERROR;
    return this;
  }

  /**
   * Your feed includes data with an unsupported encoding format.
   * @return ENCODING_ERROR
   */
  @javax.annotation.Nullable
  public Integer getENCODINGERROR() {
    return ENCODING_ERROR;
  }

  public void setENCODINGERROR(Integer ENCODING_ERROR) {
    this.ENCODING_ERROR = ENCODING_ERROR;
  }


  public CatalogsFeedValidationErrors DELIMITER_ERROR(Integer DELIMITER_ERROR) {
    this.DELIMITER_ERROR = DELIMITER_ERROR;
    return this;
  }

  /**
   * Your feed includes data with formatting errors.
   * @return DELIMITER_ERROR
   */
  @javax.annotation.Nullable
  public Integer getDELIMITERERROR() {
    return DELIMITER_ERROR;
  }

  public void setDELIMITERERROR(Integer DELIMITER_ERROR) {
    this.DELIMITER_ERROR = DELIMITER_ERROR;
  }


  public CatalogsFeedValidationErrors REQUIRED_COLUMNS_MISSING(Integer REQUIRED_COLUMNS_MISSING) {
    this.REQUIRED_COLUMNS_MISSING = REQUIRED_COLUMNS_MISSING;
    return this;
  }

  /**
   * Your feed is missing some required column headers.
   * @return REQUIRED_COLUMNS_MISSING
   */
  @javax.annotation.Nullable
  public Integer getREQUIREDCOLUMNSMISSING() {
    return REQUIRED_COLUMNS_MISSING;
  }

  public void setREQUIREDCOLUMNSMISSING(Integer REQUIRED_COLUMNS_MISSING) {
    this.REQUIRED_COLUMNS_MISSING = REQUIRED_COLUMNS_MISSING;
  }


  public CatalogsFeedValidationErrors DUPLICATE_PRODUCTS(Integer DUPLICATE_PRODUCTS) {
    this.DUPLICATE_PRODUCTS = DUPLICATE_PRODUCTS;
    return this;
  }

  /**
   * Some products are duplicated.
   * @return DUPLICATE_PRODUCTS
   */
  @javax.annotation.Nullable
  public Integer getDUPLICATEPRODUCTS() {
    return DUPLICATE_PRODUCTS;
  }

  public void setDUPLICATEPRODUCTS(Integer DUPLICATE_PRODUCTS) {
    this.DUPLICATE_PRODUCTS = DUPLICATE_PRODUCTS;
  }


  public CatalogsFeedValidationErrors IMAGE_LINK_INVALID(Integer IMAGE_LINK_INVALID) {
    this.IMAGE_LINK_INVALID = IMAGE_LINK_INVALID;
    return this;
  }

  /**
   * Some image links are formatted incorrectly.
   * @return IMAGE_LINK_INVALID
   */
  @javax.annotation.Nullable
  public Integer getIMAGELINKINVALID() {
    return IMAGE_LINK_INVALID;
  }

  public void setIMAGELINKINVALID(Integer IMAGE_LINK_INVALID) {
    this.IMAGE_LINK_INVALID = IMAGE_LINK_INVALID;
  }


  public CatalogsFeedValidationErrors ITEMID_MISSING(Integer ITEMID_MISSING) {
    this.ITEMID_MISSING = ITEMID_MISSING;
    return this;
  }

  /**
   * Some items are missing an item id in their product metadata, those items will not be published.
   * @return ITEMID_MISSING
   */
  @javax.annotation.Nullable
  public Integer getITEMIDMISSING() {
    return ITEMID_MISSING;
  }

  public void setITEMIDMISSING(Integer ITEMID_MISSING) {
    this.ITEMID_MISSING = ITEMID_MISSING;
  }


  public CatalogsFeedValidationErrors TITLE_MISSING(Integer TITLE_MISSING) {
    this.TITLE_MISSING = TITLE_MISSING;
    return this;
  }

  /**
   * Some items are missing a title in their product metadata, those items will not be published.
   * @return TITLE_MISSING
   */
  @javax.annotation.Nullable
  public Integer getTITLEMISSING() {
    return TITLE_MISSING;
  }

  public void setTITLEMISSING(Integer TITLE_MISSING) {
    this.TITLE_MISSING = TITLE_MISSING;
  }


  public CatalogsFeedValidationErrors DESCRIPTION_MISSING(Integer DESCRIPTION_MISSING) {
    this.DESCRIPTION_MISSING = DESCRIPTION_MISSING;
    return this;
  }

  /**
   * Some items are missing a description in their product metadata, those items will not be published.
   * @return DESCRIPTION_MISSING
   */
  @javax.annotation.Nullable
  public Integer getDESCRIPTIONMISSING() {
    return DESCRIPTION_MISSING;
  }

  public void setDESCRIPTIONMISSING(Integer DESCRIPTION_MISSING) {
    this.DESCRIPTION_MISSING = DESCRIPTION_MISSING;
  }


  public CatalogsFeedValidationErrors PRODUCT_LINK_MISSING(Integer PRODUCT_LINK_MISSING) {
    this.PRODUCT_LINK_MISSING = PRODUCT_LINK_MISSING;
    return this;
  }

  /**
   * Some items are missing a link URL in their product metadata, those items will not be published.
   * @return PRODUCT_LINK_MISSING
   */
  @javax.annotation.Nullable
  public Integer getPRODUCTLINKMISSING() {
    return PRODUCT_LINK_MISSING;
  }

  public void setPRODUCTLINKMISSING(Integer PRODUCT_LINK_MISSING) {
    this.PRODUCT_LINK_MISSING = PRODUCT_LINK_MISSING;
  }


  public CatalogsFeedValidationErrors IMAGE_LINK_MISSING(Integer IMAGE_LINK_MISSING) {
    this.IMAGE_LINK_MISSING = IMAGE_LINK_MISSING;
    return this;
  }

  /**
   * Some items are missing an image link URL in their product metadata, those items will not be published.
   * @return IMAGE_LINK_MISSING
   */
  @javax.annotation.Nullable
  public Integer getIMAGELINKMISSING() {
    return IMAGE_LINK_MISSING;
  }

  public void setIMAGELINKMISSING(Integer IMAGE_LINK_MISSING) {
    this.IMAGE_LINK_MISSING = IMAGE_LINK_MISSING;
  }


  public CatalogsFeedValidationErrors AVAILABILITY_INVALID(Integer AVAILABILITY_INVALID) {
    this.AVAILABILITY_INVALID = AVAILABILITY_INVALID;
    return this;
  }

  /**
   * Some items are missing an availability value in their product metadata, those items will not be published.
   * @return AVAILABILITY_INVALID
   */
  @javax.annotation.Nullable
  public Integer getAVAILABILITYINVALID() {
    return AVAILABILITY_INVALID;
  }

  public void setAVAILABILITYINVALID(Integer AVAILABILITY_INVALID) {
    this.AVAILABILITY_INVALID = AVAILABILITY_INVALID;
  }


  public CatalogsFeedValidationErrors PRODUCT_PRICE_INVALID(Integer PRODUCT_PRICE_INVALID) {
    this.PRODUCT_PRICE_INVALID = PRODUCT_PRICE_INVALID;
    return this;
  }

  /**
   * Some items have price formatting errors in their product metadata, those items will not be published.
   * @return PRODUCT_PRICE_INVALID
   */
  @javax.annotation.Nullable
  public Integer getPRODUCTPRICEINVALID() {
    return PRODUCT_PRICE_INVALID;
  }

  public void setPRODUCTPRICEINVALID(Integer PRODUCT_PRICE_INVALID) {
    this.PRODUCT_PRICE_INVALID = PRODUCT_PRICE_INVALID;
  }


  public CatalogsFeedValidationErrors LINK_FORMAT_INVALID(Integer LINK_FORMAT_INVALID) {
    this.LINK_FORMAT_INVALID = LINK_FORMAT_INVALID;
    return this;
  }

  /**
   * Some link values are formatted incorrectly.
   * @return LINK_FORMAT_INVALID
   */
  @javax.annotation.Nullable
  public Integer getLINKFORMATINVALID() {
    return LINK_FORMAT_INVALID;
  }

  public void setLINKFORMATINVALID(Integer LINK_FORMAT_INVALID) {
    this.LINK_FORMAT_INVALID = LINK_FORMAT_INVALID;
  }


  public CatalogsFeedValidationErrors PARSE_LINE_ERROR(Integer PARSE_LINE_ERROR) {
    this.PARSE_LINE_ERROR = PARSE_LINE_ERROR;
    return this;
  }

  /**
   * Your feed contains formatting errors for some items.
   * @return PARSE_LINE_ERROR
   */
  @javax.annotation.Nullable
  public Integer getPARSELINEERROR() {
    return PARSE_LINE_ERROR;
  }

  public void setPARSELINEERROR(Integer PARSE_LINE_ERROR) {
    this.PARSE_LINE_ERROR = PARSE_LINE_ERROR;
  }


  public CatalogsFeedValidationErrors ADWORDS_FORMAT_INVALID(Integer ADWORDS_FORMAT_INVALID) {
    this.ADWORDS_FORMAT_INVALID = ADWORDS_FORMAT_INVALID;
    return this;
  }

  /**
   * Some adwords links contain too many characters.
   * @return ADWORDS_FORMAT_INVALID
   */
  @javax.annotation.Nullable
  public Integer getADWORDSFORMATINVALID() {
    return ADWORDS_FORMAT_INVALID;
  }

  public void setADWORDSFORMATINVALID(Integer ADWORDS_FORMAT_INVALID) {
    this.ADWORDS_FORMAT_INVALID = ADWORDS_FORMAT_INVALID;
  }


  public CatalogsFeedValidationErrors INTERNAL_SERVICE_ERROR(Integer INTERNAL_SERVICE_ERROR) {
    this.INTERNAL_SERVICE_ERROR = INTERNAL_SERVICE_ERROR;
    return this;
  }

  /**
   * We experienced a technical difficulty and were unable to ingest your feed. The next ingestion will happen in 24 hours.
   * @return INTERNAL_SERVICE_ERROR
   */
  @javax.annotation.Nullable
  public Integer getINTERNALSERVICEERROR() {
    return INTERNAL_SERVICE_ERROR;
  }

  public void setINTERNALSERVICEERROR(Integer INTERNAL_SERVICE_ERROR) {
    this.INTERNAL_SERVICE_ERROR = INTERNAL_SERVICE_ERROR;
  }


  public CatalogsFeedValidationErrors NO_VERIFIED_DOMAIN(Integer NO_VERIFIED_DOMAIN) {
    this.NO_VERIFIED_DOMAIN = NO_VERIFIED_DOMAIN;
    return this;
  }

  /**
   * Your merchant domain needs to be claimed.
   * @return NO_VERIFIED_DOMAIN
   */
  @javax.annotation.Nullable
  public Integer getNOVERIFIEDDOMAIN() {
    return NO_VERIFIED_DOMAIN;
  }

  public void setNOVERIFIEDDOMAIN(Integer NO_VERIFIED_DOMAIN) {
    this.NO_VERIFIED_DOMAIN = NO_VERIFIED_DOMAIN;
  }


  public CatalogsFeedValidationErrors ADULT_INVALID(Integer ADULT_INVALID) {
    this.ADULT_INVALID = ADULT_INVALID;
    return this;
  }

  /**
   * Some items have invalid adult values.
   * @return ADULT_INVALID
   */
  @javax.annotation.Nullable
  public Integer getADULTINVALID() {
    return ADULT_INVALID;
  }

  public void setADULTINVALID(Integer ADULT_INVALID) {
    this.ADULT_INVALID = ADULT_INVALID;
  }


  public CatalogsFeedValidationErrors IMAGE_LINK_LENGTH_TOO_LONG(Integer IMAGE_LINK_LENGTH_TOO_LONG) {
    this.IMAGE_LINK_LENGTH_TOO_LONG = IMAGE_LINK_LENGTH_TOO_LONG;
    return this;
  }

  /**
   * Some items have image_link URLs that contain too many characters, so those items will not be published.
   * @return IMAGE_LINK_LENGTH_TOO_LONG
   */
  @javax.annotation.Nullable
  public Integer getIMAGELINKLENGTHTOOLONG() {
    return IMAGE_LINK_LENGTH_TOO_LONG;
  }

  public void setIMAGELINKLENGTHTOOLONG(Integer IMAGE_LINK_LENGTH_TOO_LONG) {
    this.IMAGE_LINK_LENGTH_TOO_LONG = IMAGE_LINK_LENGTH_TOO_LONG;
  }


  public CatalogsFeedValidationErrors INVALID_DOMAIN(Integer INVALID_DOMAIN) {
    this.INVALID_DOMAIN = INVALID_DOMAIN;
    return this;
  }

  /**
   * Some of your product link values don&#39;t match the verified domain associated with this account.
   * @return INVALID_DOMAIN
   */
  @javax.annotation.Nullable
  public Integer getINVALIDDOMAIN() {
    return INVALID_DOMAIN;
  }

  public void setINVALIDDOMAIN(Integer INVALID_DOMAIN) {
    this.INVALID_DOMAIN = INVALID_DOMAIN;
  }


  public CatalogsFeedValidationErrors FEED_LENGTH_TOO_LONG(Integer FEED_LENGTH_TOO_LONG) {
    this.FEED_LENGTH_TOO_LONG = FEED_LENGTH_TOO_LONG;
    return this;
  }

  /**
   * Your feed contains too many items, some items will not be published.
   * @return FEED_LENGTH_TOO_LONG
   */
  @javax.annotation.Nullable
  public Integer getFEEDLENGTHTOOLONG() {
    return FEED_LENGTH_TOO_LONG;
  }

  public void setFEEDLENGTHTOOLONG(Integer FEED_LENGTH_TOO_LONG) {
    this.FEED_LENGTH_TOO_LONG = FEED_LENGTH_TOO_LONG;
  }


  public CatalogsFeedValidationErrors LINK_LENGTH_TOO_LONG(Integer LINK_LENGTH_TOO_LONG) {
    this.LINK_LENGTH_TOO_LONG = LINK_LENGTH_TOO_LONG;
    return this;
  }

  /**
   * Some product links contain too many characters, those items will not be published.
   * @return LINK_LENGTH_TOO_LONG
   */
  @javax.annotation.Nullable
  public Integer getLINKLENGTHTOOLONG() {
    return LINK_LENGTH_TOO_LONG;
  }

  public void setLINKLENGTHTOOLONG(Integer LINK_LENGTH_TOO_LONG) {
    this.LINK_LENGTH_TOO_LONG = LINK_LENGTH_TOO_LONG;
  }


  public CatalogsFeedValidationErrors MALFORMED_XML(Integer MALFORMED_XML) {
    this.MALFORMED_XML = MALFORMED_XML;
    return this;
  }

  /**
   * Your feed couldn&#39;t be validated because the xml file is formatted incorrectly.
   * @return MALFORMED_XML
   */
  @javax.annotation.Nullable
  public Integer getMALFORMEDXML() {
    return MALFORMED_XML;
  }

  public void setMALFORMEDXML(Integer MALFORMED_XML) {
    this.MALFORMED_XML = MALFORMED_XML;
  }


  public CatalogsFeedValidationErrors PRICE_MISSING(Integer PRICE_MISSING) {
    this.PRICE_MISSING = PRICE_MISSING;
    return this;
  }

  /**
   * Some products are missing a price, those items will not be published.
   * @return PRICE_MISSING
   */
  @javax.annotation.Nullable
  public Integer getPRICEMISSING() {
    return PRICE_MISSING;
  }

  public void setPRICEMISSING(Integer PRICE_MISSING) {
    this.PRICE_MISSING = PRICE_MISSING;
  }


  public CatalogsFeedValidationErrors FEED_TOO_SMALL(Integer FEED_TOO_SMALL) {
    this.FEED_TOO_SMALL = FEED_TOO_SMALL;
    return this;
  }

  /**
   * Your feed couldn&#39;t be validated because the file doesn&#39;t contain the minimum number of lines required.
   * @return FEED_TOO_SMALL
   */
  @javax.annotation.Nullable
  public Integer getFEEDTOOSMALL() {
    return FEED_TOO_SMALL;
  }

  public void setFEEDTOOSMALL(Integer FEED_TOO_SMALL) {
    this.FEED_TOO_SMALL = FEED_TOO_SMALL;
  }


  public CatalogsFeedValidationErrors MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED(Integer MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED) {
    this.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED;
    return this;
  }

  /**
   * Some items exceed the maximum number of items per item group, those items will not be published.
   * @return MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED
   */
  @javax.annotation.Nullable
  public Integer getMAXITEMSPERITEMGROUPEXCEEDED() {
    return MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED;
  }

  public void setMAXITEMSPERITEMGROUPEXCEEDED(Integer MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED) {
    this.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED;
  }


  public CatalogsFeedValidationErrors ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE(Integer ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE) {
    this.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE;
    return this;
  }

  /**
   * Some items&#39; main images can&#39;t be found.
   * @return ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE
   */
  @javax.annotation.Nullable
  public Integer getITEMMAINIMAGEDOWNLOADFAILURE() {
    return ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE;
  }

  public void setITEMMAINIMAGEDOWNLOADFAILURE(Integer ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE) {
    this.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE;
  }


  public CatalogsFeedValidationErrors PINJOIN_CONTENT_UNSAFE(Integer PINJOIN_CONTENT_UNSAFE) {
    this.PINJOIN_CONTENT_UNSAFE = PINJOIN_CONTENT_UNSAFE;
    return this;
  }

  /**
   * Some items were not published because they don&#39;t meet Pinterest&#39;s Merchant Guidelines.
   * @return PINJOIN_CONTENT_UNSAFE
   */
  @javax.annotation.Nullable
  public Integer getPINJOINCONTENTUNSAFE() {
    return PINJOIN_CONTENT_UNSAFE;
  }

  public void setPINJOINCONTENTUNSAFE(Integer PINJOIN_CONTENT_UNSAFE) {
    this.PINJOIN_CONTENT_UNSAFE = PINJOIN_CONTENT_UNSAFE;
  }


  public CatalogsFeedValidationErrors BLOCKLISTED_IMAGE_SIGNATURE(Integer BLOCKLISTED_IMAGE_SIGNATURE) {
    this.BLOCKLISTED_IMAGE_SIGNATURE = BLOCKLISTED_IMAGE_SIGNATURE;
    return this;
  }

  /**
   * Some items were not published because they don&#39;t meet Pinterest&#39;s Merchant Guidelines.
   * @return BLOCKLISTED_IMAGE_SIGNATURE
   */
  @javax.annotation.Nullable
  public Integer getBLOCKLISTEDIMAGESIGNATURE() {
    return BLOCKLISTED_IMAGE_SIGNATURE;
  }

  public void setBLOCKLISTEDIMAGESIGNATURE(Integer BLOCKLISTED_IMAGE_SIGNATURE) {
    this.BLOCKLISTED_IMAGE_SIGNATURE = BLOCKLISTED_IMAGE_SIGNATURE;
  }


  public CatalogsFeedValidationErrors LIST_PRICE_INVALID(Integer LIST_PRICE_INVALID) {
    this.LIST_PRICE_INVALID = LIST_PRICE_INVALID;
    return this;
  }

  /**
   * Some items have list price formatting errors in their product metadata, those items will not be published.
   * @return LIST_PRICE_INVALID
   */
  @javax.annotation.Nullable
  public Integer getLISTPRICEINVALID() {
    return LIST_PRICE_INVALID;
  }

  public void setLISTPRICEINVALID(Integer LIST_PRICE_INVALID) {
    this.LIST_PRICE_INVALID = LIST_PRICE_INVALID;
  }


  public CatalogsFeedValidationErrors PRICE_CANNOT_BE_DETERMINED(Integer PRICE_CANNOT_BE_DETERMINED) {
    this.PRICE_CANNOT_BE_DETERMINED = PRICE_CANNOT_BE_DETERMINED;
    return this;
  }

  /**
   * Some items were not published because price cannot be determined. The price, list price, and sale price are all different, so those items will not be published.
   * @return PRICE_CANNOT_BE_DETERMINED
   */
  @javax.annotation.Nullable
  public Integer getPRICECANNOTBEDETERMINED() {
    return PRICE_CANNOT_BE_DETERMINED;
  }

  public void setPRICECANNOTBEDETERMINED(Integer PRICE_CANNOT_BE_DETERMINED) {
    this.PRICE_CANNOT_BE_DETERMINED = PRICE_CANNOT_BE_DETERMINED;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogsFeedValidationErrors catalogsFeedValidationErrors = (CatalogsFeedValidationErrors) o;
    return Objects.equals(this.FETCH_ERROR, catalogsFeedValidationErrors.FETCH_ERROR) &&
        Objects.equals(this.FETCH_INACTIVE_FEED_ERROR, catalogsFeedValidationErrors.FETCH_INACTIVE_FEED_ERROR) &&
        Objects.equals(this.ENCODING_ERROR, catalogsFeedValidationErrors.ENCODING_ERROR) &&
        Objects.equals(this.DELIMITER_ERROR, catalogsFeedValidationErrors.DELIMITER_ERROR) &&
        Objects.equals(this.REQUIRED_COLUMNS_MISSING, catalogsFeedValidationErrors.REQUIRED_COLUMNS_MISSING) &&
        Objects.equals(this.DUPLICATE_PRODUCTS, catalogsFeedValidationErrors.DUPLICATE_PRODUCTS) &&
        Objects.equals(this.IMAGE_LINK_INVALID, catalogsFeedValidationErrors.IMAGE_LINK_INVALID) &&
        Objects.equals(this.ITEMID_MISSING, catalogsFeedValidationErrors.ITEMID_MISSING) &&
        Objects.equals(this.TITLE_MISSING, catalogsFeedValidationErrors.TITLE_MISSING) &&
        Objects.equals(this.DESCRIPTION_MISSING, catalogsFeedValidationErrors.DESCRIPTION_MISSING) &&
        Objects.equals(this.PRODUCT_LINK_MISSING, catalogsFeedValidationErrors.PRODUCT_LINK_MISSING) &&
        Objects.equals(this.IMAGE_LINK_MISSING, catalogsFeedValidationErrors.IMAGE_LINK_MISSING) &&
        Objects.equals(this.AVAILABILITY_INVALID, catalogsFeedValidationErrors.AVAILABILITY_INVALID) &&
        Objects.equals(this.PRODUCT_PRICE_INVALID, catalogsFeedValidationErrors.PRODUCT_PRICE_INVALID) &&
        Objects.equals(this.LINK_FORMAT_INVALID, catalogsFeedValidationErrors.LINK_FORMAT_INVALID) &&
        Objects.equals(this.PARSE_LINE_ERROR, catalogsFeedValidationErrors.PARSE_LINE_ERROR) &&
        Objects.equals(this.ADWORDS_FORMAT_INVALID, catalogsFeedValidationErrors.ADWORDS_FORMAT_INVALID) &&
        Objects.equals(this.INTERNAL_SERVICE_ERROR, catalogsFeedValidationErrors.INTERNAL_SERVICE_ERROR) &&
        Objects.equals(this.NO_VERIFIED_DOMAIN, catalogsFeedValidationErrors.NO_VERIFIED_DOMAIN) &&
        Objects.equals(this.ADULT_INVALID, catalogsFeedValidationErrors.ADULT_INVALID) &&
        Objects.equals(this.IMAGE_LINK_LENGTH_TOO_LONG, catalogsFeedValidationErrors.IMAGE_LINK_LENGTH_TOO_LONG) &&
        Objects.equals(this.INVALID_DOMAIN, catalogsFeedValidationErrors.INVALID_DOMAIN) &&
        Objects.equals(this.FEED_LENGTH_TOO_LONG, catalogsFeedValidationErrors.FEED_LENGTH_TOO_LONG) &&
        Objects.equals(this.LINK_LENGTH_TOO_LONG, catalogsFeedValidationErrors.LINK_LENGTH_TOO_LONG) &&
        Objects.equals(this.MALFORMED_XML, catalogsFeedValidationErrors.MALFORMED_XML) &&
        Objects.equals(this.PRICE_MISSING, catalogsFeedValidationErrors.PRICE_MISSING) &&
        Objects.equals(this.FEED_TOO_SMALL, catalogsFeedValidationErrors.FEED_TOO_SMALL) &&
        Objects.equals(this.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED, catalogsFeedValidationErrors.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED) &&
        Objects.equals(this.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE, catalogsFeedValidationErrors.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE) &&
        Objects.equals(this.PINJOIN_CONTENT_UNSAFE, catalogsFeedValidationErrors.PINJOIN_CONTENT_UNSAFE) &&
        Objects.equals(this.BLOCKLISTED_IMAGE_SIGNATURE, catalogsFeedValidationErrors.BLOCKLISTED_IMAGE_SIGNATURE) &&
        Objects.equals(this.LIST_PRICE_INVALID, catalogsFeedValidationErrors.LIST_PRICE_INVALID) &&
        Objects.equals(this.PRICE_CANNOT_BE_DETERMINED, catalogsFeedValidationErrors.PRICE_CANNOT_BE_DETERMINED);
  }

  @Override
  public int hashCode() {
    return Objects.hash(FETCH_ERROR, FETCH_INACTIVE_FEED_ERROR, ENCODING_ERROR, DELIMITER_ERROR, REQUIRED_COLUMNS_MISSING, DUPLICATE_PRODUCTS, IMAGE_LINK_INVALID, ITEMID_MISSING, TITLE_MISSING, DESCRIPTION_MISSING, PRODUCT_LINK_MISSING, IMAGE_LINK_MISSING, AVAILABILITY_INVALID, PRODUCT_PRICE_INVALID, LINK_FORMAT_INVALID, PARSE_LINE_ERROR, ADWORDS_FORMAT_INVALID, INTERNAL_SERVICE_ERROR, NO_VERIFIED_DOMAIN, ADULT_INVALID, IMAGE_LINK_LENGTH_TOO_LONG, INVALID_DOMAIN, FEED_LENGTH_TOO_LONG, LINK_LENGTH_TOO_LONG, MALFORMED_XML, PRICE_MISSING, FEED_TOO_SMALL, MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED, ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE, PINJOIN_CONTENT_UNSAFE, BLOCKLISTED_IMAGE_SIGNATURE, LIST_PRICE_INVALID, PRICE_CANNOT_BE_DETERMINED);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogsFeedValidationErrors {\n");
    sb.append("    FETCH_ERROR: ").append(toIndentedString(FETCH_ERROR)).append("\n");
    sb.append("    FETCH_INACTIVE_FEED_ERROR: ").append(toIndentedString(FETCH_INACTIVE_FEED_ERROR)).append("\n");
    sb.append("    ENCODING_ERROR: ").append(toIndentedString(ENCODING_ERROR)).append("\n");
    sb.append("    DELIMITER_ERROR: ").append(toIndentedString(DELIMITER_ERROR)).append("\n");
    sb.append("    REQUIRED_COLUMNS_MISSING: ").append(toIndentedString(REQUIRED_COLUMNS_MISSING)).append("\n");
    sb.append("    DUPLICATE_PRODUCTS: ").append(toIndentedString(DUPLICATE_PRODUCTS)).append("\n");
    sb.append("    IMAGE_LINK_INVALID: ").append(toIndentedString(IMAGE_LINK_INVALID)).append("\n");
    sb.append("    ITEMID_MISSING: ").append(toIndentedString(ITEMID_MISSING)).append("\n");
    sb.append("    TITLE_MISSING: ").append(toIndentedString(TITLE_MISSING)).append("\n");
    sb.append("    DESCRIPTION_MISSING: ").append(toIndentedString(DESCRIPTION_MISSING)).append("\n");
    sb.append("    PRODUCT_LINK_MISSING: ").append(toIndentedString(PRODUCT_LINK_MISSING)).append("\n");
    sb.append("    IMAGE_LINK_MISSING: ").append(toIndentedString(IMAGE_LINK_MISSING)).append("\n");
    sb.append("    AVAILABILITY_INVALID: ").append(toIndentedString(AVAILABILITY_INVALID)).append("\n");
    sb.append("    PRODUCT_PRICE_INVALID: ").append(toIndentedString(PRODUCT_PRICE_INVALID)).append("\n");
    sb.append("    LINK_FORMAT_INVALID: ").append(toIndentedString(LINK_FORMAT_INVALID)).append("\n");
    sb.append("    PARSE_LINE_ERROR: ").append(toIndentedString(PARSE_LINE_ERROR)).append("\n");
    sb.append("    ADWORDS_FORMAT_INVALID: ").append(toIndentedString(ADWORDS_FORMAT_INVALID)).append("\n");
    sb.append("    INTERNAL_SERVICE_ERROR: ").append(toIndentedString(INTERNAL_SERVICE_ERROR)).append("\n");
    sb.append("    NO_VERIFIED_DOMAIN: ").append(toIndentedString(NO_VERIFIED_DOMAIN)).append("\n");
    sb.append("    ADULT_INVALID: ").append(toIndentedString(ADULT_INVALID)).append("\n");
    sb.append("    IMAGE_LINK_LENGTH_TOO_LONG: ").append(toIndentedString(IMAGE_LINK_LENGTH_TOO_LONG)).append("\n");
    sb.append("    INVALID_DOMAIN: ").append(toIndentedString(INVALID_DOMAIN)).append("\n");
    sb.append("    FEED_LENGTH_TOO_LONG: ").append(toIndentedString(FEED_LENGTH_TOO_LONG)).append("\n");
    sb.append("    LINK_LENGTH_TOO_LONG: ").append(toIndentedString(LINK_LENGTH_TOO_LONG)).append("\n");
    sb.append("    MALFORMED_XML: ").append(toIndentedString(MALFORMED_XML)).append("\n");
    sb.append("    PRICE_MISSING: ").append(toIndentedString(PRICE_MISSING)).append("\n");
    sb.append("    FEED_TOO_SMALL: ").append(toIndentedString(FEED_TOO_SMALL)).append("\n");
    sb.append("    MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED: ").append(toIndentedString(MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED)).append("\n");
    sb.append("    ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE: ").append(toIndentedString(ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE)).append("\n");
    sb.append("    PINJOIN_CONTENT_UNSAFE: ").append(toIndentedString(PINJOIN_CONTENT_UNSAFE)).append("\n");
    sb.append("    BLOCKLISTED_IMAGE_SIGNATURE: ").append(toIndentedString(BLOCKLISTED_IMAGE_SIGNATURE)).append("\n");
    sb.append("    LIST_PRICE_INVALID: ").append(toIndentedString(LIST_PRICE_INVALID)).append("\n");
    sb.append("    PRICE_CANNOT_BE_DETERMINED: ").append(toIndentedString(PRICE_CANNOT_BE_DETERMINED)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FETCH_ERROR");
    openapiFields.add("FETCH_INACTIVE_FEED_ERROR");
    openapiFields.add("ENCODING_ERROR");
    openapiFields.add("DELIMITER_ERROR");
    openapiFields.add("REQUIRED_COLUMNS_MISSING");
    openapiFields.add("DUPLICATE_PRODUCTS");
    openapiFields.add("IMAGE_LINK_INVALID");
    openapiFields.add("ITEMID_MISSING");
    openapiFields.add("TITLE_MISSING");
    openapiFields.add("DESCRIPTION_MISSING");
    openapiFields.add("PRODUCT_LINK_MISSING");
    openapiFields.add("IMAGE_LINK_MISSING");
    openapiFields.add("AVAILABILITY_INVALID");
    openapiFields.add("PRODUCT_PRICE_INVALID");
    openapiFields.add("LINK_FORMAT_INVALID");
    openapiFields.add("PARSE_LINE_ERROR");
    openapiFields.add("ADWORDS_FORMAT_INVALID");
    openapiFields.add("INTERNAL_SERVICE_ERROR");
    openapiFields.add("NO_VERIFIED_DOMAIN");
    openapiFields.add("ADULT_INVALID");
    openapiFields.add("IMAGE_LINK_LENGTH_TOO_LONG");
    openapiFields.add("INVALID_DOMAIN");
    openapiFields.add("FEED_LENGTH_TOO_LONG");
    openapiFields.add("LINK_LENGTH_TOO_LONG");
    openapiFields.add("MALFORMED_XML");
    openapiFields.add("PRICE_MISSING");
    openapiFields.add("FEED_TOO_SMALL");
    openapiFields.add("MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED");
    openapiFields.add("ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE");
    openapiFields.add("PINJOIN_CONTENT_UNSAFE");
    openapiFields.add("BLOCKLISTED_IMAGE_SIGNATURE");
    openapiFields.add("LIST_PRICE_INVALID");
    openapiFields.add("PRICE_CANNOT_BE_DETERMINED");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CatalogsFeedValidationErrors
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CatalogsFeedValidationErrors.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CatalogsFeedValidationErrors is not found in the empty JSON string", CatalogsFeedValidationErrors.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CatalogsFeedValidationErrors.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CatalogsFeedValidationErrors` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CatalogsFeedValidationErrors.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CatalogsFeedValidationErrors' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CatalogsFeedValidationErrors> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CatalogsFeedValidationErrors.class));

       return (TypeAdapter<T>) new TypeAdapter<CatalogsFeedValidationErrors>() {
           @Override
           public void write(JsonWriter out, CatalogsFeedValidationErrors value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CatalogsFeedValidationErrors read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CatalogsFeedValidationErrors given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CatalogsFeedValidationErrors
   * @throws IOException if the JSON string is invalid with respect to CatalogsFeedValidationErrors
   */
  public static CatalogsFeedValidationErrors fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CatalogsFeedValidationErrors.class);
  }

  /**
   * Convert an instance of CatalogsFeedValidationErrors to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

