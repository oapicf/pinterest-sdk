/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.BulkDownloadRequestCampaignFilter;
import com.github.oapicf.pinterestsdk.model.BulkEntityType;
import com.github.oapicf.pinterestsdk.model.BulkOutputFormat;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * Ad entities to get in bulk request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class BulkDownloadRequest {
  public static final String SERIALIZED_NAME_ENTITY_TYPES = "entity_types";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPES)
  private List<BulkEntityType> entityTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENTITY_IDS = "entity_ids";
  @SerializedName(SERIALIZED_NAME_ENTITY_IDS)
  private List<String> entityIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATED_SINCE = "updated_since";
  @SerializedName(SERIALIZED_NAME_UPDATED_SINCE)
  private String updatedSince;

  public static final String SERIALIZED_NAME_CAMPAIGN_FILTER = "campaign_filter";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_FILTER)
  private BulkDownloadRequestCampaignFilter campaignFilter;

  public static final String SERIALIZED_NAME_OUTPUT_FORMAT = "output_format";
  @SerializedName(SERIALIZED_NAME_OUTPUT_FORMAT)
  private BulkOutputFormat outputFormat = "JSON";

  public BulkDownloadRequest() {
  }

  public BulkDownloadRequest entityTypes(List<BulkEntityType> entityTypes) {
    this.entityTypes = entityTypes;
    return this;
  }

  public BulkDownloadRequest addEntityTypesItem(BulkEntityType entityTypesItem) {
    if (this.entityTypes == null) {
      this.entityTypes = new ArrayList<>();
    }
    this.entityTypes.add(entityTypesItem);
    return this;
  }

  /**
   * All entity types specified will be downloaded. Fewer types result in faster downloads.
   * @return entityTypes
   */
  @javax.annotation.Nullable
  public List<BulkEntityType> getEntityTypes() {
    return entityTypes;
  }

  public void setEntityTypes(List<BulkEntityType> entityTypes) {
    this.entityTypes = entityTypes;
  }


  public BulkDownloadRequest entityIds(List<String> entityIds) {
    this.entityIds = entityIds;
    return this;
  }

  public BulkDownloadRequest addEntityIdsItem(String entityIdsItem) {
    if (this.entityIds == null) {
      this.entityIds = new ArrayList<>();
    }
    this.entityIds.add(entityIdsItem);
    return this;
  }

  /**
   * All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
   * @return entityIds
   */
  @javax.annotation.Nullable
  public List<String> getEntityIds() {
    return entityIds;
  }

  public void setEntityIds(List<String> entityIds) {
    this.entityIds = entityIds;
  }


  public BulkDownloadRequest updatedSince(String updatedSince) {
    this.updatedSince = updatedSince;
    return this;
  }

  /**
   * Unix UTC timestamp to retrieve all entities that have changed since this time.
   * @return updatedSince
   */
  @javax.annotation.Nullable
  public String getUpdatedSince() {
    return updatedSince;
  }

  public void setUpdatedSince(String updatedSince) {
    this.updatedSince = updatedSince;
  }


  public BulkDownloadRequest campaignFilter(BulkDownloadRequestCampaignFilter campaignFilter) {
    this.campaignFilter = campaignFilter;
    return this;
  }

  /**
   * Get campaignFilter
   * @return campaignFilter
   */
  @javax.annotation.Nullable
  public BulkDownloadRequestCampaignFilter getCampaignFilter() {
    return campaignFilter;
  }

  public void setCampaignFilter(BulkDownloadRequestCampaignFilter campaignFilter) {
    this.campaignFilter = campaignFilter;
  }


  public BulkDownloadRequest outputFormat(BulkOutputFormat outputFormat) {
    this.outputFormat = outputFormat;
    return this;
  }

  /**
   * Get outputFormat
   * @return outputFormat
   */
  @javax.annotation.Nullable
  public BulkOutputFormat getOutputFormat() {
    return outputFormat;
  }

  public void setOutputFormat(BulkOutputFormat outputFormat) {
    this.outputFormat = outputFormat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkDownloadRequest bulkDownloadRequest = (BulkDownloadRequest) o;
    return Objects.equals(this.entityTypes, bulkDownloadRequest.entityTypes) &&
        Objects.equals(this.entityIds, bulkDownloadRequest.entityIds) &&
        Objects.equals(this.updatedSince, bulkDownloadRequest.updatedSince) &&
        Objects.equals(this.campaignFilter, bulkDownloadRequest.campaignFilter) &&
        Objects.equals(this.outputFormat, bulkDownloadRequest.outputFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityTypes, entityIds, updatedSince, campaignFilter, outputFormat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkDownloadRequest {\n");
    sb.append("    entityTypes: ").append(toIndentedString(entityTypes)).append("\n");
    sb.append("    entityIds: ").append(toIndentedString(entityIds)).append("\n");
    sb.append("    updatedSince: ").append(toIndentedString(updatedSince)).append("\n");
    sb.append("    campaignFilter: ").append(toIndentedString(campaignFilter)).append("\n");
    sb.append("    outputFormat: ").append(toIndentedString(outputFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_types");
    openapiFields.add("entity_ids");
    openapiFields.add("updated_since");
    openapiFields.add("campaign_filter");
    openapiFields.add("output_format");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BulkDownloadRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BulkDownloadRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BulkDownloadRequest is not found in the empty JSON string", BulkDownloadRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BulkDownloadRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BulkDownloadRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("entity_types") != null && !jsonObj.get("entity_types").isJsonNull() && !jsonObj.get("entity_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_types` to be an array in the JSON string but got `%s`", jsonObj.get("entity_types").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("entity_ids") != null && !jsonObj.get("entity_ids").isJsonNull() && !jsonObj.get("entity_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_ids` to be an array in the JSON string but got `%s`", jsonObj.get("entity_ids").toString()));
      }
      if ((jsonObj.get("updated_since") != null && !jsonObj.get("updated_since").isJsonNull()) && !jsonObj.get("updated_since").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_since` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_since").toString()));
      }
      // validate the optional field `campaign_filter`
      if (jsonObj.get("campaign_filter") != null && !jsonObj.get("campaign_filter").isJsonNull()) {
        BulkDownloadRequestCampaignFilter.validateJsonElement(jsonObj.get("campaign_filter"));
      }
      // validate the optional field `output_format`
      if (jsonObj.get("output_format") != null && !jsonObj.get("output_format").isJsonNull()) {
        BulkOutputFormat.validateJsonElement(jsonObj.get("output_format"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BulkDownloadRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BulkDownloadRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BulkDownloadRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BulkDownloadRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<BulkDownloadRequest>() {
           @Override
           public void write(JsonWriter out, BulkDownloadRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BulkDownloadRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BulkDownloadRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BulkDownloadRequest
   * @throws IOException if the JSON string is invalid with respect to BulkDownloadRequest
   */
  public static BulkDownloadRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BulkDownloadRequest.class);
  }

  /**
   * Convert an instance of BulkDownloadRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

