/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.AdGroupSummaryStatus;
import com.github.oapicf.pinterestsdk.model.AdsAnalyticsMetricsFilter;
import com.github.oapicf.pinterestsdk.model.AdsAnalyticsTargetingType;
import com.github.oapicf.pinterestsdk.model.CampaignSummaryStatus;
import com.github.oapicf.pinterestsdk.model.ConversionAttributionWindowDays;
import com.github.oapicf.pinterestsdk.model.ConversionReportAttributionType;
import com.github.oapicf.pinterestsdk.model.ConversionReportTimeType;
import com.github.oapicf.pinterestsdk.model.DataOutputFormat;
import com.github.oapicf.pinterestsdk.model.Granularity;
import com.github.oapicf.pinterestsdk.model.MetricsReportingLevel;
import com.github.oapicf.pinterestsdk.model.ObjectiveType;
import com.github.oapicf.pinterestsdk.model.PinPromotionSummaryStatus;
import com.github.oapicf.pinterestsdk.model.ProductGroupSummaryStatus;
import com.github.oapicf.pinterestsdk.model.ReportingColumnAsync;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * AdsAnalyticsCreateAsyncRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class AdsAnalyticsCreateAsyncRequest {
  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "end_date";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_GRANULARITY = "granularity";
  @SerializedName(SERIALIZED_NAME_GRANULARITY)
  private Granularity granularity;

  public static final String SERIALIZED_NAME_CLICK_WINDOW_DAYS = "click_window_days";
  @SerializedName(SERIALIZED_NAME_CLICK_WINDOW_DAYS)
  private ConversionAttributionWindowDays clickWindowDays = ConversionAttributionWindowDays.NUMBER_30;

  public static final String SERIALIZED_NAME_ENGAGEMENT_WINDOW_DAYS = "engagement_window_days";
  @SerializedName(SERIALIZED_NAME_ENGAGEMENT_WINDOW_DAYS)
  private ConversionAttributionWindowDays engagementWindowDays = ConversionAttributionWindowDays.NUMBER_30;

  public static final String SERIALIZED_NAME_VIEW_WINDOW_DAYS = "view_window_days";
  @SerializedName(SERIALIZED_NAME_VIEW_WINDOW_DAYS)
  private ConversionAttributionWindowDays viewWindowDays = ConversionAttributionWindowDays.NUMBER_1;

  public static final String SERIALIZED_NAME_CONVERSION_REPORT_TIME = "conversion_report_time";
  @SerializedName(SERIALIZED_NAME_CONVERSION_REPORT_TIME)
  private ConversionReportTimeType conversionReportTime = "TIME_OF_AD_ACTION";

  public static final String SERIALIZED_NAME_ATTRIBUTION_TYPES = "attribution_types";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_TYPES)
  private List<ConversionReportAttributionType> attributionTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_CAMPAIGN_IDS = "campaign_ids";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_IDS)
  private List<String> campaignIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_CAMPAIGN_STATUSES = "campaign_statuses";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_STATUSES)
  private List<CampaignSummaryStatus> campaignStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_CAMPAIGN_OBJECTIVE_TYPES = "campaign_objective_types";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_OBJECTIVE_TYPES)
  private List<ObjectiveType> campaignObjectiveTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_GROUP_IDS = "ad_group_ids";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_IDS)
  private List<String> adGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_GROUP_STATUSES = "ad_group_statuses";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_STATUSES)
  private List<AdGroupSummaryStatus> adGroupStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_IDS = "ad_ids";
  @SerializedName(SERIALIZED_NAME_AD_IDS)
  private List<String> adIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_STATUSES = "ad_statuses";
  @SerializedName(SERIALIZED_NAME_AD_STATUSES)
  private List<PinPromotionSummaryStatus> adStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_GROUP_IDS = "product_group_ids";
  @SerializedName(SERIALIZED_NAME_PRODUCT_GROUP_IDS)
  private List<String> productGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_GROUP_STATUSES = "product_group_statuses";
  @SerializedName(SERIALIZED_NAME_PRODUCT_GROUP_STATUSES)
  private List<ProductGroupSummaryStatus> productGroupStatuses = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_ITEM_IDS = "product_item_ids";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ITEM_IDS)
  private List<String> productItemIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGETING_TYPES = "targeting_types";
  @SerializedName(SERIALIZED_NAME_TARGETING_TYPES)
  private List<AdsAnalyticsTargetingType> targetingTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_METRICS_FILTERS = "metrics_filters";
  @SerializedName(SERIALIZED_NAME_METRICS_FILTERS)
  private List<AdsAnalyticsMetricsFilter> metricsFilters = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLUMNS = "columns";
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<ReportingColumnAsync> columns = new ArrayList<>();

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private MetricsReportingLevel level;

  public static final String SERIALIZED_NAME_REPORT_FORMAT = "report_format";
  @SerializedName(SERIALIZED_NAME_REPORT_FORMAT)
  private DataOutputFormat reportFormat = "JSON";

  /**
   * Whether to first sort the report by date or by entity ID of the reporting entity level. Date will be used as the first level key for JSON reports that use BY_DATE. BY_DATE is recommended for large requests.
   */
  @JsonAdapter(PrimarySortEnum.Adapter.class)
  public enum PrimarySortEnum {
    ID("BY_ID"),
    
    DATE("BY_DATE");

    private String value;

    PrimarySortEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PrimarySortEnum fromValue(String value) {
      for (PrimarySortEnum b : PrimarySortEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PrimarySortEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PrimarySortEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PrimarySortEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PrimarySortEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PrimarySortEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PRIMARY_SORT = "primary_sort";
  @SerializedName(SERIALIZED_NAME_PRIMARY_SORT)
  private PrimarySortEnum primarySort;

  public static final String SERIALIZED_NAME_START_HOUR = "start_hour";
  @SerializedName(SERIALIZED_NAME_START_HOUR)
  private Integer startHour;

  public static final String SERIALIZED_NAME_END_HOUR = "end_hour";
  @SerializedName(SERIALIZED_NAME_END_HOUR)
  private Integer endHour;

  public AdsAnalyticsCreateAsyncRequest() {
  }

  public AdsAnalyticsCreateAsyncRequest startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Metric report start date (UTC). Format: YYYY-MM-DD
   * @return startDate
   */
  @javax.annotation.Nonnull
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public AdsAnalyticsCreateAsyncRequest endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Metric report end date (UTC). Format: YYYY-MM-DD
   * @return endDate
   */
  @javax.annotation.Nonnull
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public AdsAnalyticsCreateAsyncRequest granularity(Granularity granularity) {
    this.granularity = granularity;
    return this;
  }

  /**
   * TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly
   * @return granularity
   */
  @javax.annotation.Nonnull
  public Granularity getGranularity() {
    return granularity;
  }

  public void setGranularity(Granularity granularity) {
    this.granularity = granularity;
  }


  public AdsAnalyticsCreateAsyncRequest clickWindowDays(ConversionAttributionWindowDays clickWindowDays) {
    this.clickWindowDays = clickWindowDays;
    return this;
  }

  /**
   * Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days.
   * @return clickWindowDays
   */
  @javax.annotation.Nullable
  public ConversionAttributionWindowDays getClickWindowDays() {
    return clickWindowDays;
  }

  public void setClickWindowDays(ConversionAttributionWindowDays clickWindowDays) {
    this.clickWindowDays = clickWindowDays;
  }


  public AdsAnalyticsCreateAsyncRequest engagementWindowDays(ConversionAttributionWindowDays engagementWindowDays) {
    this.engagementWindowDays = engagementWindowDays;
    return this;
  }

  /**
   * Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days.
   * @return engagementWindowDays
   */
  @javax.annotation.Nullable
  public ConversionAttributionWindowDays getEngagementWindowDays() {
    return engagementWindowDays;
  }

  public void setEngagementWindowDays(ConversionAttributionWindowDays engagementWindowDays) {
    this.engagementWindowDays = engagementWindowDays;
  }


  public AdsAnalyticsCreateAsyncRequest viewWindowDays(ConversionAttributionWindowDays viewWindowDays) {
    this.viewWindowDays = viewWindowDays;
    return this;
  }

  /**
   * Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day.
   * @return viewWindowDays
   */
  @javax.annotation.Nullable
  public ConversionAttributionWindowDays getViewWindowDays() {
    return viewWindowDays;
  }

  public void setViewWindowDays(ConversionAttributionWindowDays viewWindowDays) {
    this.viewWindowDays = viewWindowDays;
  }


  public AdsAnalyticsCreateAsyncRequest conversionReportTime(ConversionReportTimeType conversionReportTime) {
    this.conversionReportTime = conversionReportTime;
    return this;
  }

  /**
   * The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
   * @return conversionReportTime
   */
  @javax.annotation.Nullable
  public ConversionReportTimeType getConversionReportTime() {
    return conversionReportTime;
  }

  public void setConversionReportTime(ConversionReportTimeType conversionReportTime) {
    this.conversionReportTime = conversionReportTime;
  }


  public AdsAnalyticsCreateAsyncRequest attributionTypes(List<ConversionReportAttributionType> attributionTypes) {
    this.attributionTypes = attributionTypes;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addAttributionTypesItem(ConversionReportAttributionType attributionTypesItem) {
    if (this.attributionTypes == null) {
      this.attributionTypes = new ArrayList<>();
    }
    this.attributionTypes.add(attributionTypesItem);
    return this;
  }

  /**
   * List of types of attribution for the conversion report
   * @return attributionTypes
   */
  @javax.annotation.Nullable
  public List<ConversionReportAttributionType> getAttributionTypes() {
    return attributionTypes;
  }

  public void setAttributionTypes(List<ConversionReportAttributionType> attributionTypes) {
    this.attributionTypes = attributionTypes;
  }


  public AdsAnalyticsCreateAsyncRequest campaignIds(List<String> campaignIds) {
    this.campaignIds = campaignIds;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addCampaignIdsItem(String campaignIdsItem) {
    if (this.campaignIds == null) {
      this.campaignIds = new ArrayList<>();
    }
    this.campaignIds.add(campaignIdsItem);
    return this;
  }

  /**
   * List of campaign ids
   * @return campaignIds
   */
  @javax.annotation.Nullable
  public List<String> getCampaignIds() {
    return campaignIds;
  }

  public void setCampaignIds(List<String> campaignIds) {
    this.campaignIds = campaignIds;
  }


  public AdsAnalyticsCreateAsyncRequest campaignStatuses(List<CampaignSummaryStatus> campaignStatuses) {
    this.campaignStatuses = campaignStatuses;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addCampaignStatusesItem(CampaignSummaryStatus campaignStatusesItem) {
    if (this.campaignStatuses == null) {
      this.campaignStatuses = new ArrayList<>();
    }
    this.campaignStatuses.add(campaignStatusesItem);
    return this;
  }

  /**
   * List of status values for filtering
   * @return campaignStatuses
   */
  @javax.annotation.Nullable
  public List<CampaignSummaryStatus> getCampaignStatuses() {
    return campaignStatuses;
  }

  public void setCampaignStatuses(List<CampaignSummaryStatus> campaignStatuses) {
    this.campaignStatuses = campaignStatuses;
  }


  public AdsAnalyticsCreateAsyncRequest campaignObjectiveTypes(List<ObjectiveType> campaignObjectiveTypes) {
    this.campaignObjectiveTypes = campaignObjectiveTypes;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addCampaignObjectiveTypesItem(ObjectiveType campaignObjectiveTypesItem) {
    if (this.campaignObjectiveTypes == null) {
      this.campaignObjectiveTypes = new ArrayList<>();
    }
    this.campaignObjectiveTypes.add(campaignObjectiveTypesItem);
    return this;
  }

  /**
   * List of values for filtering. [\&quot;WEB_SESSIONS\&quot;] in BETA.
   * @return campaignObjectiveTypes
   */
  @javax.annotation.Nullable
  public List<ObjectiveType> getCampaignObjectiveTypes() {
    return campaignObjectiveTypes;
  }

  public void setCampaignObjectiveTypes(List<ObjectiveType> campaignObjectiveTypes) {
    this.campaignObjectiveTypes = campaignObjectiveTypes;
  }


  public AdsAnalyticsCreateAsyncRequest adGroupIds(List<String> adGroupIds) {
    this.adGroupIds = adGroupIds;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addAdGroupIdsItem(String adGroupIdsItem) {
    if (this.adGroupIds == null) {
      this.adGroupIds = new ArrayList<>();
    }
    this.adGroupIds.add(adGroupIdsItem);
    return this;
  }

  /**
   * List of ad group ids
   * @return adGroupIds
   */
  @javax.annotation.Nullable
  public List<String> getAdGroupIds() {
    return adGroupIds;
  }

  public void setAdGroupIds(List<String> adGroupIds) {
    this.adGroupIds = adGroupIds;
  }


  public AdsAnalyticsCreateAsyncRequest adGroupStatuses(List<AdGroupSummaryStatus> adGroupStatuses) {
    this.adGroupStatuses = adGroupStatuses;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addAdGroupStatusesItem(AdGroupSummaryStatus adGroupStatusesItem) {
    if (this.adGroupStatuses == null) {
      this.adGroupStatuses = new ArrayList<>();
    }
    this.adGroupStatuses.add(adGroupStatusesItem);
    return this;
  }

  /**
   * List of values for filtering
   * @return adGroupStatuses
   */
  @javax.annotation.Nullable
  public List<AdGroupSummaryStatus> getAdGroupStatuses() {
    return adGroupStatuses;
  }

  public void setAdGroupStatuses(List<AdGroupSummaryStatus> adGroupStatuses) {
    this.adGroupStatuses = adGroupStatuses;
  }


  public AdsAnalyticsCreateAsyncRequest adIds(List<String> adIds) {
    this.adIds = adIds;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addAdIdsItem(String adIdsItem) {
    if (this.adIds == null) {
      this.adIds = new ArrayList<>();
    }
    this.adIds.add(adIdsItem);
    return this;
  }

  /**
   * List of ad ids [This parameter is no supported for Product Item Level Reports]
   * @return adIds
   */
  @javax.annotation.Nullable
  public List<String> getAdIds() {
    return adIds;
  }

  public void setAdIds(List<String> adIds) {
    this.adIds = adIds;
  }


  public AdsAnalyticsCreateAsyncRequest adStatuses(List<PinPromotionSummaryStatus> adStatuses) {
    this.adStatuses = adStatuses;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addAdStatusesItem(PinPromotionSummaryStatus adStatusesItem) {
    if (this.adStatuses == null) {
      this.adStatuses = new ArrayList<>();
    }
    this.adStatuses.add(adStatusesItem);
    return this;
  }

  /**
   * List of values for filtering [This parameter is not supported for Product Item Level Reports]
   * @return adStatuses
   */
  @javax.annotation.Nullable
  public List<PinPromotionSummaryStatus> getAdStatuses() {
    return adStatuses;
  }

  public void setAdStatuses(List<PinPromotionSummaryStatus> adStatuses) {
    this.adStatuses = adStatuses;
  }


  public AdsAnalyticsCreateAsyncRequest productGroupIds(List<String> productGroupIds) {
    this.productGroupIds = productGroupIds;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addProductGroupIdsItem(String productGroupIdsItem) {
    if (this.productGroupIds == null) {
      this.productGroupIds = new ArrayList<>();
    }
    this.productGroupIds.add(productGroupIdsItem);
    return this;
  }

  /**
   * List of product group ids
   * @return productGroupIds
   */
  @javax.annotation.Nullable
  public List<String> getProductGroupIds() {
    return productGroupIds;
  }

  public void setProductGroupIds(List<String> productGroupIds) {
    this.productGroupIds = productGroupIds;
  }


  public AdsAnalyticsCreateAsyncRequest productGroupStatuses(List<ProductGroupSummaryStatus> productGroupStatuses) {
    this.productGroupStatuses = productGroupStatuses;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addProductGroupStatusesItem(ProductGroupSummaryStatus productGroupStatusesItem) {
    if (this.productGroupStatuses == null) {
      this.productGroupStatuses = new ArrayList<>();
    }
    this.productGroupStatuses.add(productGroupStatusesItem);
    return this;
  }

  /**
   * List of values for filtering
   * @return productGroupStatuses
   */
  @javax.annotation.Nullable
  public List<ProductGroupSummaryStatus> getProductGroupStatuses() {
    return productGroupStatuses;
  }

  public void setProductGroupStatuses(List<ProductGroupSummaryStatus> productGroupStatuses) {
    this.productGroupStatuses = productGroupStatuses;
  }


  public AdsAnalyticsCreateAsyncRequest productItemIds(List<String> productItemIds) {
    this.productItemIds = productItemIds;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addProductItemIdsItem(String productItemIdsItem) {
    if (this.productItemIds == null) {
      this.productItemIds = new ArrayList<>();
    }
    this.productItemIds.add(productItemIdsItem);
    return this;
  }

  /**
   * List of product item ids
   * @return productItemIds
   */
  @javax.annotation.Nullable
  public List<String> getProductItemIds() {
    return productItemIds;
  }

  public void setProductItemIds(List<String> productItemIds) {
    this.productItemIds = productItemIds;
  }


  public AdsAnalyticsCreateAsyncRequest targetingTypes(List<AdsAnalyticsTargetingType> targetingTypes) {
    this.targetingTypes = targetingTypes;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addTargetingTypesItem(AdsAnalyticsTargetingType targetingTypesItem) {
    if (this.targetingTypes == null) {
      this.targetingTypes = new ArrayList<>();
    }
    this.targetingTypes.add(targetingTypesItem);
    return this;
  }

  /**
   * List of targeting types. Requires &#x60;level&#x60; to be a value ending in &#x60;_TARGETING&#x60;. [\&quot;AGE_BUCKET_AND_GENDER\&quot;] is in BETA and not yet available to all users.
   * @return targetingTypes
   */
  @javax.annotation.Nullable
  public List<AdsAnalyticsTargetingType> getTargetingTypes() {
    return targetingTypes;
  }

  public void setTargetingTypes(List<AdsAnalyticsTargetingType> targetingTypes) {
    this.targetingTypes = targetingTypes;
  }


  public AdsAnalyticsCreateAsyncRequest metricsFilters(List<AdsAnalyticsMetricsFilter> metricsFilters) {
    this.metricsFilters = metricsFilters;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addMetricsFiltersItem(AdsAnalyticsMetricsFilter metricsFiltersItem) {
    if (this.metricsFilters == null) {
      this.metricsFilters = new ArrayList<>();
    }
    this.metricsFilters.add(metricsFiltersItem);
    return this;
  }

  /**
   * List of metrics filters
   * @return metricsFilters
   */
  @javax.annotation.Nullable
  public List<AdsAnalyticsMetricsFilter> getMetricsFilters() {
    return metricsFilters;
  }

  public void setMetricsFilters(List<AdsAnalyticsMetricsFilter> metricsFilters) {
    this.metricsFilters = metricsFilters;
  }


  public AdsAnalyticsCreateAsyncRequest columns(List<ReportingColumnAsync> columns) {
    this.columns = columns;
    return this;
  }

  public AdsAnalyticsCreateAsyncRequest addColumnsItem(ReportingColumnAsync columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<>();
    }
    this.columns.add(columnsItem);
    return this;
  }

  /**
   * Metric and entity columns. Pin promotion and ad related columns are not supported for the Product Item level reports.
   * @return columns
   */
  @javax.annotation.Nonnull
  public List<ReportingColumnAsync> getColumns() {
    return columns;
  }

  public void setColumns(List<ReportingColumnAsync> columns) {
    this.columns = columns;
  }


  public AdsAnalyticsCreateAsyncRequest level(MetricsReportingLevel level) {
    this.level = level;
    return this;
  }

  /**
   * Level of the report
   * @return level
   */
  @javax.annotation.Nonnull
  public MetricsReportingLevel getLevel() {
    return level;
  }

  public void setLevel(MetricsReportingLevel level) {
    this.level = level;
  }


  public AdsAnalyticsCreateAsyncRequest reportFormat(DataOutputFormat reportFormat) {
    this.reportFormat = reportFormat;
    return this;
  }

  /**
   * Specification for formatting the report data. Reports in JSON will not zero-fill metrics, whereas reports in CSV will. Both report formats will omit rows where all the columns are equal to 0.
   * @return reportFormat
   */
  @javax.annotation.Nullable
  public DataOutputFormat getReportFormat() {
    return reportFormat;
  }

  public void setReportFormat(DataOutputFormat reportFormat) {
    this.reportFormat = reportFormat;
  }


  public AdsAnalyticsCreateAsyncRequest primarySort(PrimarySortEnum primarySort) {
    this.primarySort = primarySort;
    return this;
  }

  /**
   * Whether to first sort the report by date or by entity ID of the reporting entity level. Date will be used as the first level key for JSON reports that use BY_DATE. BY_DATE is recommended for large requests.
   * @return primarySort
   */
  @javax.annotation.Nullable
  public PrimarySortEnum getPrimarySort() {
    return primarySort;
  }

  public void setPrimarySort(PrimarySortEnum primarySort) {
    this.primarySort = primarySort;
  }


  public AdsAnalyticsCreateAsyncRequest startHour(Integer startHour) {
    this.startHour = startHour;
    return this;
  }

  /**
   * Which hour of the start date to begin the report. The entire day will be included if no start hour is provided. Only allowed for hourly reports.
   * minimum: 0
   * maximum: 23
   * @return startHour
   */
  @javax.annotation.Nullable
  public Integer getStartHour() {
    return startHour;
  }

  public void setStartHour(Integer startHour) {
    this.startHour = startHour;
  }


  public AdsAnalyticsCreateAsyncRequest endHour(Integer endHour) {
    this.endHour = endHour;
    return this;
  }

  /**
   * Which hour of the end date to stop the report (inclusive). For example, with an end_date of &#39;2020-01-01&#39; and end_hour of &#39;15&#39;, the report will contain metrics up to &#39;2020-01-01 14:59:59&#39;. The entire day will be included if no end hour is provided. Only allowed for hourly reports.
   * minimum: 0
   * maximum: 23
   * @return endHour
   */
  @javax.annotation.Nullable
  public Integer getEndHour() {
    return endHour;
  }

  public void setEndHour(Integer endHour) {
    this.endHour = endHour;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdsAnalyticsCreateAsyncRequest adsAnalyticsCreateAsyncRequest = (AdsAnalyticsCreateAsyncRequest) o;
    return Objects.equals(this.startDate, adsAnalyticsCreateAsyncRequest.startDate) &&
        Objects.equals(this.endDate, adsAnalyticsCreateAsyncRequest.endDate) &&
        Objects.equals(this.granularity, adsAnalyticsCreateAsyncRequest.granularity) &&
        Objects.equals(this.clickWindowDays, adsAnalyticsCreateAsyncRequest.clickWindowDays) &&
        Objects.equals(this.engagementWindowDays, adsAnalyticsCreateAsyncRequest.engagementWindowDays) &&
        Objects.equals(this.viewWindowDays, adsAnalyticsCreateAsyncRequest.viewWindowDays) &&
        Objects.equals(this.conversionReportTime, adsAnalyticsCreateAsyncRequest.conversionReportTime) &&
        Objects.equals(this.attributionTypes, adsAnalyticsCreateAsyncRequest.attributionTypes) &&
        Objects.equals(this.campaignIds, adsAnalyticsCreateAsyncRequest.campaignIds) &&
        Objects.equals(this.campaignStatuses, adsAnalyticsCreateAsyncRequest.campaignStatuses) &&
        Objects.equals(this.campaignObjectiveTypes, adsAnalyticsCreateAsyncRequest.campaignObjectiveTypes) &&
        Objects.equals(this.adGroupIds, adsAnalyticsCreateAsyncRequest.adGroupIds) &&
        Objects.equals(this.adGroupStatuses, adsAnalyticsCreateAsyncRequest.adGroupStatuses) &&
        Objects.equals(this.adIds, adsAnalyticsCreateAsyncRequest.adIds) &&
        Objects.equals(this.adStatuses, adsAnalyticsCreateAsyncRequest.adStatuses) &&
        Objects.equals(this.productGroupIds, adsAnalyticsCreateAsyncRequest.productGroupIds) &&
        Objects.equals(this.productGroupStatuses, adsAnalyticsCreateAsyncRequest.productGroupStatuses) &&
        Objects.equals(this.productItemIds, adsAnalyticsCreateAsyncRequest.productItemIds) &&
        Objects.equals(this.targetingTypes, adsAnalyticsCreateAsyncRequest.targetingTypes) &&
        Objects.equals(this.metricsFilters, adsAnalyticsCreateAsyncRequest.metricsFilters) &&
        Objects.equals(this.columns, adsAnalyticsCreateAsyncRequest.columns) &&
        Objects.equals(this.level, adsAnalyticsCreateAsyncRequest.level) &&
        Objects.equals(this.reportFormat, adsAnalyticsCreateAsyncRequest.reportFormat) &&
        Objects.equals(this.primarySort, adsAnalyticsCreateAsyncRequest.primarySort) &&
        Objects.equals(this.startHour, adsAnalyticsCreateAsyncRequest.startHour) &&
        Objects.equals(this.endHour, adsAnalyticsCreateAsyncRequest.endHour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, endDate, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, attributionTypes, campaignIds, campaignStatuses, campaignObjectiveTypes, adGroupIds, adGroupStatuses, adIds, adStatuses, productGroupIds, productGroupStatuses, productItemIds, targetingTypes, metricsFilters, columns, level, reportFormat, primarySort, startHour, endHour);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdsAnalyticsCreateAsyncRequest {\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("    clickWindowDays: ").append(toIndentedString(clickWindowDays)).append("\n");
    sb.append("    engagementWindowDays: ").append(toIndentedString(engagementWindowDays)).append("\n");
    sb.append("    viewWindowDays: ").append(toIndentedString(viewWindowDays)).append("\n");
    sb.append("    conversionReportTime: ").append(toIndentedString(conversionReportTime)).append("\n");
    sb.append("    attributionTypes: ").append(toIndentedString(attributionTypes)).append("\n");
    sb.append("    campaignIds: ").append(toIndentedString(campaignIds)).append("\n");
    sb.append("    campaignStatuses: ").append(toIndentedString(campaignStatuses)).append("\n");
    sb.append("    campaignObjectiveTypes: ").append(toIndentedString(campaignObjectiveTypes)).append("\n");
    sb.append("    adGroupIds: ").append(toIndentedString(adGroupIds)).append("\n");
    sb.append("    adGroupStatuses: ").append(toIndentedString(adGroupStatuses)).append("\n");
    sb.append("    adIds: ").append(toIndentedString(adIds)).append("\n");
    sb.append("    adStatuses: ").append(toIndentedString(adStatuses)).append("\n");
    sb.append("    productGroupIds: ").append(toIndentedString(productGroupIds)).append("\n");
    sb.append("    productGroupStatuses: ").append(toIndentedString(productGroupStatuses)).append("\n");
    sb.append("    productItemIds: ").append(toIndentedString(productItemIds)).append("\n");
    sb.append("    targetingTypes: ").append(toIndentedString(targetingTypes)).append("\n");
    sb.append("    metricsFilters: ").append(toIndentedString(metricsFilters)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    reportFormat: ").append(toIndentedString(reportFormat)).append("\n");
    sb.append("    primarySort: ").append(toIndentedString(primarySort)).append("\n");
    sb.append("    startHour: ").append(toIndentedString(startHour)).append("\n");
    sb.append("    endHour: ").append(toIndentedString(endHour)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("start_date");
    openapiFields.add("end_date");
    openapiFields.add("granularity");
    openapiFields.add("click_window_days");
    openapiFields.add("engagement_window_days");
    openapiFields.add("view_window_days");
    openapiFields.add("conversion_report_time");
    openapiFields.add("attribution_types");
    openapiFields.add("campaign_ids");
    openapiFields.add("campaign_statuses");
    openapiFields.add("campaign_objective_types");
    openapiFields.add("ad_group_ids");
    openapiFields.add("ad_group_statuses");
    openapiFields.add("ad_ids");
    openapiFields.add("ad_statuses");
    openapiFields.add("product_group_ids");
    openapiFields.add("product_group_statuses");
    openapiFields.add("product_item_ids");
    openapiFields.add("targeting_types");
    openapiFields.add("metrics_filters");
    openapiFields.add("columns");
    openapiFields.add("level");
    openapiFields.add("report_format");
    openapiFields.add("primary_sort");
    openapiFields.add("start_hour");
    openapiFields.add("end_hour");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("start_date");
    openapiRequiredFields.add("end_date");
    openapiRequiredFields.add("granularity");
    openapiRequiredFields.add("columns");
    openapiRequiredFields.add("level");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdsAnalyticsCreateAsyncRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdsAnalyticsCreateAsyncRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdsAnalyticsCreateAsyncRequest is not found in the empty JSON string", AdsAnalyticsCreateAsyncRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdsAnalyticsCreateAsyncRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdsAnalyticsCreateAsyncRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AdsAnalyticsCreateAsyncRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("start_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_date").toString()));
      }
      if (!jsonObj.get("end_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_date").toString()));
      }
      // validate the required field `granularity`
      Granularity.validateJsonElement(jsonObj.get("granularity"));
      // validate the optional field `click_window_days`
      if (jsonObj.get("click_window_days") != null && !jsonObj.get("click_window_days").isJsonNull()) {
        ConversionAttributionWindowDays.validateJsonElement(jsonObj.get("click_window_days"));
      }
      // validate the optional field `engagement_window_days`
      if (jsonObj.get("engagement_window_days") != null && !jsonObj.get("engagement_window_days").isJsonNull()) {
        ConversionAttributionWindowDays.validateJsonElement(jsonObj.get("engagement_window_days"));
      }
      // validate the optional field `view_window_days`
      if (jsonObj.get("view_window_days") != null && !jsonObj.get("view_window_days").isJsonNull()) {
        ConversionAttributionWindowDays.validateJsonElement(jsonObj.get("view_window_days"));
      }
      // validate the optional field `conversion_report_time`
      if (jsonObj.get("conversion_report_time") != null && !jsonObj.get("conversion_report_time").isJsonNull()) {
        ConversionReportTimeType.validateJsonElement(jsonObj.get("conversion_report_time"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("attribution_types") != null && !jsonObj.get("attribution_types").isJsonNull() && !jsonObj.get("attribution_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `attribution_types` to be an array in the JSON string but got `%s`", jsonObj.get("attribution_types").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("campaign_ids") != null && !jsonObj.get("campaign_ids").isJsonNull() && !jsonObj.get("campaign_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_ids` to be an array in the JSON string but got `%s`", jsonObj.get("campaign_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("campaign_statuses") != null && !jsonObj.get("campaign_statuses").isJsonNull() && !jsonObj.get("campaign_statuses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_statuses` to be an array in the JSON string but got `%s`", jsonObj.get("campaign_statuses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("campaign_objective_types") != null && !jsonObj.get("campaign_objective_types").isJsonNull() && !jsonObj.get("campaign_objective_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaign_objective_types` to be an array in the JSON string but got `%s`", jsonObj.get("campaign_objective_types").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ad_group_ids") != null && !jsonObj.get("ad_group_ids").isJsonNull() && !jsonObj.get("ad_group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("ad_group_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ad_group_statuses") != null && !jsonObj.get("ad_group_statuses").isJsonNull() && !jsonObj.get("ad_group_statuses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_group_statuses` to be an array in the JSON string but got `%s`", jsonObj.get("ad_group_statuses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ad_ids") != null && !jsonObj.get("ad_ids").isJsonNull() && !jsonObj.get("ad_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_ids` to be an array in the JSON string but got `%s`", jsonObj.get("ad_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ad_statuses") != null && !jsonObj.get("ad_statuses").isJsonNull() && !jsonObj.get("ad_statuses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ad_statuses` to be an array in the JSON string but got `%s`", jsonObj.get("ad_statuses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_group_ids") != null && !jsonObj.get("product_group_ids").isJsonNull() && !jsonObj.get("product_group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("product_group_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_group_statuses") != null && !jsonObj.get("product_group_statuses").isJsonNull() && !jsonObj.get("product_group_statuses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_group_statuses` to be an array in the JSON string but got `%s`", jsonObj.get("product_group_statuses").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_item_ids") != null && !jsonObj.get("product_item_ids").isJsonNull() && !jsonObj.get("product_item_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_item_ids` to be an array in the JSON string but got `%s`", jsonObj.get("product_item_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targeting_types") != null && !jsonObj.get("targeting_types").isJsonNull() && !jsonObj.get("targeting_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targeting_types` to be an array in the JSON string but got `%s`", jsonObj.get("targeting_types").toString()));
      }
      if (jsonObj.get("metrics_filters") != null && !jsonObj.get("metrics_filters").isJsonNull()) {
        JsonArray jsonArraymetricsFilters = jsonObj.getAsJsonArray("metrics_filters");
        if (jsonArraymetricsFilters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metrics_filters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metrics_filters` to be an array in the JSON string but got `%s`", jsonObj.get("metrics_filters").toString()));
          }

          // validate the optional field `metrics_filters` (array)
          for (int i = 0; i < jsonArraymetricsFilters.size(); i++) {
            AdsAnalyticsMetricsFilter.validateJsonElement(jsonArraymetricsFilters.get(i));
          };
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("columns") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("columns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `columns` to be an array in the JSON string but got `%s`", jsonObj.get("columns").toString()));
      }
      // validate the required field `level`
      MetricsReportingLevel.validateJsonElement(jsonObj.get("level"));
      // validate the optional field `report_format`
      if (jsonObj.get("report_format") != null && !jsonObj.get("report_format").isJsonNull()) {
        DataOutputFormat.validateJsonElement(jsonObj.get("report_format"));
      }
      if ((jsonObj.get("primary_sort") != null && !jsonObj.get("primary_sort").isJsonNull()) && !jsonObj.get("primary_sort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_sort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_sort").toString()));
      }
      // validate the optional field `primary_sort`
      if (jsonObj.get("primary_sort") != null && !jsonObj.get("primary_sort").isJsonNull()) {
        PrimarySortEnum.validateJsonElement(jsonObj.get("primary_sort"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdsAnalyticsCreateAsyncRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdsAnalyticsCreateAsyncRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdsAnalyticsCreateAsyncRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdsAnalyticsCreateAsyncRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AdsAnalyticsCreateAsyncRequest>() {
           @Override
           public void write(JsonWriter out, AdsAnalyticsCreateAsyncRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdsAnalyticsCreateAsyncRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdsAnalyticsCreateAsyncRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdsAnalyticsCreateAsyncRequest
   * @throws IOException if the JSON string is invalid with respect to AdsAnalyticsCreateAsyncRequest
   */
  public static AdsAnalyticsCreateAsyncRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdsAnalyticsCreateAsyncRequest.class);
  }

  /**
   * Convert an instance of AdsAnalyticsCreateAsyncRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

