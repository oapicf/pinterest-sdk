/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.LeadFormCommonPolicyLinksInner;
import com.github.oapicf.pinterestsdk.model.LeadFormQuestion;
import com.github.oapicf.pinterestsdk.model.LeadFormStatus;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * LeadFormUpdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class LeadFormUpdateRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_LINK = "privacy_policy_link";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_LINK)
  private String privacyPolicyLink;

  public static final String SERIALIZED_NAME_HAS_ACCEPTED_TERMS = "has_accepted_terms";
  @SerializedName(SERIALIZED_NAME_HAS_ACCEPTED_TERMS)
  private Boolean hasAcceptedTerms;

  public static final String SERIALIZED_NAME_COMPLETION_MESSAGE = "completion_message";
  @SerializedName(SERIALIZED_NAME_COMPLETION_MESSAGE)
  private String completionMessage;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private LeadFormStatus status;

  public static final String SERIALIZED_NAME_DISCLOSURE_LANGUAGE = "disclosure_language";
  @SerializedName(SERIALIZED_NAME_DISCLOSURE_LANGUAGE)
  private String disclosureLanguage;

  public static final String SERIALIZED_NAME_QUESTIONS = "questions";
  @SerializedName(SERIALIZED_NAME_QUESTIONS)
  private List<LeadFormQuestion> questions = new ArrayList<>();

  public static final String SERIALIZED_NAME_POLICY_LINKS = "policy_links";
  @SerializedName(SERIALIZED_NAME_POLICY_LINKS)
  private List<LeadFormCommonPolicyLinksInner> policyLinks = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public LeadFormUpdateRequest() {
  }

  public LeadFormUpdateRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Internal name of the lead form.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public LeadFormUpdateRequest privacyPolicyLink(String privacyPolicyLink) {
    this.privacyPolicyLink = privacyPolicyLink;
    return this;
  }

  /**
   * A link to the advertiser&#39;s privacy policy. This will be included in the lead form&#39;s disclosure language.
   * @return privacyPolicyLink
   */
  @javax.annotation.Nullable
  public String getPrivacyPolicyLink() {
    return privacyPolicyLink;
  }

  public void setPrivacyPolicyLink(String privacyPolicyLink) {
    this.privacyPolicyLink = privacyPolicyLink;
  }


  public LeadFormUpdateRequest hasAcceptedTerms(Boolean hasAcceptedTerms) {
    this.hasAcceptedTerms = hasAcceptedTerms;
    return this;
  }

  /**
   * Whether the advertiser has accepted Pinterest&#39;s terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest&#39;s &lt;a href&#x3D;\&quot;https://policy.pinterest.com/en/lead-ad-terms\&quot;&gt;Lead Ad Terms&lt;/a&gt;. As a reminder, all advertising on Pinterest is subject to the &lt;a href&#x3D;\&quot;https://business.pinterest.com/en/pinterest-advertising-services-agreement/\&quot;&gt;Pinterest Advertising Services Agreement&lt;/a&gt; or an equivalent agreement as set forth on an IO
   * @return hasAcceptedTerms
   */
  @javax.annotation.Nullable
  public Boolean getHasAcceptedTerms() {
    return hasAcceptedTerms;
  }

  public void setHasAcceptedTerms(Boolean hasAcceptedTerms) {
    this.hasAcceptedTerms = hasAcceptedTerms;
  }


  public LeadFormUpdateRequest completionMessage(String completionMessage) {
    this.completionMessage = completionMessage;
    return this;
  }

  /**
   * A message for people who complete the form to let them know what happens next.
   * @return completionMessage
   */
  @javax.annotation.Nullable
  public String getCompletionMessage() {
    return completionMessage;
  }

  public void setCompletionMessage(String completionMessage) {
    this.completionMessage = completionMessage;
  }


  public LeadFormUpdateRequest status(LeadFormStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public LeadFormStatus getStatus() {
    return status;
  }

  public void setStatus(LeadFormStatus status) {
    this.status = status;
  }


  public LeadFormUpdateRequest disclosureLanguage(String disclosureLanguage) {
    this.disclosureLanguage = disclosureLanguage;
    return this;
  }

  /**
   * Additional disclosure language to be included in the lead form.
   * @return disclosureLanguage
   */
  @javax.annotation.Nullable
  public String getDisclosureLanguage() {
    return disclosureLanguage;
  }

  public void setDisclosureLanguage(String disclosureLanguage) {
    this.disclosureLanguage = disclosureLanguage;
  }


  public LeadFormUpdateRequest questions(List<LeadFormQuestion> questions) {
    this.questions = questions;
    return this;
  }

  public LeadFormUpdateRequest addQuestionsItem(LeadFormQuestion questionsItem) {
    if (this.questions == null) {
      this.questions = new ArrayList<>();
    }
    this.questions.add(questionsItem);
    return this;
  }

  /**
   * List of questions to be displayed on the lead form.
   * @return questions
   */
  @javax.annotation.Nullable
  public List<LeadFormQuestion> getQuestions() {
    return questions;
  }

  public void setQuestions(List<LeadFormQuestion> questions) {
    this.questions = questions;
  }


  public LeadFormUpdateRequest policyLinks(List<LeadFormCommonPolicyLinksInner> policyLinks) {
    this.policyLinks = policyLinks;
    return this;
  }

  public LeadFormUpdateRequest addPolicyLinksItem(LeadFormCommonPolicyLinksInner policyLinksItem) {
    if (this.policyLinks == null) {
      this.policyLinks = new ArrayList<>();
    }
    this.policyLinks.add(policyLinksItem);
    return this;
  }

  /**
   * List of additional policy links to be displayed on the lead form.
   * @return policyLinks
   */
  @javax.annotation.Nullable
  public List<LeadFormCommonPolicyLinksInner> getPolicyLinks() {
    return policyLinks;
  }

  public void setPolicyLinks(List<LeadFormCommonPolicyLinksInner> policyLinks) {
    this.policyLinks = policyLinks;
  }


  public LeadFormUpdateRequest id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The ID of this lead form to be updated
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeadFormUpdateRequest leadFormUpdateRequest = (LeadFormUpdateRequest) o;
    return Objects.equals(this.name, leadFormUpdateRequest.name) &&
        Objects.equals(this.privacyPolicyLink, leadFormUpdateRequest.privacyPolicyLink) &&
        Objects.equals(this.hasAcceptedTerms, leadFormUpdateRequest.hasAcceptedTerms) &&
        Objects.equals(this.completionMessage, leadFormUpdateRequest.completionMessage) &&
        Objects.equals(this.status, leadFormUpdateRequest.status) &&
        Objects.equals(this.disclosureLanguage, leadFormUpdateRequest.disclosureLanguage) &&
        Objects.equals(this.questions, leadFormUpdateRequest.questions) &&
        Objects.equals(this.policyLinks, leadFormUpdateRequest.policyLinks) &&
        Objects.equals(this.id, leadFormUpdateRequest.id);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, privacyPolicyLink, hasAcceptedTerms, completionMessage, status, disclosureLanguage, questions, policyLinks, id);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeadFormUpdateRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privacyPolicyLink: ").append(toIndentedString(privacyPolicyLink)).append("\n");
    sb.append("    hasAcceptedTerms: ").append(toIndentedString(hasAcceptedTerms)).append("\n");
    sb.append("    completionMessage: ").append(toIndentedString(completionMessage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    disclosureLanguage: ").append(toIndentedString(disclosureLanguage)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("    policyLinks: ").append(toIndentedString(policyLinks)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("privacy_policy_link");
    openapiFields.add("has_accepted_terms");
    openapiFields.add("completion_message");
    openapiFields.add("status");
    openapiFields.add("disclosure_language");
    openapiFields.add("questions");
    openapiFields.add("policy_links");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LeadFormUpdateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LeadFormUpdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LeadFormUpdateRequest is not found in the empty JSON string", LeadFormUpdateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LeadFormUpdateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LeadFormUpdateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LeadFormUpdateRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("privacy_policy_link") != null && !jsonObj.get("privacy_policy_link").isJsonNull()) && !jsonObj.get("privacy_policy_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacy_policy_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacy_policy_link").toString()));
      }
      if ((jsonObj.get("completion_message") != null && !jsonObj.get("completion_message").isJsonNull()) && !jsonObj.get("completion_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `completion_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("completion_message").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        LeadFormStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("disclosure_language") != null && !jsonObj.get("disclosure_language").isJsonNull()) && !jsonObj.get("disclosure_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disclosure_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disclosure_language").toString()));
      }
      if (jsonObj.get("questions") != null && !jsonObj.get("questions").isJsonNull()) {
        JsonArray jsonArrayquestions = jsonObj.getAsJsonArray("questions");
        if (jsonArrayquestions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("questions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `questions` to be an array in the JSON string but got `%s`", jsonObj.get("questions").toString()));
          }

          // validate the optional field `questions` (array)
          for (int i = 0; i < jsonArrayquestions.size(); i++) {
            LeadFormQuestion.validateJsonElement(jsonArrayquestions.get(i));
          };
        }
      }
      if (jsonObj.get("policy_links") != null && !jsonObj.get("policy_links").isJsonNull()) {
        JsonArray jsonArraypolicyLinks = jsonObj.getAsJsonArray("policy_links");
        if (jsonArraypolicyLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("policy_links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `policy_links` to be an array in the JSON string but got `%s`", jsonObj.get("policy_links").toString()));
          }

          // validate the optional field `policy_links` (array)
          for (int i = 0; i < jsonArraypolicyLinks.size(); i++) {
            LeadFormCommonPolicyLinksInner.validateJsonElement(jsonArraypolicyLinks.get(i));
          };
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LeadFormUpdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LeadFormUpdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LeadFormUpdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LeadFormUpdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<LeadFormUpdateRequest>() {
           @Override
           public void write(JsonWriter out, LeadFormUpdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LeadFormUpdateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LeadFormUpdateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LeadFormUpdateRequest
   * @throws IOException if the JSON string is invalid with respect to LeadFormUpdateRequest
   */
  public static LeadFormUpdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LeadFormUpdateRequest.class);
  }

  /**
   * Convert an instance of LeadFormUpdateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

