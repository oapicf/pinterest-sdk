/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.TargetingSpecSHOPPINGRETARGETING;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * Ad group targeting specification defining the ad group target audience. For example, &#x60;{\&quot;APPTYPE\&quot;:[\&quot;iphone\&quot;], \&quot;GENDER\&quot;:[\&quot;male\&quot;], \&quot;LOCALE\&quot;:[\&quot;en-US\&quot;], \&quot;LOCATION\&quot;:[\&quot;501\&quot;], \&quot;AGE_BUCKET\&quot;:[\&quot;25-34\&quot;]}&#x60;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class TargetingSpec {
  /**
   * Gets or Sets AGE_BUCKET
   */
  @JsonAdapter(AGEBUCKETEnum.Adapter.class)
  public enum AGEBUCKETEnum {
    _18_24("18-24"),
    
    _21_("21+"),
    
    _25_34("25-34"),
    
    _35_44("35-44"),
    
    _45_49("45-49"),
    
    _50_54("50-54"),
    
    _55_64("55-64"),
    
    _65_("65+");

    private String value;

    AGEBUCKETEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AGEBUCKETEnum fromValue(String value) {
      for (AGEBUCKETEnum b : AGEBUCKETEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AGEBUCKETEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AGEBUCKETEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AGEBUCKETEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AGEBUCKETEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AGEBUCKETEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_A_G_E_B_U_C_K_E_T = "AGE_BUCKET";
  @SerializedName(SERIALIZED_NAME_A_G_E_B_U_C_K_E_T)
  private List<AGEBUCKETEnum> AGE_BUCKET;

  /**
   * Gets or Sets APPTYPE
   */
  @JsonAdapter(APPTYPEEnum.Adapter.class)
  public enum APPTYPEEnum {
    ANDROID_MOBILE("android_mobile"),
    
    ANDROID_TABLET("android_tablet"),
    
    IPAD("ipad"),
    
    IPHONE("iphone"),
    
    WEB("web"),
    
    WEB_MOBILE("web_mobile");

    private String value;

    APPTYPEEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static APPTYPEEnum fromValue(String value) {
      for (APPTYPEEnum b : APPTYPEEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<APPTYPEEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final APPTYPEEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public APPTYPEEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return APPTYPEEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      APPTYPEEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_A_P_P_T_Y_P_E = "APPTYPE";
  @SerializedName(SERIALIZED_NAME_A_P_P_T_Y_P_E)
  private List<APPTYPEEnum> APPTYPE;

  public static final String SERIALIZED_NAME_A_U_D_I_E_N_C_E_E_X_C_L_U_D_E = "AUDIENCE_EXCLUDE";
  @SerializedName(SERIALIZED_NAME_A_U_D_I_E_N_C_E_E_X_C_L_U_D_E)
  private List<String> AUDIENCE_EXCLUDE;

  public static final String SERIALIZED_NAME_A_U_D_I_E_N_C_E_I_N_C_L_U_D_E = "AUDIENCE_INCLUDE";
  @SerializedName(SERIALIZED_NAME_A_U_D_I_E_N_C_E_I_N_C_L_U_D_E)
  private List<String> AUDIENCE_INCLUDE;

  /**
   * Gets or Sets GENDER
   */
  @JsonAdapter(GENDEREnum.Adapter.class)
  public enum GENDEREnum {
    UNKNOWN("unknown"),
    
    MALE("male"),
    
    FEMALE("female");

    private String value;

    GENDEREnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GENDEREnum fromValue(String value) {
      for (GENDEREnum b : GENDEREnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GENDEREnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GENDEREnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GENDEREnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GENDEREnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      GENDEREnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_G_E_N_D_E_R = "GENDER";
  @SerializedName(SERIALIZED_NAME_G_E_N_D_E_R)
  private List<GENDEREnum> GENDER;

  public static final String SERIALIZED_NAME_G_E_O = "GEO";
  @SerializedName(SERIALIZED_NAME_G_E_O)
  private List<String> GEO;

  public static final String SERIALIZED_NAME_I_N_T_E_R_E_S_T = "INTEREST";
  @SerializedName(SERIALIZED_NAME_I_N_T_E_R_E_S_T)
  private List<String> INTEREST = new ArrayList<>();

  public static final String SERIALIZED_NAME_L_O_C_A_L_E = "LOCALE";
  @SerializedName(SERIALIZED_NAME_L_O_C_A_L_E)
  private List<String> LOCALE;

  public static final String SERIALIZED_NAME_L_O_C_A_T_I_O_N = "LOCATION";
  @SerializedName(SERIALIZED_NAME_L_O_C_A_T_I_O_N)
  private List<String> LOCATION;

  public static final String SERIALIZED_NAME_S_H_O_P_P_I_N_G_R_E_T_A_R_G_E_T_I_N_G = "SHOPPING_RETARGETING";
  @SerializedName(SERIALIZED_NAME_S_H_O_P_P_I_N_G_R_E_T_A_R_G_E_T_I_N_G)
  private List<TargetingSpecSHOPPINGRETARGETING> SHOPPING_RETARGETING;

  /**
   * Gets or Sets TARGETING_STRATEGY
   */
  @JsonAdapter(TARGETINGSTRATEGYEnum.Adapter.class)
  public enum TARGETINGSTRATEGYEnum {
    CHOOSE_YOUR_OWN("CHOOSE_YOUR_OWN"),
    
    FIND_NEW_CUSTOMERS("FIND_NEW_CUSTOMERS"),
    
    RECONNECT_WITH_USERS("RECONNECT_WITH_USERS");

    private String value;

    TARGETINGSTRATEGYEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TARGETINGSTRATEGYEnum fromValue(String value) {
      for (TARGETINGSTRATEGYEnum b : TARGETINGSTRATEGYEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TARGETINGSTRATEGYEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TARGETINGSTRATEGYEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TARGETINGSTRATEGYEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TARGETINGSTRATEGYEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TARGETINGSTRATEGYEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_T_A_R_G_E_T_I_N_G_S_T_R_A_T_E_G_Y = "TARGETING_STRATEGY";
  @SerializedName(SERIALIZED_NAME_T_A_R_G_E_T_I_N_G_S_T_R_A_T_E_G_Y)
  private List<TARGETINGSTRATEGYEnum> TARGETING_STRATEGY;

  public TargetingSpec() {
  }

  public TargetingSpec AGE_BUCKET(List<AGEBUCKETEnum> AGE_BUCKET) {
    this.AGE_BUCKET = AGE_BUCKET;
    return this;
  }

  public TargetingSpec addAGEBUCKETItem(AGEBUCKETEnum AGE_BUCKETItem) {
    if (this.AGE_BUCKET == null) {
      this.AGE_BUCKET = new ArrayList<>();
    }
    this.AGE_BUCKET.add(AGE_BUCKETItem);
    return this;
  }

  /**
   * Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.
   * @return AGE_BUCKET
   */
  @javax.annotation.Nullable
  public List<AGEBUCKETEnum> getAGEBUCKET() {
    return AGE_BUCKET;
  }

  public void setAGEBUCKET(List<AGEBUCKETEnum> AGE_BUCKET) {
    this.AGE_BUCKET = AGE_BUCKET;
  }


  public TargetingSpec APPTYPE(List<APPTYPEEnum> APPTYPE) {
    this.APPTYPE = APPTYPE;
    return this;
  }

  public TargetingSpec addAPPTYPEItem(APPTYPEEnum APPTYPEItem) {
    if (this.APPTYPE == null) {
      this.APPTYPE = new ArrayList<>();
    }
    this.APPTYPE.add(APPTYPEItem);
    return this;
  }

  /**
   * Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.
   * @return APPTYPE
   */
  @javax.annotation.Nullable
  public List<APPTYPEEnum> getAPPTYPE() {
    return APPTYPE;
  }

  public void setAPPTYPE(List<APPTYPEEnum> APPTYPE) {
    this.APPTYPE = APPTYPE;
  }


  public TargetingSpec AUDIENCE_EXCLUDE(List<String> AUDIENCE_EXCLUDE) {
    this.AUDIENCE_EXCLUDE = AUDIENCE_EXCLUDE;
    return this;
  }

  public TargetingSpec addAUDIENCEEXCLUDEItem(String AUDIENCE_EXCLUDEItem) {
    if (this.AUDIENCE_EXCLUDE == null) {
      this.AUDIENCE_EXCLUDE = new ArrayList<>();
    }
    this.AUDIENCE_EXCLUDE.add(AUDIENCE_EXCLUDEItem);
    return this;
  }

  /**
   * Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\&quot;2542620905475\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.
   * @return AUDIENCE_EXCLUDE
   */
  @javax.annotation.Nullable
  public List<String> getAUDIENCEEXCLUDE() {
    return AUDIENCE_EXCLUDE;
  }

  public void setAUDIENCEEXCLUDE(List<String> AUDIENCE_EXCLUDE) {
    this.AUDIENCE_EXCLUDE = AUDIENCE_EXCLUDE;
  }


  public TargetingSpec AUDIENCE_INCLUDE(List<String> AUDIENCE_INCLUDE) {
    this.AUDIENCE_INCLUDE = AUDIENCE_INCLUDE;
    return this;
  }

  public TargetingSpec addAUDIENCEINCLUDEItem(String AUDIENCE_INCLUDEItem) {
    if (this.AUDIENCE_INCLUDE == null) {
      this.AUDIENCE_INCLUDE = new ArrayList<>();
    }
    this.AUDIENCE_INCLUDE.add(AUDIENCE_INCLUDEItem);
    return this;
  }

  /**
   * Targeted customer list IDs. For example: [\&quot;2542620905473\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.
   * @return AUDIENCE_INCLUDE
   */
  @javax.annotation.Nullable
  public List<String> getAUDIENCEINCLUDE() {
    return AUDIENCE_INCLUDE;
  }

  public void setAUDIENCEINCLUDE(List<String> AUDIENCE_INCLUDE) {
    this.AUDIENCE_INCLUDE = AUDIENCE_INCLUDE;
  }


  public TargetingSpec GENDER(List<GENDEREnum> GENDER) {
    this.GENDER = GENDER;
    return this;
  }

  public TargetingSpec addGENDERItem(GENDEREnum GENDERItem) {
    if (this.GENDER == null) {
      this.GENDER = new ArrayList<>();
    }
    this.GENDER.add(GENDERItem);
    return this;
  }

  /**
   * Targeted genders. Values: [\&quot;unknown\&quot;,\&quot;male\&quot;,\&quot;female\&quot;]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.
   * @return GENDER
   */
  @javax.annotation.Nullable
  public List<GENDEREnum> getGENDER() {
    return GENDER;
  }

  public void setGENDER(List<GENDEREnum> GENDER) {
    this.GENDER = GENDER;
  }


  public TargetingSpec GEO(List<String> GEO) {
    this.GEO = GEO;
    return this;
  }

  public TargetingSpec addGEOItem(String GEOItem) {
    if (this.GEO == null) {
      this.GEO = new ArrayList<>();
    }
    this.GEO.add(GEOItem);
    return this;
  }

  /**
   * Location region codes, e.g., \&quot;BE-VOV\&quot; (East Flanders, Belgium) For complete list, &lt;a href&#x3D;\&quot;https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\&quot; target&#x3D;\&quot;_blank\&quot;&gt;click here&lt;/a&gt; or postal codes, e.g., \&quot;US-94107\&quot;. Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).
   * @return GEO
   */
  @javax.annotation.Nullable
  public List<String> getGEO() {
    return GEO;
  }

  public void setGEO(List<String> GEO) {
    this.GEO = GEO;
  }


  public TargetingSpec INTEREST(List<String> INTEREST) {
    this.INTEREST = INTEREST;
    return this;
  }

  public TargetingSpec addINTERESTItem(String INTERESTItem) {
    if (this.INTEREST == null) {
      this.INTEREST = new ArrayList<>();
    }
    this.INTEREST.add(INTERESTItem);
    return this;
  }

  /**
   * Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.
   * @return INTEREST
   */
  @javax.annotation.Nullable
  public List<String> getINTEREST() {
    return INTEREST;
  }

  public void setINTEREST(List<String> INTEREST) {
    this.INTEREST = INTEREST;
  }


  public TargetingSpec LOCALE(List<String> LOCALE) {
    this.LOCALE = LOCALE;
    return this;
  }

  public TargetingSpec addLOCALEItem(String LOCALEItem) {
    if (this.LOCALE == null) {
      this.LOCALE = new ArrayList<>();
    }
    this.LOCALE.add(LOCALEItem);
    return this;
  }

  /**
   * 24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.
   * @return LOCALE
   */
  @javax.annotation.Nullable
  public List<String> getLOCALE() {
    return LOCALE;
  }

  public void setLOCALE(List<String> LOCALE) {
    this.LOCALE = LOCALE;
  }


  public TargetingSpec LOCATION(List<String> LOCATION) {
    this.LOCATION = LOCATION;
    return this;
  }

  public TargetingSpec addLOCATIONItem(String LOCATIONItem) {
    if (this.LOCATION == null) {
      this.LOCATION = new ArrayList<>();
    }
    this.LOCATION.add(LOCATIONItem);
    return this;
  }

  /**
   * 22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\&quot;US\&quot;, \&quot;807\&quot;]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).
   * @return LOCATION
   */
  @javax.annotation.Nullable
  public List<String> getLOCATION() {
    return LOCATION;
  }

  public void setLOCATION(List<String> LOCATION) {
    this.LOCATION = LOCATION;
  }


  public TargetingSpec SHOPPING_RETARGETING(List<TargetingSpecSHOPPINGRETARGETING> SHOPPING_RETARGETING) {
    this.SHOPPING_RETARGETING = SHOPPING_RETARGETING;
    return this;
  }

  public TargetingSpec addSHOPPINGRETARGETINGItem(TargetingSpecSHOPPINGRETARGETING SHOPPING_RETARGETINGItem) {
    if (this.SHOPPING_RETARGETING == null) {
      this.SHOPPING_RETARGETING = new ArrayList<>();
    }
    this.SHOPPING_RETARGETING.add(SHOPPING_RETARGETINGItem);
    return this;
  }

  /**
   * Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting
   * @return SHOPPING_RETARGETING
   */
  @javax.annotation.Nullable
  public List<TargetingSpecSHOPPINGRETARGETING> getSHOPPINGRETARGETING() {
    return SHOPPING_RETARGETING;
  }

  public void setSHOPPINGRETARGETING(List<TargetingSpecSHOPPINGRETARGETING> SHOPPING_RETARGETING) {
    this.SHOPPING_RETARGETING = SHOPPING_RETARGETING;
  }


  public TargetingSpec TARGETING_STRATEGY(List<TARGETINGSTRATEGYEnum> TARGETING_STRATEGY) {
    this.TARGETING_STRATEGY = TARGETING_STRATEGY;
    return this;
  }

  public TargetingSpec addTARGETINGSTRATEGYItem(TARGETINGSTRATEGYEnum TARGETING_STRATEGYItem) {
    if (this.TARGETING_STRATEGY == null) {
      this.TARGETING_STRATEGY = new ArrayList<>();
    }
    this.TARGETING_STRATEGY.add(TARGETING_STRATEGYItem);
    return this;
  }

  /**
   * 
   * @return TARGETING_STRATEGY
   */
  @javax.annotation.Nullable
  public List<TARGETINGSTRATEGYEnum> getTARGETINGSTRATEGY() {
    return TARGETING_STRATEGY;
  }

  public void setTARGETINGSTRATEGY(List<TARGETINGSTRATEGYEnum> TARGETING_STRATEGY) {
    this.TARGETING_STRATEGY = TARGETING_STRATEGY;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetingSpec targetingSpec = (TargetingSpec) o;
    return Objects.equals(this.AGE_BUCKET, targetingSpec.AGE_BUCKET) &&
        Objects.equals(this.APPTYPE, targetingSpec.APPTYPE) &&
        Objects.equals(this.AUDIENCE_EXCLUDE, targetingSpec.AUDIENCE_EXCLUDE) &&
        Objects.equals(this.AUDIENCE_INCLUDE, targetingSpec.AUDIENCE_INCLUDE) &&
        Objects.equals(this.GENDER, targetingSpec.GENDER) &&
        Objects.equals(this.GEO, targetingSpec.GEO) &&
        Objects.equals(this.INTEREST, targetingSpec.INTEREST) &&
        Objects.equals(this.LOCALE, targetingSpec.LOCALE) &&
        Objects.equals(this.LOCATION, targetingSpec.LOCATION) &&
        Objects.equals(this.SHOPPING_RETARGETING, targetingSpec.SHOPPING_RETARGETING) &&
        Objects.equals(this.TARGETING_STRATEGY, targetingSpec.TARGETING_STRATEGY);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(AGE_BUCKET, APPTYPE, AUDIENCE_EXCLUDE, AUDIENCE_INCLUDE, GENDER, GEO, INTEREST, LOCALE, LOCATION, SHOPPING_RETARGETING, TARGETING_STRATEGY);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetingSpec {\n");
    sb.append("    AGE_BUCKET: ").append(toIndentedString(AGE_BUCKET)).append("\n");
    sb.append("    APPTYPE: ").append(toIndentedString(APPTYPE)).append("\n");
    sb.append("    AUDIENCE_EXCLUDE: ").append(toIndentedString(AUDIENCE_EXCLUDE)).append("\n");
    sb.append("    AUDIENCE_INCLUDE: ").append(toIndentedString(AUDIENCE_INCLUDE)).append("\n");
    sb.append("    GENDER: ").append(toIndentedString(GENDER)).append("\n");
    sb.append("    GEO: ").append(toIndentedString(GEO)).append("\n");
    sb.append("    INTEREST: ").append(toIndentedString(INTEREST)).append("\n");
    sb.append("    LOCALE: ").append(toIndentedString(LOCALE)).append("\n");
    sb.append("    LOCATION: ").append(toIndentedString(LOCATION)).append("\n");
    sb.append("    SHOPPING_RETARGETING: ").append(toIndentedString(SHOPPING_RETARGETING)).append("\n");
    sb.append("    TARGETING_STRATEGY: ").append(toIndentedString(TARGETING_STRATEGY)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AGE_BUCKET");
    openapiFields.add("APPTYPE");
    openapiFields.add("AUDIENCE_EXCLUDE");
    openapiFields.add("AUDIENCE_INCLUDE");
    openapiFields.add("GENDER");
    openapiFields.add("GEO");
    openapiFields.add("INTEREST");
    openapiFields.add("LOCALE");
    openapiFields.add("LOCATION");
    openapiFields.add("SHOPPING_RETARGETING");
    openapiFields.add("TARGETING_STRATEGY");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TargetingSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TargetingSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TargetingSpec is not found in the empty JSON string", TargetingSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TargetingSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TargetingSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("AGE_BUCKET") != null && !jsonObj.get("AGE_BUCKET").isJsonNull() && !jsonObj.get("AGE_BUCKET").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AGE_BUCKET` to be an array in the JSON string but got `%s`", jsonObj.get("AGE_BUCKET").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("APPTYPE") != null && !jsonObj.get("APPTYPE").isJsonNull() && !jsonObj.get("APPTYPE").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `APPTYPE` to be an array in the JSON string but got `%s`", jsonObj.get("APPTYPE").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AUDIENCE_EXCLUDE") != null && !jsonObj.get("AUDIENCE_EXCLUDE").isJsonNull() && !jsonObj.get("AUDIENCE_EXCLUDE").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AUDIENCE_EXCLUDE` to be an array in the JSON string but got `%s`", jsonObj.get("AUDIENCE_EXCLUDE").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AUDIENCE_INCLUDE") != null && !jsonObj.get("AUDIENCE_INCLUDE").isJsonNull() && !jsonObj.get("AUDIENCE_INCLUDE").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AUDIENCE_INCLUDE` to be an array in the JSON string but got `%s`", jsonObj.get("AUDIENCE_INCLUDE").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("GENDER") != null && !jsonObj.get("GENDER").isJsonNull() && !jsonObj.get("GENDER").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `GENDER` to be an array in the JSON string but got `%s`", jsonObj.get("GENDER").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("GEO") != null && !jsonObj.get("GEO").isJsonNull() && !jsonObj.get("GEO").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `GEO` to be an array in the JSON string but got `%s`", jsonObj.get("GEO").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("INTEREST") != null && !jsonObj.get("INTEREST").isJsonNull() && !jsonObj.get("INTEREST").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `INTEREST` to be an array in the JSON string but got `%s`", jsonObj.get("INTEREST").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("LOCALE") != null && !jsonObj.get("LOCALE").isJsonNull() && !jsonObj.get("LOCALE").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `LOCALE` to be an array in the JSON string but got `%s`", jsonObj.get("LOCALE").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("LOCATION") != null && !jsonObj.get("LOCATION").isJsonNull() && !jsonObj.get("LOCATION").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `LOCATION` to be an array in the JSON string but got `%s`", jsonObj.get("LOCATION").toString()));
      }
      if (jsonObj.get("SHOPPING_RETARGETING") != null && !jsonObj.get("SHOPPING_RETARGETING").isJsonNull()) {
        JsonArray jsonArraySHOPPING_RETARGETING = jsonObj.getAsJsonArray("SHOPPING_RETARGETING");
        if (jsonArraySHOPPING_RETARGETING != null) {
          // ensure the json data is an array
          if (!jsonObj.get("SHOPPING_RETARGETING").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `SHOPPING_RETARGETING` to be an array in the JSON string but got `%s`", jsonObj.get("SHOPPING_RETARGETING").toString()));
          }

          // validate the optional field `SHOPPING_RETARGETING` (array)
          for (int i = 0; i < jsonArraySHOPPING_RETARGETING.size(); i++) {
            TargetingSpecSHOPPINGRETARGETING.validateJsonElement(jsonArraySHOPPING_RETARGETING.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("TARGETING_STRATEGY") != null && !jsonObj.get("TARGETING_STRATEGY").isJsonNull() && !jsonObj.get("TARGETING_STRATEGY").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `TARGETING_STRATEGY` to be an array in the JSON string but got `%s`", jsonObj.get("TARGETING_STRATEGY").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TargetingSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TargetingSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TargetingSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TargetingSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<TargetingSpec>() {
           @Override
           public void write(JsonWriter out, TargetingSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TargetingSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TargetingSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TargetingSpec
   * @throws IOException if the JSON string is invalid with respect to TargetingSpec
   */
  public static TargetingSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TargetingSpec.class);
  }

  /**
   * Convert an instance of TargetingSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

