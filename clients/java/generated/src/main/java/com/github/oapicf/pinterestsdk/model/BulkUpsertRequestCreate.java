/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.AdCreateRequest;
import com.github.oapicf.pinterestsdk.model.AdGroupCreateRequest;
import com.github.oapicf.pinterestsdk.model.CampaignCreateRequest;
import com.github.oapicf.pinterestsdk.model.KeywordsRequest;
import com.github.oapicf.pinterestsdk.model.ProductGroupPromotionCreateRequest;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * Request for creation of entities in bulk.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class BulkUpsertRequestCreate {
  public static final String SERIALIZED_NAME_CAMPAIGNS = "campaigns";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS)
  private List<CampaignCreateRequest> campaigns = new ArrayList<>();

  public static final String SERIALIZED_NAME_AD_GROUPS = "ad_groups";
  @SerializedName(SERIALIZED_NAME_AD_GROUPS)
  private List<AdGroupCreateRequest> adGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADS = "ads";
  @SerializedName(SERIALIZED_NAME_ADS)
  private List<AdCreateRequest> ads = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCT_GROUPS = "product_groups";
  @SerializedName(SERIALIZED_NAME_PRODUCT_GROUPS)
  private List<ProductGroupPromotionCreateRequest> productGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<KeywordsRequest> keywords = new ArrayList<>();

  public BulkUpsertRequestCreate() {
  }

  public BulkUpsertRequestCreate campaigns(List<CampaignCreateRequest> campaigns) {
    this.campaigns = campaigns;
    return this;
  }

  public BulkUpsertRequestCreate addCampaignsItem(CampaignCreateRequest campaignsItem) {
    if (this.campaigns == null) {
      this.campaigns = new ArrayList<>();
    }
    this.campaigns.add(campaignsItem);
    return this;
  }

  /**
   * Get campaigns
   * @return campaigns
   */
  @javax.annotation.Nullable
  public List<CampaignCreateRequest> getCampaigns() {
    return campaigns;
  }

  public void setCampaigns(List<CampaignCreateRequest> campaigns) {
    this.campaigns = campaigns;
  }


  public BulkUpsertRequestCreate adGroups(List<AdGroupCreateRequest> adGroups) {
    this.adGroups = adGroups;
    return this;
  }

  public BulkUpsertRequestCreate addAdGroupsItem(AdGroupCreateRequest adGroupsItem) {
    if (this.adGroups == null) {
      this.adGroups = new ArrayList<>();
    }
    this.adGroups.add(adGroupsItem);
    return this;
  }

  /**
   * Get adGroups
   * @return adGroups
   */
  @javax.annotation.Nullable
  public List<AdGroupCreateRequest> getAdGroups() {
    return adGroups;
  }

  public void setAdGroups(List<AdGroupCreateRequest> adGroups) {
    this.adGroups = adGroups;
  }


  public BulkUpsertRequestCreate ads(List<AdCreateRequest> ads) {
    this.ads = ads;
    return this;
  }

  public BulkUpsertRequestCreate addAdsItem(AdCreateRequest adsItem) {
    if (this.ads == null) {
      this.ads = new ArrayList<>();
    }
    this.ads.add(adsItem);
    return this;
  }

  /**
   * Get ads
   * @return ads
   */
  @javax.annotation.Nullable
  public List<AdCreateRequest> getAds() {
    return ads;
  }

  public void setAds(List<AdCreateRequest> ads) {
    this.ads = ads;
  }


  public BulkUpsertRequestCreate productGroups(List<ProductGroupPromotionCreateRequest> productGroups) {
    this.productGroups = productGroups;
    return this;
  }

  public BulkUpsertRequestCreate addProductGroupsItem(ProductGroupPromotionCreateRequest productGroupsItem) {
    if (this.productGroups == null) {
      this.productGroups = new ArrayList<>();
    }
    this.productGroups.add(productGroupsItem);
    return this;
  }

  /**
   * Get productGroups
   * @return productGroups
   */
  @javax.annotation.Nullable
  public List<ProductGroupPromotionCreateRequest> getProductGroups() {
    return productGroups;
  }

  public void setProductGroups(List<ProductGroupPromotionCreateRequest> productGroups) {
    this.productGroups = productGroups;
  }


  public BulkUpsertRequestCreate keywords(List<KeywordsRequest> keywords) {
    this.keywords = keywords;
    return this;
  }

  public BulkUpsertRequestCreate addKeywordsItem(KeywordsRequest keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public List<KeywordsRequest> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<KeywordsRequest> keywords) {
    this.keywords = keywords;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkUpsertRequestCreate bulkUpsertRequestCreate = (BulkUpsertRequestCreate) o;
    return Objects.equals(this.campaigns, bulkUpsertRequestCreate.campaigns) &&
        Objects.equals(this.adGroups, bulkUpsertRequestCreate.adGroups) &&
        Objects.equals(this.ads, bulkUpsertRequestCreate.ads) &&
        Objects.equals(this.productGroups, bulkUpsertRequestCreate.productGroups) &&
        Objects.equals(this.keywords, bulkUpsertRequestCreate.keywords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaigns, adGroups, ads, productGroups, keywords);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkUpsertRequestCreate {\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    adGroups: ").append(toIndentedString(adGroups)).append("\n");
    sb.append("    ads: ").append(toIndentedString(ads)).append("\n");
    sb.append("    productGroups: ").append(toIndentedString(productGroups)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("campaigns");
    openapiFields.add("ad_groups");
    openapiFields.add("ads");
    openapiFields.add("product_groups");
    openapiFields.add("keywords");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BulkUpsertRequestCreate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BulkUpsertRequestCreate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BulkUpsertRequestCreate is not found in the empty JSON string", BulkUpsertRequestCreate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BulkUpsertRequestCreate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BulkUpsertRequestCreate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("campaigns") != null && !jsonObj.get("campaigns").isJsonNull()) {
        JsonArray jsonArraycampaigns = jsonObj.getAsJsonArray("campaigns");
        if (jsonArraycampaigns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("campaigns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `campaigns` to be an array in the JSON string but got `%s`", jsonObj.get("campaigns").toString()));
          }

          // validate the optional field `campaigns` (array)
          for (int i = 0; i < jsonArraycampaigns.size(); i++) {
            CampaignCreateRequest.validateJsonElement(jsonArraycampaigns.get(i));
          };
        }
      }
      if (jsonObj.get("ad_groups") != null && !jsonObj.get("ad_groups").isJsonNull()) {
        JsonArray jsonArrayadGroups = jsonObj.getAsJsonArray("ad_groups");
        if (jsonArrayadGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ad_groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ad_groups` to be an array in the JSON string but got `%s`", jsonObj.get("ad_groups").toString()));
          }

          // validate the optional field `ad_groups` (array)
          for (int i = 0; i < jsonArrayadGroups.size(); i++) {
            AdGroupCreateRequest.validateJsonElement(jsonArrayadGroups.get(i));
          };
        }
      }
      if (jsonObj.get("ads") != null && !jsonObj.get("ads").isJsonNull()) {
        JsonArray jsonArrayads = jsonObj.getAsJsonArray("ads");
        if (jsonArrayads != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ads").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ads` to be an array in the JSON string but got `%s`", jsonObj.get("ads").toString()));
          }

          // validate the optional field `ads` (array)
          for (int i = 0; i < jsonArrayads.size(); i++) {
            AdCreateRequest.validateJsonElement(jsonArrayads.get(i));
          };
        }
      }
      if (jsonObj.get("product_groups") != null && !jsonObj.get("product_groups").isJsonNull()) {
        JsonArray jsonArrayproductGroups = jsonObj.getAsJsonArray("product_groups");
        if (jsonArrayproductGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("product_groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `product_groups` to be an array in the JSON string but got `%s`", jsonObj.get("product_groups").toString()));
          }

          // validate the optional field `product_groups` (array)
          for (int i = 0; i < jsonArrayproductGroups.size(); i++) {
            ProductGroupPromotionCreateRequest.validateJsonElement(jsonArrayproductGroups.get(i));
          };
        }
      }
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonNull()) {
        JsonArray jsonArraykeywords = jsonObj.getAsJsonArray("keywords");
        if (jsonArraykeywords != null) {
          // ensure the json data is an array
          if (!jsonObj.get("keywords").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
          }

          // validate the optional field `keywords` (array)
          for (int i = 0; i < jsonArraykeywords.size(); i++) {
            KeywordsRequest.validateJsonElement(jsonArraykeywords.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BulkUpsertRequestCreate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BulkUpsertRequestCreate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BulkUpsertRequestCreate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BulkUpsertRequestCreate.class));

       return (TypeAdapter<T>) new TypeAdapter<BulkUpsertRequestCreate>() {
           @Override
           public void write(JsonWriter out, BulkUpsertRequestCreate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BulkUpsertRequestCreate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BulkUpsertRequestCreate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BulkUpsertRequestCreate
   * @throws IOException if the JSON string is invalid with respect to BulkUpsertRequestCreate
   */
  public static BulkUpsertRequestCreate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BulkUpsertRequestCreate.class);
  }

  /**
   * Convert an instance of BulkUpsertRequestCreate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

