/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * OptimizationGoalMetadataConversionTagV3GoalMetadata
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class OptimizationGoalMetadataConversionTagV3GoalMetadata {
  public static final String SERIALIZED_NAME_ATTRIBUTION_WINDOWS = "attribution_windows";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_WINDOWS)
  private OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows attributionWindows;

  /**
   * Gets or Sets conversionEvent
   */
  @JsonAdapter(ConversionEventEnum.Adapter.class)
  public enum ConversionEventEnum {
    PAGE_VISIT("PAGE_VISIT"),
    
    SIGNUP("SIGNUP"),
    
    CHECKOUT("CHECKOUT"),
    
    CUSTOM("CUSTOM"),
    
    VIEW_CATEGORY("VIEW_CATEGORY"),
    
    SEARCH("SEARCH"),
    
    ADD_TO_CART("ADD_TO_CART"),
    
    WATCH_VIDEO("WATCH_VIDEO"),
    
    LEAD("LEAD"),
    
    APP_INSTALL("APP_INSTALL");

    private String value;

    ConversionEventEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConversionEventEnum fromValue(String value) {
      for (ConversionEventEnum b : ConversionEventEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ConversionEventEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConversionEventEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConversionEventEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ConversionEventEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ConversionEventEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONVERSION_EVENT = "conversion_event";
  @SerializedName(SERIALIZED_NAME_CONVERSION_EVENT)
  private ConversionEventEnum conversionEvent;

  public static final String SERIALIZED_NAME_CONVERSION_TAG_ID = "conversion_tag_id";
  @SerializedName(SERIALIZED_NAME_CONVERSION_TAG_ID)
  private String conversionTagId;

  public static final String SERIALIZED_NAME_CPA_GOAL_VALUE_IN_MICRO_CURRENCY = "cpa_goal_value_in_micro_currency";
  @SerializedName(SERIALIZED_NAME_CPA_GOAL_VALUE_IN_MICRO_CURRENCY)
  private String cpaGoalValueInMicroCurrency;

  public static final String SERIALIZED_NAME_IS_ROAS_OPTIMIZED = "is_roas_optimized";
  @SerializedName(SERIALIZED_NAME_IS_ROAS_OPTIMIZED)
  private Boolean isRoasOptimized;

  /**
   * Conversion learning model type
   */
  @JsonAdapter(LearningModeTypeEnum.Adapter.class)
  public enum LearningModeTypeEnum {
    NOT_ACTIVE("NOT_ACTIVE"),
    
    ACTIVE("ACTIVE");

    private String value;

    LearningModeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LearningModeTypeEnum fromValue(String value) {
      for (LearningModeTypeEnum b : LearningModeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LearningModeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LearningModeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LearningModeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LearningModeTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LearningModeTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LEARNING_MODE_TYPE = "learning_mode_type";
  @SerializedName(SERIALIZED_NAME_LEARNING_MODE_TYPE)
  private LearningModeTypeEnum learningModeType;

  public OptimizationGoalMetadataConversionTagV3GoalMetadata() {
  }

  public OptimizationGoalMetadataConversionTagV3GoalMetadata attributionWindows(OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows attributionWindows) {
    this.attributionWindows = attributionWindows;
    return this;
  }

  /**
   * Get attributionWindows
   * @return attributionWindows
   */
  @javax.annotation.Nullable
  public OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows getAttributionWindows() {
    return attributionWindows;
  }

  public void setAttributionWindows(OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows attributionWindows) {
    this.attributionWindows = attributionWindows;
  }


  public OptimizationGoalMetadataConversionTagV3GoalMetadata conversionEvent(ConversionEventEnum conversionEvent) {
    this.conversionEvent = conversionEvent;
    return this;
  }

  /**
   * Get conversionEvent
   * @return conversionEvent
   */
  @javax.annotation.Nullable
  public ConversionEventEnum getConversionEvent() {
    return conversionEvent;
  }

  public void setConversionEvent(ConversionEventEnum conversionEvent) {
    this.conversionEvent = conversionEvent;
  }


  public OptimizationGoalMetadataConversionTagV3GoalMetadata conversionTagId(String conversionTagId) {
    this.conversionTagId = conversionTagId;
    return this;
  }

  /**
   * Get conversionTagId
   * @return conversionTagId
   */
  @javax.annotation.Nullable
  public String getConversionTagId() {
    return conversionTagId;
  }

  public void setConversionTagId(String conversionTagId) {
    this.conversionTagId = conversionTagId;
  }


  public OptimizationGoalMetadataConversionTagV3GoalMetadata cpaGoalValueInMicroCurrency(String cpaGoalValueInMicroCurrency) {
    this.cpaGoalValueInMicroCurrency = cpaGoalValueInMicroCurrency;
    return this;
  }

  /**
   * Get cpaGoalValueInMicroCurrency
   * @return cpaGoalValueInMicroCurrency
   */
  @javax.annotation.Nullable
  public String getCpaGoalValueInMicroCurrency() {
    return cpaGoalValueInMicroCurrency;
  }

  public void setCpaGoalValueInMicroCurrency(String cpaGoalValueInMicroCurrency) {
    this.cpaGoalValueInMicroCurrency = cpaGoalValueInMicroCurrency;
  }


  public OptimizationGoalMetadataConversionTagV3GoalMetadata isRoasOptimized(Boolean isRoasOptimized) {
    this.isRoasOptimized = isRoasOptimized;
    return this;
  }

  /**
   * ROAS optimization is not supported
   * @return isRoasOptimized
   */
  @javax.annotation.Nullable
  public Boolean getIsRoasOptimized() {
    return isRoasOptimized;
  }

  public void setIsRoasOptimized(Boolean isRoasOptimized) {
    this.isRoasOptimized = isRoasOptimized;
  }


  public OptimizationGoalMetadataConversionTagV3GoalMetadata learningModeType(LearningModeTypeEnum learningModeType) {
    this.learningModeType = learningModeType;
    return this;
  }

  /**
   * Conversion learning model type
   * @return learningModeType
   */
  @javax.annotation.Nullable
  public LearningModeTypeEnum getLearningModeType() {
    return learningModeType;
  }

  public void setLearningModeType(LearningModeTypeEnum learningModeType) {
    this.learningModeType = learningModeType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizationGoalMetadataConversionTagV3GoalMetadata optimizationGoalMetadataConversionTagV3GoalMetadata = (OptimizationGoalMetadataConversionTagV3GoalMetadata) o;
    return Objects.equals(this.attributionWindows, optimizationGoalMetadataConversionTagV3GoalMetadata.attributionWindows) &&
        Objects.equals(this.conversionEvent, optimizationGoalMetadataConversionTagV3GoalMetadata.conversionEvent) &&
        Objects.equals(this.conversionTagId, optimizationGoalMetadataConversionTagV3GoalMetadata.conversionTagId) &&
        Objects.equals(this.cpaGoalValueInMicroCurrency, optimizationGoalMetadataConversionTagV3GoalMetadata.cpaGoalValueInMicroCurrency) &&
        Objects.equals(this.isRoasOptimized, optimizationGoalMetadataConversionTagV3GoalMetadata.isRoasOptimized) &&
        Objects.equals(this.learningModeType, optimizationGoalMetadataConversionTagV3GoalMetadata.learningModeType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributionWindows, conversionEvent, conversionTagId, cpaGoalValueInMicroCurrency, isRoasOptimized, learningModeType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizationGoalMetadataConversionTagV3GoalMetadata {\n");
    sb.append("    attributionWindows: ").append(toIndentedString(attributionWindows)).append("\n");
    sb.append("    conversionEvent: ").append(toIndentedString(conversionEvent)).append("\n");
    sb.append("    conversionTagId: ").append(toIndentedString(conversionTagId)).append("\n");
    sb.append("    cpaGoalValueInMicroCurrency: ").append(toIndentedString(cpaGoalValueInMicroCurrency)).append("\n");
    sb.append("    isRoasOptimized: ").append(toIndentedString(isRoasOptimized)).append("\n");
    sb.append("    learningModeType: ").append(toIndentedString(learningModeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attribution_windows");
    openapiFields.add("conversion_event");
    openapiFields.add("conversion_tag_id");
    openapiFields.add("cpa_goal_value_in_micro_currency");
    openapiFields.add("is_roas_optimized");
    openapiFields.add("learning_mode_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OptimizationGoalMetadataConversionTagV3GoalMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OptimizationGoalMetadataConversionTagV3GoalMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OptimizationGoalMetadataConversionTagV3GoalMetadata is not found in the empty JSON string", OptimizationGoalMetadataConversionTagV3GoalMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OptimizationGoalMetadataConversionTagV3GoalMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OptimizationGoalMetadataConversionTagV3GoalMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `attribution_windows`
      if (jsonObj.get("attribution_windows") != null && !jsonObj.get("attribution_windows").isJsonNull()) {
        OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows.validateJsonElement(jsonObj.get("attribution_windows"));
      }
      if ((jsonObj.get("conversion_event") != null && !jsonObj.get("conversion_event").isJsonNull()) && !jsonObj.get("conversion_event").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversion_event` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversion_event").toString()));
      }
      // validate the optional field `conversion_event`
      if (jsonObj.get("conversion_event") != null && !jsonObj.get("conversion_event").isJsonNull()) {
        ConversionEventEnum.validateJsonElement(jsonObj.get("conversion_event"));
      }
      if ((jsonObj.get("conversion_tag_id") != null && !jsonObj.get("conversion_tag_id").isJsonNull()) && !jsonObj.get("conversion_tag_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversion_tag_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversion_tag_id").toString()));
      }
      if ((jsonObj.get("cpa_goal_value_in_micro_currency") != null && !jsonObj.get("cpa_goal_value_in_micro_currency").isJsonNull()) && !jsonObj.get("cpa_goal_value_in_micro_currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cpa_goal_value_in_micro_currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpa_goal_value_in_micro_currency").toString()));
      }
      if ((jsonObj.get("learning_mode_type") != null && !jsonObj.get("learning_mode_type").isJsonNull()) && !jsonObj.get("learning_mode_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `learning_mode_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("learning_mode_type").toString()));
      }
      // validate the optional field `learning_mode_type`
      if (jsonObj.get("learning_mode_type") != null && !jsonObj.get("learning_mode_type").isJsonNull()) {
        LearningModeTypeEnum.validateJsonElement(jsonObj.get("learning_mode_type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OptimizationGoalMetadataConversionTagV3GoalMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OptimizationGoalMetadataConversionTagV3GoalMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OptimizationGoalMetadataConversionTagV3GoalMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OptimizationGoalMetadataConversionTagV3GoalMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<OptimizationGoalMetadataConversionTagV3GoalMetadata>() {
           @Override
           public void write(JsonWriter out, OptimizationGoalMetadataConversionTagV3GoalMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OptimizationGoalMetadataConversionTagV3GoalMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OptimizationGoalMetadataConversionTagV3GoalMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OptimizationGoalMetadataConversionTagV3GoalMetadata
   * @throws IOException if the JSON string is invalid with respect to OptimizationGoalMetadataConversionTagV3GoalMetadata
   */
  public static OptimizationGoalMetadataConversionTagV3GoalMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OptimizationGoalMetadataConversionTagV3GoalMetadata.class);
  }

  /**
   * Convert an instance of OptimizationGoalMetadataConversionTagV3GoalMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

