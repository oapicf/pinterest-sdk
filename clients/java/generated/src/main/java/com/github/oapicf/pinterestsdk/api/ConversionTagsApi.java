/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.api;

import com.github.oapicf.pinterestsdk.ApiCallback;
import com.github.oapicf.pinterestsdk.ApiClient;
import com.github.oapicf.pinterestsdk.ApiException;
import com.github.oapicf.pinterestsdk.ApiResponse;
import com.github.oapicf.pinterestsdk.Configuration;
import com.github.oapicf.pinterestsdk.Pair;
import com.github.oapicf.pinterestsdk.ProgressRequestBody;
import com.github.oapicf.pinterestsdk.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.github.oapicf.pinterestsdk.model.ConversionEventResponse;
import com.github.oapicf.pinterestsdk.model.ConversionTagCreate;
import com.github.oapicf.pinterestsdk.model.ConversionTagListResponse;
import com.github.oapicf.pinterestsdk.model.ConversionTagResponse;
import com.github.oapicf.pinterestsdk.model.Error;
import com.github.oapicf.pinterestsdk.model.PageVisitConversionTagsGet200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ConversionTagsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ConversionTagsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ConversionTagsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for conversionTagsCreate
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagCreate Conversion Tag to create (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call conversionTagsCreateCall(String adAccountId, ConversionTagCreate conversionTagCreate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = conversionTagCreate;

        // create path and map variables
        String localVarPath = "/ad_accounts/{ad_account_id}/conversion_tags"
            .replace("{" + "ad_account_id" + "}", localVarApiClient.escapeString(adAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "pinterest_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call conversionTagsCreateValidateBeforeCall(String adAccountId, ConversionTagCreate conversionTagCreate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'adAccountId' is set
        if (adAccountId == null) {
            throw new ApiException("Missing the required parameter 'adAccountId' when calling conversionTagsCreate(Async)");
        }

        // verify the required parameter 'conversionTagCreate' is set
        if (conversionTagCreate == null) {
            throw new ApiException("Missing the required parameter 'conversionTagCreate' when calling conversionTagsCreate(Async)");
        }

        return conversionTagsCreateCall(adAccountId, conversionTagCreate, _callback);

    }

    /**
     * Create conversion tag
     * Create a conversion tag, also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest tag&lt;/a&gt;, with the option to enable enhanced match.&lt;p/&gt; The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account&#39;s ad on Pinterest. The advertiser needs to customize this tag to track conversions.&lt;p/&gt; For more information, see:&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot;&gt;Set up the Pinterest tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/\&quot;&gt;Pinterest Tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/#enhanced-match\&quot;&gt;Enhanced match&lt;/a&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagCreate Conversion Tag to create (required)
     * @return ConversionTagResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ConversionTagResponse conversionTagsCreate(String adAccountId, ConversionTagCreate conversionTagCreate) throws ApiException {
        ApiResponse<ConversionTagResponse> localVarResp = conversionTagsCreateWithHttpInfo(adAccountId, conversionTagCreate);
        return localVarResp.getData();
    }

    /**
     * Create conversion tag
     * Create a conversion tag, also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest tag&lt;/a&gt;, with the option to enable enhanced match.&lt;p/&gt; The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account&#39;s ad on Pinterest. The advertiser needs to customize this tag to track conversions.&lt;p/&gt; For more information, see:&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot;&gt;Set up the Pinterest tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/\&quot;&gt;Pinterest Tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/#enhanced-match\&quot;&gt;Enhanced match&lt;/a&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagCreate Conversion Tag to create (required)
     * @return ApiResponse&lt;ConversionTagResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversionTagResponse> conversionTagsCreateWithHttpInfo(String adAccountId, ConversionTagCreate conversionTagCreate) throws ApiException {
        okhttp3.Call localVarCall = conversionTagsCreateValidateBeforeCall(adAccountId, conversionTagCreate, null);
        Type localVarReturnType = new TypeToken<ConversionTagResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create conversion tag (asynchronously)
     * Create a conversion tag, also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest tag&lt;/a&gt;, with the option to enable enhanced match.&lt;p/&gt; The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account&#39;s ad on Pinterest. The advertiser needs to customize this tag to track conversions.&lt;p/&gt; For more information, see:&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot;&gt;Set up the Pinterest tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/\&quot;&gt;Pinterest Tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/#enhanced-match\&quot;&gt;Enhanced match&lt;/a&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagCreate Conversion Tag to create (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call conversionTagsCreateAsync(String adAccountId, ConversionTagCreate conversionTagCreate, final ApiCallback<ConversionTagResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = conversionTagsCreateValidateBeforeCall(adAccountId, conversionTagCreate, _callback);
        Type localVarReturnType = new TypeToken<ConversionTagResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for conversionTagsGet
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagId Id of the conversion tag. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call conversionTagsGetCall(String adAccountId, String conversionTagId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}"
            .replace("{" + "ad_account_id" + "}", localVarApiClient.escapeString(adAccountId.toString()))
            .replace("{" + "conversion_tag_id" + "}", localVarApiClient.escapeString(conversionTagId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "pinterest_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call conversionTagsGetValidateBeforeCall(String adAccountId, String conversionTagId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'adAccountId' is set
        if (adAccountId == null) {
            throw new ApiException("Missing the required parameter 'adAccountId' when calling conversionTagsGet(Async)");
        }

        // verify the required parameter 'conversionTagId' is set
        if (conversionTagId == null) {
            throw new ApiException("Missing the required parameter 'conversionTagId' when calling conversionTagsGet(Async)");
        }

        return conversionTagsGetCall(adAccountId, conversionTagId, _callback);

    }

    /**
     * Get conversion tag
     * Get information about an existing conversion tag.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagId Id of the conversion tag. (required)
     * @return ConversionTagResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ConversionTagResponse conversionTagsGet(String adAccountId, String conversionTagId) throws ApiException {
        ApiResponse<ConversionTagResponse> localVarResp = conversionTagsGetWithHttpInfo(adAccountId, conversionTagId);
        return localVarResp.getData();
    }

    /**
     * Get conversion tag
     * Get information about an existing conversion tag.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagId Id of the conversion tag. (required)
     * @return ApiResponse&lt;ConversionTagResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversionTagResponse> conversionTagsGetWithHttpInfo(String adAccountId, String conversionTagId) throws ApiException {
        okhttp3.Call localVarCall = conversionTagsGetValidateBeforeCall(adAccountId, conversionTagId, null);
        Type localVarReturnType = new TypeToken<ConversionTagResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get conversion tag (asynchronously)
     * Get information about an existing conversion tag.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagId Id of the conversion tag. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call conversionTagsGetAsync(String adAccountId, String conversionTagId, final ApiCallback<ConversionTagResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = conversionTagsGetValidateBeforeCall(adAccountId, conversionTagId, _callback);
        Type localVarReturnType = new TypeToken<ConversionTagResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for conversionTagsList
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param filterDeleted Filter out deleted tags. (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call conversionTagsListCall(String adAccountId, Boolean filterDeleted, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/ad_accounts/{ad_account_id}/conversion_tags"
            .replace("{" + "ad_account_id" + "}", localVarApiClient.escapeString(adAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (filterDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_deleted", filterDeleted));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "pinterest_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call conversionTagsListValidateBeforeCall(String adAccountId, Boolean filterDeleted, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'adAccountId' is set
        if (adAccountId == null) {
            throw new ApiException("Missing the required parameter 'adAccountId' when calling conversionTagsList(Async)");
        }

        return conversionTagsListCall(adAccountId, filterDeleted, _callback);

    }

    /**
     * Get conversion tags
     * List conversion tags associated with an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param filterDeleted Filter out deleted tags. (optional, default to false)
     * @return ConversionTagListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ConversionTagListResponse conversionTagsList(String adAccountId, Boolean filterDeleted) throws ApiException {
        ApiResponse<ConversionTagListResponse> localVarResp = conversionTagsListWithHttpInfo(adAccountId, filterDeleted);
        return localVarResp.getData();
    }

    /**
     * Get conversion tags
     * List conversion tags associated with an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param filterDeleted Filter out deleted tags. (optional, default to false)
     * @return ApiResponse&lt;ConversionTagListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversionTagListResponse> conversionTagsListWithHttpInfo(String adAccountId, Boolean filterDeleted) throws ApiException {
        okhttp3.Call localVarCall = conversionTagsListValidateBeforeCall(adAccountId, filterDeleted, null);
        Type localVarReturnType = new TypeToken<ConversionTagListResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get conversion tags (asynchronously)
     * List conversion tags associated with an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param filterDeleted Filter out deleted tags. (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call conversionTagsListAsync(String adAccountId, Boolean filterDeleted, final ApiCallback<ConversionTagListResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = conversionTagsListValidateBeforeCall(adAccountId, filterDeleted, _callback);
        Type localVarReturnType = new TypeToken<ConversionTagListResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ocpmEligibleConversionTagsGet
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected errors </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ocpmEligibleConversionTagsGetCall(String adAccountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible"
            .replace("{" + "ad_account_id" + "}", localVarApiClient.escapeString(adAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "pinterest_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ocpmEligibleConversionTagsGetValidateBeforeCall(String adAccountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'adAccountId' is set
        if (adAccountId == null) {
            throw new ApiException("Missing the required parameter 'adAccountId' when calling ocpmEligibleConversionTagsGet(Async)");
        }

        return ocpmEligibleConversionTagsGetCall(adAccountId, _callback);

    }

    /**
     * Get Ocpm eligible conversion tags
     * Get Ocpm eligible conversion tag events for an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return Map&lt;String, List&lt;ConversionEventResponse&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected errors </td><td>  -  </td></tr>
     </table>
     */
    public Map<String, List<ConversionEventResponse>> ocpmEligibleConversionTagsGet(String adAccountId) throws ApiException {
        ApiResponse<Map<String, List<ConversionEventResponse>>> localVarResp = ocpmEligibleConversionTagsGetWithHttpInfo(adAccountId);
        return localVarResp.getData();
    }

    /**
     * Get Ocpm eligible conversion tags
     * Get Ocpm eligible conversion tag events for an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return ApiResponse&lt;Map&lt;String, List&lt;ConversionEventResponse&gt;&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected errors </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Map<String, List<ConversionEventResponse>>> ocpmEligibleConversionTagsGetWithHttpInfo(String adAccountId) throws ApiException {
        okhttp3.Call localVarCall = ocpmEligibleConversionTagsGetValidateBeforeCall(adAccountId, null);
        Type localVarReturnType = new TypeToken<Map<String, List<ConversionEventResponse>>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Ocpm eligible conversion tags (asynchronously)
     * Get Ocpm eligible conversion tag events for an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected errors </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ocpmEligibleConversionTagsGetAsync(String adAccountId, final ApiCallback<Map<String, List<ConversionEventResponse>>> _callback) throws ApiException {

        okhttp3.Call localVarCall = ocpmEligibleConversionTagsGetValidateBeforeCall(adAccountId, _callback);
        Type localVarReturnType = new TypeToken<Map<String, List<ConversionEventResponse>>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for pageVisitConversionTagsGet
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call pageVisitConversionTagsGetCall(String adAccountId, Integer pageSize, String order, String bookmark, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/ad_accounts/{ad_account_id}/conversion_tags/page_visit"
            .replace("{" + "ad_account_id" + "}", localVarApiClient.escapeString(adAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (order != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("order", order));
        }

        if (bookmark != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bookmark", bookmark));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "pinterest_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call pageVisitConversionTagsGetValidateBeforeCall(String adAccountId, Integer pageSize, String order, String bookmark, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'adAccountId' is set
        if (adAccountId == null) {
            throw new ApiException("Missing the required parameter 'adAccountId' when calling pageVisitConversionTagsGet(Async)");
        }

        return pageVisitConversionTagsGetCall(adAccountId, pageSize, order, bookmark, _callback);

    }

    /**
     * Get page visit conversion tags
     * Get all page visit conversion tag events for an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return PageVisitConversionTagsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public PageVisitConversionTagsGet200Response pageVisitConversionTagsGet(String adAccountId, Integer pageSize, String order, String bookmark) throws ApiException {
        ApiResponse<PageVisitConversionTagsGet200Response> localVarResp = pageVisitConversionTagsGetWithHttpInfo(adAccountId, pageSize, order, bookmark);
        return localVarResp.getData();
    }

    /**
     * Get page visit conversion tags
     * Get all page visit conversion tag events for an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return ApiResponse&lt;PageVisitConversionTagsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageVisitConversionTagsGet200Response> pageVisitConversionTagsGetWithHttpInfo(String adAccountId, Integer pageSize, String order, String bookmark) throws ApiException {
        okhttp3.Call localVarCall = pageVisitConversionTagsGetValidateBeforeCall(adAccountId, pageSize, order, bookmark, null);
        Type localVarReturnType = new TypeToken<PageVisitConversionTagsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get page visit conversion tags (asynchronously)
     * Get all page visit conversion tag events for an ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call pageVisitConversionTagsGetAsync(String adAccountId, Integer pageSize, String order, String bookmark, final ApiCallback<PageVisitConversionTagsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = pageVisitConversionTagsGetValidateBeforeCall(adAccountId, pageSize, order, bookmark, _callback);
        Type localVarReturnType = new TypeToken<PageVisitConversionTagsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
