/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.model;

import java.util.Objects;
import com.github.oapicf.pinterestsdk.model.SSIOAccountAddress;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.github.oapicf.pinterestsdk.JSON;

/**
 * SSIOAccountItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-05T02:01:32.024245558Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class SSIOAccountItem {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IO_TERMS_ID = "io_terms_id";
  @SerializedName(SERIALIZED_NAME_IO_TERMS_ID)
  private String ioTermsId;

  public static final String SERIALIZED_NAME_IO_TERMS = "io_terms";
  @SerializedName(SERIALIZED_NAME_IO_TERMS)
  private String ioTerms;

  public static final String SERIALIZED_NAME_US_TERMS_ID = "us_terms_id";
  @SerializedName(SERIALIZED_NAME_US_TERMS_ID)
  private String usTermsId;

  public static final String SERIALIZED_NAME_US_TERMS = "us_terms";
  @SerializedName(SERIALIZED_NAME_US_TERMS)
  private String usTerms;

  public static final String SERIALIZED_NAME_ROW_TERMS_ID = "row_terms_id";
  @SerializedName(SERIALIZED_NAME_ROW_TERMS_ID)
  private String rowTermsId;

  public static final String SERIALIZED_NAME_ROW_TERMS = "row_terms";
  @SerializedName(SERIALIZED_NAME_ROW_TERMS)
  private String rowTerms;

  public static final String SERIALIZED_NAME_IO_TYPE = "io_type";
  @SerializedName(SERIALIZED_NAME_IO_TYPE)
  private String ioType;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<SSIOAccountAddress> addresses = new ArrayList<>();

  public SSIOAccountItem() {
  }

  public SSIOAccountItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Salesforce id for billto_info
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public SSIOAccountItem ioTermsId(String ioTermsId) {
    this.ioTermsId = ioTermsId;
    return this;
  }

  /**
   * Salesforce id for IO Terms and Conditions
   * @return ioTermsId
   */
  @javax.annotation.Nullable
  public String getIoTermsId() {
    return ioTermsId;
  }

  public void setIoTermsId(String ioTermsId) {
    this.ioTermsId = ioTermsId;
  }


  public SSIOAccountItem ioTerms(String ioTerms) {
    this.ioTerms = ioTerms;
    return this;
  }

  /**
   * Salesforce text for IO Terms and Conditions
   * @return ioTerms
   */
  @javax.annotation.Nullable
  public String getIoTerms() {
    return ioTerms;
  }

  public void setIoTerms(String ioTerms) {
    this.ioTerms = ioTerms;
  }


  public SSIOAccountItem usTermsId(String usTermsId) {
    this.usTermsId = usTermsId;
    return this;
  }

  /**
   * Salesforce id for US Terms and Conditions
   * @return usTermsId
   */
  @javax.annotation.Nullable
  public String getUsTermsId() {
    return usTermsId;
  }

  public void setUsTermsId(String usTermsId) {
    this.usTermsId = usTermsId;
  }


  public SSIOAccountItem usTerms(String usTerms) {
    this.usTerms = usTerms;
    return this;
  }

  /**
   * Salesforce text for US Terms and Conditions
   * @return usTerms
   */
  @javax.annotation.Nullable
  public String getUsTerms() {
    return usTerms;
  }

  public void setUsTerms(String usTerms) {
    this.usTerms = usTerms;
  }


  public SSIOAccountItem rowTermsId(String rowTermsId) {
    this.rowTermsId = rowTermsId;
    return this;
  }

  /**
   * Salesforce id for Rest of the World Terms and Conditions
   * @return rowTermsId
   */
  @javax.annotation.Nullable
  public String getRowTermsId() {
    return rowTermsId;
  }

  public void setRowTermsId(String rowTermsId) {
    this.rowTermsId = rowTermsId;
  }


  public SSIOAccountItem rowTerms(String rowTerms) {
    this.rowTerms = rowTerms;
    return this;
  }

  /**
   * Salesforce text for Rest of the World Terms and Conditions
   * @return rowTerms
   */
  @javax.annotation.Nullable
  public String getRowTerms() {
    return rowTerms;
  }

  public void setRowTerms(String rowTerms) {
    this.rowTerms = rowTerms;
  }


  public SSIOAccountItem ioType(String ioType) {
    this.ioType = ioType;
    return this;
  }

  /**
   * Insertion Order Type - Pinterest Paper or Agency Paper
   * @return ioType
   */
  @javax.annotation.Nullable
  public String getIoType() {
    return ioType;
  }

  public void setIoType(String ioType) {
    this.ioType = ioType;
  }


  public SSIOAccountItem addresses(List<SSIOAccountAddress> addresses) {
    this.addresses = addresses;
    return this;
  }

  public SSIOAccountItem addAddressesItem(SSIOAccountAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Address information that is associated with this account.
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<SSIOAccountAddress> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<SSIOAccountAddress> addresses) {
    this.addresses = addresses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SSIOAccountItem ssIOAccountItem = (SSIOAccountItem) o;
    return Objects.equals(this.id, ssIOAccountItem.id) &&
        Objects.equals(this.ioTermsId, ssIOAccountItem.ioTermsId) &&
        Objects.equals(this.ioTerms, ssIOAccountItem.ioTerms) &&
        Objects.equals(this.usTermsId, ssIOAccountItem.usTermsId) &&
        Objects.equals(this.usTerms, ssIOAccountItem.usTerms) &&
        Objects.equals(this.rowTermsId, ssIOAccountItem.rowTermsId) &&
        Objects.equals(this.rowTerms, ssIOAccountItem.rowTerms) &&
        Objects.equals(this.ioType, ssIOAccountItem.ioType) &&
        Objects.equals(this.addresses, ssIOAccountItem.addresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ioTermsId, ioTerms, usTermsId, usTerms, rowTermsId, rowTerms, ioType, addresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SSIOAccountItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ioTermsId: ").append(toIndentedString(ioTermsId)).append("\n");
    sb.append("    ioTerms: ").append(toIndentedString(ioTerms)).append("\n");
    sb.append("    usTermsId: ").append(toIndentedString(usTermsId)).append("\n");
    sb.append("    usTerms: ").append(toIndentedString(usTerms)).append("\n");
    sb.append("    rowTermsId: ").append(toIndentedString(rowTermsId)).append("\n");
    sb.append("    rowTerms: ").append(toIndentedString(rowTerms)).append("\n");
    sb.append("    ioType: ").append(toIndentedString(ioType)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("io_terms_id");
    openapiFields.add("io_terms");
    openapiFields.add("us_terms_id");
    openapiFields.add("us_terms");
    openapiFields.add("row_terms_id");
    openapiFields.add("row_terms");
    openapiFields.add("io_type");
    openapiFields.add("addresses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SSIOAccountItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SSIOAccountItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SSIOAccountItem is not found in the empty JSON string", SSIOAccountItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SSIOAccountItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SSIOAccountItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("io_terms_id") != null && !jsonObj.get("io_terms_id").isJsonNull()) && !jsonObj.get("io_terms_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `io_terms_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("io_terms_id").toString()));
      }
      if ((jsonObj.get("io_terms") != null && !jsonObj.get("io_terms").isJsonNull()) && !jsonObj.get("io_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `io_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("io_terms").toString()));
      }
      if ((jsonObj.get("us_terms_id") != null && !jsonObj.get("us_terms_id").isJsonNull()) && !jsonObj.get("us_terms_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `us_terms_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("us_terms_id").toString()));
      }
      if ((jsonObj.get("us_terms") != null && !jsonObj.get("us_terms").isJsonNull()) && !jsonObj.get("us_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `us_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("us_terms").toString()));
      }
      if ((jsonObj.get("row_terms_id") != null && !jsonObj.get("row_terms_id").isJsonNull()) && !jsonObj.get("row_terms_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `row_terms_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("row_terms_id").toString()));
      }
      if ((jsonObj.get("row_terms") != null && !jsonObj.get("row_terms").isJsonNull()) && !jsonObj.get("row_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `row_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("row_terms").toString()));
      }
      if ((jsonObj.get("io_type") != null && !jsonObj.get("io_type").isJsonNull()) && !jsonObj.get("io_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `io_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("io_type").toString()));
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            SSIOAccountAddress.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SSIOAccountItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SSIOAccountItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SSIOAccountItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SSIOAccountItem.class));

       return (TypeAdapter<T>) new TypeAdapter<SSIOAccountItem>() {
           @Override
           public void write(JsonWriter out, SSIOAccountItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SSIOAccountItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SSIOAccountItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SSIOAccountItem
   * @throws IOException if the JSON string is invalid with respect to SSIOAccountItem
   */
  public static SSIOAccountItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SSIOAccountItem.class);
  }

  /**
   * Convert an instance of SSIOAccountItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

