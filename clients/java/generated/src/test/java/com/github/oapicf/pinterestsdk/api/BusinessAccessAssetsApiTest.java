/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.oapicf.pinterestsdk.api;

import com.github.oapicf.pinterestsdk.ApiException;
import com.github.oapicf.pinterestsdk.model.BusinessAssetMembersGet200Response;
import com.github.oapicf.pinterestsdk.model.BusinessAssetPartnersGet200Response;
import com.github.oapicf.pinterestsdk.model.BusinessAssetsGet200Response;
import com.github.oapicf.pinterestsdk.model.BusinessMemberAssetsGet200Response;
import com.github.oapicf.pinterestsdk.model.BusinessMembersAssetAccessDeleteRequest;
import com.github.oapicf.pinterestsdk.model.BusinessPartnerAssetAccessGet200Response;
import com.github.oapicf.pinterestsdk.model.CreateAssetGroupBody;
import com.github.oapicf.pinterestsdk.model.CreateAssetGroupResponse;
import com.github.oapicf.pinterestsdk.model.DeleteAssetGroupBody;
import com.github.oapicf.pinterestsdk.model.DeleteAssetGroupResponse;
import com.github.oapicf.pinterestsdk.model.DeleteMemberAccessResultsResponseArray;
import com.github.oapicf.pinterestsdk.model.DeletePartnerAssetAccessBody;
import com.github.oapicf.pinterestsdk.model.DeletePartnerAssetsResultsResponseArray;
import com.github.oapicf.pinterestsdk.model.Error;
import com.github.oapicf.pinterestsdk.model.PartnerType;
import com.github.oapicf.pinterestsdk.model.PermissionsWithOwner;
import com.github.oapicf.pinterestsdk.model.UpdateAssetGroupBody;
import com.github.oapicf.pinterestsdk.model.UpdateAssetGroupResponse;
import com.github.oapicf.pinterestsdk.model.UpdateMemberAssetAccessBody;
import com.github.oapicf.pinterestsdk.model.UpdateMemberAssetsResultsResponseArray;
import com.github.oapicf.pinterestsdk.model.UpdatePartnerAssetAccessBody;
import com.github.oapicf.pinterestsdk.model.UpdatePartnerAssetsResultsResponseArray;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BusinessAccessAssetsApi
 */
@Disabled
public class BusinessAccessAssetsApiTest {

    private final BusinessAccessAssetsApi api = new BusinessAccessAssetsApi();

    /**
     * Create a new asset group.
     *
     * Create a new asset group with the specified parameters. - An &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/asset-groups\&quot;&gt;asset group&lt;/a&gt; is a custom group of assets based on how youâ€™d like to manage your accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assetGroupCreateTest() throws ApiException {
        String businessId = null;
        CreateAssetGroupBody createAssetGroupBody = null;
        CreateAssetGroupResponse response = api.assetGroupCreate(businessId, createAssetGroupBody);
        // TODO: test validations
    }

    /**
     * Delete asset groups.
     *
     * Delete a batch of asset groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assetGroupDeleteTest() throws ApiException {
        String businessId = null;
        DeleteAssetGroupBody deleteAssetGroupBody = null;
        DeleteAssetGroupResponse response = api.assetGroupDelete(businessId, deleteAssetGroupBody);
        // TODO: test validations
    }

    /**
     * Update asset groups.
     *
     * Update a batch of asset groups with the specified parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assetGroupUpdateTest() throws ApiException {
        String businessId = null;
        UpdateAssetGroupBody updateAssetGroupBody = null;
        UpdateAssetGroupResponse response = api.assetGroupUpdate(businessId, updateAssetGroupBody);
        // TODO: test validations
    }

    /**
     * Get members with access to asset
     *
     * Get all the members the requesting business has granted access to on the given asset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessAssetMembersGetTest() throws ApiException {
        String businessId = null;
        String assetId = null;
        String bookmark = null;
        Integer pageSize = null;
        Integer startIndex = null;
        BusinessAssetMembersGet200Response response = api.businessAssetMembersGet(businessId, assetId, bookmark, pageSize, startIndex);
        // TODO: test validations
    }

    /**
     * Get partners with access to asset
     *
     * Get all the partners the requesting business has granted access to on the given asset. Note: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with you cannot be shared with a different partner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessAssetPartnersGetTest() throws ApiException {
        String businessId = null;
        String assetId = null;
        Integer startIndex = null;
        String bookmark = null;
        Integer pageSize = null;
        BusinessAssetPartnersGet200Response response = api.businessAssetPartnersGet(businessId, assetId, startIndex, bookmark, pageSize);
        // TODO: test validations
    }

    /**
     * List business assets
     *
     * Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessAssetsGetTest() throws ApiException {
        String businessId = null;
        List<PermissionsWithOwner> permissions = null;
        String childAssetId = null;
        String assetGroupId = null;
        String assetType = null;
        Integer startIndex = null;
        String bookmark = null;
        Integer pageSize = null;
        BusinessAssetsGet200Response response = api.businessAssetsGet(businessId, permissions, childAssetId, assetGroupId, assetType, startIndex, bookmark, pageSize);
        // TODO: test validations
    }

    /**
     * Get assets assigned to a member
     *
     * Get assets on which you assigned asset permissions to the given member. Can be used to: - get all assets, regardless of asset type or - get assets of one asset type by using the asset_type query. The return response will include the permissions the member has to that asset and the asset type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessMemberAssetsGetTest() throws ApiException {
        String businessId = null;
        String memberId = null;
        String assetType = null;
        Integer startIndex = null;
        String bookmark = null;
        Integer pageSize = null;
        BusinessMemberAssetsGet200Response response = api.businessMemberAssetsGet(businessId, memberId, assetType, startIndex, bookmark, pageSize);
        // TODO: test validations
    }

    /**
     * Delete member access to asset
     *
     * Terminate multiple members&#39; access to an asset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessMembersAssetAccessDeleteTest() throws ApiException {
        String businessId = null;
        BusinessMembersAssetAccessDeleteRequest businessMembersAssetAccessDeleteRequest = null;
        DeleteMemberAccessResultsResponseArray response = api.businessMembersAssetAccessDelete(businessId, businessMembersAssetAccessDeleteRequest);
        // TODO: test validations
    }

    /**
     * Assign/Update member asset permissions
     *
     * Grant multiple members access to assets and/or update multiple member&#39;s exisiting permissions to an asset. Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessMembersAssetAccessUpdateTest() throws ApiException {
        String businessId = null;
        UpdateMemberAssetAccessBody updateMemberAssetAccessBody = null;
        UpdateMemberAssetsResultsResponseArray response = api.businessMembersAssetAccessUpdate(businessId, updateMemberAssetAccessBody);
        // TODO: test validations
    }

    /**
     * Get assets assigned to a partner or assets assigned by a partner
     *
     * Can be used to get the business assets your partner has granted you access to or the business assets you have granted your partner access to. If you specify: - partner_type&#x3D;INTERNAL, you will retrieve your business assets that the partner has access to. - partner_type&#x3D;EXTERNAL, you will retrieve the partner&#39;s business assets that the partner has granted you access to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void businessPartnerAssetAccessGetTest() throws ApiException {
        String businessId = null;
        String partnerId = null;
        PartnerType partnerType = null;
        String assetType = null;
        Integer startIndex = null;
        Integer pageSize = null;
        String bookmark = null;
        BusinessPartnerAssetAccessGet200Response response = api.businessPartnerAssetAccessGet(businessId, partnerId, partnerType, assetType, startIndex, pageSize, bookmark);
        // TODO: test validations
    }

    /**
     * Delete partner access to asset
     *
     * Terminate multiple partners&#39; access to an asset. If - partner_type&#x3D;INTERNAL: You will terminate a partner&#39;s asset access to your business assets. - partner_type&#x3D;EXTERNAL: You will terminate your own access to your partner&#39;s business assets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePartnerAssetAccessHandlerImplTest() throws ApiException {
        String businessId = null;
        DeletePartnerAssetAccessBody deletePartnerAssetAccessBody = null;
        DeletePartnerAssetsResultsResponseArray response = api.deletePartnerAssetAccessHandlerImpl(businessId, deletePartnerAssetAccessBody);
        // TODO: test validations
    }

    /**
     * Assign/Update partner asset permissions
     *
     * Grant multiple partners access to assets and/or update multiple partner&#39;s exisiting permissions to an asset. If your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them. To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview  Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePartnerAssetAccessHandlerImplTest() throws ApiException {
        String businessId = null;
        UpdatePartnerAssetAccessBody updatePartnerAssetAccessBody = null;
        UpdatePartnerAssetsResultsResponseArray response = api.updatePartnerAssetAccessHandlerImpl(businessId, updatePartnerAssetAccessBody);
        // TODO: test validations
    }

}
