/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPins_save_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPins_save_request::OAIPins_save_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPins_save_request::OAIPins_save_request() {
    this->initializeModel();
}

OAIPins_save_request::~OAIPins_save_request() {}

void OAIPins_save_request::initializeModel() {

    m_board_id_isSet = false;
    m_board_id_isValid = false;

    m_board_section_id_isSet = false;
    m_board_section_id_isValid = false;
}

void OAIPins_save_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPins_save_request::fromJsonObject(QJsonObject json) {

    m_board_id_isValid = ::OpenAPI::fromJsonValue(m_board_id, json[QString("board_id")]);
    m_board_id_isSet = !json[QString("board_id")].isNull() && m_board_id_isValid;

    m_board_section_id_isValid = ::OpenAPI::fromJsonValue(m_board_section_id, json[QString("board_section_id")]);
    m_board_section_id_isSet = !json[QString("board_section_id")].isNull() && m_board_section_id_isValid;
}

QString OAIPins_save_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPins_save_request::asJsonObject() const {
    QJsonObject obj;
    if (m_board_id_isSet) {
        obj.insert(QString("board_id"), ::OpenAPI::toJsonValue(m_board_id));
    }
    if (m_board_section_id_isSet) {
        obj.insert(QString("board_section_id"), ::OpenAPI::toJsonValue(m_board_section_id));
    }
    return obj;
}

QString OAIPins_save_request::getBoardId() const {
    return m_board_id;
}
void OAIPins_save_request::setBoardId(const QString &board_id) {
    m_board_id = board_id;
    m_board_id_isSet = true;
}

bool OAIPins_save_request::is_board_id_Set() const{
    return m_board_id_isSet;
}

bool OAIPins_save_request::is_board_id_Valid() const{
    return m_board_id_isValid;
}

QString OAIPins_save_request::getBoardSectionId() const {
    return m_board_section_id;
}
void OAIPins_save_request::setBoardSectionId(const QString &board_section_id) {
    m_board_section_id = board_section_id;
    m_board_section_id_isSet = true;
}

bool OAIPins_save_request::is_board_section_id_Set() const{
    return m_board_section_id_isSet;
}

bool OAIPins_save_request::is_board_section_id_Valid() const{
    return m_board_section_id_isValid;
}

bool OAIPins_save_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_board_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_board_section_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPins_save_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
