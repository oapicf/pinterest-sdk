/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdPreviewRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdPreviewRequest::OAIAdPreviewRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdPreviewRequest::OAIAdPreviewRequest() {
    this->initializeModel();
}

OAIAdPreviewRequest::~OAIAdPreviewRequest() {}

void OAIAdPreviewRequest::initializeModel() {

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_pin_id_isSet = false;
    m_pin_id_isValid = false;
}

void OAIAdPreviewRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdPreviewRequest::fromJsonObject(QJsonObject json) {

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("image_url")]);
    m_image_url_isSet = !json[QString("image_url")].isNull() && m_image_url_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_pin_id_isValid = ::OpenAPI::fromJsonValue(m_pin_id, json[QString("pin_id")]);
    m_pin_id_isSet = !json[QString("pin_id")].isNull() && m_pin_id_isValid;
}

QString OAIAdPreviewRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdPreviewRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_image_url_isSet) {
        obj.insert(QString("image_url"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_pin_id_isSet) {
        obj.insert(QString("pin_id"), ::OpenAPI::toJsonValue(m_pin_id));
    }
    return obj;
}

QString OAIAdPreviewRequest::getImageUrl() const {
    return m_image_url;
}
void OAIAdPreviewRequest::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIAdPreviewRequest::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIAdPreviewRequest::is_image_url_Valid() const{
    return m_image_url_isValid;
}

QString OAIAdPreviewRequest::getTitle() const {
    return m_title;
}
void OAIAdPreviewRequest::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAdPreviewRequest::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAdPreviewRequest::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIAdPreviewRequest::getPinId() const {
    return m_pin_id;
}
void OAIAdPreviewRequest::setPinId(const QString &pin_id) {
    m_pin_id = pin_id;
    m_pin_id_isSet = true;
}

bool OAIAdPreviewRequest::is_pin_id_Set() const{
    return m_pin_id_isSet;
}

bool OAIAdPreviewRequest::is_pin_id_Valid() const{
    return m_pin_id_isValid;
}

bool OAIAdPreviewRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pin_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdPreviewRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_image_url_isValid && m_title_isValid && m_pin_id_isValid && true;
}

} // namespace OpenAPI
