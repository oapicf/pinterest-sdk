/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItem::OAILineItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItem::OAILineItem() {
    this->initializeModel();
}

OAILineItem::~OAILineItem() {}

void OAILineItem::initializeModel() {

    m_product_brand_isSet = false;
    m_product_brand_isValid = false;

    m_product_category_isSet = false;
    m_product_category_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_product_name_isSet = false;
    m_product_name_isValid = false;

    m_product_price_isSet = false;
    m_product_price_isValid = false;

    m_product_quantity_isSet = false;
    m_product_quantity_isValid = false;

    m_product_variant_isSet = false;
    m_product_variant_isValid = false;

    m_product_variant_id_isSet = false;
    m_product_variant_id_isValid = false;
}

void OAILineItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItem::fromJsonObject(QJsonObject json) {

    m_product_brand_isValid = ::OpenAPI::fromJsonValue(m_product_brand, json[QString("product_brand")]);
    m_product_brand_isSet = !json[QString("product_brand")].isNull() && m_product_brand_isValid;

    m_product_category_isValid = ::OpenAPI::fromJsonValue(m_product_category, json[QString("product_category")]);
    m_product_category_isSet = !json[QString("product_category")].isNull() && m_product_category_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("product_id")]);
    m_product_id_isSet = !json[QString("product_id")].isNull() && m_product_id_isValid;

    m_product_name_isValid = ::OpenAPI::fromJsonValue(m_product_name, json[QString("product_name")]);
    m_product_name_isSet = !json[QString("product_name")].isNull() && m_product_name_isValid;

    m_product_price_isValid = ::OpenAPI::fromJsonValue(m_product_price, json[QString("product_price")]);
    m_product_price_isSet = !json[QString("product_price")].isNull() && m_product_price_isValid;

    m_product_quantity_isValid = ::OpenAPI::fromJsonValue(m_product_quantity, json[QString("product_quantity")]);
    m_product_quantity_isSet = !json[QString("product_quantity")].isNull() && m_product_quantity_isValid;

    m_product_variant_isValid = ::OpenAPI::fromJsonValue(m_product_variant, json[QString("product_variant")]);
    m_product_variant_isSet = !json[QString("product_variant")].isNull() && m_product_variant_isValid;

    m_product_variant_id_isValid = ::OpenAPI::fromJsonValue(m_product_variant_id, json[QString("product_variant_id")]);
    m_product_variant_id_isSet = !json[QString("product_variant_id")].isNull() && m_product_variant_id_isValid;
}

QString OAILineItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItem::asJsonObject() const {
    QJsonObject obj;
    if (m_product_brand_isSet) {
        obj.insert(QString("product_brand"), ::OpenAPI::toJsonValue(m_product_brand));
    }
    if (m_product_category_isSet) {
        obj.insert(QString("product_category"), ::OpenAPI::toJsonValue(m_product_category));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("product_id"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_product_name_isSet) {
        obj.insert(QString("product_name"), ::OpenAPI::toJsonValue(m_product_name));
    }
    if (m_product_price_isSet) {
        obj.insert(QString("product_price"), ::OpenAPI::toJsonValue(m_product_price));
    }
    if (m_product_quantity_isSet) {
        obj.insert(QString("product_quantity"), ::OpenAPI::toJsonValue(m_product_quantity));
    }
    if (m_product_variant_isSet) {
        obj.insert(QString("product_variant"), ::OpenAPI::toJsonValue(m_product_variant));
    }
    if (m_product_variant_id_isSet) {
        obj.insert(QString("product_variant_id"), ::OpenAPI::toJsonValue(m_product_variant_id));
    }
    return obj;
}

QString OAILineItem::getProductBrand() const {
    return m_product_brand;
}
void OAILineItem::setProductBrand(const QString &product_brand) {
    m_product_brand = product_brand;
    m_product_brand_isSet = true;
}

bool OAILineItem::is_product_brand_Set() const{
    return m_product_brand_isSet;
}

bool OAILineItem::is_product_brand_Valid() const{
    return m_product_brand_isValid;
}

QString OAILineItem::getProductCategory() const {
    return m_product_category;
}
void OAILineItem::setProductCategory(const QString &product_category) {
    m_product_category = product_category;
    m_product_category_isSet = true;
}

bool OAILineItem::is_product_category_Set() const{
    return m_product_category_isSet;
}

bool OAILineItem::is_product_category_Valid() const{
    return m_product_category_isValid;
}

qint32 OAILineItem::getProductId() const {
    return m_product_id;
}
void OAILineItem::setProductId(const qint32 &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAILineItem::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAILineItem::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAILineItem::getProductName() const {
    return m_product_name;
}
void OAILineItem::setProductName(const QString &product_name) {
    m_product_name = product_name;
    m_product_name_isSet = true;
}

bool OAILineItem::is_product_name_Set() const{
    return m_product_name_isSet;
}

bool OAILineItem::is_product_name_Valid() const{
    return m_product_name_isValid;
}

QString OAILineItem::getProductPrice() const {
    return m_product_price;
}
void OAILineItem::setProductPrice(const QString &product_price) {
    m_product_price = product_price;
    m_product_price_isSet = true;
}

bool OAILineItem::is_product_price_Set() const{
    return m_product_price_isSet;
}

bool OAILineItem::is_product_price_Valid() const{
    return m_product_price_isValid;
}

qint32 OAILineItem::getProductQuantity() const {
    return m_product_quantity;
}
void OAILineItem::setProductQuantity(const qint32 &product_quantity) {
    m_product_quantity = product_quantity;
    m_product_quantity_isSet = true;
}

bool OAILineItem::is_product_quantity_Set() const{
    return m_product_quantity_isSet;
}

bool OAILineItem::is_product_quantity_Valid() const{
    return m_product_quantity_isValid;
}

QString OAILineItem::getProductVariant() const {
    return m_product_variant;
}
void OAILineItem::setProductVariant(const QString &product_variant) {
    m_product_variant = product_variant;
    m_product_variant_isSet = true;
}

bool OAILineItem::is_product_variant_Set() const{
    return m_product_variant_isSet;
}

bool OAILineItem::is_product_variant_Valid() const{
    return m_product_variant_isValid;
}

QString OAILineItem::getProductVariantId() const {
    return m_product_variant_id;
}
void OAILineItem::setProductVariantId(const QString &product_variant_id) {
    m_product_variant_id = product_variant_id;
    m_product_variant_id_isSet = true;
}

bool OAILineItem::is_product_variant_id_Set() const{
    return m_product_variant_id_isSet;
}

bool OAILineItem::is_product_variant_id_Valid() const{
    return m_product_variant_id_isValid;
}

bool OAILineItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_variant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_variant_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
