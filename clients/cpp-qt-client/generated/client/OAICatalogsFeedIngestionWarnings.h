/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogsFeedIngestionWarnings.h
 *
 * 
 */

#ifndef OAICatalogsFeedIngestionWarnings_H
#define OAICatalogsFeedIngestionWarnings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICatalogsFeedIngestionWarnings : public OAIObject {
public:
    OAICatalogsFeedIngestionWarnings();
    OAICatalogsFeedIngestionWarnings(QString json);
    ~OAICatalogsFeedIngestionWarnings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdditionalImageLevelInternalError() const;
    void setAdditionalImageLevelInternalError(const qint32 &additional_image_level_internal_error);
    bool is_additional_image_level_internal_error_Set() const;
    bool is_additional_image_level_internal_error_Valid() const;

    qint32 getAdditionalImageFileNotAccessible() const;
    void setAdditionalImageFileNotAccessible(const qint32 &additional_image_file_not_accessible);
    bool is_additional_image_file_not_accessible_Set() const;
    bool is_additional_image_file_not_accessible_Valid() const;

    qint32 getAdditionalImageMalformedUrl() const;
    void setAdditionalImageMalformedUrl(const qint32 &additional_image_malformed_url);
    bool is_additional_image_malformed_url_Set() const;
    bool is_additional_image_malformed_url_Valid() const;

    qint32 getAdditionalImageFileNotFound() const;
    void setAdditionalImageFileNotFound(const qint32 &additional_image_file_not_found);
    bool is_additional_image_file_not_found_Set() const;
    bool is_additional_image_file_not_found_Valid() const;

    qint32 getAdditionalImageInvalidFile() const;
    void setAdditionalImageInvalidFile(const qint32 &additional_image_invalid_file);
    bool is_additional_image_invalid_file_Set() const;
    bool is_additional_image_invalid_file_Valid() const;

    qint32 getHotelPriceHeaderIsPresent() const;
    void setHotelPriceHeaderIsPresent(const qint32 &hotel_price_header_is_present);
    bool is_hotel_price_header_is_present_Set() const;
    bool is_hotel_price_header_is_present_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_additional_image_level_internal_error;
    bool m_additional_image_level_internal_error_isSet;
    bool m_additional_image_level_internal_error_isValid;

    qint32 m_additional_image_file_not_accessible;
    bool m_additional_image_file_not_accessible_isSet;
    bool m_additional_image_file_not_accessible_isValid;

    qint32 m_additional_image_malformed_url;
    bool m_additional_image_malformed_url_isSet;
    bool m_additional_image_malformed_url_isValid;

    qint32 m_additional_image_file_not_found;
    bool m_additional_image_file_not_found_isSet;
    bool m_additional_image_file_not_found_isValid;

    qint32 m_additional_image_invalid_file;
    bool m_additional_image_invalid_file_isSet;
    bool m_additional_image_invalid_file_isValid;

    qint32 m_hotel_price_header_is_present;
    bool m_hotel_price_header_is_present_isSet;
    bool m_hotel_price_header_is_present_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogsFeedIngestionWarnings)

#endif // OAICatalogsFeedIngestionWarnings_H
