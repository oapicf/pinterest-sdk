/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOptimizationGoalMetadata_scrollup_goal_metadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOptimizationGoalMetadata_scrollup_goal_metadata::OAIOptimizationGoalMetadata_scrollup_goal_metadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOptimizationGoalMetadata_scrollup_goal_metadata::OAIOptimizationGoalMetadata_scrollup_goal_metadata() {
    this->initializeModel();
}

OAIOptimizationGoalMetadata_scrollup_goal_metadata::~OAIOptimizationGoalMetadata_scrollup_goal_metadata() {}

void OAIOptimizationGoalMetadata_scrollup_goal_metadata::initializeModel() {

    m_scrollup_goal_value_in_micro_currency_isSet = false;
    m_scrollup_goal_value_in_micro_currency_isValid = false;
}

void OAIOptimizationGoalMetadata_scrollup_goal_metadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOptimizationGoalMetadata_scrollup_goal_metadata::fromJsonObject(QJsonObject json) {

    m_scrollup_goal_value_in_micro_currency_isValid = ::OpenAPI::fromJsonValue(m_scrollup_goal_value_in_micro_currency, json[QString("scrollup_goal_value_in_micro_currency")]);
    m_scrollup_goal_value_in_micro_currency_isSet = !json[QString("scrollup_goal_value_in_micro_currency")].isNull() && m_scrollup_goal_value_in_micro_currency_isValid;
}

QString OAIOptimizationGoalMetadata_scrollup_goal_metadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOptimizationGoalMetadata_scrollup_goal_metadata::asJsonObject() const {
    QJsonObject obj;
    if (m_scrollup_goal_value_in_micro_currency_isSet) {
        obj.insert(QString("scrollup_goal_value_in_micro_currency"), ::OpenAPI::toJsonValue(m_scrollup_goal_value_in_micro_currency));
    }
    return obj;
}

QString OAIOptimizationGoalMetadata_scrollup_goal_metadata::getScrollupGoalValueInMicroCurrency() const {
    return m_scrollup_goal_value_in_micro_currency;
}
void OAIOptimizationGoalMetadata_scrollup_goal_metadata::setScrollupGoalValueInMicroCurrency(const QString &scrollup_goal_value_in_micro_currency) {
    m_scrollup_goal_value_in_micro_currency = scrollup_goal_value_in_micro_currency;
    m_scrollup_goal_value_in_micro_currency_isSet = true;
}

bool OAIOptimizationGoalMetadata_scrollup_goal_metadata::is_scrollup_goal_value_in_micro_currency_Set() const{
    return m_scrollup_goal_value_in_micro_currency_isSet;
}

bool OAIOptimizationGoalMetadata_scrollup_goal_metadata::is_scrollup_goal_value_in_micro_currency_Valid() const{
    return m_scrollup_goal_value_in_micro_currency_isValid;
}

bool OAIOptimizationGoalMetadata_scrollup_goal_metadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scrollup_goal_value_in_micro_currency_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOptimizationGoalMetadata_scrollup_goal_metadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
