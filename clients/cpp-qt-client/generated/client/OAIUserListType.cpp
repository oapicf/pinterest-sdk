/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserListType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserListType::OAIUserListType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserListType::OAIUserListType() {
    this->initializeModel();
}

OAIUserListType::~OAIUserListType() {}

void OAIUserListType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUserListType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUserListType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EMAIL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserListType::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IDFA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserListType::IDFA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserListType::MAID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LR_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserListType::LR_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DLX_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserListType::DLX_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HASHED_PINNER_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserListType::HASHED_PINNER_ID;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUserListType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUserListType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUserListType::EMAIL:
            val = "EMAIL";
            break;
        case eOAIUserListType::IDFA:
            val = "IDFA";
            break;
        case eOAIUserListType::MAID:
            val = "MAID";
            break;
        case eOAIUserListType::LR_ID:
            val = "LR_ID";
            break;
        case eOAIUserListType::DLX_ID:
            val = "DLX_ID";
            break;
        case eOAIUserListType::HASHED_PINNER_ID:
            val = "HASHED_PINNER_ID";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUserListType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUserListType::eOAIUserListType OAIUserListType::getValue() const {
    return m_value;
}

void OAIUserListType::setValue(const OAIUserListType::eOAIUserListType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUserListType::isSet() const {
    
    return m_value_isSet;
}

bool OAIUserListType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
