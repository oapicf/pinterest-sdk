/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeywordsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeywordsResponse::OAIKeywordsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeywordsResponse::OAIKeywordsResponse() {
    this->initializeModel();
}

OAIKeywordsResponse::~OAIKeywordsResponse() {}

void OAIKeywordsResponse::initializeModel() {

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_keywords_isSet = false;
    m_keywords_isValid = false;
}

void OAIKeywordsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeywordsResponse::fromJsonObject(QJsonObject json) {

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_keywords_isValid = ::OpenAPI::fromJsonValue(m_keywords, json[QString("keywords")]);
    m_keywords_isSet = !json[QString("keywords")].isNull() && m_keywords_isValid;
}

QString OAIKeywordsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeywordsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_keywords.size() > 0) {
        obj.insert(QString("keywords"), ::OpenAPI::toJsonValue(m_keywords));
    }
    return obj;
}

QList<OAIKeywordError> OAIKeywordsResponse::getErrors() const {
    return m_errors;
}
void OAIKeywordsResponse::setErrors(const QList<OAIKeywordError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIKeywordsResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIKeywordsResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

QList<OAIKeyword> OAIKeywordsResponse::getKeywords() const {
    return m_keywords;
}
void OAIKeywordsResponse::setKeywords(const QList<OAIKeyword> &keywords) {
    m_keywords = keywords;
    m_keywords_isSet = true;
}

bool OAIKeywordsResponse::is_keywords_Set() const{
    return m_keywords_isSet;
}

bool OAIKeywordsResponse::is_keywords_Valid() const{
    return m_keywords_isValid;
}

bool OAIKeywordsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_keywords.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeywordsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
