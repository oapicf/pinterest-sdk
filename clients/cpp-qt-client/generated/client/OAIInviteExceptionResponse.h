/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInviteExceptionResponse.h
 *
 * An exception object if there is an error performing the action. Will only be provided if there is an error.
 */

#ifndef OAIInviteExceptionResponse_H
#define OAIInviteExceptionResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInviteExceptionResponse : public OAIObject {
public:
    OAIInviteExceptionResponse();
    OAIInviteExceptionResponse(QString json);
    ~OAIInviteExceptionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInviteOrRequestId() const;
    void setInviteOrRequestId(const QString &invite_or_request_id);
    bool is_invite_or_request_id_Set() const;
    bool is_invite_or_request_id_Valid() const;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<QString> getUsersOrPartnerIds() const;
    void setUsersOrPartnerIds(const QList<QString> &users_or_partner_ids);
    bool is_users_or_partner_ids_Set() const;
    bool is_users_or_partner_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_invite_or_request_id;
    bool m_invite_or_request_id_isSet;
    bool m_invite_or_request_id_isValid;

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<QString> m_users_or_partner_ids;
    bool m_users_or_partner_ids_isSet;
    bool m_users_or_partner_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInviteExceptionResponse)

#endif // OAIInviteExceptionResponse_H
