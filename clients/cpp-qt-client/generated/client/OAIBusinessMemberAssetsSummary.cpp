/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBusinessMemberAssetsSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBusinessMemberAssetsSummary::OAIBusinessMemberAssetsSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBusinessMemberAssetsSummary::OAIBusinessMemberAssetsSummary() {
    this->initializeModel();
}

OAIBusinessMemberAssetsSummary::~OAIBusinessMemberAssetsSummary() {}

void OAIBusinessMemberAssetsSummary::initializeModel() {

    m_ad_accounts_isSet = false;
    m_ad_accounts_isValid = false;

    m_profiles_isSet = false;
    m_profiles_isValid = false;
}

void OAIBusinessMemberAssetsSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBusinessMemberAssetsSummary::fromJsonObject(QJsonObject json) {

    m_ad_accounts_isValid = ::OpenAPI::fromJsonValue(m_ad_accounts, json[QString("ad_accounts")]);
    m_ad_accounts_isSet = !json[QString("ad_accounts")].isNull() && m_ad_accounts_isValid;

    m_profiles_isValid = ::OpenAPI::fromJsonValue(m_profiles, json[QString("profiles")]);
    m_profiles_isSet = !json[QString("profiles")].isNull() && m_profiles_isValid;
}

QString OAIBusinessMemberAssetsSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBusinessMemberAssetsSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_accounts.size() > 0) {
        obj.insert(QString("ad_accounts"), ::OpenAPI::toJsonValue(m_ad_accounts));
    }
    if (m_profiles.size() > 0) {
        obj.insert(QString("profiles"), ::OpenAPI::toJsonValue(m_profiles));
    }
    return obj;
}

QList<OAIBusinessMemberAssetsSummary_ad_accounts_inner> OAIBusinessMemberAssetsSummary::getAdAccounts() const {
    return m_ad_accounts;
}
void OAIBusinessMemberAssetsSummary::setAdAccounts(const QList<OAIBusinessMemberAssetsSummary_ad_accounts_inner> &ad_accounts) {
    m_ad_accounts = ad_accounts;
    m_ad_accounts_isSet = true;
}

bool OAIBusinessMemberAssetsSummary::is_ad_accounts_Set() const{
    return m_ad_accounts_isSet;
}

bool OAIBusinessMemberAssetsSummary::is_ad_accounts_Valid() const{
    return m_ad_accounts_isValid;
}

QList<OAIBusinessMemberAssetsSummary_profiles_inner> OAIBusinessMemberAssetsSummary::getProfiles() const {
    return m_profiles;
}
void OAIBusinessMemberAssetsSummary::setProfiles(const QList<OAIBusinessMemberAssetsSummary_profiles_inner> &profiles) {
    m_profiles = profiles;
    m_profiles_isSet = true;
}

bool OAIBusinessMemberAssetsSummary::is_profiles_Set() const{
    return m_profiles_isSet;
}

bool OAIBusinessMemberAssetsSummary::is_profiles_Valid() const{
    return m_profiles_isValid;
}

bool OAIBusinessMemberAssetsSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_profiles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBusinessMemberAssetsSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
