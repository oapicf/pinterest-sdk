/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISSIOAccountResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISSIOAccountResponse::OAISSIOAccountResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISSIOAccountResponse::OAISSIOAccountResponse() {
    this->initializeModel();
}

OAISSIOAccountResponse::~OAISSIOAccountResponse() {}

void OAISSIOAccountResponse::initializeModel() {

    m_eligible_isSet = false;
    m_eligible_isValid = false;

    m_can_edit_isSet = false;
    m_can_edit_isValid = false;

    m_billto_infos_isSet = false;
    m_billto_infos_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_pmp_names_isSet = false;
    m_pmp_names_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;
}

void OAISSIOAccountResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISSIOAccountResponse::fromJsonObject(QJsonObject json) {

    m_eligible_isValid = ::OpenAPI::fromJsonValue(m_eligible, json[QString("eligible")]);
    m_eligible_isSet = !json[QString("eligible")].isNull() && m_eligible_isValid;

    m_can_edit_isValid = ::OpenAPI::fromJsonValue(m_can_edit, json[QString("can_edit")]);
    m_can_edit_isSet = !json[QString("can_edit")].isNull() && m_can_edit_isValid;

    m_billto_infos_isValid = ::OpenAPI::fromJsonValue(m_billto_infos, json[QString("billto_infos")]);
    m_billto_infos_isSet = !json[QString("billto_infos")].isNull() && m_billto_infos_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_pmp_names_isValid = ::OpenAPI::fromJsonValue(m_pmp_names, json[QString("pmp_names")]);
    m_pmp_names_isSet = !json[QString("pmp_names")].isNull() && m_pmp_names_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;
}

QString OAISSIOAccountResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISSIOAccountResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_eligible_isSet) {
        obj.insert(QString("eligible"), ::OpenAPI::toJsonValue(m_eligible));
    }
    if (m_can_edit_isSet) {
        obj.insert(QString("can_edit"), ::OpenAPI::toJsonValue(m_can_edit));
    }
    if (m_billto_infos.size() > 0) {
        obj.insert(QString("billto_infos"), ::OpenAPI::toJsonValue(m_billto_infos));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_pmp_names.size() > 0) {
        obj.insert(QString("pmp_names"), ::OpenAPI::toJsonValue(m_pmp_names));
    }
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    return obj;
}

bool OAISSIOAccountResponse::isEligible() const {
    return m_eligible;
}
void OAISSIOAccountResponse::setEligible(const bool &eligible) {
    m_eligible = eligible;
    m_eligible_isSet = true;
}

bool OAISSIOAccountResponse::is_eligible_Set() const{
    return m_eligible_isSet;
}

bool OAISSIOAccountResponse::is_eligible_Valid() const{
    return m_eligible_isValid;
}

bool OAISSIOAccountResponse::isCanEdit() const {
    return m_can_edit;
}
void OAISSIOAccountResponse::setCanEdit(const bool &can_edit) {
    m_can_edit = can_edit;
    m_can_edit_isSet = true;
}

bool OAISSIOAccountResponse::is_can_edit_Set() const{
    return m_can_edit_isSet;
}

bool OAISSIOAccountResponse::is_can_edit_Valid() const{
    return m_can_edit_isValid;
}

QList<OAISSIOAccountItem> OAISSIOAccountResponse::getBilltoInfos() const {
    return m_billto_infos;
}
void OAISSIOAccountResponse::setBilltoInfos(const QList<OAISSIOAccountItem> &billto_infos) {
    m_billto_infos = billto_infos;
    m_billto_infos_isSet = true;
}

bool OAISSIOAccountResponse::is_billto_infos_Set() const{
    return m_billto_infos_isSet;
}

bool OAISSIOAccountResponse::is_billto_infos_Valid() const{
    return m_billto_infos_isValid;
}

QString OAISSIOAccountResponse::getCurrency() const {
    return m_currency;
}
void OAISSIOAccountResponse::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAISSIOAccountResponse::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAISSIOAccountResponse::is_currency_Valid() const{
    return m_currency_isValid;
}

QList<OAISSIOAccountPMPName> OAISSIOAccountResponse::getPmpNames() const {
    return m_pmp_names;
}
void OAISSIOAccountResponse::setPmpNames(const QList<OAISSIOAccountPMPName> &pmp_names) {
    m_pmp_names = pmp_names;
    m_pmp_names_isSet = true;
}

bool OAISSIOAccountResponse::is_pmp_names_Set() const{
    return m_pmp_names_isSet;
}

bool OAISSIOAccountResponse::is_pmp_names_Valid() const{
    return m_pmp_names_isValid;
}

QString OAISSIOAccountResponse::getError() const {
    return m_error;
}
void OAISSIOAccountResponse::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAISSIOAccountResponse::is_error_Set() const{
    return m_error_isSet;
}

bool OAISSIOAccountResponse::is_error_Valid() const{
    return m_error_isValid;
}

bool OAISSIOAccountResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_eligible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_edit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billto_infos.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pmp_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISSIOAccountResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
