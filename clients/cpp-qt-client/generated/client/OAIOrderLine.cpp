/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderLine.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderLine::OAIOrderLine(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderLine::OAIOrderLine() {
    this->initializeModel();
}

OAIOrderLine::~OAIOrderLine() {}

void OAIOrderLine::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_ad_account_id_isSet = false;
    m_ad_account_id_isValid = false;

    m_purchase_order_id_isSet = false;
    m_purchase_order_id_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_budget_isSet = false;
    m_budget_isValid = false;

    m_paid_budget_isSet = false;
    m_paid_budget_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_paid_type_isSet = false;
    m_paid_type_isValid = false;

    m_campaign_ids_isSet = false;
    m_campaign_ids_isValid = false;
}

void OAIOrderLine::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderLine::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_ad_account_id_isValid = ::OpenAPI::fromJsonValue(m_ad_account_id, json[QString("ad_account_id")]);
    m_ad_account_id_isSet = !json[QString("ad_account_id")].isNull() && m_ad_account_id_isValid;

    m_purchase_order_id_isValid = ::OpenAPI::fromJsonValue(m_purchase_order_id, json[QString("purchase_order_id")]);
    m_purchase_order_id_isSet = !json[QString("purchase_order_id")].isNull() && m_purchase_order_id_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("start_time")]);
    m_start_time_isSet = !json[QString("start_time")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("end_time")]);
    m_end_time_isSet = !json[QString("end_time")].isNull() && m_end_time_isValid;

    m_budget_isValid = ::OpenAPI::fromJsonValue(m_budget, json[QString("budget")]);
    m_budget_isSet = !json[QString("budget")].isNull() && m_budget_isValid;

    m_paid_budget_isValid = ::OpenAPI::fromJsonValue(m_paid_budget, json[QString("paid_budget")]);
    m_paid_budget_isSet = !json[QString("paid_budget")].isNull() && m_paid_budget_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_paid_type_isValid = ::OpenAPI::fromJsonValue(m_paid_type, json[QString("paid_type")]);
    m_paid_type_isSet = !json[QString("paid_type")].isNull() && m_paid_type_isValid;

    m_campaign_ids_isValid = ::OpenAPI::fromJsonValue(m_campaign_ids, json[QString("campaign_ids")]);
    m_campaign_ids_isSet = !json[QString("campaign_ids")].isNull() && m_campaign_ids_isValid;
}

QString OAIOrderLine::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderLine::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_ad_account_id_isSet) {
        obj.insert(QString("ad_account_id"), ::OpenAPI::toJsonValue(m_ad_account_id));
    }
    if (m_purchase_order_id_isSet) {
        obj.insert(QString("purchase_order_id"), ::OpenAPI::toJsonValue(m_purchase_order_id));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("start_time"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("end_time"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_budget_isSet) {
        obj.insert(QString("budget"), ::OpenAPI::toJsonValue(m_budget));
    }
    if (m_paid_budget_isSet) {
        obj.insert(QString("paid_budget"), ::OpenAPI::toJsonValue(m_paid_budget));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_paid_type.isSet()) {
        obj.insert(QString("paid_type"), ::OpenAPI::toJsonValue(m_paid_type));
    }
    if (m_campaign_ids.size() > 0) {
        obj.insert(QString("campaign_ids"), ::OpenAPI::toJsonValue(m_campaign_ids));
    }
    return obj;
}

QString OAIOrderLine::getId() const {
    return m_id;
}
void OAIOrderLine::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderLine::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderLine::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrderLine::getType() const {
    return m_type;
}
void OAIOrderLine::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIOrderLine::is_type_Set() const{
    return m_type_isSet;
}

bool OAIOrderLine::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIOrderLine::getAdAccountId() const {
    return m_ad_account_id;
}
void OAIOrderLine::setAdAccountId(const QString &ad_account_id) {
    m_ad_account_id = ad_account_id;
    m_ad_account_id_isSet = true;
}

bool OAIOrderLine::is_ad_account_id_Set() const{
    return m_ad_account_id_isSet;
}

bool OAIOrderLine::is_ad_account_id_Valid() const{
    return m_ad_account_id_isValid;
}

QString OAIOrderLine::getPurchaseOrderId() const {
    return m_purchase_order_id;
}
void OAIOrderLine::setPurchaseOrderId(const QString &purchase_order_id) {
    m_purchase_order_id = purchase_order_id;
    m_purchase_order_id_isSet = true;
}

bool OAIOrderLine::is_purchase_order_id_Set() const{
    return m_purchase_order_id_isSet;
}

bool OAIOrderLine::is_purchase_order_id_Valid() const{
    return m_purchase_order_id_isValid;
}

double OAIOrderLine::getStartTime() const {
    return m_start_time;
}
void OAIOrderLine::setStartTime(const double &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIOrderLine::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIOrderLine::is_start_time_Valid() const{
    return m_start_time_isValid;
}

double OAIOrderLine::getEndTime() const {
    return m_end_time;
}
void OAIOrderLine::setEndTime(const double &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIOrderLine::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIOrderLine::is_end_time_Valid() const{
    return m_end_time_isValid;
}

double OAIOrderLine::getBudget() const {
    return m_budget;
}
void OAIOrderLine::setBudget(const double &budget) {
    m_budget = budget;
    m_budget_isSet = true;
}

bool OAIOrderLine::is_budget_Set() const{
    return m_budget_isSet;
}

bool OAIOrderLine::is_budget_Valid() const{
    return m_budget_isValid;
}

double OAIOrderLine::getPaidBudget() const {
    return m_paid_budget;
}
void OAIOrderLine::setPaidBudget(const double &paid_budget) {
    m_paid_budget = paid_budget;
    m_paid_budget_isSet = true;
}

bool OAIOrderLine::is_paid_budget_Set() const{
    return m_paid_budget_isSet;
}

bool OAIOrderLine::is_paid_budget_Valid() const{
    return m_paid_budget_isValid;
}

OAIOrderLineStatus OAIOrderLine::getStatus() const {
    return m_status;
}
void OAIOrderLine::setStatus(const OAIOrderLineStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderLine::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderLine::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIOrderLine::getName() const {
    return m_name;
}
void OAIOrderLine::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOrderLine::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrderLine::is_name_Valid() const{
    return m_name_isValid;
}

OAIOrderLinePaidType OAIOrderLine::getPaidType() const {
    return m_paid_type;
}
void OAIOrderLine::setPaidType(const OAIOrderLinePaidType &paid_type) {
    m_paid_type = paid_type;
    m_paid_type_isSet = true;
}

bool OAIOrderLine::is_paid_type_Set() const{
    return m_paid_type_isSet;
}

bool OAIOrderLine::is_paid_type_Valid() const{
    return m_paid_type_isValid;
}

QList<QString> OAIOrderLine::getCampaignIds() const {
    return m_campaign_ids;
}
void OAIOrderLine::setCampaignIds(const QList<QString> &campaign_ids) {
    m_campaign_ids = campaign_ids;
    m_campaign_ids_isSet = true;
}

bool OAIOrderLine::is_campaign_ids_Set() const{
    return m_campaign_ids_isSet;
}

bool OAIOrderLine::is_campaign_ids_Valid() const{
    return m_campaign_ids_isValid;
}

bool OAIOrderLine::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ad_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paid_budget_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paid_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_campaign_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderLine::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_campaign_ids_isValid && true;
}

} // namespace OpenAPI
