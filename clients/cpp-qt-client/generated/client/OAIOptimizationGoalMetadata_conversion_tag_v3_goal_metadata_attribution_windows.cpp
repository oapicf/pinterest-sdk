/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows() {
    this->initializeModel();
}

OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::~OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows() {}

void OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::initializeModel() {

    m_click_window_days_isSet = false;
    m_click_window_days_isValid = false;

    m_engagement_window_days_isSet = false;
    m_engagement_window_days_isValid = false;

    m_view_window_days_isSet = false;
    m_view_window_days_isValid = false;
}

void OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::fromJsonObject(QJsonObject json) {

    m_click_window_days_isValid = ::OpenAPI::fromJsonValue(m_click_window_days, json[QString("click_window_days")]);
    m_click_window_days_isSet = !json[QString("click_window_days")].isNull() && m_click_window_days_isValid;

    m_engagement_window_days_isValid = ::OpenAPI::fromJsonValue(m_engagement_window_days, json[QString("engagement_window_days")]);
    m_engagement_window_days_isSet = !json[QString("engagement_window_days")].isNull() && m_engagement_window_days_isValid;

    m_view_window_days_isValid = ::OpenAPI::fromJsonValue(m_view_window_days, json[QString("view_window_days")]);
    m_view_window_days_isSet = !json[QString("view_window_days")].isNull() && m_view_window_days_isValid;
}

QString OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::asJsonObject() const {
    QJsonObject obj;
    if (m_click_window_days_isSet) {
        obj.insert(QString("click_window_days"), ::OpenAPI::toJsonValue(m_click_window_days));
    }
    if (m_engagement_window_days_isSet) {
        obj.insert(QString("engagement_window_days"), ::OpenAPI::toJsonValue(m_engagement_window_days));
    }
    if (m_view_window_days_isSet) {
        obj.insert(QString("view_window_days"), ::OpenAPI::toJsonValue(m_view_window_days));
    }
    return obj;
}

qint32 OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::getClickWindowDays() const {
    return m_click_window_days;
}
void OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::setClickWindowDays(const qint32 &click_window_days) {
    m_click_window_days = click_window_days;
    m_click_window_days_isSet = true;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::is_click_window_days_Set() const{
    return m_click_window_days_isSet;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::is_click_window_days_Valid() const{
    return m_click_window_days_isValid;
}

qint32 OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::getEngagementWindowDays() const {
    return m_engagement_window_days;
}
void OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::setEngagementWindowDays(const qint32 &engagement_window_days) {
    m_engagement_window_days = engagement_window_days;
    m_engagement_window_days_isSet = true;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::is_engagement_window_days_Set() const{
    return m_engagement_window_days_isSet;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::is_engagement_window_days_Valid() const{
    return m_engagement_window_days_isValid;
}

qint32 OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::getViewWindowDays() const {
    return m_view_window_days;
}
void OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::setViewWindowDays(const qint32 &view_window_days) {
    m_view_window_days = view_window_days;
    m_view_window_days_isSet = true;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::is_view_window_days_Set() const{
    return m_view_window_days_isSet;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::is_view_window_days_Valid() const{
    return m_view_window_days_isValid;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_click_window_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_engagement_window_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_window_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
