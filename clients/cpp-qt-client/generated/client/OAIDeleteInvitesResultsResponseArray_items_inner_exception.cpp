/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteInvitesResultsResponseArray_items_inner_exception.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteInvitesResultsResponseArray_items_inner_exception::OAIDeleteInvitesResultsResponseArray_items_inner_exception(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteInvitesResultsResponseArray_items_inner_exception::OAIDeleteInvitesResultsResponseArray_items_inner_exception() {
    this->initializeModel();
}

OAIDeleteInvitesResultsResponseArray_items_inner_exception::~OAIDeleteInvitesResultsResponseArray_items_inner_exception() {}

void OAIDeleteInvitesResultsResponseArray_items_inner_exception::initializeModel() {

    m_invite_id_isSet = false;
    m_invite_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIDeleteInvitesResultsResponseArray_items_inner_exception::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteInvitesResultsResponseArray_items_inner_exception::fromJsonObject(QJsonObject json) {

    m_invite_id_isValid = ::OpenAPI::fromJsonValue(m_invite_id, json[QString("invite_id")]);
    m_invite_id_isSet = !json[QString("invite_id")].isNull() && m_invite_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIDeleteInvitesResultsResponseArray_items_inner_exception::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteInvitesResultsResponseArray_items_inner_exception::asJsonObject() const {
    QJsonObject obj;
    if (m_invite_id_isSet) {
        obj.insert(QString("invite_id"), ::OpenAPI::toJsonValue(m_invite_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAIDeleteInvitesResultsResponseArray_items_inner_exception::getInviteId() const {
    return m_invite_id;
}
void OAIDeleteInvitesResultsResponseArray_items_inner_exception::setInviteId(const QString &invite_id) {
    m_invite_id = invite_id;
    m_invite_id_isSet = true;
}

bool OAIDeleteInvitesResultsResponseArray_items_inner_exception::is_invite_id_Set() const{
    return m_invite_id_isSet;
}

bool OAIDeleteInvitesResultsResponseArray_items_inner_exception::is_invite_id_Valid() const{
    return m_invite_id_isValid;
}

QString OAIDeleteInvitesResultsResponseArray_items_inner_exception::getMessage() const {
    return m_message;
}
void OAIDeleteInvitesResultsResponseArray_items_inner_exception::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIDeleteInvitesResultsResponseArray_items_inner_exception::is_message_Set() const{
    return m_message_isSet;
}

bool OAIDeleteInvitesResultsResponseArray_items_inner_exception::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIDeleteInvitesResultsResponseArray_items_inner_exception::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invite_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteInvitesResultsResponseArray_items_inner_exception::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
