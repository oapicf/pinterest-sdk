/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeadFormResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeadFormResponse::OAILeadFormResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeadFormResponse::OAILeadFormResponse() {
    this->initializeModel();
}

OAILeadFormResponse::~OAILeadFormResponse() {}

void OAILeadFormResponse::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_privacy_policy_link_isSet = false;
    m_privacy_policy_link_isValid = false;

    m_has_accepted_terms_isSet = false;
    m_has_accepted_terms_isValid = false;

    m_completion_message_isSet = false;
    m_completion_message_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_disclosure_language_isSet = false;
    m_disclosure_language_isValid = false;

    m_questions_isSet = false;
    m_questions_isValid = false;

    m_policy_links_isSet = false;
    m_policy_links_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_ad_account_id_isSet = false;
    m_ad_account_id_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_updated_time_isSet = false;
    m_updated_time_isValid = false;
}

void OAILeadFormResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeadFormResponse::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_privacy_policy_link_isValid = ::OpenAPI::fromJsonValue(m_privacy_policy_link, json[QString("privacy_policy_link")]);
    m_privacy_policy_link_isSet = !json[QString("privacy_policy_link")].isNull() && m_privacy_policy_link_isValid;

    m_has_accepted_terms_isValid = ::OpenAPI::fromJsonValue(m_has_accepted_terms, json[QString("has_accepted_terms")]);
    m_has_accepted_terms_isSet = !json[QString("has_accepted_terms")].isNull() && m_has_accepted_terms_isValid;

    m_completion_message_isValid = ::OpenAPI::fromJsonValue(m_completion_message, json[QString("completion_message")]);
    m_completion_message_isSet = !json[QString("completion_message")].isNull() && m_completion_message_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_disclosure_language_isValid = ::OpenAPI::fromJsonValue(m_disclosure_language, json[QString("disclosure_language")]);
    m_disclosure_language_isSet = !json[QString("disclosure_language")].isNull() && m_disclosure_language_isValid;

    m_questions_isValid = ::OpenAPI::fromJsonValue(m_questions, json[QString("questions")]);
    m_questions_isSet = !json[QString("questions")].isNull() && m_questions_isValid;

    m_policy_links_isValid = ::OpenAPI::fromJsonValue(m_policy_links, json[QString("policy_links")]);
    m_policy_links_isSet = !json[QString("policy_links")].isNull() && m_policy_links_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_ad_account_id_isValid = ::OpenAPI::fromJsonValue(m_ad_account_id, json[QString("ad_account_id")]);
    m_ad_account_id_isSet = !json[QString("ad_account_id")].isNull() && m_ad_account_id_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_updated_time_isValid = ::OpenAPI::fromJsonValue(m_updated_time, json[QString("updated_time")]);
    m_updated_time_isSet = !json[QString("updated_time")].isNull() && m_updated_time_isValid;
}

QString OAILeadFormResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeadFormResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_privacy_policy_link_isSet) {
        obj.insert(QString("privacy_policy_link"), ::OpenAPI::toJsonValue(m_privacy_policy_link));
    }
    if (m_has_accepted_terms_isSet) {
        obj.insert(QString("has_accepted_terms"), ::OpenAPI::toJsonValue(m_has_accepted_terms));
    }
    if (m_completion_message_isSet) {
        obj.insert(QString("completion_message"), ::OpenAPI::toJsonValue(m_completion_message));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_disclosure_language_isSet) {
        obj.insert(QString("disclosure_language"), ::OpenAPI::toJsonValue(m_disclosure_language));
    }
    if (m_questions.size() > 0) {
        obj.insert(QString("questions"), ::OpenAPI::toJsonValue(m_questions));
    }
    if (m_policy_links.size() > 0) {
        obj.insert(QString("policy_links"), ::OpenAPI::toJsonValue(m_policy_links));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_ad_account_id_isSet) {
        obj.insert(QString("ad_account_id"), ::OpenAPI::toJsonValue(m_ad_account_id));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_updated_time_isSet) {
        obj.insert(QString("updated_time"), ::OpenAPI::toJsonValue(m_updated_time));
    }
    return obj;
}

QString OAILeadFormResponse::getName() const {
    return m_name;
}
void OAILeadFormResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILeadFormResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAILeadFormResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAILeadFormResponse::getPrivacyPolicyLink() const {
    return m_privacy_policy_link;
}
void OAILeadFormResponse::setPrivacyPolicyLink(const QString &privacy_policy_link) {
    m_privacy_policy_link = privacy_policy_link;
    m_privacy_policy_link_isSet = true;
}

bool OAILeadFormResponse::is_privacy_policy_link_Set() const{
    return m_privacy_policy_link_isSet;
}

bool OAILeadFormResponse::is_privacy_policy_link_Valid() const{
    return m_privacy_policy_link_isValid;
}

bool OAILeadFormResponse::isHasAcceptedTerms() const {
    return m_has_accepted_terms;
}
void OAILeadFormResponse::setHasAcceptedTerms(const bool &has_accepted_terms) {
    m_has_accepted_terms = has_accepted_terms;
    m_has_accepted_terms_isSet = true;
}

bool OAILeadFormResponse::is_has_accepted_terms_Set() const{
    return m_has_accepted_terms_isSet;
}

bool OAILeadFormResponse::is_has_accepted_terms_Valid() const{
    return m_has_accepted_terms_isValid;
}

QString OAILeadFormResponse::getCompletionMessage() const {
    return m_completion_message;
}
void OAILeadFormResponse::setCompletionMessage(const QString &completion_message) {
    m_completion_message = completion_message;
    m_completion_message_isSet = true;
}

bool OAILeadFormResponse::is_completion_message_Set() const{
    return m_completion_message_isSet;
}

bool OAILeadFormResponse::is_completion_message_Valid() const{
    return m_completion_message_isValid;
}

OAILeadFormStatus OAILeadFormResponse::getStatus() const {
    return m_status;
}
void OAILeadFormResponse::setStatus(const OAILeadFormStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILeadFormResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAILeadFormResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILeadFormResponse::getDisclosureLanguage() const {
    return m_disclosure_language;
}
void OAILeadFormResponse::setDisclosureLanguage(const QString &disclosure_language) {
    m_disclosure_language = disclosure_language;
    m_disclosure_language_isSet = true;
}

bool OAILeadFormResponse::is_disclosure_language_Set() const{
    return m_disclosure_language_isSet;
}

bool OAILeadFormResponse::is_disclosure_language_Valid() const{
    return m_disclosure_language_isValid;
}

QList<OAILeadFormQuestion> OAILeadFormResponse::getQuestions() const {
    return m_questions;
}
void OAILeadFormResponse::setQuestions(const QList<OAILeadFormQuestion> &questions) {
    m_questions = questions;
    m_questions_isSet = true;
}

bool OAILeadFormResponse::is_questions_Set() const{
    return m_questions_isSet;
}

bool OAILeadFormResponse::is_questions_Valid() const{
    return m_questions_isValid;
}

QList<OAILeadFormCommon_policy_links_inner> OAILeadFormResponse::getPolicyLinks() const {
    return m_policy_links;
}
void OAILeadFormResponse::setPolicyLinks(const QList<OAILeadFormCommon_policy_links_inner> &policy_links) {
    m_policy_links = policy_links;
    m_policy_links_isSet = true;
}

bool OAILeadFormResponse::is_policy_links_Set() const{
    return m_policy_links_isSet;
}

bool OAILeadFormResponse::is_policy_links_Valid() const{
    return m_policy_links_isValid;
}

QString OAILeadFormResponse::getId() const {
    return m_id;
}
void OAILeadFormResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILeadFormResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAILeadFormResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILeadFormResponse::getAdAccountId() const {
    return m_ad_account_id;
}
void OAILeadFormResponse::setAdAccountId(const QString &ad_account_id) {
    m_ad_account_id = ad_account_id;
    m_ad_account_id_isSet = true;
}

bool OAILeadFormResponse::is_ad_account_id_Set() const{
    return m_ad_account_id_isSet;
}

bool OAILeadFormResponse::is_ad_account_id_Valid() const{
    return m_ad_account_id_isValid;
}

qint32 OAILeadFormResponse::getCreatedTime() const {
    return m_created_time;
}
void OAILeadFormResponse::setCreatedTime(const qint32 &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAILeadFormResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAILeadFormResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

qint32 OAILeadFormResponse::getUpdatedTime() const {
    return m_updated_time;
}
void OAILeadFormResponse::setUpdatedTime(const qint32 &updated_time) {
    m_updated_time = updated_time;
    m_updated_time_isSet = true;
}

bool OAILeadFormResponse::is_updated_time_Set() const{
    return m_updated_time_isSet;
}

bool OAILeadFormResponse::is_updated_time_Valid() const{
    return m_updated_time_isValid;
}

bool OAILeadFormResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_privacy_policy_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_accepted_terms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disclosure_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_questions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ad_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeadFormResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
