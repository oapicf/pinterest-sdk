/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITemplateResponse.h
 *
 * Template fields
 */

#ifndef OAITemplateResponse_H
#define OAITemplateResponse_H

#include <QJsonObject>

#include "OAIDataOutputFormat.h"
#include "OAIGranularity.h"
#include "OAIMetricsReportingLevel.h"
#include "OAITemplateResponse_date_range.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITemplateResponse_date_range;

class OAITemplateResponse : public OAIObject {
public:
    OAITemplateResponse();
    OAITemplateResponse(QString json);
    ~OAITemplateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getAdAccountId() const;
    void setAdAccountId(const QString &ad_account_id);
    bool is_ad_account_id_Set() const;
    bool is_ad_account_id_Valid() const;

    QList<QString> getAdAccountIds() const;
    void setAdAccountIds(const QList<QString> &ad_account_ids);
    bool is_ad_account_ids_Set() const;
    bool is_ad_account_ids_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getReportStartRelativeDaysInPast() const;
    void setReportStartRelativeDaysInPast(const double &report_start_relative_days_in_past);
    bool is_report_start_relative_days_in_past_Set() const;
    bool is_report_start_relative_days_in_past_Valid() const;

    double getReportEndRelativeDaysInPast() const;
    void setReportEndRelativeDaysInPast(const double &report_end_relative_days_in_past);
    bool is_report_end_relative_days_in_past_Set() const;
    bool is_report_end_relative_days_in_past_Valid() const;

    OAITemplateResponse_date_range getDateRange() const;
    void setDateRange(const OAITemplateResponse_date_range &date_range);
    bool is_date_range_Set() const;
    bool is_date_range_Valid() const;

    OAIMetricsReportingLevel getReportLevel() const;
    void setReportLevel(const OAIMetricsReportingLevel &report_level);
    bool is_report_level_Set() const;
    bool is_report_level_Valid() const;

    OAIDataOutputFormat getReportFormat() const;
    void setReportFormat(const OAIDataOutputFormat &report_format);
    bool is_report_format_Set() const;
    bool is_report_format_Valid() const;

    QList<QString> getColumns() const;
    void setColumns(const QList<QString> &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    OAIGranularity getGranularity() const;
    void setGranularity(const OAIGranularity &granularity);
    bool is_granularity_Set() const;
    bool is_granularity_Valid() const;

    double getViewWindowDays() const;
    void setViewWindowDays(const double &view_window_days);
    bool is_view_window_days_Set() const;
    bool is_view_window_days_Valid() const;

    double getClickWindowDays() const;
    void setClickWindowDays(const double &click_window_days);
    bool is_click_window_days_Set() const;
    bool is_click_window_days_Valid() const;

    double getEngagementWindowDays() const;
    void setEngagementWindowDays(const double &engagement_window_days);
    bool is_engagement_window_days_Set() const;
    bool is_engagement_window_days_Valid() const;

    QString getConversionReportTimeType() const;
    void setConversionReportTimeType(const QString &conversion_report_time_type);
    bool is_conversion_report_time_type_Set() const;
    bool is_conversion_report_time_type_Valid() const;

    QString getFiltersJson() const;
    void setFiltersJson(const QString &filters_json);
    bool is_filters_json_Set() const;
    bool is_filters_json_Valid() const;

    bool isIsOwnedByUser() const;
    void setIsOwnedByUser(const bool &is_owned_by_user);
    bool is_is_owned_by_user_Set() const;
    bool is_is_owned_by_user_Valid() const;

    bool isIsScheduled() const;
    void setIsScheduled(const bool &is_scheduled);
    bool is_is_scheduled_Set() const;
    bool is_is_scheduled_Valid() const;

    QString getCreationSource() const;
    void setCreationSource(const QString &creation_source);
    bool is_creation_source_Set() const;
    bool is_creation_source_Valid() const;

    bool isIsDeleted() const;
    void setIsDeleted(const bool &is_deleted);
    bool is_is_deleted_Set() const;
    bool is_is_deleted_Valid() const;

    double getUpdatedTime() const;
    void setUpdatedTime(const double &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    QList<QString> getCustomColumnIds() const;
    void setCustomColumnIds(const QList<QString> &custom_column_ids);
    bool is_custom_column_ids_Set() const;
    bool is_custom_column_ids_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QString> getIngestionSources() const;
    void setIngestionSources(const QList<QString> &ingestion_sources);
    bool is_ingestion_sources_Set() const;
    bool is_ingestion_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_ad_account_id;
    bool m_ad_account_id_isSet;
    bool m_ad_account_id_isValid;

    QList<QString> m_ad_account_ids;
    bool m_ad_account_ids_isSet;
    bool m_ad_account_ids_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_report_start_relative_days_in_past;
    bool m_report_start_relative_days_in_past_isSet;
    bool m_report_start_relative_days_in_past_isValid;

    double m_report_end_relative_days_in_past;
    bool m_report_end_relative_days_in_past_isSet;
    bool m_report_end_relative_days_in_past_isValid;

    OAITemplateResponse_date_range m_date_range;
    bool m_date_range_isSet;
    bool m_date_range_isValid;

    OAIMetricsReportingLevel m_report_level;
    bool m_report_level_isSet;
    bool m_report_level_isValid;

    OAIDataOutputFormat m_report_format;
    bool m_report_format_isSet;
    bool m_report_format_isValid;

    QList<QString> m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    OAIGranularity m_granularity;
    bool m_granularity_isSet;
    bool m_granularity_isValid;

    double m_view_window_days;
    bool m_view_window_days_isSet;
    bool m_view_window_days_isValid;

    double m_click_window_days;
    bool m_click_window_days_isSet;
    bool m_click_window_days_isValid;

    double m_engagement_window_days;
    bool m_engagement_window_days_isSet;
    bool m_engagement_window_days_isValid;

    QString m_conversion_report_time_type;
    bool m_conversion_report_time_type_isSet;
    bool m_conversion_report_time_type_isValid;

    QString m_filters_json;
    bool m_filters_json_isSet;
    bool m_filters_json_isValid;

    bool m_is_owned_by_user;
    bool m_is_owned_by_user_isSet;
    bool m_is_owned_by_user_isValid;

    bool m_is_scheduled;
    bool m_is_scheduled_isSet;
    bool m_is_scheduled_isValid;

    QString m_creation_source;
    bool m_creation_source_isSet;
    bool m_creation_source_isValid;

    bool m_is_deleted;
    bool m_is_deleted_isSet;
    bool m_is_deleted_isValid;

    double m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    QList<QString> m_custom_column_ids;
    bool m_custom_column_ids_isSet;
    bool m_custom_column_ids_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QString> m_ingestion_sources;
    bool m_ingestion_sources_isSet;
    bool m_ingestion_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITemplateResponse)

#endif // OAITemplateResponse_H
