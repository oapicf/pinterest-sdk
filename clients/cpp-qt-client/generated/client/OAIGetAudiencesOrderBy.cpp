/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAudiencesOrderBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAudiencesOrderBy::OAIGetAudiencesOrderBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAudiencesOrderBy::OAIGetAudiencesOrderBy() {
    this->initializeModel();
}

OAIGetAudiencesOrderBy::~OAIGetAudiencesOrderBy() {}

void OAIGetAudiencesOrderBy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIGetAudiencesOrderBy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIGetAudiencesOrderBy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SIZE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::SIZE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATION_DATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::CREATION_DATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATED_TIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::UPDATED_TIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STATUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::STATUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TYPE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGetAudiencesOrderBy::TYPE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIGetAudiencesOrderBy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIGetAudiencesOrderBy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIGetAudiencesOrderBy::NONE:
            val = "NONE";
            break;
        case eOAIGetAudiencesOrderBy::ID:
            val = "ID";
            break;
        case eOAIGetAudiencesOrderBy::SIZE:
            val = "SIZE";
            break;
        case eOAIGetAudiencesOrderBy::CREATION_DATE:
            val = "CREATION_DATE";
            break;
        case eOAIGetAudiencesOrderBy::UPDATED_TIME:
            val = "UPDATED_TIME";
            break;
        case eOAIGetAudiencesOrderBy::NAME:
            val = "NAME";
            break;
        case eOAIGetAudiencesOrderBy::STATUS:
            val = "STATUS";
            break;
        case eOAIGetAudiencesOrderBy::TYPE:
            val = "TYPE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIGetAudiencesOrderBy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIGetAudiencesOrderBy::eOAIGetAudiencesOrderBy OAIGetAudiencesOrderBy::getValue() const {
    return m_value;
}

void OAIGetAudiencesOrderBy::setValue(const OAIGetAudiencesOrderBy::eOAIGetAudiencesOrderBy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIGetAudiencesOrderBy::isSet() const {
    
    return m_value_isSet;
}

bool OAIGetAudiencesOrderBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
