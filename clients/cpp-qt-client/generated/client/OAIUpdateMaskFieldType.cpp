/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMaskFieldType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMaskFieldType::OAIUpdateMaskFieldType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMaskFieldType::OAIUpdateMaskFieldType() {
    this->initializeModel();
}

OAIUpdateMaskFieldType::~OAIUpdateMaskFieldType() {}

void OAIUpdateMaskFieldType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUpdateMaskFieldType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUpdateMaskFieldType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ad_link", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::AD_LINK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("adult", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::ADULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("age_group", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::AGE_GROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("availability", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::AVAILABILITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("average_review_rating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::AVERAGE_REVIEW_RATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("brand", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::BRAND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("checkout_enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CHECKOUT_ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("color", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::COLOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("condition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CONDITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("custom_label_0", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CUSTOM_LABEL_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("custom_label_1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CUSTOM_LABEL_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("custom_label_2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CUSTOM_LABEL_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("custom_label_3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CUSTOM_LABEL_3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("custom_label_4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::CUSTOM_LABEL_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("description", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::DESCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("free_shipping_label", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::FREE_SHIPPING_LABEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("free_shipping_limit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::FREE_SHIPPING_LIMIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("gender", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::GENDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("google_product_category", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::GOOGLE_PRODUCT_CATEGORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("gtin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::GTIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("item_group_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::ITEM_GROUP_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("last_updated_time", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::LAST_UPDATED_TIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("link", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::LINK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("material", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::MATERIAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("min_ad_price", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::MIN_AD_PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mpn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::MPN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("number_of_ratings", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::NUMBER_OF_RATINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("number_of_reviews", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::NUMBER_OF_REVIEWS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pattern", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::PATTERN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("price", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("product_type", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::PRODUCT_TYPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sale_price", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SALE_PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shipping", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SHIPPING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shipping_height", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SHIPPING_HEIGHT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shipping_weight", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SHIPPING_WEIGHT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shipping_width", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SHIPPING_WIDTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("size", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SIZE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("size_system", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SIZE_SYSTEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("size_type", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::SIZE_TYPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tax", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::TAX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("title", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::TITLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("variant_names", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::VARIANT_NAMES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("variant_values", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUpdateMaskFieldType::VARIANT_VALUES;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUpdateMaskFieldType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUpdateMaskFieldType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUpdateMaskFieldType::AD_LINK:
            val = "ad_link";
            break;
        case eOAIUpdateMaskFieldType::ADULT:
            val = "adult";
            break;
        case eOAIUpdateMaskFieldType::AGE_GROUP:
            val = "age_group";
            break;
        case eOAIUpdateMaskFieldType::AVAILABILITY:
            val = "availability";
            break;
        case eOAIUpdateMaskFieldType::AVERAGE_REVIEW_RATING:
            val = "average_review_rating";
            break;
        case eOAIUpdateMaskFieldType::BRAND:
            val = "brand";
            break;
        case eOAIUpdateMaskFieldType::CHECKOUT_ENABLED:
            val = "checkout_enabled";
            break;
        case eOAIUpdateMaskFieldType::COLOR:
            val = "color";
            break;
        case eOAIUpdateMaskFieldType::CONDITION:
            val = "condition";
            break;
        case eOAIUpdateMaskFieldType::CUSTOM_LABEL_0:
            val = "custom_label_0";
            break;
        case eOAIUpdateMaskFieldType::CUSTOM_LABEL_1:
            val = "custom_label_1";
            break;
        case eOAIUpdateMaskFieldType::CUSTOM_LABEL_2:
            val = "custom_label_2";
            break;
        case eOAIUpdateMaskFieldType::CUSTOM_LABEL_3:
            val = "custom_label_3";
            break;
        case eOAIUpdateMaskFieldType::CUSTOM_LABEL_4:
            val = "custom_label_4";
            break;
        case eOAIUpdateMaskFieldType::DESCRIPTION:
            val = "description";
            break;
        case eOAIUpdateMaskFieldType::FREE_SHIPPING_LABEL:
            val = "free_shipping_label";
            break;
        case eOAIUpdateMaskFieldType::FREE_SHIPPING_LIMIT:
            val = "free_shipping_limit";
            break;
        case eOAIUpdateMaskFieldType::GENDER:
            val = "gender";
            break;
        case eOAIUpdateMaskFieldType::GOOGLE_PRODUCT_CATEGORY:
            val = "google_product_category";
            break;
        case eOAIUpdateMaskFieldType::GTIN:
            val = "gtin";
            break;
        case eOAIUpdateMaskFieldType::ITEM_GROUP_ID:
            val = "item_group_id";
            break;
        case eOAIUpdateMaskFieldType::LAST_UPDATED_TIME:
            val = "last_updated_time";
            break;
        case eOAIUpdateMaskFieldType::LINK:
            val = "link";
            break;
        case eOAIUpdateMaskFieldType::MATERIAL:
            val = "material";
            break;
        case eOAIUpdateMaskFieldType::MIN_AD_PRICE:
            val = "min_ad_price";
            break;
        case eOAIUpdateMaskFieldType::MPN:
            val = "mpn";
            break;
        case eOAIUpdateMaskFieldType::NUMBER_OF_RATINGS:
            val = "number_of_ratings";
            break;
        case eOAIUpdateMaskFieldType::NUMBER_OF_REVIEWS:
            val = "number_of_reviews";
            break;
        case eOAIUpdateMaskFieldType::PATTERN:
            val = "pattern";
            break;
        case eOAIUpdateMaskFieldType::PRICE:
            val = "price";
            break;
        case eOAIUpdateMaskFieldType::PRODUCT_TYPE:
            val = "product_type";
            break;
        case eOAIUpdateMaskFieldType::SALE_PRICE:
            val = "sale_price";
            break;
        case eOAIUpdateMaskFieldType::SHIPPING:
            val = "shipping";
            break;
        case eOAIUpdateMaskFieldType::SHIPPING_HEIGHT:
            val = "shipping_height";
            break;
        case eOAIUpdateMaskFieldType::SHIPPING_WEIGHT:
            val = "shipping_weight";
            break;
        case eOAIUpdateMaskFieldType::SHIPPING_WIDTH:
            val = "shipping_width";
            break;
        case eOAIUpdateMaskFieldType::SIZE:
            val = "size";
            break;
        case eOAIUpdateMaskFieldType::SIZE_SYSTEM:
            val = "size_system";
            break;
        case eOAIUpdateMaskFieldType::SIZE_TYPE:
            val = "size_type";
            break;
        case eOAIUpdateMaskFieldType::TAX:
            val = "tax";
            break;
        case eOAIUpdateMaskFieldType::TITLE:
            val = "title";
            break;
        case eOAIUpdateMaskFieldType::VARIANT_NAMES:
            val = "variant_names";
            break;
        case eOAIUpdateMaskFieldType::VARIANT_VALUES:
            val = "variant_values";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUpdateMaskFieldType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUpdateMaskFieldType::eOAIUpdateMaskFieldType OAIUpdateMaskFieldType::getValue() const {
    return m_value;
}

void OAIUpdateMaskFieldType::setValue(const OAIUpdateMaskFieldType::eOAIUpdateMaskFieldType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUpdateMaskFieldType::isSet() const {
    
    return m_value_isSet;
}

bool OAIUpdateMaskFieldType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
