/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAvailabilityFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAvailabilityFilter::OAIAvailabilityFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAvailabilityFilter::OAIAvailabilityFilter() {
    this->initializeModel();
}

OAIAvailabilityFilter::~OAIAvailabilityFilter() {}

void OAIAvailabilityFilter::initializeModel() {

    m_availability_isSet = false;
    m_availability_isValid = false;
}

void OAIAvailabilityFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAvailabilityFilter::fromJsonObject(QJsonObject json) {

    m_availability_isValid = ::OpenAPI::fromJsonValue(m_availability, json[QString("AVAILABILITY")]);
    m_availability_isSet = !json[QString("AVAILABILITY")].isNull() && m_availability_isValid;
}

QString OAIAvailabilityFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAvailabilityFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_availability_isSet) {
        obj.insert(QString("AVAILABILITY"), ::OpenAPI::toJsonValue(m_availability));
    }
    return obj;
}

OAICatalogsProductGroupMultipleStringCriteria OAIAvailabilityFilter::getAvailability() const {
    return m_availability;
}
void OAIAvailabilityFilter::setAvailability(const OAICatalogsProductGroupMultipleStringCriteria &availability) {
    m_availability = availability;
    m_availability_isSet = true;
}

bool OAIAvailabilityFilter::is_availability_Set() const{
    return m_availability_isSet;
}

bool OAIAvailabilityFilter::is_availability_Valid() const{
    return m_availability_isValid;
}

bool OAIAvailabilityFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availability_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAvailabilityFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_availability_isValid && true;
}

} // namespace OpenAPI
