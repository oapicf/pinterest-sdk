/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdAccountCreateSubscriptionRequest.h
 *
 * 
 */

#ifndef OAIAdAccountCreateSubscriptionRequest_H
#define OAIAdAccountCreateSubscriptionRequest_H

#include <QJsonObject>

#include "OAIAdAccountCreateSubscriptionRequest_partner_metadata.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdAccountCreateSubscriptionRequest_partner_metadata;

class OAIAdAccountCreateSubscriptionRequest : public OAIObject {
public:
    OAIAdAccountCreateSubscriptionRequest();
    OAIAdAccountCreateSubscriptionRequest(QString json);
    ~OAIAdAccountCreateSubscriptionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWebhookUrl() const;
    void setWebhookUrl(const QString &webhook_url);
    bool is_webhook_url_Set() const;
    bool is_webhook_url_Valid() const;

    QString getLeadFormId() const;
    void setLeadFormId(const QString &lead_form_id);
    bool is_lead_form_id_Set() const;
    bool is_lead_form_id_Valid() const;

    QString getPartnerAccessToken() const;
    void setPartnerAccessToken(const QString &partner_access_token);
    bool is_partner_access_token_Set() const;
    bool is_partner_access_token_Valid() const;

    QString getPartnerRefreshToken() const;
    void setPartnerRefreshToken(const QString &partner_refresh_token);
    bool is_partner_refresh_token_Set() const;
    bool is_partner_refresh_token_Valid() const;

    OAIAdAccountCreateSubscriptionRequest_partner_metadata getPartnerMetadata() const;
    void setPartnerMetadata(const OAIAdAccountCreateSubscriptionRequest_partner_metadata &partner_metadata);
    bool is_partner_metadata_Set() const;
    bool is_partner_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_webhook_url;
    bool m_webhook_url_isSet;
    bool m_webhook_url_isValid;

    QString m_lead_form_id;
    bool m_lead_form_id_isSet;
    bool m_lead_form_id_isValid;

    QString m_partner_access_token;
    bool m_partner_access_token_isSet;
    bool m_partner_access_token_isValid;

    QString m_partner_refresh_token;
    bool m_partner_refresh_token_isSet;
    bool m_partner_refresh_token_isValid;

    OAIAdAccountCreateSubscriptionRequest_partner_metadata m_partner_metadata;
    bool m_partner_metadata_isSet;
    bool m_partner_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdAccountCreateSubscriptionRequest)

#endif // OAIAdAccountCreateSubscriptionRequest_H
