/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISharedAudience.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISharedAudience::OAISharedAudience(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISharedAudience::OAISharedAudience() {
    this->initializeModel();
}

OAISharedAudience::~OAISharedAudience() {}

void OAISharedAudience::initializeModel() {

    m_audience_id_isSet = false;
    m_audience_id_isValid = false;

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;

    m_recipient_account_ids_isSet = false;
    m_recipient_account_ids_isValid = false;
}

void OAISharedAudience::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISharedAudience::fromJsonObject(QJsonObject json) {

    m_audience_id_isValid = ::OpenAPI::fromJsonValue(m_audience_id, json[QString("audience_id")]);
    m_audience_id_isSet = !json[QString("audience_id")].isNull() && m_audience_id_isValid;

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(m_operation_type, json[QString("operation_type")]);
    m_operation_type_isSet = !json[QString("operation_type")].isNull() && m_operation_type_isValid;

    m_recipient_account_ids_isValid = ::OpenAPI::fromJsonValue(m_recipient_account_ids, json[QString("recipient_account_ids")]);
    m_recipient_account_ids_isSet = !json[QString("recipient_account_ids")].isNull() && m_recipient_account_ids_isValid;
}

QString OAISharedAudience::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISharedAudience::asJsonObject() const {
    QJsonObject obj;
    if (m_audience_id_isSet) {
        obj.insert(QString("audience_id"), ::OpenAPI::toJsonValue(m_audience_id));
    }
    if (m_operation_type.isSet()) {
        obj.insert(QString("operation_type"), ::OpenAPI::toJsonValue(m_operation_type));
    }
    if (m_recipient_account_ids.size() > 0) {
        obj.insert(QString("recipient_account_ids"), ::OpenAPI::toJsonValue(m_recipient_account_ids));
    }
    return obj;
}

QString OAISharedAudience::getAudienceId() const {
    return m_audience_id;
}
void OAISharedAudience::setAudienceId(const QString &audience_id) {
    m_audience_id = audience_id;
    m_audience_id_isSet = true;
}

bool OAISharedAudience::is_audience_id_Set() const{
    return m_audience_id_isSet;
}

bool OAISharedAudience::is_audience_id_Valid() const{
    return m_audience_id_isValid;
}

OAIOperationType OAISharedAudience::getOperationType() const {
    return m_operation_type;
}
void OAISharedAudience::setOperationType(const OAIOperationType &operation_type) {
    m_operation_type = operation_type;
    m_operation_type_isSet = true;
}

bool OAISharedAudience::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAISharedAudience::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

QList<QString> OAISharedAudience::getRecipientAccountIds() const {
    return m_recipient_account_ids;
}
void OAISharedAudience::setRecipientAccountIds(const QList<QString> &recipient_account_ids) {
    m_recipient_account_ids = recipient_account_ids;
    m_recipient_account_ids_isSet = true;
}

bool OAISharedAudience::is_recipient_account_ids_Set() const{
    return m_recipient_account_ids_isSet;
}

bool OAISharedAudience::is_recipient_account_ids_Valid() const{
    return m_recipient_account_ids_isValid;
}

bool OAISharedAudience::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audience_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_account_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISharedAudience::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_audience_id_isValid && m_operation_type_isValid && m_recipient_account_ids_isValid && true;
}

} // namespace OpenAPI
