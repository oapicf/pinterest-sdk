/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricsReportingLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricsReportingLevel::OAIMetricsReportingLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricsReportingLevel::OAIMetricsReportingLevel() {
    this->initializeModel();
}

OAIMetricsReportingLevel::~OAIMetricsReportingLevel() {}

void OAIMetricsReportingLevel::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMetricsReportingLevel::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMetricsReportingLevel::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ADVERTISER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::ADVERTISER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ADVERTISER_TARGETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::ADVERTISER_TARGETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAMPAIGN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::CAMPAIGN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAMPAIGN_TARGETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::CAMPAIGN_TARGETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AD_GROUP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::AD_GROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AD_GROUP_TARGETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::AD_GROUP_TARGETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PIN_PROMOTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::PIN_PROMOTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PIN_PROMOTION_TARGETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::PIN_PROMOTION_TARGETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KEYWORD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::KEYWORD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRODUCT_GROUP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::PRODUCT_GROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRODUCT_GROUP_TARGETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::PRODUCT_GROUP_TARGETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRODUCT_ITEM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::PRODUCT_ITEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRODUCT_ITEM_TARGETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMetricsReportingLevel::PRODUCT_ITEM_TARGETING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMetricsReportingLevel::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMetricsReportingLevel::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMetricsReportingLevel::ADVERTISER:
            val = "ADVERTISER";
            break;
        case eOAIMetricsReportingLevel::ADVERTISER_TARGETING:
            val = "ADVERTISER_TARGETING";
            break;
        case eOAIMetricsReportingLevel::CAMPAIGN:
            val = "CAMPAIGN";
            break;
        case eOAIMetricsReportingLevel::CAMPAIGN_TARGETING:
            val = "CAMPAIGN_TARGETING";
            break;
        case eOAIMetricsReportingLevel::AD_GROUP:
            val = "AD_GROUP";
            break;
        case eOAIMetricsReportingLevel::AD_GROUP_TARGETING:
            val = "AD_GROUP_TARGETING";
            break;
        case eOAIMetricsReportingLevel::PIN_PROMOTION:
            val = "PIN_PROMOTION";
            break;
        case eOAIMetricsReportingLevel::PIN_PROMOTION_TARGETING:
            val = "PIN_PROMOTION_TARGETING";
            break;
        case eOAIMetricsReportingLevel::KEYWORD:
            val = "KEYWORD";
            break;
        case eOAIMetricsReportingLevel::PRODUCT_GROUP:
            val = "PRODUCT_GROUP";
            break;
        case eOAIMetricsReportingLevel::PRODUCT_GROUP_TARGETING:
            val = "PRODUCT_GROUP_TARGETING";
            break;
        case eOAIMetricsReportingLevel::PRODUCT_ITEM:
            val = "PRODUCT_ITEM";
            break;
        case eOAIMetricsReportingLevel::PRODUCT_ITEM_TARGETING:
            val = "PRODUCT_ITEM_TARGETING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMetricsReportingLevel::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMetricsReportingLevel::eOAIMetricsReportingLevel OAIMetricsReportingLevel::getValue() const {
    return m_value;
}

void OAIMetricsReportingLevel::setValue(const OAIMetricsReportingLevel::eOAIMetricsReportingLevel& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMetricsReportingLevel::isSet() const {
    
    return m_value_isSet;
}

bool OAIMetricsReportingLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
