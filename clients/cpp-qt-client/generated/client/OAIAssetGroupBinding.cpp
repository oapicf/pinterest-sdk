/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetGroupBinding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetGroupBinding::OAIAssetGroupBinding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetGroupBinding::OAIAssetGroupBinding() {
    this->initializeModel();
}

OAIAssetGroupBinding::~OAIAssetGroupBinding() {}

void OAIAssetGroupBinding::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_asset_group_name_isSet = false;
    m_asset_group_name_isValid = false;

    m_asset_group_description_isSet = false;
    m_asset_group_description_isValid = false;

    m_asset_group_types_isSet = false;
    m_asset_group_types_isValid = false;

    m_ad_accounts_ids_isSet = false;
    m_ad_accounts_ids_isValid = false;

    m_profiles_ids_isSet = false;
    m_profiles_ids_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_updated_time_isSet = false;
    m_updated_time_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;
}

void OAIAssetGroupBinding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetGroupBinding::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_asset_group_name_isValid = ::OpenAPI::fromJsonValue(m_asset_group_name, json[QString("asset_group_name")]);
    m_asset_group_name_isSet = !json[QString("asset_group_name")].isNull() && m_asset_group_name_isValid;

    m_asset_group_description_isValid = ::OpenAPI::fromJsonValue(m_asset_group_description, json[QString("asset_group_description")]);
    m_asset_group_description_isSet = !json[QString("asset_group_description")].isNull() && m_asset_group_description_isValid;

    m_asset_group_types_isValid = ::OpenAPI::fromJsonValue(m_asset_group_types, json[QString("asset_group_types")]);
    m_asset_group_types_isSet = !json[QString("asset_group_types")].isNull() && m_asset_group_types_isValid;

    m_ad_accounts_ids_isValid = ::OpenAPI::fromJsonValue(m_ad_accounts_ids, json[QString("ad_accounts_ids")]);
    m_ad_accounts_ids_isSet = !json[QString("ad_accounts_ids")].isNull() && m_ad_accounts_ids_isValid;

    m_profiles_ids_isValid = ::OpenAPI::fromJsonValue(m_profiles_ids, json[QString("profiles_ids")]);
    m_profiles_ids_isSet = !json[QString("profiles_ids")].isNull() && m_profiles_ids_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_updated_time_isValid = ::OpenAPI::fromJsonValue(m_updated_time, json[QString("updated_time")]);
    m_updated_time_isSet = !json[QString("updated_time")].isNull() && m_updated_time_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;
}

QString OAIAssetGroupBinding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetGroupBinding::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_asset_group_name_isSet) {
        obj.insert(QString("asset_group_name"), ::OpenAPI::toJsonValue(m_asset_group_name));
    }
    if (m_asset_group_description_isSet) {
        obj.insert(QString("asset_group_description"), ::OpenAPI::toJsonValue(m_asset_group_description));
    }
    if (m_asset_group_types.size() > 0) {
        obj.insert(QString("asset_group_types"), ::OpenAPI::toJsonValue(m_asset_group_types));
    }
    if (m_ad_accounts_ids.size() > 0) {
        obj.insert(QString("ad_accounts_ids"), ::OpenAPI::toJsonValue(m_ad_accounts_ids));
    }
    if (m_profiles_ids.size() > 0) {
        obj.insert(QString("profiles_ids"), ::OpenAPI::toJsonValue(m_profiles_ids));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_updated_time_isSet) {
        obj.insert(QString("updated_time"), ::OpenAPI::toJsonValue(m_updated_time));
    }
    if (m_owner.isSet()) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    return obj;
}

QString OAIAssetGroupBinding::getId() const {
    return m_id;
}
void OAIAssetGroupBinding::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAssetGroupBinding::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAssetGroupBinding::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAssetGroupBinding::getAssetGroupName() const {
    return m_asset_group_name;
}
void OAIAssetGroupBinding::setAssetGroupName(const QString &asset_group_name) {
    m_asset_group_name = asset_group_name;
    m_asset_group_name_isSet = true;
}

bool OAIAssetGroupBinding::is_asset_group_name_Set() const{
    return m_asset_group_name_isSet;
}

bool OAIAssetGroupBinding::is_asset_group_name_Valid() const{
    return m_asset_group_name_isValid;
}

QString OAIAssetGroupBinding::getAssetGroupDescription() const {
    return m_asset_group_description;
}
void OAIAssetGroupBinding::setAssetGroupDescription(const QString &asset_group_description) {
    m_asset_group_description = asset_group_description;
    m_asset_group_description_isSet = true;
}

bool OAIAssetGroupBinding::is_asset_group_description_Set() const{
    return m_asset_group_description_isSet;
}

bool OAIAssetGroupBinding::is_asset_group_description_Valid() const{
    return m_asset_group_description_isValid;
}

QList<QString> OAIAssetGroupBinding::getAssetGroupTypes() const {
    return m_asset_group_types;
}
void OAIAssetGroupBinding::setAssetGroupTypes(const QList<QString> &asset_group_types) {
    m_asset_group_types = asset_group_types;
    m_asset_group_types_isSet = true;
}

bool OAIAssetGroupBinding::is_asset_group_types_Set() const{
    return m_asset_group_types_isSet;
}

bool OAIAssetGroupBinding::is_asset_group_types_Valid() const{
    return m_asset_group_types_isValid;
}

QList<QString> OAIAssetGroupBinding::getAdAccountsIds() const {
    return m_ad_accounts_ids;
}
void OAIAssetGroupBinding::setAdAccountsIds(const QList<QString> &ad_accounts_ids) {
    m_ad_accounts_ids = ad_accounts_ids;
    m_ad_accounts_ids_isSet = true;
}

bool OAIAssetGroupBinding::is_ad_accounts_ids_Set() const{
    return m_ad_accounts_ids_isSet;
}

bool OAIAssetGroupBinding::is_ad_accounts_ids_Valid() const{
    return m_ad_accounts_ids_isValid;
}

QList<QString> OAIAssetGroupBinding::getProfilesIds() const {
    return m_profiles_ids;
}
void OAIAssetGroupBinding::setProfilesIds(const QList<QString> &profiles_ids) {
    m_profiles_ids = profiles_ids;
    m_profiles_ids_isSet = true;
}

bool OAIAssetGroupBinding::is_profiles_ids_Set() const{
    return m_profiles_ids_isSet;
}

bool OAIAssetGroupBinding::is_profiles_ids_Valid() const{
    return m_profiles_ids_isValid;
}

qint32 OAIAssetGroupBinding::getCreatedTime() const {
    return m_created_time;
}
void OAIAssetGroupBinding::setCreatedTime(const qint32 &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIAssetGroupBinding::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIAssetGroupBinding::is_created_time_Valid() const{
    return m_created_time_isValid;
}

qint32 OAIAssetGroupBinding::getUpdatedTime() const {
    return m_updated_time;
}
void OAIAssetGroupBinding::setUpdatedTime(const qint32 &updated_time) {
    m_updated_time = updated_time;
    m_updated_time_isSet = true;
}

bool OAIAssetGroupBinding::is_updated_time_Set() const{
    return m_updated_time_isSet;
}

bool OAIAssetGroupBinding::is_updated_time_Valid() const{
    return m_updated_time_isValid;
}

OAIBusinessAccessUserSummary OAIAssetGroupBinding::getOwner() const {
    return m_owner;
}
void OAIAssetGroupBinding::setOwner(const OAIBusinessAccessUserSummary &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIAssetGroupBinding::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIAssetGroupBinding::is_owner_Valid() const{
    return m_owner_isValid;
}

OAIBusinessAccessUserSummary OAIAssetGroupBinding::getCreatedBy() const {
    return m_created_by;
}
void OAIAssetGroupBinding::setCreatedBy(const OAIBusinessAccessUserSummary &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIAssetGroupBinding::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIAssetGroupBinding::is_created_by_Valid() const{
    return m_created_by_isValid;
}

bool OAIAssetGroupBinding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_group_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_group_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ad_accounts_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_profiles_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetGroupBinding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
