/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrackingUrls.h
 *
 * Third-party tracking URLs. Up to three tracking URLs - with a max length of 2,000 - are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Third-party and dynamic tracking&lt;/a&gt;.
 */

#ifndef OAITrackingUrls_H
#define OAITrackingUrls_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITrackingUrls : public OAIObject {
public:
    OAITrackingUrls();
    OAITrackingUrls(QString json);
    ~OAITrackingUrls() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getImpression() const;
    void setImpression(const QList<QString> &impression);
    bool is_impression_Set() const;
    bool is_impression_Valid() const;

    QList<QString> getClick() const;
    void setClick(const QList<QString> &click);
    bool is_click_Set() const;
    bool is_click_Valid() const;

    QList<QString> getEngagement() const;
    void setEngagement(const QList<QString> &engagement);
    bool is_engagement_Set() const;
    bool is_engagement_Valid() const;

    QList<QString> getBuyableButton() const;
    void setBuyableButton(const QList<QString> &buyable_button);
    bool is_buyable_button_Set() const;
    bool is_buyable_button_Valid() const;

    QList<QString> getAudienceVerification() const;
    void setAudienceVerification(const QList<QString> &audience_verification);
    bool is_audience_verification_Set() const;
    bool is_audience_verification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_impression;
    bool m_impression_isSet;
    bool m_impression_isValid;

    QList<QString> m_click;
    bool m_click_isSet;
    bool m_click_isValid;

    QList<QString> m_engagement;
    bool m_engagement_isSet;
    bool m_engagement_isValid;

    QList<QString> m_buyable_button;
    bool m_buyable_button_isSet;
    bool m_buyable_button_isValid;

    QList<QString> m_audience_verification;
    bool m_audience_verification_isSet;
    bool m_audience_verification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrackingUrls)

#endif // OAITrackingUrls_H
