/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsProductGroupPricingCriteria
    /// </summary>
    [DataContract(Name = "CatalogsProductGroupPricingCriteria")]
    public partial class CatalogsProductGroupPricingCriteria : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupPricingCriteria" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CatalogsProductGroupPricingCriteria() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupPricingCriteria" /> class.
        /// </summary>
        /// <param name="inclusion">inclusion (default to true).</param>
        /// <param name="values">values (required).</param>
        /// <param name="negated">negated (default to false).</param>
        public CatalogsProductGroupPricingCriteria(bool inclusion = true, decimal values = default(decimal), bool negated = false)
        {
            this.Values = values;
            this.Inclusion = inclusion;
            this.Negated = negated;
        }

        /// <summary>
        /// Gets or Sets Inclusion
        /// </summary>
        [DataMember(Name = "inclusion", EmitDefaultValue = true)]
        public bool Inclusion { get; set; }

        /// <summary>
        /// Gets or Sets Values
        /// </summary>
        [DataMember(Name = "values", IsRequired = true, EmitDefaultValue = true)]
        public decimal Values { get; set; }

        /// <summary>
        /// Gets or Sets Negated
        /// </summary>
        [DataMember(Name = "negated", EmitDefaultValue = true)]
        public bool Negated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsProductGroupPricingCriteria {\n");
            sb.Append("  Inclusion: ").Append(Inclusion).Append("\n");
            sb.Append("  Values: ").Append(Values).Append("\n");
            sb.Append("  Negated: ").Append(Negated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Values (decimal) minimum
            if (this.Values < (decimal)0)
            {
                yield return new ValidationResult("Invalid value for Values, must be a value greater than or equal to 0.", new [] { "Values" });
            }

            yield break;
        }
    }

}
