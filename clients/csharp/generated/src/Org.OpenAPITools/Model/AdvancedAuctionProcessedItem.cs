/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Object describing the result of an operation on an item bid option
    /// </summary>
    [DataContract(Name = "AdvancedAuctionProcessedItem")]
    [JsonConverter(typeof(JsonSubtypes), "Operation")]
    public partial class AdvancedAuctionProcessedItem : AdvancedAuctionItemsSubmitRecord, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdvancedAuctionProcessedItem" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AdvancedAuctionProcessedItem() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AdvancedAuctionProcessedItem" /> class.
        /// </summary>
        /// <param name="errors">Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied..</param>
        /// <param name="operation">operation (required) (default to &quot;AdvancedAuctionProcessedItem&quot;).</param>
        /// <param name="itemId">The catalog retail item id in the merchant namespace (required).</param>
        /// <param name="country">country (required).</param>
        /// <param name="language">language (required).</param>
        /// <param name="bidOptions">bidOptions (required).</param>
        /// <param name="updateMask">The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the &#x60;bid_options&#x60; object in the body will be set to &#x60;null&#x60;. If an item bid option record is being created, fields not specified in the update mask will be initialized to &#x60;null&#x60;. (required).</param>
        public AdvancedAuctionProcessedItem(List<AdvancedAuctionOperationError> errors = default(List<AdvancedAuctionOperationError>), AdvancedAuctionOperation operation = "AdvancedAuctionProcessedItem", string itemId = default(string), Country country = default(Country), Language language = default(Language), AdvancedAuctionBidOptions bidOptions = default(AdvancedAuctionBidOptions), List<UpdateMaskBidOptionField> updateMask = default(List<UpdateMaskBidOptionField>)) : base(operation, itemId, country, language, bidOptions, updateMask)
        {
            this.Errors = errors;
        }

        /// <summary>
        /// Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
        /// </summary>
        /// <value>Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.</value>
        [DataMember(Name = "errors", EmitDefaultValue = false)]
        public List<AdvancedAuctionOperationError> Errors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdvancedAuctionProcessedItem {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            foreach (var x in base.BaseValidate(validationContext))
            {
                yield return x;
            }
            yield break;
        }
    }

}
