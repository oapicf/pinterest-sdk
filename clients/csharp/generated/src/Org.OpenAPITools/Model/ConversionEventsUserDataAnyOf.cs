/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ConversionEventsUserDataAnyOf
    /// </summary>
    [DataContract(Name = "ConversionEventsUserData_anyOf")]
    public partial class ConversionEventsUserDataAnyOf : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversionEventsUserDataAnyOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ConversionEventsUserDataAnyOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversionEventsUserDataAnyOf" /> class.
        /// </summary>
        /// <param name="em">Sha256 hashes of lowercase version of user&#39;s email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format. (required).</param>
        /// <param name="hashedMaids">Sha256 hashes of user&#39;s \&quot;Google Advertising IDs\&quot; (GAIDs) or \&quot;Apple&#39;s Identifier for Advertisers\&quot; (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format..</param>
        /// <param name="clientIpAddress">The user&#39;s IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA..</param>
        /// <param name="clientUserAgent">The user agent string of the user&#39;s web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA..</param>
        public ConversionEventsUserDataAnyOf(List<string> em = default(List<string>), List<string> hashedMaids = default(List<string>), string clientIpAddress = default(string), string clientUserAgent = default(string))
        {
            // to ensure "em" is required (not null)
            if (em == null)
            {
                throw new ArgumentNullException("em is a required property for ConversionEventsUserDataAnyOf and cannot be null");
            }
            this.Em = em;
            this.HashedMaids = hashedMaids;
            this.ClientIpAddress = clientIpAddress;
            this.ClientUserAgent = clientUserAgent;
        }

        /// <summary>
        /// Sha256 hashes of lowercase version of user&#39;s email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
        /// </summary>
        /// <value>Sha256 hashes of lowercase version of user&#39;s email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.</value>
        /*
        <example>[&quot;411e44ce1261728ffd2c0686e44e3fffe413c0e2c5adc498bc7da883d476b9c8&quot;,&quot;09831ea51bd1b7b32a836683a00a9ccaf3d05f59499f42d9883412ed79289969&quot;]</example>
        */
        [DataMember(Name = "em", IsRequired = true, EmitDefaultValue = true)]
        public List<string> Em { get; set; }

        /// <summary>
        /// Sha256 hashes of user&#39;s \&quot;Google Advertising IDs\&quot; (GAIDs) or \&quot;Apple&#39;s Identifier for Advertisers\&quot; (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
        /// </summary>
        /// <value>Sha256 hashes of user&#39;s \&quot;Google Advertising IDs\&quot; (GAIDs) or \&quot;Apple&#39;s Identifier for Advertisers\&quot; (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.</value>
        /*
        <example>[&quot;0192518eb84137ccfe82c8b6322d29631dae7e28ed9d0f6dd5f245d73a58c5f1&quot;,&quot;837b850ac46d62b2272a71de73c27801ff011ac1e36c5432620c8755cf90db46&quot;]</example>
        */
        [DataMember(Name = "hashed_maids", EmitDefaultValue = false)]
        public List<string> HashedMaids { get; set; }

        /// <summary>
        /// The user&#39;s IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
        /// </summary>
        /// <value>The user&#39;s IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.</value>
        /*
        <example>216.3.128.12</example>
        */
        [DataMember(Name = "client_ip_address", EmitDefaultValue = false)]
        public string ClientIpAddress { get; set; }

        /// <summary>
        /// The user agent string of the user&#39;s web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
        /// </summary>
        /// <value>The user agent string of the user&#39;s web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.</value>
        /*
        <example>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</example>
        */
        [DataMember(Name = "client_user_agent", EmitDefaultValue = false)]
        public string ClientUserAgent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConversionEventsUserDataAnyOf {\n");
            sb.Append("  Em: ").Append(Em).Append("\n");
            sb.Append("  HashedMaids: ").Append(HashedMaids).Append("\n");
            sb.Append("  ClientIpAddress: ").Append(ClientIpAddress).Append("\n");
            sb.Append("  ClientUserAgent: ").Append(ClientUserAgent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
