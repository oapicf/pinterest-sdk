/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OptimizationGoalMetadataScrollupGoalMetadata
    /// </summary>
    [DataContract(Name = "OptimizationGoalMetadata_scrollup_goal_metadata")]
    public partial class OptimizationGoalMetadataScrollupGoalMetadata : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OptimizationGoalMetadataScrollupGoalMetadata" /> class.
        /// </summary>
        /// <param name="scrollupGoalValueInMicroCurrency">scrollupGoalValueInMicroCurrency.</param>
        public OptimizationGoalMetadataScrollupGoalMetadata(string scrollupGoalValueInMicroCurrency = default(string))
        {
            this.ScrollupGoalValueInMicroCurrency = scrollupGoalValueInMicroCurrency;
        }

        /// <summary>
        /// Gets or Sets ScrollupGoalValueInMicroCurrency
        /// </summary>
        [DataMember(Name = "scrollup_goal_value_in_micro_currency", EmitDefaultValue = true)]
        public string ScrollupGoalValueInMicroCurrency { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OptimizationGoalMetadataScrollupGoalMetadata {\n");
            sb.Append("  ScrollupGoalValueInMicroCurrency: ").Append(ScrollupGoalValueInMicroCurrency).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.ScrollupGoalValueInMicroCurrency != null) {
                // ScrollupGoalValueInMicroCurrency (string) pattern
                Regex regexScrollupGoalValueInMicroCurrency = new Regex(@"^[0-9]+$", RegexOptions.CultureInvariant);
                if (!regexScrollupGoalValueInMicroCurrency.Match(this.ScrollupGoalValueInMicroCurrency).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ScrollupGoalValueInMicroCurrency, must match a pattern of " + regexScrollupGoalValueInMicroCurrency, new [] { "ScrollupGoalValueInMicroCurrency" });
                }
            }

            yield break;
        }
    }

}
