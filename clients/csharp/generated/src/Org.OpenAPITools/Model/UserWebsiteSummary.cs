/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UserWebsiteSummary
    /// </summary>
    [DataContract(Name = "UserWebsiteSummary")]
    public partial class UserWebsiteSummary : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserWebsiteSummary" /> class.
        /// </summary>
        /// <param name="website">Website with path or domain only.</param>
        /// <param name="status">Status of the verification process.</param>
        /// <param name="verifiedAt">UTC timestamp when the verification happened - sometimes missing.</param>
        public UserWebsiteSummary(string website = default(string), string status = default(string), string verifiedAt = default(string))
        {
            this.Website = website;
            this.Status = status;
            this.VerifiedAt = verifiedAt;
        }

        /// <summary>
        /// Website with path or domain only
        /// </summary>
        /// <value>Website with path or domain only</value>
        /*
        <example>mysite.test</example>
        */
        [DataMember(Name = "website", EmitDefaultValue = false)]
        public string Website { get; set; }

        /// <summary>
        /// Status of the verification process
        /// </summary>
        /// <value>Status of the verification process</value>
        /*
        <example>success</example>
        */
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// UTC timestamp when the verification happened - sometimes missing
        /// </summary>
        /// <value>UTC timestamp when the verification happened - sometimes missing</value>
        /*
        <example>2022-12-14T21:03:01.602000</example>
        */
        [DataMember(Name = "verified_at", EmitDefaultValue = false)]
        public string VerifiedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserWebsiteSummary {\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  VerifiedAt: ").Append(VerifiedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
