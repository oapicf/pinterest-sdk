/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CustomerList
    /// </summary>
    [DataContract(Name = "CustomerList")]
    public partial class CustomerList : IValidatableObject
    {
        /// <summary>
        /// Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
        /// </summary>
        /// <value>Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum PROCESSING for value: PROCESSING
            /// </summary>
            [EnumMember(Value = "PROCESSING")]
            PROCESSING = 1,

            /// <summary>
            /// Enum READY for value: READY
            /// </summary>
            [EnumMember(Value = "READY")]
            READY = 2,

            /// <summary>
            /// Enum TOOSMALL for value: TOO_SMALL
            /// </summary>
            [EnumMember(Value = "TOO_SMALL")]
            TOOSMALL = 3,

            /// <summary>
            /// Enum UPLOADING for value: UPLOADING
            /// </summary>
            [EnumMember(Value = "UPLOADING")]
            UPLOADING = 4
        }


        /// <summary>
        /// Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
        /// </summary>
        /// <value>Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.</value>
        /*
        <example>PROCESSING</example>
        */
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerList" /> class.
        /// </summary>
        /// <param name="adAccountId">Associated ad account ID..</param>
        /// <param name="createdTime">Creation time. Unix timestamp in seconds..</param>
        /// <param name="id">Customer list ID..</param>
        /// <param name="name">Customer list name..</param>
        /// <param name="numBatches">Total number of list updates.  List creation counts as one batch. Each &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append&lt;/a&gt; or &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists..</param>
        /// <param name="numRemovedUserRecords">Number of removed user records. In a &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call, this counter increases even if the user is not found in the list..</param>
        /// <param name="numUploadedUserRecords">Number of uploaded user records. In an &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append API&lt;/a&gt; call, this counter increases even if the uploaded user is already in the list..</param>
        /// <param name="status">Customer list status. TOO_SMALL - the list has less than 100 Pinterest users..</param>
        /// <param name="type">Always \&quot;customerlist\&quot;..</param>
        /// <param name="updatedTime">Last update time. Unix timestamp in seconds..</param>
        /// <param name="exceptions">Customer list errors.</param>
        public CustomerList(string adAccountId = default(string), decimal createdTime = default(decimal), string id = default(string), string name = default(string), decimal numBatches = default(decimal), decimal numRemovedUserRecords = default(decimal), decimal numUploadedUserRecords = default(decimal), StatusEnum? status = default(StatusEnum?), string type = default(string), decimal updatedTime = default(decimal), Object exceptions = default(Object))
        {
            this.AdAccountId = adAccountId;
            this.CreatedTime = createdTime;
            this.Id = id;
            this.Name = name;
            this.NumBatches = numBatches;
            this.NumRemovedUserRecords = numRemovedUserRecords;
            this.NumUploadedUserRecords = numUploadedUserRecords;
            this.Status = status;
            this.Type = type;
            this.UpdatedTime = updatedTime;
            this.Exceptions = exceptions;
        }

        /// <summary>
        /// Associated ad account ID.
        /// </summary>
        /// <value>Associated ad account ID.</value>
        /*
        <example>549756359984</example>
        */
        [DataMember(Name = "ad_account_id", EmitDefaultValue = false)]
        public string AdAccountId { get; set; }

        /// <summary>
        /// Creation time. Unix timestamp in seconds.
        /// </summary>
        /// <value>Creation time. Unix timestamp in seconds.</value>
        /*
        <example>1452208622</example>
        */
        [DataMember(Name = "created_time", EmitDefaultValue = false)]
        public decimal CreatedTime { get; set; }

        /// <summary>
        /// Customer list ID.
        /// </summary>
        /// <value>Customer list ID.</value>
        /*
        <example>643</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Customer list name.
        /// </summary>
        /// <value>Customer list name.</value>
        /*
        <example>The Glengarry Glen Ross leads</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Total number of list updates.  List creation counts as one batch. Each &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append&lt;/a&gt; or &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
        /// </summary>
        /// <value>Total number of list updates.  List creation counts as one batch. Each &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append&lt;/a&gt; or &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.</value>
        /*
        <example>2</example>
        */
        [DataMember(Name = "num_batches", EmitDefaultValue = false)]
        public decimal NumBatches { get; set; }

        /// <summary>
        /// Number of removed user records. In a &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call, this counter increases even if the user is not found in the list.
        /// </summary>
        /// <value>Number of removed user records. In a &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call, this counter increases even if the user is not found in the list.</value>
        /*
        <example>0</example>
        */
        [DataMember(Name = "num_removed_user_records", EmitDefaultValue = false)]
        public decimal NumRemovedUserRecords { get; set; }

        /// <summary>
        /// Number of uploaded user records. In an &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append API&lt;/a&gt; call, this counter increases even if the uploaded user is already in the list.
        /// </summary>
        /// <value>Number of uploaded user records. In an &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append API&lt;/a&gt; call, this counter increases even if the uploaded user is already in the list.</value>
        /*
        <example>11</example>
        */
        [DataMember(Name = "num_uploaded_user_records", EmitDefaultValue = false)]
        public decimal NumUploadedUserRecords { get; set; }

        /// <summary>
        /// Always \&quot;customerlist\&quot;.
        /// </summary>
        /// <value>Always \&quot;customerlist\&quot;.</value>
        /*
        <example>customerlist</example>
        */
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Last update time. Unix timestamp in seconds.
        /// </summary>
        /// <value>Last update time. Unix timestamp in seconds.</value>
        /*
        <example>1461269616</example>
        */
        [DataMember(Name = "updated_time", EmitDefaultValue = false)]
        public decimal UpdatedTime { get; set; }

        /// <summary>
        /// Customer list errors
        /// </summary>
        /// <value>Customer list errors</value>
        [DataMember(Name = "exceptions", EmitDefaultValue = false)]
        public Object Exceptions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerList {\n");
            sb.Append("  AdAccountId: ").Append(AdAccountId).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  NumBatches: ").Append(NumBatches).Append("\n");
            sb.Append("  NumRemovedUserRecords: ").Append(NumRemovedUserRecords).Append("\n");
            sb.Append("  NumUploadedUserRecords: ").Append(NumUploadedUserRecords).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  UpdatedTime: ").Append(UpdatedTime).Append("\n");
            sb.Append("  Exceptions: ").Append(Exceptions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
