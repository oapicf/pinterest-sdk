/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UserBusinessRoleBinding
    /// </summary>
    [DataContract(Name = "UserBusinessRoleBinding")]
    public partial class UserBusinessRoleBinding : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserBusinessRoleBinding" /> class.
        /// </summary>
        /// <param name="assetsSummary">assetsSummary.</param>
        /// <param name="businessRoles">The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER..</param>
        /// <param name="createdByBusiness">Metadata for the business that created the business relationship..</param>
        /// <param name="createdByUser">Metadata for the user that created the business relationship..</param>
        /// <param name="createdTime">The time the business relationship was created. Returned in milliseconds..</param>
        /// <param name="id">Unique identifier of the business member/business partner/employer..</param>
        /// <param name="isSharedPartner">This field is only relevant when business_role&#x3D;\&quot;PARTNER\&quot;. &lt;br&gt;If is_shared_partner&#x3D;FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. &lt;br&gt;If is_shared_partner&#x3D;TRUE, you can access the partner&#39;s business asset. If assets_summary is not empty, the assets listed are the partner&#39;s business assets you have access to..</param>
        /// <param name="user">Metadata for the business member/business partner/employer..</param>
        public UserBusinessRoleBinding(BusinessMemberAssetsSummary assetsSummary = default(BusinessMemberAssetsSummary), List<string> businessRoles = default(List<string>), BusinessAccessUserSummary createdByBusiness = default(BusinessAccessUserSummary), BusinessAccessUserSummary createdByUser = default(BusinessAccessUserSummary), int? createdTime = default(int?), string id = default(string), bool isSharedPartner = default(bool), BusinessAccessUserSummary user = default(BusinessAccessUserSummary))
        {
            this.AssetsSummary = assetsSummary;
            this.BusinessRoles = businessRoles;
            this.CreatedByBusiness = createdByBusiness;
            this.CreatedByUser = createdByUser;
            this.CreatedTime = createdTime;
            this.Id = id;
            this.IsSharedPartner = isSharedPartner;
            this.User = user;
        }

        /// <summary>
        /// Gets or Sets AssetsSummary
        /// </summary>
        [DataMember(Name = "assets_summary", EmitDefaultValue = true)]
        public BusinessMemberAssetsSummary AssetsSummary { get; set; }

        /// <summary>
        /// The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.
        /// </summary>
        /// <value>The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.</value>
        /*
        <example>[&quot;BIZ_ADMIN&quot;]</example>
        */
        [DataMember(Name = "business_roles", EmitDefaultValue = false)]
        public List<string> BusinessRoles { get; set; }

        /// <summary>
        /// Metadata for the business that created the business relationship.
        /// </summary>
        /// <value>Metadata for the business that created the business relationship.</value>
        [DataMember(Name = "created_by_business", EmitDefaultValue = true)]
        public BusinessAccessUserSummary CreatedByBusiness { get; set; }

        /// <summary>
        /// Metadata for the user that created the business relationship.
        /// </summary>
        /// <value>Metadata for the user that created the business relationship.</value>
        [DataMember(Name = "created_by_user", EmitDefaultValue = true)]
        public BusinessAccessUserSummary CreatedByUser { get; set; }

        /// <summary>
        /// The time the business relationship was created. Returned in milliseconds.
        /// </summary>
        /// <value>The time the business relationship was created. Returned in milliseconds.</value>
        /*
        <example>1646767577816</example>
        */
        [DataMember(Name = "created_time", EmitDefaultValue = true)]
        public int? CreatedTime { get; set; }

        /// <summary>
        /// Unique identifier of the business member/business partner/employer.
        /// </summary>
        /// <value>Unique identifier of the business member/business partner/employer.</value>
        /*
        <example>383791336903426391</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// This field is only relevant when business_role&#x3D;\&quot;PARTNER\&quot;. &lt;br&gt;If is_shared_partner&#x3D;FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. &lt;br&gt;If is_shared_partner&#x3D;TRUE, you can access the partner&#39;s business asset. If assets_summary is not empty, the assets listed are the partner&#39;s business assets you have access to.
        /// </summary>
        /// <value>This field is only relevant when business_role&#x3D;\&quot;PARTNER\&quot;. &lt;br&gt;If is_shared_partner&#x3D;FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. &lt;br&gt;If is_shared_partner&#x3D;TRUE, you can access the partner&#39;s business asset. If assets_summary is not empty, the assets listed are the partner&#39;s business assets you have access to.</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "is_shared_partner", EmitDefaultValue = true)]
        public bool IsSharedPartner { get; set; }

        /// <summary>
        /// Metadata for the business member/business partner/employer.
        /// </summary>
        /// <value>Metadata for the business member/business partner/employer.</value>
        [DataMember(Name = "user", EmitDefaultValue = true)]
        public BusinessAccessUserSummary User { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserBusinessRoleBinding {\n");
            sb.Append("  AssetsSummary: ").Append(AssetsSummary).Append("\n");
            sb.Append("  BusinessRoles: ").Append(BusinessRoles).Append("\n");
            sb.Append("  CreatedByBusiness: ").Append(CreatedByBusiness).Append("\n");
            sb.Append("  CreatedByUser: ").Append(CreatedByUser).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IsSharedPartner: ").Append(IsSharedPartner).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.Id != null) {
                // Id (string) pattern
                Regex regexId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexId.Match(this.Id).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, must match a pattern of " + regexId, new [] { "Id" });
                }
            }

            yield break;
        }
    }

}
