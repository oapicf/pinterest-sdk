/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CreateAssetAccessRequestBodyAssetRequestsInner
    /// </summary>
    [DataContract(Name = "CreateAssetAccessRequestBody_asset_requests_inner")]
    public partial class CreateAssetAccessRequestBodyAssetRequestsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateAssetAccessRequestBodyAssetRequestsInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateAssetAccessRequestBodyAssetRequestsInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateAssetAccessRequestBodyAssetRequestsInner" /> class.
        /// </summary>
        /// <param name="partnerId">Unique identifier of a business partner to request asset access to. (required).</param>
        /// <param name="assetIdToPermissions">An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner.  (required).</param>
        public CreateAssetAccessRequestBodyAssetRequestsInner(string partnerId = default(string), Dictionary<string, List<Permissions>> assetIdToPermissions = default(Dictionary<string, List<Permissions>>))
        {
            // to ensure "partnerId" is required (not null)
            if (partnerId == null)
            {
                throw new ArgumentNullException("partnerId is a required property for CreateAssetAccessRequestBodyAssetRequestsInner and cannot be null");
            }
            this.PartnerId = partnerId;
            // to ensure "assetIdToPermissions" is required (not null)
            if (assetIdToPermissions == null)
            {
                throw new ArgumentNullException("assetIdToPermissions is a required property for CreateAssetAccessRequestBodyAssetRequestsInner and cannot be null");
            }
            this.AssetIdToPermissions = assetIdToPermissions;
        }

        /// <summary>
        /// Unique identifier of a business partner to request asset access to.
        /// </summary>
        /// <value>Unique identifier of a business partner to request asset access to.</value>
        /*
        <example>809944451643622187</example>
        */
        [DataMember(Name = "partner_id", IsRequired = true, EmitDefaultValue = true)]
        public string PartnerId { get; set; }

        /// <summary>
        /// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
        /// </summary>
        /// <value>An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. </value>
        /*
        <example>{&quot;549760723247&quot;:[&quot;ANALYST&quot;],&quot;549760723248&quot;:[&quot;ANALYST&quot;,&quot;ADMIN&quot;],&quot;809944451643622187&quot;:[&quot;PROFILE_PUBLISHER&quot;]}</example>
        */
        [DataMember(Name = "asset_id_to_permissions", IsRequired = true, EmitDefaultValue = true)]
        public Dictionary<string, List<Permissions>> AssetIdToPermissions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateAssetAccessRequestBodyAssetRequestsInner {\n");
            sb.Append("  PartnerId: ").Append(PartnerId).Append("\n");
            sb.Append("  AssetIdToPermissions: ").Append(AssetIdToPermissions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.PartnerId != null) {
                // PartnerId (string) pattern
                Regex regexPartnerId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexPartnerId.Match(this.PartnerId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PartnerId, must match a pattern of " + regexPartnerId, new [] { "PartnerId" });
                }
            }

            yield break;
        }
    }

}
