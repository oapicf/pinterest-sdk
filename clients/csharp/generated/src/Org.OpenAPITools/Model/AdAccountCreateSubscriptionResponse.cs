/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AdAccountCreateSubscriptionResponse
    /// </summary>
    [DataContract(Name = "AdAccountCreateSubscriptionResponse")]
    public partial class AdAccountCreateSubscriptionResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdAccountCreateSubscriptionResponse" /> class.
        /// </summary>
        /// <param name="id">Subscription ID..</param>
        /// <param name="cryptographicKey">Base64 encoded key for client to decrypt lead data..</param>
        /// <param name="cryptographicAlgorithm">Lead data encryption algorithm..</param>
        /// <param name="createdTime">Subscription creation time. Unix timestamp in milliseconds..</param>
        public AdAccountCreateSubscriptionResponse(string id = default(string), string cryptographicKey = default(string), string cryptographicAlgorithm = default(string), int createdTime = default(int))
        {
            this.Id = id;
            this.CryptographicKey = cryptographicKey;
            this.CryptographicAlgorithm = cryptographicAlgorithm;
            this.CreatedTime = createdTime;
        }

        /// <summary>
        /// Subscription ID.
        /// </summary>
        /// <value>Subscription ID.</value>
        /*
        <example>8078432025948590686</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Base64 encoded key for client to decrypt lead data.
        /// </summary>
        /// <value>Base64 encoded key for client to decrypt lead data.</value>
        /*
        <example>ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54</example>
        */
        [DataMember(Name = "cryptographic_key", EmitDefaultValue = true)]
        public string CryptographicKey { get; set; }

        /// <summary>
        /// Lead data encryption algorithm.
        /// </summary>
        /// <value>Lead data encryption algorithm.</value>
        /*
        <example>AES-256-GCM</example>
        */
        [DataMember(Name = "cryptographic_algorithm", EmitDefaultValue = true)]
        public string CryptographicAlgorithm { get; set; }

        /// <summary>
        /// Subscription creation time. Unix timestamp in milliseconds.
        /// </summary>
        /// <value>Subscription creation time. Unix timestamp in milliseconds.</value>
        /*
        <example>1699209842000</example>
        */
        [DataMember(Name = "created_time", EmitDefaultValue = false)]
        public int CreatedTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdAccountCreateSubscriptionResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CryptographicKey: ").Append(CryptographicKey).Append("\n");
            sb.Append("  CryptographicAlgorithm: ").Append(CryptographicAlgorithm).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.Id != null) {
                // Id (string) pattern
                Regex regexId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexId.Match(this.Id).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, must match a pattern of " + regexId, new [] { "Id" });
                }
            }

            yield break;
        }
    }

}
