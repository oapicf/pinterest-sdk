/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// LeadFormCreateRequest
    /// </summary>
    [DataContract(Name = "LeadFormCreateRequest")]
    public partial class LeadFormCreateRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public LeadFormStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="LeadFormCreateRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LeadFormCreateRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LeadFormCreateRequest" /> class.
        /// </summary>
        /// <param name="name">Internal name of the lead form. (required).</param>
        /// <param name="privacyPolicyLink">A link to the advertiser&#39;s privacy policy. This will be included in the lead form&#39;s disclosure language. (required).</param>
        /// <param name="hasAcceptedTerms">Whether the advertiser has accepted Pinterest&#39;s terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest&#39;s &lt;a href&#x3D;\&quot;https://policy.pinterest.com/en/lead-ad-terms\&quot;&gt;Lead Ad Terms&lt;/a&gt;. As a reminder, all advertising on Pinterest is subject to the &lt;a href&#x3D;\&quot;https://business.pinterest.com/en/pinterest-advertising-services-agreement/\&quot;&gt;Pinterest Advertising Services Agreement&lt;/a&gt; or an equivalent agreement as set forth on an IO (required).</param>
        /// <param name="completionMessage">A message for people who complete the form to let them know what happens next. (required).</param>
        /// <param name="status">status.</param>
        /// <param name="disclosureLanguage">Additional disclosure language to be included in the lead form..</param>
        /// <param name="questions">List of questions to be displayed on the lead form. (required).</param>
        /// <param name="policyLinks">List of additional policy links to be displayed on the lead form..</param>
        public LeadFormCreateRequest(string name = default(string), string privacyPolicyLink = default(string), bool hasAcceptedTerms = default(bool), string completionMessage = default(string), LeadFormStatus? status = default(LeadFormStatus?), string disclosureLanguage = default(string), List<LeadFormQuestion> questions = default(List<LeadFormQuestion>), List<LeadFormCommonPolicyLinksInner> policyLinks = default(List<LeadFormCommonPolicyLinksInner>))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for LeadFormCreateRequest and cannot be null");
            }
            this.Name = name;
            // to ensure "privacyPolicyLink" is required (not null)
            if (privacyPolicyLink == null)
            {
                throw new ArgumentNullException("privacyPolicyLink is a required property for LeadFormCreateRequest and cannot be null");
            }
            this.PrivacyPolicyLink = privacyPolicyLink;
            this.HasAcceptedTerms = hasAcceptedTerms;
            // to ensure "completionMessage" is required (not null)
            if (completionMessage == null)
            {
                throw new ArgumentNullException("completionMessage is a required property for LeadFormCreateRequest and cannot be null");
            }
            this.CompletionMessage = completionMessage;
            // to ensure "questions" is required (not null)
            if (questions == null)
            {
                throw new ArgumentNullException("questions is a required property for LeadFormCreateRequest and cannot be null");
            }
            this.Questions = questions;
            this.Status = status;
            this.DisclosureLanguage = disclosureLanguage;
            this.PolicyLinks = policyLinks;
        }

        /// <summary>
        /// Internal name of the lead form.
        /// </summary>
        /// <value>Internal name of the lead form.</value>
        /*
        <example>Lead Form 3/14/2023</example>
        */
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// A link to the advertiser&#39;s privacy policy. This will be included in the lead form&#39;s disclosure language.
        /// </summary>
        /// <value>A link to the advertiser&#39;s privacy policy. This will be included in the lead form&#39;s disclosure language.</value>
        /*
        <example>https://www.advertisername.com/privacy-policy</example>
        */
        [DataMember(Name = "privacy_policy_link", IsRequired = true, EmitDefaultValue = true)]
        public string PrivacyPolicyLink { get; set; }

        /// <summary>
        /// Whether the advertiser has accepted Pinterest&#39;s terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest&#39;s &lt;a href&#x3D;\&quot;https://policy.pinterest.com/en/lead-ad-terms\&quot;&gt;Lead Ad Terms&lt;/a&gt;. As a reminder, all advertising on Pinterest is subject to the &lt;a href&#x3D;\&quot;https://business.pinterest.com/en/pinterest-advertising-services-agreement/\&quot;&gt;Pinterest Advertising Services Agreement&lt;/a&gt; or an equivalent agreement as set forth on an IO
        /// </summary>
        /// <value>Whether the advertiser has accepted Pinterest&#39;s terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest&#39;s &lt;a href&#x3D;\&quot;https://policy.pinterest.com/en/lead-ad-terms\&quot;&gt;Lead Ad Terms&lt;/a&gt;. As a reminder, all advertising on Pinterest is subject to the &lt;a href&#x3D;\&quot;https://business.pinterest.com/en/pinterest-advertising-services-agreement/\&quot;&gt;Pinterest Advertising Services Agreement&lt;/a&gt; or an equivalent agreement as set forth on an IO</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "has_accepted_terms", IsRequired = true, EmitDefaultValue = true)]
        public bool HasAcceptedTerms { get; set; }

        /// <summary>
        /// A message for people who complete the form to let them know what happens next.
        /// </summary>
        /// <value>A message for people who complete the form to let them know what happens next.</value>
        /*
        <example>Thank you for submitting. We will contact you soon.</example>
        */
        [DataMember(Name = "completion_message", IsRequired = true, EmitDefaultValue = true)]
        public string CompletionMessage { get; set; }

        /// <summary>
        /// Additional disclosure language to be included in the lead form.
        /// </summary>
        /// <value>Additional disclosure language to be included in the lead form.</value>
        /*
        <example>By entering your personal information, you agree that your data will be collected and used.</example>
        */
        [DataMember(Name = "disclosure_language", EmitDefaultValue = true)]
        public string DisclosureLanguage { get; set; }

        /// <summary>
        /// List of questions to be displayed on the lead form.
        /// </summary>
        /// <value>List of questions to be displayed on the lead form.</value>
        /*
        <example>[{question_type&#x3D;CUSTOM, custom_question_field_type&#x3D;CHECKBOX, custom_question_label&#x3D;What is your favorite animal?, custom_question_options&#x3D;[Dog, Cat, Bird, Turtle]}]</example>
        */
        [DataMember(Name = "questions", IsRequired = true, EmitDefaultValue = true)]
        public List<LeadFormQuestion> Questions { get; set; }

        /// <summary>
        /// List of additional policy links to be displayed on the lead form.
        /// </summary>
        /// <value>List of additional policy links to be displayed on the lead form.</value>
        /*
        <example>[{label&#x3D;Copyright, link&#x3D;https://policy.pinterest.com/en/copyright}]</example>
        */
        [DataMember(Name = "policy_links", EmitDefaultValue = false)]
        public List<LeadFormCommonPolicyLinksInner> PolicyLinks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LeadFormCreateRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PrivacyPolicyLink: ").Append(PrivacyPolicyLink).Append("\n");
            sb.Append("  HasAcceptedTerms: ").Append(HasAcceptedTerms).Append("\n");
            sb.Append("  CompletionMessage: ").Append(CompletionMessage).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  DisclosureLanguage: ").Append(DisclosureLanguage).Append("\n");
            sb.Append("  Questions: ").Append(Questions).Append("\n");
            sb.Append("  PolicyLinks: ").Append(PolicyLinks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
