/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UserWebsiteVerificationCode
    /// </summary>
    [DataContract(Name = "UserWebsiteVerificationCode")]
    public partial class UserWebsiteVerificationCode : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserWebsiteVerificationCode" /> class.
        /// </summary>
        /// <param name="verificationCode">Code to check against the user claiming the website.</param>
        /// <param name="dnsTxtRecord">DNS TXT record to check against for the website to be claimed.</param>
        /// <param name="metatag">Metatag the verification process searchs for the website to be claimed.</param>
        /// <param name="filename">File expected to find on the website being claimed.</param>
        /// <param name="fileContent">A full html file to upload to the website in order for it to be claimed.</param>
        public UserWebsiteVerificationCode(string verificationCode = default(string), string dnsTxtRecord = default(string), string metatag = default(string), string filename = default(string), string fileContent = default(string))
        {
            this.VerificationCode = verificationCode;
            this.DnsTxtRecord = dnsTxtRecord;
            this.Metatag = metatag;
            this.Filename = filename;
            this.FileContent = fileContent;
        }

        /// <summary>
        /// Code to check against the user claiming the website
        /// </summary>
        /// <value>Code to check against the user claiming the website</value>
        /*
        <example>e1edcc1a43976c646367e9c6c9a9b7b6</example>
        */
        [DataMember(Name = "verification_code", EmitDefaultValue = false)]
        public string VerificationCode { get; set; }

        /// <summary>
        /// DNS TXT record to check against for the website to be claimed
        /// </summary>
        /// <value>DNS TXT record to check against for the website to be claimed</value>
        /*
        <example>pinterest-site-verification&#x3D;e1edcc1a43976c646367e9c6c9a9b7b6</example>
        */
        [DataMember(Name = "dns_txt_record", EmitDefaultValue = false)]
        public string DnsTxtRecord { get; set; }

        /// <summary>
        /// Metatag the verification process searchs for the website to be claimed
        /// </summary>
        /// <value>Metatag the verification process searchs for the website to be claimed</value>
        /*
        <example>&lt;meta name&#x3D;&quot;p:domain_verify&quot; content&#x3D;&quot;e1edcc1a43976c646367e9c6c9a9b7b6&quot;/&gt;</example>
        */
        [DataMember(Name = "metatag", EmitDefaultValue = false)]
        public string Metatag { get; set; }

        /// <summary>
        /// File expected to find on the website being claimed
        /// </summary>
        /// <value>File expected to find on the website being claimed</value>
        /*
        <example>pinterest-e1edc.html</example>
        */
        [DataMember(Name = "filename", EmitDefaultValue = false)]
        public string Filename { get; set; }

        /// <summary>
        /// A full html file to upload to the website in order for it to be claimed
        /// </summary>
        /// <value>A full html file to upload to the website in order for it to be claimed</value>
        [DataMember(Name = "file_content", EmitDefaultValue = false)]
        public string FileContent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserWebsiteVerificationCode {\n");
            sb.Append("  VerificationCode: ").Append(VerificationCode).Append("\n");
            sb.Append("  DnsTxtRecord: ").Append(DnsTxtRecord).Append("\n");
            sb.Append("  Metatag: ").Append(Metatag).Append("\n");
            sb.Append("  Filename: ").Append(Filename).Append("\n");
            sb.Append("  FileContent: ").Append(FileContent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
