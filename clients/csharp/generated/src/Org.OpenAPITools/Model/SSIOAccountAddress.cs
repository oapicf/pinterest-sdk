/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SSIOAccountAddress
    /// </summary>
    [DataContract(Name = "SSIOAccountAddress")]
    public partial class SSIOAccountAddress : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SSIOAccountAddress" /> class.
        /// </summary>
        /// <param name="display">Address display.</param>
        /// <param name="purpose">Purpose for which the address is used, usually Billing or Businness.</param>
        /// <param name="addressId">Salesforce id for address.</param>
        /// <param name="orderLegalEntity">Legal entity for this insertion order.</param>
        public SSIOAccountAddress(string display = default(string), string purpose = default(string), string addressId = default(string), string orderLegalEntity = default(string))
        {
            this.Display = display;
            this.Purpose = purpose;
            this.AddressId = addressId;
            this.OrderLegalEntity = orderLegalEntity;
        }

        /// <summary>
        /// Address display
        /// </summary>
        /// <value>Address display</value>
        /*
        <example>475 Brannan Street, San Francisco, CA 94103</example>
        */
        [DataMember(Name = "display", EmitDefaultValue = false)]
        public string Display { get; set; }

        /// <summary>
        /// Purpose for which the address is used, usually Billing or Businness
        /// </summary>
        /// <value>Purpose for which the address is used, usually Billing or Businness</value>
        /*
        <example>Billing</example>
        */
        [DataMember(Name = "purpose", EmitDefaultValue = false)]
        public string Purpose { get; set; }

        /// <summary>
        /// Salesforce id for address
        /// </summary>
        /// <value>Salesforce id for address</value>
        /*
        <example>a1C1N000004MUrLUAW</example>
        */
        [DataMember(Name = "address_id", EmitDefaultValue = false)]
        public string AddressId { get; set; }

        /// <summary>
        /// Legal entity for this insertion order
        /// </summary>
        /// <value>Legal entity for this insertion order</value>
        /*
        <example>PIN US OU</example>
        */
        [DataMember(Name = "order_legal_entity", EmitDefaultValue = false)]
        public string OrderLegalEntity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SSIOAccountAddress {\n");
            sb.Append("  Display: ").Append(Display).Append("\n");
            sb.Append("  Purpose: ").Append(Purpose).Append("\n");
            sb.Append("  AddressId: ").Append(AddressId).Append("\n");
            sb.Append("  OrderLegalEntity: ").Append(OrderLegalEntity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
