/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Ad entities to get in bulk request.
    /// </summary>
    [DataContract(Name = "BulkDownloadRequest")]
    public partial class BulkDownloadRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets OutputFormat
        /// </summary>
        [DataMember(Name = "output_format", EmitDefaultValue = false)]
        public BulkOutputFormat? OutputFormat { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkDownloadRequest" /> class.
        /// </summary>
        /// <param name="entityTypes">All entity types specified will be downloaded. Fewer types result in faster downloads..</param>
        /// <param name="entityIds">All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded..</param>
        /// <param name="updatedSince">Unix UTC timestamp to retrieve all entities that have changed since this time..</param>
        /// <param name="campaignFilter">campaignFilter.</param>
        /// <param name="outputFormat">outputFormat (default to &quot;JSON&quot;).</param>
        public BulkDownloadRequest(List<BulkEntityType> entityTypes = default(List<BulkEntityType>), List<string> entityIds = default(List<string>), string updatedSince = default(string), BulkDownloadRequestCampaignFilter campaignFilter = default(BulkDownloadRequestCampaignFilter), BulkOutputFormat? outputFormat = "JSON")
        {
            this.EntityTypes = entityTypes;
            this.EntityIds = entityIds;
            this.UpdatedSince = updatedSince;
            this.CampaignFilter = campaignFilter;
            this.OutputFormat = outputFormat;
        }

        /// <summary>
        /// All entity types specified will be downloaded. Fewer types result in faster downloads.
        /// </summary>
        /// <value>All entity types specified will be downloaded. Fewer types result in faster downloads.</value>
        /*
        <example>[&quot;CAMPAIGN&quot;,&quot;AD_GROUP&quot;]</example>
        */
        [DataMember(Name = "entity_types", EmitDefaultValue = false)]
        public List<BulkEntityType> EntityTypes { get; set; }

        /// <summary>
        /// All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
        /// </summary>
        /// <value>All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.</value>
        [DataMember(Name = "entity_ids", EmitDefaultValue = false)]
        public List<string> EntityIds { get; set; }

        /// <summary>
        /// Unix UTC timestamp to retrieve all entities that have changed since this time.
        /// </summary>
        /// <value>Unix UTC timestamp to retrieve all entities that have changed since this time.</value>
        /*
        <example>1622848072</example>
        */
        [DataMember(Name = "updated_since", EmitDefaultValue = false)]
        public string UpdatedSince { get; set; }

        /// <summary>
        /// Gets or Sets CampaignFilter
        /// </summary>
        [DataMember(Name = "campaign_filter", EmitDefaultValue = false)]
        public BulkDownloadRequestCampaignFilter CampaignFilter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BulkDownloadRequest {\n");
            sb.Append("  EntityTypes: ").Append(EntityTypes).Append("\n");
            sb.Append("  EntityIds: ").Append(EntityIds).Append("\n");
            sb.Append("  UpdatedSince: ").Append(UpdatedSince).Append("\n");
            sb.Append("  CampaignFilter: ").Append(CampaignFilter).Append("\n");
            sb.Append("  OutputFormat: ").Append(OutputFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.UpdatedSince != null) {
                // UpdatedSince (string) pattern
                Regex regexUpdatedSince = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexUpdatedSince.Match(this.UpdatedSince).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UpdatedSince, must match a pattern of " + regexUpdatedSince, new [] { "UpdatedSince" });
                }
            }

            yield break;
        }
    }

}
