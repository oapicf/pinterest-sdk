/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Schema for log sent from an integration application.
    /// </summary>
    [DataContract(Name = "IntegrationLog")]
    public partial class IntegrationLog : IValidatableObject
    {
        /// <summary>
        /// Log event type
        /// </summary>
        /// <value>Log event type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EventTypeEnum
        {
            /// <summary>
            /// Enum APP for value: APP
            /// </summary>
            [EnumMember(Value = "APP")]
            APP = 1,

            /// <summary>
            /// Enum API for value: API
            /// </summary>
            [EnumMember(Value = "API")]
            API = 2
        }


        /// <summary>
        /// Log event type
        /// </summary>
        /// <value>Log event type</value>
        [DataMember(Name = "event_type", IsRequired = true, EmitDefaultValue = true)]
        public EventTypeEnum EventType { get; set; }
        /// <summary>
        /// Log level type
        /// </summary>
        /// <value>Log level type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LogLevelEnum
        {
            /// <summary>
            /// Enum INFO for value: INFO
            /// </summary>
            [EnumMember(Value = "INFO")]
            INFO = 1,

            /// <summary>
            /// Enum WARN for value: WARN
            /// </summary>
            [EnumMember(Value = "WARN")]
            WARN = 2,

            /// <summary>
            /// Enum ERROR for value: ERROR
            /// </summary>
            [EnumMember(Value = "ERROR")]
            ERROR = 3
        }


        /// <summary>
        /// Log level type
        /// </summary>
        /// <value>Log level type</value>
        [DataMember(Name = "log_level", IsRequired = true, EmitDefaultValue = true)]
        public LogLevelEnum LogLevel { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="IntegrationLog" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IntegrationLog() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IntegrationLog" /> class.
        /// </summary>
        /// <param name="clientTimestamp">Timestamp in milliseconds of when the log was executed at the client. (required).</param>
        /// <param name="eventType">Log event type (required).</param>
        /// <param name="logLevel">Log level type (required).</param>
        /// <param name="externalBusinessId">externalBusinessId.</param>
        /// <param name="advertiserId">advertiserId.</param>
        /// <param name="merchantId">merchantId.</param>
        /// <param name="tagId">tagId.</param>
        /// <param name="feedProfileId">feedProfileId.</param>
        /// <param name="message">Explanation of the event that occured..</param>
        /// <param name="appVersionNumber">Version number of the integration application..</param>
        /// <param name="platformVersionNumber">Version number of the platform the integration application is running on..</param>
        /// <param name="error">error.</param>
        /// <param name="request">request.</param>
        public IntegrationLog(int clientTimestamp = default(int), EventTypeEnum eventType = default(EventTypeEnum), LogLevelEnum logLevel = default(LogLevelEnum), string externalBusinessId = default(string), string advertiserId = default(string), string merchantId = default(string), string tagId = default(string), string feedProfileId = default(string), string message = default(string), string appVersionNumber = default(string), string platformVersionNumber = default(string), IntegrationLogClientError error = default(IntegrationLogClientError), IntegrationLogClientRequest request = default(IntegrationLogClientRequest))
        {
            this.ClientTimestamp = clientTimestamp;
            this.EventType = eventType;
            this.LogLevel = logLevel;
            this.ExternalBusinessId = externalBusinessId;
            this.AdvertiserId = advertiserId;
            this.MerchantId = merchantId;
            this.TagId = tagId;
            this.FeedProfileId = feedProfileId;
            this.Message = message;
            this.AppVersionNumber = appVersionNumber;
            this.PlatformVersionNumber = platformVersionNumber;
            this.Error = error;
            this.Request = request;
        }

        /// <summary>
        /// Timestamp in milliseconds of when the log was executed at the client.
        /// </summary>
        /// <value>Timestamp in milliseconds of when the log was executed at the client.</value>
        [DataMember(Name = "client_timestamp", IsRequired = true, EmitDefaultValue = true)]
        public int ClientTimestamp { get; set; }

        /// <summary>
        /// Gets or Sets ExternalBusinessId
        /// </summary>
        [DataMember(Name = "external_business_id", EmitDefaultValue = true)]
        public string ExternalBusinessId { get; set; }

        /// <summary>
        /// Gets or Sets AdvertiserId
        /// </summary>
        [DataMember(Name = "advertiser_id", EmitDefaultValue = true)]
        public string AdvertiserId { get; set; }

        /// <summary>
        /// Gets or Sets MerchantId
        /// </summary>
        [DataMember(Name = "merchant_id", EmitDefaultValue = true)]
        public string MerchantId { get; set; }

        /// <summary>
        /// Gets or Sets TagId
        /// </summary>
        [DataMember(Name = "tag_id", EmitDefaultValue = true)]
        public string TagId { get; set; }

        /// <summary>
        /// Gets or Sets FeedProfileId
        /// </summary>
        [DataMember(Name = "feed_profile_id", EmitDefaultValue = true)]
        public string FeedProfileId { get; set; }

        /// <summary>
        /// Explanation of the event that occured.
        /// </summary>
        /// <value>Explanation of the event that occured.</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Version number of the integration application.
        /// </summary>
        /// <value>Version number of the integration application.</value>
        [DataMember(Name = "app_version_number", EmitDefaultValue = false)]
        public string AppVersionNumber { get; set; }

        /// <summary>
        /// Version number of the platform the integration application is running on.
        /// </summary>
        /// <value>Version number of the platform the integration application is running on.</value>
        [DataMember(Name = "platform_version_number", EmitDefaultValue = false)]
        public string PlatformVersionNumber { get; set; }

        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [DataMember(Name = "error", EmitDefaultValue = false)]
        public IntegrationLogClientError Error { get; set; }

        /// <summary>
        /// Gets or Sets Request
        /// </summary>
        [DataMember(Name = "request", EmitDefaultValue = false)]
        public IntegrationLogClientRequest Request { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IntegrationLog {\n");
            sb.Append("  ClientTimestamp: ").Append(ClientTimestamp).Append("\n");
            sb.Append("  EventType: ").Append(EventType).Append("\n");
            sb.Append("  LogLevel: ").Append(LogLevel).Append("\n");
            sb.Append("  ExternalBusinessId: ").Append(ExternalBusinessId).Append("\n");
            sb.Append("  AdvertiserId: ").Append(AdvertiserId).Append("\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  TagId: ").Append(TagId).Append("\n");
            sb.Append("  FeedProfileId: ").Append(FeedProfileId).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  AppVersionNumber: ").Append(AppVersionNumber).Append("\n");
            sb.Append("  PlatformVersionNumber: ").Append(PlatformVersionNumber).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  Request: ").Append(Request).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ExternalBusinessId (string) maxLength
            if (this.ExternalBusinessId != null && this.ExternalBusinessId.Length > 2048)
            {
                yield return new ValidationResult("Invalid value for ExternalBusinessId, length must be less than 2048.", new [] { "ExternalBusinessId" });
            }

            // AdvertiserId (string) maxLength
            if (this.AdvertiserId != null && this.AdvertiserId.Length > 128)
            {
                yield return new ValidationResult("Invalid value for AdvertiserId, length must be less than 128.", new [] { "AdvertiserId" });
            }

            // MerchantId (string) maxLength
            if (this.MerchantId != null && this.MerchantId.Length > 128)
            {
                yield return new ValidationResult("Invalid value for MerchantId, length must be less than 128.", new [] { "MerchantId" });
            }

            // TagId (string) maxLength
            if (this.TagId != null && this.TagId.Length > 128)
            {
                yield return new ValidationResult("Invalid value for TagId, length must be less than 128.", new [] { "TagId" });
            }

            // FeedProfileId (string) maxLength
            if (this.FeedProfileId != null && this.FeedProfileId.Length > 128)
            {
                yield return new ValidationResult("Invalid value for FeedProfileId, length must be less than 128.", new [] { "FeedProfileId" });
            }

            // Message (string) maxLength
            if (this.Message != null && this.Message.Length > 2048)
            {
                yield return new ValidationResult("Invalid value for Message, length must be less than 2048.", new [] { "Message" });
            }

            // AppVersionNumber (string) maxLength
            if (this.AppVersionNumber != null && this.AppVersionNumber.Length > 20)
            {
                yield return new ValidationResult("Invalid value for AppVersionNumber, length must be less than 20.", new [] { "AppVersionNumber" });
            }

            // PlatformVersionNumber (string) maxLength
            if (this.PlatformVersionNumber != null && this.PlatformVersionNumber.Length > 20)
            {
                yield return new ValidationResult("Invalid value for PlatformVersionNumber, length must be less than 20.", new [] { "PlatformVersionNumber" });
            }

            yield break;
        }
    }

}
