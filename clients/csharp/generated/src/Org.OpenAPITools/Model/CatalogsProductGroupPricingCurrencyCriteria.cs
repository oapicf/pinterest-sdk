/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsProductGroupPricingCurrencyCriteria
    /// </summary>
    [DataContract(Name = "catalogs_product_group_pricing_currency_criteria")]
    public partial class CatalogsProductGroupPricingCurrencyCriteria : IValidatableObject
    {
        /// <summary>
        /// Defines Operator
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OperatorEnum
        {
            /// <summary>
            /// Enum GREATERTHAN for value: GREATER_THAN
            /// </summary>
            [EnumMember(Value = "GREATER_THAN")]
            GREATERTHAN = 1,

            /// <summary>
            /// Enum GREATERTHANOREQUALS for value: GREATER_THAN_OR_EQUALS
            /// </summary>
            [EnumMember(Value = "GREATER_THAN_OR_EQUALS")]
            GREATERTHANOREQUALS = 2,

            /// <summary>
            /// Enum LESSTHAN for value: LESS_THAN
            /// </summary>
            [EnumMember(Value = "LESS_THAN")]
            LESSTHAN = 3,

            /// <summary>
            /// Enum LESSTHANOREQUALS for value: LESS_THAN_OR_EQUALS
            /// </summary>
            [EnumMember(Value = "LESS_THAN_OR_EQUALS")]
            LESSTHANOREQUALS = 4
        }


        /// <summary>
        /// Gets or Sets Operator
        /// </summary>
        [DataMember(Name = "operator", IsRequired = true, EmitDefaultValue = true)]
        public OperatorEnum Operator { get; set; }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name = "currency", IsRequired = true, EmitDefaultValue = true)]
        public NonNullableCatalogsCurrency Currency { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupPricingCurrencyCriteria" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CatalogsProductGroupPricingCurrencyCriteria() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupPricingCurrencyCriteria" /> class.
        /// </summary>
        /// <param name="varOperator">varOperator (required).</param>
        /// <param name="value">value (required).</param>
        /// <param name="currency">currency (required).</param>
        /// <param name="negated">negated (default to false).</param>
        public CatalogsProductGroupPricingCurrencyCriteria(OperatorEnum varOperator = default(OperatorEnum), decimal value = default(decimal), NonNullableCatalogsCurrency currency = default(NonNullableCatalogsCurrency), bool negated = false)
        {
            this.Operator = varOperator;
            this.Value = value;
            this.Currency = currency;
            this.Negated = negated;
        }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", IsRequired = true, EmitDefaultValue = true)]
        public decimal Value { get; set; }

        /// <summary>
        /// Gets or Sets Negated
        /// </summary>
        [DataMember(Name = "negated", EmitDefaultValue = true)]
        public bool Negated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsProductGroupPricingCurrencyCriteria {\n");
            sb.Append("  Operator: ").Append(Operator).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  Negated: ").Append(Negated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Value (decimal) minimum
            if (this.Value < (decimal)0)
            {
                yield return new ValidationResult("Invalid value for Value, must be a value greater than or equal to 0.", new [] { "Value" });
            }

            yield break;
        }
    }

}
