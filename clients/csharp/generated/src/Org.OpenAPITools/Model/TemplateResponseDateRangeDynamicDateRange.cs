/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The dynamic date range of the template
    /// </summary>
    [DataContract(Name = "TemplateResponse_date_range_dynamic_date_range")]
    public partial class TemplateResponseDateRangeDynamicDateRange : IValidatableObject
    {
        /// <summary>
        /// The dynamic range type
        /// </summary>
        /// <value>The dynamic range type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RangeEnum
        {
            /// <summary>
            /// Enum YEARTODATE for value: YEAR_TO_DATE
            /// </summary>
            [EnumMember(Value = "YEAR_TO_DATE")]
            YEARTODATE = 1,

            /// <summary>
            /// Enum QUARTERTODATE for value: QUARTER_TO_DATE
            /// </summary>
            [EnumMember(Value = "QUARTER_TO_DATE")]
            QUARTERTODATE = 2,

            /// <summary>
            /// Enum MONTHTODATE for value: MONTH_TO_DATE
            /// </summary>
            [EnumMember(Value = "MONTH_TO_DATE")]
            MONTHTODATE = 3,

            /// <summary>
            /// Enum LASTMONTH for value: LAST_MONTH
            /// </summary>
            [EnumMember(Value = "LAST_MONTH")]
            LASTMONTH = 4
        }


        /// <summary>
        /// The dynamic range type
        /// </summary>
        /// <value>The dynamic range type</value>
        /*
        <example>YEAR_TO_DATE</example>
        */
        [DataMember(Name = "range", EmitDefaultValue = false)]
        public RangeEnum? Range { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateResponseDateRangeDynamicDateRange" /> class.
        /// </summary>
        /// <param name="type">The date range type.</param>
        /// <param name="range">The dynamic range type.</param>
        public TemplateResponseDateRangeDynamicDateRange(string type = default(string), RangeEnum? range = default(RangeEnum?))
        {
            this.Type = type;
            this.Range = range;
        }

        /// <summary>
        /// The date range type
        /// </summary>
        /// <value>The date range type</value>
        /*
        <example>dynamic</example>
        */
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TemplateResponseDateRangeDynamicDateRange {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Range: ").Append(Range).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
