/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AdPreviewCreateFromImage
    /// </summary>
    [DataContract(Name = "AdPreviewCreateFromImage")]
    public partial class AdPreviewCreateFromImage : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdPreviewCreateFromImage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AdPreviewCreateFromImage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AdPreviewCreateFromImage" /> class.
        /// </summary>
        /// <param name="imageUrl">Image URL. (required).</param>
        /// <param name="title">Title displayed below ad. (required).</param>
        public AdPreviewCreateFromImage(string imageUrl = default(string), string title = default(string))
        {
            // to ensure "imageUrl" is required (not null)
            if (imageUrl == null)
            {
                throw new ArgumentNullException("imageUrl is a required property for AdPreviewCreateFromImage and cannot be null");
            }
            this.ImageUrl = imageUrl;
            // to ensure "title" is required (not null)
            if (title == null)
            {
                throw new ArgumentNullException("title is a required property for AdPreviewCreateFromImage and cannot be null");
            }
            this.Title = title;
        }

        /// <summary>
        /// Image URL.
        /// </summary>
        /// <value>Image URL.</value>
        /*
        <example>https://somewebsite.com/someimage.jpg</example>
        */
        [DataMember(Name = "image_url", IsRequired = true, EmitDefaultValue = true)]
        public string ImageUrl { get; set; }

        /// <summary>
        /// Title displayed below ad.
        /// </summary>
        /// <value>Title displayed below ad.</value>
        /*
        <example>My Preview Image</example>
        */
        [DataMember(Name = "title", IsRequired = true, EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdPreviewCreateFromImage {\n");
            sb.Append("  ImageUrl: ").Append(ImageUrl).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
