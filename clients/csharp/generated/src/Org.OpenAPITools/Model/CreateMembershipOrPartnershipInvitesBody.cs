/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Body to be used on path to send Members or Partners Invite or Request
    /// </summary>
    [DataContract(Name = "CreateMembershipOrPartnershipInvitesBody")]
    public partial class CreateMembershipOrPartnershipInvitesBody : IValidatableObject
    {
        /// <summary>
        /// The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
        /// </summary>
        /// <value>The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum BusinessRoleEnum
        {
            /// <summary>
            /// Enum EMPLOYEE for value: EMPLOYEE
            /// </summary>
            [EnumMember(Value = "EMPLOYEE")]
            EMPLOYEE = 1,

            /// <summary>
            /// Enum BIZADMIN for value: BIZ_ADMIN
            /// </summary>
            [EnumMember(Value = "BIZ_ADMIN")]
            BIZADMIN = 2,

            /// <summary>
            /// Enum PARTNER for value: PARTNER
            /// </summary>
            [EnumMember(Value = "PARTNER")]
            PARTNER = 3
        }


        /// <summary>
        /// The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
        /// </summary>
        /// <value>The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.</value>
        /*
        <example>BIZ_ADMIN</example>
        */
        [DataMember(Name = "business_role", IsRequired = true, EmitDefaultValue = true)]
        public BusinessRoleEnum BusinessRole { get; set; }

        /// <summary>
        /// Gets or Sets InviteType
        /// </summary>
        [DataMember(Name = "invite_type", IsRequired = true, EmitDefaultValue = true)]
        public InviteType InviteType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMembershipOrPartnershipInvitesBody" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateMembershipOrPartnershipInvitesBody() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateMembershipOrPartnershipInvitesBody" /> class.
        /// </summary>
        /// <param name="businessRole">The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you. (required).</param>
        /// <param name="inviteType">inviteType (required).</param>
        /// <param name="members">A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE.</param>
        /// <param name="partners">A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST.</param>
        public CreateMembershipOrPartnershipInvitesBody(BusinessRoleEnum businessRole = default(BusinessRoleEnum), InviteType inviteType = default(InviteType), List<string> members = default(List<string>), List<string> partners = default(List<string>))
        {
            this.BusinessRole = businessRole;
            this.InviteType = inviteType;
            this.Members = members;
            this.Partners = partners;
        }

        /// <summary>
        /// A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE
        /// </summary>
        /// <value>A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE</value>
        /*
        <example>[&quot;business0101&quot;,&quot;user@business.com&quot;]</example>
        */
        [DataMember(Name = "members", EmitDefaultValue = false)]
        public List<string> Members { get; set; }

        /// <summary>
        /// A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST
        /// </summary>
        /// <value>A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST</value>
        /*
        <example>[&quot;809944451643622187&quot;,&quot;766456567741825556&quot;]</example>
        */
        [DataMember(Name = "partners", EmitDefaultValue = false)]
        public List<string> Partners { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateMembershipOrPartnershipInvitesBody {\n");
            sb.Append("  BusinessRole: ").Append(BusinessRole).Append("\n");
            sb.Append("  InviteType: ").Append(InviteType).Append("\n");
            sb.Append("  Members: ").Append(Members).Append("\n");
            sb.Append("  Partners: ").Append(Partners).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
