/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TopPinsAnalyticsResponseDateAvailability
    /// </summary>
    [DataContract(Name = "TopPinsAnalyticsResponse_date_availability")]
    public partial class TopPinsAnalyticsResponseDateAvailability : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TopPinsAnalyticsResponseDateAvailability" /> class.
        /// </summary>
        /// <param name="latestAvailableTimestamp">latestAvailableTimestamp.</param>
        /// <param name="isRealtime">isRealtime.</param>
        public TopPinsAnalyticsResponseDateAvailability(decimal latestAvailableTimestamp = default(decimal), bool isRealtime = default(bool))
        {
            this.LatestAvailableTimestamp = latestAvailableTimestamp;
            this.IsRealtime = isRealtime;
        }

        /// <summary>
        /// Gets or Sets LatestAvailableTimestamp
        /// </summary>
        /*
        <example>1649116799000</example>
        */
        [DataMember(Name = "latest_available_timestamp", EmitDefaultValue = false)]
        public decimal LatestAvailableTimestamp { get; set; }

        /// <summary>
        /// Gets or Sets IsRealtime
        /// </summary>
        /*
        <example>false</example>
        */
        [DataMember(Name = "is_realtime", EmitDefaultValue = true)]
        public bool IsRealtime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TopPinsAnalyticsResponseDateAvailability {\n");
            sb.Append("  LatestAvailableTimestamp: ").Append(LatestAvailableTimestamp).Append("\n");
            sb.Append("  IsRealtime: ").Append(IsRealtime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
