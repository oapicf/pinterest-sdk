/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Object containing other custom data.
    /// </summary>
    [DataContract(Name = "ConversionEvents_data_inner_custom_data")]
    public partial class ConversionEventsDataInnerCustomData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversionEventsDataInnerCustomData" /> class.
        /// </summary>
        /// <param name="currency">The ISO-4217 currency code. If not provided, we will default to the advertiser&#39;s currency set during account creation. Your campaign performance needs this field to report right ROAS/CPA..</param>
        /// <param name="value">Total value of the event. Accepted as a string in the request; it will be parsed into a double. For example, if there are two items in a checkout event, the value should be the total price. We recommend to use pre-tax, pre-shipping final value..</param>
        /// <param name="contentIds">List of products IDs. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section)..</param>
        /// <param name="contentName">The name of the page or product associated with the event..</param>
        /// <param name="contentCategory">The category of the content associated with the event..</param>
        /// <param name="contentBrand">The brand of the content associated with the event..</param>
        /// <param name="contents">A list of objects containing information about products, such as price and quantity. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section)..</param>
        /// <param name="numItems">Total number of products of the event. For example, the total number of items purchased in a checkout event. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section)..</param>
        /// <param name="orderId">The order ID. We recommend sending order_id to help us deduplicate events when necessary. This also helps to run other measurement products at Pinterest..</param>
        /// <param name="searchString">The search string related to the user conversion event..</param>
        /// <param name="optOutType">Flags for different privacy rights laws to opt out users of sharing personal information. Values should be comma separated. Please follow the &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/limited-data-processing\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Help Center&lt;/a&gt; and &lt;a href&#x3D;\&quot;/docs/api-features/conversion-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;dev site&lt;/a&gt; for specific opt_out_type set up..</param>
        /// <param name="np">Named partner. Not required, this is for Pinterest internal use only. Please do not use this unless specifically guided..</param>
        public ConversionEventsDataInnerCustomData(string currency = default(string), string value = default(string), List<string> contentIds = default(List<string>), string contentName = default(string), string contentCategory = default(string), string contentBrand = default(string), List<ConversionEventsDataInnerCustomDataContentsInner> contents = default(List<ConversionEventsDataInnerCustomDataContentsInner>), long numItems = default(long), string orderId = default(string), string searchString = default(string), string optOutType = default(string), string np = default(string))
        {
            this.Currency = currency;
            this.Value = value;
            this.ContentIds = contentIds;
            this.ContentName = contentName;
            this.ContentCategory = contentCategory;
            this.ContentBrand = contentBrand;
            this.Contents = contents;
            this.NumItems = numItems;
            this.OrderId = orderId;
            this.SearchString = searchString;
            this.OptOutType = optOutType;
            this.Np = np;
        }

        /// <summary>
        /// The ISO-4217 currency code. If not provided, we will default to the advertiser&#39;s currency set during account creation. Your campaign performance needs this field to report right ROAS/CPA.
        /// </summary>
        /// <value>The ISO-4217 currency code. If not provided, we will default to the advertiser&#39;s currency set during account creation. Your campaign performance needs this field to report right ROAS/CPA.</value>
        /*
        <example>USD</example>
        */
        [DataMember(Name = "currency", EmitDefaultValue = true)]
        public string Currency { get; set; }

        /// <summary>
        /// Total value of the event. Accepted as a string in the request; it will be parsed into a double. For example, if there are two items in a checkout event, the value should be the total price. We recommend to use pre-tax, pre-shipping final value.
        /// </summary>
        /// <value>Total value of the event. Accepted as a string in the request; it will be parsed into a double. For example, if there are two items in a checkout event, the value should be the total price. We recommend to use pre-tax, pre-shipping final value.</value>
        /*
        <example>72.39</example>
        */
        [DataMember(Name = "value", EmitDefaultValue = true)]
        public string Value { get; set; }

        /// <summary>
        /// List of products IDs. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
        /// </summary>
        /// <value>List of products IDs. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).</value>
        /*
        <example>[&quot;red-pinterest-shirt-logo-1&quot;,&quot;purple-pinterest-shirt-logo-3&quot;]</example>
        */
        [DataMember(Name = "content_ids", EmitDefaultValue = false)]
        public List<string> ContentIds { get; set; }

        /// <summary>
        /// The name of the page or product associated with the event.
        /// </summary>
        /// <value>The name of the page or product associated with the event.</value>
        /*
        <example>pinterest-themed-clothing</example>
        */
        [DataMember(Name = "content_name", EmitDefaultValue = true)]
        public string ContentName { get; set; }

        /// <summary>
        /// The category of the content associated with the event.
        /// </summary>
        /// <value>The category of the content associated with the event.</value>
        /*
        <example>shirts</example>
        */
        [DataMember(Name = "content_category", EmitDefaultValue = true)]
        public string ContentCategory { get; set; }

        /// <summary>
        /// The brand of the content associated with the event.
        /// </summary>
        /// <value>The brand of the content associated with the event.</value>
        /*
        <example>pinterest-brand</example>
        */
        [DataMember(Name = "content_brand", EmitDefaultValue = true)]
        public string ContentBrand { get; set; }

        /// <summary>
        /// A list of objects containing information about products, such as price and quantity. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
        /// </summary>
        /// <value>A list of objects containing information about products, such as price and quantity. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).</value>
        [DataMember(Name = "contents", EmitDefaultValue = false)]
        public List<ConversionEventsDataInnerCustomDataContentsInner> Contents { get; set; }

        /// <summary>
        /// Total number of products of the event. For example, the total number of items purchased in a checkout event. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
        /// </summary>
        /// <value>Total number of products of the event. For example, the total number of items purchased in a checkout event. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).</value>
        /*
        <example>2</example>
        */
        [DataMember(Name = "num_items", EmitDefaultValue = false)]
        public long NumItems { get; set; }

        /// <summary>
        /// The order ID. We recommend sending order_id to help us deduplicate events when necessary. This also helps to run other measurement products at Pinterest.
        /// </summary>
        /// <value>The order ID. We recommend sending order_id to help us deduplicate events when necessary. This also helps to run other measurement products at Pinterest.</value>
        /*
        <example>my_order_id</example>
        */
        [DataMember(Name = "order_id", EmitDefaultValue = true)]
        public string OrderId { get; set; }

        /// <summary>
        /// The search string related to the user conversion event.
        /// </summary>
        /// <value>The search string related to the user conversion event.</value>
        /*
        <example>sample string</example>
        */
        [DataMember(Name = "search_string", EmitDefaultValue = true)]
        public string SearchString { get; set; }

        /// <summary>
        /// Flags for different privacy rights laws to opt out users of sharing personal information. Values should be comma separated. Please follow the &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/limited-data-processing\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Help Center&lt;/a&gt; and &lt;a href&#x3D;\&quot;/docs/api-features/conversion-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;dev site&lt;/a&gt; for specific opt_out_type set up.
        /// </summary>
        /// <value>Flags for different privacy rights laws to opt out users of sharing personal information. Values should be comma separated. Please follow the &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/limited-data-processing\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Help Center&lt;/a&gt; and &lt;a href&#x3D;\&quot;/docs/api-features/conversion-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;dev site&lt;/a&gt; for specific opt_out_type set up.</value>
        /*
        <example>LDP</example>
        */
        [DataMember(Name = "opt_out_type", EmitDefaultValue = true)]
        public string OptOutType { get; set; }

        /// <summary>
        /// Named partner. Not required, this is for Pinterest internal use only. Please do not use this unless specifically guided.
        /// </summary>
        /// <value>Named partner. Not required, this is for Pinterest internal use only. Please do not use this unless specifically guided.</value>
        /*
        <example>ss-company</example>
        */
        [DataMember(Name = "np", EmitDefaultValue = true)]
        public string Np { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConversionEventsDataInnerCustomData {\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  ContentIds: ").Append(ContentIds).Append("\n");
            sb.Append("  ContentName: ").Append(ContentName).Append("\n");
            sb.Append("  ContentCategory: ").Append(ContentCategory).Append("\n");
            sb.Append("  ContentBrand: ").Append(ContentBrand).Append("\n");
            sb.Append("  Contents: ").Append(Contents).Append("\n");
            sb.Append("  NumItems: ").Append(NumItems).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  SearchString: ").Append(SearchString).Append("\n");
            sb.Append("  OptOutType: ").Append(OptOutType).Append("\n");
            sb.Append("  Np: ").Append(Np).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
