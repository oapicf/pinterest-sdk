/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The result, and link out, based on the userâ€™s choice.
    /// </summary>
    [DataContract(Name = "QuizPinResult")]
    public partial class QuizPinResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuizPinResult" /> class.
        /// </summary>
        /// <param name="organicPinId">organicPinId.</param>
        /// <param name="androidDeepLink">androidDeepLink.</param>
        /// <param name="iosDeepLink">iosDeepLink.</param>
        /// <param name="destinationUrl">destinationUrl.</param>
        /// <param name="resultId">resultId.</param>
        public QuizPinResult(string organicPinId = default(string), string androidDeepLink = default(string), string iosDeepLink = default(string), string destinationUrl = default(string), decimal resultId = default(decimal))
        {
            this.OrganicPinId = organicPinId;
            this.AndroidDeepLink = androidDeepLink;
            this.IosDeepLink = iosDeepLink;
            this.DestinationUrl = destinationUrl;
            this.ResultId = resultId;
        }

        /// <summary>
        /// Gets or Sets OrganicPinId
        /// </summary>
        [DataMember(Name = "organic_pin_id", EmitDefaultValue = false)]
        public string OrganicPinId { get; set; }

        /// <summary>
        /// Gets or Sets AndroidDeepLink
        /// </summary>
        [DataMember(Name = "android_deep_link", EmitDefaultValue = false)]
        public string AndroidDeepLink { get; set; }

        /// <summary>
        /// Gets or Sets IosDeepLink
        /// </summary>
        [DataMember(Name = "ios_deep_link", EmitDefaultValue = false)]
        public string IosDeepLink { get; set; }

        /// <summary>
        /// Gets or Sets DestinationUrl
        /// </summary>
        [DataMember(Name = "destination_url", EmitDefaultValue = false)]
        public string DestinationUrl { get; set; }

        /// <summary>
        /// Gets or Sets ResultId
        /// </summary>
        [DataMember(Name = "result_id", EmitDefaultValue = false)]
        public decimal ResultId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QuizPinResult {\n");
            sb.Append("  OrganicPinId: ").Append(OrganicPinId).Append("\n");
            sb.Append("  AndroidDeepLink: ").Append(AndroidDeepLink).Append("\n");
            sb.Append("  IosDeepLink: ").Append(IosDeepLink).Append("\n");
            sb.Append("  DestinationUrl: ").Append(DestinationUrl).Append("\n");
            sb.Append("  ResultId: ").Append(ResultId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
