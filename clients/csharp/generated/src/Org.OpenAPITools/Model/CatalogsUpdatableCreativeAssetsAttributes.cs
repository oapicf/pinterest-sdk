/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsUpdatableCreativeAssetsAttributes
    /// </summary>
    [DataContract(Name = "CatalogsUpdatableCreativeAssetsAttributes")]
    public partial class CatalogsUpdatableCreativeAssetsAttributes : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsUpdatableCreativeAssetsAttributes" /> class.
        /// </summary>
        /// <param name="title">The name of the creative assets..</param>
        /// <param name="description">Brief description of the creative assets..</param>
        /// <param name="link">Link to the creative assets page..</param>
        /// <param name="iosDeepLink">IOS deep link to the creative assets page..</param>
        /// <param name="androidDeepLink">Link to the creative assets page..</param>
        /// <param name="googleProductCategory">The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted..</param>
        /// <param name="customLabel0">Custom grouping of creative assets..</param>
        /// <param name="customLabel1">Custom grouping of creative assets..</param>
        /// <param name="customLabel2">Custom grouping of creative assets..</param>
        /// <param name="customLabel3">Custom grouping of creative assets..</param>
        /// <param name="customLabel4">Custom grouping of creative assets..</param>
        /// <param name="visibility">Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’..</param>
        public CatalogsUpdatableCreativeAssetsAttributes(string title = default(string), string description = default(string), string link = default(string), string iosDeepLink = default(string), string androidDeepLink = default(string), string googleProductCategory = default(string), string customLabel0 = default(string), string customLabel1 = default(string), string customLabel2 = default(string), string customLabel3 = default(string), string customLabel4 = default(string), string visibility = default(string))
        {
            this.Title = title;
            this.Description = description;
            this.Link = link;
            this.IosDeepLink = iosDeepLink;
            this.AndroidDeepLink = androidDeepLink;
            this.GoogleProductCategory = googleProductCategory;
            this.CustomLabel0 = customLabel0;
            this.CustomLabel1 = customLabel1;
            this.CustomLabel2 = customLabel2;
            this.CustomLabel3 = customLabel3;
            this.CustomLabel4 = customLabel4;
            this.Visibility = visibility;
        }

        /// <summary>
        /// The name of the creative assets.
        /// </summary>
        /// <value>The name of the creative assets.</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Brief description of the creative assets.
        /// </summary>
        /// <value>Brief description of the creative assets.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Link to the creative assets page.
        /// </summary>
        /// <value>Link to the creative assets page.</value>
        [DataMember(Name = "link", EmitDefaultValue = false)]
        public string Link { get; set; }

        /// <summary>
        /// IOS deep link to the creative assets page.
        /// </summary>
        /// <value>IOS deep link to the creative assets page.</value>
        [DataMember(Name = "ios_deep_link", EmitDefaultValue = true)]
        public string IosDeepLink { get; set; }

        /// <summary>
        /// Link to the creative assets page.
        /// </summary>
        /// <value>Link to the creative assets page.</value>
        [DataMember(Name = "android_deep_link", EmitDefaultValue = true)]
        public string AndroidDeepLink { get; set; }

        /// <summary>
        /// The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
        /// </summary>
        /// <value>The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.</value>
        [DataMember(Name = "google_product_category", EmitDefaultValue = true)]
        public string GoogleProductCategory { get; set; }

        /// <summary>
        /// Custom grouping of creative assets.
        /// </summary>
        /// <value>Custom grouping of creative assets.</value>
        [DataMember(Name = "custom_label_0", EmitDefaultValue = true)]
        public string CustomLabel0 { get; set; }

        /// <summary>
        /// Custom grouping of creative assets.
        /// </summary>
        /// <value>Custom grouping of creative assets.</value>
        [DataMember(Name = "custom_label_1", EmitDefaultValue = true)]
        public string CustomLabel1 { get; set; }

        /// <summary>
        /// Custom grouping of creative assets.
        /// </summary>
        /// <value>Custom grouping of creative assets.</value>
        [DataMember(Name = "custom_label_2", EmitDefaultValue = true)]
        public string CustomLabel2 { get; set; }

        /// <summary>
        /// Custom grouping of creative assets.
        /// </summary>
        /// <value>Custom grouping of creative assets.</value>
        [DataMember(Name = "custom_label_3", EmitDefaultValue = true)]
        public string CustomLabel3 { get; set; }

        /// <summary>
        /// Custom grouping of creative assets.
        /// </summary>
        /// <value>Custom grouping of creative assets.</value>
        [DataMember(Name = "custom_label_4", EmitDefaultValue = true)]
        public string CustomLabel4 { get; set; }

        /// <summary>
        /// Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.
        /// </summary>
        /// <value>Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.</value>
        [DataMember(Name = "visibility", EmitDefaultValue = true)]
        public string Visibility { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsUpdatableCreativeAssetsAttributes {\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  IosDeepLink: ").Append(IosDeepLink).Append("\n");
            sb.Append("  AndroidDeepLink: ").Append(AndroidDeepLink).Append("\n");
            sb.Append("  GoogleProductCategory: ").Append(GoogleProductCategory).Append("\n");
            sb.Append("  CustomLabel0: ").Append(CustomLabel0).Append("\n");
            sb.Append("  CustomLabel1: ").Append(CustomLabel1).Append("\n");
            sb.Append("  CustomLabel2: ").Append(CustomLabel2).Append("\n");
            sb.Append("  CustomLabel3: ").Append(CustomLabel3).Append("\n");
            sb.Append("  CustomLabel4: ").Append(CustomLabel4).Append("\n");
            sb.Append("  Visibility: ").Append(Visibility).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
