/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsFeedIngestionErrors
    /// </summary>
    [DataContract(Name = "CatalogsFeedIngestionErrors")]
    public partial class CatalogsFeedIngestionErrors : IValidatableObject
    {
        /// <summary>
        /// The product count has decreased by more than 99% compared to the last successful ingestion.
        /// </summary>
        /// <value>The product count has decreased by more than 99% compared to the last successful ingestion.</value>
        public enum LARGEPRODUCTCOUNTDECREASEEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1
        }


        /// <summary>
        /// The product count has decreased by more than 99% compared to the last successful ingestion.
        /// </summary>
        /// <value>The product count has decreased by more than 99% compared to the last successful ingestion.</value>
        [DataMember(Name = "LARGE_PRODUCT_COUNT_DECREASE", EmitDefaultValue = false)]
        public LARGEPRODUCTCOUNTDECREASEEnum? LARGE_PRODUCT_COUNT_DECREASE { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsFeedIngestionErrors" /> class.
        /// </summary>
        /// <param name="lINELEVELINTERNALERROR">We experienced a technical difficulty and were unable to ingest this some items. The next ingestion will happen in 24 hours..</param>
        /// <param name="lARGEPRODUCTCOUNTDECREASE">The product count has decreased by more than 99% compared to the last successful ingestion..</param>
        /// <param name="aCCOUNTFLAGGED">We detected an issue with your account and are not currently ingesting your items. Please review our policies at policy.pinterest.com/community-guidelines#section-spam or contact us at help.pinterest.com/contact for more information..</param>
        /// <param name="iMAGELEVELINTERNALERROR">We experienced a technical difficulty and were unable to download some images. The next download attempt will happen in 24 hours..</param>
        /// <param name="iMAGEFILENOTACCESSIBLE">Image files are unreadable. Please upload new files to continue..</param>
        /// <param name="iMAGEMALFORMEDURL">Image files are unreadable. Please check your link and upload new files to continue..</param>
        /// <param name="iMAGEFILENOTFOUND">Image files are unreadable. Please upload new files to continue..</param>
        /// <param name="iMAGEINVALIDFILE">Image files are unreadable. Please upload new files to continue..</param>
        public CatalogsFeedIngestionErrors(int lINELEVELINTERNALERROR = default(int), LARGEPRODUCTCOUNTDECREASEEnum? lARGEPRODUCTCOUNTDECREASE = default(LARGEPRODUCTCOUNTDECREASEEnum?), int aCCOUNTFLAGGED = default(int), int iMAGELEVELINTERNALERROR = default(int), int iMAGEFILENOTACCESSIBLE = default(int), int iMAGEMALFORMEDURL = default(int), int iMAGEFILENOTFOUND = default(int), int iMAGEINVALIDFILE = default(int))
        {
            this.LINE_LEVEL_INTERNAL_ERROR = lINELEVELINTERNALERROR;
            this.LARGE_PRODUCT_COUNT_DECREASE = lARGEPRODUCTCOUNTDECREASE;
            this.ACCOUNT_FLAGGED = aCCOUNTFLAGGED;
            this.IMAGE_LEVEL_INTERNAL_ERROR = iMAGELEVELINTERNALERROR;
            this.IMAGE_FILE_NOT_ACCESSIBLE = iMAGEFILENOTACCESSIBLE;
            this.IMAGE_MALFORMED_URL = iMAGEMALFORMEDURL;
            this.IMAGE_FILE_NOT_FOUND = iMAGEFILENOTFOUND;
            this.IMAGE_INVALID_FILE = iMAGEINVALIDFILE;
        }

        /// <summary>
        /// We experienced a technical difficulty and were unable to ingest this some items. The next ingestion will happen in 24 hours.
        /// </summary>
        /// <value>We experienced a technical difficulty and were unable to ingest this some items. The next ingestion will happen in 24 hours.</value>
        [DataMember(Name = "LINE_LEVEL_INTERNAL_ERROR", EmitDefaultValue = false)]
        public int LINE_LEVEL_INTERNAL_ERROR { get; set; }

        /// <summary>
        /// We detected an issue with your account and are not currently ingesting your items. Please review our policies at policy.pinterest.com/community-guidelines#section-spam or contact us at help.pinterest.com/contact for more information.
        /// </summary>
        /// <value>We detected an issue with your account and are not currently ingesting your items. Please review our policies at policy.pinterest.com/community-guidelines#section-spam or contact us at help.pinterest.com/contact for more information.</value>
        [DataMember(Name = "ACCOUNT_FLAGGED", EmitDefaultValue = false)]
        public int ACCOUNT_FLAGGED { get; set; }

        /// <summary>
        /// We experienced a technical difficulty and were unable to download some images. The next download attempt will happen in 24 hours.
        /// </summary>
        /// <value>We experienced a technical difficulty and were unable to download some images. The next download attempt will happen in 24 hours.</value>
        [DataMember(Name = "IMAGE_LEVEL_INTERNAL_ERROR", EmitDefaultValue = false)]
        public int IMAGE_LEVEL_INTERNAL_ERROR { get; set; }

        /// <summary>
        /// Image files are unreadable. Please upload new files to continue.
        /// </summary>
        /// <value>Image files are unreadable. Please upload new files to continue.</value>
        [DataMember(Name = "IMAGE_FILE_NOT_ACCESSIBLE", EmitDefaultValue = false)]
        public int IMAGE_FILE_NOT_ACCESSIBLE { get; set; }

        /// <summary>
        /// Image files are unreadable. Please check your link and upload new files to continue.
        /// </summary>
        /// <value>Image files are unreadable. Please check your link and upload new files to continue.</value>
        [DataMember(Name = "IMAGE_MALFORMED_URL", EmitDefaultValue = false)]
        public int IMAGE_MALFORMED_URL { get; set; }

        /// <summary>
        /// Image files are unreadable. Please upload new files to continue.
        /// </summary>
        /// <value>Image files are unreadable. Please upload new files to continue.</value>
        [DataMember(Name = "IMAGE_FILE_NOT_FOUND", EmitDefaultValue = false)]
        public int IMAGE_FILE_NOT_FOUND { get; set; }

        /// <summary>
        /// Image files are unreadable. Please upload new files to continue.
        /// </summary>
        /// <value>Image files are unreadable. Please upload new files to continue.</value>
        [DataMember(Name = "IMAGE_INVALID_FILE", EmitDefaultValue = false)]
        public int IMAGE_INVALID_FILE { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsFeedIngestionErrors {\n");
            sb.Append("  LINE_LEVEL_INTERNAL_ERROR: ").Append(LINE_LEVEL_INTERNAL_ERROR).Append("\n");
            sb.Append("  LARGE_PRODUCT_COUNT_DECREASE: ").Append(LARGE_PRODUCT_COUNT_DECREASE).Append("\n");
            sb.Append("  ACCOUNT_FLAGGED: ").Append(ACCOUNT_FLAGGED).Append("\n");
            sb.Append("  IMAGE_LEVEL_INTERNAL_ERROR: ").Append(IMAGE_LEVEL_INTERNAL_ERROR).Append("\n");
            sb.Append("  IMAGE_FILE_NOT_ACCESSIBLE: ").Append(IMAGE_FILE_NOT_ACCESSIBLE).Append("\n");
            sb.Append("  IMAGE_MALFORMED_URL: ").Append(IMAGE_MALFORMED_URL).Append("\n");
            sb.Append("  IMAGE_FILE_NOT_FOUND: ").Append(IMAGE_FILE_NOT_FOUND).Append("\n");
            sb.Append("  IMAGE_INVALID_FILE: ").Append(IMAGE_INVALID_FILE).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
