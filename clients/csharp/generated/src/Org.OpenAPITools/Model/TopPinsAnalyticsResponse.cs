/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TopPinsAnalyticsResponse
    /// </summary>
    [DataContract(Name = "TopPinsAnalyticsResponse")]
    public partial class TopPinsAnalyticsResponse : IValidatableObject
    {
        /// <summary>
        /// Defines SortBy
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SortByEnum
        {
            /// <summary>
            /// Enum ENGAGEMENT for value: ENGAGEMENT
            /// </summary>
            [EnumMember(Value = "ENGAGEMENT")]
            ENGAGEMENT = 1,

            /// <summary>
            /// Enum SAVE for value: SAVE
            /// </summary>
            [EnumMember(Value = "SAVE")]
            SAVE = 2,

            /// <summary>
            /// Enum IMPRESSION for value: IMPRESSION
            /// </summary>
            [EnumMember(Value = "IMPRESSION")]
            IMPRESSION = 3,

            /// <summary>
            /// Enum OUTBOUNDCLICK for value: OUTBOUND_CLICK
            /// </summary>
            [EnumMember(Value = "OUTBOUND_CLICK")]
            OUTBOUNDCLICK = 4,

            /// <summary>
            /// Enum PINCLICK for value: PIN_CLICK
            /// </summary>
            [EnumMember(Value = "PIN_CLICK")]
            PINCLICK = 5
        }


        /// <summary>
        /// Gets or Sets SortBy
        /// </summary>
        /*
        <example>IMPRESSION</example>
        */
        [DataMember(Name = "sort_by", EmitDefaultValue = false)]
        public SortByEnum? SortBy { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TopPinsAnalyticsResponse" /> class.
        /// </summary>
        /// <param name="dateAvailability">dateAvailability.</param>
        /// <param name="pins">pins.</param>
        /// <param name="sortBy">sortBy.</param>
        public TopPinsAnalyticsResponse(TopPinsAnalyticsResponseDateAvailability dateAvailability = default(TopPinsAnalyticsResponseDateAvailability), List<TopPinsAnalyticsResponsePinsInner> pins = default(List<TopPinsAnalyticsResponsePinsInner>), SortByEnum? sortBy = default(SortByEnum?))
        {
            this.DateAvailability = dateAvailability;
            this.Pins = pins;
            this.SortBy = sortBy;
        }

        /// <summary>
        /// Gets or Sets DateAvailability
        /// </summary>
        [DataMember(Name = "date_availability", EmitDefaultValue = false)]
        public TopPinsAnalyticsResponseDateAvailability DateAvailability { get; set; }

        /// <summary>
        /// Gets or Sets Pins
        /// </summary>
        [DataMember(Name = "pins", EmitDefaultValue = false)]
        public List<TopPinsAnalyticsResponsePinsInner> Pins { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TopPinsAnalyticsResponse {\n");
            sb.Append("  DateAvailability: ").Append(DateAvailability).Append("\n");
            sb.Append("  Pins: ").Append(Pins).Append("\n");
            sb.Append("  SortBy: ").Append(SortBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
