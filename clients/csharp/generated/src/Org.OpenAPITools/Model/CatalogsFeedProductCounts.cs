/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The counts can be null early in the process.
    /// </summary>
    [DataContract(Name = "CatalogsFeedProductCounts")]
    public partial class CatalogsFeedProductCounts : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsFeedProductCounts" /> class.
        /// </summary>
        /// <param name="original">The number of products in the feed file..</param>
        /// <param name="ingested">The number of products successfully ingested from the feed file..</param>
        public CatalogsFeedProductCounts(int original = default(int), int ingested = default(int))
        {
            this.Original = original;
            this.Ingested = ingested;
        }

        /// <summary>
        /// The number of products in the feed file.
        /// </summary>
        /// <value>The number of products in the feed file.</value>
        [DataMember(Name = "original", EmitDefaultValue = false)]
        public int Original { get; set; }

        /// <summary>
        /// The number of products successfully ingested from the feed file.
        /// </summary>
        /// <value>The number of products successfully ingested from the feed file.</value>
        [DataMember(Name = "ingested", EmitDefaultValue = false)]
        public int Ingested { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsFeedProductCounts {\n");
            sb.Append("  Original: ").Append(Original).Append("\n");
            sb.Append("  Ingested: ").Append(Ingested).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
