/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// LineItem
    /// </summary>
    [DataContract(Name = "LineItem")]
    public partial class LineItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LineItem" /> class.
        /// </summary>
        /// <param name="productBrand">Product brand. For example, \&quot;Parker\&quot;..</param>
        /// <param name="productCategory">Product category. For example, \&quot;Shoes\&quot;..</param>
        /// <param name="productId">Product ID. For example, 1414..</param>
        /// <param name="productName">Product name. For example, \&quot;Parker Boots\&quot;..</param>
        /// <param name="productPrice">Product price. For example, \&quot;99.99\&quot;..</param>
        /// <param name="productQuantity">Product quantity. For example, 2..</param>
        /// <param name="productVariant">Product variant. For example, \&quot;Red\&quot;..</param>
        /// <param name="productVariantId">Product variant ID. For example, \&quot;1414-34832\&quot;..</param>
        public LineItem(string productBrand = default(string), string productCategory = default(string), int productId = default(int), string productName = default(string), string productPrice = default(string), int productQuantity = default(int), string productVariant = default(string), string productVariantId = default(string))
        {
            this.ProductBrand = productBrand;
            this.ProductCategory = productCategory;
            this.ProductId = productId;
            this.ProductName = productName;
            this.ProductPrice = productPrice;
            this.ProductQuantity = productQuantity;
            this.ProductVariant = productVariant;
            this.ProductVariantId = productVariantId;
        }

        /// <summary>
        /// Product brand. For example, \&quot;Parker\&quot;.
        /// </summary>
        /// <value>Product brand. For example, \&quot;Parker\&quot;.</value>
        /*
        <example>Parker</example>
        */
        [DataMember(Name = "product_brand", EmitDefaultValue = false)]
        public string ProductBrand { get; set; }

        /// <summary>
        /// Product category. For example, \&quot;Shoes\&quot;.
        /// </summary>
        /// <value>Product category. For example, \&quot;Shoes\&quot;.</value>
        /*
        <example>Shoes</example>
        */
        [DataMember(Name = "product_category", EmitDefaultValue = false)]
        public string ProductCategory { get; set; }

        /// <summary>
        /// Product ID. For example, 1414.
        /// </summary>
        /// <value>Product ID. For example, 1414.</value>
        /*
        <example>1414</example>
        */
        [DataMember(Name = "product_id", EmitDefaultValue = false)]
        public int ProductId { get; set; }

        /// <summary>
        /// Product name. For example, \&quot;Parker Boots\&quot;.
        /// </summary>
        /// <value>Product name. For example, \&quot;Parker Boots\&quot;.</value>
        /*
        <example>Parker Boots</example>
        */
        [DataMember(Name = "product_name", EmitDefaultValue = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Product price. For example, \&quot;99.99\&quot;.
        /// </summary>
        /// <value>Product price. For example, \&quot;99.99\&quot;.</value>
        /*
        <example>99.99</example>
        */
        [DataMember(Name = "product_price", EmitDefaultValue = false)]
        public string ProductPrice { get; set; }

        /// <summary>
        /// Product quantity. For example, 2.
        /// </summary>
        /// <value>Product quantity. For example, 2.</value>
        /*
        <example>2</example>
        */
        [DataMember(Name = "product_quantity", EmitDefaultValue = false)]
        public int ProductQuantity { get; set; }

        /// <summary>
        /// Product variant. For example, \&quot;Red\&quot;.
        /// </summary>
        /// <value>Product variant. For example, \&quot;Red\&quot;.</value>
        /*
        <example>Red</example>
        */
        [DataMember(Name = "product_variant", EmitDefaultValue = false)]
        public string ProductVariant { get; set; }

        /// <summary>
        /// Product variant ID. For example, \&quot;1414-34832\&quot;.
        /// </summary>
        /// <value>Product variant ID. For example, \&quot;1414-34832\&quot;.</value>
        /*
        <example>1414-34832</example>
        */
        [DataMember(Name = "product_variant_id", EmitDefaultValue = false)]
        public string ProductVariantId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LineItem {\n");
            sb.Append("  ProductBrand: ").Append(ProductBrand).Append("\n");
            sb.Append("  ProductCategory: ").Append(ProductCategory).Append("\n");
            sb.Append("  ProductId: ").Append(ProductId).Append("\n");
            sb.Append("  ProductName: ").Append(ProductName).Append("\n");
            sb.Append("  ProductPrice: ").Append(ProductPrice).Append("\n");
            sb.Append("  ProductQuantity: ").Append(ProductQuantity).Append("\n");
            sb.Append("  ProductVariant: ").Append(ProductVariant).Append("\n");
            sb.Append("  ProductVariantId: ").Append(ProductVariantId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
