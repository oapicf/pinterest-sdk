/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;
using System.Reflection;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CatalogsProductGroupFilterKeys
    /// </summary>
    [JsonConverter(typeof(CatalogsProductGroupFilterKeysJsonConverter))]
    [DataContract(Name = "CatalogsProductGroupFilterKeys")]
    public partial class CatalogsProductGroupFilterKeys : AbstractOpenAPISchema, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="MinPriceFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of MinPriceFilter.</param>
        public CatalogsProductGroupFilterKeys(MinPriceFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="MaxPriceFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of MaxPriceFilter.</param>
        public CatalogsProductGroupFilterKeys(MaxPriceFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="CurrencyFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CurrencyFilter.</param>
        public CatalogsProductGroupFilterKeys(CurrencyFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ItemIdFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ItemIdFilter.</param>
        public CatalogsProductGroupFilterKeys(ItemIdFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="AvailabilityFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AvailabilityFilter.</param>
        public CatalogsProductGroupFilterKeys(AvailabilityFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="BrandFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of BrandFilter.</param>
        public CatalogsProductGroupFilterKeys(BrandFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ConditionFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ConditionFilter.</param>
        public CatalogsProductGroupFilterKeys(ConditionFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="CustomLabel0Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomLabel0Filter.</param>
        public CatalogsProductGroupFilterKeys(CustomLabel0Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="CustomLabel1Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomLabel1Filter.</param>
        public CatalogsProductGroupFilterKeys(CustomLabel1Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="CustomLabel2Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomLabel2Filter.</param>
        public CatalogsProductGroupFilterKeys(CustomLabel2Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="CustomLabel3Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomLabel3Filter.</param>
        public CatalogsProductGroupFilterKeys(CustomLabel3Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="CustomLabel4Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CustomLabel4Filter.</param>
        public CatalogsProductGroupFilterKeys(CustomLabel4Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ItemGroupIdFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ItemGroupIdFilter.</param>
        public CatalogsProductGroupFilterKeys(ItemGroupIdFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GenderFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GenderFilter.</param>
        public CatalogsProductGroupFilterKeys(GenderFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="MediaTypeFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of MediaTypeFilter.</param>
        public CatalogsProductGroupFilterKeys(MediaTypeFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ProductType4Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ProductType4Filter.</param>
        public CatalogsProductGroupFilterKeys(ProductType4Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ProductType3Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ProductType3Filter.</param>
        public CatalogsProductGroupFilterKeys(ProductType3Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ProductType2Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ProductType2Filter.</param>
        public CatalogsProductGroupFilterKeys(ProductType2Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ProductType1Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ProductType1Filter.</param>
        public CatalogsProductGroupFilterKeys(ProductType1Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ProductType0Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ProductType0Filter.</param>
        public CatalogsProductGroupFilterKeys(ProductType0Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory6Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory6Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory6Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory5Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory5Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory5Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory4Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory4Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory4Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory3Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory3Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory3Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory2Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory2Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory2Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory1Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory1Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory1Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="GoogleProductCategory0Filter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GoogleProductCategory0Filter.</param>
        public CatalogsProductGroupFilterKeys(GoogleProductCategory0Filter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsProductGroupFilterKeys" /> class
        /// with the <see cref="ProductGroupReferenceFilter" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ProductGroupReferenceFilter.</param>
        public CatalogsProductGroupFilterKeys(ProductGroupReferenceFilter actualInstance)
        {
            IsNullable = false;
            SchemaType= "anyOf";
            ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }


        private Object _actualInstance;

        /// <summary>
        /// Gets or Sets ActualInstance
        /// </summary>
        public override Object ActualInstance
        {
            get
            {
                return _actualInstance;
            }
            set
            {
                if (value.GetType() == typeof(AvailabilityFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(BrandFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ConditionFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(CurrencyFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomLabel0Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomLabel1Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomLabel2Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomLabel3Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(CustomLabel4Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GenderFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory0Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory1Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory2Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory3Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory4Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory5Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(GoogleProductCategory6Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ItemGroupIdFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ItemIdFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(MaxPriceFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(MediaTypeFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(MinPriceFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ProductGroupReferenceFilter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ProductType0Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ProductType1Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ProductType2Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ProductType3Filter))
                {
                    _actualInstance = value;
                }
                else if (value.GetType() == typeof(ProductType4Filter))
                {
                    _actualInstance = value;
                }
                else
                {
                    throw new ArgumentException("Invalid instance found. Must be the following types: AvailabilityFilter, BrandFilter, ConditionFilter, CurrencyFilter, CustomLabel0Filter, CustomLabel1Filter, CustomLabel2Filter, CustomLabel3Filter, CustomLabel4Filter, GenderFilter, GoogleProductCategory0Filter, GoogleProductCategory1Filter, GoogleProductCategory2Filter, GoogleProductCategory3Filter, GoogleProductCategory4Filter, GoogleProductCategory5Filter, GoogleProductCategory6Filter, ItemGroupIdFilter, ItemIdFilter, MaxPriceFilter, MediaTypeFilter, MinPriceFilter, ProductGroupReferenceFilter, ProductType0Filter, ProductType1Filter, ProductType2Filter, ProductType3Filter, ProductType4Filter");
                }
            }
        }

        /// <summary>
        /// Get the actual instance of `MinPriceFilter`. If the actual instance is not `MinPriceFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of MinPriceFilter</returns>
        public MinPriceFilter GetMinPriceFilter()
        {
            return (MinPriceFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `MaxPriceFilter`. If the actual instance is not `MaxPriceFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of MaxPriceFilter</returns>
        public MaxPriceFilter GetMaxPriceFilter()
        {
            return (MaxPriceFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CurrencyFilter`. If the actual instance is not `CurrencyFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CurrencyFilter</returns>
        public CurrencyFilter GetCurrencyFilter()
        {
            return (CurrencyFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ItemIdFilter`. If the actual instance is not `ItemIdFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ItemIdFilter</returns>
        public ItemIdFilter GetItemIdFilter()
        {
            return (ItemIdFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AvailabilityFilter`. If the actual instance is not `AvailabilityFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AvailabilityFilter</returns>
        public AvailabilityFilter GetAvailabilityFilter()
        {
            return (AvailabilityFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `BrandFilter`. If the actual instance is not `BrandFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of BrandFilter</returns>
        public BrandFilter GetBrandFilter()
        {
            return (BrandFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ConditionFilter`. If the actual instance is not `ConditionFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ConditionFilter</returns>
        public ConditionFilter GetConditionFilter()
        {
            return (ConditionFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomLabel0Filter`. If the actual instance is not `CustomLabel0Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomLabel0Filter</returns>
        public CustomLabel0Filter GetCustomLabel0Filter()
        {
            return (CustomLabel0Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomLabel1Filter`. If the actual instance is not `CustomLabel1Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomLabel1Filter</returns>
        public CustomLabel1Filter GetCustomLabel1Filter()
        {
            return (CustomLabel1Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomLabel2Filter`. If the actual instance is not `CustomLabel2Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomLabel2Filter</returns>
        public CustomLabel2Filter GetCustomLabel2Filter()
        {
            return (CustomLabel2Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomLabel3Filter`. If the actual instance is not `CustomLabel3Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomLabel3Filter</returns>
        public CustomLabel3Filter GetCustomLabel3Filter()
        {
            return (CustomLabel3Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `CustomLabel4Filter`. If the actual instance is not `CustomLabel4Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CustomLabel4Filter</returns>
        public CustomLabel4Filter GetCustomLabel4Filter()
        {
            return (CustomLabel4Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ItemGroupIdFilter`. If the actual instance is not `ItemGroupIdFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ItemGroupIdFilter</returns>
        public ItemGroupIdFilter GetItemGroupIdFilter()
        {
            return (ItemGroupIdFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GenderFilter`. If the actual instance is not `GenderFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GenderFilter</returns>
        public GenderFilter GetGenderFilter()
        {
            return (GenderFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `MediaTypeFilter`. If the actual instance is not `MediaTypeFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of MediaTypeFilter</returns>
        public MediaTypeFilter GetMediaTypeFilter()
        {
            return (MediaTypeFilter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ProductType4Filter`. If the actual instance is not `ProductType4Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ProductType4Filter</returns>
        public ProductType4Filter GetProductType4Filter()
        {
            return (ProductType4Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ProductType3Filter`. If the actual instance is not `ProductType3Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ProductType3Filter</returns>
        public ProductType3Filter GetProductType3Filter()
        {
            return (ProductType3Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ProductType2Filter`. If the actual instance is not `ProductType2Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ProductType2Filter</returns>
        public ProductType2Filter GetProductType2Filter()
        {
            return (ProductType2Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ProductType1Filter`. If the actual instance is not `ProductType1Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ProductType1Filter</returns>
        public ProductType1Filter GetProductType1Filter()
        {
            return (ProductType1Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ProductType0Filter`. If the actual instance is not `ProductType0Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ProductType0Filter</returns>
        public ProductType0Filter GetProductType0Filter()
        {
            return (ProductType0Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory6Filter`. If the actual instance is not `GoogleProductCategory6Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory6Filter</returns>
        public GoogleProductCategory6Filter GetGoogleProductCategory6Filter()
        {
            return (GoogleProductCategory6Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory5Filter`. If the actual instance is not `GoogleProductCategory5Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory5Filter</returns>
        public GoogleProductCategory5Filter GetGoogleProductCategory5Filter()
        {
            return (GoogleProductCategory5Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory4Filter`. If the actual instance is not `GoogleProductCategory4Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory4Filter</returns>
        public GoogleProductCategory4Filter GetGoogleProductCategory4Filter()
        {
            return (GoogleProductCategory4Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory3Filter`. If the actual instance is not `GoogleProductCategory3Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory3Filter</returns>
        public GoogleProductCategory3Filter GetGoogleProductCategory3Filter()
        {
            return (GoogleProductCategory3Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory2Filter`. If the actual instance is not `GoogleProductCategory2Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory2Filter</returns>
        public GoogleProductCategory2Filter GetGoogleProductCategory2Filter()
        {
            return (GoogleProductCategory2Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory1Filter`. If the actual instance is not `GoogleProductCategory1Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory1Filter</returns>
        public GoogleProductCategory1Filter GetGoogleProductCategory1Filter()
        {
            return (GoogleProductCategory1Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GoogleProductCategory0Filter`. If the actual instance is not `GoogleProductCategory0Filter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GoogleProductCategory0Filter</returns>
        public GoogleProductCategory0Filter GetGoogleProductCategory0Filter()
        {
            return (GoogleProductCategory0Filter)ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ProductGroupReferenceFilter`. If the actual instance is not `ProductGroupReferenceFilter`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ProductGroupReferenceFilter</returns>
        public ProductGroupReferenceFilter GetProductGroupReferenceFilter()
        {
            return (ProductGroupReferenceFilter)ActualInstance;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsProductGroupFilterKeys {\n");
            sb.Append("  ActualInstance: ").Append(ActualInstance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(ActualInstance, CatalogsProductGroupFilterKeys.SerializerSettings);
        }

        /// <summary>
        /// Converts the JSON string into an instance of CatalogsProductGroupFilterKeys
        /// </summary>
        /// <param name="jsonString">JSON string</param>
        /// <returns>An instance of CatalogsProductGroupFilterKeys</returns>
        public static CatalogsProductGroupFilterKeys FromJson(string jsonString)
        {
            CatalogsProductGroupFilterKeys newCatalogsProductGroupFilterKeys = null;

            if (string.IsNullOrEmpty(jsonString))
            {
                return newCatalogsProductGroupFilterKeys;
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<AvailabilityFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AvailabilityFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<BrandFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into BrandFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ConditionFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ConditionFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<CurrencyFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CurrencyFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<CustomLabel0Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomLabel0Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<CustomLabel1Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomLabel1Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<CustomLabel2Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomLabel2Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<CustomLabel3Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomLabel3Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<CustomLabel4Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CustomLabel4Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GenderFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GenderFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory0Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory0Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory1Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory1Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory2Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory2Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory3Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory3Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory4Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory4Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory5Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory5Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<GoogleProductCategory6Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GoogleProductCategory6Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ItemGroupIdFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ItemGroupIdFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ItemIdFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ItemIdFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<MaxPriceFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into MaxPriceFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<MediaTypeFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into MediaTypeFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<MinPriceFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into MinPriceFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ProductGroupReferenceFilter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ProductGroupReferenceFilter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ProductType0Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ProductType0Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ProductType1Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ProductType1Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ProductType2Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ProductType2Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ProductType3Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ProductType3Filter: {1}", jsonString, exception.ToString()));
            }

            try
            {
                newCatalogsProductGroupFilterKeys = new CatalogsProductGroupFilterKeys(JsonConvert.DeserializeObject<ProductType4Filter>(jsonString, CatalogsProductGroupFilterKeys.SerializerSettings));
                // deserialization is considered successful at this point if no exception has been thrown.
                return newCatalogsProductGroupFilterKeys;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ProductType4Filter: {1}", jsonString, exception.ToString()));
            }

            // no match found, throw an exception
            throw new InvalidDataException("The JSON string `" + jsonString + "` cannot be deserialized into any schema defined.");
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// Custom JSON converter for CatalogsProductGroupFilterKeys
    /// </summary>
    public class CatalogsProductGroupFilterKeysJsonConverter : JsonConverter
    {
        /// <summary>
        /// To write the JSON string
        /// </summary>
        /// <param name="writer">JSON writer</param>
        /// <param name="value">Object to be converted into a JSON string</param>
        /// <param name="serializer">JSON Serializer</param>
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            writer.WriteRawValue((string)(typeof(CatalogsProductGroupFilterKeys).GetMethod("ToJson").Invoke(value, null)));
        }

        /// <summary>
        /// To convert a JSON string into an object
        /// </summary>
        /// <param name="reader">JSON reader</param>
        /// <param name="objectType">Object type</param>
        /// <param name="existingValue">Existing value</param>
        /// <param name="serializer">JSON Serializer</param>
        /// <returns>The object converted from the JSON string</returns>
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            switch(reader.TokenType) 
            {
                case JsonToken.StartObject:
                    return CatalogsProductGroupFilterKeys.FromJson(JObject.Load(reader).ToString(Formatting.None));
                case JsonToken.StartArray:
                    return CatalogsProductGroupFilterKeys.FromJson(JArray.Load(reader).ToString(Formatting.None));
                default:
                    return null;
            }
        }

        /// <summary>
        /// Check if the object can be converted
        /// </summary>
        /// <param name="objectType">Object type</param>
        /// <returns>True if the object can be converted</returns>
        public override bool CanConvert(Type objectType)
        {
            return false;
        }
    }

}
