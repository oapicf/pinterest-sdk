/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SharedAudienceCommon
    /// </summary>
    [DataContract(Name = "SharedAudienceCommon")]
    public partial class SharedAudienceCommon : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets OperationType
        /// </summary>
        [DataMember(Name = "operation_type", EmitDefaultValue = false)]
        public OperationType? OperationType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SharedAudienceCommon" /> class.
        /// </summary>
        /// <param name="audienceId">Unique identifier of an audience.</param>
        /// <param name="operationType">operationType.</param>
        public SharedAudienceCommon(string audienceId = default(string), OperationType? operationType = default(OperationType?))
        {
            this.AudienceId = audienceId;
            this.OperationType = operationType;
        }

        /// <summary>
        /// Unique identifier of an audience
        /// </summary>
        /// <value>Unique identifier of an audience</value>
        /*
        <example>2542621871096</example>
        */
        [DataMember(Name = "audience_id", EmitDefaultValue = false)]
        public string AudienceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SharedAudienceCommon {\n");
            sb.Append("  AudienceId: ").Append(AudienceId).Append("\n");
            sb.Append("  OperationType: ").Append(OperationType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.AudienceId != null) {
                // AudienceId (string) pattern
                Regex regexAudienceId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexAudienceId.Match(this.AudienceId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AudienceId, must match a pattern of " + regexAudienceId, new [] { "AudienceId" });
                }
            }

            yield break;
        }
    }

}
