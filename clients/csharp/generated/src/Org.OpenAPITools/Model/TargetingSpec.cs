/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Ad group targeting specification defining the ad group target audience. For example, &#x60;{\&quot;APPTYPE\&quot;:[\&quot;iphone\&quot;], \&quot;GENDER\&quot;:[\&quot;male\&quot;], \&quot;LOCALE\&quot;:[\&quot;en-US\&quot;], \&quot;LOCATION\&quot;:[\&quot;501\&quot;], \&quot;AGE_BUCKET\&quot;:[\&quot;25-34\&quot;]}&#x60;
    /// </summary>
    [DataContract(Name = "TargetingSpec")]
    public partial class TargetingSpec : IValidatableObject
    {
        /// <summary>
        /// Defines AGE_BUCKET
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AGEBUCKETEnum
        {
            /// <summary>
            /// Enum _1824 for value: 18-24
            /// </summary>
            [EnumMember(Value = "18-24")]
            _1824 = 1,

            /// <summary>
            /// Enum _21 for value: 21+
            /// </summary>
            [EnumMember(Value = "21+")]
            _21 = 2,

            /// <summary>
            /// Enum _2534 for value: 25-34
            /// </summary>
            [EnumMember(Value = "25-34")]
            _2534 = 3,

            /// <summary>
            /// Enum _3544 for value: 35-44
            /// </summary>
            [EnumMember(Value = "35-44")]
            _3544 = 4,

            /// <summary>
            /// Enum _4549 for value: 45-49
            /// </summary>
            [EnumMember(Value = "45-49")]
            _4549 = 5,

            /// <summary>
            /// Enum _5054 for value: 50-54
            /// </summary>
            [EnumMember(Value = "50-54")]
            _5054 = 6,

            /// <summary>
            /// Enum _5564 for value: 55-64
            /// </summary>
            [EnumMember(Value = "55-64")]
            _5564 = 7,

            /// <summary>
            /// Enum _65 for value: 65+
            /// </summary>
            [EnumMember(Value = "65+")]
            _65 = 8
        }

        /// <summary>
        /// Defines APPTYPE
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum APPTYPEEnum
        {
            /// <summary>
            /// Enum AndroidMobile for value: android_mobile
            /// </summary>
            [EnumMember(Value = "android_mobile")]
            AndroidMobile = 1,

            /// <summary>
            /// Enum AndroidTablet for value: android_tablet
            /// </summary>
            [EnumMember(Value = "android_tablet")]
            AndroidTablet = 2,

            /// <summary>
            /// Enum Ipad for value: ipad
            /// </summary>
            [EnumMember(Value = "ipad")]
            Ipad = 3,

            /// <summary>
            /// Enum Iphone for value: iphone
            /// </summary>
            [EnumMember(Value = "iphone")]
            Iphone = 4,

            /// <summary>
            /// Enum Web for value: web
            /// </summary>
            [EnumMember(Value = "web")]
            Web = 5,

            /// <summary>
            /// Enum WebMobile for value: web_mobile
            /// </summary>
            [EnumMember(Value = "web_mobile")]
            WebMobile = 6
        }

        /// <summary>
        /// Defines GENDER
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum GENDEREnum
        {
            /// <summary>
            /// Enum Unknown for value: unknown
            /// </summary>
            [EnumMember(Value = "unknown")]
            Unknown = 1,

            /// <summary>
            /// Enum Male for value: male
            /// </summary>
            [EnumMember(Value = "male")]
            Male = 2,

            /// <summary>
            /// Enum Female for value: female
            /// </summary>
            [EnumMember(Value = "female")]
            Female = 3
        }

        /// <summary>
        /// Defines TARGETING_STRATEGY
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TARGETINGSTRATEGYEnum
        {
            /// <summary>
            /// Enum CHOOSEYOUROWN for value: CHOOSE_YOUR_OWN
            /// </summary>
            [EnumMember(Value = "CHOOSE_YOUR_OWN")]
            CHOOSEYOUROWN = 1,

            /// <summary>
            /// Enum FINDNEWCUSTOMERS for value: FIND_NEW_CUSTOMERS
            /// </summary>
            [EnumMember(Value = "FIND_NEW_CUSTOMERS")]
            FINDNEWCUSTOMERS = 2,

            /// <summary>
            /// Enum RECONNECTWITHUSERS for value: RECONNECT_WITH_USERS
            /// </summary>
            [EnumMember(Value = "RECONNECT_WITH_USERS")]
            RECONNECTWITHUSERS = 3
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TargetingSpec" /> class.
        /// </summary>
        /// <param name="aGEBUCKET">Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted..</param>
        /// <param name="aPPTYPE">Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted..</param>
        /// <param name="aUDIENCEEXCLUDE">Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\&quot;2542620905475\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**..</param>
        /// <param name="aUDIENCEINCLUDE">Targeted customer list IDs. For example: [\&quot;2542620905473\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**..</param>
        /// <param name="gENDER">Targeted genders. Values: [\&quot;unknown\&quot;,\&quot;male\&quot;,\&quot;female\&quot;]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**..</param>
        /// <param name="gEO">Location region codes, e.g., \&quot;BE-VOV\&quot; (East Flanders, Belgium) For complete list, &lt;a href&#x3D;\&quot;https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\&quot; target&#x3D;\&quot;_blank\&quot;&gt;click here&lt;/a&gt; or postal codes, e.g., \&quot;US-94107\&quot;. Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below)..</param>
        /// <param name="iNTEREST">Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**..</param>
        /// <param name="lOCALE">24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**..</param>
        /// <param name="lOCATION">22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\&quot;US\&quot;, \&quot;807\&quot;]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above)..</param>
        /// <param name="sHOPPINGRETARGETING">Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting.</param>
        /// <param name="tARGETINGSTRATEGY">tARGETINGSTRATEGY.</param>
        public TargetingSpec(List<AGEBUCKETEnum> aGEBUCKET = default(List<AGEBUCKETEnum>), List<APPTYPEEnum> aPPTYPE = default(List<APPTYPEEnum>), List<string> aUDIENCEEXCLUDE = default(List<string>), List<string> aUDIENCEINCLUDE = default(List<string>), List<GENDEREnum> gENDER = default(List<GENDEREnum>), List<string> gEO = default(List<string>), List<string> iNTEREST = default(List<string>), List<string> lOCALE = default(List<string>), List<string> lOCATION = default(List<string>), List<TargetingSpecSHOPPINGRETARGETING> sHOPPINGRETARGETING = default(List<TargetingSpecSHOPPINGRETARGETING>), List<TARGETINGSTRATEGYEnum> tARGETINGSTRATEGY = default(List<TARGETINGSTRATEGYEnum>))
        {
            this.AGE_BUCKET = aGEBUCKET;
            this.APPTYPE = aPPTYPE;
            this.AUDIENCE_EXCLUDE = aUDIENCEEXCLUDE;
            this.AUDIENCE_INCLUDE = aUDIENCEINCLUDE;
            this.GENDER = gENDER;
            this.GEO = gEO;
            this.INTEREST = iNTEREST;
            this.LOCALE = lOCALE;
            this.LOCATION = lOCATION;
            this.SHOPPING_RETARGETING = sHOPPINGRETARGETING;
            this.TARGETING_STRATEGY = tARGETINGSTRATEGY;
        }

        /// <summary>
        /// Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.
        /// </summary>
        /// <value>Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.</value>
        /*
        <example>[&quot;35-44&quot;,&quot;50-54&quot;]</example>
        */
        [DataMember(Name = "AGE_BUCKET", EmitDefaultValue = true)]
        public List<TargetingSpec.AGEBUCKETEnum> AGE_BUCKET { get; set; }

        /// <summary>
        /// Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.
        /// </summary>
        /// <value>Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.</value>
        /*
        <example>[&quot;ipad&quot;,&quot;iphone&quot;]</example>
        */
        [DataMember(Name = "APPTYPE", EmitDefaultValue = true)]
        public List<TargetingSpec.APPTYPEEnum> APPTYPE { get; set; }

        /// <summary>
        /// Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\&quot;2542620905475\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.
        /// </summary>
        /// <value>Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\&quot;2542620905475\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.</value>
        [DataMember(Name = "AUDIENCE_EXCLUDE", EmitDefaultValue = true)]
        public List<string> AUDIENCE_EXCLUDE { get; set; }

        /// <summary>
        /// Targeted customer list IDs. For example: [\&quot;2542620905473\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.
        /// </summary>
        /// <value>Targeted customer list IDs. For example: [\&quot;2542620905473\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.</value>
        [DataMember(Name = "AUDIENCE_INCLUDE", EmitDefaultValue = true)]
        public List<string> AUDIENCE_INCLUDE { get; set; }

        /// <summary>
        /// Targeted genders. Values: [\&quot;unknown\&quot;,\&quot;male\&quot;,\&quot;female\&quot;]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.
        /// </summary>
        /// <value>Targeted genders. Values: [\&quot;unknown\&quot;,\&quot;male\&quot;,\&quot;female\&quot;]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.</value>
        [DataMember(Name = "GENDER", EmitDefaultValue = true)]
        public List<TargetingSpec.GENDEREnum> GENDER { get; set; }

        /// <summary>
        /// Location region codes, e.g., \&quot;BE-VOV\&quot; (East Flanders, Belgium) For complete list, &lt;a href&#x3D;\&quot;https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\&quot; target&#x3D;\&quot;_blank\&quot;&gt;click here&lt;/a&gt; or postal codes, e.g., \&quot;US-94107\&quot;. Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).
        /// </summary>
        /// <value>Location region codes, e.g., \&quot;BE-VOV\&quot; (East Flanders, Belgium) For complete list, &lt;a href&#x3D;\&quot;https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\&quot; target&#x3D;\&quot;_blank\&quot;&gt;click here&lt;/a&gt; or postal codes, e.g., \&quot;US-94107\&quot;. Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).</value>
        [DataMember(Name = "GEO", EmitDefaultValue = true)]
        public List<string> GEO { get; set; }

        /// <summary>
        /// Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.
        /// </summary>
        /// <value>Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.</value>
        [DataMember(Name = "INTEREST", EmitDefaultValue = false)]
        public List<string> INTEREST { get; set; }

        /// <summary>
        /// 24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.
        /// </summary>
        /// <value>24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.</value>
        [DataMember(Name = "LOCALE", EmitDefaultValue = true)]
        public List<string> LOCALE { get; set; }

        /// <summary>
        /// 22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\&quot;US\&quot;, \&quot;807\&quot;]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).
        /// </summary>
        /// <value>22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\&quot;US\&quot;, \&quot;807\&quot;]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).</value>
        [DataMember(Name = "LOCATION", EmitDefaultValue = true)]
        public List<string> LOCATION { get; set; }

        /// <summary>
        /// Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting
        /// </summary>
        /// <value>Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting</value>
        [DataMember(Name = "SHOPPING_RETARGETING", EmitDefaultValue = true)]
        public List<TargetingSpecSHOPPINGRETARGETING> SHOPPING_RETARGETING { get; set; }

        /// <summary>
        /// Gets or Sets TARGETING_STRATEGY
        /// </summary>
        [DataMember(Name = "TARGETING_STRATEGY", EmitDefaultValue = true)]
        public List<TargetingSpec.TARGETINGSTRATEGYEnum> TARGETING_STRATEGY { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TargetingSpec {\n");
            sb.Append("  AGE_BUCKET: ").Append(AGE_BUCKET).Append("\n");
            sb.Append("  APPTYPE: ").Append(APPTYPE).Append("\n");
            sb.Append("  AUDIENCE_EXCLUDE: ").Append(AUDIENCE_EXCLUDE).Append("\n");
            sb.Append("  AUDIENCE_INCLUDE: ").Append(AUDIENCE_INCLUDE).Append("\n");
            sb.Append("  GENDER: ").Append(GENDER).Append("\n");
            sb.Append("  GEO: ").Append(GEO).Append("\n");
            sb.Append("  INTEREST: ").Append(INTEREST).Append("\n");
            sb.Append("  LOCALE: ").Append(LOCALE).Append("\n");
            sb.Append("  LOCATION: ").Append(LOCATION).Append("\n");
            sb.Append("  SHOPPING_RETARGETING: ").Append(SHOPPING_RETARGETING).Append("\n");
            sb.Append("  TARGETING_STRATEGY: ").Append(TARGETING_STRATEGY).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
