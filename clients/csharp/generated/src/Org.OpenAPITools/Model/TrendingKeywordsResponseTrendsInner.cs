/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TrendingKeywordsResponseTrendsInner
    /// </summary>
    [DataContract(Name = "TrendingKeywordsResponse_trends_inner")]
    public partial class TrendingKeywordsResponseTrendsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TrendingKeywordsResponseTrendsInner" /> class.
        /// </summary>
        /// <param name="keyword">The keyword that is trending..</param>
        /// <param name="pctGrowthWow">The week-over-week percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;50\&quot; would represent a 50% increase in searches in the last seven days compared to the week prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% week-over-week growth..</param>
        /// <param name="pctGrowthMom">The month-over-month percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;400\&quot; would represent a 400% increase in searches in the last 30 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% month-over-month growth..</param>
        /// <param name="pctGrowthYoy">The year-over-year percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;-5\&quot; would represent a 5% decrease in searches in the last 365 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% year-over-year growth..</param>
        /// <param name="timeSeries">timeSeries.</param>
        public TrendingKeywordsResponseTrendsInner(string keyword = default(string), int pctGrowthWow = default(int), int pctGrowthMom = default(int), int pctGrowthYoy = default(int), TrendingKeywordsResponseTrendsInnerTimeSeries timeSeries = default(TrendingKeywordsResponseTrendsInnerTimeSeries))
        {
            this.Keyword = keyword;
            this.PctGrowthWow = pctGrowthWow;
            this.PctGrowthMom = pctGrowthMom;
            this.PctGrowthYoy = pctGrowthYoy;
            this.TimeSeries = timeSeries;
        }

        /// <summary>
        /// The keyword that is trending.
        /// </summary>
        /// <value>The keyword that is trending.</value>
        /*
        <example>couples halloween costumes</example>
        */
        [DataMember(Name = "keyword", EmitDefaultValue = false)]
        public string Keyword { get; set; }

        /// <summary>
        /// The week-over-week percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;50\&quot; would represent a 50% increase in searches in the last seven days compared to the week prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% week-over-week growth.
        /// </summary>
        /// <value>The week-over-week percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;50\&quot; would represent a 50% increase in searches in the last seven days compared to the week prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% week-over-week growth.</value>
        /*
        <example>50</example>
        */
        [DataMember(Name = "pct_growth_wow", EmitDefaultValue = false)]
        public int PctGrowthWow { get; set; }

        /// <summary>
        /// The month-over-month percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;400\&quot; would represent a 400% increase in searches in the last 30 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% month-over-month growth.
        /// </summary>
        /// <value>The month-over-month percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;400\&quot; would represent a 400% increase in searches in the last 30 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% month-over-month growth.</value>
        /*
        <example>400</example>
        */
        [DataMember(Name = "pct_growth_mom", EmitDefaultValue = false)]
        public int PctGrowthMom { get; set; }

        /// <summary>
        /// The year-over-year percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;-5\&quot; would represent a 5% decrease in searches in the last 365 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% year-over-year growth.
        /// </summary>
        /// <value>The year-over-year percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;-5\&quot; would represent a 5% decrease in searches in the last 365 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% year-over-year growth.</value>
        /*
        <example>-5</example>
        */
        [DataMember(Name = "pct_growth_yoy", EmitDefaultValue = false)]
        public int PctGrowthYoy { get; set; }

        /// <summary>
        /// Gets or Sets TimeSeries
        /// </summary>
        [DataMember(Name = "time_series", EmitDefaultValue = false)]
        public TrendingKeywordsResponseTrendsInnerTimeSeries TimeSeries { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TrendingKeywordsResponseTrendsInner {\n");
            sb.Append("  Keyword: ").Append(Keyword).Append("\n");
            sb.Append("  PctGrowthWow: ").Append(PctGrowthWow).Append("\n");
            sb.Append("  PctGrowthMom: ").Append(PctGrowthMom).Append("\n");
            sb.Append("  PctGrowthYoy: ").Append(PctGrowthYoy).Append("\n");
            sb.Append("  TimeSeries: ").Append(TimeSeries).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Keyword (string) minLength
            if (this.Keyword != null && this.Keyword.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Keyword, length must be greater than 1.", new [] { "Keyword" });
            }

            yield break;
        }
    }

}
