/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SSIOOrderLine
    /// </summary>
    [DataContract(Name = "SSIOOrderLine")]
    public partial class SSIOOrderLine : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets CurrencyInfo
        /// </summary>
        [DataMember(Name = "currency_info", EmitDefaultValue = false)]
        public Currency? CurrencyInfo { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SSIOOrderLine" /> class.
        /// </summary>
        /// <param name="salesforceOrderLineId">OrderLineId in SFDC.</param>
        /// <param name="adsManagerOrderLineId">Ads manager OrderLineId.</param>
        /// <param name="pinOrderId">The pin order id associated with the order line in SFDC.</param>
        /// <param name="lastModifiedDateTime">Last modified date..</param>
        /// <param name="startDate">Start date of the order line..</param>
        /// <param name="endDate">End date of the order line..</param>
        /// <param name="billToCompanyName">Bill To Company name.</param>
        /// <param name="billingContactFirstname">Billing contact first name.</param>
        /// <param name="billingContactLastname">Billing contact last name.</param>
        /// <param name="billingContactEmail">Billing contact email.</param>
        /// <param name="mediaContactEmail">Billing media email.</param>
        /// <param name="mediaContactFirstname">Billing contact first name.</param>
        /// <param name="mediaContactLastname">Billing contact first name.</param>
        /// <param name="currencyInfo">currencyInfo.</param>
        /// <param name="agencyLink">Agency link.</param>
        /// <param name="poNumber">The po number.</param>
        /// <param name="orderName">The order name.</param>
        /// <param name="pmpName">The Pinterest marketing partner name.</param>
        /// <param name="acceptedTermsId">The SFDC id for the terms.</param>
        /// <param name="acceptedTermsTime">The UTC timestamp (to the nearest sec) of when terms were accepted.</param>
        /// <param name="budgetAmount">If Budget order line, the budget amount..</param>
        /// <param name="estimatedMonthlySpend">If Ongoing (perpetual) order line, the estimated monthly spend.</param>
        public SSIOOrderLine(string salesforceOrderLineId = default(string), string adsManagerOrderLineId = default(string), string pinOrderId = default(string), string lastModifiedDateTime = default(string), DateOnly? startDate = default(DateOnly?), DateOnly? endDate = default(DateOnly?), string billToCompanyName = default(string), string billingContactFirstname = default(string), string billingContactLastname = default(string), string billingContactEmail = default(string), string mediaContactEmail = default(string), string mediaContactFirstname = default(string), string mediaContactLastname = default(string), Currency? currencyInfo = default(Currency?), string agencyLink = default(string), string poNumber = default(string), string orderName = default(string), string pmpName = default(string), string acceptedTermsId = default(string), string acceptedTermsTime = default(string), decimal? budgetAmount = default(decimal?), decimal? estimatedMonthlySpend = default(decimal?))
        {
            this.SalesforceOrderLineId = salesforceOrderLineId;
            this.AdsManagerOrderLineId = adsManagerOrderLineId;
            this.PinOrderId = pinOrderId;
            this.LastModifiedDateTime = lastModifiedDateTime;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.BillToCompanyName = billToCompanyName;
            this.BillingContactFirstname = billingContactFirstname;
            this.BillingContactLastname = billingContactLastname;
            this.BillingContactEmail = billingContactEmail;
            this.MediaContactEmail = mediaContactEmail;
            this.MediaContactFirstname = mediaContactFirstname;
            this.MediaContactLastname = mediaContactLastname;
            this.CurrencyInfo = currencyInfo;
            this.AgencyLink = agencyLink;
            this.PoNumber = poNumber;
            this.OrderName = orderName;
            this.PmpName = pmpName;
            this.AcceptedTermsId = acceptedTermsId;
            this.AcceptedTermsTime = acceptedTermsTime;
            this.BudgetAmount = budgetAmount;
            this.EstimatedMonthlySpend = estimatedMonthlySpend;
        }

        /// <summary>
        /// OrderLineId in SFDC
        /// </summary>
        /// <value>OrderLineId in SFDC</value>
        [DataMember(Name = "salesforce_order_line_id", EmitDefaultValue = true)]
        public string SalesforceOrderLineId { get; set; }

        /// <summary>
        /// Ads manager OrderLineId
        /// </summary>
        /// <value>Ads manager OrderLineId</value>
        [DataMember(Name = "ads_manager_order_line_id", EmitDefaultValue = true)]
        public string AdsManagerOrderLineId { get; set; }

        /// <summary>
        /// The pin order id associated with the order line in SFDC
        /// </summary>
        /// <value>The pin order id associated with the order line in SFDC</value>
        [DataMember(Name = "pin_order_id", EmitDefaultValue = true)]
        public string PinOrderId { get; set; }

        /// <summary>
        /// Last modified date.
        /// </summary>
        /// <value>Last modified date.</value>
        /*
        <example>2020-10-06T13:07:04.000Z</example>
        */
        [DataMember(Name = "last_modified_date_time", EmitDefaultValue = true)]
        public string LastModifiedDateTime { get; set; }

        /// <summary>
        /// Start date of the order line.
        /// </summary>
        /// <value>Start date of the order line.</value>
        /*
        <example>Thu Mar 01 00:00:00 UTC 2018</example>
        */
        [DataMember(Name = "start_date", EmitDefaultValue = true)]
        public DateOnly? StartDate { get; set; }

        /// <summary>
        /// End date of the order line.
        /// </summary>
        /// <value>End date of the order line.</value>
        /*
        <example>Mon Oct 05 00:00:00 UTC 2020</example>
        */
        [DataMember(Name = "end_date", EmitDefaultValue = true)]
        public DateOnly? EndDate { get; set; }

        /// <summary>
        /// Bill To Company name
        /// </summary>
        /// <value>Bill To Company name</value>
        /*
        <example>Home Depot Inc.</example>
        */
        [DataMember(Name = "bill_to_company_name", EmitDefaultValue = true)]
        public string BillToCompanyName { get; set; }

        /// <summary>
        /// Billing contact first name
        /// </summary>
        /// <value>Billing contact first name</value>
        /*
        <example>Mary</example>
        */
        [DataMember(Name = "billing_contact_firstname", EmitDefaultValue = true)]
        public string BillingContactFirstname { get; set; }

        /// <summary>
        /// Billing contact last name
        /// </summary>
        /// <value>Billing contact last name</value>
        /*
        <example>Smith</example>
        */
        [DataMember(Name = "billing_contact_lastname", EmitDefaultValue = true)]
        public string BillingContactLastname { get; set; }

        /// <summary>
        /// Billing contact email
        /// </summary>
        /// <value>Billing contact email</value>
        /*
        <example>mail@test.com</example>
        */
        [DataMember(Name = "billing_contact_email", EmitDefaultValue = true)]
        public string BillingContactEmail { get; set; }

        /// <summary>
        /// Billing media email
        /// </summary>
        /// <value>Billing media email</value>
        /*
        <example>mail@test.com</example>
        */
        [DataMember(Name = "media_contact_email", EmitDefaultValue = true)]
        public string MediaContactEmail { get; set; }

        /// <summary>
        /// Billing contact first name
        /// </summary>
        /// <value>Billing contact first name</value>
        /*
        <example>John</example>
        */
        [DataMember(Name = "media_contact_firstname", EmitDefaultValue = true)]
        public string MediaContactFirstname { get; set; }

        /// <summary>
        /// Billing contact first name
        /// </summary>
        /// <value>Billing contact first name</value>
        /*
        <example>Doe</example>
        */
        [DataMember(Name = "media_contact_lastname", EmitDefaultValue = true)]
        public string MediaContactLastname { get; set; }

        /// <summary>
        /// Agency link
        /// </summary>
        /// <value>Agency link</value>
        [DataMember(Name = "agency_link", EmitDefaultValue = true)]
        public string AgencyLink { get; set; }

        /// <summary>
        /// The po number
        /// </summary>
        /// <value>The po number</value>
        [DataMember(Name = "po_number", EmitDefaultValue = true)]
        public string PoNumber { get; set; }

        /// <summary>
        /// The order name
        /// </summary>
        /// <value>The order name</value>
        [DataMember(Name = "order_name", EmitDefaultValue = true)]
        public string OrderName { get; set; }

        /// <summary>
        /// The Pinterest marketing partner name
        /// </summary>
        /// <value>The Pinterest marketing partner name</value>
        [DataMember(Name = "pmp_name", EmitDefaultValue = true)]
        public string PmpName { get; set; }

        /// <summary>
        /// The SFDC id for the terms
        /// </summary>
        /// <value>The SFDC id for the terms</value>
        [DataMember(Name = "accepted_terms_id", EmitDefaultValue = true)]
        public string AcceptedTermsId { get; set; }

        /// <summary>
        /// The UTC timestamp (to the nearest sec) of when terms were accepted
        /// </summary>
        /// <value>The UTC timestamp (to the nearest sec) of when terms were accepted</value>
        /*
        <example>2020-10-06T13:07:04.000Z</example>
        */
        [DataMember(Name = "accepted_terms_time", EmitDefaultValue = true)]
        public string AcceptedTermsTime { get; set; }

        /// <summary>
        /// If Budget order line, the budget amount.
        /// </summary>
        /// <value>If Budget order line, the budget amount.</value>
        /*
        <example>5000000</example>
        */
        [DataMember(Name = "budget_amount", EmitDefaultValue = true)]
        public decimal? BudgetAmount { get; set; }

        /// <summary>
        /// If Ongoing (perpetual) order line, the estimated monthly spend
        /// </summary>
        /// <value>If Ongoing (perpetual) order line, the estimated monthly spend</value>
        [DataMember(Name = "estimated_monthly_spend", EmitDefaultValue = true)]
        public decimal? EstimatedMonthlySpend { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SSIOOrderLine {\n");
            sb.Append("  SalesforceOrderLineId: ").Append(SalesforceOrderLineId).Append("\n");
            sb.Append("  AdsManagerOrderLineId: ").Append(AdsManagerOrderLineId).Append("\n");
            sb.Append("  PinOrderId: ").Append(PinOrderId).Append("\n");
            sb.Append("  LastModifiedDateTime: ").Append(LastModifiedDateTime).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  BillToCompanyName: ").Append(BillToCompanyName).Append("\n");
            sb.Append("  BillingContactFirstname: ").Append(BillingContactFirstname).Append("\n");
            sb.Append("  BillingContactLastname: ").Append(BillingContactLastname).Append("\n");
            sb.Append("  BillingContactEmail: ").Append(BillingContactEmail).Append("\n");
            sb.Append("  MediaContactEmail: ").Append(MediaContactEmail).Append("\n");
            sb.Append("  MediaContactFirstname: ").Append(MediaContactFirstname).Append("\n");
            sb.Append("  MediaContactLastname: ").Append(MediaContactLastname).Append("\n");
            sb.Append("  CurrencyInfo: ").Append(CurrencyInfo).Append("\n");
            sb.Append("  AgencyLink: ").Append(AgencyLink).Append("\n");
            sb.Append("  PoNumber: ").Append(PoNumber).Append("\n");
            sb.Append("  OrderName: ").Append(OrderName).Append("\n");
            sb.Append("  PmpName: ").Append(PmpName).Append("\n");
            sb.Append("  AcceptedTermsId: ").Append(AcceptedTermsId).Append("\n");
            sb.Append("  AcceptedTermsTime: ").Append(AcceptedTermsTime).Append("\n");
            sb.Append("  BudgetAmount: ").Append(BudgetAmount).Append("\n");
            sb.Append("  EstimatedMonthlySpend: ").Append(EstimatedMonthlySpend).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.LastModifiedDateTime != null) {
                // LastModifiedDateTime (string) pattern
                Regex regexLastModifiedDateTime = new Regex(@"^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$", RegexOptions.CultureInvariant);
                if (!regexLastModifiedDateTime.Match(this.LastModifiedDateTime).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LastModifiedDateTime, must match a pattern of " + regexLastModifiedDateTime, new [] { "LastModifiedDateTime" });
                }
            }

            if (this.AcceptedTermsTime != null) {
                // AcceptedTermsTime (string) pattern
                Regex regexAcceptedTermsTime = new Regex(@"^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$", RegexOptions.CultureInvariant);
                if (!regexAcceptedTermsTime.Match(this.AcceptedTermsTime).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AcceptedTermsTime, must match a pattern of " + regexAcceptedTermsTime, new [] { "AcceptedTermsTime" });
                }
            }

            yield break;
        }
    }

}
