/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Creation fields
    /// </summary>
    [DataContract(Name = "AdCommon")]
    public partial class AdCommon : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets CreativeType
        /// </summary>
        [DataMember(Name = "creative_type", EmitDefaultValue = false)]
        public CreativeType? CreativeType { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public EntityStatus? Status { get; set; }

        /// <summary>
        /// Gets or Sets GridClickType
        /// </summary>
        [DataMember(Name = "grid_click_type", EmitDefaultValue = true)]
        public GridClickType? GridClickType { get; set; }
        /// <summary>
        /// Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
        /// </summary>
        /// <value>Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CustomizableCtaTypeEnum
        {
            /// <summary>
            /// Enum GETOFFER for value: GET_OFFER
            /// </summary>
            [EnumMember(Value = "GET_OFFER")]
            GETOFFER = 1,

            /// <summary>
            /// Enum LEARNMORE for value: LEARN_MORE
            /// </summary>
            [EnumMember(Value = "LEARN_MORE")]
            LEARNMORE = 2,

            /// <summary>
            /// Enum ORDERNOW for value: ORDER_NOW
            /// </summary>
            [EnumMember(Value = "ORDER_NOW")]
            ORDERNOW = 3,

            /// <summary>
            /// Enum SHOPNOW for value: SHOP_NOW
            /// </summary>
            [EnumMember(Value = "SHOP_NOW")]
            SHOPNOW = 4,

            /// <summary>
            /// Enum SIGNUP for value: SIGN_UP
            /// </summary>
            [EnumMember(Value = "SIGN_UP")]
            SIGNUP = 5,

            /// <summary>
            /// Enum SUBSCRIBE for value: SUBSCRIBE
            /// </summary>
            [EnumMember(Value = "SUBSCRIBE")]
            SUBSCRIBE = 6,

            /// <summary>
            /// Enum BUYNOW for value: BUY_NOW
            /// </summary>
            [EnumMember(Value = "BUY_NOW")]
            BUYNOW = 7,

            /// <summary>
            /// Enum CONTACTUS for value: CONTACT_US
            /// </summary>
            [EnumMember(Value = "CONTACT_US")]
            CONTACTUS = 8,

            /// <summary>
            /// Enum GETQUOTE for value: GET_QUOTE
            /// </summary>
            [EnumMember(Value = "GET_QUOTE")]
            GETQUOTE = 9,

            /// <summary>
            /// Enum VISITSITE for value: VISIT_SITE
            /// </summary>
            [EnumMember(Value = "VISIT_SITE")]
            VISITSITE = 10,

            /// <summary>
            /// Enum APPLYNOW for value: APPLY_NOW
            /// </summary>
            [EnumMember(Value = "APPLY_NOW")]
            APPLYNOW = 11,

            /// <summary>
            /// Enum BOOKNOW for value: BOOK_NOW
            /// </summary>
            [EnumMember(Value = "BOOK_NOW")]
            BOOKNOW = 12,

            /// <summary>
            /// Enum REQUESTDEMO for value: REQUEST_DEMO
            /// </summary>
            [EnumMember(Value = "REQUEST_DEMO")]
            REQUESTDEMO = 13,

            /// <summary>
            /// Enum REGISTERNOW for value: REGISTER_NOW
            /// </summary>
            [EnumMember(Value = "REGISTER_NOW")]
            REGISTERNOW = 14,

            /// <summary>
            /// Enum FINDADEALER for value: FIND_A_DEALER
            /// </summary>
            [EnumMember(Value = "FIND_A_DEALER")]
            FINDADEALER = 15,

            /// <summary>
            /// Enum ADDTOCART for value: ADD_TO_CART
            /// </summary>
            [EnumMember(Value = "ADD_TO_CART")]
            ADDTOCART = 16,

            /// <summary>
            /// Enum WATCHNOW for value: WATCH_NOW
            /// </summary>
            [EnumMember(Value = "WATCH_NOW")]
            WATCHNOW = 17,

            /// <summary>
            /// Enum READMORE for value: READ_MORE
            /// </summary>
            [EnumMember(Value = "READ_MORE")]
            READMORE = 18
        }


        /// <summary>
        /// Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
        /// </summary>
        /// <value>Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)</value>
        /*
        <example>LEARN_MORE</example>
        */
        [DataMember(Name = "customizable_cta_type", EmitDefaultValue = true)]
        public CustomizableCtaTypeEnum? CustomizableCtaType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AdCommon" /> class.
        /// </summary>
        /// <param name="adGroupId">ID of the ad group that contains the ad..</param>
        /// <param name="androidDeepLink">Deep link URL for Android devices..</param>
        /// <param name="carouselAndroidDeepLinks">Comma-separated deep links for the carousel pin on Android..</param>
        /// <param name="carouselDestinationUrls">Comma-separated destination URLs for the carousel pin to promote..</param>
        /// <param name="carouselIosDeepLinks">Comma-separated deep links for the carousel pin on iOS..</param>
        /// <param name="clickTrackingUrl">Tracking url for the ad clicks..</param>
        /// <param name="creativeType">creativeType.</param>
        /// <param name="destinationUrl">Destination URL..</param>
        /// <param name="iosDeepLink">Deep link URL for iOS devices..</param>
        /// <param name="isPinDeleted">Is original pin deleted?.</param>
        /// <param name="isRemovable">Is pin repinnable?.</param>
        /// <param name="name">Name of the ad - 255 chars max..</param>
        /// <param name="status">status.</param>
        /// <param name="trackingUrls">trackingUrls.</param>
        /// <param name="viewTrackingUrl">Tracking URL for ad impressions..</param>
        /// <param name="leadFormId">Lead form ID for lead ad generation..</param>
        /// <param name="gridClickType">gridClickType.</param>
        /// <param name="customizableCtaType">Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only).</param>
        /// <param name="quizPinData">Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved..</param>
        public AdCommon(string adGroupId = default(string), string androidDeepLink = default(string), List<string> carouselAndroidDeepLinks = default(List<string>), List<string> carouselDestinationUrls = default(List<string>), List<string> carouselIosDeepLinks = default(List<string>), string clickTrackingUrl = default(string), CreativeType? creativeType = default(CreativeType?), string destinationUrl = default(string), string iosDeepLink = default(string), bool isPinDeleted = default(bool), bool isRemovable = default(bool), string name = default(string), EntityStatus? status = default(EntityStatus?), TrackingUrls trackingUrls = default(TrackingUrls), string viewTrackingUrl = default(string), string leadFormId = default(string), GridClickType? gridClickType = default(GridClickType?), CustomizableCtaTypeEnum? customizableCtaType = default(CustomizableCtaTypeEnum?), QuizPinData quizPinData = default(QuizPinData))
        {
            this.AdGroupId = adGroupId;
            this.AndroidDeepLink = androidDeepLink;
            this.CarouselAndroidDeepLinks = carouselAndroidDeepLinks;
            this.CarouselDestinationUrls = carouselDestinationUrls;
            this.CarouselIosDeepLinks = carouselIosDeepLinks;
            this.ClickTrackingUrl = clickTrackingUrl;
            this.CreativeType = creativeType;
            this.DestinationUrl = destinationUrl;
            this.IosDeepLink = iosDeepLink;
            this.IsPinDeleted = isPinDeleted;
            this.IsRemovable = isRemovable;
            this.Name = name;
            this.Status = status;
            this.TrackingUrls = trackingUrls;
            this.ViewTrackingUrl = viewTrackingUrl;
            this.LeadFormId = leadFormId;
            this.GridClickType = gridClickType;
            this.CustomizableCtaType = customizableCtaType;
            this.QuizPinData = quizPinData;
        }

        /// <summary>
        /// ID of the ad group that contains the ad.
        /// </summary>
        /// <value>ID of the ad group that contains the ad.</value>
        /*
        <example>2680059592705</example>
        */
        [DataMember(Name = "ad_group_id", EmitDefaultValue = false)]
        public string AdGroupId { get; set; }

        /// <summary>
        /// Deep link URL for Android devices.
        /// </summary>
        /// <value>Deep link URL for Android devices.</value>
        [DataMember(Name = "android_deep_link", EmitDefaultValue = true)]
        public string AndroidDeepLink { get; set; }

        /// <summary>
        /// Comma-separated deep links for the carousel pin on Android.
        /// </summary>
        /// <value>Comma-separated deep links for the carousel pin on Android.</value>
        [DataMember(Name = "carousel_android_deep_links", EmitDefaultValue = true)]
        public List<string> CarouselAndroidDeepLinks { get; set; }

        /// <summary>
        /// Comma-separated destination URLs for the carousel pin to promote.
        /// </summary>
        /// <value>Comma-separated destination URLs for the carousel pin to promote.</value>
        [DataMember(Name = "carousel_destination_urls", EmitDefaultValue = true)]
        public List<string> CarouselDestinationUrls { get; set; }

        /// <summary>
        /// Comma-separated deep links for the carousel pin on iOS.
        /// </summary>
        /// <value>Comma-separated deep links for the carousel pin on iOS.</value>
        [DataMember(Name = "carousel_ios_deep_links", EmitDefaultValue = true)]
        public List<string> CarouselIosDeepLinks { get; set; }

        /// <summary>
        /// Tracking url for the ad clicks.
        /// </summary>
        /// <value>Tracking url for the ad clicks.</value>
        [DataMember(Name = "click_tracking_url", EmitDefaultValue = true)]
        public string ClickTrackingUrl { get; set; }

        /// <summary>
        /// Destination URL.
        /// </summary>
        /// <value>Destination URL.</value>
        [DataMember(Name = "destination_url", EmitDefaultValue = true)]
        public string DestinationUrl { get; set; }

        /// <summary>
        /// Deep link URL for iOS devices.
        /// </summary>
        /// <value>Deep link URL for iOS devices.</value>
        [DataMember(Name = "ios_deep_link", EmitDefaultValue = true)]
        public string IosDeepLink { get; set; }

        /// <summary>
        /// Is original pin deleted?
        /// </summary>
        /// <value>Is original pin deleted?</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "is_pin_deleted", EmitDefaultValue = true)]
        public bool IsPinDeleted { get; set; }

        /// <summary>
        /// Is pin repinnable?
        /// </summary>
        /// <value>Is pin repinnable?</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "is_removable", EmitDefaultValue = true)]
        public bool IsRemovable { get; set; }

        /// <summary>
        /// Name of the ad - 255 chars max.
        /// </summary>
        /// <value>Name of the ad - 255 chars max.</value>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets TrackingUrls
        /// </summary>
        [DataMember(Name = "tracking_urls", EmitDefaultValue = true)]
        public TrackingUrls TrackingUrls { get; set; }

        /// <summary>
        /// Tracking URL for ad impressions.
        /// </summary>
        /// <value>Tracking URL for ad impressions.</value>
        [DataMember(Name = "view_tracking_url", EmitDefaultValue = true)]
        public string ViewTrackingUrl { get; set; }

        /// <summary>
        /// Lead form ID for lead ad generation.
        /// </summary>
        /// <value>Lead form ID for lead ad generation.</value>
        [DataMember(Name = "lead_form_id", EmitDefaultValue = true)]
        public string LeadFormId { get; set; }

        /// <summary>
        /// Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved.
        /// </summary>
        /// <value>Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved.</value>
        [DataMember(Name = "quiz_pin_data", EmitDefaultValue = true)]
        public QuizPinData QuizPinData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AdCommon {\n");
            sb.Append("  AdGroupId: ").Append(AdGroupId).Append("\n");
            sb.Append("  AndroidDeepLink: ").Append(AndroidDeepLink).Append("\n");
            sb.Append("  CarouselAndroidDeepLinks: ").Append(CarouselAndroidDeepLinks).Append("\n");
            sb.Append("  CarouselDestinationUrls: ").Append(CarouselDestinationUrls).Append("\n");
            sb.Append("  CarouselIosDeepLinks: ").Append(CarouselIosDeepLinks).Append("\n");
            sb.Append("  ClickTrackingUrl: ").Append(ClickTrackingUrl).Append("\n");
            sb.Append("  CreativeType: ").Append(CreativeType).Append("\n");
            sb.Append("  DestinationUrl: ").Append(DestinationUrl).Append("\n");
            sb.Append("  IosDeepLink: ").Append(IosDeepLink).Append("\n");
            sb.Append("  IsPinDeleted: ").Append(IsPinDeleted).Append("\n");
            sb.Append("  IsRemovable: ").Append(IsRemovable).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TrackingUrls: ").Append(TrackingUrls).Append("\n");
            sb.Append("  ViewTrackingUrl: ").Append(ViewTrackingUrl).Append("\n");
            sb.Append("  LeadFormId: ").Append(LeadFormId).Append("\n");
            sb.Append("  GridClickType: ").Append(GridClickType).Append("\n");
            sb.Append("  CustomizableCtaType: ").Append(CustomizableCtaType).Append("\n");
            sb.Append("  QuizPinData: ").Append(QuizPinData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.AdGroupId != null) {
                // AdGroupId (string) pattern
                Regex regexAdGroupId = new Regex(@"^(AG)?\d+$", RegexOptions.CultureInvariant);
                if (!regexAdGroupId.Match(this.AdGroupId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AdGroupId, must match a pattern of " + regexAdGroupId, new [] { "AdGroupId" });
                }
            }

            if (this.LeadFormId != null) {
                // LeadFormId (string) pattern
                Regex regexLeadFormId = new Regex(@"^(AG)?\d+$", RegexOptions.CultureInvariant);
                if (!regexLeadFormId.Match(this.LeadFormId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LeadFormId, must match a pattern of " + regexLeadFormId, new [] { "LeadFormId" });
                }
            }

            yield break;
        }
    }

}
