/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AudienceCreateCustomRequest
    /// </summary>
    [DataContract(Name = "AudienceCreateCustomRequest")]
    public partial class AudienceCreateCustomRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets SharingType
        /// </summary>
        [DataMember(Name = "sharing_type", IsRequired = true, EmitDefaultValue = true)]
        public AudienceSharingType SharingType { get; set; }

        /// <summary>
        /// Gets or Sets DataParty
        /// </summary>
        [DataMember(Name = "data_party", IsRequired = true, EmitDefaultValue = true)]
        public AudienceDataParty DataParty { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AudienceCreateCustomRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AudienceCreateCustomRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AudienceCreateCustomRequest" /> class.
        /// </summary>
        /// <param name="adAccountId">Ad account ID..</param>
        /// <param name="name">Audience name. (required).</param>
        /// <param name="rule">rule (required).</param>
        /// <param name="sharingType">sharingType (required).</param>
        /// <param name="dataParty">dataParty (required).</param>
        /// <param name="category">category.</param>
        public AudienceCreateCustomRequest(string adAccountId = default(string), string name = default(string), AudienceRule rule = default(AudienceRule), AudienceSharingType sharingType = default(AudienceSharingType), AudienceDataParty dataParty = default(AudienceDataParty), string category = default(string))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for AudienceCreateCustomRequest and cannot be null");
            }
            this.Name = name;
            // to ensure "rule" is required (not null)
            if (rule == null)
            {
                throw new ArgumentNullException("rule is a required property for AudienceCreateCustomRequest and cannot be null");
            }
            this.Rule = rule;
            this.SharingType = sharingType;
            this.DataParty = dataParty;
            this.AdAccountId = adAccountId;
            this.Category = category;
        }

        /// <summary>
        /// Ad account ID.
        /// </summary>
        /// <value>Ad account ID.</value>
        /*
        <example>549755885175</example>
        */
        [DataMember(Name = "ad_account_id", EmitDefaultValue = false)]
        public string AdAccountId { get; set; }

        /// <summary>
        /// Audience name.
        /// </summary>
        /// <value>Audience name.</value>
        /*
        <example>string</example>
        */
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Rule
        /// </summary>
        [DataMember(Name = "rule", IsRequired = true, EmitDefaultValue = true)]
        public AudienceRule Rule { get; set; }

        /// <summary>
        /// Gets or Sets Category
        /// </summary>
        /*
        <example>DLX Demographics</example>
        */
        [DataMember(Name = "category", EmitDefaultValue = false)]
        public string Category { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AudienceCreateCustomRequest {\n");
            sb.Append("  AdAccountId: ").Append(AdAccountId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Rule: ").Append(Rule).Append("\n");
            sb.Append("  SharingType: ").Append(SharingType).Append("\n");
            sb.Append("  DataParty: ").Append(DataParty).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.AdAccountId != null) {
                // AdAccountId (string) pattern
                Regex regexAdAccountId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexAdAccountId.Match(this.AdAccountId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AdAccountId, must match a pattern of " + regexAdAccountId, new [] { "AdAccountId" });
                }
            }

            yield break;
        }
    }

}
