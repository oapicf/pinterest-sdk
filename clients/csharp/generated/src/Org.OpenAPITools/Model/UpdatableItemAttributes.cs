/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UpdatableItemAttributes
    /// </summary>
    [DataContract(Name = "UpdatableItemAttributes")]
    public partial class UpdatableItemAttributes : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdatableItemAttributes" /> class.
        /// </summary>
        /// <param name="adLink">Allows advertisers to specify a separate URL that can be used to track traffic coming from Pinterest shopping ads. Must send full URL including tracking—do not send tracking parameters only. At this time we do not support impression tracking. Must begin with http:// or https://..</param>
        /// <param name="adult">Set this attribute to TRUE if you&#39;re submitting items that are considered “adult”. These will not be shown on Pinterest..</param>
        /// <param name="ageGroup">The age group to apply a demographic range to the product. Must be one of the following values (upper or lowercased): ‘newborn’ , ‘infant’, ‘toddler’, ‘kids’, or ‘adult’..</param>
        /// <param name="availability">The availability of the product. Must be one of the following values (upper or lowercased): ‘in stock’, ‘out of stock’ , ‘preorder’..</param>
        /// <param name="averageReviewRating">Average reviews for the item. Can be a number from 1-5..</param>
        /// <param name="brand">The brand of the product..</param>
        /// <param name="checkoutEnabled">This attribute is not supported anymore..</param>
        /// <param name="color">The primary color of the product..</param>
        /// <param name="condition">The condition of the product. Must be one of the following values (upper or lowercased): ‘new’, ‘used’, or ‘refurbished’..</param>
        /// <param name="customLabel0">&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;.</param>
        /// <param name="customLabel1">&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;.</param>
        /// <param name="customLabel2">&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;.</param>
        /// <param name="customLabel3">&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;.</param>
        /// <param name="customLabel4">&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;.</param>
        /// <param name="description">&lt;p&gt;&lt;&#x3D; 10000 characters&lt;/p&gt; &lt;p&gt;The description of the product.&lt;/p&gt;.</param>
        /// <param name="freeShippingLabel">The item is free to ship..</param>
        /// <param name="freeShippingLimit">The minimum order purchase necessary for the customer to get free shipping. Only relevant if free shipping is offered..</param>
        /// <param name="gender">The gender associated with the product. Must be one of the following values (upper or lowercased): ‘male’, ‘female’ , or ‘unisex’..</param>
        /// <param name="googleProductCategory">The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted..</param>
        /// <param name="gtin">The unique universal product identifier..</param>
        /// <param name="id">&lt;p&gt;&lt;&#x3D; 127 characters&lt;/p&gt; &lt;p&gt;The user-created unique ID that represents the product. Only Unicode characters are accepted.&lt;/p&gt;.</param>
        /// <param name="itemGroupId">&lt;p&gt;&lt;&#x3D; 127 characters&lt;/p&gt; &lt;p&gt;The parent ID of the product.&lt;/p&gt;.</param>
        /// <param name="lastUpdatedTime">The millisecond timestamp when the item was lastly modified by the merchant..</param>
        /// <param name="link">&lt;p&gt;&lt;&#x3D; 511 characters&lt;/p&gt; &lt;p&gt;The landing page for the product.&lt;/p&gt;.</param>
        /// <param name="material">The material used to make the product..</param>
        /// <param name="minAdPrice">The minimum advertised price of the product. It supports the following formats, \&quot;19.99 USD\&quot;, \&quot;19.99USD\&quot; and \&quot;19.99\&quot;. If the currency is not included, we default to US dollars..</param>
        /// <param name="mobileLink">The mobile-optimized version of your landing page. Must begin with http:// or https://..</param>
        /// <param name="mpn">Manufacturer Part Number are alpha-numeric codes created by the manufacturer of a product to uniquely identify it among all products from the same manufacturer..</param>
        /// <param name="numberOfRatings">The number of ratings for the item..</param>
        /// <param name="numberOfReviews">The number of reviews available for the item..</param>
        /// <param name="pattern">The description of the pattern used for the product..</param>
        /// <param name="price">The price of the product. It supports the following formats, \&quot;24.99 USD\&quot;, \&quot;24.99USD\&quot; and \&quot;24.99\&quot;. If the currency is not included, we default to US dollars..</param>
        /// <param name="productType">&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;The categorization of your product based on your custom product taxonomy. Subcategories must be sent separated by “ &gt; “. The &gt; must be wrapped by spaces. We do not recognize any other delimiters such as comma or pipe.&lt;/p&gt;.</param>
        /// <param name="salePrice">The discounted price of the product. The sale_price must be lower than the price. It supports the following formats, \&quot;14.99 USD\&quot;, \&quot;14.99USD\&quot; and \&quot;14.99\&quot;. If the currency is not included, we default to US dollars..</param>
        /// <param name="shipping">Shipping consists of one group of up to four elements, country, region, service (all optional) and price (required). All colons, even for blank values, are required..</param>
        /// <param name="shippingHeight">The height of the package needed to ship the product. Ensure there is a space between the numeric string and the metric..</param>
        /// <param name="shippingWeight">The weight of the product. Ensure there is a space between the numeric string and the metric..</param>
        /// <param name="shippingWidth">The width of the package needed to ship the product. Ensure there is a space between the numeric string and the metric..</param>
        /// <param name="size">The size of the product..</param>
        /// <param name="sizeSystem">Indicates the country’s sizing system in which you are submitting your product. Must be one of the following values (upper or lowercased): ‘US’, ‘UK’, ‘EU’, ‘DE’ , ‘FR’, ‘JP’, ‘CN’, ‘IT’, ‘ BR’, ‘MEX’, or ‘AU’..</param>
        /// <param name="sizeType">Additional description for the size. Must be one of the following values (upper or lowercased): ‘regular’, ‘petite’ , ‘plus’, ‘big_and_tall’, or ‘maternity’..</param>
        /// <param name="tax">Tax consists of one group of up to four elements, country, region, rate (all required) and tax_ship (optional). All colons, even for blank values, are required..</param>
        /// <param name="title">&lt;p&gt;&lt;&#x3D; 500 characters&lt;/p&gt; &lt;p&gt;The name of the product.&lt;/p&gt;.</param>
        /// <param name="variantNames">Options for this variant. People will see these options next to your Pin and can select the one they want. List them in the order you want them displayed..</param>
        /// <param name="variantValues">Option values for this variant. People will see these options next to your Pin and can select the one they want. List them in the order you want them displayed. The order of the variant values must be consistent with the order of the variant names..</param>
        public UpdatableItemAttributes(string adLink = default(string), bool? adult = default(bool?), string ageGroup = default(string), string availability = default(string), decimal? averageReviewRating = default(decimal?), string brand = default(string), bool? checkoutEnabled = default(bool?), string color = default(string), string condition = default(string), string customLabel0 = default(string), string customLabel1 = default(string), string customLabel2 = default(string), string customLabel3 = default(string), string customLabel4 = default(string), string description = default(string), bool? freeShippingLabel = default(bool?), string freeShippingLimit = default(string), string gender = default(string), string googleProductCategory = default(string), int? gtin = default(int?), string id = default(string), string itemGroupId = default(string), long? lastUpdatedTime = default(long?), string link = default(string), string material = default(string), string minAdPrice = default(string), string mobileLink = default(string), string mpn = default(string), int? numberOfRatings = default(int?), int? numberOfReviews = default(int?), string pattern = default(string), string price = default(string), string productType = default(string), string salePrice = default(string), string shipping = default(string), string shippingHeight = default(string), string shippingWeight = default(string), string shippingWidth = default(string), string size = default(string), string sizeSystem = default(string), string sizeType = default(string), string tax = default(string), string title = default(string), List<string> variantNames = default(List<string>), List<string> variantValues = default(List<string>))
        {
            this.AdLink = adLink;
            this.Adult = adult;
            this.AgeGroup = ageGroup;
            this.Availability = availability;
            this.AverageReviewRating = averageReviewRating;
            this.Brand = brand;
            this.CheckoutEnabled = checkoutEnabled;
            this.Color = color;
            this.Condition = condition;
            this.CustomLabel0 = customLabel0;
            this.CustomLabel1 = customLabel1;
            this.CustomLabel2 = customLabel2;
            this.CustomLabel3 = customLabel3;
            this.CustomLabel4 = customLabel4;
            this.Description = description;
            this.FreeShippingLabel = freeShippingLabel;
            this.FreeShippingLimit = freeShippingLimit;
            this.Gender = gender;
            this.GoogleProductCategory = googleProductCategory;
            this.Gtin = gtin;
            this.Id = id;
            this.ItemGroupId = itemGroupId;
            this.LastUpdatedTime = lastUpdatedTime;
            this.Link = link;
            this.Material = material;
            this.MinAdPrice = minAdPrice;
            this.MobileLink = mobileLink;
            this.Mpn = mpn;
            this.NumberOfRatings = numberOfRatings;
            this.NumberOfReviews = numberOfReviews;
            this.Pattern = pattern;
            this.Price = price;
            this.ProductType = productType;
            this.SalePrice = salePrice;
            this.Shipping = shipping;
            this.ShippingHeight = shippingHeight;
            this.ShippingWeight = shippingWeight;
            this.ShippingWidth = shippingWidth;
            this.Size = size;
            this.SizeSystem = sizeSystem;
            this.SizeType = sizeType;
            this.Tax = tax;
            this.Title = title;
            this.VariantNames = variantNames;
            this.VariantValues = variantValues;
        }

        /// <summary>
        /// Allows advertisers to specify a separate URL that can be used to track traffic coming from Pinterest shopping ads. Must send full URL including tracking—do not send tracking parameters only. At this time we do not support impression tracking. Must begin with http:// or https://.
        /// </summary>
        /// <value>Allows advertisers to specify a separate URL that can be used to track traffic coming from Pinterest shopping ads. Must send full URL including tracking—do not send tracking parameters only. At this time we do not support impression tracking. Must begin with http:// or https://.</value>
        /*
        <example>https://www.example.com/cat/denim-shirt/item012?utm_source&#x3D;Pinterest</example>
        */
        [DataMember(Name = "ad_link", EmitDefaultValue = true)]
        public string AdLink { get; set; }

        /// <summary>
        /// Set this attribute to TRUE if you&#39;re submitting items that are considered “adult”. These will not be shown on Pinterest.
        /// </summary>
        /// <value>Set this attribute to TRUE if you&#39;re submitting items that are considered “adult”. These will not be shown on Pinterest.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "adult", EmitDefaultValue = true)]
        public bool? Adult { get; set; }

        /// <summary>
        /// The age group to apply a demographic range to the product. Must be one of the following values (upper or lowercased): ‘newborn’ , ‘infant’, ‘toddler’, ‘kids’, or ‘adult’.
        /// </summary>
        /// <value>The age group to apply a demographic range to the product. Must be one of the following values (upper or lowercased): ‘newborn’ , ‘infant’, ‘toddler’, ‘kids’, or ‘adult’.</value>
        /*
        <example>newborn</example>
        */
        [DataMember(Name = "age_group", EmitDefaultValue = true)]
        public string AgeGroup { get; set; }

        /// <summary>
        /// The availability of the product. Must be one of the following values (upper or lowercased): ‘in stock’, ‘out of stock’ , ‘preorder’.
        /// </summary>
        /// <value>The availability of the product. Must be one of the following values (upper or lowercased): ‘in stock’, ‘out of stock’ , ‘preorder’.</value>
        /*
        <example>in stock</example>
        */
        [DataMember(Name = "availability", EmitDefaultValue = false)]
        public string Availability { get; set; }

        /// <summary>
        /// Average reviews for the item. Can be a number from 1-5.
        /// </summary>
        /// <value>Average reviews for the item. Can be a number from 1-5.</value>
        /*
        <example>5</example>
        */
        [DataMember(Name = "average_review_rating", EmitDefaultValue = true)]
        public decimal? AverageReviewRating { get; set; }

        /// <summary>
        /// The brand of the product.
        /// </summary>
        /// <value>The brand of the product.</value>
        /*
        <example>Josie’s Denim</example>
        */
        [DataMember(Name = "brand", EmitDefaultValue = true)]
        public string Brand { get; set; }

        /// <summary>
        /// This attribute is not supported anymore.
        /// </summary>
        /// <value>This attribute is not supported anymore.</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "checkout_enabled", EmitDefaultValue = true)]
        [Obsolete]
        public bool? CheckoutEnabled { get; set; }

        /// <summary>
        /// The primary color of the product.
        /// </summary>
        /// <value>The primary color of the product.</value>
        /*
        <example>blue</example>
        */
        [DataMember(Name = "color", EmitDefaultValue = true)]
        public string Color { get; set; }

        /// <summary>
        /// The condition of the product. Must be one of the following values (upper or lowercased): ‘new’, ‘used’, or ‘refurbished’.
        /// </summary>
        /// <value>The condition of the product. Must be one of the following values (upper or lowercased): ‘new’, ‘used’, or ‘refurbished’.</value>
        /*
        <example>new</example>
        */
        [DataMember(Name = "condition", EmitDefaultValue = true)]
        public string Condition { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;</value>
        /*
        <example>Best sellers</example>
        */
        [DataMember(Name = "custom_label_0", EmitDefaultValue = true)]
        public string CustomLabel0 { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;</value>
        /*
        <example>Summer promotion</example>
        */
        [DataMember(Name = "custom_label_1", EmitDefaultValue = true)]
        public string CustomLabel1 { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;</value>
        /*
        <example>Winter sales</example>
        */
        [DataMember(Name = "custom_label_2", EmitDefaultValue = true)]
        public string CustomLabel2 { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;</value>
        /*
        <example>Woman dress</example>
        */
        [DataMember(Name = "custom_label_3", EmitDefaultValue = true)]
        public string CustomLabel3 { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;Custom grouping of products.&lt;/p&gt;</value>
        /*
        <example>Man hat</example>
        */
        [DataMember(Name = "custom_label_4", EmitDefaultValue = true)]
        public string CustomLabel4 { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 10000 characters&lt;/p&gt; &lt;p&gt;The description of the product.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 10000 characters&lt;/p&gt; &lt;p&gt;The description of the product.&lt;/p&gt;</value>
        /*
        <example>Casual fit denim shirt made with the finest quality Japanese denim.</example>
        */
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// The item is free to ship.
        /// </summary>
        /// <value>The item is free to ship.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "free_shipping_label", EmitDefaultValue = true)]
        public bool? FreeShippingLabel { get; set; }

        /// <summary>
        /// The minimum order purchase necessary for the customer to get free shipping. Only relevant if free shipping is offered.
        /// </summary>
        /// <value>The minimum order purchase necessary for the customer to get free shipping. Only relevant if free shipping is offered.</value>
        /*
        <example>35 USD</example>
        */
        [DataMember(Name = "free_shipping_limit", EmitDefaultValue = true)]
        public string FreeShippingLimit { get; set; }

        /// <summary>
        /// The gender associated with the product. Must be one of the following values (upper or lowercased): ‘male’, ‘female’ , or ‘unisex’.
        /// </summary>
        /// <value>The gender associated with the product. Must be one of the following values (upper or lowercased): ‘male’, ‘female’ , or ‘unisex’.</value>
        /*
        <example>unisex</example>
        */
        [DataMember(Name = "gender", EmitDefaultValue = true)]
        public string Gender { get; set; }

        /// <summary>
        /// The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
        /// </summary>
        /// <value>The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.</value>
        /*
        <example>Apparel &amp; Accessories &gt; Clothing &gt; Shirts &amp; Tops</example>
        */
        [DataMember(Name = "google_product_category", EmitDefaultValue = true)]
        public string GoogleProductCategory { get; set; }

        /// <summary>
        /// The unique universal product identifier.
        /// </summary>
        /// <value>The unique universal product identifier.</value>
        /*
        <example>3234567890126</example>
        */
        [DataMember(Name = "gtin", EmitDefaultValue = true)]
        public int? Gtin { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 127 characters&lt;/p&gt; &lt;p&gt;The user-created unique ID that represents the product. Only Unicode characters are accepted.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 127 characters&lt;/p&gt; &lt;p&gt;The user-created unique ID that represents the product. Only Unicode characters are accepted.&lt;/p&gt;</value>
        /*
        <example>DS0294-L</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        [Obsolete]
        public string Id { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 127 characters&lt;/p&gt; &lt;p&gt;The parent ID of the product.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 127 characters&lt;/p&gt; &lt;p&gt;The parent ID of the product.&lt;/p&gt;</value>
        /*
        <example>DS0294</example>
        */
        [DataMember(Name = "item_group_id", EmitDefaultValue = true)]
        public string ItemGroupId { get; set; }

        /// <summary>
        /// The millisecond timestamp when the item was lastly modified by the merchant.
        /// </summary>
        /// <value>The millisecond timestamp when the item was lastly modified by the merchant.</value>
        /*
        <example>1641483432072</example>
        */
        [DataMember(Name = "last_updated_time", EmitDefaultValue = true)]
        public long? LastUpdatedTime { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 511 characters&lt;/p&gt; &lt;p&gt;The landing page for the product.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 511 characters&lt;/p&gt; &lt;p&gt;The landing page for the product.&lt;/p&gt;</value>
        /*
        <example>https://www.example.com/cat/womens-clothing/denim-shirt-0294</example>
        */
        [DataMember(Name = "link", EmitDefaultValue = false)]
        public string Link { get; set; }

        /// <summary>
        /// The material used to make the product.
        /// </summary>
        /// <value>The material used to make the product.</value>
        /*
        <example>cotton</example>
        */
        [DataMember(Name = "material", EmitDefaultValue = true)]
        public string Material { get; set; }

        /// <summary>
        /// The minimum advertised price of the product. It supports the following formats, \&quot;19.99 USD\&quot;, \&quot;19.99USD\&quot; and \&quot;19.99\&quot;. If the currency is not included, we default to US dollars.
        /// </summary>
        /// <value>The minimum advertised price of the product. It supports the following formats, \&quot;19.99 USD\&quot;, \&quot;19.99USD\&quot; and \&quot;19.99\&quot;. If the currency is not included, we default to US dollars.</value>
        /*
        <example>19.99 USD</example>
        */
        [DataMember(Name = "min_ad_price", EmitDefaultValue = true)]
        public string MinAdPrice { get; set; }

        /// <summary>
        /// The mobile-optimized version of your landing page. Must begin with http:// or https://.
        /// </summary>
        /// <value>The mobile-optimized version of your landing page. Must begin with http:// or https://.</value>
        /*
        <example>https://m.example.com/cat/womens-clothing/denim-shirt-0294</example>
        */
        [DataMember(Name = "mobile_link", EmitDefaultValue = true)]
        public string MobileLink { get; set; }

        /// <summary>
        /// Manufacturer Part Number are alpha-numeric codes created by the manufacturer of a product to uniquely identify it among all products from the same manufacturer.
        /// </summary>
        /// <value>Manufacturer Part Number are alpha-numeric codes created by the manufacturer of a product to uniquely identify it among all products from the same manufacturer.</value>
        /*
        <example>PI12345NTEREST</example>
        */
        [DataMember(Name = "mpn", EmitDefaultValue = true)]
        public string Mpn { get; set; }

        /// <summary>
        /// The number of ratings for the item.
        /// </summary>
        /// <value>The number of ratings for the item.</value>
        /*
        <example>10</example>
        */
        [DataMember(Name = "number_of_ratings", EmitDefaultValue = true)]
        public int? NumberOfRatings { get; set; }

        /// <summary>
        /// The number of reviews available for the item.
        /// </summary>
        /// <value>The number of reviews available for the item.</value>
        /*
        <example>10</example>
        */
        [DataMember(Name = "number_of_reviews", EmitDefaultValue = true)]
        public int? NumberOfReviews { get; set; }

        /// <summary>
        /// The description of the pattern used for the product.
        /// </summary>
        /// <value>The description of the pattern used for the product.</value>
        /*
        <example>plaid</example>
        */
        [DataMember(Name = "pattern", EmitDefaultValue = true)]
        public string Pattern { get; set; }

        /// <summary>
        /// The price of the product. It supports the following formats, \&quot;24.99 USD\&quot;, \&quot;24.99USD\&quot; and \&quot;24.99\&quot;. If the currency is not included, we default to US dollars.
        /// </summary>
        /// <value>The price of the product. It supports the following formats, \&quot;24.99 USD\&quot;, \&quot;24.99USD\&quot; and \&quot;24.99\&quot;. If the currency is not included, we default to US dollars.</value>
        /*
        <example>24.99 USD</example>
        */
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public string Price { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;The categorization of your product based on your custom product taxonomy. Subcategories must be sent separated by “ &gt; “. The &gt; must be wrapped by spaces. We do not recognize any other delimiters such as comma or pipe.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 1000 characters&lt;/p&gt; &lt;p&gt;The categorization of your product based on your custom product taxonomy. Subcategories must be sent separated by “ &gt; “. The &gt; must be wrapped by spaces. We do not recognize any other delimiters such as comma or pipe.&lt;/p&gt;</value>
        /*
        <example>Clothing &gt; Women’s &gt; Shirts &gt; Denim</example>
        */
        [DataMember(Name = "product_type", EmitDefaultValue = true)]
        public string ProductType { get; set; }

        /// <summary>
        /// The discounted price of the product. The sale_price must be lower than the price. It supports the following formats, \&quot;14.99 USD\&quot;, \&quot;14.99USD\&quot; and \&quot;14.99\&quot;. If the currency is not included, we default to US dollars.
        /// </summary>
        /// <value>The discounted price of the product. The sale_price must be lower than the price. It supports the following formats, \&quot;14.99 USD\&quot;, \&quot;14.99USD\&quot; and \&quot;14.99\&quot;. If the currency is not included, we default to US dollars.</value>
        /*
        <example>14.99 USD</example>
        */
        [DataMember(Name = "sale_price", EmitDefaultValue = true)]
        public string SalePrice { get; set; }

        /// <summary>
        /// Shipping consists of one group of up to four elements, country, region, service (all optional) and price (required). All colons, even for blank values, are required.
        /// </summary>
        /// <value>Shipping consists of one group of up to four elements, country, region, service (all optional) and price (required). All colons, even for blank values, are required.</value>
        /*
        <example>US:CA:Ground:0 USD</example>
        */
        [DataMember(Name = "shipping", EmitDefaultValue = true)]
        public string Shipping { get; set; }

        /// <summary>
        /// The height of the package needed to ship the product. Ensure there is a space between the numeric string and the metric.
        /// </summary>
        /// <value>The height of the package needed to ship the product. Ensure there is a space between the numeric string and the metric.</value>
        /*
        <example>12 in</example>
        */
        [DataMember(Name = "shipping_height", EmitDefaultValue = true)]
        public string ShippingHeight { get; set; }

        /// <summary>
        /// The weight of the product. Ensure there is a space between the numeric string and the metric.
        /// </summary>
        /// <value>The weight of the product. Ensure there is a space between the numeric string and the metric.</value>
        /*
        <example>3 kg</example>
        */
        [DataMember(Name = "shipping_weight", EmitDefaultValue = true)]
        public string ShippingWeight { get; set; }

        /// <summary>
        /// The width of the package needed to ship the product. Ensure there is a space between the numeric string and the metric.
        /// </summary>
        /// <value>The width of the package needed to ship the product. Ensure there is a space between the numeric string and the metric.</value>
        /*
        <example>16 in</example>
        */
        [DataMember(Name = "shipping_width", EmitDefaultValue = true)]
        public string ShippingWidth { get; set; }

        /// <summary>
        /// The size of the product.
        /// </summary>
        /// <value>The size of the product.</value>
        /*
        <example>M</example>
        */
        [DataMember(Name = "size", EmitDefaultValue = true)]
        public string Size { get; set; }

        /// <summary>
        /// Indicates the country’s sizing system in which you are submitting your product. Must be one of the following values (upper or lowercased): ‘US’, ‘UK’, ‘EU’, ‘DE’ , ‘FR’, ‘JP’, ‘CN’, ‘IT’, ‘ BR’, ‘MEX’, or ‘AU’.
        /// </summary>
        /// <value>Indicates the country’s sizing system in which you are submitting your product. Must be one of the following values (upper or lowercased): ‘US’, ‘UK’, ‘EU’, ‘DE’ , ‘FR’, ‘JP’, ‘CN’, ‘IT’, ‘ BR’, ‘MEX’, or ‘AU’.</value>
        /*
        <example>US</example>
        */
        [DataMember(Name = "size_system", EmitDefaultValue = true)]
        public string SizeSystem { get; set; }

        /// <summary>
        /// Additional description for the size. Must be one of the following values (upper or lowercased): ‘regular’, ‘petite’ , ‘plus’, ‘big_and_tall’, or ‘maternity’.
        /// </summary>
        /// <value>Additional description for the size. Must be one of the following values (upper or lowercased): ‘regular’, ‘petite’ , ‘plus’, ‘big_and_tall’, or ‘maternity’.</value>
        /*
        <example>regular</example>
        */
        [DataMember(Name = "size_type", EmitDefaultValue = true)]
        public string SizeType { get; set; }

        /// <summary>
        /// Tax consists of one group of up to four elements, country, region, rate (all required) and tax_ship (optional). All colons, even for blank values, are required.
        /// </summary>
        /// <value>Tax consists of one group of up to four elements, country, region, rate (all required) and tax_ship (optional). All colons, even for blank values, are required.</value>
        /*
        <example>US:1025433:6.00:y</example>
        */
        [DataMember(Name = "tax", EmitDefaultValue = true)]
        public string Tax { get; set; }

        /// <summary>
        /// &lt;p&gt;&lt;&#x3D; 500 characters&lt;/p&gt; &lt;p&gt;The name of the product.&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;&lt;&#x3D; 500 characters&lt;/p&gt; &lt;p&gt;The name of the product.&lt;/p&gt;</value>
        /*
        <example>Women’s denim shirt, large</example>
        */
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Options for this variant. People will see these options next to your Pin and can select the one they want. List them in the order you want them displayed.
        /// </summary>
        /// <value>Options for this variant. People will see these options next to your Pin and can select the one they want. List them in the order you want them displayed.</value>
        /*
        <example>[&quot;Color&quot;,&quot;Size&quot;]</example>
        */
        [DataMember(Name = "variant_names", EmitDefaultValue = true)]
        public List<string> VariantNames { get; set; }

        /// <summary>
        /// Option values for this variant. People will see these options next to your Pin and can select the one they want. List them in the order you want them displayed. The order of the variant values must be consistent with the order of the variant names.
        /// </summary>
        /// <value>Option values for this variant. People will see these options next to your Pin and can select the one they want. List them in the order you want them displayed. The order of the variant values must be consistent with the order of the variant names.</value>
        /*
        <example>[&quot;Red&quot;,&quot;Small&quot;]</example>
        */
        [DataMember(Name = "variant_values", EmitDefaultValue = true)]
        public List<string> VariantValues { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdatableItemAttributes {\n");
            sb.Append("  AdLink: ").Append(AdLink).Append("\n");
            sb.Append("  Adult: ").Append(Adult).Append("\n");
            sb.Append("  AgeGroup: ").Append(AgeGroup).Append("\n");
            sb.Append("  Availability: ").Append(Availability).Append("\n");
            sb.Append("  AverageReviewRating: ").Append(AverageReviewRating).Append("\n");
            sb.Append("  Brand: ").Append(Brand).Append("\n");
            sb.Append("  CheckoutEnabled: ").Append(CheckoutEnabled).Append("\n");
            sb.Append("  Color: ").Append(Color).Append("\n");
            sb.Append("  Condition: ").Append(Condition).Append("\n");
            sb.Append("  CustomLabel0: ").Append(CustomLabel0).Append("\n");
            sb.Append("  CustomLabel1: ").Append(CustomLabel1).Append("\n");
            sb.Append("  CustomLabel2: ").Append(CustomLabel2).Append("\n");
            sb.Append("  CustomLabel3: ").Append(CustomLabel3).Append("\n");
            sb.Append("  CustomLabel4: ").Append(CustomLabel4).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  FreeShippingLabel: ").Append(FreeShippingLabel).Append("\n");
            sb.Append("  FreeShippingLimit: ").Append(FreeShippingLimit).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  GoogleProductCategory: ").Append(GoogleProductCategory).Append("\n");
            sb.Append("  Gtin: ").Append(Gtin).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ItemGroupId: ").Append(ItemGroupId).Append("\n");
            sb.Append("  LastUpdatedTime: ").Append(LastUpdatedTime).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  Material: ").Append(Material).Append("\n");
            sb.Append("  MinAdPrice: ").Append(MinAdPrice).Append("\n");
            sb.Append("  MobileLink: ").Append(MobileLink).Append("\n");
            sb.Append("  Mpn: ").Append(Mpn).Append("\n");
            sb.Append("  NumberOfRatings: ").Append(NumberOfRatings).Append("\n");
            sb.Append("  NumberOfReviews: ").Append(NumberOfReviews).Append("\n");
            sb.Append("  Pattern: ").Append(Pattern).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  ProductType: ").Append(ProductType).Append("\n");
            sb.Append("  SalePrice: ").Append(SalePrice).Append("\n");
            sb.Append("  Shipping: ").Append(Shipping).Append("\n");
            sb.Append("  ShippingHeight: ").Append(ShippingHeight).Append("\n");
            sb.Append("  ShippingWeight: ").Append(ShippingWeight).Append("\n");
            sb.Append("  ShippingWidth: ").Append(ShippingWidth).Append("\n");
            sb.Append("  Size: ").Append(Size).Append("\n");
            sb.Append("  SizeSystem: ").Append(SizeSystem).Append("\n");
            sb.Append("  SizeType: ").Append(SizeType).Append("\n");
            sb.Append("  Tax: ").Append(Tax).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  VariantNames: ").Append(VariantNames).Append("\n");
            sb.Append("  VariantValues: ").Append(VariantValues).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
