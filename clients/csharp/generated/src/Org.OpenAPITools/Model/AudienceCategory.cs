/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AudienceCategory
    /// </summary>
    [DataContract(Name = "AudienceCategory")]
    public partial class AudienceCategory : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AudienceCategory" /> class.
        /// </summary>
        /// <param name="key">Interest unique key (same as ID)..</param>
        /// <param name="name">Interest name..</param>
        /// <param name="ratio">Interest&#39;s percent of category&#39;s total audience..</param>
        /// <param name="index">Interest affinity index..</param>
        /// <param name="id">Interest ID..</param>
        /// <param name="subcategories">Subcategory interest distribution.</param>
        public AudienceCategory(string key = default(string), string name = default(string), decimal ratio = default(decimal), decimal index = default(decimal), string id = default(string), List<AudienceSubcategory> subcategories = default(List<AudienceSubcategory>))
        {
            this.Key = key;
            this.Name = name;
            this.Ratio = ratio;
            this.Index = index;
            this.Id = id;
            this.Subcategories = subcategories;
        }

        /// <summary>
        /// Interest unique key (same as ID).
        /// </summary>
        /// <value>Interest unique key (same as ID).</value>
        /*
        <example>1234567</example>
        */
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// Interest name.
        /// </summary>
        /// <value>Interest name.</value>
        /*
        <example>travel</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Interest&#39;s percent of category&#39;s total audience.
        /// </summary>
        /// <value>Interest&#39;s percent of category&#39;s total audience.</value>
        /*
        <example>0.551</example>
        */
        [DataMember(Name = "ratio", EmitDefaultValue = false)]
        public decimal Ratio { get; set; }

        /// <summary>
        /// Interest affinity index.
        /// </summary>
        /// <value>Interest affinity index.</value>
        /*
        <example>1.2</example>
        */
        [DataMember(Name = "index", EmitDefaultValue = false)]
        public decimal Index { get; set; }

        /// <summary>
        /// Interest ID.
        /// </summary>
        /// <value>Interest ID.</value>
        /*
        <example>1234567</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Subcategory interest distribution
        /// </summary>
        /// <value>Subcategory interest distribution</value>
        [DataMember(Name = "subcategories", EmitDefaultValue = false)]
        public List<AudienceSubcategory> Subcategories { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AudienceCategory {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Ratio: ").Append(Ratio).Append("\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Subcategories: ").Append(Subcategories).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
