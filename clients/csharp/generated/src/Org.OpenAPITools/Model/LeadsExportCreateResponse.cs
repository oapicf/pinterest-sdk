/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// LeadsExportCreateResponse
    /// </summary>
    [DataContract(Name = "LeadsExportCreateResponse")]
    public partial class LeadsExportCreateResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LeadsExportCreateResponse" /> class.
        /// </summary>
        /// <param name="leadsExportId">ID for the leads export job.</param>
        public LeadsExportCreateResponse(string leadsExportId = default(string))
        {
            this.LeadsExportId = leadsExportId;
        }

        /// <summary>
        /// ID for the leads export job
        /// </summary>
        /// <value>ID for the leads export job</value>
        /*
        <example>123456789012</example>
        */
        [DataMember(Name = "leads_export_id", EmitDefaultValue = false)]
        public string LeadsExportId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LeadsExportCreateResponse {\n");
            sb.Append("  LeadsExportId: ").Append(LeadsExportId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.LeadsExportId != null) {
                // LeadsExportId (string) pattern
                Regex regexLeadsExportId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexLeadsExportId.Match(this.LeadsExportId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LeadsExportId, must match a pattern of " + regexLeadsExportId, new [] { "LeadsExportId" });
                }
            }

            yield break;
        }
    }

}
