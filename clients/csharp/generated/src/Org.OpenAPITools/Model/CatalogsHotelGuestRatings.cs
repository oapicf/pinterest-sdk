/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// If specified, you must provide all properties
    /// </summary>
    [DataContract(Name = "CatalogsHotelGuestRatings")]
    public partial class CatalogsHotelGuestRatings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsHotelGuestRatings" /> class.
        /// </summary>
        /// <param name="score">Your hotel&#39;s rating..</param>
        /// <param name="numberOfReviewers">Total number of people who have rated this hotel..</param>
        /// <param name="maxScore">Max value for the hotel rating score..</param>
        /// <param name="ratingSystem">System you use for guest reviews..</param>
        public CatalogsHotelGuestRatings(decimal score = default(decimal), int numberOfReviewers = default(int), decimal maxScore = default(decimal), string ratingSystem = default(string))
        {
            this.Score = score;
            this.NumberOfReviewers = numberOfReviewers;
            this.MaxScore = maxScore;
            this.RatingSystem = ratingSystem;
        }

        /// <summary>
        /// Your hotel&#39;s rating.
        /// </summary>
        /// <value>Your hotel&#39;s rating.</value>
        [DataMember(Name = "score", EmitDefaultValue = false)]
        public decimal Score { get; set; }

        /// <summary>
        /// Total number of people who have rated this hotel.
        /// </summary>
        /// <value>Total number of people who have rated this hotel.</value>
        [DataMember(Name = "number_of_reviewers", EmitDefaultValue = false)]
        public int NumberOfReviewers { get; set; }

        /// <summary>
        /// Max value for the hotel rating score.
        /// </summary>
        /// <value>Max value for the hotel rating score.</value>
        [DataMember(Name = "max_score", EmitDefaultValue = false)]
        public decimal MaxScore { get; set; }

        /// <summary>
        /// System you use for guest reviews.
        /// </summary>
        /// <value>System you use for guest reviews.</value>
        [DataMember(Name = "rating_system", EmitDefaultValue = false)]
        public string RatingSystem { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsHotelGuestRatings {\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("  NumberOfReviewers: ").Append(NumberOfReviewers).Append("\n");
            sb.Append("  MaxScore: ").Append(MaxScore).Append("\n");
            sb.Append("  RatingSystem: ").Append(RatingSystem).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
