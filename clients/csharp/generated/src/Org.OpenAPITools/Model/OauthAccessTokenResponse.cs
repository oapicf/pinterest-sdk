/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using JsonSubTypes;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// A successful OAuth access token response.
    /// </summary>
    [DataContract(Name = "OauthAccessTokenResponse")]
    [JsonConverter(typeof(JsonSubtypes), "ResponseType")]
    public partial class OauthAccessTokenResponse : IValidatableObject
    {
        /// <summary>
        /// Defines ResponseType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResponseTypeEnum
        {
            /// <summary>
            /// Enum AuthorizationCode for value: authorization_code
            /// </summary>
            [EnumMember(Value = "authorization_code")]
            AuthorizationCode = 1,

            /// <summary>
            /// Enum RefreshToken for value: refresh_token
            /// </summary>
            [EnumMember(Value = "refresh_token")]
            RefreshToken = 2,

            /// <summary>
            /// Enum ClientCredentials for value: client_credentials
            /// </summary>
            [EnumMember(Value = "client_credentials")]
            ClientCredentials = 3
        }


        /// <summary>
        /// Gets or Sets ResponseType
        /// </summary>
        [DataMember(Name = "response_type", EmitDefaultValue = false)]
        public ResponseTypeEnum? ResponseType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OauthAccessTokenResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OauthAccessTokenResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OauthAccessTokenResponse" /> class.
        /// </summary>
        /// <param name="responseType">responseType.</param>
        /// <param name="accessToken">accessToken (required).</param>
        /// <param name="tokenType">tokenType (required) (default to &quot;bearer&quot;).</param>
        /// <param name="expiresIn">expiresIn (required).</param>
        /// <param name="scope">scope (required).</param>
        public OauthAccessTokenResponse(ResponseTypeEnum? responseType = default(ResponseTypeEnum?), string accessToken = default(string), string tokenType = @"bearer", int expiresIn = default(int), string scope = default(string))
        {
            // to ensure "accessToken" is required (not null)
            if (accessToken == null)
            {
                throw new ArgumentNullException("accessToken is a required property for OauthAccessTokenResponse and cannot be null");
            }
            this.AccessToken = accessToken;
            // to ensure "tokenType" is required (not null)
            if (tokenType == null)
            {
                throw new ArgumentNullException("tokenType is a required property for OauthAccessTokenResponse and cannot be null");
            }
            this.TokenType = tokenType;
            this.ExpiresIn = expiresIn;
            // to ensure "scope" is required (not null)
            if (scope == null)
            {
                throw new ArgumentNullException("scope is a required property for OauthAccessTokenResponse and cannot be null");
            }
            this.Scope = scope;
            this.ResponseType = responseType;
        }

        /// <summary>
        /// Gets or Sets AccessToken
        /// </summary>
        [DataMember(Name = "access_token", IsRequired = true, EmitDefaultValue = true)]
        public string AccessToken { get; set; }

        /// <summary>
        /// Gets or Sets TokenType
        /// </summary>
        [DataMember(Name = "token_type", IsRequired = true, EmitDefaultValue = true)]
        public string TokenType { get; set; }

        /// <summary>
        /// Gets or Sets ExpiresIn
        /// </summary>
        [DataMember(Name = "expires_in", IsRequired = true, EmitDefaultValue = true)]
        public int ExpiresIn { get; set; }

        /// <summary>
        /// Gets or Sets Scope
        /// </summary>
        [DataMember(Name = "scope", IsRequired = true, EmitDefaultValue = true)]
        public string Scope { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OauthAccessTokenResponse {\n");
            sb.Append("  ResponseType: ").Append(ResponseType).Append("\n");
            sb.Append("  AccessToken: ").Append(AccessToken).Append("\n");
            sb.Append("  TokenType: ").Append(TokenType).Append("\n");
            sb.Append("  ExpiresIn: ").Append(ExpiresIn).Append("\n");
            sb.Append("  Scope: ").Append(Scope).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            return this.BaseValidate(validationContext);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        protected IEnumerable<ValidationResult> BaseValidate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
