/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CustomerListUpdateRequest
    /// </summary>
    [DataContract(Name = "CustomerListUpdateRequest")]
    public partial class CustomerListUpdateRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets OperationType
        /// </summary>
        [DataMember(Name = "operation_type", IsRequired = true, EmitDefaultValue = true)]
        public UserListOperationType OperationType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerListUpdateRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomerListUpdateRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerListUpdateRequest" /> class.
        /// </summary>
        /// <param name="records">Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5. (required).</param>
        /// <param name="operationType">operationType (required).</param>
        /// <param name="exceptions">exceptions.</param>
        public CustomerListUpdateRequest(string records = default(string), UserListOperationType operationType = default(UserListOperationType), Exception exceptions = default(Exception))
        {
            // to ensure "records" is required (not null)
            if (records == null)
            {
                throw new ArgumentNullException("records is a required property for CustomerListUpdateRequest and cannot be null");
            }
            this.Records = records;
            this.OperationType = operationType;
            this.Exceptions = exceptions;
        }

        /// <summary>
        /// Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
        /// </summary>
        /// <value>Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.</value>
        /*
        <example>email2@pinterest.com,email6@pinterest.com,</example>
        */
        [DataMember(Name = "records", IsRequired = true, EmitDefaultValue = true)]
        public string Records { get; set; }

        /// <summary>
        /// Gets or Sets Exceptions
        /// </summary>
        [DataMember(Name = "exceptions", EmitDefaultValue = false)]
        public Exception Exceptions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerListUpdateRequest {\n");
            sb.Append("  Records: ").Append(Records).Append("\n");
            sb.Append("  OperationType: ").Append(OperationType).Append("\n");
            sb.Append("  Exceptions: ").Append(Exceptions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
