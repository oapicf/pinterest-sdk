/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// BidFloor
    /// </summary>
    [DataContract(Name = "BidFloor")]
    public partial class BidFloor : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BidFloor" /> class.
        /// </summary>
        /// <param name="bidFloors">A list of bid floors in micro currency. For example, [100000, 200000].</param>
        /// <param name="type">Always the string &#39;bidfloor&#39; (default to &quot;bidfloor&quot;).</param>
        public BidFloor(List<int> bidFloors = default(List<int>), string type = @"bidfloor")
        {
            this.BidFloors = bidFloors;
            // use default value if no "type" provided
            this.Type = type ?? @"bidfloor";
        }

        /// <summary>
        /// A list of bid floors in micro currency. For example, [100000, 200000]
        /// </summary>
        /// <value>A list of bid floors in micro currency. For example, [100000, 200000]</value>
        /*
        <example>[100000,200000]</example>
        */
        [DataMember(Name = "bid_floors", EmitDefaultValue = false)]
        public List<int> BidFloors { get; set; }

        /// <summary>
        /// Always the string &#39;bidfloor&#39;
        /// </summary>
        /// <value>Always the string &#39;bidfloor&#39;</value>
        /*
        <example>bidfloor</example>
        */
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BidFloor {\n");
            sb.Append("  BidFloors: ").Append(BidFloors).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
