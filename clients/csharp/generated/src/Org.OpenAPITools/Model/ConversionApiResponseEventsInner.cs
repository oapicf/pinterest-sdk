/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ConversionApiResponseEventsInner
    /// </summary>
    [DataContract(Name = "ConversionApiResponse_events_inner")]
    public partial class ConversionApiResponseEventsInner : IValidatableObject
    {
        /// <summary>
        /// Whether the event was processed successfully.
        /// </summary>
        /// <value>Whether the event was processed successfully.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Failed for value: failed
            /// </summary>
            [EnumMember(Value = "failed")]
            Failed = 1,

            /// <summary>
            /// Enum Processed for value: processed
            /// </summary>
            [EnumMember(Value = "processed")]
            Processed = 2
        }


        /// <summary>
        /// Whether the event was processed successfully.
        /// </summary>
        /// <value>Whether the event was processed successfully.</value>
        /*
        <example>processed</example>
        */
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversionApiResponseEventsInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ConversionApiResponseEventsInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConversionApiResponseEventsInner" /> class.
        /// </summary>
        /// <param name="status">Whether the event was processed successfully. (required).</param>
        /// <param name="errorMessage">Error message containing more information about why the event failed to be processed..</param>
        /// <param name="warningMessage">Warning messages about any fields in the event which are not standard. These are not critical to event processing..</param>
        public ConversionApiResponseEventsInner(StatusEnum status = default(StatusEnum), string errorMessage = default(string), string warningMessage = default(string))
        {
            this.Status = status;
            this.ErrorMessage = errorMessage;
            this.WarningMessage = warningMessage;
        }

        /// <summary>
        /// Error message containing more information about why the event failed to be processed.
        /// </summary>
        /// <value>Error message containing more information about why the event failed to be processed.</value>
        [DataMember(Name = "error_message", EmitDefaultValue = true)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Warning messages about any fields in the event which are not standard. These are not critical to event processing.
        /// </summary>
        /// <value>Warning messages about any fields in the event which are not standard. These are not critical to event processing.</value>
        [DataMember(Name = "warning_message", EmitDefaultValue = true)]
        public string WarningMessage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConversionApiResponseEventsInner {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("  WarningMessage: ").Append(WarningMessage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
