/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// KeywordsRequest
    /// </summary>
    [DataContract(Name = "KeywordsRequest")]
    public partial class KeywordsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KeywordsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KeywordsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KeywordsRequest" /> class.
        /// </summary>
        /// <param name="keywords">Keyword JSON array. Each array element has 3 fields (required).</param>
        /// <param name="parentId">Keyword parent entity ID (advertiser, campaign, ad group). (required).</param>
        public KeywordsRequest(List<KeywordsCommon> keywords = default(List<KeywordsCommon>), string parentId = default(string))
        {
            // to ensure "keywords" is required (not null)
            if (keywords == null)
            {
                throw new ArgumentNullException("keywords is a required property for KeywordsRequest and cannot be null");
            }
            this.Keywords = keywords;
            // to ensure "parentId" is required (not null)
            if (parentId == null)
            {
                throw new ArgumentNullException("parentId is a required property for KeywordsRequest and cannot be null");
            }
            this.ParentId = parentId;
        }

        /// <summary>
        /// Keyword JSON array. Each array element has 3 fields
        /// </summary>
        /// <value>Keyword JSON array. Each array element has 3 fields</value>
        [DataMember(Name = "keywords", IsRequired = true, EmitDefaultValue = true)]
        public List<KeywordsCommon> Keywords { get; set; }

        /// <summary>
        /// Keyword parent entity ID (advertiser, campaign, ad group).
        /// </summary>
        /// <value>Keyword parent entity ID (advertiser, campaign, ad group).</value>
        /*
        <example>383791336903426391</example>
        */
        [DataMember(Name = "parent_id", IsRequired = true, EmitDefaultValue = true)]
        public string ParentId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KeywordsRequest {\n");
            sb.Append("  Keywords: ").Append(Keywords).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.ParentId != null) {
                // ParentId (string) pattern
                Regex regexParentId = new Regex(@"^((AG)|C)?\d+$", RegexOptions.CultureInvariant);
                if (!regexParentId.Match(this.ParentId).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ParentId, must match a pattern of " + regexParentId, new [] { "ParentId" });
                }
            }

            yield break;
        }
    }

}
