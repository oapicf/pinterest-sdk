/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AssetGroupBinding
    /// </summary>
    [DataContract(Name = "AssetGroupBinding")]
    public partial class AssetGroupBinding : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AssetGroupBinding" /> class.
        /// </summary>
        /// <param name="id">Asset Group ID..</param>
        /// <param name="assetGroupName">Asset Group name.</param>
        /// <param name="assetGroupDescription">Asset group description.</param>
        /// <param name="assetGroupTypes">Asset group types.</param>
        /// <param name="adAccountsIds">A list of ad account IDs under the asset group.</param>
        /// <param name="profilesIds">A list of profile IDs under asset group.</param>
        /// <param name="createdTime">The creation time of the asset group.</param>
        /// <param name="updatedTime">The last update time of the asset group.</param>
        /// <param name="owner">The data of the business that owns the asset group..</param>
        /// <param name="createdBy">The data of the user that created the asset group..</param>
        public AssetGroupBinding(string id = default(string), string assetGroupName = default(string), string assetGroupDescription = default(string), List<string> assetGroupTypes = default(List<string>), List<string> adAccountsIds = default(List<string>), List<string> profilesIds = default(List<string>), int? createdTime = default(int?), int? updatedTime = default(int?), BusinessAccessUserSummary owner = default(BusinessAccessUserSummary), BusinessAccessUserSummary createdBy = default(BusinessAccessUserSummary))
        {
            this.Id = id;
            this.AssetGroupName = assetGroupName;
            this.AssetGroupDescription = assetGroupDescription;
            this.AssetGroupTypes = assetGroupTypes;
            this.AdAccountsIds = adAccountsIds;
            this.ProfilesIds = profilesIds;
            this.CreatedTime = createdTime;
            this.UpdatedTime = updatedTime;
            this.Owner = owner;
            this.CreatedBy = createdBy;
        }

        /// <summary>
        /// Asset Group ID.
        /// </summary>
        /// <value>Asset Group ID.</value>
        /*
        <example>666791336903426391</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Asset Group name
        /// </summary>
        /// <value>Asset Group name</value>
        /*
        <example>Canada Ad Accounts</example>
        */
        [DataMember(Name = "asset_group_name", EmitDefaultValue = true)]
        public string AssetGroupName { get; set; }

        /// <summary>
        /// Asset group description
        /// </summary>
        /// <value>Asset group description</value>
        /*
        <example>Asset group that has ad accounts used in Canada</example>
        */
        [DataMember(Name = "asset_group_description", EmitDefaultValue = true)]
        public string AssetGroupDescription { get; set; }

        /// <summary>
        /// Asset group types
        /// </summary>
        /// <value>Asset group types</value>
        /*
        <example>[&quot;LOCATION_OR_LANGUAGE&quot;]</example>
        */
        [DataMember(Name = "asset_group_types", EmitDefaultValue = false)]
        public List<string> AssetGroupTypes { get; set; }

        /// <summary>
        /// A list of ad account IDs under the asset group
        /// </summary>
        /// <value>A list of ad account IDs under the asset group</value>
        /*
        <example>[&quot;549755885175&quot;]</example>
        */
        [DataMember(Name = "ad_accounts_ids", EmitDefaultValue = true)]
        public List<string> AdAccountsIds { get; set; }

        /// <summary>
        /// A list of profile IDs under asset group
        /// </summary>
        /// <value>A list of profile IDs under asset group</value>
        /*
        <example>[&quot;630433785246278264&quot;]</example>
        */
        [DataMember(Name = "profiles_ids", EmitDefaultValue = true)]
        public List<string> ProfilesIds { get; set; }

        /// <summary>
        /// The creation time of the asset group
        /// </summary>
        /// <value>The creation time of the asset group</value>
        /*
        <example>1646767577816</example>
        */
        [DataMember(Name = "created_time", EmitDefaultValue = true)]
        public int? CreatedTime { get; set; }

        /// <summary>
        /// The last update time of the asset group
        /// </summary>
        /// <value>The last update time of the asset group</value>
        /*
        <example>1646767577816</example>
        */
        [DataMember(Name = "updated_time", EmitDefaultValue = true)]
        public int? UpdatedTime { get; set; }

        /// <summary>
        /// The data of the business that owns the asset group.
        /// </summary>
        /// <value>The data of the business that owns the asset group.</value>
        [DataMember(Name = "owner", EmitDefaultValue = true)]
        public BusinessAccessUserSummary Owner { get; set; }

        /// <summary>
        /// The data of the user that created the asset group.
        /// </summary>
        /// <value>The data of the user that created the asset group.</value>
        [DataMember(Name = "created_by", EmitDefaultValue = true)]
        public BusinessAccessUserSummary CreatedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AssetGroupBinding {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AssetGroupName: ").Append(AssetGroupName).Append("\n");
            sb.Append("  AssetGroupDescription: ").Append(AssetGroupDescription).Append("\n");
            sb.Append("  AssetGroupTypes: ").Append(AssetGroupTypes).Append("\n");
            sb.Append("  AdAccountsIds: ").Append(AdAccountsIds).Append("\n");
            sb.Append("  ProfilesIds: ").Append(ProfilesIds).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  UpdatedTime: ").Append(UpdatedTime).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.Id != null) {
                // Id (string) pattern
                Regex regexId = new Regex(@"^\d+$", RegexOptions.CultureInvariant);
                if (!regexId.Match(this.Id).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Id, must match a pattern of " + regexId, new [] { "Id" });
                }
            }

            yield break;
        }
    }

}
