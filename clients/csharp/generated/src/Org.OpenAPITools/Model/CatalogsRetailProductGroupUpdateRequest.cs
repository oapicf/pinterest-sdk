/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Request object for updating a retail product group.
    /// </summary>
    [DataContract(Name = "CatalogsRetailProductGroupUpdateRequest")]
    public partial class CatalogsRetailProductGroupUpdateRequest : IValidatableObject
    {
        /// <summary>
        /// Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
        /// </summary>
        /// <value>Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CatalogTypeEnum
        {
            /// <summary>
            /// Enum RETAIL for value: RETAIL
            /// </summary>
            [EnumMember(Value = "RETAIL")]
            RETAIL = 1
        }


        /// <summary>
        /// Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
        /// </summary>
        /// <value>Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.</value>
        [DataMember(Name = "catalog_type", EmitDefaultValue = false)]
        public CatalogTypeEnum? CatalogType { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name = "country", EmitDefaultValue = false)]
        public Country? Country { get; set; }

        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name = "locale", EmitDefaultValue = false)]
        public CatalogsLocale? Locale { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CatalogsRetailProductGroupUpdateRequest" /> class.
        /// </summary>
        /// <param name="catalogType">Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one..</param>
        /// <param name="name">name.</param>
        /// <param name="description">description.</param>
        /// <param name="filters">filters.</param>
        /// <param name="country">country.</param>
        /// <param name="locale">locale.</param>
        public CatalogsRetailProductGroupUpdateRequest(CatalogTypeEnum? catalogType = default(CatalogTypeEnum?), string name = default(string), string description = default(string), CatalogsProductGroupFiltersRequest filters = default(CatalogsProductGroupFiltersRequest), Country? country = default(Country?), CatalogsLocale? locale = default(CatalogsLocale?))
        {
            this.CatalogType = catalogType;
            this.Name = name;
            this.Description = description;
            this.Filters = filters;
            this.Country = country;
            this.Locale = locale;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name = "filters", EmitDefaultValue = false)]
        public CatalogsProductGroupFiltersRequest Filters { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CatalogsRetailProductGroupUpdateRequest {\n");
            sb.Append("  CatalogType: ").Append(CatalogType).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Filters: ").Append(Filters).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
