/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Request for creation of entities in bulk.
    /// </summary>
    [DataContract(Name = "BulkUpsertRequestUpdate")]
    public partial class BulkUpsertRequestUpdate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkUpsertRequestUpdate" /> class.
        /// </summary>
        /// <param name="campaigns">campaigns.</param>
        /// <param name="adGroups">adGroups.</param>
        /// <param name="ads">ads.</param>
        /// <param name="productGroups">productGroups.</param>
        /// <param name="keywords">keywords.</param>
        public BulkUpsertRequestUpdate(List<CampaignUpdateRequest> campaigns = default(List<CampaignUpdateRequest>), List<AdGroupUpdateRequest> adGroups = default(List<AdGroupUpdateRequest>), List<AdUpdateRequest> ads = default(List<AdUpdateRequest>), List<ProductGroupPromotionUpdateRequest> productGroups = default(List<ProductGroupPromotionUpdateRequest>), List<KeywordUpdate> keywords = default(List<KeywordUpdate>))
        {
            this.Campaigns = campaigns;
            this.AdGroups = adGroups;
            this.Ads = ads;
            this.ProductGroups = productGroups;
            this.Keywords = keywords;
        }

        /// <summary>
        /// Gets or Sets Campaigns
        /// </summary>
        [DataMember(Name = "campaigns", EmitDefaultValue = false)]
        public List<CampaignUpdateRequest> Campaigns { get; set; }

        /// <summary>
        /// Gets or Sets AdGroups
        /// </summary>
        [DataMember(Name = "ad_groups", EmitDefaultValue = false)]
        public List<AdGroupUpdateRequest> AdGroups { get; set; }

        /// <summary>
        /// Gets or Sets Ads
        /// </summary>
        [DataMember(Name = "ads", EmitDefaultValue = false)]
        public List<AdUpdateRequest> Ads { get; set; }

        /// <summary>
        /// Gets or Sets ProductGroups
        /// </summary>
        [DataMember(Name = "product_groups", EmitDefaultValue = false)]
        public List<ProductGroupPromotionUpdateRequest> ProductGroups { get; set; }

        /// <summary>
        /// Gets or Sets Keywords
        /// </summary>
        [DataMember(Name = "keywords", EmitDefaultValue = false)]
        public List<KeywordUpdate> Keywords { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BulkUpsertRequestUpdate {\n");
            sb.Append("  Campaigns: ").Append(Campaigns).Append("\n");
            sb.Append("  AdGroups: ").Append(AdGroups).Append("\n");
            sb.Append("  Ads: ").Append(Ads).Append("\n");
            sb.Append("  ProductGroups: ").Append(ProductGroups).Append("\n");
            sb.Append("  Keywords: ").Append(Keywords).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
