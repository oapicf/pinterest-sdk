/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AuthRespondInvitesBodyInvitesInnerAction
    /// </summary>
    [DataContract(Name = "AuthRespondInvitesBody_invites_inner_action")]
    public partial class AuthRespondInvitesBodyInvitesInnerAction : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthRespondInvitesBodyInvitesInnerAction" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AuthRespondInvitesBodyInvitesInnerAction() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthRespondInvitesBodyInvitesInnerAction" /> class.
        /// </summary>
        /// <param name="acceptInvite">Whether the invite/request is accepted. (required).</param>
        /// <param name="assetIdToPermissions">An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. .</param>
        public AuthRespondInvitesBodyInvitesInnerAction(bool acceptInvite = default(bool), Dictionary<string, List<Permissions>> assetIdToPermissions = default(Dictionary<string, List<Permissions>>))
        {
            this.AcceptInvite = acceptInvite;
            this.AssetIdToPermissions = assetIdToPermissions;
        }

        /// <summary>
        /// Whether the invite/request is accepted.
        /// </summary>
        /// <value>Whether the invite/request is accepted.</value>
        [DataMember(Name = "accept_invite", IsRequired = true, EmitDefaultValue = true)]
        public bool AcceptInvite { get; set; }

        /// <summary>
        /// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
        /// </summary>
        /// <value>An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. </value>
        /*
        <example>{&quot;549760723247&quot;:[&quot;ANALYST&quot;],&quot;549760723248&quot;:[&quot;ANALYST&quot;,&quot;ADMIN&quot;],&quot;809944451643622187&quot;:[&quot;PROFILE_PUBLISHER&quot;]}</example>
        */
        [DataMember(Name = "asset_id_to_permissions", EmitDefaultValue = false)]
        public Dictionary<string, List<Permissions>> AssetIdToPermissions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AuthRespondInvitesBodyInvitesInnerAction {\n");
            sb.Append("  AcceptInvite: ").Append(AcceptInvite).Append("\n");
            sb.Append("  AssetIdToPermissions: ").Append(AssetIdToPermissions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
