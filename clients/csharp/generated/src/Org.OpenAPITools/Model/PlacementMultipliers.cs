/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// This represents a mapping from placement to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified placement in &#x60;MAX_BID&#x60; ad groups in &#x60;CATALOG_SALES&#x60; campaigns. All placement multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
    /// </summary>
    [DataContract(Name = "PlacementMultipliers")]
    public partial class PlacementMultipliers : IValidatableObject
    {
        /// <summary>
        /// Defines PLACEMENT
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PLACEMENTEnum
        {
            /// <summary>
            /// Enum SEARCH for value: SEARCH
            /// </summary>
            [EnumMember(Value = "SEARCH")]
            SEARCH = 1,

            /// <summary>
            /// Enum BROWSE for value: BROWSE
            /// </summary>
            [EnumMember(Value = "BROWSE")]
            BROWSE = 2
        }


        /// <summary>
        /// Gets or Sets PLACEMENT
        /// </summary>
        [DataMember(Name = "PLACEMENT", EmitDefaultValue = false)]
        public PLACEMENTEnum? PLACEMENT { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PlacementMultipliers" /> class.
        /// </summary>
        /// <param name="pLACEMENT">pLACEMENT.</param>
        public PlacementMultipliers(PLACEMENTEnum? pLACEMENT = default(PLACEMENTEnum?))
        {
            this.PLACEMENT = pLACEMENT;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlacementMultipliers {\n");
            sb.Append("  PLACEMENT: ").Append(PLACEMENT).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
