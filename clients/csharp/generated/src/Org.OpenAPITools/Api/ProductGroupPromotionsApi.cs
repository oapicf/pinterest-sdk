/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Client.Auth;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductGroupPromotionsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Create product group promotions
        /// </summary>
        /// <remarks>
        /// Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionResponse</returns>
        ProductGroupPromotionResponse ProductGroupPromotionsCreate(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0);

        /// <summary>
        /// Create product group promotions
        /// </summary>
        /// <remarks>
        /// Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionResponse</returns>
        ApiResponse<ProductGroupPromotionResponse> ProductGroupPromotionsCreateWithHttpInfo(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0);
        /// <summary>
        /// Get a product group promotion by id
        /// </summary>
        /// <remarks>
        /// Get a product group promotion by id
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionResponse</returns>
        ProductGroupPromotionResponse ProductGroupPromotionsGet(string adAccountId, string productGroupPromotionId, int operationIndex = 0);

        /// <summary>
        /// Get a product group promotion by id
        /// </summary>
        /// <remarks>
        /// Get a product group promotion by id
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionResponse</returns>
        ApiResponse<ProductGroupPromotionResponse> ProductGroupPromotionsGetWithHttpInfo(string adAccountId, string productGroupPromotionId, int operationIndex = 0);
        /// <summary>
        /// Get product group promotions
        /// </summary>
        /// <remarks>
        /// List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionsList200Response</returns>
        ProductGroupPromotionsList200Response ProductGroupPromotionsList(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0);

        /// <summary>
        /// Get product group promotions
        /// </summary>
        /// <remarks>
        /// List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionsList200Response</returns>
        ApiResponse<ProductGroupPromotionsList200Response> ProductGroupPromotionsListWithHttpInfo(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0);
        /// <summary>
        /// Update product group promotions
        /// </summary>
        /// <remarks>
        /// Update multiple existing Product Group Promotions (by product_group_id)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionResponse</returns>
        ProductGroupPromotionResponse ProductGroupPromotionsUpdate(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0);

        /// <summary>
        /// Update product group promotions
        /// </summary>
        /// <remarks>
        /// Update multiple existing Product Group Promotions (by product_group_id)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionResponse</returns>
        ApiResponse<ProductGroupPromotionResponse> ProductGroupPromotionsUpdateWithHttpInfo(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0);
        /// <summary>
        /// Get product group analytics
        /// </summary>
        /// <remarks>
        /// Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;ProductGroupAnalyticsResponseInner&gt;</returns>
        List<ProductGroupAnalyticsResponseInner> ProductGroupsAnalytics(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0);

        /// <summary>
        /// Get product group analytics
        /// </summary>
        /// <remarks>
        /// Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;ProductGroupAnalyticsResponseInner&gt;</returns>
        ApiResponse<List<ProductGroupAnalyticsResponseInner>> ProductGroupsAnalyticsWithHttpInfo(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductGroupPromotionsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Create product group promotions
        /// </summary>
        /// <remarks>
        /// Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionResponse</returns>
        System.Threading.Tasks.Task<ProductGroupPromotionResponse> ProductGroupPromotionsCreateAsync(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Create product group promotions
        /// </summary>
        /// <remarks>
        /// Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProductGroupPromotionResponse>> ProductGroupPromotionsCreateWithHttpInfoAsync(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Get a product group promotion by id
        /// </summary>
        /// <remarks>
        /// Get a product group promotion by id
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionResponse</returns>
        System.Threading.Tasks.Task<ProductGroupPromotionResponse> ProductGroupPromotionsGetAsync(string adAccountId, string productGroupPromotionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Get a product group promotion by id
        /// </summary>
        /// <remarks>
        /// Get a product group promotion by id
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProductGroupPromotionResponse>> ProductGroupPromotionsGetWithHttpInfoAsync(string adAccountId, string productGroupPromotionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Get product group promotions
        /// </summary>
        /// <remarks>
        /// List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionsList200Response</returns>
        System.Threading.Tasks.Task<ProductGroupPromotionsList200Response> ProductGroupPromotionsListAsync(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Get product group promotions
        /// </summary>
        /// <remarks>
        /// List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionsList200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProductGroupPromotionsList200Response>> ProductGroupPromotionsListWithHttpInfoAsync(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Update product group promotions
        /// </summary>
        /// <remarks>
        /// Update multiple existing Product Group Promotions (by product_group_id)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionResponse</returns>
        System.Threading.Tasks.Task<ProductGroupPromotionResponse> ProductGroupPromotionsUpdateAsync(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Update product group promotions
        /// </summary>
        /// <remarks>
        /// Update multiple existing Product Group Promotions (by product_group_id)
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProductGroupPromotionResponse>> ProductGroupPromotionsUpdateWithHttpInfoAsync(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Get product group analytics
        /// </summary>
        /// <remarks>
        /// Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;ProductGroupAnalyticsResponseInner&gt;</returns>
        System.Threading.Tasks.Task<List<ProductGroupAnalyticsResponseInner>> ProductGroupsAnalyticsAsync(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Get product group analytics
        /// </summary>
        /// <remarks>
        /// Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;ProductGroupAnalyticsResponseInner&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<ProductGroupAnalyticsResponseInner>>> ProductGroupsAnalyticsWithHttpInfoAsync(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductGroupPromotionsApi : IProductGroupPromotionsApiSync, IProductGroupPromotionsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProductGroupPromotionsApi : IProductGroupPromotionsApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductGroupPromotionsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductGroupPromotionsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductGroupPromotionsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductGroupPromotionsApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductGroupPromotionsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProductGroupPromotionsApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductGroupPromotionsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProductGroupPromotionsApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Create product group promotions Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionResponse</returns>
        public ProductGroupPromotionResponse ProductGroupPromotionsCreate(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> localVarResponse = ProductGroupPromotionsCreateWithHttpInfo(adAccountId, productGroupPromotionCreateRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create product group promotions Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> ProductGroupPromotionsCreateWithHttpInfo(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0)
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsCreate");
            }

            // verify the required parameter 'productGroupPromotionCreateRequest' is set
            if (productGroupPromotionCreateRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupPromotionCreateRequest' when calling ProductGroupPromotionsApi->ProductGroupPromotionsCreate");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.Data = productGroupPromotionCreateRequest;

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsCreate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ProductGroupPromotionResponse>("/ad_accounts/{ad_account_id}/product_group_promotions", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create product group promotions Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionResponse</returns>
        public async System.Threading.Tasks.Task<ProductGroupPromotionResponse> ProductGroupPromotionsCreateAsync(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> localVarResponse = await ProductGroupPromotionsCreateWithHttpInfoAsync(adAccountId, productGroupPromotionCreateRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create product group promotions Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionCreateRequest">List of Product Group Promotions to create, size limit [1, 30].</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse>> ProductGroupPromotionsCreateWithHttpInfoAsync(string adAccountId, ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsCreate");
            }

            // verify the required parameter 'productGroupPromotionCreateRequest' is set
            if (productGroupPromotionCreateRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupPromotionCreateRequest' when calling ProductGroupPromotionsApi->ProductGroupPromotionsCreate");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.Data = productGroupPromotionCreateRequest;

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsCreate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ProductGroupPromotionResponse>("/ad_accounts/{ad_account_id}/product_group_promotions", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get a product group promotion by id Get a product group promotion by id
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionResponse</returns>
        public ProductGroupPromotionResponse ProductGroupPromotionsGet(string adAccountId, string productGroupPromotionId, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> localVarResponse = ProductGroupPromotionsGetWithHttpInfo(adAccountId, productGroupPromotionId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get a product group promotion by id Get a product group promotion by id
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> ProductGroupPromotionsGetWithHttpInfo(string adAccountId, string productGroupPromotionId, int operationIndex = 0)
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsGet");
            }

            // verify the required parameter 'productGroupPromotionId' is set
            if (productGroupPromotionId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupPromotionId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.PathParameters.Add("product_group_promotion_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(productGroupPromotionId)); // path parameter

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ProductGroupPromotionResponse>("/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get a product group promotion by id Get a product group promotion by id
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionResponse</returns>
        public async System.Threading.Tasks.Task<ProductGroupPromotionResponse> ProductGroupPromotionsGetAsync(string adAccountId, string productGroupPromotionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> localVarResponse = await ProductGroupPromotionsGetWithHttpInfoAsync(adAccountId, productGroupPromotionId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get a product group promotion by id Get a product group promotion by id
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionId">Unique identifier of a product group promotion</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse>> ProductGroupPromotionsGetWithHttpInfoAsync(string adAccountId, string productGroupPromotionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsGet");
            }

            // verify the required parameter 'productGroupPromotionId' is set
            if (productGroupPromotionId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupPromotionId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.PathParameters.Add("product_group_promotion_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(productGroupPromotionId)); // path parameter

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ProductGroupPromotionResponse>("/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get product group promotions List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionsList200Response</returns>
        public ProductGroupPromotionsList200Response ProductGroupPromotionsList(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionsList200Response> localVarResponse = ProductGroupPromotionsListWithHttpInfo(adAccountId, productGroupPromotionIds, entityStatuses, adGroupId, pageSize, order, bookmark);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get product group promotions List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionsList200Response</returns>
        public Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionsList200Response> ProductGroupPromotionsListWithHttpInfo(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsList");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            if (productGroupPromotionIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "product_group_promotion_ids", productGroupPromotionIds));
            }
            if (entityStatuses != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "entity_statuses", entityStatuses));
            }
            if (adGroupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "ad_group_id", adGroupId));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (order != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "order", order));
            }
            if (bookmark != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bookmark", bookmark));
            }

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsList";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ProductGroupPromotionsList200Response>("/ad_accounts/{ad_account_id}/product_group_promotions", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get product group promotions List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionsList200Response</returns>
        public async System.Threading.Tasks.Task<ProductGroupPromotionsList200Response> ProductGroupPromotionsListAsync(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionsList200Response> localVarResponse = await ProductGroupPromotionsListWithHttpInfoAsync(adAccountId, productGroupPromotionIds, entityStatuses, adGroupId, pageSize, order, bookmark, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get product group promotions List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionIds">List of Product group promotion Ids. (optional)</param>
        /// <param name="entityStatuses">Entity status (optional)</param>
        /// <param name="adGroupId">Ad group Id. (optional)</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionsList200Response)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionsList200Response>> ProductGroupPromotionsListWithHttpInfoAsync(string adAccountId, List<string>? productGroupPromotionIds = default(List<string>?), List<string>? entityStatuses = default(List<string>?), string? adGroupId = default(string?), int? pageSize = default(int?), string? order = default(string?), string? bookmark = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsList");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            if (productGroupPromotionIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "product_group_promotion_ids", productGroupPromotionIds));
            }
            if (entityStatuses != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "entity_statuses", entityStatuses));
            }
            if (adGroupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "ad_group_id", adGroupId));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (order != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "order", order));
            }
            if (bookmark != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "bookmark", bookmark));
            }

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsList";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ProductGroupPromotionsList200Response>("/ad_accounts/{ad_account_id}/product_group_promotions", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update product group promotions Update multiple existing Product Group Promotions (by product_group_id)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductGroupPromotionResponse</returns>
        public ProductGroupPromotionResponse ProductGroupPromotionsUpdate(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> localVarResponse = ProductGroupPromotionsUpdateWithHttpInfo(adAccountId, productGroupPromotionUpdateRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update product group promotions Update multiple existing Product Group Promotions (by product_group_id)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductGroupPromotionResponse</returns>
        public Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> ProductGroupPromotionsUpdateWithHttpInfo(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0)
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsUpdate");
            }

            // verify the required parameter 'productGroupPromotionUpdateRequest' is set
            if (productGroupPromotionUpdateRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupPromotionUpdateRequest' when calling ProductGroupPromotionsApi->ProductGroupPromotionsUpdate");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.Data = productGroupPromotionUpdateRequest;

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<ProductGroupPromotionResponse>("/ad_accounts/{ad_account_id}/product_group_promotions", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update product group promotions Update multiple existing Product Group Promotions (by product_group_id)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductGroupPromotionResponse</returns>
        public async System.Threading.Tasks.Task<ProductGroupPromotionResponse> ProductGroupPromotionsUpdateAsync(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse> localVarResponse = await ProductGroupPromotionsUpdateWithHttpInfoAsync(adAccountId, productGroupPromotionUpdateRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update product group promotions Update multiple existing Product Group Promotions (by product_group_id)
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="productGroupPromotionUpdateRequest">Parameters to update Product group promotions</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductGroupPromotionResponse)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ProductGroupPromotionResponse>> ProductGroupPromotionsUpdateWithHttpInfoAsync(string adAccountId, ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupPromotionsUpdate");
            }

            // verify the required parameter 'productGroupPromotionUpdateRequest' is set
            if (productGroupPromotionUpdateRequest == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupPromotionUpdateRequest' when calling ProductGroupPromotionsApi->ProductGroupPromotionsUpdate");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.Data = productGroupPromotionUpdateRequest;

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupPromotionsUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<ProductGroupPromotionResponse>("/ad_accounts/{ad_account_id}/product_group_promotions", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupPromotionsUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get product group analytics Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;ProductGroupAnalyticsResponseInner&gt;</returns>
        public List<ProductGroupAnalyticsResponseInner> ProductGroupsAnalytics(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<List<ProductGroupAnalyticsResponseInner>> localVarResponse = ProductGroupsAnalyticsWithHttpInfo(adAccountId, startDate, endDate, productGroupIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get product group analytics Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;ProductGroupAnalyticsResponseInner&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<List<ProductGroupAnalyticsResponseInner>> ProductGroupsAnalyticsWithHttpInfo(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupsAnalytics");
            }

            // verify the required parameter 'productGroupIds' is set
            if (productGroupIds == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupIds' when calling ProductGroupPromotionsApi->ProductGroupsAnalytics");
            }

            // verify the required parameter 'columns' is set
            if (columns == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'columns' when calling ProductGroupPromotionsApi->ProductGroupsAnalytics");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_date", startDate));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "end_date", endDate));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "product_group_ids", productGroupIds));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "columns", columns));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "granularity", granularity));
            if (clickWindowDays != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "click_window_days", clickWindowDays));
            }
            if (engagementWindowDays != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "engagement_window_days", engagementWindowDays));
            }
            if (viewWindowDays != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "view_window_days", viewWindowDays));
            }
            if (conversionReportTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "conversion_report_time", conversionReportTime));
            }

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupsAnalytics";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<ProductGroupAnalyticsResponseInner>>("/ad_accounts/{ad_account_id}/product_groups/analytics", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupsAnalytics", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get product group analytics Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;ProductGroupAnalyticsResponseInner&gt;</returns>
        public async System.Threading.Tasks.Task<List<ProductGroupAnalyticsResponseInner>> ProductGroupsAnalyticsAsync(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<List<ProductGroupAnalyticsResponseInner>> localVarResponse = await ProductGroupsAnalyticsWithHttpInfoAsync(adAccountId, startDate, endDate, productGroupIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get product group analytics Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="productGroupIds">List of Product group Ids to use to filter the results.</param>
        /// <param name="columns">Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned</param>
        /// <param name="granularity">TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly</param>
        /// <param name="clickWindowDays">Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="engagementWindowDays">Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)</param>
        /// <param name="viewWindowDays">Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)</param>
        /// <param name="conversionReportTime">The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;ProductGroupAnalyticsResponseInner&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<List<ProductGroupAnalyticsResponseInner>>> ProductGroupsAnalyticsWithHttpInfoAsync(string adAccountId, DateOnly startDate, DateOnly endDate, List<string> productGroupIds, List<string> columns, Granularity granularity, int? clickWindowDays = default(int?), int? engagementWindowDays = default(int?), int? viewWindowDays = default(int?), string? conversionReportTime = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'adAccountId' is set
            if (adAccountId == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'adAccountId' when calling ProductGroupPromotionsApi->ProductGroupsAnalytics");
            }

            // verify the required parameter 'productGroupIds' is set
            if (productGroupIds == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'productGroupIds' when calling ProductGroupPromotionsApi->ProductGroupsAnalytics");
            }

            // verify the required parameter 'columns' is set
            if (columns == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'columns' when calling ProductGroupPromotionsApi->ProductGroupsAnalytics");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("ad_account_id", Org.OpenAPITools.Client.ClientUtils.ParameterToString(adAccountId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_date", startDate));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "end_date", endDate));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("multi", "product_group_ids", productGroupIds));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "columns", columns));
            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "granularity", granularity));
            if (clickWindowDays != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "click_window_days", clickWindowDays));
            }
            if (engagementWindowDays != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "engagement_window_days", engagementWindowDays));
            }
            if (viewWindowDays != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "view_window_days", viewWindowDays));
            }
            if (conversionReportTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "conversion_report_time", conversionReportTime));
            }

            localVarRequestOptions.Operation = "ProductGroupPromotionsApi.ProductGroupsAnalytics";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (pinterest_oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<ProductGroupAnalyticsResponseInner>>("/ad_accounts/{ad_account_id}/product_groups/analytics", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ProductGroupsAnalytics", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
