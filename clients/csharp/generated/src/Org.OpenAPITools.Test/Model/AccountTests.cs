/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing Account
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AccountTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Account
        //private Account instance;

        public AccountTests()
        {
            // TODO uncomment below to create an instance of Account
            //instance = new Account();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Account
        /// </summary>
        [Fact]
        public void AccountInstanceTest()
        {
            // TODO uncomment below to test "IsType" Account
            //Assert.IsType<Account>(instance);
        }

        /// <summary>
        /// Test the property 'AccountType'
        /// </summary>
        [Fact]
        public void AccountTypeTest()
        {
            // TODO unit test for the property 'AccountType'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'ProfileImage'
        /// </summary>
        [Fact]
        public void ProfileImageTest()
        {
            // TODO unit test for the property 'ProfileImage'
        }

        /// <summary>
        /// Test the property 'WebsiteUrl'
        /// </summary>
        [Fact]
        public void WebsiteUrlTest()
        {
            // TODO unit test for the property 'WebsiteUrl'
        }

        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }

        /// <summary>
        /// Test the property 'About'
        /// </summary>
        [Fact]
        public void AboutTest()
        {
            // TODO unit test for the property 'About'
        }

        /// <summary>
        /// Test the property 'BusinessName'
        /// </summary>
        [Fact]
        public void BusinessNameTest()
        {
            // TODO unit test for the property 'BusinessName'
        }

        /// <summary>
        /// Test the property 'BoardCount'
        /// </summary>
        [Fact]
        public void BoardCountTest()
        {
            // TODO unit test for the property 'BoardCount'
        }

        /// <summary>
        /// Test the property 'PinCount'
        /// </summary>
        [Fact]
        public void PinCountTest()
        {
            // TODO unit test for the property 'PinCount'
        }

        /// <summary>
        /// Test the property 'FollowerCount'
        /// </summary>
        [Fact]
        public void FollowerCountTest()
        {
            // TODO unit test for the property 'FollowerCount'
        }

        /// <summary>
        /// Test the property 'FollowingCount'
        /// </summary>
        [Fact]
        public void FollowingCountTest()
        {
            // TODO unit test for the property 'FollowingCount'
        }

        /// <summary>
        /// Test the property 'MonthlyViews'
        /// </summary>
        [Fact]
        public void MonthlyViewsTest()
        {
            // TODO unit test for the property 'MonthlyViews'
        }
    }
}
