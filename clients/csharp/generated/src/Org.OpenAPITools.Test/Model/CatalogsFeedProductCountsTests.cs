/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing CatalogsFeedProductCounts
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CatalogsFeedProductCountsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CatalogsFeedProductCounts
        //private CatalogsFeedProductCounts instance;

        public CatalogsFeedProductCountsTests()
        {
            // TODO uncomment below to create an instance of CatalogsFeedProductCounts
            //instance = new CatalogsFeedProductCounts();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CatalogsFeedProductCounts
        /// </summary>
        [Fact]
        public void CatalogsFeedProductCountsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CatalogsFeedProductCounts
            //Assert.IsType<CatalogsFeedProductCounts>(instance);
        }

        /// <summary>
        /// Test the property 'Original'
        /// </summary>
        [Fact]
        public void OriginalTest()
        {
            // TODO unit test for the property 'Original'
        }

        /// <summary>
        /// Test the property 'Ingested'
        /// </summary>
        [Fact]
        public void IngestedTest()
        {
            // TODO unit test for the property 'Ingested'
        }
    }
}
