/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PinCreate
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PinCreateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PinCreate
        //private PinCreate instance;

        public PinCreateTests()
        {
            // TODO uncomment below to create an instance of PinCreate
            //instance = new PinCreate();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PinCreate
        /// </summary>
        [Fact]
        public void PinCreateInstanceTest()
        {
            // TODO uncomment below to test "IsType" PinCreate
            //Assert.IsType<PinCreate>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'Link'
        /// </summary>
        [Fact]
        public void LinkTest()
        {
            // TODO unit test for the property 'Link'
        }

        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'DominantColor'
        /// </summary>
        [Fact]
        public void DominantColorTest()
        {
            // TODO unit test for the property 'DominantColor'
        }

        /// <summary>
        /// Test the property 'AltText'
        /// </summary>
        [Fact]
        public void AltTextTest()
        {
            // TODO unit test for the property 'AltText'
        }

        /// <summary>
        /// Test the property 'BoardId'
        /// </summary>
        [Fact]
        public void BoardIdTest()
        {
            // TODO unit test for the property 'BoardId'
        }

        /// <summary>
        /// Test the property 'BoardSectionId'
        /// </summary>
        [Fact]
        public void BoardSectionIdTest()
        {
            // TODO unit test for the property 'BoardSectionId'
        }

        /// <summary>
        /// Test the property 'BoardOwner'
        /// </summary>
        [Fact]
        public void BoardOwnerTest()
        {
            // TODO unit test for the property 'BoardOwner'
        }

        /// <summary>
        /// Test the property 'Media'
        /// </summary>
        [Fact]
        public void MediaTest()
        {
            // TODO unit test for the property 'Media'
        }

        /// <summary>
        /// Test the property 'MediaSource'
        /// </summary>
        [Fact]
        public void MediaSourceTest()
        {
            // TODO unit test for the property 'MediaSource'
        }

        /// <summary>
        /// Test the property 'ParentPinId'
        /// </summary>
        [Fact]
        public void ParentPinIdTest()
        {
            // TODO unit test for the property 'ParentPinId'
        }

        /// <summary>
        /// Test the property 'Note'
        /// </summary>
        [Fact]
        public void NoteTest()
        {
            // TODO unit test for the property 'Note'
        }
    }
}
