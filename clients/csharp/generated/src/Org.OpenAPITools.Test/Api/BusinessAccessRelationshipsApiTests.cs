/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BusinessAccessRelationshipsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BusinessAccessRelationshipsApiTests : IDisposable
    {
        private BusinessAccessRelationshipsApi instance;

        public BusinessAccessRelationshipsApiTests()
        {
            instance = new BusinessAccessRelationshipsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BusinessAccessRelationshipsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BusinessAccessRelationshipsApi
            //Assert.IsType<BusinessAccessRelationshipsApi>(instance);
        }

        /// <summary>
        /// Test DeleteBusinessMembership
        /// </summary>
        [Fact]
        public void DeleteBusinessMembershipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //MembersToDeleteBody membersToDeleteBody = null;
            //var response = instance.DeleteBusinessMembership(businessId, membersToDeleteBody);
            //Assert.IsType<DeletedMembersResponse>(response);
        }

        /// <summary>
        /// Test DeleteBusinessPartners
        /// </summary>
        [Fact]
        public void DeleteBusinessPartnersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //DeletePartnersRequest deletePartnersRequest = null;
            //var response = instance.DeleteBusinessPartners(businessId, deletePartnersRequest);
            //Assert.IsType<DeletePartnersResponse>(response);
        }

        /// <summary>
        /// Test GetBusinessEmployers
        /// </summary>
        [Fact]
        public void GetBusinessEmployersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //string? bookmark = null;
            //var response = instance.GetBusinessEmployers(pageSize, bookmark);
            //Assert.IsType<GetBusinessEmployers200Response>(response);
        }

        /// <summary>
        /// Test GetBusinessMembers
        /// </summary>
        [Fact]
        public void GetBusinessMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //bool? assetsSummary = null;
            //List<MemberBusinessRole>? businessRoles = null;
            //string? memberIds = null;
            //int? startIndex = null;
            //string? bookmark = null;
            //int? pageSize = null;
            //var response = instance.GetBusinessMembers(businessId, assetsSummary, businessRoles, memberIds, startIndex, bookmark, pageSize);
            //Assert.IsType<GetBusinessMembers200Response>(response);
        }

        /// <summary>
        /// Test GetBusinessPartners
        /// </summary>
        [Fact]
        public void GetBusinessPartnersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //bool? assetsSummary = null;
            //PartnerType? partnerType = null;
            //string? partnerIds = null;
            //int? startIndex = null;
            //int? pageSize = null;
            //string? bookmark = null;
            //var response = instance.GetBusinessPartners(businessId, assetsSummary, partnerType, partnerIds, startIndex, pageSize, bookmark);
            //Assert.IsType<GetBusinessPartners200Response>(response);
        }

        /// <summary>
        /// Test UpdateBusinessMemberships
        /// </summary>
        [Fact]
        public void UpdateBusinessMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //List<UpdateMemberBusinessRoleBody> updateMemberBusinessRoleBody = null;
            //var response = instance.UpdateBusinessMemberships(businessId, updateMemberBusinessRoleBody);
            //Assert.IsType<UpdateMemberResultsResponseArray>(response);
        }
    }
}
