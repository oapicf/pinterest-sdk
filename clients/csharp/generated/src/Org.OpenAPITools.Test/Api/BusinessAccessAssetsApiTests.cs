/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing BusinessAccessAssetsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BusinessAccessAssetsApiTests : IDisposable
    {
        private BusinessAccessAssetsApi instance;

        public BusinessAccessAssetsApiTests()
        {
            instance = new BusinessAccessAssetsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BusinessAccessAssetsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BusinessAccessAssetsApi
            //Assert.IsType<BusinessAccessAssetsApi>(instance);
        }

        /// <summary>
        /// Test AssetGroupCreate
        /// </summary>
        [Fact]
        public void AssetGroupCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //CreateAssetGroupBody createAssetGroupBody = null;
            //var response = instance.AssetGroupCreate(businessId, createAssetGroupBody);
            //Assert.IsType<CreateAssetGroupResponse>(response);
        }

        /// <summary>
        /// Test AssetGroupDelete
        /// </summary>
        [Fact]
        public void AssetGroupDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //DeleteAssetGroupBody deleteAssetGroupBody = null;
            //var response = instance.AssetGroupDelete(businessId, deleteAssetGroupBody);
            //Assert.IsType<DeleteAssetGroupResponse>(response);
        }

        /// <summary>
        /// Test AssetGroupUpdate
        /// </summary>
        [Fact]
        public void AssetGroupUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //UpdateAssetGroupBody updateAssetGroupBody = null;
            //var response = instance.AssetGroupUpdate(businessId, updateAssetGroupBody);
            //Assert.IsType<UpdateAssetGroupResponse>(response);
        }

        /// <summary>
        /// Test BusinessAssetMembersGet
        /// </summary>
        [Fact]
        public void BusinessAssetMembersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //string assetId = null;
            //string? bookmark = null;
            //int? pageSize = null;
            //int? startIndex = null;
            //var response = instance.BusinessAssetMembersGet(businessId, assetId, bookmark, pageSize, startIndex);
            //Assert.IsType<BusinessAssetMembersGet200Response>(response);
        }

        /// <summary>
        /// Test BusinessAssetPartnersGet
        /// </summary>
        [Fact]
        public void BusinessAssetPartnersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //string assetId = null;
            //int? startIndex = null;
            //string? bookmark = null;
            //int? pageSize = null;
            //var response = instance.BusinessAssetPartnersGet(businessId, assetId, startIndex, bookmark, pageSize);
            //Assert.IsType<BusinessAssetPartnersGet200Response>(response);
        }

        /// <summary>
        /// Test BusinessAssetsGet
        /// </summary>
        [Fact]
        public void BusinessAssetsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //List<PermissionsWithOwner>? permissions = null;
            //string? childAssetId = null;
            //string? assetGroupId = null;
            //string? assetType = null;
            //int? startIndex = null;
            //string? bookmark = null;
            //int? pageSize = null;
            //var response = instance.BusinessAssetsGet(businessId, permissions, childAssetId, assetGroupId, assetType, startIndex, bookmark, pageSize);
            //Assert.IsType<BusinessAssetsGet200Response>(response);
        }

        /// <summary>
        /// Test BusinessMemberAssetsGet
        /// </summary>
        [Fact]
        public void BusinessMemberAssetsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //string memberId = null;
            //string? assetType = null;
            //int? startIndex = null;
            //string? bookmark = null;
            //int? pageSize = null;
            //var response = instance.BusinessMemberAssetsGet(businessId, memberId, assetType, startIndex, bookmark, pageSize);
            //Assert.IsType<BusinessMemberAssetsGet200Response>(response);
        }

        /// <summary>
        /// Test BusinessMembersAssetAccessDelete
        /// </summary>
        [Fact]
        public void BusinessMembersAssetAccessDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //BusinessMembersAssetAccessDeleteRequest businessMembersAssetAccessDeleteRequest = null;
            //var response = instance.BusinessMembersAssetAccessDelete(businessId, businessMembersAssetAccessDeleteRequest);
            //Assert.IsType<DeleteMemberAccessResultsResponseArray>(response);
        }

        /// <summary>
        /// Test BusinessMembersAssetAccessUpdate
        /// </summary>
        [Fact]
        public void BusinessMembersAssetAccessUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //UpdateMemberAssetAccessBody updateMemberAssetAccessBody = null;
            //var response = instance.BusinessMembersAssetAccessUpdate(businessId, updateMemberAssetAccessBody);
            //Assert.IsType<UpdateMemberAssetsResultsResponseArray>(response);
        }

        /// <summary>
        /// Test BusinessPartnerAssetAccessGet
        /// </summary>
        [Fact]
        public void BusinessPartnerAssetAccessGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //string partnerId = null;
            //PartnerType? partnerType = null;
            //string? assetType = null;
            //int? startIndex = null;
            //int? pageSize = null;
            //string? bookmark = null;
            //var response = instance.BusinessPartnerAssetAccessGet(businessId, partnerId, partnerType, assetType, startIndex, pageSize, bookmark);
            //Assert.IsType<BusinessPartnerAssetAccessGet200Response>(response);
        }

        /// <summary>
        /// Test DeletePartnerAssetAccessHandlerImpl
        /// </summary>
        [Fact]
        public void DeletePartnerAssetAccessHandlerImplTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //DeletePartnerAssetAccessBody deletePartnerAssetAccessBody = null;
            //var response = instance.DeletePartnerAssetAccessHandlerImpl(businessId, deletePartnerAssetAccessBody);
            //Assert.IsType<DeletePartnerAssetsResultsResponseArray>(response);
        }

        /// <summary>
        /// Test UpdatePartnerAssetAccessHandlerImpl
        /// </summary>
        [Fact]
        public void UpdatePartnerAssetAccessHandlerImplTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string businessId = null;
            //UpdatePartnerAssetAccessBody updatePartnerAssetAccessBody = null;
            //var response = instance.UpdatePartnerAssetAccessHandlerImpl(businessId, updatePartnerAssetAccessBody);
            //Assert.IsType<UpdatePartnerAssetsResultsResponseArray>(response);
        }
    }
}
