/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CampaignsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CampaignsApiTests : IDisposable
    {
        private CampaignsApi instance;

        public CampaignsApiTests()
        {
            instance = new CampaignsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CampaignsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CampaignsApi
            //Assert.IsType<CampaignsApi>(instance);
        }

        /// <summary>
        /// Test CampaignTargetingAnalyticsGet
        /// </summary>
        [Fact]
        public void CampaignTargetingAnalyticsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string> campaignIds = null;
            //DateOnly startDate = null;
            //DateOnly endDate = null;
            //List<AdsAnalyticsCampaignTargetingType> targetingTypes = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string? conversionReportTime = null;
            //ConversionReportAttributionType? attributionTypes = null;
            //var response = instance.CampaignTargetingAnalyticsGet(adAccountId, campaignIds, startDate, endDate, targetingTypes, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, attributionTypes);
            //Assert.IsType<MetricsResponse>(response);
        }

        /// <summary>
        /// Test CampaignsAnalytics
        /// </summary>
        [Fact]
        public void CampaignsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateOnly startDate = null;
            //DateOnly endDate = null;
            //List<string> campaignIds = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string? conversionReportTime = null;
            //var response = instance.CampaignsAnalytics(adAccountId, startDate, endDate, campaignIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<CampaignsAnalyticsResponseInner>>(response);
        }

        /// <summary>
        /// Test CampaignsCreate
        /// </summary>
        [Fact]
        public void CampaignsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<CampaignCreateRequest> campaignCreateRequest = null;
            //var response = instance.CampaignsCreate(adAccountId, campaignCreateRequest);
            //Assert.IsType<CampaignCreateResponse>(response);
        }

        /// <summary>
        /// Test CampaignsGet
        /// </summary>
        [Fact]
        public void CampaignsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string campaignId = null;
            //var response = instance.CampaignsGet(adAccountId, campaignId);
            //Assert.IsType<CampaignResponse>(response);
        }

        /// <summary>
        /// Test CampaignsList
        /// </summary>
        [Fact]
        public void CampaignsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string>? campaignIds = null;
            //List<string>? entityStatuses = null;
            //int? pageSize = null;
            //string? order = null;
            //string? bookmark = null;
            //var response = instance.CampaignsList(adAccountId, campaignIds, entityStatuses, pageSize, order, bookmark);
            //Assert.IsType<CampaignsList200Response>(response);
        }

        /// <summary>
        /// Test CampaignsUpdate
        /// </summary>
        [Fact]
        public void CampaignsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<CampaignUpdateRequest> campaignUpdateRequest = null;
            //var response = instance.CampaignsUpdate(adAccountId, campaignUpdateRequest);
            //Assert.IsType<CampaignUpdateResponse>(response);
        }
    }
}
