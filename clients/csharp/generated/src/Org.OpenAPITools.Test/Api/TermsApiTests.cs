/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TermsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TermsApiTests : IDisposable
    {
        private TermsApi instance;

        public TermsApiTests()
        {
            instance = new TermsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TermsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TermsApi
            //Assert.IsType<TermsApi>(instance);
        }

        /// <summary>
        /// Test TermsRelatedList
        /// </summary>
        [Fact]
        public void TermsRelatedListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> terms = null;
            //var response = instance.TermsRelatedList(terms);
            //Assert.IsType<RelatedTerms>(response);
        }

        /// <summary>
        /// Test TermsSuggestedList
        /// </summary>
        [Fact]
        public void TermsSuggestedListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string term = null;
            //int? limit = null;
            //var response = instance.TermsSuggestedList(term, limit);
            //Assert.IsType<List<string>>(response);
        }
    }
}
