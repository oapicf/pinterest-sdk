/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AdGroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AdGroupsApiTests : IDisposable
    {
        private AdGroupsApi instance;

        public AdGroupsApiTests()
        {
            instance = new AdGroupsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AdGroupsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AdGroupsApi
            //Assert.IsType<AdGroupsApi>(instance);
        }

        /// <summary>
        /// Test AdGroupsAnalytics
        /// </summary>
        [Fact]
        public void AdGroupsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateOnly startDate = null;
            //DateOnly endDate = null;
            //List<string> adGroupIds = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string? conversionReportTime = null;
            //var response = instance.AdGroupsAnalytics(adAccountId, startDate, endDate, adGroupIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
            //Assert.IsType<List<AdGroupsAnalyticsResponseInner>>(response);
        }

        /// <summary>
        /// Test AdGroupsAudienceSizing
        /// </summary>
        [Fact]
        public void AdGroupsAudienceSizingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //AdGroupAudienceSizingRequest? adGroupAudienceSizingRequest = null;
            //var response = instance.AdGroupsAudienceSizing(adAccountId, adGroupAudienceSizingRequest);
            //Assert.IsType<AdGroupAudienceSizingResponse>(response);
        }

        /// <summary>
        /// Test AdGroupsBidFloorGet
        /// </summary>
        [Fact]
        public void AdGroupsBidFloorGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //BidFloorRequest bidFloorRequest = null;
            //var response = instance.AdGroupsBidFloorGet(adAccountId, bidFloorRequest);
            //Assert.IsType<BidFloor>(response);
        }

        /// <summary>
        /// Test AdGroupsCreate
        /// </summary>
        [Fact]
        public void AdGroupsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<AdGroupCreateRequest> adGroupCreateRequest = null;
            //var response = instance.AdGroupsCreate(adAccountId, adGroupCreateRequest);
            //Assert.IsType<AdGroupArrayResponse>(response);
        }

        /// <summary>
        /// Test AdGroupsGet
        /// </summary>
        [Fact]
        public void AdGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string adGroupId = null;
            //var response = instance.AdGroupsGet(adAccountId, adGroupId);
            //Assert.IsType<AdGroupResponse>(response);
        }

        /// <summary>
        /// Test AdGroupsList
        /// </summary>
        [Fact]
        public void AdGroupsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string>? campaignIds = null;
            //List<string>? adGroupIds = null;
            //List<string>? entityStatuses = null;
            //int? pageSize = null;
            //string? order = null;
            //string? bookmark = null;
            //bool? translateInterestsToNames = null;
            //var response = instance.AdGroupsList(adAccountId, campaignIds, adGroupIds, entityStatuses, pageSize, order, bookmark, translateInterestsToNames);
            //Assert.IsType<AdGroupsList200Response>(response);
        }

        /// <summary>
        /// Test AdGroupsTargetingAnalyticsGet
        /// </summary>
        [Fact]
        public void AdGroupsTargetingAnalyticsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string> adGroupIds = null;
            //DateOnly startDate = null;
            //DateOnly endDate = null;
            //List<AdsAnalyticsTargetingType> targetingTypes = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string? conversionReportTime = null;
            //ConversionReportAttributionType? attributionTypes = null;
            //var response = instance.AdGroupsTargetingAnalyticsGet(adAccountId, adGroupIds, startDate, endDate, targetingTypes, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, attributionTypes);
            //Assert.IsType<MetricsResponse>(response);
        }

        /// <summary>
        /// Test AdGroupsUpdate
        /// </summary>
        [Fact]
        public void AdGroupsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<AdGroupUpdateRequest> adGroupUpdateRequest = null;
            //var response = instance.AdGroupsUpdate(adAccountId, adGroupUpdateRequest);
            //Assert.IsType<AdGroupArrayResponse>(response);
        }
    }
}
