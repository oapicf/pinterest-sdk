/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AdsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AdsApiTests : IDisposable
    {
        private AdsApi instance;

        public AdsApiTests()
        {
            instance = new AdsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AdsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AdsApi
            //Assert.IsType<AdsApi>(instance);
        }

        /// <summary>
        /// Test AdPreviewsCreate
        /// </summary>
        [Fact]
        public void AdPreviewsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //AdPreviewRequest adPreviewRequest = null;
            //var response = instance.AdPreviewsCreate(adAccountId, adPreviewRequest);
            //Assert.IsType<AdPreviewURLResponse>(response);
        }

        /// <summary>
        /// Test AdTargetingAnalyticsGet
        /// </summary>
        [Fact]
        public void AdTargetingAnalyticsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string> adIds = null;
            //DateOnly startDate = null;
            //DateOnly endDate = null;
            //List<AdsAnalyticsAdTargetingType> targetingTypes = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string? conversionReportTime = null;
            //ConversionReportAttributionType? attributionTypes = null;
            //var response = instance.AdTargetingAnalyticsGet(adAccountId, adIds, startDate, endDate, targetingTypes, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, attributionTypes);
            //Assert.IsType<MetricsResponse>(response);
        }

        /// <summary>
        /// Test AdsAnalytics
        /// </summary>
        [Fact]
        public void AdsAnalyticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //DateOnly startDate = null;
            //DateOnly endDate = null;
            //List<string> columns = null;
            //Granularity granularity = null;
            //List<string>? adIds = null;
            //int? clickWindowDays = null;
            //int? engagementWindowDays = null;
            //int? viewWindowDays = null;
            //string? conversionReportTime = null;
            //List<string>? pinIds = null;
            //List<string>? campaignIds = null;
            //var response = instance.AdsAnalytics(adAccountId, startDate, endDate, columns, granularity, adIds, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime, pinIds, campaignIds);
            //Assert.IsType<List<AdsAnalyticsResponseInner>>(response);
        }

        /// <summary>
        /// Test AdsCreate
        /// </summary>
        [Fact]
        public void AdsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<AdCreateRequest> adCreateRequest = null;
            //var response = instance.AdsCreate(adAccountId, adCreateRequest);
            //Assert.IsType<AdArrayResponse>(response);
        }

        /// <summary>
        /// Test AdsGet
        /// </summary>
        [Fact]
        public void AdsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string adId = null;
            //var response = instance.AdsGet(adAccountId, adId);
            //Assert.IsType<AdResponse>(response);
        }

        /// <summary>
        /// Test AdsList
        /// </summary>
        [Fact]
        public void AdsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<string>? campaignIds = null;
            //List<string>? adGroupIds = null;
            //List<string>? adIds = null;
            //List<string>? entityStatuses = null;
            //int? pageSize = null;
            //string? order = null;
            //string? bookmark = null;
            //var response = instance.AdsList(adAccountId, campaignIds, adGroupIds, adIds, entityStatuses, pageSize, order, bookmark);
            //Assert.IsType<AdsList200Response>(response);
        }

        /// <summary>
        /// Test AdsUpdate
        /// </summary>
        [Fact]
        public void AdsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //List<AdUpdateRequest> adUpdateRequest = null;
            //var response = instance.AdsUpdate(adAccountId, adUpdateRequest);
            //Assert.IsType<AdArrayResponse>(response);
        }
    }
}
