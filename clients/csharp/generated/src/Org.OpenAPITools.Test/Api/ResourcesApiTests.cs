/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ResourcesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ResourcesApiTests : IDisposable
    {
        private ResourcesApi instance;

        public ResourcesApiTests()
        {
            instance = new ResourcesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ResourcesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ResourcesApi
            //Assert.IsType<ResourcesApi>(instance);
        }

        /// <summary>
        /// Test AdAccountCountriesGet
        /// </summary>
        [Fact]
        public void AdAccountCountriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AdAccountCountriesGet();
            //Assert.IsType<AdAccountsCountryResponse>(response);
        }

        /// <summary>
        /// Test DeliveryMetricsGet
        /// </summary>
        [Fact]
        public void DeliveryMetricsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? reportType = null;
            //var response = instance.DeliveryMetricsGet(reportType);
            //Assert.IsType<DeliveryMetricsResponse>(response);
        }

        /// <summary>
        /// Test InterestTargetingOptionsGet
        /// </summary>
        [Fact]
        public void InterestTargetingOptionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string interestId = null;
            //var response = instance.InterestTargetingOptionsGet(interestId);
            //Assert.IsType<SingleInterestTargetingOptionResponse>(response);
        }

        /// <summary>
        /// Test LeadFormQuestionsGet
        /// </summary>
        [Fact]
        public void LeadFormQuestionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.LeadFormQuestionsGet();
        }

        /// <summary>
        /// Test MetricsReadyStateGet
        /// </summary>
        [Fact]
        public void MetricsReadyStateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string date = null;
            //var response = instance.MetricsReadyStateGet(date);
            //Assert.IsType<BookClosedResponse>(response);
        }

        /// <summary>
        /// Test TargetingOptionsGet
        /// </summary>
        [Fact]
        public void TargetingOptionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string targetingType = null;
            //string? clientId = null;
            //string? oauthSignature = null;
            //string? timestamp = null;
            //string? adAccountId = null;
            //var response = instance.TargetingOptionsGet(targetingType, clientId, oauthSignature, timestamp, adAccountId);
            //Assert.IsType<List<Object>>(response);
        }
    }
}
