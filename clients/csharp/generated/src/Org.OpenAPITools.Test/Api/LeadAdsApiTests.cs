/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing LeadAdsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LeadAdsApiTests : IDisposable
    {
        private LeadAdsApi instance;

        public LeadAdsApiTests()
        {
            instance = new LeadAdsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LeadAdsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LeadAdsApi
            //Assert.IsType<LeadAdsApi>(instance);
        }

        /// <summary>
        /// Test AdAccountsSubscriptionsDelById
        /// </summary>
        [Fact]
        public void AdAccountsSubscriptionsDelByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string subscriptionId = null;
            //instance.AdAccountsSubscriptionsDelById(adAccountId, subscriptionId);
        }

        /// <summary>
        /// Test AdAccountsSubscriptionsGetById
        /// </summary>
        [Fact]
        public void AdAccountsSubscriptionsGetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string subscriptionId = null;
            //var response = instance.AdAccountsSubscriptionsGetById(adAccountId, subscriptionId);
            //Assert.IsType<AdAccountGetSubscriptionResponse>(response);
        }

        /// <summary>
        /// Test AdAccountsSubscriptionsGetList
        /// </summary>
        [Fact]
        public void AdAccountsSubscriptionsGetListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //int? pageSize = null;
            //string? bookmark = null;
            //var response = instance.AdAccountsSubscriptionsGetList(adAccountId, pageSize, bookmark);
            //Assert.IsType<AdAccountsSubscriptionsGetList200Response>(response);
        }

        /// <summary>
        /// Test AdAccountsSubscriptionsPost
        /// </summary>
        [Fact]
        public void AdAccountsSubscriptionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //AdAccountCreateSubscriptionRequest adAccountCreateSubscriptionRequest = null;
            //var response = instance.AdAccountsSubscriptionsPost(adAccountId, adAccountCreateSubscriptionRequest);
            //Assert.IsType<AdAccountCreateSubscriptionResponse>(response);
        }
    }
}
