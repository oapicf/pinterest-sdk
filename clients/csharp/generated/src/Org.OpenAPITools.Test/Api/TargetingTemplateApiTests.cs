/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TargetingTemplateApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TargetingTemplateApiTests : IDisposable
    {
        private TargetingTemplateApi instance;

        public TargetingTemplateApiTests()
        {
            instance = new TargetingTemplateApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TargetingTemplateApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TargetingTemplateApi
            //Assert.IsType<TargetingTemplateApi>(instance);
        }

        /// <summary>
        /// Test TargetingTemplateCreate
        /// </summary>
        [Fact]
        public void TargetingTemplateCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //TargetingTemplateCreate targetingTemplateCreate = null;
            //var response = instance.TargetingTemplateCreate(adAccountId, targetingTemplateCreate);
            //Assert.IsType<TargetingTemplateGetResponseData>(response);
        }

        /// <summary>
        /// Test TargetingTemplateList
        /// </summary>
        [Fact]
        public void TargetingTemplateListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //string? order = null;
            //bool? includeSizing = null;
            //string? searchQuery = null;
            //int? pageSize = null;
            //string? bookmark = null;
            //var response = instance.TargetingTemplateList(adAccountId, order, includeSizing, searchQuery, pageSize, bookmark);
            //Assert.IsType<TargetingTemplateList200Response>(response);
        }

        /// <summary>
        /// Test TargetingTemplateUpdate
        /// </summary>
        [Fact]
        public void TargetingTemplateUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adAccountId = null;
            //TargetingTemplateUpdateRequest targetingTemplateUpdateRequest = null;
            //instance.TargetingTemplateUpdate(adAccountId, targetingTemplateUpdateRequest);
        }
    }
}
