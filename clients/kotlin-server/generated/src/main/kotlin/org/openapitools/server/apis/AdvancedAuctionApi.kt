/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AdvancedAuctionItems
import org.openapitools.server.models.AdvancedAuctionItemsGetRequest
import org.openapitools.server.models.AdvancedAuctionItemsSubmitRequest
import org.openapitools.server.models.AdvancedAuctionProcessedItems
import org.openapitools.server.models.Error

fun Route.AdvancedAuctionApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    post<Paths.advancedAuctionItemsGetPost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "catalog_id" : "2680059592705",
              "items" : [ {
                "country" : "US",
                "bid_options" : {
                  "bid_in_micro_currency" : 5000000,
                  "placement_multipliers" : {
                    "browse" : 0.9,
                    "search" : 1.2
                  },
                  "app_type_multipliers" : {
                    "android_mobile" : 1.1,
                    "android_tablet" : 1.1,
                    "ipad" : 1.2,
                    "iphone" : 1.2,
                    "web" : 0.9,
                    "web_mobile" : 0.8
                  }
                },
                "item_id" : "DS0294-M",
                "language" : "EN"
              }, {
                "country" : "US",
                "bid_options" : {
                  "bid_in_micro_currency" : 5000000,
                  "placement_multipliers" : {
                    "browse" : 0.9,
                    "search" : 1.2
                  },
                  "app_type_multipliers" : {
                    "android_mobile" : 1.1,
                    "android_tablet" : 1.1,
                    "ipad" : 1.2,
                    "iphone" : 1.2,
                    "web" : 0.9,
                    "web_mobile" : 0.8
                  }
                },
                "item_id" : "DS0294-M",
                "language" : "EN"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.advancedAuctionItemsSubmitPost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "catalog_id" : "2680059592705",
              "items" : [ {
                "operation" : "UPSERT",
                "errors" : [ {
                  "code" : 6,
                  "message" : "Bid in micro currency should be non-negative"
                }, {
                  "code" : 6,
                  "message" : "Bid in micro currency should be non-negative"
                } ]
              }, {
                "operation" : "UPSERT",
                "errors" : [ {
                  "code" : 6,
                  "message" : "Bid in micro currency should be non-negative"
                }, {
                  "code" : 6,
                  "message" : "Bid in micro currency should be non-negative"
                } ]
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
