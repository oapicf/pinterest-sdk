/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AdAccount
import org.openapitools.server.models.AdAccountAnalyticsResponseInner
import org.openapitools.server.models.AdAccountCreateRequest
import org.openapitools.server.models.AdAccountsList200Response
import org.openapitools.server.models.AdsAnalyticsCreateAsyncRequest
import org.openapitools.server.models.AdsAnalyticsCreateAsyncResponse
import org.openapitools.server.models.AdsAnalyticsGetAsyncResponse
import org.openapitools.server.models.AdsAnalyticsTargetingType
import org.openapitools.server.models.ConversionReportAttributionType
import org.openapitools.server.models.CreateMMMReportRequest
import org.openapitools.server.models.CreateMMMReportResponse
import org.openapitools.server.models.Error
import org.openapitools.server.models.GetMMMReportResponse
import org.openapitools.server.models.Granularity
import org.openapitools.server.models.MetricsResponse
import org.openapitools.server.models.TemplatesList200Response

fun Route.AdAccountsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    get<Paths.adAccountAnalytics> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """[ {
              "DATE" : "2021-04-01",
              "AD_ACCOUNT_ID" : "547602124502",
              "SPEND_IN_DOLLAR" : 30,
              "TOTAL_CLICKTHROUGH" : 216
            }, {
              "DATE" : "2021-04-01",
              "AD_ACCOUNT_ID" : "547602124502",
              "SPEND_IN_DOLLAR" : 30,
              "TOTAL_CLICKTHROUGH" : 216
            } ]"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.adAccountTargetingAnalyticsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "data" : [ {
                "targeting_type" : "KEYWORD",
                "targeting_value" : "christmas decor ideas",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "iphone",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "ipad",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "web",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "web_mobile",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "android_mobile",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "android_tablet",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "GENDER",
                "targeting_value" : "female",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "LOCATION",
                "targeting_value" : 500,
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "PLACEMENT",
                "targeting_value" : "SEARCH",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "COUNTRY",
                "targeting_value" : "US",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "TARGETED_INTEREST",
                "targeting_value" : "Food and Drinks",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "PINNER_INTEREST",
                "targeting_value" : "Chocolate Cookies",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "AUDIENCE_INCLUDE",
                "targeting_value" : 254261234567,
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "GEO",
                "targeting_value" : "US:94102",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "AGE_BUCKET",
                "targeting_value" : "45-49",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "REGION",
                "targeting_value" : "US-CA",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.adAccountsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "owner" : {
                "id" : "id",
                "username" : "username"
              },
              "country" : "US",
              "created_time" : 1451431341,
              "updated_time" : 1451431341,
              "permissions" : [ "ADMIN", "ADMIN" ],
              "name" : "name",
              "currency" : "USD",
              "id" : "id"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.adAccountsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "owner" : {
                "id" : "id",
                "username" : "username"
              },
              "country" : "US",
              "created_time" : 1451431341,
              "updated_time" : 1451431341,
              "permissions" : [ "ADMIN", "ADMIN" ],
              "name" : "name",
              "currency" : "USD",
              "id" : "id"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.adAccountsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "owner" : {
                  "id" : "id",
                  "username" : "username"
                },
                "country" : "US",
                "created_time" : 1451431341,
                "updated_time" : 1451431341,
                "permissions" : [ "ADMIN", "ADMIN" ],
                "name" : "name",
                "currency" : "USD",
                "id" : "id"
              }, {
                "owner" : {
                  "id" : "id",
                  "username" : "username"
                },
                "country" : "US",
                "created_time" : 1451431341,
                "updated_time" : 1451431341,
                "permissions" : [ "ADMIN", "ADMIN" ],
                "name" : "name",
                "currency" : "USD",
                "id" : "id"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.analyticsCreateMmmReport> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "data" : {
                "report_status" : "report_status",
                "message" : "message",
                "token" : "token",
                "status" : "success"
              }
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.analyticsCreateReport> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "report_status" : "report_status",
              "message" : "message",
              "token" : "token"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.analyticsCreateTemplateReport> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "report_status" : "report_status",
              "message" : "message",
              "token" : "token"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.analyticsGetMmmReport> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "data" : {
                "size" : 0.8008281904610115,
                "report_status" : "DOES_NOT_EXIST",
                "url" : "url"
              },
              "message" : "ok",
              "status" : "success"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.analyticsGetReport> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "size" : 0.8008281904610115,
              "report_status" : "report_status",
              "url" : "url"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.sandboxDelete> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """"Delete Success""""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.templatesList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "updated_time" : 1432744744,
                "ad_account_ids" : [ "547664674848" ],
                "report_level" : "CAMPAIGN",
                "report_format" : "JSON",
                "view_window_days" : 7,
                "columns" : [ "SPEND_IN_DOLLAR" ],
                "click_window_days" : 7,
                "ingestion_sources" : [ "CONVERSIONS_API", "CONVERSIONS_API" ],
                "type" : "BULK",
                "conversion_report_time_type" : "TIME_OF_AD_ACTION",
                "ad_account_id" : "547664674848",
                "is_deleted" : false,
                "id" : "6739202847590",
                "is_scheduled" : true,
                "custom_column_ids" : [ "1597252063" ],
                "date_range" : {
                  "absolute_date_range" : {
                    "end_date" : 6.027456183070403,
                    "type" : "absolute",
                    "start_date" : 0.8008281904610115
                  },
                  "relative_date_range" : {
                    "end_days_in_past" : 7,
                    "type" : "relative",
                    "start_days_in_past" : 14
                  },
                  "dynamic_date_range" : {
                    "range" : "YEAR_TO_DATE",
                    "type" : "dynamic"
                  }
                },
                "is_owned_by_user" : true,
                "report_start_relative_days_in_past" : 7,
                "report_end_relative_days_in_past" : 7,
                "user_id" : "784762938748396",
                "granularity" : "TOTAL",
                "filters_json" : "[{\"field\": \"SPEND_IN_DOLLAR\", \"operator\": \"=\", \"value\": 100}]",
                "creation_source" : "ADS_MANAGER_REPORT_BUILDER",
                "name" : "Week over week spend",
                "engagement_window_days" : 7
              }, {
                "updated_time" : 1432744744,
                "ad_account_ids" : [ "547664674848" ],
                "report_level" : "CAMPAIGN",
                "report_format" : "JSON",
                "view_window_days" : 7,
                "columns" : [ "SPEND_IN_DOLLAR" ],
                "click_window_days" : 7,
                "ingestion_sources" : [ "CONVERSIONS_API", "CONVERSIONS_API" ],
                "type" : "BULK",
                "conversion_report_time_type" : "TIME_OF_AD_ACTION",
                "ad_account_id" : "547664674848",
                "is_deleted" : false,
                "id" : "6739202847590",
                "is_scheduled" : true,
                "custom_column_ids" : [ "1597252063" ],
                "date_range" : {
                  "absolute_date_range" : {
                    "end_date" : 6.027456183070403,
                    "type" : "absolute",
                    "start_date" : 0.8008281904610115
                  },
                  "relative_date_range" : {
                    "end_days_in_past" : 7,
                    "type" : "relative",
                    "start_days_in_past" : 14
                  },
                  "dynamic_date_range" : {
                    "range" : "YEAR_TO_DATE",
                    "type" : "dynamic"
                  }
                },
                "is_owned_by_user" : true,
                "report_start_relative_days_in_past" : 7,
                "report_end_relative_days_in_past" : 7,
                "user_id" : "784762938748396",
                "granularity" : "TOTAL",
                "filters_json" : "[{\"field\": \"SPEND_IN_DOLLAR\", \"operator\": \"=\", \"value\": 100}]",
                "creation_source" : "ADS_MANAGER_REPORT_BUILDER",
                "name" : "Week over week spend",
                "engagement_window_days" : 7
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
