/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AdsAnalyticsCampaignTargetingType
import org.openapitools.server.models.CampaignCreateRequest
import org.openapitools.server.models.CampaignCreateResponse
import org.openapitools.server.models.CampaignResponse
import org.openapitools.server.models.CampaignUpdateRequest
import org.openapitools.server.models.CampaignUpdateResponse
import org.openapitools.server.models.CampaignsAnalyticsResponseInner
import org.openapitools.server.models.CampaignsList200Response
import org.openapitools.server.models.ConversionReportAttributionType
import org.openapitools.server.models.Error
import org.openapitools.server.models.Granularity
import org.openapitools.server.models.MetricsResponse

fun Route.CampaignsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    get<Paths.campaignTargetingAnalyticsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "data" : [ {
                "targeting_type" : "KEYWORD",
                "targeting_value" : "christmas decor ideas",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "iphone",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "ipad",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "web",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "web_mobile",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "android_mobile",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "APPTYPE",
                "targeting_value" : "android_tablet",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "GENDER",
                "targeting_value" : "female",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "LOCATION",
                "targeting_value" : 500,
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "PLACEMENT",
                "targeting_value" : "SEARCH",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "COUNTRY",
                "targeting_value" : "US",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "TARGETED_INTEREST",
                "targeting_value" : "Food and Drinks",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "PINNER_INTEREST",
                "targeting_value" : "Chocolate Cookies",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "AUDIENCE_INCLUDE",
                "targeting_value" : 254261234567,
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "GEO",
                "targeting_value" : "US:94102",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "AGE_BUCKET",
                "targeting_value" : "45-49",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              }, {
                "targeting_type" : "REGION",
                "targeting_value" : "US-CA",
                "metrics" : {
                  "AD_GROUP_ID" : 2680067996745,
                  "DATE" : "2022-04-26",
                  "SPEND_IN_DOLLAR" : 240
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.campaignsAnalytics> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """[ {
              "DATE" : "2021-04-01",
              "CAMPAIGN_ID" : "547602124502",
              "SPEND_IN_DOLLAR" : 30,
              "TOTAL_CLICKTHROUGH" : 216
            }, {
              "DATE" : "2021-04-01",
              "CAMPAIGN_ID" : "547602124502",
              "SPEND_IN_DOLLAR" : 30,
              "TOTAL_CLICKTHROUGH" : 216
            } ]"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.campaignsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "data" : {
                  "created_time" : 1432744744,
                  "updated_time" : 1432744744,
                  "default_ad_group_budget_in_micro_currency" : 0,
                  "lifetime_spend_cap" : 1432744744,
                  "end_time" : 1644023526,
                  "is_flexible_daily_budgets" : true,
                  "daily_spend_cap" : 1432744744,
                  "is_campaign_budget_optimization" : true,
                  "summary_status" : "RUNNING",
                  "type" : "campaign",
                  "tracking_urls" : "{}",
                  "ad_account_id" : "549755885175",
                  "is_automated_campaign" : true,
                  "start_time" : 1580865126,
                  "name" : "ACME Tools",
                  "order_line_id" : "549755885175",
                  "id" : "549755885175",
                  "status" : "status"
                },
                "exceptions" : [ {
                  "code" : 2,
                  "message" : "Advertiser not found."
                }, {
                  "code" : 2,
                  "message" : "Advertiser not found."
                } ]
              }, {
                "data" : {
                  "created_time" : 1432744744,
                  "updated_time" : 1432744744,
                  "default_ad_group_budget_in_micro_currency" : 0,
                  "lifetime_spend_cap" : 1432744744,
                  "end_time" : 1644023526,
                  "is_flexible_daily_budgets" : true,
                  "daily_spend_cap" : 1432744744,
                  "is_campaign_budget_optimization" : true,
                  "summary_status" : "RUNNING",
                  "type" : "campaign",
                  "tracking_urls" : "{}",
                  "ad_account_id" : "549755885175",
                  "is_automated_campaign" : true,
                  "start_time" : 1580865126,
                  "name" : "ACME Tools",
                  "order_line_id" : "549755885175",
                  "id" : "549755885175",
                  "status" : "status"
                },
                "exceptions" : [ {
                  "code" : 2,
                  "message" : "Advertiser not found."
                }, {
                  "code" : 2,
                  "message" : "Advertiser not found."
                } ]
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.campaignsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "created_time" : 1432744744,
              "updated_time" : 1432744744,
              "lifetime_spend_cap" : 1432744744,
              "end_time" : 1644023526,
              "is_flexible_daily_budgets" : true,
              "daily_spend_cap" : 1432744744,
              "objective_type" : "AWARENESS",
              "is_campaign_budget_optimization" : true,
              "summary_status" : "RUNNING",
              "type" : "campaign",
              "tracking_urls" : "{}",
              "ad_account_id" : "549755885175",
              "start_time" : 1580865126,
              "name" : "ACME Tools",
              "order_line_id" : "549755885175",
              "id" : "549755885175",
              "status" : "status"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.campaignsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "created_time" : 1432744744,
                "updated_time" : 1432744744,
                "lifetime_spend_cap" : 1432744744,
                "end_time" : 1644023526,
                "is_flexible_daily_budgets" : true,
                "daily_spend_cap" : 1432744744,
                "objective_type" : "AWARENESS",
                "is_campaign_budget_optimization" : true,
                "summary_status" : "RUNNING",
                "type" : "campaign",
                "tracking_urls" : "{}",
                "ad_account_id" : "549755885175",
                "start_time" : 1580865126,
                "name" : "ACME Tools",
                "order_line_id" : "549755885175",
                "id" : "549755885175",
                "status" : "status"
              }, {
                "created_time" : 1432744744,
                "updated_time" : 1432744744,
                "lifetime_spend_cap" : 1432744744,
                "end_time" : 1644023526,
                "is_flexible_daily_budgets" : true,
                "daily_spend_cap" : 1432744744,
                "objective_type" : "AWARENESS",
                "is_campaign_budget_optimization" : true,
                "summary_status" : "RUNNING",
                "type" : "campaign",
                "tracking_urls" : "{}",
                "ad_account_id" : "549755885175",
                "start_time" : 1580865126,
                "name" : "ACME Tools",
                "order_line_id" : "549755885175",
                "id" : "549755885175",
                "status" : "status"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.campaignsUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "data" : {
                  "created_time" : 1432744744,
                  "updated_time" : 1432744744,
                  "default_ad_group_budget_in_micro_currency" : 0,
                  "lifetime_spend_cap" : 1432744744,
                  "end_time" : 1644023526,
                  "is_flexible_daily_budgets" : true,
                  "daily_spend_cap" : 1432744744,
                  "is_campaign_budget_optimization" : true,
                  "summary_status" : "RUNNING",
                  "type" : "campaign",
                  "tracking_urls" : "{}",
                  "ad_account_id" : "549755885175",
                  "is_automated_campaign" : true,
                  "start_time" : 1580865126,
                  "name" : "ACME Tools",
                  "order_line_id" : "549755885175",
                  "id" : "549755885175",
                  "status" : "status"
                },
                "exceptions" : [ {
                  "code" : 2,
                  "message" : "Advertiser not found."
                }, {
                  "code" : 2,
                  "message" : "Advertiser not found."
                } ]
              }, {
                "data" : {
                  "created_time" : 1432744744,
                  "updated_time" : 1432744744,
                  "default_ad_group_budget_in_micro_currency" : 0,
                  "lifetime_spend_cap" : 1432744744,
                  "end_time" : 1644023526,
                  "is_flexible_daily_budgets" : true,
                  "daily_spend_cap" : 1432744744,
                  "is_campaign_budget_optimization" : true,
                  "summary_status" : "RUNNING",
                  "type" : "campaign",
                  "tracking_urls" : "{}",
                  "ad_account_id" : "549755885175",
                  "is_automated_campaign" : true,
                  "start_time" : 1580865126,
                  "name" : "ACME Tools",
                  "order_line_id" : "549755885175",
                  "id" : "549755885175",
                  "status" : "status"
                },
                "exceptions" : [ {
                  "code" : 2,
                  "message" : "Advertiser not found."
                }, {
                  "code" : 2,
                  "message" : "Advertiser not found."
                } ]
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
