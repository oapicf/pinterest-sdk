/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.Error
import org.openapitools.server.models.KeywordUpdateBody
import org.openapitools.server.models.KeywordsGet200Response
import org.openapitools.server.models.KeywordsMetricsArrayResponse
import org.openapitools.server.models.KeywordsRequest
import org.openapitools.server.models.KeywordsResponse
import org.openapitools.server.models.MatchType
import org.openapitools.server.models.TrendType
import org.openapitools.server.models.TrendingKeywordsResponse
import org.openapitools.server.models.TrendsSupportedRegion

fun Route.KeywordsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    get<Paths.countryKeywordsMetricsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "data" : [ {
                "metrics" : {
                  "avg_cpc_in_micro_currency" : 100000,
                  "keyword_query_volume" : "5M+"
                },
                "keyword" : "animals"
              }, {
                "metrics" : {
                  "avg_cpc_in_micro_currency" : 100000,
                  "keyword_query_volume" : "5M+"
                },
                "keyword" : "animals"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.keywordsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "keywords" : [ {
                "archived" : false,
                "parent_id" : "383791336903426391",
                "match_type" : "BROAD",
                "id" : "383791336903426391",
                "bid" : 0,
                "parent_type" : "campaign",
                "type" : "keyword",
                "value" : "value"
              }, {
                "archived" : false,
                "parent_id" : "383791336903426391",
                "match_type" : "BROAD",
                "id" : "383791336903426391",
                "bid" : 0,
                "parent_type" : "campaign",
                "type" : "keyword",
                "value" : "value"
              } ],
              "errors" : [ {
                "data" : {
                  "archived" : false,
                  "parent_id" : "383791336903426391",
                  "match_type" : "BROAD",
                  "id" : "383791336903426391",
                  "bid" : 0,
                  "parent_type" : "campaign",
                  "type" : "keyword",
                  "value" : "value"
                },
                "error_messages" : [ "error_messages", "error_messages" ]
              }, {
                "data" : {
                  "archived" : false,
                  "parent_id" : "383791336903426391",
                  "match_type" : "BROAD",
                  "id" : "383791336903426391",
                  "bid" : 0,
                  "parent_type" : "campaign",
                  "type" : "keyword",
                  "value" : "value"
                },
                "error_messages" : [ "error_messages", "error_messages" ]
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.keywordsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "archived" : false,
                "parent_id" : "383791336903426391",
                "match_type" : "BROAD",
                "id" : "383791336903426391",
                "bid" : 0,
                "parent_type" : "campaign",
                "type" : "keyword",
                "value" : "value"
              }, {
                "archived" : false,
                "parent_id" : "383791336903426391",
                "match_type" : "BROAD",
                "id" : "383791336903426391",
                "bid" : 0,
                "parent_type" : "campaign",
                "type" : "keyword",
                "value" : "value"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.keywordsUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "keywords" : [ {
                "archived" : false,
                "parent_id" : "383791336903426391",
                "match_type" : "BROAD",
                "id" : "383791336903426391",
                "bid" : 0,
                "parent_type" : "campaign",
                "type" : "keyword",
                "value" : "value"
              }, {
                "archived" : false,
                "parent_id" : "383791336903426391",
                "match_type" : "BROAD",
                "id" : "383791336903426391",
                "bid" : 0,
                "parent_type" : "campaign",
                "type" : "keyword",
                "value" : "value"
              } ],
              "errors" : [ {
                "data" : {
                  "archived" : false,
                  "parent_id" : "383791336903426391",
                  "match_type" : "BROAD",
                  "id" : "383791336903426391",
                  "bid" : 0,
                  "parent_type" : "campaign",
                  "type" : "keyword",
                  "value" : "value"
                },
                "error_messages" : [ "error_messages", "error_messages" ]
              }, {
                "data" : {
                  "archived" : false,
                  "parent_id" : "383791336903426391",
                  "match_type" : "BROAD",
                  "id" : "383791336903426391",
                  "bid" : 0,
                  "parent_type" : "campaign",
                  "type" : "keyword",
                  "value" : "value"
                },
                "error_messages" : [ "error_messages", "error_messages" ]
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.trendingKeywordsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "trends" : [ {
                "pct_growth_wow" : 50,
                "time_series" : {
                  "2023-10-10" : 31,
                  "2023-10-17" : 54,
                  "2023-10-24" : 77,
                  "2023-10-31" : 100
                },
                "pct_growth_mom" : 400,
                "keyword" : "couples halloween costumes",
                "pct_growth_yoy" : -5
              }, {
                "pct_growth_wow" : 50,
                "time_series" : {
                  "2023-10-10" : 31,
                  "2023-10-17" : 54,
                  "2023-10-24" : 77,
                  "2023-10-31" : 100
                },
                "pct_growth_mom" : 400,
                "keyword" : "couples halloween costumes",
                "pct_growth_yoy" : -5
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
