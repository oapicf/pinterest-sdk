/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AuthRespondInvitesBody
import org.openapitools.server.models.CancelInvitesBody
import org.openapitools.server.models.CreateAssetAccessRequestBody
import org.openapitools.server.models.CreateAssetAccessRequestResponse
import org.openapitools.server.models.CreateAssetInvitesRequest
import org.openapitools.server.models.CreateInvitesResultsResponseArray
import org.openapitools.server.models.CreateMembershipOrPartnershipInvitesBody
import org.openapitools.server.models.DeleteInvitesResultsResponseArray
import org.openapitools.server.models.Error
import org.openapitools.server.models.GetInvites200Response
import org.openapitools.server.models.InviteType
import org.openapitools.server.models.RespondToInvitesResponseArray
import org.openapitools.server.models.UpdateInvitesResultsResponseArray

fun Route.BusinessAccessInviteApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    post<Paths.assetAccessRequestsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "invites" : {
                "766456567741825556" : "5349280584552211583",
                "733242520489967216" : "5349280584552211845"
              },
              "exceptions" : [ {
                "code" : 2932,
                "messages" : [ "Invalid asset id: 549760723247", "Invalid asset id: 546760723248" ]
              }, {
                "code" : 2932,
                "messages" : [ "Invalid asset id: 549760723247", "Invalid asset id: 546760723248" ]
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.cancelInvitesOrRequests> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "exception" : {
                  "invite_id" : "invite_id",
                  "message" : "Business Invite request cannot be performed on current invitation status."
                },
                "invite" : {
                  "invite_data" : {
                    "invite_type" : "MEMBER_INVITE",
                    "sent_at" : 1646767577816,
                    "last_updated_time" : 1646767577816,
                    "invite_expiration" : 1709748104775,
                    "invite_status" : "PENDING"
                  },
                  "id" : "383791336903426391",
                  "user" : "{}",
                  "is_received_invite" : true
                }
              }, {
                "exception" : {
                  "invite_id" : "invite_id",
                  "message" : "Business Invite request cannot be performed on current invitation status."
                },
                "invite" : {
                  "invite_data" : {
                    "invite_type" : "MEMBER_INVITE",
                    "sent_at" : 1646767577816,
                    "last_updated_time" : 1646767577816,
                    "invite_expiration" : 1709748104775,
                    "invite_status" : "PENDING"
                  },
                  "id" : "383791336903426391",
                  "user" : "{}",
                  "is_received_invite" : true
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.createAssetInvites> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "exception" : {
                  "code" : 403,
                  "users_or_partner_ids" : [ "businessMember0101", "business+member@business.com" ],
                  "invite_or_request_id" : "383791336903426391",
                  "message" : "You hit the maximum number of pending invites allowed."
                },
                "invite" : {
                  "created_by_business_id" : "1234567890123",
                  "created_by_user_id" : "1234567890123",
                  "user" : "{}"
                }
              }, {
                "exception" : {
                  "code" : 403,
                  "users_or_partner_ids" : [ "businessMember0101", "business+member@business.com" ],
                  "invite_or_request_id" : "383791336903426391",
                  "message" : "You hit the maximum number of pending invites allowed."
                },
                "invite" : {
                  "created_by_business_id" : "1234567890123",
                  "created_by_user_id" : "1234567890123",
                  "user" : "{}"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.createMembershipOrPartnershipInvites> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "exception" : {
                  "code" : 403,
                  "users_or_partner_ids" : [ "businessMember0101", "business+member@business.com" ],
                  "invite_or_request_id" : "383791336903426391",
                  "message" : "You hit the maximum number of pending invites allowed."
                },
                "invite" : {
                  "id" : "383791336903426391",
                  "user" : "{}"
                }
              }, {
                "exception" : {
                  "code" : 403,
                  "users_or_partner_ids" : [ "businessMember0101", "business+member@business.com" ],
                  "invite_or_request_id" : "383791336903426391",
                  "message" : "You hit the maximum number of pending invites allowed."
                },
                "invite" : {
                  "id" : "383791336903426391",
                  "user" : "{}"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.getInvites> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "created_time" : 1646767577816,
                "assets_summary" : {
                  "ad_accounts" : [ {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "549755885175"
                  }, {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "549755885175"
                  } ],
                  "profiles" : [ {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "383791336903426391"
                  }, {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "383791336903426391"
                  } ]
                },
                "business_roles" : [ "BIZ_ADMIN" ],
                "created_by_business" : "{}",
                "created_by_user" : "{}"
              }, {
                "created_time" : 1646767577816,
                "assets_summary" : {
                  "ad_accounts" : [ {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "549755885175"
                  }, {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "549755885175"
                  } ],
                  "profiles" : [ {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "383791336903426391"
                  }, {
                    "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                    "id" : "383791336903426391"
                  } ]
                },
                "business_roles" : [ "BIZ_ADMIN" ],
                "created_by_business" : "{}",
                "created_by_user" : "{}"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.respondBusinessAccessInvites> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "exception" : {
                  "code" : 403,
                  "users_or_partner_ids" : [ "businessMember0101", "business+member@business.com" ],
                  "invite_or_request_id" : "383791336903426391",
                  "message" : "You hit the maximum number of pending invites allowed."
                },
                "invite" : {
                  "invite_data" : {
                    "invite_type" : "MEMBER_INVITE",
                    "sent_at" : 1646767577816,
                    "last_updated_time" : 1646767577816,
                    "invite_expiration" : 1709748104775,
                    "invite_status" : "PENDING"
                  },
                  "id" : "383791336903426391",
                  "user" : "{}",
                  "is_received_invite" : true
                }
              }, {
                "exception" : {
                  "code" : 403,
                  "users_or_partner_ids" : [ "businessMember0101", "business+member@business.com" ],
                  "invite_or_request_id" : "383791336903426391",
                  "message" : "You hit the maximum number of pending invites allowed."
                },
                "invite" : {
                  "invite_data" : {
                    "invite_type" : "MEMBER_INVITE",
                    "sent_at" : 1646767577816,
                    "last_updated_time" : 1646767577816,
                    "invite_expiration" : 1709748104775,
                    "invite_status" : "PENDING"
                  },
                  "id" : "383791336903426391",
                  "user" : "{}",
                  "is_received_invite" : true
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
