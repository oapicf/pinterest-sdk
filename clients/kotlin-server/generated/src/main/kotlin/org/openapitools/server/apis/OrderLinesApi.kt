/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.Error
import org.openapitools.server.models.OrderLine
import org.openapitools.server.models.OrderLinesList200Response

fun Route.OrderLinesApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    get<Paths.orderLinesGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "start_time" : 1452208622,
              "purchase_order_id" : "PO12345",
              "campaign_ids" : [ "626735565838" ],
              "end_time" : 1461269616,
              "name" : "Order Line Name 1",
              "id" : "2680059592705",
              "paid_budget" : 5000000,
              "paid_type" : "PAID",
              "type" : "orderline",
              "ad_account_id" : "549755885175",
              "budget" : 5000000,
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.orderLinesList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "start_time" : 1452208622,
                "purchase_order_id" : "PO12345",
                "campaign_ids" : [ "626735565838" ],
                "end_time" : 1461269616,
                "name" : "Order Line Name 1",
                "id" : "2680059592705",
                "paid_budget" : 5000000,
                "paid_type" : "PAID",
                "type" : "orderline",
                "ad_account_id" : "549755885175",
                "budget" : 5000000,
                "status" : "ACTIVE"
              }, {
                "start_time" : 1452208622,
                "purchase_order_id" : "PO12345",
                "campaign_ids" : [ "626735565838" ],
                "end_time" : 1461269616,
                "name" : "Order Line Name 1",
                "id" : "2680059592705",
                "paid_budget" : 5000000,
                "paid_type" : "PAID",
                "type" : "orderline",
                "ad_account_id" : "549755885175",
                "budget" : 5000000,
                "status" : "ACTIVE"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
