/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.Account
import org.openapitools.server.models.AnalyticsMetricsResponse
import org.openapitools.server.models.BoardsUserFollowsList200Response
import org.openapitools.server.models.Error
import org.openapitools.server.models.FollowUserRequest
import org.openapitools.server.models.FollowersList200Response
import org.openapitools.server.models.LinkedBusiness
import org.openapitools.server.models.TopPinsAnalyticsResponse
import org.openapitools.server.models.TopVideoPinsAnalyticsResponse
import org.openapitools.server.models.UserAccountFollowedInterests200Response
import org.openapitools.server.models.UserFollowingFeedType
import org.openapitools.server.models.UserFollowingGet200Response
import org.openapitools.server.models.UserSummary
import org.openapitools.server.models.UserWebsiteSummary
import org.openapitools.server.models.UserWebsiteVerificationCode
import org.openapitools.server.models.UserWebsiteVerifyRequest
import org.openapitools.server.models.UserWebsitesGet200Response

fun Route.UserAccountApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.boardsUserFollowsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "owner" : "{}",
                "board_pins_modified_at" : "2020-01-01T20:10:40Z",
                "name" : "Summer Recipes",
                "pin_count" : 5,
                "created_at" : "2020-01-01T20:10:40Z",
                "description" : "My favorite summer recipes",
                "collaborator_count" : 17,
                "privacy" : "PUBLIC",
                "id" : "549755885175",
                "media" : {
                  "pin_thumbnail_urls" : [ "https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg", "https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg", "https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg", "https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg" ],
                  "image_cover_url" : "https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg"
                },
                "follower_count" : 13
              }, {
                "owner" : "{}",
                "board_pins_modified_at" : "2020-01-01T20:10:40Z",
                "name" : "Summer Recipes",
                "pin_count" : 5,
                "created_at" : "2020-01-01T20:10:40Z",
                "description" : "My favorite summer recipes",
                "collaborator_count" : 17,
                "privacy" : "PUBLIC",
                "id" : "549755885175",
                "media" : {
                  "pin_thumbnail_urls" : [ "https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg", "https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg", "https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg", "https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg" ],
                  "image_cover_url" : "https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg"
                },
                "follower_count" : 13
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.followUserUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "type" : "user",
              "username" : "username"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.followersList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "type" : "user",
                "username" : "username"
              }, {
                "type" : "user",
                "username" : "username"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.linkedBusinessAccountsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """[ {
              "image_large_url" : "https://www.example.com/dj23454f53dfk2324.jpg",
              "image_medium_url" : "https://www.example.com/dj23454f53dfk2324.jpg",
              "image_xlarge_url" : "https://www.example.com/dj23454f53dfk2324.jpg",
              "username" : "username",
              "image_small_url" : "https://www.example.com/dj23454f53dfk2324.jpg"
            }, {
              "image_large_url" : "https://www.example.com/dj23454f53dfk2324.jpg",
              "image_medium_url" : "https://www.example.com/dj23454f53dfk2324.jpg",
              "image_xlarge_url" : "https://www.example.com/dj23454f53dfk2324.jpg",
              "username" : "username",
              "image_small_url" : "https://www.example.com/dj23454f53dfk2324.jpg"
            } ]"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.unverifyWebsiteDelete> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.userAccountAnalytics> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.userAccountAnalyticsTopPins> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "date_availability" : {
                "latest_available_timestamp" : 1649116799000,
                "is_realtime" : false
              },
              "pins" : [ {
                "metrics" : {
                  "CLOSEUP" : 1,
                  "CLOSEUP_RATE" : 0,
                  "ENGAGEMENT" : 1,
                  "ENGAGEMENT_RATE" : 0,
                  "IMPRESSION" : 240,
                  "OUTBOUND_CLICK" : 20,
                  "OUTBOUND_CLICK_RATE" : 0.08,
                  "PIN_CLICK" : 37,
                  "PIN_CLICK_RATE" : 0.15,
                  "QUARTILE_95_PERCENT_VIEW" : 8,
                  "SAVE" : 20,
                  "SAVE_RATE" : 0.18,
                  "VIDEO_10S_VIEW" : 2,
                  "VIDEO_AVG_WATCH_TIME" : 2507.75,
                  "VIDEO_MRC_VIEW" : 20,
                  "VIDEO_START" : 29,
                  "VIDEO_V50_WATCH_TIME" : 10031
                },
                "data_status" : {
                  "key" : "READY"
                },
                "pin_id" : "642396334344813594"
              }, {
                "metrics" : {
                  "CLOSEUP" : 1,
                  "CLOSEUP_RATE" : 0,
                  "ENGAGEMENT" : 1,
                  "ENGAGEMENT_RATE" : 0,
                  "IMPRESSION" : 240,
                  "OUTBOUND_CLICK" : 20,
                  "OUTBOUND_CLICK_RATE" : 0.08,
                  "PIN_CLICK" : 37,
                  "PIN_CLICK_RATE" : 0.15,
                  "QUARTILE_95_PERCENT_VIEW" : 8,
                  "SAVE" : 20,
                  "SAVE_RATE" : 0.18,
                  "VIDEO_10S_VIEW" : 2,
                  "VIDEO_AVG_WATCH_TIME" : 2507.75,
                  "VIDEO_MRC_VIEW" : 20,
                  "VIDEO_START" : 29,
                  "VIDEO_V50_WATCH_TIME" : 10031
                },
                "data_status" : {
                  "key" : "READY"
                },
                "pin_id" : "642396334344813594"
              } ],
              "sort_by" : "IMPRESSION"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.userAccountAnalyticsTopVideoPins> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "date_availability" : {
                "latest_available_timestamp" : 1649116799000,
                "is_realtime" : false
              },
              "pins" : [ {
                "metrics" : {
                  "IMPRESSION" : 7,
                  "QUARTILE_95_PERCENT_VIEW" : 2,
                  "SAVE" : 1,
                  "VIDEO_10S_VIEW" : 5,
                  "VIDEO_AVG_WATCH_TIME" : 86989,
                  "VIDEO_MRC_VIEW" : 2,
                  "VIDEO_START" : 2,
                  "VIDEO_V50_WATCH_TIME" : 173979,
                  "OUTBOUND_CLICK" : 2
                },
                "data_status" : {
                  "key" : "READY"
                },
                "pin_id" : "642396334344813594"
              }, {
                "metrics" : {
                  "IMPRESSION" : 7,
                  "QUARTILE_95_PERCENT_VIEW" : 2,
                  "SAVE" : 1,
                  "VIDEO_10S_VIEW" : 5,
                  "VIDEO_AVG_WATCH_TIME" : 86989,
                  "VIDEO_MRC_VIEW" : 2,
                  "VIDEO_START" : 2,
                  "VIDEO_V50_WATCH_TIME" : 173979,
                  "OUTBOUND_CLICK" : 2
                },
                "data_status" : {
                  "key" : "READY"
                },
                "pin_id" : "642396334344813594"
              } ],
              "sort_by" : "IMPRESSION"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.userAccountFollowedInterests> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "name" : "Man cave",
                "id" : "903972677830",
                "canonical_url" : "canonical_url",
                "key" : "man cave"
              }, {
                "name" : "Man cave",
                "id" : "903972677830",
                "canonical_url" : "canonical_url",
                "key" : "man cave"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.userAccountGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "business_name" : "business_name",
              "account_type" : "PINNER",
              "profile_image" : "profile_image",
              "website_url" : "website_url",
              "following_count" : 347,
              "about" : "about",
              "pin_count" : 339,
              "id" : "2783136121146311751",
              "monthly_views" : 163,
              "board_count" : 14,
              "follower_count" : 10,
              "username" : "username"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.userFollowingGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "type" : "user",
                "username" : "username"
              }, {
                "type" : "user",
                "username" : "username"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.userWebsitesGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "website" : "mysite.test",
                "verified_at" : "2022-12-14T21:03:01.602000",
                "status" : "success"
              }, {
                "website" : "mysite.test",
                "verified_at" : "2022-12-14T21:03:01.602000",
                "status" : "success"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.verifyWebsiteUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "website" : "mysite.test",
              "verified_at" : "2022-12-14T21:03:01.602000",
              "status" : "success"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.websiteVerificationGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "file_content" : "file_content",
              "dns_txt_record" : "pinterest-site-verification=e1edcc1a43976c646367e9c6c9a9b7b6",
              "filename" : "pinterest-e1edc.html",
              "metatag" : "<meta name=\"p:domain_verify\" content=\"e1edcc1a43976c646367e9c6c9a9b7b6\"/>",
              "verification_code" : "e1edcc1a43976c646367e9c6c9a9b7b6"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
