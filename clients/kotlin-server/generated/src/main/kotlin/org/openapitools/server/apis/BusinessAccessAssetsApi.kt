/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.BusinessAssetMembersGet200Response
import org.openapitools.server.models.BusinessAssetPartnersGet200Response
import org.openapitools.server.models.BusinessAssetsGet200Response
import org.openapitools.server.models.BusinessMemberAssetsGet200Response
import org.openapitools.server.models.BusinessMembersAssetAccessDeleteRequest
import org.openapitools.server.models.BusinessPartnerAssetAccessGet200Response
import org.openapitools.server.models.CreateAssetGroupBody
import org.openapitools.server.models.CreateAssetGroupResponse
import org.openapitools.server.models.DeleteAssetGroupBody
import org.openapitools.server.models.DeleteAssetGroupResponse
import org.openapitools.server.models.DeleteMemberAccessResultsResponseArray
import org.openapitools.server.models.DeletePartnerAssetAccessBody
import org.openapitools.server.models.DeletePartnerAssetsResultsResponseArray
import org.openapitools.server.models.Error
import org.openapitools.server.models.PartnerType
import org.openapitools.server.models.PermissionsWithOwner
import org.openapitools.server.models.UpdateAssetGroupBody
import org.openapitools.server.models.UpdateAssetGroupResponse
import org.openapitools.server.models.UpdateMemberAssetAccessBody
import org.openapitools.server.models.UpdateMemberAssetsResultsResponseArray
import org.openapitools.server.models.UpdatePartnerAssetAccessBody
import org.openapitools.server.models.UpdatePartnerAssetsResultsResponseArray

fun Route.BusinessAccessAssetsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    post<Paths.assetGroupCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "asset_group" : {
                "profiles_ids" : [ "630433785246278264" ],
                "owner" : "{}",
                "created_time" : 1646767577816,
                "updated_time" : 1646767577816,
                "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                "ad_accounts_ids" : [ "549755885175" ],
                "asset_group_description" : "Asset group that has ad accounts used in Canada",
                "id" : "666791336903426391",
                "created_by" : "{}",
                "asset_group_name" : "Canada Ad Accounts"
              }
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.assetGroupDelete> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "deleted_asset_groups" : [ "deleted_asset_groups", "deleted_asset_groups" ],
              "exceptions" : [ {
                "asset_group_id" : "666791336903426391",
                "code" : 29,
                "message" : "You are not permitted to access that resource."
              }, {
                "asset_group_id" : "666791336903426391",
                "code" : 29,
                "message" : "You are not permitted to access that resource."
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.assetGroupUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "updated_asset_groups" : [ {
                "profiles_ids" : [ "630433785246278264" ],
                "owner" : "{}",
                "created_time" : 1646767577816,
                "updated_time" : 1646767577816,
                "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                "ad_accounts_ids" : [ "549755885175" ],
                "asset_group_description" : "Asset group that has ad accounts used in Canada",
                "id" : "666791336903426391",
                "created_by" : "{}",
                "asset_group_name" : "Canada Ad Accounts"
              }, {
                "profiles_ids" : [ "630433785246278264" ],
                "owner" : "{}",
                "created_time" : 1646767577816,
                "updated_time" : 1646767577816,
                "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                "ad_accounts_ids" : [ "549755885175" ],
                "asset_group_description" : "Asset group that has ad accounts used in Canada",
                "id" : "666791336903426391",
                "created_by" : "{}",
                "asset_group_name" : "Canada Ad Accounts"
              } ],
              "exceptions" : [ {
                "asset_group_id" : "666791336903426391",
                "code" : 29,
                "message" : "You are not permitted to access that resource."
              }, {
                "asset_group_id" : "666791336903426391",
                "code" : 29,
                "message" : "You are not permitted to access that resource."
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.businessAssetMembersGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "user" : {
                  "id" : "383791336903426391",
                  "email" : "business0101@business.com",
                  "username" : "business0101"
                }
              }, {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "user" : {
                  "id" : "383791336903426391",
                  "email" : "business0101@business.com",
                  "username" : "business0101"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.businessAssetPartnersGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "user" : {
                  "id" : "383791336903426391",
                  "email" : "business0101@business.com",
                  "username" : "business0101"
                }
              }, {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "user" : {
                  "id" : "383791336903426391",
                  "email" : "business0101@business.com",
                  "username" : "business0101"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.businessAssetsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175",
                "asset_group_info" : {
                  "profiles_ids" : [ "630433785246278264" ],
                  "owner" : "{}",
                  "created_time" : 1646767577816,
                  "updated_time" : 1646767577816,
                  "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                  "ad_accounts_ids" : [ "549755885175" ],
                  "asset_group_description" : "Asset group that has ad accounts used in Canada",
                  "id" : "666791336903426391",
                  "created_by" : "{}",
                  "asset_group_name" : "Canada Ad Accounts"
                }
              }, {
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175",
                "asset_group_info" : {
                  "profiles_ids" : [ "630433785246278264" ],
                  "owner" : "{}",
                  "created_time" : 1646767577816,
                  "updated_time" : 1646767577816,
                  "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                  "ad_accounts_ids" : [ "549755885175" ],
                  "asset_group_description" : "Asset group that has ad accounts used in Canada",
                  "id" : "666791336903426391",
                  "created_by" : "{}",
                  "asset_group_name" : "Canada Ad Accounts"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.businessMemberAssetsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175",
                "asset_group_info" : {
                  "profiles_ids" : [ "630433785246278264" ],
                  "owner" : "{}",
                  "created_time" : 1646767577816,
                  "updated_time" : 1646767577816,
                  "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                  "ad_accounts_ids" : [ "549755885175" ],
                  "asset_group_description" : "Asset group that has ad accounts used in Canada",
                  "id" : "666791336903426391",
                  "created_by" : "{}",
                  "asset_group_name" : "Canada Ad Accounts"
                }
              }, {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175",
                "asset_group_info" : {
                  "profiles_ids" : [ "630433785246278264" ],
                  "owner" : "{}",
                  "created_time" : 1646767577816,
                  "updated_time" : 1646767577816,
                  "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                  "ad_accounts_ids" : [ "549755885175" ],
                  "asset_group_description" : "Asset group that has ad accounts used in Canada",
                  "id" : "666791336903426391",
                  "created_by" : "{}",
                  "asset_group_name" : "Canada Ad Accounts"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.businessMembersAssetAccessDelete> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "member_id" : "140943737684417",
                "asset_id" : "549755885175"
              }, {
                "member_id" : "140943737684417",
                "asset_id" : "549755885175"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.businessMembersAssetAccessUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "response" : {
                  "member_id" : "140943737684417",
                  "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                  "asset_id" : "549755885175"
                }
              }, {
                "response" : {
                  "member_id" : "140943737684417",
                  "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                  "asset_id" : "549755885175"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.businessPartnerAssetAccessGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175",
                "asset_group_info" : {
                  "profiles_ids" : [ "630433785246278264" ],
                  "owner" : "{}",
                  "created_time" : 1646767577816,
                  "updated_time" : 1646767577816,
                  "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                  "ad_accounts_ids" : [ "549755885175" ],
                  "asset_group_description" : "Asset group that has ad accounts used in Canada",
                  "id" : "666791336903426391",
                  "created_by" : "{}",
                  "asset_group_name" : "Canada Ad Accounts"
                }
              }, {
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175",
                "asset_group_info" : {
                  "profiles_ids" : [ "630433785246278264" ],
                  "owner" : "{}",
                  "created_time" : 1646767577816,
                  "updated_time" : 1646767577816,
                  "asset_group_types" : [ "LOCATION_OR_LANGUAGE" ],
                  "ad_accounts_ids" : [ "549755885175" ],
                  "asset_group_description" : "Asset group that has ad accounts used in Canada",
                  "id" : "666791336903426391",
                  "created_by" : "{}",
                  "asset_group_name" : "Canada Ad Accounts"
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.deletePartnerAssetAccessHandlerImpl> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "partner_id" : "140943737684417",
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "is_shared_partner" : false,
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175"
              }, {
                "partner_id" : "140943737684417",
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "is_shared_partner" : false,
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.updatePartnerAssetAccessHandlerImpl> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "partner_id" : "140943737684417",
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175"
              }, {
                "partner_id" : "140943737684417",
                "permissions" : [ "FINANCE_MANAGER", "CATALOGS_MANAGER", "AUDIENCE_MANAGER" ],
                "asset_type" : "AD_ACCOUNT",
                "asset_id" : "549755885175"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
