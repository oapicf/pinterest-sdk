/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.Catalog
import org.openapitools.server.models.CatalogsCreateReportResponse
import org.openapitools.server.models.CatalogsCreateRequest
import org.openapitools.server.models.CatalogsFeed
import org.openapitools.server.models.CatalogsFeedIngestion
import org.openapitools.server.models.CatalogsItemValidationIssue
import org.openapitools.server.models.CatalogsItems
import org.openapitools.server.models.CatalogsItemsBatch
import org.openapitools.server.models.CatalogsItemsFilters
import org.openapitools.server.models.CatalogsItemsRequest
import org.openapitools.server.models.CatalogsList200Response
import org.openapitools.server.models.CatalogsListProductsByFilterRequest
import org.openapitools.server.models.CatalogsProductGroupPinsList200Response
import org.openapitools.server.models.CatalogsProductGroupProductCountsVertical
import org.openapitools.server.models.CatalogsProductGroupsList200Response
import org.openapitools.server.models.CatalogsProductGroupsUpdateRequest
import org.openapitools.server.models.CatalogsReport
import org.openapitools.server.models.CatalogsReportParameters
import org.openapitools.server.models.CatalogsVerticalProductGroup
import org.openapitools.server.models.Error
import org.openapitools.server.models.FeedProcessingResultsList200Response
import org.openapitools.server.models.FeedsCreateRequest
import org.openapitools.server.models.FeedsList200Response
import org.openapitools.server.models.FeedsUpdateRequest
import org.openapitools.server.models.ItemsBatchPostRequest
import org.openapitools.server.models.ItemsIssuesList200Response
import org.openapitools.server.models.MultipleProductGroupsInner
import org.openapitools.server.models.ReportsStats200Response

fun Route.CatalogsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    post<Paths.catalogsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "updated_at" : "2022-03-14T15:16:34Z",
              "catalog_type" : "RETAIL",
              "name" : "name",
              "created_at" : "2022-03-14T15:15:22Z",
              "id" : "864344156814050986"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.catalogsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "updated_at" : "2022-03-14T15:16:34Z",
                "catalog_type" : "RETAIL",
                "name" : "name",
                "created_at" : "2022-03-14T15:15:22Z",
                "id" : "864344156814050986"
              }, {
                "updated_at" : "2022-03-14T15:16:34Z",
                "catalog_type" : "RETAIL",
                "name" : "name",
                "created_at" : "2022-03-14T15:15:22Z",
                "id" : "864344156814050986"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.catalogsProductGroupPinsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "catalog_type" : "RETAIL"
              }, {
                "catalog_type" : "RETAIL"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.catalogsProductGroupsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "country" : "country",
              "description" : "description",
              "created_at" : 1621350033000,
              "filters" : {
                "any_of" : [ {
                  "MIN_PRICE" : {
                    "inclusion" : true,
                    "negated" : false,
                    "values" : 0.08008281904610115
                  }
                }, {
                  "MIN_PRICE" : {
                    "inclusion" : true,
                    "negated" : false,
                    "values" : 0.08008281904610115
                  }
                } ]
              },
              "type" : "TOP_SELLERS",
              "locale" : "locale",
              "feed_id" : "2680059592705",
              "catalog_id" : "catalog_id",
              "updated_at" : 1622742155000,
              "catalog_type" : "RETAIL",
              "name" : "Most Popular",
              "id" : "443727193917",
              "is_featured" : true,
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.catalogsProductGroupsCreateMany> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """[ "443727193917", "443727193917" ]"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.catalogsProductGroupsDelete> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    delete<Paths.catalogsProductGroupsDeleteMany> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.catalogsProductGroupsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "country" : "country",
              "description" : "description",
              "created_at" : 1621350033000,
              "filters" : {
                "any_of" : [ {
                  "MIN_PRICE" : {
                    "inclusion" : true,
                    "negated" : false,
                    "values" : 0.08008281904610115
                  }
                }, {
                  "MIN_PRICE" : {
                    "inclusion" : true,
                    "negated" : false,
                    "values" : 0.08008281904610115
                  }
                } ]
              },
              "type" : "TOP_SELLERS",
              "locale" : "locale",
              "feed_id" : "2680059592705",
              "catalog_id" : "catalog_id",
              "updated_at" : 1622742155000,
              "catalog_type" : "RETAIL",
              "name" : "Most Popular",
              "id" : "443727193917",
              "is_featured" : true,
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.catalogsProductGroupsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "country" : "country",
                "description" : "description",
                "created_at" : 1621350033000,
                "filters" : {
                  "any_of" : [ {
                    "MIN_PRICE" : {
                      "inclusion" : true,
                      "negated" : false,
                      "values" : 0.08008281904610115
                    }
                  }, {
                    "MIN_PRICE" : {
                      "inclusion" : true,
                      "negated" : false,
                      "values" : 0.08008281904610115
                    }
                  } ]
                },
                "type" : "TOP_SELLERS",
                "locale" : "locale",
                "feed_id" : "2680059592705",
                "catalog_id" : "catalog_id",
                "updated_at" : 1622742155000,
                "catalog_type" : "RETAIL",
                "name" : "Most Popular",
                "id" : "443727193917",
                "is_featured" : true,
                "status" : "ACTIVE"
              }, {
                "country" : "country",
                "description" : "description",
                "created_at" : 1621350033000,
                "filters" : {
                  "any_of" : [ {
                    "MIN_PRICE" : {
                      "inclusion" : true,
                      "negated" : false,
                      "values" : 0.08008281904610115
                    }
                  }, {
                    "MIN_PRICE" : {
                      "inclusion" : true,
                      "negated" : false,
                      "values" : 0.08008281904610115
                    }
                  } ]
                },
                "type" : "TOP_SELLERS",
                "locale" : "locale",
                "feed_id" : "2680059592705",
                "catalog_id" : "catalog_id",
                "updated_at" : 1622742155000,
                "catalog_type" : "RETAIL",
                "name" : "Most Popular",
                "id" : "443727193917",
                "is_featured" : true,
                "status" : "ACTIVE"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.catalogsProductGroupsProductCountsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "catalog_type" : "RETAIL"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.catalogsProductGroupsUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "country" : "country",
              "description" : "description",
              "created_at" : 1621350033000,
              "filters" : {
                "any_of" : [ {
                  "MIN_PRICE" : {
                    "inclusion" : true,
                    "negated" : false,
                    "values" : 0.08008281904610115
                  }
                }, {
                  "MIN_PRICE" : {
                    "inclusion" : true,
                    "negated" : false,
                    "values" : 0.08008281904610115
                  }
                } ]
              },
              "type" : "TOP_SELLERS",
              "locale" : "locale",
              "feed_id" : "2680059592705",
              "catalog_id" : "catalog_id",
              "updated_at" : 1622742155000,
              "catalog_type" : "RETAIL",
              "name" : "Most Popular",
              "id" : "443727193917",
              "is_featured" : true,
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.feedProcessingResultsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "updated_at" : "2022-03-14T15:16:34Z",
                "product_counts" : {
                  "ingested" : 4,
                  "original" : 1
                },
                "ingestion_details" : {
                  "warnings" : {
                    "ADDITIONAL_IMAGE_FILE_NOT_FOUND" : 1,
                    "HOTEL_PRICE_HEADER_IS_PRESENT" : 7,
                    "ADDITIONAL_IMAGE_INVALID_FILE" : 6,
                    "ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR" : 7,
                    "ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE" : 1,
                    "ADDITIONAL_IMAGE_MALFORMED_URL" : 1
                  },
                  "errors" : {
                    "LINE_LEVEL_INTERNAL_ERROR" : 0,
                    "ACCOUNT_FLAGGED" : 1,
                    "IMAGE_MALFORMED_URL" : 2,
                    "IMAGE_LEVEL_INTERNAL_ERROR" : 5,
                    "IMAGE_FILE_NOT_FOUND" : 7,
                    "IMAGE_FILE_NOT_ACCESSIBLE" : 5,
                    "IMAGE_INVALID_FILE" : 9,
                    "LARGE_PRODUCT_COUNT_DECREASE" : 6
                  },
                  "info" : {
                    "PREORDER" : 4,
                    "OUT_OF_STOCK" : 2,
                    "IN_STOCK" : 3
                  }
                },
                "created_at" : "2022-03-14T15:15:22Z",
                "id" : "id",
                "validation_details" : {
                  "warnings" : {
                    "AD_LINK_FORMAT_WARNING" : 4,
                    "UTM_SOURCE_AUTO_CORRECTED" : 2,
                    "ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG" : 0,
                    "IMAGE_LINK_WARNING" : 1,
                    "INCONSISTENT_CURRENCY_VALUES" : 0,
                    "UPDATED_TIME_INVALID" : 8,
                    "OPTIONAL_PRODUCT_CATEGORY_MISSING" : 3,
                    "MULTIPACK_INVALID" : 8,
                    "ANDROID_DEEP_LINK_INVALID" : 3,
                    "DESCRIPTION_LENGTH_TOO_LONG" : 7,
                    "SHIPPING_HEIGHT_INVALID" : 4,
                    "TITLE_LENGTH_TOO_LONG" : 4,
                    "SALE_DATE_INVALID" : 1,
                    "DUPLICATE_HEADERS" : 4,
                    "SALES_PRICE_TOO_LOW" : 0,
                    "SHIPPING_WEIGHT_INVALID" : 4,
                    "GTIN_INVALID" : 4,
                    "PRODUCT_TYPE_LENGTH_TOO_LONG" : 5,
                    "COUNTRY_DOES_NOT_MAP_TO_CURRENCY" : 3,
                    "SIZE_SYSTEM_INVALID" : 0,
                    "SHIPPING_INVALID" : 8,
                    "CUSTOM_LABEL_LENGTH_TOO_LONG" : 0,
                    "INDEXED_PRODUCT_COUNT_LARGE_DELTA" : 7,
                    "SHIPPING_WIDTH_INVALID" : 7,
                    "ADWORDS_FORMAT_WARNING" : 6,
                    "AD_LINK_SAME_AS_LINK" : 1,
                    "OPTIONAL_CONDITION_INVALID" : 7,
                    "LINK_FORMAT_WARNING" : 7,
                    "SIZE_TYPE_INVALID" : 9,
                    "TAX_INVALID" : 6,
                    "SALES_PRICE_TOO_HIGH" : 2,
                    "EXPIRATION_DATE_INVALID" : 8,
                    "GENDER_INVALID" : 9,
                    "FETCH_SAME_SIGNATURE" : 3,
                    "IOS_DEEP_LINK_INVALID" : 0,
                    "ADDITIONAL_IMAGE_LINK_WARNING" : 2,
                    "OPTIONAL_CONDITION_MISSING" : 5,
                    "MIN_AD_PRICE_INVALID" : 8,
                    "AGE_GROUP_INVALID" : 0,
                    "TOO_MANY_ADDITIONAL_IMAGE_LINKS" : 5,
                    "MPN_INVALID" : 9,
                    "AVAILABILITY_DATE_INVALID" : 9,
                    "IS_BUNDLE_INVALID" : 9,
                    "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE" : 3,
                    "SALES_PRICE_INVALID" : 5,
                    "PRODUCT_CATEGORY_DEPTH_WARNING" : 4,
                    "WEIGHT_UNIT_INVALID" : 3,
                    "OPTIONAL_PRODUCT_CATEGORY_INVALID" : 9,
                    "ADWORDS_SAME_AS_LINK" : 8
                  },
                  "errors" : {
                    "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE" : 5,
                    "FETCH_ERROR" : 5,
                    "DESCRIPTION_MISSING" : 1,
                    "PINJOIN_CONTENT_UNSAFE" : 3,
                    "PARSE_LINE_ERROR" : 3,
                    "NO_VERIFIED_DOMAIN" : 0,
                    "LINK_LENGTH_TOO_LONG" : 8,
                    "REQUIRED_COLUMNS_MISSING" : 8,
                    "AVAILABILITY_INVALID" : 6,
                    "ITEMID_MISSING" : 3,
                    "LINK_FORMAT_INVALID" : 6,
                    "DELIMITER_ERROR" : 6,
                    "FEED_TOO_SMALL" : 3,
                    "LIST_PRICE_INVALID" : 0,
                    "IMAGE_LINK_INVALID" : 6,
                    "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED" : 7,
                    "IMAGE_LINK_LENGTH_TOO_LONG" : 6,
                    "ADULT_INVALID" : 7,
                    "PRICE_MISSING" : 3,
                    "DUPLICATE_PRODUCTS" : 9,
                    "INTERNAL_SERVICE_ERROR" : 7,
                    "PRODUCT_PRICE_INVALID" : 5,
                    "ADWORDS_FORMAT_INVALID" : 3,
                    "INVALID_DOMAIN" : 0,
                    "BLOCKLISTED_IMAGE_SIGNATURE" : 4,
                    "FEED_LENGTH_TOO_LONG" : 4,
                    "ENCODING_ERROR" : 9,
                    "IMAGE_LINK_MISSING" : 6,
                    "PRODUCT_LINK_MISSING" : 2,
                    "TITLE_MISSING" : 6,
                    "MALFORMED_XML" : 7,
                    "FETCH_INACTIVE_FEED_ERROR" : 9,
                    "PRICE_CANNOT_BE_DETERMINED" : 6
                  }
                },
                "status" : "COMPLETED"
              }, {
                "updated_at" : "2022-03-14T15:16:34Z",
                "product_counts" : {
                  "ingested" : 4,
                  "original" : 1
                },
                "ingestion_details" : {
                  "warnings" : {
                    "ADDITIONAL_IMAGE_FILE_NOT_FOUND" : 1,
                    "HOTEL_PRICE_HEADER_IS_PRESENT" : 7,
                    "ADDITIONAL_IMAGE_INVALID_FILE" : 6,
                    "ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR" : 7,
                    "ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE" : 1,
                    "ADDITIONAL_IMAGE_MALFORMED_URL" : 1
                  },
                  "errors" : {
                    "LINE_LEVEL_INTERNAL_ERROR" : 0,
                    "ACCOUNT_FLAGGED" : 1,
                    "IMAGE_MALFORMED_URL" : 2,
                    "IMAGE_LEVEL_INTERNAL_ERROR" : 5,
                    "IMAGE_FILE_NOT_FOUND" : 7,
                    "IMAGE_FILE_NOT_ACCESSIBLE" : 5,
                    "IMAGE_INVALID_FILE" : 9,
                    "LARGE_PRODUCT_COUNT_DECREASE" : 6
                  },
                  "info" : {
                    "PREORDER" : 4,
                    "OUT_OF_STOCK" : 2,
                    "IN_STOCK" : 3
                  }
                },
                "created_at" : "2022-03-14T15:15:22Z",
                "id" : "id",
                "validation_details" : {
                  "warnings" : {
                    "AD_LINK_FORMAT_WARNING" : 4,
                    "UTM_SOURCE_AUTO_CORRECTED" : 2,
                    "ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG" : 0,
                    "IMAGE_LINK_WARNING" : 1,
                    "INCONSISTENT_CURRENCY_VALUES" : 0,
                    "UPDATED_TIME_INVALID" : 8,
                    "OPTIONAL_PRODUCT_CATEGORY_MISSING" : 3,
                    "MULTIPACK_INVALID" : 8,
                    "ANDROID_DEEP_LINK_INVALID" : 3,
                    "DESCRIPTION_LENGTH_TOO_LONG" : 7,
                    "SHIPPING_HEIGHT_INVALID" : 4,
                    "TITLE_LENGTH_TOO_LONG" : 4,
                    "SALE_DATE_INVALID" : 1,
                    "DUPLICATE_HEADERS" : 4,
                    "SALES_PRICE_TOO_LOW" : 0,
                    "SHIPPING_WEIGHT_INVALID" : 4,
                    "GTIN_INVALID" : 4,
                    "PRODUCT_TYPE_LENGTH_TOO_LONG" : 5,
                    "COUNTRY_DOES_NOT_MAP_TO_CURRENCY" : 3,
                    "SIZE_SYSTEM_INVALID" : 0,
                    "SHIPPING_INVALID" : 8,
                    "CUSTOM_LABEL_LENGTH_TOO_LONG" : 0,
                    "INDEXED_PRODUCT_COUNT_LARGE_DELTA" : 7,
                    "SHIPPING_WIDTH_INVALID" : 7,
                    "ADWORDS_FORMAT_WARNING" : 6,
                    "AD_LINK_SAME_AS_LINK" : 1,
                    "OPTIONAL_CONDITION_INVALID" : 7,
                    "LINK_FORMAT_WARNING" : 7,
                    "SIZE_TYPE_INVALID" : 9,
                    "TAX_INVALID" : 6,
                    "SALES_PRICE_TOO_HIGH" : 2,
                    "EXPIRATION_DATE_INVALID" : 8,
                    "GENDER_INVALID" : 9,
                    "FETCH_SAME_SIGNATURE" : 3,
                    "IOS_DEEP_LINK_INVALID" : 0,
                    "ADDITIONAL_IMAGE_LINK_WARNING" : 2,
                    "OPTIONAL_CONDITION_MISSING" : 5,
                    "MIN_AD_PRICE_INVALID" : 8,
                    "AGE_GROUP_INVALID" : 0,
                    "TOO_MANY_ADDITIONAL_IMAGE_LINKS" : 5,
                    "MPN_INVALID" : 9,
                    "AVAILABILITY_DATE_INVALID" : 9,
                    "IS_BUNDLE_INVALID" : 9,
                    "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE" : 3,
                    "SALES_PRICE_INVALID" : 5,
                    "PRODUCT_CATEGORY_DEPTH_WARNING" : 4,
                    "WEIGHT_UNIT_INVALID" : 3,
                    "OPTIONAL_PRODUCT_CATEGORY_INVALID" : 9,
                    "ADWORDS_SAME_AS_LINK" : 8
                  },
                  "errors" : {
                    "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE" : 5,
                    "FETCH_ERROR" : 5,
                    "DESCRIPTION_MISSING" : 1,
                    "PINJOIN_CONTENT_UNSAFE" : 3,
                    "PARSE_LINE_ERROR" : 3,
                    "NO_VERIFIED_DOMAIN" : 0,
                    "LINK_LENGTH_TOO_LONG" : 8,
                    "REQUIRED_COLUMNS_MISSING" : 8,
                    "AVAILABILITY_INVALID" : 6,
                    "ITEMID_MISSING" : 3,
                    "LINK_FORMAT_INVALID" : 6,
                    "DELIMITER_ERROR" : 6,
                    "FEED_TOO_SMALL" : 3,
                    "LIST_PRICE_INVALID" : 0,
                    "IMAGE_LINK_INVALID" : 6,
                    "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED" : 7,
                    "IMAGE_LINK_LENGTH_TOO_LONG" : 6,
                    "ADULT_INVALID" : 7,
                    "PRICE_MISSING" : 3,
                    "DUPLICATE_PRODUCTS" : 9,
                    "INTERNAL_SERVICE_ERROR" : 7,
                    "PRODUCT_PRICE_INVALID" : 5,
                    "ADWORDS_FORMAT_INVALID" : 3,
                    "INVALID_DOMAIN" : 0,
                    "BLOCKLISTED_IMAGE_SIGNATURE" : 4,
                    "FEED_LENGTH_TOO_LONG" : 4,
                    "ENCODING_ERROR" : 9,
                    "IMAGE_LINK_MISSING" : 6,
                    "PRODUCT_LINK_MISSING" : 2,
                    "TITLE_MISSING" : 6,
                    "MALFORMED_XML" : 7,
                    "FETCH_INACTIVE_FEED_ERROR" : 9,
                    "PRICE_CANNOT_BE_DETERMINED" : 6
                  }
                },
                "status" : "COMPLETED"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    post<Paths.feedsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "credentials" : {
                "password" : "password",
                "username" : "username"
              },
              "format" : "TSV",
              "created_at" : "2022-03-14T15:15:22Z",
              "default_availability" : "IN_STOCK",
              "updated_at" : "2022-03-14T15:16:34Z",
              "catalog_type" : "RETAIL",
              "name" : "name",
              "preferred_processing_schedule" : {
                "timezone" : "Africa/Abidjan",
                "time" : "02:59"
              },
              "default_locale" : "en-US",
              "location" : "location",
              "id" : "id",
              "default_currency" : "USD",
              "default_country" : "US",
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    delete<Paths.feedsDelete> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.feedsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "credentials" : {
                "password" : "password",
                "username" : "username"
              },
              "format" : "TSV",
              "created_at" : "2022-03-14T15:15:22Z",
              "default_availability" : "IN_STOCK",
              "updated_at" : "2022-03-14T15:16:34Z",
              "catalog_type" : "RETAIL",
              "name" : "name",
              "preferred_processing_schedule" : {
                "timezone" : "Africa/Abidjan",
                "time" : "02:59"
              },
              "default_locale" : "en-US",
              "location" : "location",
              "id" : "id",
              "default_currency" : "USD",
              "default_country" : "US",
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.feedsIngest> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "created_at" : "2022-03-14T15:16:34Z",
              "id" : "01234",
              "feed_id" : "56789",
              "status" : "COMPLETED"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.feedsList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "credentials" : {
                  "password" : "password",
                  "username" : "username"
                },
                "format" : "TSV",
                "created_at" : "2022-03-14T15:15:22Z",
                "default_availability" : "IN_STOCK",
                "updated_at" : "2022-03-14T15:16:34Z",
                "catalog_type" : "RETAIL",
                "name" : "name",
                "preferred_processing_schedule" : {
                  "timezone" : "Africa/Abidjan",
                  "time" : "02:59"
                },
                "default_locale" : "en-US",
                "location" : "location",
                "id" : "id",
                "default_currency" : "USD",
                "default_country" : "US",
                "status" : "ACTIVE"
              }, {
                "credentials" : {
                  "password" : "password",
                  "username" : "username"
                },
                "format" : "TSV",
                "created_at" : "2022-03-14T15:15:22Z",
                "default_availability" : "IN_STOCK",
                "updated_at" : "2022-03-14T15:16:34Z",
                "catalog_type" : "RETAIL",
                "name" : "name",
                "preferred_processing_schedule" : {
                  "timezone" : "Africa/Abidjan",
                  "time" : "02:59"
                },
                "default_locale" : "en-US",
                "location" : "location",
                "id" : "id",
                "default_currency" : "USD",
                "default_country" : "US",
                "status" : "ACTIVE"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    patch<Paths.feedsUpdate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "credentials" : {
                "password" : "password",
                "username" : "username"
              },
              "format" : "TSV",
              "created_at" : "2022-03-14T15:15:22Z",
              "default_availability" : "IN_STOCK",
              "updated_at" : "2022-03-14T15:16:34Z",
              "catalog_type" : "RETAIL",
              "name" : "name",
              "preferred_processing_schedule" : {
                "timezone" : "Africa/Abidjan",
                "time" : "02:59"
              },
              "default_locale" : "en-US",
              "location" : "location",
              "id" : "id",
              "default_currency" : "USD",
              "default_country" : "US",
              "status" : "ACTIVE"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    get<Paths.itemsBatchGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "catalog_type" : "RETAIL"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    authenticate("client_credentials") {
    post<Paths.itemsBatchPost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "catalog_type" : "RETAIL"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.itemsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "catalog_type" : "RETAIL"
              }, {
                "catalog_type" : "RETAIL"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.itemsIssuesList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "item_id" : "DS0294-L",
                "warnings" : {
                  "AD_LINK_FORMAT_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LINK_FORMAT_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "UTM_SOURCE_AUTO_CORRECTED" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SIZE_TYPE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TAX_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IMAGE_LINK_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALES_PRICE_TOO_HIGH" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "EXPIRATION_DATE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "GENDER_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IOS_DEEP_LINK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADDITIONAL_IMAGE_LINK_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_CONDITION_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_PRODUCT_CATEGORY_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MIN_AD_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MULTIPACK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ANDROID_DEEP_LINK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "DESCRIPTION_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_HEIGHT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TITLE_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AGE_GROUP_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALE_DATE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TOO_MANY_ADDITIONAL_IMAGE_LINKS" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MPN_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALES_PRICE_TOO_LOW" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AVAILABILITY_DATE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_WEIGHT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IS_BUNDLE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "GTIN_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_TYPE_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "COUNTRY_DOES_NOT_MAP_TO_CURRENCY" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALES_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SIZE_SYSTEM_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "CUSTOM_LABEL_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_CATEGORY_DEPTH_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_WIDTH_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADWORDS_FORMAT_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_PRODUCT_CATEGORY_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "WEIGHT_UNIT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AD_LINK_SAME_AS_LINK" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_CONDITION_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADWORDS_SAME_AS_LINK" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  }
                },
                "item_number" : 0,
                "errors" : {
                  "IMAGE_LINK_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADULT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRICE_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "DESCRIPTION_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "DUPLICATE_PRODUCTS" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PINJOIN_CONTENT_UNSAFE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADWORDS_FORMAT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "BLOCKLISTED_IMAGE_SIGNATURE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "INVALID_DOMAIN" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LINK_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PARSE_LINE_ERROR" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AVAILABILITY_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IMAGE_LINK_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_LINK_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ITEMID_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TITLE_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LINK_FORMAT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LIST_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IMAGE_LINK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRICE_CANNOT_BE_DETERMINED" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  }
                }
              }, {
                "item_id" : "DS0294-L",
                "warnings" : {
                  "AD_LINK_FORMAT_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LINK_FORMAT_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "UTM_SOURCE_AUTO_CORRECTED" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SIZE_TYPE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TAX_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IMAGE_LINK_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALES_PRICE_TOO_HIGH" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "EXPIRATION_DATE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "GENDER_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IOS_DEEP_LINK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADDITIONAL_IMAGE_LINK_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_CONDITION_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_PRODUCT_CATEGORY_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MIN_AD_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MULTIPACK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ANDROID_DEEP_LINK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "DESCRIPTION_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_HEIGHT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TITLE_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AGE_GROUP_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALE_DATE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TOO_MANY_ADDITIONAL_IMAGE_LINKS" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MPN_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALES_PRICE_TOO_LOW" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AVAILABILITY_DATE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_WEIGHT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IS_BUNDLE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "GTIN_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_TYPE_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "COUNTRY_DOES_NOT_MAP_TO_CURRENCY" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SALES_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SIZE_SYSTEM_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "CUSTOM_LABEL_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_CATEGORY_DEPTH_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "SHIPPING_WIDTH_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADWORDS_FORMAT_WARNING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_PRODUCT_CATEGORY_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "WEIGHT_UNIT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AD_LINK_SAME_AS_LINK" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "OPTIONAL_CONDITION_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADWORDS_SAME_AS_LINK" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  }
                },
                "item_number" : 0,
                "errors" : {
                  "IMAGE_LINK_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADULT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRICE_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "DESCRIPTION_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "DUPLICATE_PRODUCTS" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PINJOIN_CONTENT_UNSAFE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ADWORDS_FORMAT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "BLOCKLISTED_IMAGE_SIGNATURE" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "INVALID_DOMAIN" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LINK_LENGTH_TOO_LONG" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PARSE_LINE_ERROR" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "AVAILABILITY_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IMAGE_LINK_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRODUCT_LINK_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "ITEMID_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "TITLE_MISSING" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LINK_FORMAT_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "LIST_PRICE_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "IMAGE_LINK_INVALID" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "PRICE_CANNOT_BE_DETERMINED" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  },
                  "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED" : {
                    "attribute_name" : "TITLE",
                    "provided_value" : "provided_value"
                  }
                }
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.itemsPost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "items" : [ {
                "catalog_type" : "RETAIL"
              }, {
                "catalog_type" : "RETAIL"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.productsByProductGroupFilterList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "catalog_type" : "RETAIL"
              }, {
                "catalog_type" : "RETAIL"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.reportsCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "token" : "token"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.reportsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "size" : 0.8008281904610115,
              "report_status" : "FINISHED",
              "url" : "url"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.reportsStats> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "report_type" : "FEED_INGESTION_ISSUES"
              }, {
                "report_type" : "FEED_INGESTION_ISSUES"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
