/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.DetailedError
import org.openapitools.server.models.Error
import org.openapitools.server.models.IntegrationLogsRequest
import org.openapitools.server.models.IntegrationLogsSuccessResponse
import org.openapitools.server.models.IntegrationMetadata
import org.openapitools.server.models.IntegrationRecord
import org.openapitools.server.models.IntegrationRequest
import org.openapitools.server.models.IntegrationRequestPatch
import org.openapitools.server.models.IntegrationsGetList200Response

fun Route.IntegrationsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    delete<Paths.integrationsCommerceDel> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.integrationsCommerceGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "id" : "7329167449607351372",
              "external_business_id" : "1238401984",
              "connected_merchant_id" : "1445572885401",
              "connected_user_id" : "871939315263957401",
              "connected_advertiser_id" : "549764738871",
              "connected_lba_id" : "871939315263957402",
              "connected_tag_id" : "2412141155151",
              "partner_access_token_expiry" : 1621350033000,
              "partner_refresh_token_expiry" : 1621350033000,
              "scopes" : "accounts:read",
              "created_timestamp" : 1621350033000,
              "updated_timestamp" : 1621350033000,
              "additional_id_1" : "128464",
              "partner_metadata" : ""
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.integrationsCommercePatch> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "id" : "7329167449607351372",
              "external_business_id" : "1238401984",
              "connected_merchant_id" : "1445572885401",
              "connected_user_id" : "871939315263957401",
              "connected_advertiser_id" : "549764738871",
              "connected_lba_id" : "871939315263957402",
              "connected_tag_id" : "2412141155151",
              "partner_access_token_expiry" : 1621350033000,
              "partner_refresh_token_expiry" : 1621350033000,
              "scopes" : "accounts:read",
              "created_timestamp" : 1621350033000,
              "updated_timestamp" : 1621350033000,
              "additional_id_1" : "128464",
              "partner_metadata" : ""
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.integrationsCommercePost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "id" : "7329167449607351372",
              "external_business_id" : "1238401984",
              "connected_merchant_id" : "1445572885401",
              "connected_user_id" : "871939315263957401",
              "connected_advertiser_id" : "549764738871",
              "connected_lba_id" : "871939315263957402",
              "connected_tag_id" : "2412141155151",
              "partner_access_token_expiry" : 1621350033000,
              "partner_refresh_token_expiry" : 1621350033000,
              "scopes" : "accounts:read",
              "created_timestamp" : 1621350033000,
              "updated_timestamp" : 1621350033000,
              "additional_id_1" : "128464",
              "partner_metadata" : ""
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.integrationsGetById> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "id" : "7329123456789012345",
              "external_business_id" : "1234567890",
              "connected_merchant_id" : "1234567890123",
              "connected_user_id" : "123456789012345678",
              "connected_advertiser_id" : "123456789012",
              "connected_lba_id" : "871234567890123456",
              "connected_tag_id" : "2412345678901",
              "partner_access_token" : "ABCLUOJS5XDMWDE",
              "partner_refresh_token" : "ABCLUOJS5XDMWDE",
              "partner_primary_email" : "partner@server.com",
              "partner_access_token_expiry" : 1621350033000,
              "partner_refresh_token_expiry" : 1621350033000,
              "scopes" : "accounts:read",
              "partner_metadata" : "",
              "additional_id_1" : "123456",
              "created_time" : 1621350033000,
              "updated_time" : 1621350033000
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.integrationsGetList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "id" : "7329123456789012345",
                "external_business_id" : "1234567890",
                "connected_merchant_id" : "1234567890123",
                "connected_user_id" : "123456789012345678",
                "connected_advertiser_id" : "123456789012",
                "connected_lba_id" : "871234567890123456",
                "connected_tag_id" : "2412345678901",
                "partner_access_token" : "ABCLUOJS5XDMWDE",
                "partner_refresh_token" : "ABCLUOJS5XDMWDE",
                "partner_primary_email" : "partner@server.com",
                "partner_access_token_expiry" : 1621350033000,
                "partner_refresh_token_expiry" : 1621350033000,
                "scopes" : "accounts:read",
                "partner_metadata" : "",
                "additional_id_1" : "123456",
                "created_time" : 1621350033000,
                "updated_time" : 1621350033000
              }, {
                "id" : "7329123456789012345",
                "external_business_id" : "1234567890",
                "connected_merchant_id" : "1234567890123",
                "connected_user_id" : "123456789012345678",
                "connected_advertiser_id" : "123456789012",
                "connected_lba_id" : "871234567890123456",
                "connected_tag_id" : "2412345678901",
                "partner_access_token" : "ABCLUOJS5XDMWDE",
                "partner_refresh_token" : "ABCLUOJS5XDMWDE",
                "partner_primary_email" : "partner@server.com",
                "partner_access_token_expiry" : 1621350033000,
                "partner_refresh_token_expiry" : 1621350033000,
                "scopes" : "accounts:read",
                "partner_metadata" : "",
                "additional_id_1" : "123456",
                "created_time" : 1621350033000,
                "updated_time" : 1621350033000
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.integrationsLogsPost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
