/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AdsCreditRedeemRequest
import org.openapitools.server.models.AdsCreditRedeemResponse
import org.openapitools.server.models.AdsCreditsDiscountsGet200Response
import org.openapitools.server.models.BillingProfilesGet200Response
import org.openapitools.server.models.Error
import org.openapitools.server.models.SSIOAccountResponse
import org.openapitools.server.models.SSIOCreateInsertionOrderRequest
import org.openapitools.server.models.SSIOCreateInsertionOrderResponse
import org.openapitools.server.models.SSIOEditInsertionOrderRequest
import org.openapitools.server.models.SSIOEditInsertionOrderResponse
import org.openapitools.server.models.SSIOInsertionOrderStatusResponse
import org.openapitools.server.models.SsioInsertionOrdersStatusGetByAdAccount200Response
import org.openapitools.server.models.SsioOrderLinesGetByAdAccount200Response

fun Route.BillingApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    post<Paths.adsCreditRedeem> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "success" : false,
              "errorMessage" : "The offer has already been redeemed by this advertiser",
              "errorCode" : 2708
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.adsCreditsDiscountsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "active" : true,
                "discountType" : "COUPON",
                "discountCurrency" : "USD",
                "discountInMicroCurrency" : 125000000,
                "title" : "Ads Credits",
                "remainingDiscountInMicroCurrency" : 125000000,
                "advertiser_id" : "12312451231"
              }, {
                "active" : true,
                "discountType" : "COUPON",
                "discountCurrency" : "USD",
                "discountInMicroCurrency" : 125000000,
                "title" : "Ads Credits",
                "remainingDiscountInMicroCurrency" : 125000000,
                "advertiser_id" : "12312451231"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.billingProfilesGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "payment_method_brand" : "VISA",
                "id" : "12312451231",
                "card_type" : "VISA",
                "status" : "INVALID",
                "advertiser_id" : "12312451231"
              }, {
                "payment_method_brand" : "VISA",
                "id" : "12312451231",
                "card_type" : "VISA",
                "status" : "INVALID",
                "advertiser_id" : "12312451231"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.ssioAccountsGet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "billto_infos" : [ {
                "us_terms_id" : "a2S1N000000bKIOUA2",
                "row_terms_id" : "a2S1N000000bKHhUAM",
                "us_terms" : "This Insertion Order (\"IO\") is subject to the Pinterest Addendum To IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0), as executed by Pinterest, Inc. and GroupM Worldwide LLC on May 7, 2014 and Amendment No. 1 to Pinterest Addendum to IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0) as executed by Pinterest, Inc. and GroupM Worldwide LLC on August 20, 2015. The parties agree that Agency may apply any of the budget listed on this IO to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees.The terms of the Addendum supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.",
                "row_terms" : "The IO is governed by the terms available at\r\nhttps://business.pinterest.com/en-gb/pinterest-advertising-services-agreement",
                "addresses" : [ {
                  "order_legal_entity" : "PIN US OU",
                  "purpose" : "Billing",
                  "display" : "475 Brannan Street, San Francisco, CA 94103",
                  "address_id" : "a1C1N000004MUrLUAW"
                }, {
                  "order_legal_entity" : "PIN US OU",
                  "purpose" : "Billing",
                  "display" : "475 Brannan Street, San Francisco, CA 94103",
                  "address_id" : "a1C1N000004MUrLUAW"
                } ],
                "io_terms" : "The IO is governed by the terms available at https://business.pinterest.com/en/pinterest-advertising-services-agreement/. If a budget is listed on this IO, the parties agree that Advertiser (or if applicable, its Agency) may apply any of the budget to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees. The terms of the Agreement supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.",
                "io_terms_id" : "a2S1N000000bKHgUAM",
                "io_type" : "Pinterest Paper",
                "id" : "0011N00001LW8kAQAT"
              }, {
                "us_terms_id" : "a2S1N000000bKIOUA2",
                "row_terms_id" : "a2S1N000000bKHhUAM",
                "us_terms" : "This Insertion Order (\"IO\") is subject to the Pinterest Addendum To IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0), as executed by Pinterest, Inc. and GroupM Worldwide LLC on May 7, 2014 and Amendment No. 1 to Pinterest Addendum to IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0) as executed by Pinterest, Inc. and GroupM Worldwide LLC on August 20, 2015. The parties agree that Agency may apply any of the budget listed on this IO to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees.The terms of the Addendum supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.",
                "row_terms" : "The IO is governed by the terms available at\r\nhttps://business.pinterest.com/en-gb/pinterest-advertising-services-agreement",
                "addresses" : [ {
                  "order_legal_entity" : "PIN US OU",
                  "purpose" : "Billing",
                  "display" : "475 Brannan Street, San Francisco, CA 94103",
                  "address_id" : "a1C1N000004MUrLUAW"
                }, {
                  "order_legal_entity" : "PIN US OU",
                  "purpose" : "Billing",
                  "display" : "475 Brannan Street, San Francisco, CA 94103",
                  "address_id" : "a1C1N000004MUrLUAW"
                } ],
                "io_terms" : "The IO is governed by the terms available at https://business.pinterest.com/en/pinterest-advertising-services-agreement/. If a budget is listed on this IO, the parties agree that Advertiser (or if applicable, its Agency) may apply any of the budget to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees. The terms of the Agreement supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.",
                "io_terms_id" : "a2S1N000000bKHgUAM",
                "io_type" : "Pinterest Paper",
                "id" : "0011N00001LW8kAQAT"
              } ],
              "eligible" : true,
              "can_edit" : true,
              "currency" : "USD",
              "error" : "No Error",
              "pmp_names" : [ {
                "name" : "Bidalgo",
                "id" : "0011N00001LW2aSQAT"
              }, {
                "name" : "Bidalgo",
                "id" : "0011N00001LW2aSQAT"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.ssioInsertionOrderCreate> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "pin_order_id" : "pin_order_id"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    patch<Paths.ssioInsertionOrderEdit> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "pin_order_id" : "pin_order_id"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.ssioInsertionOrdersStatusGetByAdAccount> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "creation_time" : "2017-06-21T23:11:11.000Z",
                "pin_order_id" : "0Q01N0000015hekSAB",
                "status" : "Approved"
              }, {
                "creation_time" : "2017-06-21T23:11:11.000Z",
                "pin_order_id" : "0Q01N0000015hekSAB",
                "status" : "Approved"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.ssioInsertionOrdersStatusGetByPinOrderId> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "creation_time" : "2017-06-21T23:11:11.000Z",
              "pin_order_id" : "0Q01N0000015hekSAB",
              "status" : "Approved"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.ssioOrderLinesGetByAdAccount> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "end_date" : "2020-10-05",
                "pmp_name" : "pmp_name",
                "salesforce_order_line_id" : "salesforce_order_line_id",
                "billing_contact_firstname" : "Mary",
                "ads_manager_order_line_id" : "ads_manager_order_line_id",
                "currency_info" : "USD",
                "bill_to_company_name" : "Home Depot Inc.",
                "billing_contact_email" : "mail@test.com",
                "estimated_monthly_spend" : 0.8008281904610115,
                "media_contact_email" : "mail@test.com",
                "billing_contact_lastname" : "Smith",
                "order_name" : "order_name",
                "agency_link" : "",
                "po_number" : "po_number",
                "accepted_terms_id" : "accepted_terms_id",
                "accepted_terms_time" : "2020-10-06T13:07:04.000Z",
                "pin_order_id" : "pin_order_id",
                "media_contact_lastname" : "Doe",
                "last_modified_date_time" : "2020-10-06T13:07:04.000Z",
                "start_date" : "2018-03-01",
                "media_contact_firstname" : "John",
                "budget_amount" : 5000000
              }, {
                "end_date" : "2020-10-05",
                "pmp_name" : "pmp_name",
                "salesforce_order_line_id" : "salesforce_order_line_id",
                "billing_contact_firstname" : "Mary",
                "ads_manager_order_line_id" : "ads_manager_order_line_id",
                "currency_info" : "USD",
                "bill_to_company_name" : "Home Depot Inc.",
                "billing_contact_email" : "mail@test.com",
                "estimated_monthly_spend" : 0.8008281904610115,
                "media_contact_email" : "mail@test.com",
                "billing_contact_lastname" : "Smith",
                "order_name" : "order_name",
                "agency_link" : "",
                "po_number" : "po_number",
                "accepted_terms_id" : "accepted_terms_id",
                "accepted_terms_time" : "2020-10-06T13:07:04.000Z",
                "pin_order_id" : "pin_order_id",
                "media_contact_lastname" : "Doe",
                "last_modified_date_time" : "2020-10-06T13:07:04.000Z",
                "start_date" : "2018-03-01",
                "media_contact_firstname" : "John",
                "budget_amount" : 5000000
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
