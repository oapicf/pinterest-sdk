/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.AdAccountCreateSubscriptionRequest
import org.openapitools.server.models.AdAccountCreateSubscriptionResponse
import org.openapitools.server.models.AdAccountGetSubscriptionResponse
import org.openapitools.server.models.AdAccountsSubscriptionsGetList200Response
import org.openapitools.server.models.Error

fun Route.LeadAdsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("pinterest_oauth2") {
    delete<Paths.adAccountsSubscriptionsDelById> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "code" : 0,
              "message" : "message"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.adAccountsSubscriptionsGetById> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "cryptographic_key" : "ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54",
              "created_time" : 1699209842000,
              "user_account_id" : "549755885175",
              "webhook_url" : "https://webhook.example.com/xyz",
              "lead_form_id" : "383791336903426390",
              "cryptographic_algorithm" : "AES-256-GCM",
              "id" : "8078432025948590686",
              "api_version" : "v5",
              "ad_account_id" : "549755885176"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    get<Paths.adAccountsSubscriptionsGetList> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "bookmark" : "bookmark",
              "items" : [ {
                "cryptographic_key" : "ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54",
                "created_time" : 1699209842000,
                "user_account_id" : "549755885175",
                "webhook_url" : "https://webhook.example.com/xyz",
                "lead_form_id" : "383791336903426390",
                "cryptographic_algorithm" : "AES-256-GCM",
                "id" : "8078432025948590686",
                "api_version" : "v5",
                "ad_account_id" : "549755885176"
              }, {
                "cryptographic_key" : "ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54",
                "created_time" : 1699209842000,
                "user_account_id" : "549755885175",
                "webhook_url" : "https://webhook.example.com/xyz",
                "lead_form_id" : "383791336903426390",
                "cryptographic_algorithm" : "AES-256-GCM",
                "id" : "8078432025948590686",
                "api_version" : "v5",
                "ad_account_id" : "549755885176"
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("pinterest_oauth2") {
    post<Paths.adAccountsSubscriptionsPost> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "cryptographic_key" : "ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54",
              "created_time" : 1699209842000,
              "cryptographic_algorithm" : "AES-256-GCM",
              "id" : "8078432025948590686"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
