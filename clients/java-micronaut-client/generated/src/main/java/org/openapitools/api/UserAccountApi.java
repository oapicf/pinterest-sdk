/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import org.openapitools.model.Account;
import org.openapitools.model.AnalyticsMetricsResponse;
import org.openapitools.model.BoardsUserFollowsList200Response;
import org.openapitools.model.Error;
import org.openapitools.model.FollowUserRequest;
import org.openapitools.model.FollowersList200Response;
import org.openapitools.model.LinkedBusiness;
import java.time.LocalDate;
import org.openapitools.model.TopPinsAnalyticsResponse;
import org.openapitools.model.TopVideoPinsAnalyticsResponse;
import org.openapitools.model.UserAccountFollowedInterests200Response;
import org.openapitools.model.UserFollowingFeedType;
import org.openapitools.model.UserFollowingGet200Response;
import org.openapitools.model.UserSummary;
import org.openapitools.model.UserWebsiteSummary;
import org.openapitools.model.UserWebsiteVerificationCode;
import org.openapitools.model.UserWebsiteVerifyRequest;
import org.openapitools.model.UserWebsitesGet200Response;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Client("${openapi-micronaut-client-base-path}")
public interface UserAccountApi {
    /**
     * List following boards
     * Get a list of the boards a user follows. The request returns a board summary object array.
     *
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param explicitFollowing Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows. (optional, default to false)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return BoardsUserFollowsList200Response
     */
    @Get(uri="/user_account/following/boards")
    @Consumes({"application/json"})
    Mono<BoardsUserFollowsList200Response> boardsUserFollowsList(
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize, 
        @QueryValue(value="explicit_following", defaultValue="false") @Nullable Boolean explicitFollowing, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Follow user
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Use this request, as a signed-in user, to follow another user.
     *
     * @param username A valid username (required)
     * @param followUserRequest Follow a user. (required)
     * @return UserSummary
     */
    @Post(uri="/user_account/following/{username}")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<UserSummary> followUserUpdate(
        @PathVariable(name="username") @NotNull @Pattern(regexp="(?!^\\d+$)^.+$") String username, 
        @Body @NotNull @Valid FollowUserRequest followUserRequest
    );

    /**
     * List followers
     * Get a list of your followers.
     *
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return FollowersList200Response
     */
    @Get(uri="/user_account/followers")
    @Consumes({"application/json"})
    Mono<FollowersList200Response> followersList(
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize
    );

    /**
     * List linked businesses
     * Get a list of your linked business accounts.
     *
     * @return List&lt;LinkedBusiness&gt;
     */
    @Get(uri="/user_account/businesses")
    @Consumes({"application/json"})
    Mono<List<LinkedBusiness>> linkedBusinessAccountsGet();

    /**
     * Unverify website
     * Unverifu a website verified by the signed-in user.
     *
     * @param website Website with path or domain only (required)
     */
    @Delete(uri="/user_account/websites")
    @Consumes({"application/json"})
    Mono<Void> unverifyWebsiteDelete(
        @QueryValue(value="website") @NotNull String website
    );

    /**
     * Get user account analytics
     * Get analytics for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
     *
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param fromClaimedContent Filter on Pins that match your claimed domain. (optional, default to BOTH)
     * @param pinFormat Pin formats to get data for, default is all. (optional, default to ALL)
     * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL)
     * @param contentType Filter to paid or organic data. Default is all. (optional, default to ALL)
     * @param source Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts (optional, default to ALL)
     * @param metricTypes Metric types to get data for, default is all.  (optional)
     * @param splitField How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to NO_SPLIT)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Map&lt;String, AnalyticsMetricsResponse&gt;
     */
    @Get(uri="/user_account/analytics")
    @Consumes({"application/json"})
    Mono<Map<String, AnalyticsMetricsResponse>> userAccountAnalytics(
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="from_claimed_content", defaultValue="BOTH") @Nullable String fromClaimedContent, 
        @QueryValue(value="pin_format", defaultValue="ALL") @Nullable String pinFormat, 
        @QueryValue(value="app_types", defaultValue="ALL") @Nullable String appTypes, 
        @QueryValue(value="content_type", defaultValue="ALL") @Nullable String contentType, 
        @QueryValue(value="source", defaultValue="ALL") @Nullable String source, 
        @QueryValue(value="metric_types") @Nullable List<String> metricTypes, 
        @QueryValue(value="split_field", defaultValue="NO_SPLIT") @Nullable String splitField, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Get user account top pins analytics
     * Gets analytics data about a user&#39;s top pins (limited to the top 50). - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
     *
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param sortBy Specify sorting order for metrics (required)
     * @param fromClaimedContent Filter on Pins that match your claimed domain. (optional, default to BOTH)
     * @param pinFormat Pin formats to get data for, default is all. (optional, default to ALL)
     * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL)
     * @param contentType Filter to paid or organic data. Default is all. (optional, default to ALL)
     * @param source Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts (optional, default to ALL)
     * @param metricTypes Metric types to get data for, default is all.  (optional)
     * @param numOfPins Number of pins to include, default is 10. Max is 50. (optional, default to 10)
     * @param createdInLastNDays Get metrics for pins created in the last \&quot;n\&quot; days. (optional)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return TopPinsAnalyticsResponse
     */
    @Get(uri="/user_account/analytics/top_pins")
    @Consumes({"application/json"})
    Mono<TopPinsAnalyticsResponse> userAccountAnalyticsTopPins(
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="sort_by") @NotNull String sortBy, 
        @QueryValue(value="from_claimed_content", defaultValue="BOTH") @Nullable String fromClaimedContent, 
        @QueryValue(value="pin_format", defaultValue="ALL") @Nullable String pinFormat, 
        @QueryValue(value="app_types", defaultValue="ALL") @Nullable String appTypes, 
        @QueryValue(value="content_type", defaultValue="ALL") @Nullable String contentType, 
        @QueryValue(value="source", defaultValue="ALL") @Nullable String source, 
        @QueryValue(value="metric_types") @Nullable List<String> metricTypes, 
        @QueryValue(value="num_of_pins", defaultValue="10") @Nullable @Min(1) @Max(50) Integer numOfPins, 
        @QueryValue(value="created_in_last_n_days") @Nullable Integer createdInLastNDays, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Get user account top video pins analytics
     * Gets analytics data about a user&#39;s top video pins (limited to the top 50). - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.
     *
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param sortBy Specify sorting order for video metrics (required)
     * @param fromClaimedContent Filter on Pins that match your claimed domain. (optional, default to BOTH)
     * @param pinFormat Pin formats to get data for, default is all. (optional, default to ALL)
     * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL)
     * @param contentType Filter to paid or organic data. Default is all. (optional, default to ALL)
     * @param source Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts (optional, default to ALL)
     * @param metricTypes Metric types to get video data for, default is all.  (optional)
     * @param numOfPins Number of pins to include, default is 10. Max is 50. (optional, default to 10)
     * @param createdInLastNDays Get metrics for pins created in the last \&quot;n\&quot; days. (optional)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return TopVideoPinsAnalyticsResponse
     */
    @Get(uri="/user_account/analytics/top_video_pins")
    @Consumes({"application/json"})
    Mono<TopVideoPinsAnalyticsResponse> userAccountAnalyticsTopVideoPins(
        @QueryValue(value="start_date") @NotNull @Format("yyyy-MM-dd") LocalDate startDate, 
        @QueryValue(value="end_date") @NotNull @Format("yyyy-MM-dd") LocalDate endDate, 
        @QueryValue(value="sort_by") @NotNull String sortBy, 
        @QueryValue(value="from_claimed_content", defaultValue="BOTH") @Nullable String fromClaimedContent, 
        @QueryValue(value="pin_format", defaultValue="ALL") @Nullable String pinFormat, 
        @QueryValue(value="app_types", defaultValue="ALL") @Nullable String appTypes, 
        @QueryValue(value="content_type", defaultValue="ALL") @Nullable String contentType, 
        @QueryValue(value="source", defaultValue="ALL") @Nullable String source, 
        @QueryValue(value="metric_types") @Nullable List<String> metricTypes, 
        @QueryValue(value="num_of_pins", defaultValue="10") @Nullable @Min(1) @Max(50) Integer numOfPins, 
        @QueryValue(value="created_in_last_n_days") @Nullable Integer createdInLastNDays, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * List following interests
     * Get a list of a user&#39;s following interests in one place.
     *
     * @param username A valid username (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return UserAccountFollowedInterests200Response
     */
    @Get(uri="/users/{username}/interests/follow")
    @Consumes({"application/json"})
    Mono<UserAccountFollowedInterests200Response> userAccountFollowedInterests(
        @PathVariable(name="username") @NotNull @Pattern(regexp="(?!^\\d+$)^.+$") String username, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize
    );

    /**
     * Get user account
     * Get account information for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. See &lt;a href&#x3D;&#39;/docs/getting-started/using-business-access/&#39;&gt;Understanding Business Access&lt;/a&gt; for more information.
     *
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Account
     */
    @Get(uri="/user_account")
    @Consumes({"application/json"})
    Mono<Account> userAccountGet(
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * List following
     * Get a list of who a certain user follows.
     *
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param feedType Thrift param specifying what type of followees will be kept. Default to include all followees. (optional, default to ALL)
     * @param explicitFollowing Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows. (optional, default to false)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return UserFollowingGet200Response
     */
    @Get(uri="/user_account/following")
    @Consumes({"application/json"})
    Mono<UserFollowingGet200Response> userFollowingGet(
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize, 
        @QueryValue(value="feed_type", defaultValue="ALL") @Nullable UserFollowingFeedType feedType, 
        @QueryValue(value="explicit_following", defaultValue="false") @Nullable Boolean explicitFollowing, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Get user websites
     * Get user websites, claimed or not
     *
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return UserWebsitesGet200Response
     */
    @Get(uri="/user_account/websites")
    @Consumes({"application/json"})
    Mono<UserWebsitesGet200Response> userWebsitesGet(
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize
    );

    /**
     * Verify website
     * Verify a website as a signed-in user.
     *
     * @param userWebsiteVerifyRequest Verify a website. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return UserWebsiteSummary
     */
    @Post(uri="/user_account/websites")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<UserWebsiteSummary> verifyWebsiteUpdate(
        @Body @NotNull @Valid UserWebsiteVerifyRequest userWebsiteVerifyRequest, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Get user verification code for website claiming
     * Get verification code for user to install on the website to claim it.
     *
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return UserWebsiteVerificationCode
     */
    @Get(uri="/user_account/websites/verification")
    @Consumes({"application/json"})
    Mono<UserWebsiteVerificationCode> websiteVerificationGet(
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

}
