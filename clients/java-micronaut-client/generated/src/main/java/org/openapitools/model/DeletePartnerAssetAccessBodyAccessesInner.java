/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * DeletePartnerAssetAccessBodyAccessesInner
 */
@JsonPropertyOrder({
  DeletePartnerAssetAccessBodyAccessesInner.JSON_PROPERTY_PARTNER_ID,
  DeletePartnerAssetAccessBodyAccessesInner.JSON_PROPERTY_ASSET_ID,
  DeletePartnerAssetAccessBodyAccessesInner.JSON_PROPERTY_PARTNER_TYPE
})
@JsonTypeName("DeletePartnerAssetAccessBody_accesses_inner")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class DeletePartnerAssetAccessBodyAccessesInner {
    public static final String JSON_PROPERTY_PARTNER_ID = "partner_id";
    private String partnerId;

    public static final String JSON_PROPERTY_ASSET_ID = "asset_id";
    private String assetId;

    /**
     * If partner_type&#x3D;INTERNAL, the deleted asset access is for the access the partner has to your business asset.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the deleted asset access is for the access you have to the partner&#39;s business asset.
     */
    public enum PartnerTypeEnum {
        INTERNAL("INTERNAL"),
        EXTERNAL("EXTERNAL");

        private String value;

        PartnerTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static PartnerTypeEnum fromValue(String value) {
            for (PartnerTypeEnum b : PartnerTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_PARTNER_TYPE = "partner_type";
    private PartnerTypeEnum partnerType = PartnerTypeEnum.INTERNAL;

    public DeletePartnerAssetAccessBodyAccessesInner(String partnerId, String assetId) {
        this.partnerId = partnerId;
        this.assetId = assetId;
    }

    public DeletePartnerAssetAccessBodyAccessesInner partnerId(String partnerId) {
        this.partnerId = partnerId;
        return this;
    }

    /**
     * Unique identifier of a business partner to update asset access to.
     * @return partnerId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @Size(max=25)
    @JsonProperty(JSON_PROPERTY_PARTNER_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPartnerId() {
        return partnerId;
    }

    @JsonProperty(JSON_PROPERTY_PARTNER_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPartnerId(String partnerId) {
        this.partnerId = partnerId;
    }

    public DeletePartnerAssetAccessBodyAccessesInner assetId(String assetId) {
        this.assetId = assetId;
        return this;
    }

    /**
     * Unique identifier of the business asset.
     * @return assetId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @Size(max=25)
    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssetId() {
        return assetId;
    }

    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssetId(String assetId) {
        this.assetId = assetId;
    }

    public DeletePartnerAssetAccessBodyAccessesInner partnerType(PartnerTypeEnum partnerType) {
        this.partnerType = partnerType;
        return this;
    }

    /**
     * If partner_type&#x3D;INTERNAL, the deleted asset access is for the access the partner has to your business asset.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the deleted asset access is for the access you have to the partner&#39;s business asset.
     * @return partnerType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PARTNER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PartnerTypeEnum getPartnerType() {
        return partnerType;
    }

    @JsonProperty(JSON_PROPERTY_PARTNER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPartnerType(PartnerTypeEnum partnerType) {
        this.partnerType = partnerType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeletePartnerAssetAccessBodyAccessesInner deletePartnerAssetAccessBodyAccessesInner = (DeletePartnerAssetAccessBodyAccessesInner) o;
        return Objects.equals(this.partnerId, deletePartnerAssetAccessBodyAccessesInner.partnerId) &&
            Objects.equals(this.assetId, deletePartnerAssetAccessBodyAccessesInner.assetId) &&
            Objects.equals(this.partnerType, deletePartnerAssetAccessBodyAccessesInner.partnerType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(partnerId, assetId, partnerType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeletePartnerAssetAccessBodyAccessesInner {\n");
        sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
        sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
        sb.append("    partnerType: ").append(toIndentedString(partnerType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

