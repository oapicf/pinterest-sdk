/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * ConversionEventsUserDataAnyOf
 */
@JsonPropertyOrder({
  ConversionEventsUserDataAnyOf.JSON_PROPERTY_EM,
  ConversionEventsUserDataAnyOf.JSON_PROPERTY_HASHED_MAIDS,
  ConversionEventsUserDataAnyOf.JSON_PROPERTY_CLIENT_IP_ADDRESS,
  ConversionEventsUserDataAnyOf.JSON_PROPERTY_CLIENT_USER_AGENT
})
@JsonTypeName("ConversionEventsUserData_anyOf")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class ConversionEventsUserDataAnyOf {
    public static final String JSON_PROPERTY_EM = "em";
    private List<String> em = new ArrayList<>();

    public static final String JSON_PROPERTY_HASHED_MAIDS = "hashed_maids";
    private List<String> hashedMaids = null;

    public static final String JSON_PROPERTY_CLIENT_IP_ADDRESS = "client_ip_address";
    private String clientIpAddress;

    public static final String JSON_PROPERTY_CLIENT_USER_AGENT = "client_user_agent";
    private String clientUserAgent;

    public ConversionEventsUserDataAnyOf(List<String> em) {
        this.em = em;
    }

    public ConversionEventsUserDataAnyOf em(List<String> em) {
        this.em = em;
        return this;
    }

    public ConversionEventsUserDataAnyOf addEmItem(String emItem) {
        this.em.add(emItem);
        return this;
    }

    /**
     * Sha256 hashes of lowercase version of user&#39;s email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
     * @return em
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_EM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getEm() {
        return em;
    }

    @JsonProperty(JSON_PROPERTY_EM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEm(List<String> em) {
        this.em = em;
    }

    public ConversionEventsUserDataAnyOf hashedMaids(List<String> hashedMaids) {
        this.hashedMaids = hashedMaids;
        return this;
    }

    public ConversionEventsUserDataAnyOf addHashedMaidsItem(String hashedMaidsItem) {
        if (this.hashedMaids == null) {
            this.hashedMaids = new ArrayList<>();
        }
        this.hashedMaids.add(hashedMaidsItem);
        return this;
    }

    /**
     * Sha256 hashes of user&#39;s \&quot;Google Advertising IDs\&quot; (GAIDs) or \&quot;Apple&#39;s Identifier for Advertisers\&quot; (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
     * @return hashedMaids
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_HASHED_MAIDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getHashedMaids() {
        return hashedMaids;
    }

    @JsonProperty(JSON_PROPERTY_HASHED_MAIDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHashedMaids(List<String> hashedMaids) {
        this.hashedMaids = hashedMaids;
    }

    public ConversionEventsUserDataAnyOf clientIpAddress(String clientIpAddress) {
        this.clientIpAddress = clientIpAddress;
        return this;
    }

    /**
     * The user&#39;s IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
     * @return clientIpAddress
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CLIENT_IP_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getClientIpAddress() {
        return clientIpAddress;
    }

    @JsonProperty(JSON_PROPERTY_CLIENT_IP_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setClientIpAddress(String clientIpAddress) {
        this.clientIpAddress = clientIpAddress;
    }

    public ConversionEventsUserDataAnyOf clientUserAgent(String clientUserAgent) {
        this.clientUserAgent = clientUserAgent;
        return this;
    }

    /**
     * The user agent string of the user&#39;s web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
     * @return clientUserAgent
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CLIENT_USER_AGENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getClientUserAgent() {
        return clientUserAgent;
    }

    @JsonProperty(JSON_PROPERTY_CLIENT_USER_AGENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setClientUserAgent(String clientUserAgent) {
        this.clientUserAgent = clientUserAgent;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConversionEventsUserDataAnyOf conversionEventsUserDataAnyOf = (ConversionEventsUserDataAnyOf) o;
        return Objects.equals(this.em, conversionEventsUserDataAnyOf.em) &&
            Objects.equals(this.hashedMaids, conversionEventsUserDataAnyOf.hashedMaids) &&
            Objects.equals(this.clientIpAddress, conversionEventsUserDataAnyOf.clientIpAddress) &&
            Objects.equals(this.clientUserAgent, conversionEventsUserDataAnyOf.clientUserAgent);
    }

    @Override
    public int hashCode() {
        return Objects.hash(em, hashedMaids, clientIpAddress, clientUserAgent);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConversionEventsUserDataAnyOf {\n");
        sb.append("    em: ").append(toIndentedString(em)).append("\n");
        sb.append("    hashedMaids: ").append(toIndentedString(hashedMaids)).append("\n");
        sb.append("    clientIpAddress: ").append(toIndentedString(clientIpAddress)).append("\n");
        sb.append("    clientUserAgent: ").append(toIndentedString(clientUserAgent)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

