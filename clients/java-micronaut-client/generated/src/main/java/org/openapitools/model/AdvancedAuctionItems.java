/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.AdvancedAuctionItem;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Response object containing item bid options
 */
@JsonPropertyOrder({
  AdvancedAuctionItems.JSON_PROPERTY_CATALOG_ID,
  AdvancedAuctionItems.JSON_PROPERTY_ITEMS
})
@JsonTypeName("AdvancedAuctionItems")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AdvancedAuctionItems {
    public static final String JSON_PROPERTY_CATALOG_ID = "catalog_id";
    private String catalogId;

    public static final String JSON_PROPERTY_ITEMS = "items";
    private List<AdvancedAuctionItem> items = null;

    public AdvancedAuctionItems() {
    }

    public AdvancedAuctionItems catalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }

    /**
     * Response object of item bid options
     * @return catalogId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCatalogId() {
        return catalogId;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCatalogId(String catalogId) {
        this.catalogId = catalogId;
    }

    public AdvancedAuctionItems items(List<AdvancedAuctionItem> items) {
        this.items = items;
        return this;
    }

    public AdvancedAuctionItems addItemsItem(AdvancedAuctionItem itemsItem) {
        if (this.items == null) {
            this.items = new ArrayList<>();
        }
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Array with item bid options
     * @return items
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<AdvancedAuctionItem> getItems() {
        return items;
    }

    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setItems(List<AdvancedAuctionItem> items) {
        this.items = items;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdvancedAuctionItems advancedAuctionItems = (AdvancedAuctionItems) o;
        return Objects.equals(this.catalogId, advancedAuctionItems.catalogId) &&
            Objects.equals(this.items, advancedAuctionItems.items);
    }

    @Override
    public int hashCode() {
        return Objects.hash(catalogId, items);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdvancedAuctionItems {\n");
        sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

