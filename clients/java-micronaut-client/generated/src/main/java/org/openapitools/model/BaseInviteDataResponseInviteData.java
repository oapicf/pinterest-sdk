/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Metadata for the invite/request.
 */
@JsonPropertyOrder({
  BaseInviteDataResponseInviteData.JSON_PROPERTY_INVITE_EXPIRATION,
  BaseInviteDataResponseInviteData.JSON_PROPERTY_INVITE_STATUS,
  BaseInviteDataResponseInviteData.JSON_PROPERTY_INVITE_TYPE,
  BaseInviteDataResponseInviteData.JSON_PROPERTY_LAST_UPDATED_TIME,
  BaseInviteDataResponseInviteData.JSON_PROPERTY_SENT_AT
})
@JsonTypeName("BaseInviteDataResponse_invite_data")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class BaseInviteDataResponseInviteData {
    public static final String JSON_PROPERTY_INVITE_EXPIRATION = "invite_expiration";
    private Integer inviteExpiration;

    public static final String JSON_PROPERTY_INVITE_STATUS = "invite_status";
    private String inviteStatus;

    public static final String JSON_PROPERTY_INVITE_TYPE = "invite_type";
    private String inviteType;

    public static final String JSON_PROPERTY_LAST_UPDATED_TIME = "last_updated_time";
    private Integer lastUpdatedTime;

    public static final String JSON_PROPERTY_SENT_AT = "sent_at";
    private Integer sentAt;

    public BaseInviteDataResponseInviteData() {
    }

    public BaseInviteDataResponseInviteData inviteExpiration(Integer inviteExpiration) {
        this.inviteExpiration = inviteExpiration;
        return this;
    }

    /**
     * The date and time when the invite/request will expire. Returned in milliseconds.
     * @return inviteExpiration
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INVITE_EXPIRATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getInviteExpiration() {
        return inviteExpiration;
    }

    @JsonProperty(JSON_PROPERTY_INVITE_EXPIRATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInviteExpiration(Integer inviteExpiration) {
        this.inviteExpiration = inviteExpiration;
    }

    public BaseInviteDataResponseInviteData inviteStatus(String inviteStatus) {
        this.inviteStatus = inviteStatus;
        return this;
    }

    /**
     * The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
     * @return inviteStatus
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INVITE_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getInviteStatus() {
        return inviteStatus;
    }

    @JsonProperty(JSON_PROPERTY_INVITE_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInviteStatus(String inviteStatus) {
        this.inviteStatus = inviteStatus;
    }

    public BaseInviteDataResponseInviteData inviteType(String inviteType) {
        this.inviteType = inviteType;
        return this;
    }

    /**
     * The type of invite. &lt;br&gt;&#39;MEMBER_INVITE&#39; is to invite a member to access your business assets. &lt;br&gt;&#39;PARTNER_INVITE&#39; is to invite a partner to access your business assets. &lt;br&gt;&#39;PARTNER_REQUEST&#39; is to request access a partner&#39;s business assets.
     * @return inviteType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INVITE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getInviteType() {
        return inviteType;
    }

    @JsonProperty(JSON_PROPERTY_INVITE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInviteType(String inviteType) {
        this.inviteType = inviteType;
    }

    public BaseInviteDataResponseInviteData lastUpdatedTime(Integer lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }

    /**
     * The date and time the invite/request was last updated. Returned in milliseconds.
     * @return lastUpdatedTime
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getLastUpdatedTime() {
        return lastUpdatedTime;
    }

    @JsonProperty(JSON_PROPERTY_LAST_UPDATED_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLastUpdatedTime(Integer lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
    }

    public BaseInviteDataResponseInviteData sentAt(Integer sentAt) {
        this.sentAt = sentAt;
        return this;
    }

    /**
     * The date and time the invite/request was sent/created. Returned in milliseconds.
     * @return sentAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SENT_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSentAt() {
        return sentAt;
    }

    @JsonProperty(JSON_PROPERTY_SENT_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSentAt(Integer sentAt) {
        this.sentAt = sentAt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BaseInviteDataResponseInviteData baseInviteDataResponseInviteData = (BaseInviteDataResponseInviteData) o;
        return Objects.equals(this.inviteExpiration, baseInviteDataResponseInviteData.inviteExpiration) &&
            Objects.equals(this.inviteStatus, baseInviteDataResponseInviteData.inviteStatus) &&
            Objects.equals(this.inviteType, baseInviteDataResponseInviteData.inviteType) &&
            Objects.equals(this.lastUpdatedTime, baseInviteDataResponseInviteData.lastUpdatedTime) &&
            Objects.equals(this.sentAt, baseInviteDataResponseInviteData.sentAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(inviteExpiration, inviteStatus, inviteType, lastUpdatedTime, sentAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BaseInviteDataResponseInviteData {\n");
        sb.append("    inviteExpiration: ").append(toIndentedString(inviteExpiration)).append("\n");
        sb.append("    inviteStatus: ").append(toIndentedString(inviteStatus)).append("\n");
        sb.append("    inviteType: ").append(toIndentedString(inviteType)).append("\n");
        sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
        sb.append("    sentAt: ").append(toIndentedString(sentAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

