/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.MMMReportingColumn;
import org.openapitools.model.MMMReportingTargetingType;
import org.openapitools.model.TargetingAdvertiserCountry;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * CreateMMMReportRequest
 */
@JsonPropertyOrder({
  CreateMMMReportRequest.JSON_PROPERTY_REPORT_NAME,
  CreateMMMReportRequest.JSON_PROPERTY_START_DATE,
  CreateMMMReportRequest.JSON_PROPERTY_END_DATE,
  CreateMMMReportRequest.JSON_PROPERTY_GRANULARITY,
  CreateMMMReportRequest.JSON_PROPERTY_LEVEL,
  CreateMMMReportRequest.JSON_PROPERTY_TARGETING_TYPES,
  CreateMMMReportRequest.JSON_PROPERTY_COLUMNS,
  CreateMMMReportRequest.JSON_PROPERTY_COUNTRIES
})
@JsonTypeName("CreateMMMReportRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CreateMMMReportRequest {
    public static final String JSON_PROPERTY_REPORT_NAME = "report_name";
    private String reportName;

    public static final String JSON_PROPERTY_START_DATE = "start_date";
    private String startDate;

    public static final String JSON_PROPERTY_END_DATE = "end_date";
    private String endDate;

    /**
     * DAY - metrics are broken down daily.&lt;br&gt; WEEK - metrics are broken down weekly.
     */
    public enum GranularityEnum {
        DAY("DAY"),
        WEEK("WEEK");

        private String value;

        GranularityEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static GranularityEnum fromValue(String value) {
            for (GranularityEnum b : GranularityEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_GRANULARITY = "granularity";
    private GranularityEnum granularity;

    /**
     * Level of the report
     */
    public enum LevelEnum {
        CAMPAIGN_TARGETING("CAMPAIGN_TARGETING"),
        AD_GROUP_TARGETING("AD_GROUP_TARGETING");

        private String value;

        LevelEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static LevelEnum fromValue(String value) {
            for (LevelEnum b : LevelEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_LEVEL = "level";
    private LevelEnum level;

    public static final String JSON_PROPERTY_TARGETING_TYPES = "targeting_types";
    private List<MMMReportingTargetingType> targetingTypes = new ArrayList<>();

    public static final String JSON_PROPERTY_COLUMNS = "columns";
    private List<MMMReportingColumn> columns = new ArrayList<>();

    public static final String JSON_PROPERTY_COUNTRIES = "countries";
    private List<TargetingAdvertiserCountry> countries = null;

    public CreateMMMReportRequest(String reportName, String startDate, String endDate, GranularityEnum granularity, LevelEnum level, List<MMMReportingTargetingType> targetingTypes, List<MMMReportingColumn> columns) {
        this.reportName = reportName;
        this.startDate = startDate;
        this.endDate = endDate;
        this.granularity = granularity;
        this.level = level;
        this.targetingTypes = targetingTypes;
        this.columns = columns;
    }

    public CreateMMMReportRequest reportName(String reportName) {
        this.reportName = reportName;
        return this;
    }

    /**
     * Name of the Marketing Mix Modeling (MMM) report
     * @return reportName
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_REPORT_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getReportName() {
        return reportName;
    }

    @JsonProperty(JSON_PROPERTY_REPORT_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setReportName(String reportName) {
        this.reportName = reportName;
    }

    public CreateMMMReportRequest startDate(String startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * Metric report start date (UTC). Format: YYYY-MM-DD
     * @return startDate
     */
    @NotNull
    @Pattern(regexp="^(\\d{4})-(\\d{2})-(\\d{2})$")
    @JsonProperty(JSON_PROPERTY_START_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getStartDate() {
        return startDate;
    }

    @JsonProperty(JSON_PROPERTY_START_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    public CreateMMMReportRequest endDate(String endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * Metric report end date (UTC). Format: YYYY-MM-DD
     * @return endDate
     */
    @NotNull
    @Pattern(regexp="^(\\d{4})-(\\d{2})-(\\d{2})$")
    @JsonProperty(JSON_PROPERTY_END_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getEndDate() {
        return endDate;
    }

    @JsonProperty(JSON_PROPERTY_END_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    public CreateMMMReportRequest granularity(GranularityEnum granularity) {
        this.granularity = granularity;
        return this;
    }

    /**
     * DAY - metrics are broken down daily.&lt;br&gt; WEEK - metrics are broken down weekly.
     * @return granularity
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_GRANULARITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public GranularityEnum getGranularity() {
        return granularity;
    }

    @JsonProperty(JSON_PROPERTY_GRANULARITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setGranularity(GranularityEnum granularity) {
        this.granularity = granularity;
    }

    public CreateMMMReportRequest level(LevelEnum level) {
        this.level = level;
        return this;
    }

    /**
     * Level of the report
     * @return level
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_LEVEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public LevelEnum getLevel() {
        return level;
    }

    @JsonProperty(JSON_PROPERTY_LEVEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLevel(LevelEnum level) {
        this.level = level;
    }

    public CreateMMMReportRequest targetingTypes(List<MMMReportingTargetingType> targetingTypes) {
        this.targetingTypes = targetingTypes;
        return this;
    }

    public CreateMMMReportRequest addTargetingTypesItem(MMMReportingTargetingType targetingTypesItem) {
        this.targetingTypes.add(targetingTypesItem);
        return this;
    }

    /**
     * List of targeting types
     * @return targetingTypes
     */
    @NotNull
    @Size(min=1, max=5)
    @JsonProperty(JSON_PROPERTY_TARGETING_TYPES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<MMMReportingTargetingType> getTargetingTypes() {
        return targetingTypes;
    }

    @JsonProperty(JSON_PROPERTY_TARGETING_TYPES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTargetingTypes(List<MMMReportingTargetingType> targetingTypes) {
        this.targetingTypes = targetingTypes;
    }

    public CreateMMMReportRequest columns(List<MMMReportingColumn> columns) {
        this.columns = columns;
        return this;
    }

    public CreateMMMReportRequest addColumnsItem(MMMReportingColumn columnsItem) {
        this.columns.add(columnsItem);
        return this;
    }

    /**
     * Metric and entity columns
     * @return columns
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_COLUMNS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<MMMReportingColumn> getColumns() {
        return columns;
    }

    @JsonProperty(JSON_PROPERTY_COLUMNS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setColumns(List<MMMReportingColumn> columns) {
        this.columns = columns;
    }

    public CreateMMMReportRequest countries(List<TargetingAdvertiserCountry> countries) {
        this.countries = countries;
        return this;
    }

    public CreateMMMReportRequest addCountriesItem(TargetingAdvertiserCountry countriesItem) {
        if (this.countries == null) {
            this.countries = new ArrayList<>();
        }
        this.countries.add(countriesItem);
        return this;
    }

    /**
     * A List of countries for filtering
     * @return countries
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_COUNTRIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<TargetingAdvertiserCountry> getCountries() {
        return countries;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountries(List<TargetingAdvertiserCountry> countries) {
        this.countries = countries;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateMMMReportRequest createMMMReportRequest = (CreateMMMReportRequest) o;
        return Objects.equals(this.reportName, createMMMReportRequest.reportName) &&
            Objects.equals(this.startDate, createMMMReportRequest.startDate) &&
            Objects.equals(this.endDate, createMMMReportRequest.endDate) &&
            Objects.equals(this.granularity, createMMMReportRequest.granularity) &&
            Objects.equals(this.level, createMMMReportRequest.level) &&
            Objects.equals(this.targetingTypes, createMMMReportRequest.targetingTypes) &&
            Objects.equals(this.columns, createMMMReportRequest.columns) &&
            Objects.equals(this.countries, createMMMReportRequest.countries);
    }

    @Override
    public int hashCode() {
        return Objects.hash(reportName, startDate, endDate, granularity, level, targetingTypes, columns, countries);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateMMMReportRequest {\n");
        sb.append("    reportName: ").append(toIndentedString(reportName)).append("\n");
        sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
        sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
        sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
        sb.append("    level: ").append(toIndentedString(level)).append("\n");
        sb.append("    targetingTypes: ").append(toIndentedString(targetingTypes)).append("\n");
        sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
        sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

