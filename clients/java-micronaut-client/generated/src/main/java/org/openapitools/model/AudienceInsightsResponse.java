/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.AudienceCategory;
import org.openapitools.model.AudienceDemographics;
import org.openapitools.model.AudienceInsightType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Audience interests and demographics.
 */
@JsonPropertyOrder({
  AudienceInsightsResponse.JSON_PROPERTY_CATEGORIES,
  AudienceInsightsResponse.JSON_PROPERTY_DEMOGRAPHICS,
  AudienceInsightsResponse.JSON_PROPERTY_TYPE,
  AudienceInsightsResponse.JSON_PROPERTY_DATE,
  AudienceInsightsResponse.JSON_PROPERTY_SIZE,
  AudienceInsightsResponse.JSON_PROPERTY_SIZE_IS_UPPER_BOUND
})
@JsonTypeName("AudienceInsightsResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AudienceInsightsResponse {
    public static final String JSON_PROPERTY_CATEGORIES = "categories";
    private List<@Valid AudienceCategory> categories = null;

    public static final String JSON_PROPERTY_DEMOGRAPHICS = "demographics";
    private AudienceDemographics demographics;

    public static final String JSON_PROPERTY_TYPE = "type";
    private AudienceInsightType type = AudienceInsightType.YOUR_TOTAL_AUDIENCE;

    public static final String JSON_PROPERTY_DATE = "date";
    private String date;

    public static final String JSON_PROPERTY_SIZE = "size";
    private Integer size;

    public static final String JSON_PROPERTY_SIZE_IS_UPPER_BOUND = "size_is_upper_bound";
    private Boolean sizeIsUpperBound;

    public AudienceInsightsResponse() {
    }

    public AudienceInsightsResponse categories(List<@Valid AudienceCategory> categories) {
        this.categories = categories;
        return this;
    }

    public AudienceInsightsResponse addCategoriesItem(AudienceCategory categoriesItem) {
        if (this.categories == null) {
            this.categories = new ArrayList<>();
        }
        this.categories.add(categoriesItem);
        return this;
    }

    /**
     * Category interest distribution
     * @return categories
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CATEGORIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid AudienceCategory> getCategories() {
        return categories;
    }

    @JsonProperty(JSON_PROPERTY_CATEGORIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCategories(List<@Valid AudienceCategory> categories) {
        this.categories = categories;
    }

    public AudienceInsightsResponse demographics(AudienceDemographics demographics) {
        this.demographics = demographics;
        return this;
    }

    /**
     * Get demographics
     * @return demographics
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEMOGRAPHICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public AudienceDemographics getDemographics() {
        return demographics;
    }

    @JsonProperty(JSON_PROPERTY_DEMOGRAPHICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDemographics(AudienceDemographics demographics) {
        this.demographics = demographics;
    }

    public AudienceInsightsResponse type(AudienceInsightType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * @return type
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public AudienceInsightType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(AudienceInsightType type) {
        this.type = type;
    }

    public AudienceInsightsResponse date(String date) {
        this.date = date;
        return this;
    }

    /**
     * Generation date
     * @return date
     */
    @Nullable
    @Pattern(regexp="^\\d{4}-\\d{2}-\\d{2}$")
    @JsonProperty(JSON_PROPERTY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDate() {
        return date;
    }

    @JsonProperty(JSON_PROPERTY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDate(String date) {
        this.date = date;
    }

    public AudienceInsightsResponse size(Integer size) {
        this.size = size;
        return this;
    }

    /**
     * Population count.
     * @return size
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SIZE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getSize() {
        return size;
    }

    @JsonProperty(JSON_PROPERTY_SIZE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSize(Integer size) {
        this.size = size;
    }

    public AudienceInsightsResponse sizeIsUpperBound(Boolean sizeIsUpperBound) {
        this.sizeIsUpperBound = sizeIsUpperBound;
        return this;
    }

    /**
     * Indicates whether the audience size has been rounded up to the next highest upper boundary.
     * @return sizeIsUpperBound
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SIZE_IS_UPPER_BOUND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSizeIsUpperBound() {
        return sizeIsUpperBound;
    }

    @JsonProperty(JSON_PROPERTY_SIZE_IS_UPPER_BOUND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSizeIsUpperBound(Boolean sizeIsUpperBound) {
        this.sizeIsUpperBound = sizeIsUpperBound;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AudienceInsightsResponse audienceInsightsResponse = (AudienceInsightsResponse) o;
        return Objects.equals(this.categories, audienceInsightsResponse.categories) &&
            Objects.equals(this.demographics, audienceInsightsResponse.demographics) &&
            Objects.equals(this.type, audienceInsightsResponse.type) &&
            Objects.equals(this.date, audienceInsightsResponse.date) &&
            Objects.equals(this.size, audienceInsightsResponse.size) &&
            Objects.equals(this.sizeIsUpperBound, audienceInsightsResponse.sizeIsUpperBound);
    }

    @Override
    public int hashCode() {
        return Objects.hash(categories, demographics, type, date, size, sizeIsUpperBound);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AudienceInsightsResponse {\n");
        sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
        sb.append("    demographics: ").append(toIndentedString(demographics)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    date: ").append(toIndentedString(date)).append("\n");
        sb.append("    size: ").append(toIndentedString(size)).append("\n");
        sb.append("    sizeIsUpperBound: ").append(toIndentedString(sizeIsUpperBound)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

