/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.UserListType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * CustomerListRequest
 */
@JsonPropertyOrder({
  CustomerListRequest.JSON_PROPERTY_NAME,
  CustomerListRequest.JSON_PROPERTY_RECORDS,
  CustomerListRequest.JSON_PROPERTY_LIST_TYPE,
  CustomerListRequest.JSON_PROPERTY_EXCEPTIONS
})
@JsonTypeName("CustomerListRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CustomerListRequest {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_RECORDS = "records";
    private String records;

    public static final String JSON_PROPERTY_LIST_TYPE = "list_type";
    private UserListType listType = "EMAIL";

    public static final String JSON_PROPERTY_EXCEPTIONS = "exceptions";
    private Object exceptions;

    public CustomerListRequest(String name, String records) {
        this.name = name;
        this.records = records;
    }

    public CustomerListRequest name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Customer list name.
     * @return name
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }

    public CustomerListRequest records(String records) {
        this.records = records;
        return this;
    }

    /**
     * Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
     * @return records
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_RECORDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getRecords() {
        return records;
    }

    @JsonProperty(JSON_PROPERTY_RECORDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRecords(String records) {
        this.records = records;
    }

    public CustomerListRequest listType(UserListType listType) {
        this.listType = listType;
        return this;
    }

    /**
     * Get listType
     * @return listType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_LIST_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UserListType getListType() {
        return listType;
    }

    @JsonProperty(JSON_PROPERTY_LIST_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setListType(UserListType listType) {
        this.listType = listType;
    }

    public CustomerListRequest exceptions(Object exceptions) {
        this.exceptions = exceptions;
        return this;
    }

    /**
     * Customer list errors.
     * @return exceptions
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXCEPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Object getExceptions() {
        return exceptions;
    }

    @JsonProperty(JSON_PROPERTY_EXCEPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExceptions(Object exceptions) {
        this.exceptions = exceptions;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomerListRequest customerListRequest = (CustomerListRequest) o;
        return Objects.equals(this.name, customerListRequest.name) &&
            Objects.equals(this.records, customerListRequest.records) &&
            Objects.equals(this.listType, customerListRequest.listType) &&
            Objects.equals(this.exceptions, customerListRequest.exceptions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, records, listType, exceptions);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CustomerListRequest {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    records: ").append(toIndentedString(records)).append("\n");
        sb.append("    listType: ").append(toIndentedString(listType)).append("\n");
        sb.append("    exceptions: ").append(toIndentedString(exceptions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

