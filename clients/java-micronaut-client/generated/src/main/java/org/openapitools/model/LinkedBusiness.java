/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * LinkedBusiness
 */
@JsonPropertyOrder({
  LinkedBusiness.JSON_PROPERTY_USERNAME,
  LinkedBusiness.JSON_PROPERTY_IMAGE_SMALL_URL,
  LinkedBusiness.JSON_PROPERTY_IMAGE_MEDIUM_URL,
  LinkedBusiness.JSON_PROPERTY_IMAGE_LARGE_URL,
  LinkedBusiness.JSON_PROPERTY_IMAGE_XLARGE_URL
})
@JsonTypeName("LinkedBusiness")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class LinkedBusiness {
    public static final String JSON_PROPERTY_USERNAME = "username";
    private String username;

    public static final String JSON_PROPERTY_IMAGE_SMALL_URL = "image_small_url";
    private String imageSmallUrl;

    public static final String JSON_PROPERTY_IMAGE_MEDIUM_URL = "image_medium_url";
    private String imageMediumUrl;

    public static final String JSON_PROPERTY_IMAGE_LARGE_URL = "image_large_url";
    private String imageLargeUrl;

    public static final String JSON_PROPERTY_IMAGE_XLARGE_URL = "image_xlarge_url";
    private String imageXlargeUrl;

    public LinkedBusiness() {
    }

    public LinkedBusiness username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Username
     * @return username
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUsername() {
        return username;
    }

    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsername(String username) {
        this.username = username;
    }

    public LinkedBusiness imageSmallUrl(String imageSmallUrl) {
        this.imageSmallUrl = imageSmallUrl;
        return this;
    }

    /**
     * image_small_url
     * @return imageSmallUrl
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_IMAGE_SMALL_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getImageSmallUrl() {
        return imageSmallUrl;
    }

    @JsonProperty(JSON_PROPERTY_IMAGE_SMALL_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImageSmallUrl(String imageSmallUrl) {
        this.imageSmallUrl = imageSmallUrl;
    }

    public LinkedBusiness imageMediumUrl(String imageMediumUrl) {
        this.imageMediumUrl = imageMediumUrl;
        return this;
    }

    /**
     * image_medium_url
     * @return imageMediumUrl
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_IMAGE_MEDIUM_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getImageMediumUrl() {
        return imageMediumUrl;
    }

    @JsonProperty(JSON_PROPERTY_IMAGE_MEDIUM_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImageMediumUrl(String imageMediumUrl) {
        this.imageMediumUrl = imageMediumUrl;
    }

    public LinkedBusiness imageLargeUrl(String imageLargeUrl) {
        this.imageLargeUrl = imageLargeUrl;
        return this;
    }

    /**
     * image_large_url
     * @return imageLargeUrl
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_IMAGE_LARGE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getImageLargeUrl() {
        return imageLargeUrl;
    }

    @JsonProperty(JSON_PROPERTY_IMAGE_LARGE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImageLargeUrl(String imageLargeUrl) {
        this.imageLargeUrl = imageLargeUrl;
    }

    public LinkedBusiness imageXlargeUrl(String imageXlargeUrl) {
        this.imageXlargeUrl = imageXlargeUrl;
        return this;
    }

    /**
     * image_xlarge_url
     * @return imageXlargeUrl
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_IMAGE_XLARGE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getImageXlargeUrl() {
        return imageXlargeUrl;
    }

    @JsonProperty(JSON_PROPERTY_IMAGE_XLARGE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImageXlargeUrl(String imageXlargeUrl) {
        this.imageXlargeUrl = imageXlargeUrl;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LinkedBusiness linkedBusiness = (LinkedBusiness) o;
        return Objects.equals(this.username, linkedBusiness.username) &&
            Objects.equals(this.imageSmallUrl, linkedBusiness.imageSmallUrl) &&
            Objects.equals(this.imageMediumUrl, linkedBusiness.imageMediumUrl) &&
            Objects.equals(this.imageLargeUrl, linkedBusiness.imageLargeUrl) &&
            Objects.equals(this.imageXlargeUrl, linkedBusiness.imageXlargeUrl);
    }

    @Override
    public int hashCode() {
        return Objects.hash(username, imageSmallUrl, imageMediumUrl, imageLargeUrl, imageXlargeUrl);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LinkedBusiness {\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("    imageSmallUrl: ").append(toIndentedString(imageSmallUrl)).append("\n");
        sb.append("    imageMediumUrl: ").append(toIndentedString(imageMediumUrl)).append("\n");
        sb.append("    imageLargeUrl: ").append(toIndentedString(imageLargeUrl)).append("\n");
        sb.append("    imageXlargeUrl: ").append(toIndentedString(imageXlargeUrl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

