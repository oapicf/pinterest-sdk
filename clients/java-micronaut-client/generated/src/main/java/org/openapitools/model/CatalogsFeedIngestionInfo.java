/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * CatalogsFeedIngestionInfo
 */
@JsonPropertyOrder({
  CatalogsFeedIngestionInfo.JSON_PROPERTY_I_N_S_T_O_C_K,
  CatalogsFeedIngestionInfo.JSON_PROPERTY_O_U_T_O_F_S_T_O_C_K,
  CatalogsFeedIngestionInfo.JSON_PROPERTY_P_R_E_O_R_D_E_R
})
@JsonTypeName("CatalogsFeedIngestionInfo")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CatalogsFeedIngestionInfo {
    public static final String JSON_PROPERTY_I_N_S_T_O_C_K = "IN_STOCK";
    private Integer IN_STOCK;

    public static final String JSON_PROPERTY_O_U_T_O_F_S_T_O_C_K = "OUT_OF_STOCK";
    private Integer OUT_OF_STOCK;

    public static final String JSON_PROPERTY_P_R_E_O_R_D_E_R = "PREORDER";
    private Integer PREORDER;

    public CatalogsFeedIngestionInfo() {
    }

    public CatalogsFeedIngestionInfo IN_STOCK(Integer IN_STOCK) {
        this.IN_STOCK = IN_STOCK;
        return this;
    }

    /**
     * The number of ingested products that are in stock.
     * @return IN_STOCK
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_I_N_S_T_O_C_K)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getINSTOCK() {
        return IN_STOCK;
    }

    @JsonProperty(JSON_PROPERTY_I_N_S_T_O_C_K)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setINSTOCK(Integer IN_STOCK) {
        this.IN_STOCK = IN_STOCK;
    }

    public CatalogsFeedIngestionInfo OUT_OF_STOCK(Integer OUT_OF_STOCK) {
        this.OUT_OF_STOCK = OUT_OF_STOCK;
        return this;
    }

    /**
     * The number of ingested products that are in out of stock.
     * @return OUT_OF_STOCK
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_O_U_T_O_F_S_T_O_C_K)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getOUTOFSTOCK() {
        return OUT_OF_STOCK;
    }

    @JsonProperty(JSON_PROPERTY_O_U_T_O_F_S_T_O_C_K)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOUTOFSTOCK(Integer OUT_OF_STOCK) {
        this.OUT_OF_STOCK = OUT_OF_STOCK;
    }

    public CatalogsFeedIngestionInfo PREORDER(Integer PREORDER) {
        this.PREORDER = PREORDER;
        return this;
    }

    /**
     * The number of ingested products that are in preorder.
     * @return PREORDER
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_P_R_E_O_R_D_E_R)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getPREORDER() {
        return PREORDER;
    }

    @JsonProperty(JSON_PROPERTY_P_R_E_O_R_D_E_R)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPREORDER(Integer PREORDER) {
        this.PREORDER = PREORDER;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsFeedIngestionInfo catalogsFeedIngestionInfo = (CatalogsFeedIngestionInfo) o;
        return Objects.equals(this.IN_STOCK, catalogsFeedIngestionInfo.IN_STOCK) &&
            Objects.equals(this.OUT_OF_STOCK, catalogsFeedIngestionInfo.OUT_OF_STOCK) &&
            Objects.equals(this.PREORDER, catalogsFeedIngestionInfo.PREORDER);
    }

    @Override
    public int hashCode() {
        return Objects.hash(IN_STOCK, OUT_OF_STOCK, PREORDER);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsFeedIngestionInfo {\n");
        sb.append("    IN_STOCK: ").append(toIndentedString(IN_STOCK)).append("\n");
        sb.append("    OUT_OF_STOCK: ").append(toIndentedString(OUT_OF_STOCK)).append("\n");
        sb.append("    PREORDER: ").append(toIndentedString(PREORDER)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

