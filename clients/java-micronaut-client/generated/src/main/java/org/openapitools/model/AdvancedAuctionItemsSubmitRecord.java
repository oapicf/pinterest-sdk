/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.AdvancedAuctionBidOptions;
import org.openapitools.model.AdvancedAuctionItemsSubmitDeleteRecord;
import org.openapitools.model.AdvancedAuctionItemsSubmitUpsertRecord;
import org.openapitools.model.AdvancedAuctionOperation;
import org.openapitools.model.Country;
import org.openapitools.model.Language;
import org.openapitools.model.UpdateMaskBidOptionField;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Object describing an item bid option operation
 */
@JsonPropertyOrder({
  AdvancedAuctionItemsSubmitRecord.JSON_PROPERTY_OPERATION,
  AdvancedAuctionItemsSubmitRecord.JSON_PROPERTY_ITEM_ID,
  AdvancedAuctionItemsSubmitRecord.JSON_PROPERTY_COUNTRY,
  AdvancedAuctionItemsSubmitRecord.JSON_PROPERTY_LANGUAGE,
  AdvancedAuctionItemsSubmitRecord.JSON_PROPERTY_BID_OPTIONS,
  AdvancedAuctionItemsSubmitRecord.JSON_PROPERTY_UPDATE_MASK
})
@JsonTypeName("AdvancedAuctionItemsSubmitRecord")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@JsonIgnoreProperties(
  value = "operation", // ignore manually set operation, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the operation to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "operation", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = AdvancedAuctionItemsSubmitDeleteRecord.class, name = "DELETE"),
  @JsonSubTypes.Type(value = AdvancedAuctionItemsSubmitUpsertRecord.class, name = "UPSERT"),
})

@Introspected
public class AdvancedAuctionItemsSubmitRecord {
    public static final String JSON_PROPERTY_OPERATION = "operation";
    protected AdvancedAuctionOperation operation;

    public static final String JSON_PROPERTY_ITEM_ID = "item_id";
    private String itemId;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    private Country country;

    public static final String JSON_PROPERTY_LANGUAGE = "language";
    private Language language;

    public static final String JSON_PROPERTY_BID_OPTIONS = "bid_options";
    private AdvancedAuctionBidOptions bidOptions;

    public static final String JSON_PROPERTY_UPDATE_MASK = "update_mask";
    private List<UpdateMaskBidOptionField> updateMask;

    public AdvancedAuctionItemsSubmitRecord(AdvancedAuctionOperation operation, String itemId, Country country, Language language, AdvancedAuctionBidOptions bidOptions, List<UpdateMaskBidOptionField> updateMask) {
        this.operation = operation;
        this.itemId = itemId;
        this.country = country;
        this.language = language;
        this.bidOptions = bidOptions;
        this.updateMask = updateMask;
    }

    public AdvancedAuctionItemsSubmitRecord operation(AdvancedAuctionOperation operation) {
        this.operation = operation;
        return this;
    }

    /**
     * Get operation
     * @return operation
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_OPERATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AdvancedAuctionOperation getOperation() {
        return operation;
    }

    @JsonProperty(JSON_PROPERTY_OPERATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOperation(AdvancedAuctionOperation operation) {
        this.operation = operation;
    }

    public AdvancedAuctionItemsSubmitRecord itemId(String itemId) {
        this.itemId = itemId;
        return this;
    }

    /**
     * The catalog retail item id in the merchant namespace
     * @return itemId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ITEM_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getItemId() {
        return itemId;
    }

    @JsonProperty(JSON_PROPERTY_ITEM_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setItemId(String itemId) {
        this.itemId = itemId;
    }

    public AdvancedAuctionItemsSubmitRecord country(Country country) {
        this.country = country;
        return this;
    }

    /**
     * Get country
     * @return country
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Country getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCountry(Country country) {
        this.country = country;
    }

    public AdvancedAuctionItemsSubmitRecord language(Language language) {
        this.language = language;
        return this;
    }

    /**
     * Get language
     * @return language
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Language getLanguage() {
        return language;
    }

    @JsonProperty(JSON_PROPERTY_LANGUAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLanguage(Language language) {
        this.language = language;
    }

    public AdvancedAuctionItemsSubmitRecord bidOptions(AdvancedAuctionBidOptions bidOptions) {
        this.bidOptions = bidOptions;
        return this;
    }

    /**
     * Get bidOptions
     * @return bidOptions
     */
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_BID_OPTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AdvancedAuctionBidOptions getBidOptions() {
        return bidOptions;
    }

    @JsonProperty(JSON_PROPERTY_BID_OPTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBidOptions(AdvancedAuctionBidOptions bidOptions) {
        this.bidOptions = bidOptions;
    }

    public AdvancedAuctionItemsSubmitRecord updateMask(List<UpdateMaskBidOptionField> updateMask) {
        this.updateMask = updateMask;
        return this;
    }

    public AdvancedAuctionItemsSubmitRecord addUpdateMaskItem(UpdateMaskBidOptionField updateMaskItem) {
        this.updateMask.add(updateMaskItem);
        return this;
    }

    /**
     * The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the &#x60;bid_options&#x60; object in the body will be set to &#x60;null&#x60;. If an item bid option record is being created, fields not specified in the update mask will be initialized to &#x60;null&#x60;.
     * @return updateMask
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPDATE_MASK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<UpdateMaskBidOptionField> getUpdateMask() {
        return updateMask;
    }

    @JsonProperty(JSON_PROPERTY_UPDATE_MASK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUpdateMask(List<UpdateMaskBidOptionField> updateMask) {
        this.updateMask = updateMask;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdvancedAuctionItemsSubmitRecord advancedAuctionItemsSubmitRecord = (AdvancedAuctionItemsSubmitRecord) o;
        return Objects.equals(this.operation, advancedAuctionItemsSubmitRecord.operation) &&
            Objects.equals(this.itemId, advancedAuctionItemsSubmitRecord.itemId) &&
            Objects.equals(this.country, advancedAuctionItemsSubmitRecord.country) &&
            Objects.equals(this.language, advancedAuctionItemsSubmitRecord.language) &&
            Objects.equals(this.bidOptions, advancedAuctionItemsSubmitRecord.bidOptions) &&
            Objects.equals(this.updateMask, advancedAuctionItemsSubmitRecord.updateMask);
    }

    @Override
    public int hashCode() {
        return Objects.hash(operation, itemId, country, language, bidOptions, updateMask);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdvancedAuctionItemsSubmitRecord {\n");
        sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
        sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    language: ").append(toIndentedString(language)).append("\n");
        sb.append("    bidOptions: ").append(toIndentedString(bidOptions)).append("\n");
        sb.append("    updateMask: ").append(toIndentedString(updateMask)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

