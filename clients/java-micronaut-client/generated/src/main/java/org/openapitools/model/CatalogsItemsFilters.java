/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.CatalogsCreativeAssetsItemsFilter;
import org.openapitools.model.CatalogsHotelItemsFilter;
import org.openapitools.model.CatalogsRetailItemsFilter;
import org.openapitools.model.CatalogsType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * CatalogsItemsFilters
 */
@JsonPropertyOrder({
  CatalogsItemsFilters.JSON_PROPERTY_CATALOG_TYPE,
  CatalogsItemsFilters.JSON_PROPERTY_ITEM_IDS,
  CatalogsItemsFilters.JSON_PROPERTY_CATALOG_ID,
  CatalogsItemsFilters.JSON_PROPERTY_HOTEL_IDS,
  CatalogsItemsFilters.JSON_PROPERTY_CREATIVE_ASSETS_IDS
})
@JsonTypeName("CatalogsItemsFilters")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@JsonIgnoreProperties(
  value = "catalog_type", // ignore manually set catalog_type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the catalog_type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "catalog_type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = CatalogsCreativeAssetsItemsFilter.class, name = "CREATIVE_ASSETS"),
  @JsonSubTypes.Type(value = CatalogsHotelItemsFilter.class, name = "HOTEL"),
  @JsonSubTypes.Type(value = CatalogsRetailItemsFilter.class, name = "RETAIL"),
})

@Introspected
public class CatalogsItemsFilters {
    public static final String JSON_PROPERTY_CATALOG_TYPE = "catalog_type";
    protected CatalogsType catalogType;

    public static final String JSON_PROPERTY_ITEM_IDS = "item_ids";
    private List<String> itemIds = new ArrayList<>();

    public static final String JSON_PROPERTY_CATALOG_ID = "catalog_id";
    private String catalogId;

    public static final String JSON_PROPERTY_HOTEL_IDS = "hotel_ids";
    private List<String> hotelIds = new ArrayList<>();

    public static final String JSON_PROPERTY_CREATIVE_ASSETS_IDS = "creative_assets_ids";
    private List<String> creativeAssetsIds = new ArrayList<>();

    public CatalogsItemsFilters(CatalogsType catalogType, List<String> itemIds, List<String> hotelIds, List<String> creativeAssetsIds) {
        this.catalogType = catalogType;
        this.itemIds = itemIds;
        this.hotelIds = hotelIds;
        this.creativeAssetsIds = creativeAssetsIds;
    }

    public CatalogsItemsFilters catalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
        return this;
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsType getCatalogType() {
        return catalogType;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
    }

    public CatalogsItemsFilters itemIds(List<String> itemIds) {
        this.itemIds = itemIds;
        return this;
    }

    public CatalogsItemsFilters addItemIdsItem(String itemIdsItem) {
        this.itemIds.add(itemIdsItem);
        return this;
    }

    /**
     * Get itemIds
     * @return itemIds
     */
    @NotNull
    @Size(min=1, max=100)
    @JsonProperty(JSON_PROPERTY_ITEM_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getItemIds() {
        return itemIds;
    }

    @JsonProperty(JSON_PROPERTY_ITEM_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setItemIds(List<String> itemIds) {
        this.itemIds = itemIds;
    }

    public CatalogsItemsFilters catalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }

    /**
     * Catalog id pertaining to the creative assets item. If not provided, default to oldest creative assets catalog
     * @return catalogId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCatalogId() {
        return catalogId;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCatalogId(String catalogId) {
        this.catalogId = catalogId;
    }

    public CatalogsItemsFilters hotelIds(List<String> hotelIds) {
        this.hotelIds = hotelIds;
        return this;
    }

    public CatalogsItemsFilters addHotelIdsItem(String hotelIdsItem) {
        this.hotelIds.add(hotelIdsItem);
        return this;
    }

    /**
     * Get hotelIds
     * @return hotelIds
     */
    @NotNull
    @Size(min=1, max=100)
    @JsonProperty(JSON_PROPERTY_HOTEL_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getHotelIds() {
        return hotelIds;
    }

    @JsonProperty(JSON_PROPERTY_HOTEL_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHotelIds(List<String> hotelIds) {
        this.hotelIds = hotelIds;
    }

    public CatalogsItemsFilters creativeAssetsIds(List<String> creativeAssetsIds) {
        this.creativeAssetsIds = creativeAssetsIds;
        return this;
    }

    public CatalogsItemsFilters addCreativeAssetsIdsItem(String creativeAssetsIdsItem) {
        this.creativeAssetsIds.add(creativeAssetsIdsItem);
        return this;
    }

    /**
     * Get creativeAssetsIds
     * @return creativeAssetsIds
     */
    @NotNull
    @Size(min=1, max=100)
    @JsonProperty(JSON_PROPERTY_CREATIVE_ASSETS_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getCreativeAssetsIds() {
        return creativeAssetsIds;
    }

    @JsonProperty(JSON_PROPERTY_CREATIVE_ASSETS_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreativeAssetsIds(List<String> creativeAssetsIds) {
        this.creativeAssetsIds = creativeAssetsIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsItemsFilters catalogsItemsFilters = (CatalogsItemsFilters) o;
        return Objects.equals(this.catalogType, catalogsItemsFilters.catalogType) &&
            Objects.equals(this.itemIds, catalogsItemsFilters.itemIds) &&
            Objects.equals(this.catalogId, catalogsItemsFilters.catalogId) &&
            Objects.equals(this.hotelIds, catalogsItemsFilters.hotelIds) &&
            Objects.equals(this.creativeAssetsIds, catalogsItemsFilters.creativeAssetsIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(catalogType, itemIds, catalogId, hotelIds, creativeAssetsIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsItemsFilters {\n");
        sb.append("    catalogType: ").append(toIndentedString(catalogType)).append("\n");
        sb.append("    itemIds: ").append(toIndentedString(itemIds)).append("\n");
        sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
        sb.append("    hotelIds: ").append(toIndentedString(hotelIds)).append("\n");
        sb.append("    creativeAssetsIds: ").append(toIndentedString(creativeAssetsIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

