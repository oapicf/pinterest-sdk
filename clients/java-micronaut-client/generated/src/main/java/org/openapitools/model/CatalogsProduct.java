/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import org.openapitools.model.CatalogsCreativeAssetsProduct;
import org.openapitools.model.CatalogsCreativeAssetsProductMetadata;
import org.openapitools.model.CatalogsHotelProduct;
import org.openapitools.model.CatalogsRetailProduct;
import org.openapitools.model.CatalogsType;
import org.openapitools.model.Pin;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Catalogs product for all verticals
 */
@JsonPropertyOrder({
  CatalogsProduct.JSON_PROPERTY_CATALOG_TYPE,
  CatalogsProduct.JSON_PROPERTY_METADATA,
  CatalogsProduct.JSON_PROPERTY_PIN
})
@JsonTypeName("CatalogsProduct")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@JsonIgnoreProperties(
  value = "catalog_type", // ignore manually set catalog_type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the catalog_type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "catalog_type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = CatalogsCreativeAssetsProduct.class, name = "CREATIVE_ASSETS"),
  @JsonSubTypes.Type(value = CatalogsHotelProduct.class, name = "HOTEL"),
  @JsonSubTypes.Type(value = CatalogsRetailProduct.class, name = "RETAIL"),
})

@Introspected
public class CatalogsProduct {
    public static final String JSON_PROPERTY_CATALOG_TYPE = "catalog_type";
    protected CatalogsType catalogType;

    public static final String JSON_PROPERTY_METADATA = "metadata";
    private CatalogsCreativeAssetsProductMetadata metadata;

    public static final String JSON_PROPERTY_PIN = "pin";
    private Pin pin;

    public CatalogsProduct(CatalogsType catalogType, CatalogsCreativeAssetsProductMetadata metadata, Pin pin) {
        this.catalogType = catalogType;
        this.metadata = metadata;
        this.pin = pin;
    }

    public CatalogsProduct catalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
        return this;
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsType getCatalogType() {
        return catalogType;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
    }

    public CatalogsProduct metadata(CatalogsCreativeAssetsProductMetadata metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get metadata
     * @return metadata
     */
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsCreativeAssetsProductMetadata getMetadata() {
        return metadata;
    }

    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMetadata(CatalogsCreativeAssetsProductMetadata metadata) {
        this.metadata = metadata;
    }

    public CatalogsProduct pin(Pin pin) {
        this.pin = pin;
        return this;
    }

    /**
     * Get pin
     * @return pin
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_PIN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Pin getPin() {
        return pin;
    }

    @JsonProperty(JSON_PROPERTY_PIN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPin(Pin pin) {
        this.pin = pin;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsProduct catalogsProduct = (CatalogsProduct) o;
        return Objects.equals(this.catalogType, catalogsProduct.catalogType) &&
            Objects.equals(this.metadata, catalogsProduct.metadata) &&
            Objects.equals(this.pin, catalogsProduct.pin);
    }

    @Override
    public int hashCode() {
        return Objects.hash(catalogType, metadata, pin);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsProduct {\n");
        sb.append("    catalogType: ").append(toIndentedString(catalogType)).append("\n");
        sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
        sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

