/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.OperationType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * SharedAudience
 */
@JsonPropertyOrder({
  SharedAudience.JSON_PROPERTY_AUDIENCE_ID,
  SharedAudience.JSON_PROPERTY_OPERATION_TYPE,
  SharedAudience.JSON_PROPERTY_RECIPIENT_ACCOUNT_IDS
})
@JsonTypeName("SharedAudience")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class SharedAudience {
    public static final String JSON_PROPERTY_AUDIENCE_ID = "audience_id";
    private String audienceId;

    public static final String JSON_PROPERTY_OPERATION_TYPE = "operation_type";
    private OperationType operationType;

    public static final String JSON_PROPERTY_RECIPIENT_ACCOUNT_IDS = "recipient_account_ids";
    private List<@Pattern(regexp = "^\\d+$")String> recipientAccountIds = new ArrayList<>();

    public SharedAudience(String audienceId, OperationType operationType, List<@Pattern(regexp = "^\\d+$")String> recipientAccountIds) {
        this.audienceId = audienceId;
        this.operationType = operationType;
        this.recipientAccountIds = recipientAccountIds;
    }

    public SharedAudience audienceId(String audienceId) {
        this.audienceId = audienceId;
        return this;
    }

    /**
     * Unique identifier of an audience
     * @return audienceId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @JsonProperty(JSON_PROPERTY_AUDIENCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAudienceId() {
        return audienceId;
    }

    @JsonProperty(JSON_PROPERTY_AUDIENCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAudienceId(String audienceId) {
        this.audienceId = audienceId;
    }

    public SharedAudience operationType(OperationType operationType) {
        this.operationType = operationType;
        return this;
    }

    /**
     * Get operationType
     * @return operationType
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OperationType getOperationType() {
        return operationType;
    }

    @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOperationType(OperationType operationType) {
        this.operationType = operationType;
    }

    public SharedAudience recipientAccountIds(List<@Pattern(regexp = "^\\d+$")String> recipientAccountIds) {
        this.recipientAccountIds = recipientAccountIds;
        return this;
    }

    public SharedAudience addRecipientAccountIdsItem(String recipientAccountIdsItem) {
        this.recipientAccountIds.add(recipientAccountIdsItem);
        return this;
    }

    /**
     * List of ad account IDs to share with or revoke from.
     * @return recipientAccountIds
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_RECIPIENT_ACCOUNT_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Pattern(regexp = "^\\d+$")String> getRecipientAccountIds() {
        return recipientAccountIds;
    }

    @JsonProperty(JSON_PROPERTY_RECIPIENT_ACCOUNT_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRecipientAccountIds(List<@Pattern(regexp = "^\\d+$")String> recipientAccountIds) {
        this.recipientAccountIds = recipientAccountIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SharedAudience sharedAudience = (SharedAudience) o;
        return Objects.equals(this.audienceId, sharedAudience.audienceId) &&
            Objects.equals(this.operationType, sharedAudience.operationType) &&
            Objects.equals(this.recipientAccountIds, sharedAudience.recipientAccountIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(audienceId, operationType, recipientAccountIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SharedAudience {\n");
        sb.append("    audienceId: ").append(toIndentedString(audienceId)).append("\n");
        sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
        sb.append("    recipientAccountIds: ").append(toIndentedString(recipientAccountIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

