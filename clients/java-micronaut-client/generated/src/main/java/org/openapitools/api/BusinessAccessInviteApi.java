/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import org.openapitools.model.AuthRespondInvitesBody;
import org.openapitools.model.CancelInvitesBody;
import org.openapitools.model.CreateAssetAccessRequestBody;
import org.openapitools.model.CreateAssetAccessRequestResponse;
import org.openapitools.model.CreateAssetInvitesRequest;
import org.openapitools.model.CreateInvitesResultsResponseArray;
import org.openapitools.model.CreateMembershipOrPartnershipInvitesBody;
import org.openapitools.model.DeleteInvitesResultsResponseArray;
import org.openapitools.model.Error;
import org.openapitools.model.GetInvites200Response;
import org.openapitools.model.InviteType;
import org.openapitools.model.RespondToInvitesResponseArray;
import org.openapitools.model.UpdateInvitesResultsResponseArray;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Client("${openapi-micronaut-client-base-path}")
public interface BusinessAccessInviteApi {
    /**
     * Create a request to access an existing partner&#39;s assets.
     * Create a request to access an existing partner&#39;s assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
     *
     * @param businessId Unique identifier of the requesting business. (required)
     * @param createAssetAccessRequestBody  (required)
     * @return CreateAssetAccessRequestResponse
     */
    @Post(uri="/businesses/{business_id}/requests/assets/access")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<CreateAssetAccessRequestResponse> assetAccessRequestsCreate(
        @PathVariable(name="business_id") @NotNull @Pattern(regexp="^\\d+$") @Size(min=1, max=20) String businessId, 
        @Body @NotNull @Valid CreateAssetAccessRequestBody createAssetAccessRequestBody
    );

    /**
     * Cancel invites/requests
     * Cancel membership/partnership invites and/or requests.
     *
     * @param businessId Business id (required)
     * @param cancelInvitesBody A list with invite ids (required)
     * @return DeleteInvitesResultsResponseArray
     */
    @Delete(uri="/businesses/{business_id}/invites")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<DeleteInvitesResultsResponseArray> cancelInvitesOrRequests(
        @PathVariable(name="business_id") @NotNull @Pattern(regexp="^\\d+$") @Size(min=1, max=20) String businessId, 
        @Body @NotNull @Valid CancelInvitesBody cancelInvitesBody
    );

    /**
     * Update invite/request with an asset permission
     * Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner&#39;s asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \&quot;Create a request to access an existing partner&#39;s assets\&quot; to request access to your   partner&#39;s assets.     - invite_type&#x3D;\&quot;PARTNER_REQUEST\&quot; - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \&quot;Assign/Update partner asset permissions\&quot; to assign a partner access to   new assets.     - invite_type&#x3D;\&quot;PARTNER_INVITE\&quot; - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \&quot;Assign/Update member asset permissions\&quot; to assign a member access to new   assets.     - invite_type&#x3D;\&quot;MEMBER_INVITE\&quot;  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
     *
     * @param businessId Unique identifier of the requesting business. (required)
     * @param createAssetInvitesRequest A list of invites/requests together with the asset permissions to be assigned to the invite/request.  (required)
     * @return UpdateInvitesResultsResponseArray
     */
    @Post(uri="/businesses/{business_id}/invites/assets/access")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<UpdateInvitesResultsResponseArray> createAssetInvites(
        @PathVariable(name="business_id") @NotNull @Pattern(regexp="^\\d+$") @Size(min=1, max=20) String businessId, 
        @Body @NotNull @Valid CreateAssetInvitesRequest createAssetInvitesRequest
    );

    /**
     * Create invites or requests
     * Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type&#x3D;\&quot;MEMBER_INVITE\&quot;     - business_role&#x3D;\&quot;EMPLOYEE\&quot; OR business_role&#x3D;\&quot;BIZ_ADMIN\&quot; (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type&#x3D;\&quot;PARTNER_INVITE\&quot;     - business_role&#x3D;\&quot;PARTNER\&quot;     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type&#x3D;\&quot;PARTNER_REQUEST\&quot;     - business_role&#x3D;\&quot;PARTNER\&quot;     - partners
     *
     * @param businessId Business id (required)
     * @param createMembershipOrPartnershipInvitesBody An object with the properties: invite_type, partners, members, business_role (required)
     * @return CreateInvitesResultsResponseArray
     */
    @Post(uri="/businesses/{business_id}/invites")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<CreateInvitesResultsResponseArray> createMembershipOrPartnershipInvites(
        @PathVariable(name="business_id") @NotNull @Pattern(regexp="^\\d+$") @Size(min=1, max=20) String businessId, 
        @Body @NotNull @Valid CreateMembershipOrPartnershipInvitesBody createMembershipOrPartnershipInvitesBody
    );

    /**
     * Get invites/requests
     * Get the membership/partnership invites and/or requests for the authorized user.
     *
     * @param businessId Unique identifier of the requesting business. (required)
     * @param isMember A boolean field to indicate whether the invite is to create a partnership or a membership. (optional, default to true)
     * @param inviteStatus A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned. (optional)
     * @param inviteType Invite type to filter invites by. Only invites of the specified type will be returned. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return GetInvites200Response
     */
    @Get(uri="/businesses/{business_id}/invites")
    @Consumes({"application/json"})
    Mono<GetInvites200Response> getInvites(
        @PathVariable(name="business_id") @NotNull @Pattern(regexp="^\\d+$") @Size(min=1, max=20) String businessId, 
        @QueryValue(value="is_member", defaultValue="true") @Nullable Boolean isMember, 
        @QueryValue(value="invite_status") @Nullable @Size(min=1) List<String> inviteStatus, 
        @QueryValue(value="invite_type") @Nullable InviteType inviteType, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize
    );

    /**
     * Accept or decline an invite/request
     * Accept or decline invites or requests.
     *
     * @param authRespondInvitesBody  (required)
     * @return RespondToInvitesResponseArray
     */
    @Patch(uri="/businesses/invites")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<RespondToInvitesResponseArray> respondBusinessAccessInvites(
        @Body @NotNull @Valid AuthRespondInvitesBody authRespondInvitesBody
    );

}
