/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.CatalogsProductGroupFiltersRequest;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Request object for creating a product group.
 */
@JsonPropertyOrder({
  CatalogsProductGroupCreateRequest.JSON_PROPERTY_NAME,
  CatalogsProductGroupCreateRequest.JSON_PROPERTY_DESCRIPTION,
  CatalogsProductGroupCreateRequest.JSON_PROPERTY_IS_FEATURED,
  CatalogsProductGroupCreateRequest.JSON_PROPERTY_FILTERS,
  CatalogsProductGroupCreateRequest.JSON_PROPERTY_FEED_ID
})
@JsonTypeName("CatalogsProductGroupCreateRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CatalogsProductGroupCreateRequest {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_IS_FEATURED = "is_featured";
    private Boolean isFeatured = false;

    public static final String JSON_PROPERTY_FILTERS = "filters";
    private CatalogsProductGroupFiltersRequest filters;

    public static final String JSON_PROPERTY_FEED_ID = "feed_id";
    private String feedId;

    public CatalogsProductGroupCreateRequest(String name, CatalogsProductGroupFiltersRequest filters, String feedId) {
        this.name = name;
        this.filters = filters;
        this.feedId = feedId;
    }

    public CatalogsProductGroupCreateRequest name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }

    public CatalogsProductGroupCreateRequest description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * @return description
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public CatalogsProductGroupCreateRequest isFeatured(Boolean isFeatured) {
        this.isFeatured = isFeatured;
        return this;
    }

    /**
     * boolean indicator of whether the product group is being featured or not
     * @return isFeatured
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_IS_FEATURED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIsFeatured() {
        return isFeatured;
    }

    @JsonProperty(JSON_PROPERTY_IS_FEATURED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsFeatured(Boolean isFeatured) {
        this.isFeatured = isFeatured;
    }

    public CatalogsProductGroupCreateRequest filters(CatalogsProductGroupFiltersRequest filters) {
        this.filters = filters;
        return this;
    }

    /**
     * Get filters
     * @return filters
     */
    @Valid
    @NotNull
    @JsonProperty(JSON_PROPERTY_FILTERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsProductGroupFiltersRequest getFilters() {
        return filters;
    }

    @JsonProperty(JSON_PROPERTY_FILTERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFilters(CatalogsProductGroupFiltersRequest filters) {
        this.filters = filters;
    }

    public CatalogsProductGroupCreateRequest feedId(String feedId) {
        this.feedId = feedId;
        return this;
    }

    /**
     * Catalog Feed id pertaining to the catalog product group.
     * @return feedId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @JsonProperty(JSON_PROPERTY_FEED_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getFeedId() {
        return feedId;
    }

    @JsonProperty(JSON_PROPERTY_FEED_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFeedId(String feedId) {
        this.feedId = feedId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsProductGroupCreateRequest catalogsProductGroupCreateRequest = (CatalogsProductGroupCreateRequest) o;
        return Objects.equals(this.name, catalogsProductGroupCreateRequest.name) &&
            Objects.equals(this.description, catalogsProductGroupCreateRequest.description) &&
            Objects.equals(this.isFeatured, catalogsProductGroupCreateRequest.isFeatured) &&
            Objects.equals(this.filters, catalogsProductGroupCreateRequest.filters) &&
            Objects.equals(this.feedId, catalogsProductGroupCreateRequest.feedId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, description, isFeatured, filters, feedId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsProductGroupCreateRequest {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    isFeatured: ").append(toIndentedString(isFeatured)).append("\n");
        sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
        sb.append("    feedId: ").append(toIndentedString(feedId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

