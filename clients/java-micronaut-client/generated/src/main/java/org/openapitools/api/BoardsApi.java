/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import org.openapitools.model.Board;
import org.openapitools.model.BoardSection;
import org.openapitools.model.BoardSectionsList200Response;
import org.openapitools.model.BoardUpdate;
import org.openapitools.model.BoardsList200Response;
import org.openapitools.model.BoardsListPins200Response;
import org.openapitools.model.Error;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Client("${openapi-micronaut-client-base-path}")
public interface BoardsApi {
    /**
     * Create board section
     * Create a board section on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param boardSection Create a board section. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return BoardSection
     */
    @Post(uri="/boards/{board_id}/sections")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<BoardSection> boardSectionsCreate(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @Body @NotNull @Valid BoardSection boardSection, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Delete board section
     * Delete a board section on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param sectionId Unique identifier of a board section. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     */
    @Delete(uri="/boards/{board_id}/sections/{section_id}")
    @Consumes({"application/json"})
    Mono<Void> boardSectionsDelete(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @PathVariable(name="section_id") @NotNull @Pattern(regexp="^\\d+$") String sectionId, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * List board sections
     * Get a list of all board sections from a board owned by the \&quot;operation user_account\&quot; - or a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return BoardSectionsList200Response
     */
    @Get(uri="/boards/{board_id}/sections")
    @Consumes({"application/json"})
    Mono<BoardSectionsList200Response> boardSectionsList(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize
    );

    /**
     * List Pins on board section
     * Get a list of the Pins on a board section of a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param sectionId Unique identifier of a board section. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return BoardsListPins200Response
     */
    @Get(uri="/boards/{board_id}/sections/{section_id}/pins")
    @Consumes({"application/json"})
    Mono<BoardsListPins200Response> boardSectionsListPins(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @PathVariable(name="section_id") @NotNull @Pattern(regexp="^\\d+$") String sectionId, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize
    );

    /**
     * Update board section
     * Update a board section on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param sectionId Unique identifier of a board section. (required)
     * @param boardSection Update a board section. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return BoardSection
     */
    @Patch(uri="/boards/{board_id}/sections/{section_id}")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<BoardSection> boardSectionsUpdate(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @PathVariable(name="section_id") @NotNull @Pattern(regexp="^\\d+$") String sectionId, 
        @Body @NotNull @Valid BoardSection boardSection, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Create board
     * Create a board owned by the \&quot;operation user_account\&quot;. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param board Create a board using a single board json object. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Board
     */
    @Post(uri="/boards")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<Board> boardsCreate(
        @Body @NotNull @Valid Board board, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Delete board
     * Delete a board owned by the \&quot;operation user_account\&quot;. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     */
    @Delete(uri="/boards/{board_id}")
    @Consumes({"application/json"})
    Mono<Void> boardsDelete(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * Get board
     * Get a board owned by the operation user_account - or a group board that has been shared with this account. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Board
     */
    @Get(uri="/boards/{board_id}")
    @Consumes({"application/json"})
    Mono<Board> boardsGet(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

    /**
     * List boards
     * Get a list of the boards owned by the \&quot;operation user_account\&quot; + group boards where this account is a collaborator Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. Optional: Specify a privacy type (public, protected, or secret) to indicate which boards to return. - If no privacy is specified, all boards that can be returned (based on the scopes of the token and ad_account role if applicable) will be returned.
     *
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param privacy Privacy setting for a board. (optional)
     * @return BoardsList200Response
     */
    @Get(uri="/boards")
    @Consumes({"application/json"})
    Mono<BoardsList200Response> boardsList(
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize, 
        @QueryValue(value="privacy") @Nullable String privacy
    );

    /**
     * List Pins on board
     * Get a list of the Pins on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param creativeTypes Pin creative types filter. &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SHOP_THE_PIN has been deprecated. Please use COLLECTION instead. (optional)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @param pinMetrics Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     * @return BoardsListPins200Response
     */
    @Get(uri="/boards/{board_id}/pins")
    @Consumes({"application/json"})
    Mono<BoardsListPins200Response> boardsListPins(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @QueryValue(value="bookmark") @Nullable String bookmark, 
        @QueryValue(value="page_size", defaultValue="25") @Nullable @Min(1) @Max(250) Integer pageSize, 
        @QueryValue(value="creative_types") @Nullable List<String> creativeTypes, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId, 
        @QueryValue(value="pin_metrics", defaultValue="false") @Nullable Boolean pinMetrics
    );

    /**
     * Update board
     * Update a board owned by the \&quot;operating user_account\&quot;. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.
     *
     * @param boardId Unique identifier of a board. (required)
     * @param boardUpdate Update a board. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Board
     */
    @Patch(uri="/boards/{board_id}")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<Board> boardsUpdate(
        @PathVariable(name="board_id") @NotNull @Pattern(regexp="^\\d+$") String boardId, 
        @Body @NotNull @Valid BoardUpdate boardUpdate, 
        @QueryValue(value="ad_account_id") @Nullable @Pattern(regexp="^\\d+$") @Size(max=18) String adAccountId
    );

}
