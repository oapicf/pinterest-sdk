/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * AdPreviewCreateFromImage
 */
@JsonPropertyOrder({
  AdPreviewCreateFromImage.JSON_PROPERTY_IMAGE_URL,
  AdPreviewCreateFromImage.JSON_PROPERTY_TITLE
})
@JsonTypeName("AdPreviewCreateFromImage")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AdPreviewCreateFromImage {
    public static final String JSON_PROPERTY_IMAGE_URL = "image_url";
    private String imageUrl;

    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public AdPreviewCreateFromImage(String imageUrl, String title) {
        this.imageUrl = imageUrl;
        this.title = title;
    }

    public AdPreviewCreateFromImage imageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }

    /**
     * Image URL.
     * @return imageUrl
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_IMAGE_URL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getImageUrl() {
        return imageUrl;
    }

    @JsonProperty(JSON_PROPERTY_IMAGE_URL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    public AdPreviewCreateFromImage title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Title displayed below ad.
     * @return title
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getTitle() {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTitle(String title) {
        this.title = title;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdPreviewCreateFromImage adPreviewCreateFromImage = (AdPreviewCreateFromImage) o;
        return Objects.equals(this.imageUrl, adPreviewCreateFromImage.imageUrl) &&
            Objects.equals(this.title, adPreviewCreateFromImage.title);
    }

    @Override
    public int hashCode() {
        return Objects.hash(imageUrl, title);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdPreviewCreateFromImage {\n");
        sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

