/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * OptimizationGoalMetadataConversionTagV3GoalMetadata
 */
@JsonPropertyOrder({
  OptimizationGoalMetadataConversionTagV3GoalMetadata.JSON_PROPERTY_ATTRIBUTION_WINDOWS,
  OptimizationGoalMetadataConversionTagV3GoalMetadata.JSON_PROPERTY_CONVERSION_EVENT,
  OptimizationGoalMetadataConversionTagV3GoalMetadata.JSON_PROPERTY_CONVERSION_TAG_ID,
  OptimizationGoalMetadataConversionTagV3GoalMetadata.JSON_PROPERTY_CPA_GOAL_VALUE_IN_MICRO_CURRENCY,
  OptimizationGoalMetadataConversionTagV3GoalMetadata.JSON_PROPERTY_IS_ROAS_OPTIMIZED,
  OptimizationGoalMetadataConversionTagV3GoalMetadata.JSON_PROPERTY_LEARNING_MODE_TYPE
})
@JsonTypeName("OptimizationGoalMetadata_conversion_tag_v3_goal_metadata")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class OptimizationGoalMetadataConversionTagV3GoalMetadata {
    public static final String JSON_PROPERTY_ATTRIBUTION_WINDOWS = "attribution_windows";
    private OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows attributionWindows;

    /**
     * Gets or Sets conversionEvent
     */
    public enum ConversionEventEnum {
        PAGE_VISIT("PAGE_VISIT"),
        SIGNUP("SIGNUP"),
        CHECKOUT("CHECKOUT"),
        CUSTOM("CUSTOM"),
        VIEW_CATEGORY("VIEW_CATEGORY"),
        SEARCH("SEARCH"),
        ADD_TO_CART("ADD_TO_CART"),
        WATCH_VIDEO("WATCH_VIDEO"),
        LEAD("LEAD"),
        APP_INSTALL("APP_INSTALL");

        private String value;

        ConversionEventEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ConversionEventEnum fromValue(String value) {
            for (ConversionEventEnum b : ConversionEventEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_CONVERSION_EVENT = "conversion_event";
    private ConversionEventEnum conversionEvent;

    public static final String JSON_PROPERTY_CONVERSION_TAG_ID = "conversion_tag_id";
    private String conversionTagId;

    public static final String JSON_PROPERTY_CPA_GOAL_VALUE_IN_MICRO_CURRENCY = "cpa_goal_value_in_micro_currency";
    private String cpaGoalValueInMicroCurrency;

    public static final String JSON_PROPERTY_IS_ROAS_OPTIMIZED = "is_roas_optimized";
    private Boolean isRoasOptimized;

    /**
     * Conversion learning model type
     */
    public enum LearningModeTypeEnum {
        NOT_ACTIVE("NOT_ACTIVE"),
        ACTIVE("ACTIVE");

        private String value;

        LearningModeTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static LearningModeTypeEnum fromValue(String value) {
            for (LearningModeTypeEnum b : LearningModeTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            return null;
        }
    }
    public static final String JSON_PROPERTY_LEARNING_MODE_TYPE = "learning_mode_type";
    private LearningModeTypeEnum learningModeType;

    public OptimizationGoalMetadataConversionTagV3GoalMetadata() {
    }

    public OptimizationGoalMetadataConversionTagV3GoalMetadata attributionWindows(OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows attributionWindows) {
        this.attributionWindows = attributionWindows;
        return this;
    }

    /**
     * Get attributionWindows
     * @return attributionWindows
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_ATTRIBUTION_WINDOWS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows getAttributionWindows() {
        return attributionWindows;
    }

    @JsonProperty(JSON_PROPERTY_ATTRIBUTION_WINDOWS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAttributionWindows(OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows attributionWindows) {
        this.attributionWindows = attributionWindows;
    }

    public OptimizationGoalMetadataConversionTagV3GoalMetadata conversionEvent(ConversionEventEnum conversionEvent) {
        this.conversionEvent = conversionEvent;
        return this;
    }

    /**
     * Get conversionEvent
     * @return conversionEvent
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CONVERSION_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ConversionEventEnum getConversionEvent() {
        return conversionEvent;
    }

    @JsonProperty(JSON_PROPERTY_CONVERSION_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConversionEvent(ConversionEventEnum conversionEvent) {
        this.conversionEvent = conversionEvent;
    }

    public OptimizationGoalMetadataConversionTagV3GoalMetadata conversionTagId(String conversionTagId) {
        this.conversionTagId = conversionTagId;
        return this;
    }

    /**
     * Get conversionTagId
     * @return conversionTagId
     */
    @Nullable
    @Pattern(regexp="^[0-9]+$")
    @JsonProperty(JSON_PROPERTY_CONVERSION_TAG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getConversionTagId() {
        return conversionTagId;
    }

    @JsonProperty(JSON_PROPERTY_CONVERSION_TAG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConversionTagId(String conversionTagId) {
        this.conversionTagId = conversionTagId;
    }

    public OptimizationGoalMetadataConversionTagV3GoalMetadata cpaGoalValueInMicroCurrency(String cpaGoalValueInMicroCurrency) {
        this.cpaGoalValueInMicroCurrency = cpaGoalValueInMicroCurrency;
        return this;
    }

    /**
     * Get cpaGoalValueInMicroCurrency
     * @return cpaGoalValueInMicroCurrency
     */
    @Nullable
    @Pattern(regexp="^[0-9]+$")
    @JsonProperty(JSON_PROPERTY_CPA_GOAL_VALUE_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCpaGoalValueInMicroCurrency() {
        return cpaGoalValueInMicroCurrency;
    }

    @JsonProperty(JSON_PROPERTY_CPA_GOAL_VALUE_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCpaGoalValueInMicroCurrency(String cpaGoalValueInMicroCurrency) {
        this.cpaGoalValueInMicroCurrency = cpaGoalValueInMicroCurrency;
    }

    public OptimizationGoalMetadataConversionTagV3GoalMetadata isRoasOptimized(Boolean isRoasOptimized) {
        this.isRoasOptimized = isRoasOptimized;
        return this;
    }

    /**
     * ROAS optimization is not supported
     * @return isRoasOptimized
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_IS_ROAS_OPTIMIZED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIsRoasOptimized() {
        return isRoasOptimized;
    }

    @JsonProperty(JSON_PROPERTY_IS_ROAS_OPTIMIZED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsRoasOptimized(Boolean isRoasOptimized) {
        this.isRoasOptimized = isRoasOptimized;
    }

    public OptimizationGoalMetadataConversionTagV3GoalMetadata learningModeType(LearningModeTypeEnum learningModeType) {
        this.learningModeType = learningModeType;
        return this;
    }

    /**
     * Conversion learning model type
     * @return learningModeType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_LEARNING_MODE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public LearningModeTypeEnum getLearningModeType() {
        return learningModeType;
    }

    @JsonProperty(JSON_PROPERTY_LEARNING_MODE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLearningModeType(LearningModeTypeEnum learningModeType) {
        this.learningModeType = learningModeType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OptimizationGoalMetadataConversionTagV3GoalMetadata optimizationGoalMetadataConversionTagV3GoalMetadata = (OptimizationGoalMetadataConversionTagV3GoalMetadata) o;
        return Objects.equals(this.attributionWindows, optimizationGoalMetadataConversionTagV3GoalMetadata.attributionWindows) &&
            Objects.equals(this.conversionEvent, optimizationGoalMetadataConversionTagV3GoalMetadata.conversionEvent) &&
            Objects.equals(this.conversionTagId, optimizationGoalMetadataConversionTagV3GoalMetadata.conversionTagId) &&
            Objects.equals(this.cpaGoalValueInMicroCurrency, optimizationGoalMetadataConversionTagV3GoalMetadata.cpaGoalValueInMicroCurrency) &&
            Objects.equals(this.isRoasOptimized, optimizationGoalMetadataConversionTagV3GoalMetadata.isRoasOptimized) &&
            Objects.equals(this.learningModeType, optimizationGoalMetadataConversionTagV3GoalMetadata.learningModeType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(attributionWindows, conversionEvent, conversionTagId, cpaGoalValueInMicroCurrency, isRoasOptimized, learningModeType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OptimizationGoalMetadataConversionTagV3GoalMetadata {\n");
        sb.append("    attributionWindows: ").append(toIndentedString(attributionWindows)).append("\n");
        sb.append("    conversionEvent: ").append(toIndentedString(conversionEvent)).append("\n");
        sb.append("    conversionTagId: ").append(toIndentedString(conversionTagId)).append("\n");
        sb.append("    cpaGoalValueInMicroCurrency: ").append(toIndentedString(cpaGoalValueInMicroCurrency)).append("\n");
        sb.append("    isRoasOptimized: ").append(toIndentedString(isRoasOptimized)).append("\n");
        sb.append("    learningModeType: ").append(toIndentedString(learningModeType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

