/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * AdAccountCreateSubscriptionResponse
 */
@JsonPropertyOrder({
  AdAccountCreateSubscriptionResponse.JSON_PROPERTY_ID,
  AdAccountCreateSubscriptionResponse.JSON_PROPERTY_CRYPTOGRAPHIC_KEY,
  AdAccountCreateSubscriptionResponse.JSON_PROPERTY_CRYPTOGRAPHIC_ALGORITHM,
  AdAccountCreateSubscriptionResponse.JSON_PROPERTY_CREATED_TIME
})
@JsonTypeName("AdAccountCreateSubscriptionResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AdAccountCreateSubscriptionResponse {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_CRYPTOGRAPHIC_KEY = "cryptographic_key";
    private String cryptographicKey;

    public static final String JSON_PROPERTY_CRYPTOGRAPHIC_ALGORITHM = "cryptographic_algorithm";
    private String cryptographicAlgorithm;

    public static final String JSON_PROPERTY_CREATED_TIME = "created_time";
    private Integer createdTime;

    public AdAccountCreateSubscriptionResponse() {
    }

    public AdAccountCreateSubscriptionResponse id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Subscription ID.
     * @return id
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public AdAccountCreateSubscriptionResponse cryptographicKey(String cryptographicKey) {
        this.cryptographicKey = cryptographicKey;
        return this;
    }

    /**
     * Base64 encoded key for client to decrypt lead data.
     * @return cryptographicKey
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CRYPTOGRAPHIC_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCryptographicKey() {
        return cryptographicKey;
    }

    @JsonProperty(JSON_PROPERTY_CRYPTOGRAPHIC_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCryptographicKey(String cryptographicKey) {
        this.cryptographicKey = cryptographicKey;
    }

    public AdAccountCreateSubscriptionResponse cryptographicAlgorithm(String cryptographicAlgorithm) {
        this.cryptographicAlgorithm = cryptographicAlgorithm;
        return this;
    }

    /**
     * Lead data encryption algorithm.
     * @return cryptographicAlgorithm
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CRYPTOGRAPHIC_ALGORITHM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCryptographicAlgorithm() {
        return cryptographicAlgorithm;
    }

    @JsonProperty(JSON_PROPERTY_CRYPTOGRAPHIC_ALGORITHM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCryptographicAlgorithm(String cryptographicAlgorithm) {
        this.cryptographicAlgorithm = cryptographicAlgorithm;
    }

    public AdAccountCreateSubscriptionResponse createdTime(Integer createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Subscription creation time. Unix timestamp in milliseconds.
     * @return createdTime
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATED_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCreatedTime() {
        return createdTime;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedTime(Integer createdTime) {
        this.createdTime = createdTime;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdAccountCreateSubscriptionResponse adAccountCreateSubscriptionResponse = (AdAccountCreateSubscriptionResponse) o;
        return Objects.equals(this.id, adAccountCreateSubscriptionResponse.id) &&
            Objects.equals(this.cryptographicKey, adAccountCreateSubscriptionResponse.cryptographicKey) &&
            Objects.equals(this.cryptographicAlgorithm, adAccountCreateSubscriptionResponse.cryptographicAlgorithm) &&
            Objects.equals(this.createdTime, adAccountCreateSubscriptionResponse.createdTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, cryptographicKey, cryptographicAlgorithm, createdTime);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdAccountCreateSubscriptionResponse {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    cryptographicKey: ").append(toIndentedString(cryptographicKey)).append("\n");
        sb.append("    cryptographicAlgorithm: ").append(toIndentedString(cryptographicAlgorithm)).append("\n");
        sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

