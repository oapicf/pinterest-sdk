/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * The dynamic date range of the template
 */
@JsonPropertyOrder({
  TemplateResponseDateRangeDynamicDateRange.JSON_PROPERTY_TYPE,
  TemplateResponseDateRangeDynamicDateRange.JSON_PROPERTY_RANGE
})
@JsonTypeName("TemplateResponse_date_range_dynamic_date_range")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-05T02:02:57.601423453Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class TemplateResponseDateRangeDynamicDateRange {
    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    /**
     * The dynamic range type
     */
    public enum RangeEnum {
        YEAR_TO_DATE("YEAR_TO_DATE"),
        QUARTER_TO_DATE("QUARTER_TO_DATE"),
        MONTH_TO_DATE("MONTH_TO_DATE"),
        LAST_MONTH("LAST_MONTH");

        private String value;

        RangeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RangeEnum fromValue(String value) {
            for (RangeEnum b : RangeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_RANGE = "range";
    private RangeEnum range;

    public TemplateResponseDateRangeDynamicDateRange() {
    }

    public TemplateResponseDateRangeDynamicDateRange type(String type) {
        this.type = type;
        return this;
    }

    /**
     * The date range type
     * @return type
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(String type) {
        this.type = type;
    }

    public TemplateResponseDateRangeDynamicDateRange range(RangeEnum range) {
        this.range = range;
        return this;
    }

    /**
     * The dynamic range type
     * @return range
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_RANGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RangeEnum getRange() {
        return range;
    }

    @JsonProperty(JSON_PROPERTY_RANGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRange(RangeEnum range) {
        this.range = range;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TemplateResponseDateRangeDynamicDateRange templateResponseDateRangeDynamicDateRange = (TemplateResponseDateRangeDynamicDateRange) o;
        return Objects.equals(this.type, templateResponseDateRangeDynamicDateRange.type) &&
            Objects.equals(this.range, templateResponseDateRangeDynamicDateRange.range);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, range);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TemplateResponseDateRangeDynamicDateRange {\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    range: ").append(toIndentedString(range)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

