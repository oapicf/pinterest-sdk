/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * A successful OAuth access token response for the refresh token flow, with an added refresh token.
 */
public class OASOauthAccessTokenResponseIntegrati implements OAS.MappedProperties {
    /**
     * Gets or Sets responseType
     */
    public enum ResponseTypeEnum {
        AUTHORIZATION_CODE,
        REFRESH_TOKEN,
        CLIENT_CREDENTIALS
    }

    /**
     * Get responseType
     * @return responseType
     */
    public ResponseTypeEnum responseType { get; set; }

    /**
     * Get accessToken
     * @return accessToken
     */
    public String accessToken { get; set; }

    /**
     * Get tokenType
     * @return tokenType
     */
    public String tokenType { get; set; }

    /**
     * Get expiresIn
     * @return expiresIn
     */
    public Integer expiresIn { get; set; }

    /**
     * Get scope
     * @return scope
     */
    public String scope { get; set; }

    /**
     * Get refreshToken
     * @return refreshToken
     */
    public String refreshToken { get; set; }

    /**
     * Get refreshTokenExpiresIn
     * @return refreshTokenExpiresIn
     */
    public Integer refreshTokenExpiresIn { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'response_type' => 'responseType',
        'access_token' => 'accessToken',
        'token_type' => 'tokenType',
        'expires_in' => 'expiresIn',
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'response_type' => 'responseType',
        'access_token' => 'accessToken',
        'token_type' => 'tokenType',
        'expires_in' => 'expiresIn',
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'response_type' => 'responseType',
        'access_token' => 'accessToken',
        'token_type' => 'tokenType',
        'expires_in' => 'expiresIn',
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'response_type' => 'responseType',
        'access_token' => 'accessToken',
        'token_type' => 'tokenType',
        'expires_in' => 'expiresIn',
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'response_type' => 'responseType',
        'access_token' => 'accessToken',
        'token_type' => 'tokenType',
        'expires_in' => 'expiresIn',
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'response_type' => 'responseType',
        'access_token' => 'accessToken',
        'token_type' => 'tokenType',
        'expires_in' => 'expiresIn',
        'refresh_token' => 'refreshToken',
        'refresh_token_expires_in' => 'refreshTokenExpiresIn'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASOauthAccessTokenResponseIntegrati() {
        tokenType = 'bearer';
    }

    public static OASOauthAccessTokenResponseIntegrati getExample() {
        OASOauthAccessTokenResponseIntegrati oauthAccessTokenResponseIntegrationRefresh = new OASOauthAccessTokenResponseIntegrati();
          oauthAccessTokenResponseIntegrationRefresh.responseType = ResponseTypeEnum.AUTHORIZATION_CODE;
          oauthAccessTokenResponseIntegrationRefresh.accessToken = '';
          oauthAccessTokenResponseIntegrationRefresh.tokenType = '';
          oauthAccessTokenResponseIntegrationRefresh.expiresIn = 0;
          oauthAccessTokenResponseIntegrationRefresh.scope = '';
          oauthAccessTokenResponseIntegrationRefresh.refreshToken = '';
          oauthAccessTokenResponseIntegrationRefresh.refreshTokenExpiresIn = 0;
        return oauthAccessTokenResponseIntegrationRefresh;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOauthAccessTokenResponseIntegrati) {           
            OASOauthAccessTokenResponseIntegrati oauthAccessTokenResponseIntegrationRefresh = (OASOauthAccessTokenResponseIntegrati) obj;
            return this.responseType == oauthAccessTokenResponseIntegrationRefresh.responseType
                && this.accessToken == oauthAccessTokenResponseIntegrationRefresh.accessToken
                && this.tokenType == oauthAccessTokenResponseIntegrationRefresh.tokenType
                && this.expiresIn == oauthAccessTokenResponseIntegrationRefresh.expiresIn
                && this.scope == oauthAccessTokenResponseIntegrationRefresh.scope
                && this.refreshToken == oauthAccessTokenResponseIntegrationRefresh.refreshToken
                && this.refreshTokenExpiresIn == oauthAccessTokenResponseIntegrationRefresh.refreshTokenExpiresIn;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (responseType == null ? 0 : System.hashCode(responseType));
        hashCode = (17 * hashCode) + (accessToken == null ? 0 : System.hashCode(accessToken));
        hashCode = (17 * hashCode) + (tokenType == null ? 0 : System.hashCode(tokenType));
        hashCode = (17 * hashCode) + (expiresIn == null ? 0 : System.hashCode(expiresIn));
        hashCode = (17 * hashCode) + (scope == null ? 0 : System.hashCode(scope));
        hashCode = (17 * hashCode) + (refreshToken == null ? 0 : System.hashCode(refreshToken));
        hashCode = (17 * hashCode) + (refreshTokenExpiresIn == null ? 0 : System.hashCode(refreshTokenExpiresIn));
        return hashCode;
    }
}

