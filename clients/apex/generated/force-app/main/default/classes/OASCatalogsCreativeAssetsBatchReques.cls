/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Request object to update catalogs creative assets items
 */
public class OASCatalogsCreativeAssetsBatchReques implements OAS.MappedProperties {
    /**
     * Gets or Sets catalogType
     */
    public enum CatalogTypeEnum {
        CREATIVE_ASSETS
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    public CatalogTypeEnum catalogType { get; set; }

    /**
     * Get country
     * @return country
     */
    public OASCountry country { get; set; }

    /**
     * Get language
     * @return language
     */
    public OASCatalogsItemsRequestLanguage language { get; set; }

    /**
     * Array with creative assets item operations
     * @return items
     */
    public List<OASCatalogsCreativeAssetsBatchItem> items { get; set; }

    /**
     * Catalog id pertaining to the creative assets item. If not provided, default to oldest creative assets catalog
     * @return catalogId
     */
    public String catalogId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'catalog_id' => 'catalogId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'catalog_id' => 'catalogId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASCatalogsCreativeAssetsBatchReques() {
        items = new List<OASCatalogsCreativeAssetsBatchItem>();
    }

    public static OASCatalogsCreativeAssetsBatchReques getExample() {
        OASCatalogsCreativeAssetsBatchReques catalogsCreativeAssetsBatchRequest = new OASCatalogsCreativeAssetsBatchReques();
          catalogsCreativeAssetsBatchRequest.catalogType = CatalogTypeEnum.CREATIVE_ASSETS;
          catalogsCreativeAssetsBatchRequest.country = OASCountry.getExample();
          catalogsCreativeAssetsBatchRequest.language = OASCatalogsItemsRequestLanguage.getExample();
          catalogsCreativeAssetsBatchRequest.items = new List<OASCatalogsCreativeAssetsBatchItem>{OASCatalogsCreativeAssetsBatchItem.getExample()};
          catalogsCreativeAssetsBatchRequest.catalogId = '2680059592705';
        return catalogsCreativeAssetsBatchRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsCreativeAssetsBatchReques) {           
            OASCatalogsCreativeAssetsBatchReques catalogsCreativeAssetsBatchRequest = (OASCatalogsCreativeAssetsBatchReques) obj;
            return this.catalogType == catalogsCreativeAssetsBatchRequest.catalogType
                && this.country == catalogsCreativeAssetsBatchRequest.country
                && this.language == catalogsCreativeAssetsBatchRequest.language
                && this.items == catalogsCreativeAssetsBatchRequest.items
                && this.catalogId == catalogsCreativeAssetsBatchRequest.catalogId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (catalogType == null ? 0 : System.hashCode(catalogType));
        hashCode = (17 * hashCode) + (country == null ? 0 : System.hashCode(country));
        hashCode = (17 * hashCode) + (language == null ? 0 : System.hashCode(language));
        hashCode = (17 * hashCode) + (items == null ? 0 : System.hashCode(items));
        hashCode = (17 * hashCode) + (catalogId == null ? 0 : System.hashCode(catalogId));
        return hashCode;
    }
}

