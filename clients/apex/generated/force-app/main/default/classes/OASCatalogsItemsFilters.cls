/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCatalogsItemsFilters
 */
public class OASCatalogsItemsFilters implements OASCatalogsRetailItemsFilter, OASCatalogsHotelItemsFilter, OASCatalogsCreativeAssetsItemsFilter, OAS.MappedProperties {
    /**
     * Get catalogType
     * @return catalogType
     */
    public OASCatalogsType catalogType { get; set; }

    /**
     * Get itemIds
     * @return itemIds
     */
    public List<String> itemIds { get; set; }

    /**
     * Catalog id pertaining to the creative assets item. If not provided, default to oldest creative assets catalog
     * @return catalogId
     */
    public String catalogId { get; set; }

    /**
     * Get hotelIds
     * @return hotelIds
     */
    public List<String> hotelIds { get; set; }

    /**
     * Get creativeAssetsIds
     * @return creativeAssetsIds
     */
    public List<String> creativeAssetsIds { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'item_ids' => 'itemIds',
        'catalog_id' => 'catalogId',
        'hotel_ids' => 'hotelIds',
        'creative_assets_ids' => 'creativeAssetsIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'item_ids' => 'itemIds',
        'catalog_id' => 'catalogId',
        'hotel_ids' => 'hotelIds',
        'creative_assets_ids' => 'creativeAssetsIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'item_ids' => 'itemIds',
        'catalog_id' => 'catalogId',
        'hotel_ids' => 'hotelIds',
        'creative_assets_ids' => 'creativeAssetsIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'item_ids' => 'itemIds',
        'catalog_id' => 'catalogId',
        'hotel_ids' => 'hotelIds',
        'creative_assets_ids' => 'creativeAssetsIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'item_ids' => 'itemIds',
        'catalog_id' => 'catalogId',
        'hotel_ids' => 'hotelIds',
        'creative_assets_ids' => 'creativeAssetsIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASCatalogsItemsFilters() {
        itemIds = new List<String>();
        hotelIds = new List<String>();
        creativeAssetsIds = new List<String>();
    }

    public static OASCatalogsItemsFilters getExample() {
        OASCatalogsItemsFilters catalogsItemsFilters = new OASCatalogsItemsFilters();
          catalogsItemsFilters.catalogType = OASCatalogsType.getExample();
          catalogsItemsFilters.itemIds = new List<String>{''};
          catalogsItemsFilters.catalogId = '';
          catalogsItemsFilters.hotelIds = new List<String>{''};
          catalogsItemsFilters.creativeAssetsIds = new List<String>{''};
        return catalogsItemsFilters;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsItemsFilters) {           
            OASCatalogsItemsFilters catalogsItemsFilters = (OASCatalogsItemsFilters) obj;
            return this.catalogType == catalogsItemsFilters.catalogType
                && this.itemIds == catalogsItemsFilters.itemIds
                && this.catalogId == catalogsItemsFilters.catalogId
                && this.hotelIds == catalogsItemsFilters.hotelIds
                && this.creativeAssetsIds == catalogsItemsFilters.creativeAssetsIds;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (catalogType == null ? 0 : System.hashCode(catalogType));
        hashCode = (17 * hashCode) + (itemIds == null ? 0 : System.hashCode(itemIds));
        hashCode = (17 * hashCode) + (catalogId == null ? 0 : System.hashCode(catalogId));
        hashCode = (17 * hashCode) + (hotelIds == null ? 0 : System.hashCode(hotelIds));
        hashCode = (17 * hashCode) + (creativeAssetsIds == null ? 0 : System.hashCode(creativeAssetsIds));
        return hashCode;
    }
}

