/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASConversionEventsDataInner
 */
public class OASConversionEventsDataInner implements OAS.MappedProperties {
    /**
     * <p>The type of the user event. Please use the right event_name otherwise the event won\'t be accepted and show up correctly in reports.\n  <ul>\n  <li><code>add_to_cart</code></li>\n  <li><code>checkout</code></li>\n  <li><code>custom</code></li>\n  <li><code>lead</code></li>\n  <li><code>page_visit</code></li>\n  <li><code>search</code></li>\n  <li><code>signup</code></li>\n  <li><code>view_category</code></li>\n  <li><code>watch_video</code></li>\n  </ul>\n</p>\n
     * @return eventName
     */
    public String eventName { get; set; }

    /**
     * <p>\n  The source indicating where the conversion event occurred.\n  <ul>\n    <li><code>app_android</code></li>\n    <li><code>app_ios</code></li>\n    <li><code>web</code></li>\n    <li><code>offline</code></li>\n  </ul>\n</p>\n
     * @return actionSource
     */
    public String actionSource { get; set; }

    /**
     * The time when the event happened. Unix timestamp in seconds.
     * @return eventTime
     */
    public Long eventTime { get; set; }

    /**
     * A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking. Without this, event\'s data is likely to be double counted and will cause report metric inflation. Third-party vendors make sure this field is updated on both Pinterest tag and Conversions API side before rolling out template for Conversions API.
     * @return eventId
     */
    public String eventId { get; set; }

    /**
     * URL of the web conversion event.
     * @return eventSourceUrl
     */
    public String eventSourceUrl { get; set; }

    /**
     * When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.
     * @return optOut
     */
    public Boolean optOut { get; set; }

    /**
     * The third party partner name responsible to send the event to Conversions API on behalf of the advertiser. The naming convention is "ss-partnername" lowercase. E.g ‘ss-shopify’
     * @return partnerName
     */
    public String partnerName { get; set; }

    /**
     * Get userData
     * @return userData
     */
    public OASConversionEventsUserData userData { get; set; }

    /**
     * Get customData
     * @return customData
     */
    public OASConversionEventsDataInnerCustomDa customData { get; set; }

    /**
     * The app store app ID.
     * @return appId
     */
    public String appId { get; set; }

    /**
     * Name of the app.
     * @return appName
     */
    public String appName { get; set; }

    /**
     * Version of the app.
     * @return appVersion
     */
    public String appVersion { get; set; }

    /**
     * Brand of the user device.
     * @return deviceBrand
     */
    public String deviceBrand { get; set; }

    /**
     * User device\'s mobile carrier.
     * @return deviceCarrier
     */
    public String deviceCarrier { get; set; }

    /**
     * Model of the user device.
     * @return deviceModel
     */
    public String deviceModel { get; set; }

    /**
     * Type of the user device.
     * @return deviceType
     */
    public String deviceType { get; set; }

    /**
     * Version of the device operating system.
     * @return osVersion
     */
    public String osVersion { get; set; }

    /**
     * Whether the event occurred when the user device was connected to wifi.
     * @return wifi
     */
    public Boolean wifi { get; set; }

    /**
     * Two-character ISO-639-1 language code indicating the user\'s language.
     * @return language
     */
    public String language { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event_name' => 'eventName',
        'action_source' => 'actionSource',
        'event_time' => 'eventTime',
        'event_id' => 'eventId',
        'event_source_url' => 'eventSourceUrl',
        'opt_out' => 'optOut',
        'partner_name' => 'partnerName',
        'user_data' => 'userData',
        'custom_data' => 'customData',
        'app_id' => 'appId',
        'app_name' => 'appName',
        'app_version' => 'appVersion',
        'device_brand' => 'deviceBrand',
        'device_carrier' => 'deviceCarrier',
        'device_model' => 'deviceModel',
        'device_type' => 'deviceType',
        'os_version' => 'osVersion'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASConversionEventsDataInner getExample() {
        OASConversionEventsDataInner conversionEventsDataInner = new OASConversionEventsDataInner();
          conversionEventsDataInner.eventName = 'checkout';
          conversionEventsDataInner.actionSource = 'app_ios';
          conversionEventsDataInner.eventTime = 1451431341L;
          conversionEventsDataInner.eventId = 'eventId0001';
          conversionEventsDataInner.eventSourceUrl = 'https://www.my-clothing-shop.org/';
          conversionEventsDataInner.optOut = false;
          conversionEventsDataInner.partnerName = 'ss-partnername';
          conversionEventsDataInner.userData = OASConversionEventsUserData.getExample();
          conversionEventsDataInner.customData = OASConversionEventsDataInnerCustomDa.getExample();
          conversionEventsDataInner.appId = '429047995';
          conversionEventsDataInner.appName = 'Pinterest';
          conversionEventsDataInner.appVersion = '7.9';
          conversionEventsDataInner.deviceBrand = 'Apple';
          conversionEventsDataInner.deviceCarrier = 'T-Mobile';
          conversionEventsDataInner.deviceModel = 'iPhone X';
          conversionEventsDataInner.deviceType = 'iPhone';
          conversionEventsDataInner.osVersion = '12.1.4';
          conversionEventsDataInner.wifi = false;
          conversionEventsDataInner.language = 'en';
        return conversionEventsDataInner;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASConversionEventsDataInner) {           
            OASConversionEventsDataInner conversionEventsDataInner = (OASConversionEventsDataInner) obj;
            return this.eventName == conversionEventsDataInner.eventName
                && this.actionSource == conversionEventsDataInner.actionSource
                && this.eventTime == conversionEventsDataInner.eventTime
                && this.eventId == conversionEventsDataInner.eventId
                && this.eventSourceUrl == conversionEventsDataInner.eventSourceUrl
                && this.optOut == conversionEventsDataInner.optOut
                && this.partnerName == conversionEventsDataInner.partnerName
                && this.userData == conversionEventsDataInner.userData
                && this.customData == conversionEventsDataInner.customData
                && this.appId == conversionEventsDataInner.appId
                && this.appName == conversionEventsDataInner.appName
                && this.appVersion == conversionEventsDataInner.appVersion
                && this.deviceBrand == conversionEventsDataInner.deviceBrand
                && this.deviceCarrier == conversionEventsDataInner.deviceCarrier
                && this.deviceModel == conversionEventsDataInner.deviceModel
                && this.deviceType == conversionEventsDataInner.deviceType
                && this.osVersion == conversionEventsDataInner.osVersion
                && this.wifi == conversionEventsDataInner.wifi
                && this.language == conversionEventsDataInner.language;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (eventName == null ? 0 : System.hashCode(eventName));
        hashCode = (17 * hashCode) + (actionSource == null ? 0 : System.hashCode(actionSource));
        hashCode = (17 * hashCode) + (eventTime == null ? 0 : System.hashCode(eventTime));
        hashCode = (17 * hashCode) + (eventId == null ? 0 : System.hashCode(eventId));
        hashCode = (17 * hashCode) + (eventSourceUrl == null ? 0 : System.hashCode(eventSourceUrl));
        hashCode = (17 * hashCode) + (optOut == null ? 0 : System.hashCode(optOut));
        hashCode = (17 * hashCode) + (partnerName == null ? 0 : System.hashCode(partnerName));
        hashCode = (17 * hashCode) + (userData == null ? 0 : System.hashCode(userData));
        hashCode = (17 * hashCode) + (customData == null ? 0 : System.hashCode(customData));
        hashCode = (17 * hashCode) + (appId == null ? 0 : System.hashCode(appId));
        hashCode = (17 * hashCode) + (appName == null ? 0 : System.hashCode(appName));
        hashCode = (17 * hashCode) + (appVersion == null ? 0 : System.hashCode(appVersion));
        hashCode = (17 * hashCode) + (deviceBrand == null ? 0 : System.hashCode(deviceBrand));
        hashCode = (17 * hashCode) + (deviceCarrier == null ? 0 : System.hashCode(deviceCarrier));
        hashCode = (17 * hashCode) + (deviceModel == null ? 0 : System.hashCode(deviceModel));
        hashCode = (17 * hashCode) + (deviceType == null ? 0 : System.hashCode(deviceType));
        hashCode = (17 * hashCode) + (osVersion == null ? 0 : System.hashCode(osVersion));
        hashCode = (17 * hashCode) + (wifi == null ? 0 : System.hashCode(wifi));
        hashCode = (17 * hashCode) + (language == null ? 0 : System.hashCode(language));
        return hashCode;
    }
}

