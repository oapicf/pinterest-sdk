/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASLeadAdsApi {
    OASClient client;

    public OASLeadAdsApi(OASClient client) {
        this.client = client;
    }

    public OASLeadAdsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Delete lead ads subscription
     * Delete an existing lead ads webhook subscription by ID.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param subscriptionId Unique identifier of a subscription. (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void adAccountsSubscriptionsDelById(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('subscriptionId'), 'subscriptionId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId'),
                'subscription_id' => (String) params.get('subscriptionId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get lead ads subscription
     * Get a specific lead ads subscription record.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param subscriptionId Unique identifier of a subscription. (required)
     * @return OASAdAccountGetSubscriptionResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdAccountGetSubscriptionResponse adAccountsSubscriptionsGetById(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('subscriptionId'), 'subscriptionId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdAccountGetSubscriptionResponse) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId'),
                'subscription_id' => (String) params.get('subscriptionId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAdAccountGetSubscriptionResponse.class
        );
    }
    /**
     * Get lead ads subscriptions
     * Get the advertiser\&#39;s list of lead ads subscriptions.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASAdAccountsSubscriptionsGetList200
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdAccountsSubscriptionsGetList200 adAccountsSubscriptionsGetList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdAccountsSubscriptionsGetList200) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/leads/subscriptions', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAdAccountsSubscriptionsGetList200.class
        );
    }
    /**
     * Create lead ads subscription
     * Create a lead ads webhook subscription.\nSubscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n- Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records.\n- For data security, egress lead data is encrypted with AES-256-GCM.\n\n&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSAdAccountCreateSubscriptionReques Subscription to create. (required)
     * @return OASAdAccountCreateSubscriptionRespon
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdAccountCreateSubscriptionRespon adAccountsSubscriptionsPost(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSAdAccountCreateSubscriptionReques'), 'oaSAdAccountCreateSubscriptionReques');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdAccountCreateSubscriptionRespon) client.invoke(
            'POST', '/ad_accounts/{ad_account_id}/leads/subscriptions',
            (OASAdAccountCreateSubscriptionReques) params.get('oaSAdAccountCreateSubscriptionReques'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASAdAccountCreateSubscriptionRespon.class
        );
    }
}
