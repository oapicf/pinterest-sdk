/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSSIOAccountItem
 */
public class OASSSIOAccountItem implements OAS.MappedProperties {
    /**
     * Salesforce id for billto_info
     * @return id
     */
    public String id { get; set; }

    /**
     * Salesforce id for IO Terms and Conditions
     * @return ioTermsId
     */
    public String ioTermsId { get; set; }

    /**
     * Salesforce text for IO Terms and Conditions
     * @return ioTerms
     */
    public String ioTerms { get; set; }

    /**
     * Salesforce id for US Terms and Conditions
     * @return usTermsId
     */
    public String usTermsId { get; set; }

    /**
     * Salesforce text for US Terms and Conditions
     * @return usTerms
     */
    public String usTerms { get; set; }

    /**
     * Salesforce id for Rest of the World Terms and Conditions
     * @return rowTermsId
     */
    public String rowTermsId { get; set; }

    /**
     * Salesforce text for Rest of the World Terms and Conditions
     * @return rowTerms
     */
    public String rowTerms { get; set; }

    /**
     * Insertion Order Type - Pinterest Paper or Agency Paper
     * @return ioType
     */
    public String ioType { get; set; }

    /**
     * Address information that is associated with this account.
     * @return addresses
     */
    public List<OASSSIOAccountAddress> addresses { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'io_terms_id' => 'ioTermsId',
        'io_terms' => 'ioTerms',
        'us_terms_id' => 'usTermsId',
        'us_terms' => 'usTerms',
        'row_terms_id' => 'rowTermsId',
        'row_terms' => 'rowTerms',
        'io_type' => 'ioType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSSIOAccountItem() {
        addresses = new List<OASSSIOAccountAddress>();
    }

    public static OASSSIOAccountItem getExample() {
        OASSSIOAccountItem ssIOAccountItem = new OASSSIOAccountItem();
          ssIOAccountItem.id = '0011N00001LW8kAQAT';
          ssIOAccountItem.ioTermsId = 'a2S1N000000bKHgUAM';
          ssIOAccountItem.ioTerms = 'The IO is governed by the terms available at https://business.pinterest.com/en/pinterest-advertising-services-agreement/. If a budget is listed on this IO, the parties agree that Advertiser (or if applicable, its Agency) may apply any of the budget to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees. The terms of the Agreement supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.';
          ssIOAccountItem.usTermsId = 'a2S1N000000bKIOUA2';
          ssIOAccountItem.usTerms = 'This Insertion Order ("IO") is subject to the Pinterest Addendum To IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0), as executed by Pinterest, Inc. and GroupM Worldwide LLC on May 7, 2014 and Amendment No. 1 to Pinterest Addendum to IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0) as executed by Pinterest, Inc. and GroupM Worldwide LLC on August 20, 2015. The parties agree that Agency may apply any of the budget listed on this IO to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees.The terms of the Addendum supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.';
          ssIOAccountItem.rowTermsId = 'a2S1N000000bKHhUAM';
          ssIOAccountItem.rowTerms = 'The IO is governed by the terms available at\r\nhttps://business.pinterest.com/en-gb/pinterest-advertising-services-agreement';
          ssIOAccountItem.ioType = 'Pinterest Paper';
          ssIOAccountItem.addresses = new List<OASSSIOAccountAddress>{OASSSIOAccountAddress.getExample()};
        return ssIOAccountItem;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSSIOAccountItem) {           
            OASSSIOAccountItem ssIOAccountItem = (OASSSIOAccountItem) obj;
            return this.id == ssIOAccountItem.id
                && this.ioTermsId == ssIOAccountItem.ioTermsId
                && this.ioTerms == ssIOAccountItem.ioTerms
                && this.usTermsId == ssIOAccountItem.usTermsId
                && this.usTerms == ssIOAccountItem.usTerms
                && this.rowTermsId == ssIOAccountItem.rowTermsId
                && this.rowTerms == ssIOAccountItem.rowTerms
                && this.ioType == ssIOAccountItem.ioType
                && this.addresses == ssIOAccountItem.addresses;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (ioTermsId == null ? 0 : System.hashCode(ioTermsId));
        hashCode = (17 * hashCode) + (ioTerms == null ? 0 : System.hashCode(ioTerms));
        hashCode = (17 * hashCode) + (usTermsId == null ? 0 : System.hashCode(usTermsId));
        hashCode = (17 * hashCode) + (usTerms == null ? 0 : System.hashCode(usTerms));
        hashCode = (17 * hashCode) + (rowTermsId == null ? 0 : System.hashCode(rowTermsId));
        hashCode = (17 * hashCode) + (rowTerms == null ? 0 : System.hashCode(rowTerms));
        hashCode = (17 * hashCode) + (ioType == null ? 0 : System.hashCode(ioType));
        hashCode = (17 * hashCode) + (addresses == null ? 0 : System.hashCode(addresses));
        return hashCode;
    }
}

