/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASBusinessAccessInviteApi {
    OASClient client;

    public OASBusinessAccessInviteApi(OASClient client) {
        this.client = client;
    }

    public OASBusinessAccessInviteApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a request to access an existing partner\&#39;s assets.
     * Create a request to access an existing partner\&#39;s assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSCreateAssetAccessRequestBody  (required)
     * @return OASCreateAssetAccessRequestResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCreateAssetAccessRequestResponse assetAccessRequestsCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSCreateAssetAccessRequestBody'), 'oaSCreateAssetAccessRequestBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCreateAssetAccessRequestResponse) client.invoke(
            'POST', '/businesses/{business_id}/requests/assets/access',
            (OASCreateAssetAccessRequestBody) params.get('oaSCreateAssetAccessRequestBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCreateAssetAccessRequestResponse.class
        );
    }
    /**
     * Cancel invites/requests
     * Cancel membership/partnership invites and/or requests.
     * @param businessId Business id (required)
     * @param oaSCancelInvitesBody A list with invite ids (required)
     * @return OASDeleteInvitesResultsResponseArray
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteInvitesResultsResponseArray cancelInvitesOrRequests(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSCancelInvitesBody'), 'oaSCancelInvitesBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteInvitesResultsResponseArray) client.invoke(
            'DELETE', '/businesses/{business_id}/invites',
            (OASCancelInvitesBody) params.get('oaSCancelInvitesBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASDeleteInvitesResultsResponseArray.class
        );
    }
    /**
     * Update invite/request with an asset permission
     * Assign asset permissions information to an existing invite/request. Can be used to:\n- Request access to a partner\&#39;s asset. Note: This is only for when no existing partnership exists. If an existing\n  partnership exists, use &quot;Create a request to access an existing partner\&#39;s assets&quot; to request access to your\n  partner\&#39;s assets.\n    - invite_type&#x3D;&quot;PARTNER_REQUEST&quot;\n- Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.\n  If there is an existing partnership, use &quot;Assign/Update partner asset permissions&quot; to assign a partner access to\n  new assets.\n    - invite_type&#x3D;&quot;PARTNER_INVITE&quot;\n- Invite a member to access your business assets. Note: This is only for when there is no existing membership.\n  If there is an existing membership, use &quot;Assign/Update member asset permissions&quot; to assign a member access to new\n  assets.\n    - invite_type&#x3D;&quot;MEMBER_INVITE&quot;\n\nTo learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSCreateAssetInvitesRequest A list of invites/requests together with the asset permissions to be assigned to the invite/request.\n (required)
     * @return OASUpdateInvitesResultsResponseArray
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateInvitesResultsResponseArray createAssetInvites(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSCreateAssetInvitesRequest'), 'oaSCreateAssetInvitesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateInvitesResultsResponseArray) client.invoke(
            'POST', '/businesses/{business_id}/invites/assets/access',
            (OASCreateAssetInvitesRequest) params.get('oaSCreateAssetInvitesRequest'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASUpdateInvitesResultsResponseArray.class
        );
    }
    /**
     * Create invites or requests
     * Create batch invites or requests. Can create batch invites or requests as described below.\n- Invite members to join the business. This would required specifying the following:\n    - invite_type&#x3D;&quot;MEMBER_INVITE&quot;\n    - business_role&#x3D;&quot;EMPLOYEE&quot; OR business_role&#x3D;&quot;BIZ_ADMIN&quot; (To learn more about business roles, visit\n    https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)\n    - members\n- Invite partners to access your business assets. This would require specifying the following:\n    - invite_type&#x3D;&quot;PARTNER_INVITE&quot;\n    - business_role&#x3D;&quot;PARTNER&quot;\n    - partners\n- Request to be a partner so you can access their assets. This would require specifying the following:\n    - invite_type&#x3D;&quot;PARTNER_REQUEST&quot;\n    - business_role&#x3D;&quot;PARTNER&quot;\n    - partners
     * @param businessId Business id (required)
     * @param oaSCreateMembershipOrPartnershipInvi An object with the properties: invite_type, partners, members, business_role (required)
     * @return OASCreateInvitesResultsResponseArray
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCreateInvitesResultsResponseArray createMembershipOrPartnershipInvites(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSCreateMembershipOrPartnershipInvi'), 'oaSCreateMembershipOrPartnershipInvi');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCreateInvitesResultsResponseArray) client.invoke(
            'POST', '/businesses/{business_id}/invites',
            (OASCreateMembershipOrPartnershipInvi) params.get('oaSCreateMembershipOrPartnershipInvi'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCreateInvitesResultsResponseArray.class
        );
    }
    /**
     * Get invites/requests
     * Get the membership/partnership invites and/or requests for the authorized user.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param isMember A boolean field to indicate whether the invite is to create a partnership or a membership. (optional, default to true)
     * @param inviteStatus A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned. (optional, default to new List<String>())
     * @param inviteType Invite type to filter invites by. Only invites of the specified type will be returned. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASGetInvites200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetInvites200Response getInvites(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('is_member', (Boolean) params.get('isMember')));
        query.addAll(client.makeParams('invite_status', (List<String>) params.get('inviteStatus')));
        query.addAll(client.makeParam('invite_type', (OASInviteType) params.get('inviteType')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetInvites200Response) client.invoke(
            'GET', '/businesses/{business_id}/invites', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASGetInvites200Response.class
        );
    }
    /**
     * Accept or decline an invite/request
     * Accept or decline invites or requests.
     * @param oaSAuthRespondInvitesBody  (required)
     * @return OASRespondToInvitesResponseArray
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRespondToInvitesResponseArray respondBusinessAccessInvites(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSAuthRespondInvitesBody'), 'oaSAuthRespondInvitesBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRespondToInvitesResponseArray) client.invoke(
            'PATCH', '/businesses/invites',
            (OASAuthRespondInvitesBody) params.get('oaSAuthRespondInvitesBody'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASRespondToInvitesResponseArray.class
        );
    }
}
