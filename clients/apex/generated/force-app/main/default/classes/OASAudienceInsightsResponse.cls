/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Audience interests and demographics.
 */
public class OASAudienceInsightsResponse implements OAS.MappedProperties {
    /**
     * Category interest distribution
     * @return categories
     */
    public List<OASAudienceCategory> categories { get; set; }

    /**
     * Get demographics
     * @return demographics
     */
    public OASAudienceDemographics demographics { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASAudienceInsightType type { get; set; }

    /**
     * Generation date
     * @return r_date
     */
    public String r_date { get; set; }

    /**
     * Population count.
     * @return size
     */
    public Integer size { get; set; }

    /**
     * Indicates whether the audience size has been rounded up to the next highest upper boundary.
     * @return sizeIsUpperBound
     */
    public Boolean sizeIsUpperBound { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'date' => 'r_date',
        'size_is_upper_bound' => 'sizeIsUpperBound'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'date' => 'r_date',
        'size_is_upper_bound' => 'sizeIsUpperBound'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASAudienceInsightsResponse() {
        categories = new List<OASAudienceCategory>();
    }

    public static OASAudienceInsightsResponse getExample() {
        OASAudienceInsightsResponse audienceInsightsResponse = new OASAudienceInsightsResponse();
          audienceInsightsResponse.categories = new List<OASAudienceCategory>{OASAudienceCategory.getExample()};
          audienceInsightsResponse.demographics = OASAudienceDemographics.getExample();
          audienceInsightsResponse.type = OASAudienceInsightType.getExample();
          audienceInsightsResponse.r_date = '2022-10-09';
          audienceInsightsResponse.size = 10000;
          audienceInsightsResponse.sizeIsUpperBound = true;
        return audienceInsightsResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAudienceInsightsResponse) {           
            OASAudienceInsightsResponse audienceInsightsResponse = (OASAudienceInsightsResponse) obj;
            return this.categories == audienceInsightsResponse.categories
                && this.demographics == audienceInsightsResponse.demographics
                && this.type == audienceInsightsResponse.type
                && this.r_date == audienceInsightsResponse.r_date
                && this.size == audienceInsightsResponse.size
                && this.sizeIsUpperBound == audienceInsightsResponse.sizeIsUpperBound;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (categories == null ? 0 : System.hashCode(categories));
        hashCode = (17 * hashCode) + (demographics == null ? 0 : System.hashCode(demographics));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        hashCode = (17 * hashCode) + (size == null ? 0 : System.hashCode(size));
        hashCode = (17 * hashCode) + (sizeIsUpperBound == null ? 0 : System.hashCode(sizeIsUpperBound));
        return hashCode;
    }
}

