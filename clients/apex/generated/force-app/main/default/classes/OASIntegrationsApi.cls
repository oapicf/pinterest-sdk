/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASIntegrationsApi {
    OASClient client;

    public OASIntegrationsApi(OASClient client) {
        this.client = client;
    }

    public OASIntegrationsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Delete commerce integration
     * Delete commerce integration metadata for the given external business ID.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param externalBusinessId External business ID for the integration. (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void integrationsCommerceDel(Map<String, Object> params) {
        client.assertNotNull(params.get('externalBusinessId'), 'externalBusinessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/integrations/commerce/{external_business_id}', '',
            query, form,
            new Map<String, Object>{
                'external_business_id' => (String) params.get('externalBusinessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get commerce integration
     * Get commerce integration metadata associated with the given external business ID.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param externalBusinessId External business ID for the integration. (required)
     * @return OASIntegrationMetadata
     * @throws OAS.ApiException if fails to make API call
     */
    public OASIntegrationMetadata integrationsCommerceGet(Map<String, Object> params) {
        client.assertNotNull(params.get('externalBusinessId'), 'externalBusinessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASIntegrationMetadata) client.invoke(
            'GET', '/integrations/commerce/{external_business_id}', '',
            query, form,
            new Map<String, Object>{
                'external_business_id' => (String) params.get('externalBusinessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASIntegrationMetadata.class
        );
    }
    /**
     * Update commerce integration
     * Update commerce integration metadata for the given external business ID.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param externalBusinessId External business ID for the integration. (required)
     * @param oaSIntegrationRequestPatch Parameters to get create/update the Integration Metadata (optional)
     * @return OASIntegrationMetadata
     * @throws OAS.ApiException if fails to make API call
     */
    public OASIntegrationMetadata integrationsCommercePatch(Map<String, Object> params) {
        client.assertNotNull(params.get('externalBusinessId'), 'externalBusinessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASIntegrationMetadata) client.invoke(
            'PATCH', '/integrations/commerce/{external_business_id}',
            (OASIntegrationRequestPatch) params.get('oaSIntegrationRequestPatch'),
            query, form,
            new Map<String, Object>{
                'external_business_id' => (String) params.get('externalBusinessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASIntegrationMetadata.class
        );
    }
    /**
     * Create commerce integration
     * Create commerce integration metadata to link an external business ID with a Pinterest merchant &amp; ad account.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param oaSIntegrationRequest Parameters to get create/update the Integration Metadata (optional)
     * @return OASIntegrationMetadata
     * @throws OAS.ApiException if fails to make API call
     */
    public OASIntegrationMetadata integrationsCommercePost(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASIntegrationMetadata) client.invoke(
            'POST', '/integrations/commerce',
            (OASIntegrationRequest) params.get('oaSIntegrationRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASIntegrationMetadata.class
        );
    }
    /**
     * Get integration metadata
     * Get integration metadata by ID.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param id Integration ID. (required)
     * @return OASIntegrationRecord
     * @throws OAS.ApiException if fails to make API call
     */
    public OASIntegrationRecord integrationsGetById(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASIntegrationRecord) client.invoke(
            'GET', '/integrations/{id}', '',
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASIntegrationRecord.class
        );
    }
    /**
     * Get integration metadata list
     * Get integration metadata list.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASIntegrationsGetList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASIntegrationsGetList200Response integrationsGetList(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASIntegrationsGetList200Response) client.invoke(
            'GET', '/integrations', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASIntegrationsGetList200Response.class
        );
    }
    /**
     * Receives batched logs from integration applications.
     * This endpoint receives batched logs from integration applications on partner platforms.\nNote: If you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     * @param oaSIntegrationLogsRequest Ingest log information from external integration application. (required)
     * @return OASIntegrationLogsSuccessResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASIntegrationLogsSuccessResponse integrationsLogsPost(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSIntegrationLogsRequest'), 'oaSIntegrationLogsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASIntegrationLogsSuccessResponse) client.invoke(
            'POST', '/integrations/logs',
            (OASIntegrationLogsRequest) params.get('oaSIntegrationLogsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASIntegrationLogsSuccessResponse.class
        );
    }
}
