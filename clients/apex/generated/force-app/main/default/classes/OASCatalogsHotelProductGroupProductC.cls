/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Product counts for a Hotel CatalogsProductGroup
 */
public class OASCatalogsHotelProductGroupProductC implements OAS.MappedProperties {
    /**
     * Gets or Sets catalogType
     */
    public enum CatalogTypeEnum {
        HOTEL
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    public CatalogTypeEnum catalogType { get; set; }

    /**
     * Get total
     * minimum: 0
     * @return total
     */
    public Double total { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCatalogsHotelProductGroupProductC getExample() {
        OASCatalogsHotelProductGroupProductC catalogsHotelProductGroupProductCounts = new OASCatalogsHotelProductGroupProductC();
          catalogsHotelProductGroupProductCounts.catalogType = CatalogTypeEnum.HOTEL;
          catalogsHotelProductGroupProductCounts.total = 1.3579;
        return catalogsHotelProductGroupProductCounts;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsHotelProductGroupProductC) {           
            OASCatalogsHotelProductGroupProductC catalogsHotelProductGroupProductCounts = (OASCatalogsHotelProductGroupProductC) obj;
            return this.catalogType == catalogsHotelProductGroupProductCounts.catalogType
                && this.total == catalogsHotelProductGroupProductCounts.total;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (catalogType == null ? 0 : System.hashCode(catalogType));
        hashCode = (17 * hashCode) + (total == null ? 0 : System.hashCode(total));
        return hashCode;
    }
}

