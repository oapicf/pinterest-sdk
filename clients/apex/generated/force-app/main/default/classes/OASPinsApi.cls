/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASPinsApi {
    OASClient client;

    public OASPinsApi(OASClient client) {
        this.client = client;
    }

    public OASPinsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Get multiple Pin analytics
     * &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;\n\nGet analytics for multiple pins owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- The maximum number of pins supported in a single request is 100.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&quot;/docs/api/v5/#operation/ad_accounts/list&quot;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.\n\nIf Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
     * @param pinIds List of Pin IDs. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param metricTypes Pin metric types to get data for. (required)
     * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Map<String, Map>
     * @throws OAS.ApiException if fails to make API call
     */
    public Map<String, Map> multiPinsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('pinIds'), 'pinIds');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('metricTypes'), 'metricTypes');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('pin_ids', (List<String>) params.get('pinIds')));
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParam('app_types', (String) params.get('appTypes')));
        query.addAll(client.makeParam('metric_types', (List<OASPinsAnalyticsMetricTypesParameter>) params.get('metricTypes'), 'csv'));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Map<String, Map>) client.invoke(
            'GET', '/pins/analytics', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2', 'client_credentials' },
            Map<String, Map>.class
        );
    }
    /**
     * Get Pin analytics
     * Get analytics for a Pin owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&quot;/docs/api/v5/#operation/ad_accounts/list&quot;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.\n\nIf Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
     * @param pinId Unique identifier of a Pin. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param metricTypes Pin metric types to get data for. VIDEO_MRC_VIEW are Video views, VIDEO_V50_WATCH_TIME is Total play time. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt;, Profile visits and Follows will only be available for Idea Pins. These metrics are available for all Pin formats since then. Keep in mind this cannot have ALL if split_field is set to any value other than &lt;code&gt;NO_SPLIT&lt;/code&gt;. (required)
     * @param appTypes Apps or devices to get data for, default is all. (optional, default to ALL)
     * @param splitField How to split the data into groups. Not including this param means data won\&#39;t be split. (optional, default to NO_SPLIT)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return Map<String, OASPinAnalyticsMetricsResponse>
     * @throws OAS.ApiException if fails to make API call
     */
    public Map<String, OASPinAnalyticsMetricsResponse> pinsAnalytics(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        client.assertNotNull(params.get('startDate'), 'startDate');
        client.assertNotNull(params.get('endDate'), 'endDate');
        client.assertNotNull(params.get('metricTypes'), 'metricTypes');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_date', (Date) params.get('startDate')));
        query.addAll(client.makeParam('end_date', (Date) params.get('endDate')));
        query.addAll(client.makeParam('app_types', (String) params.get('appTypes')));
        query.addAll(client.makeParam('metric_types', (List<OASPinsAnalyticsMetricTypesParameter>) params.get('metricTypes'), 'csv'));
        query.addAll(client.makeParam('split_field', (String) params.get('splitField')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Map<String, OASPinAnalyticsMetricsResponse>) client.invoke(
            'GET', '/pins/{pin_id}/analytics', '',
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2', 'client_credentials' },
            Map<String, OASPinAnalyticsMetricsResponse>.class
        );
    }
    /**
     * Create Pin
     * Create a Pin on a board or board section owned by the &quot;operation user_account&quot;.\n\nNote: If the current &quot;operation user_account&quot; (defined by the access token) has access to another user\&#39;s Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account\&#39;s permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id&#x3D;12345&amp;...).\n\n- This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called \&#39;curated content\&#39;, please use our &lt;a href&#x3D;\&#39;/docs/web-features/add-ons-overview/\&#39;&gt;Save button&lt;/a&gt; instead. For more tips on creating fresh content for Pinterest, review our &lt;a href&#x3D;\&#39;/docs/api-features/content-overview/\&#39;&gt;Content App Solutions Guide&lt;/a&gt;.\n\n&lt;strong&gt;&lt;a href&#x3D;\&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins\&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.
     * @param oaSPinCreate Create a new Pin. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASPin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPin pinsCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSPinCreate'), 'oaSPinCreate');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPin) client.invoke(
            'POST', '/pins',
            (OASPinCreate) params.get('oaSPinCreate'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASPin.class
        );
    }
    /**
     * Delete Pin
     * Delete a Pins owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.
     * @param pinId Unique identifier of a Pin. (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void pinsDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/pins/{pin_id}', '',
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get Pin
     * Get a Pin owned by the &quot;operation user_account&quot; - or on a group board that has been shared with this account.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.
     * @param pinId Unique identifier of a Pin. (required)
     * @param pinMetrics Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASPin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPin pinsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('pin_metrics', (Boolean) params.get('pinMetrics')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPin) client.invoke(
            'GET', '/pins/{pin_id}', '',
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2', 'client_credentials' },
            OASPin.class
        );
    }
    /**
     * List Pins
     * Get a list of the Pins owned by the &quot;operation user_account&quot;.\n  - By default, the &quot;operation user_account&quot; is the token user_account.\n  - All Pins owned by the &quot;operation user_account&quot; are included, regardless of who owns the board they are on.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the &quot;operation user_account&quot;.\n\nDisclaimer: there are known performance issues when filtering by field &lt;code&gt;creative_type&lt;/code&gt; and including protected pins. If your\nrequest is timing out in this scenario we encourage you to use &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/boards/list_pins\&#39;&gt;GET List Pins on Board&lt;/a&gt;.
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param pinFilter Pin filter. (optional)
     * @param includeProtectedPins Specify if return pins from protected boards (optional, default to false)
     * @param pinType The type of pins to return, currently only enabled for private pins (optional)
     * @param creativeTypes Pin creative types filter. &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SHOP_THE_PIN has been deprecated. Please use COLLECTION instead. (optional, default to new List<String>())
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @param pinMetrics Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     * @return OASPinsList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPinsList200Response pinsList(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('pin_filter', (String) params.get('pinFilter')));
        query.addAll(client.makeParam('include_protected_pins', (Boolean) params.get('includeProtectedPins')));
        query.addAll(client.makeParam('pin_type', (String) params.get('pinType')));
        query.addAll(client.makeParams('creative_types', (List<String>) params.get('creativeTypes')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));
        query.addAll(client.makeParam('pin_metrics', (Boolean) params.get('pinMetrics')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPinsList200Response) client.invoke(
            'GET', '/pins', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2', 'client_credentials' },
            OASPinsList200Response.class
        );
    }
    /**
     * Save Pin
     * Save a Pin on a board or board section owned by the &quot;operation user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.\n\n- Any Pin type can be saved: image Pin, video Pin, Idea Pin, product Pin, etc.\n- Any public Pin can be saved given a pin ID.
     * @param pinId Unique identifier of a Pin. (required)
     * @param oaSPinsSaveRequest Request object used to save an existing pin (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASPin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPin pinsSave(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        client.assertNotNull(params.get('oaSPinsSaveRequest'), 'oaSPinsSaveRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPin) client.invoke(
            'POST', '/pins/{pin_id}/save',
            (OASPinsSaveRequest) params.get('oaSPinsSaveRequest'),
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASPin.class
        );
    }
    /**
     * Update Pin
     * Update a pin owned by the &quot;operating user_account&quot;.\n- By default, the &quot;operation user_account&quot; is the token user_account.\n\nOptional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the &quot;operation user_account&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.\n\n&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     * @param pinId Unique identifier of a Pin. (required)
     * @param oaSPinUpdate  (required)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return OASPin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPin pinsUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('pinId'), 'pinId');
        client.assertNotNull(params.get('oaSPinUpdate'), 'oaSPinUpdate');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPin) client.invoke(
            'PATCH', '/pins/{pin_id}',
            (OASPinUpdate) params.get('oaSPinUpdate'),
            query, form,
            new Map<String, Object>{
                'pin_id' => (String) params.get('pinId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASPin.class
        );
    }
}
