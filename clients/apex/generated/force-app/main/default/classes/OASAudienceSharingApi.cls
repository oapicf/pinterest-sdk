/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASAudienceSharingApi {
    OASClient client;

    public OASAudienceSharingApi(OASClient client) {
        this.client = client;
    }

    public OASAudienceSharingApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * List accounts with access to an audience owned by an ad account
     * List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceId Unique identifier of the audience to use to filter the results. (required)
     * @param accountType Filter accounts by account type. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASAdAccountsAudiencesSharedAccounts
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdAccountsAudiencesSharedAccounts adAccountsAudiencesSharedAccountsList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('audienceId'), 'audienceId');
        client.assertNotNull(params.get('accountType'), 'accountType');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('audience_id', (String) params.get('audienceId')));
        query.addAll(client.makeParam('account_type', (OASAudienceAccountType) params.get('accountType')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdAccountsAudiencesSharedAccounts) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/audiences/shared/accounts', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAdAccountsAudiencesSharedAccounts.class
        );
    }
    /**
     * List accounts with access to an audience owned by a business
     * List all ad accounts and/or businesses that have access to a specific audience.\nThe audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business.\nIf the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param audienceId Unique identifier of the audience to use to filter the results. (required)
     * @param accountType Filter accounts by account type. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASAdAccountsAudiencesSharedAccounts
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdAccountsAudiencesSharedAccounts businessAccountAudiencesSharedAccountsList(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('audienceId'), 'audienceId');
        client.assertNotNull(params.get('accountType'), 'accountType');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('audience_id', (String) params.get('audienceId')));
        query.addAll(client.makeParam('account_type', (OASAudienceAccountType) params.get('accountType')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdAccountsAudiencesSharedAccounts) client.invoke(
            'GET', '/businesses/{business_id}/audiences/shared/accounts', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAdAccountsAudiencesSharedAccounts.class
        );
    }
    /**
     * List received audiences for a business
     * Get a list of received audiences for the given business.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING”\nby ID. Note that higher-value IDs are associated with more-recently added\nitems. (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASAudiencesList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAudiencesList200Response sharedAudiencesForBusinessList(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('order', (String) params.get('order')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAudiencesList200Response) client.invoke(
            'GET', '/businesses/{business_id}/audiences', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAudiencesList200Response.class
        );
    }
    /**
     * Update audience sharing between ad accounts
     * From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/create-and-manage-accounts\&#39;&gt;Pinterest Business Hierarchy&lt;/a&gt; as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSSharedAudience  (required)
     * @return OASSharedAudienceResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSharedAudienceResponse updateAdAccountToAdAccountSharedAudience(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSSharedAudience'), 'oaSSharedAudience');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSharedAudienceResponse) client.invoke(
            'PATCH', '/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared',
            (OASSharedAudience) params.get('oaSSharedAudience'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASSharedAudienceResponse.class
        );
    }
    /**
     * Update audience sharing from an ad account to businesses
     * From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSBusinessSharedAudience  (required)
     * @return OASBusinessSharedAudienceResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessSharedAudienceResponse updateAdAccountToBusinessSharedAudience(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSBusinessSharedAudience'), 'oaSBusinessSharedAudience');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessSharedAudienceResponse) client.invoke(
            'PATCH', '/ad_accounts/{ad_account_id}/audiences/businesses/shared',
            (OASBusinessSharedAudience) params.get('oaSBusinessSharedAudience'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASBusinessSharedAudienceResponse.class
        );
    }
    /**
     * Update audience sharing from a business to ad accounts
     * From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. &lt;ul&gt; &lt;li&gt;If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.&lt;/li&gt; &lt;li&gt;If the business is the recipient of the audience, it can share with any of its owned ad accounts.&lt;/li&gt; &lt;/ul&gt; This endpoint is not available to all apps.&lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSSharedAudience  (required)
     * @return OASSharedAudienceResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSharedAudienceResponse updateBusinessToAdAccountSharedAudience(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSSharedAudience'), 'oaSSharedAudience');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSharedAudienceResponse) client.invoke(
            'PATCH', '/businesses/{business_id}/audiences/ad_accounts/shared',
            (OASSharedAudience) params.get('oaSSharedAudience'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASSharedAudienceResponse.class
        );
    }
    /**
     * Update audience sharing between businesses
     * From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSBusinessSharedAudience  (required)
     * @return OASBusinessSharedAudienceResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessSharedAudienceResponse updateBusinessToBusinessSharedAudience(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSBusinessSharedAudience'), 'oaSBusinessSharedAudience');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessSharedAudienceResponse) client.invoke(
            'PATCH', '/businesses/{business_id}/audiences/businesses/shared',
            (OASBusinessSharedAudience) params.get('oaSBusinessSharedAudience'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASBusinessSharedAudienceResponse.class
        );
    }
}
