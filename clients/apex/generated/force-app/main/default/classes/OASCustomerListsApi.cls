/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASCustomerListsApi {
    OASClient client;

    public OASCustomerListsApi(OASClient client) {
        this.client = client;
    }

    public OASCustomerListsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create customer lists
     * &lt;p&gt;Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).&lt;/p&gt;\n&lt;p&gt;A customer list is one of the four types of Pinterest audiences: for more information, see &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/audience-targeting&quot; target&#x3D;&quot;_blank&quot;&gt;Audience targeting&lt;/a&gt;\nor the &lt;a href&#x3D;&quot;/docs/api-features/targeting-overview/&quot; target&#x3D;&quot;_blank&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;p/&gt;\n &lt;p&gt;&lt;b&gt;Please review our &lt;u&gt;&lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/audience-targeting#section-13341&quot; target&#x3D;&quot;_blank&quot;&gt;requirements&lt;/a&gt;&lt;/u&gt; for what type of information is allowed when uploading a customer list.&lt;/b&gt;&lt;/p&gt;\n&lt;p&gt;When you create a customer list, the system scans the list for existing Pinterest accounts;\nthe list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process\nis complete. The filtered list – containing only the Pinterest accounts that were included in your starting\nlist – is what will be used to create the audience.&lt;/p&gt;\n&lt;p&gt;Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type)\nusing the &lt;a href&#x3D;&quot;#operation/create_audience_handler&quot;&gt;create audience endpoint&lt;/a&gt; before it can be used.&lt;/p&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSCustomerListRequest Parameters to get Customer lists info (required)
     * @return OASCustomerList
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomerList customerListsCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSCustomerListRequest'), 'oaSCustomerListRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomerList) client.invoke(
            'POST', '/ad_accounts/{ad_account_id}/customer_lists',
            (OASCustomerListRequest) params.get('oaSCustomerListRequest'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCustomerList.class
        );
    }
    /**
     * Get customer list
     * Gets a specific customer list given the customer list ID.
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param customerListId Unique identifier of a customer list (required)
     * @return OASCustomerList
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomerList customerListsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('customerListId'), 'customerListId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomerList) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId'),
                'customer_list_id' => (String) params.get('customerListId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCustomerList.class
        );
    }
    /**
     * Get customer lists
     * &lt;p&gt;Get a set of customer lists including id and name based on the filters provided.&lt;/p&gt;\n&lt;p&gt;(Customer lists are a type of audience.) For more information, see\n&lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/audience-targeting&quot; target&#x3D;&quot;_blank&quot;&gt;Audience targeting&lt;/a&gt;\n or the &lt;a href&#x3D;&quot;/docs/api-features/targeting-overview/&quot; target&#x3D;&quot;_blank&quot;&gt;Audiences&lt;/a&gt;\nsection of the ads management guide.&lt;/p&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING”\nby ID. Note that higher-value IDs are associated with more-recently added\nitems. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASCustomerListsList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomerListsList200Response customerListsList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('order', (String) params.get('order')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomerListsList200Response) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/customer_lists', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASCustomerListsList200Response.class
        );
    }
    /**
     * Update customer list
     * &lt;p&gt;Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)&lt;/p&gt;\n&lt;p&gt;When you add records to an existing customer list, the system scans the additions for existing Pinterest\naccounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records\n to add will be deleted when the matching process is complete.&lt;/p&gt;\n&lt;p&gt;For more information, see &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/audience-targeting&quot; target&#x3D;&quot;_blank&quot;&gt;Audience targeting&lt;/a&gt;\nor the &lt;a href&#x3D;&quot;/docs/api-features/targeting-overview/&quot; target&#x3D;&quot;_blank&quot;&gt;Audiences&lt;/a&gt;\nsection of the ads management guide.&lt;/p&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param customerListId Unique identifier of a customer list (required)
     * @param oaSCustomerListUpdateRequest  (required)
     * @return OASCustomerList
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCustomerList customerListsUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('customerListId'), 'customerListId');
        client.assertNotNull(params.get('oaSCustomerListUpdateRequest'), 'oaSCustomerListUpdateRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCustomerList) client.invoke(
            'PATCH', '/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}',
            (OASCustomerListUpdateRequest) params.get('oaSCustomerListUpdateRequest'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId'),
                'customer_list_id' => (String) params.get('customerListId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCustomerList.class
        );
    }
}
