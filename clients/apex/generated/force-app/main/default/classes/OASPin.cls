/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Pin
 */
public class OASPin implements OAS.MappedProperties {
    /**
     * Get id
     * @return id
     */
    public String id { get; private set; }

    /**
     * Get createdAt
     * @return createdAt
     */
    public Datetime createdAt { get; private set; }

    /**
     * Get link
     * @return link
     */
    public String link { get; set; }

    /**
     * Get title
     * @return title
     */
    public String title { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Dominant pin color. Hex number, e.g. \"#6E7874\".
     * @return dominantColor
     */
    public String dominantColor { get; set; }

    /**
     * Get altText
     * @return altText
     */
    public String altText { get; set; }

    /**
     * Get creativeType
     * @return creativeType
     */
    public OASCreativeType creativeType { get; private set; }

    /**
     * The board to which this Pin belongs.
     * @return boardId
     */
    public String boardId { get; set; }

    /**
     * The board section to which this Pin belongs.
     * @return boardSectionId
     */
    public String boardSectionId { get; set; }

    /**
     * Get boardOwner
     * @return boardOwner
     */
    public OASBoardOwner boardOwner { get; private set; }

    /**
     * Whether the "operation user_account" is the Pin owner.
     * @return isOwner
     */
    public Boolean isOwner { get; private set; }

    /**
     * Get media
     * @return media
     */
    public OASPinMedia media { get; private set; }

    /**
     * Get mediaSource
     * @return mediaSource
     */
    public OASPinMediaSource mediaSource { get; set; }

    /**
     * The source pin id if this pin was saved from another pin. <a href="https://help.pinterest.com/article/save-pins-on-pinterest">Learn more</a>.
     * @return parentPinId
     */
    public String parentPinId { get; set; }

    /**
     * Whether the Pin is standard or not. See documentation on <a href="/docs/api-features/content-overview/">Changes to Pin creation</a> for more information.
     * @return isStandard
     */
    public Boolean isStandard { get; set; }

    /**
     * Whether the Pin has been promoted or not.
     * @return hasBeenPromoted
     */
    public Boolean hasBeenPromoted { get; private set; }

    /**
     * Private note for this Pin. <a href="https://help.pinterest.com/en/article/add-notes-to-your-pins">Learn more</a>.
     * @return note
     */
    public String note { get; set; }

    /**
     * Pin metrics with associated time intervals if any.
     * @return pinMetrics
     */
    public Object pinMetrics { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'created_at' => 'createdAt',
        'dominant_color' => 'dominantColor',
        'alt_text' => 'altText',
        'creative_type' => 'creativeType',
        'board_id' => 'boardId',
        'board_section_id' => 'boardSectionId',
        'board_owner' => 'boardOwner',
        'is_owner' => 'isOwner',
        'media_source' => 'mediaSource',
        'parent_pin_id' => 'parentPinId',
        'is_standard' => 'isStandard',
        'has_been_promoted' => 'hasBeenPromoted',
        'pin_metrics' => 'pinMetrics'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPin getExample() {
        OASPin pin = new OASPin();
          pin.id = '813744226420795884';
          pin.createdAt = Datetime.newInstanceGmt(2020, 1, 1, 20, 10, 40);
          pin.link = 'https://www.pinterest.com/';
          pin.title = '';
          pin.description = '';
          pin.dominantColor = '#6E7874';
          pin.altText = '';
          pin.creativeType = OASCreativeType.getExample();
          pin.boardId = '';
          pin.boardSectionId = '';
          pin.boardOwner = OASBoardOwner.getExample();
          pin.isOwner = true;
          pin.media = OASPinMedia.getExample();
          pin.mediaSource = OASPinMediaSource.getExample();
          pin.parentPinId = '';
          pin.isStandard = true;
          pin.hasBeenPromoted = true;
          pin.note = '';
          pin.pinMetrics = {"90d":{"pin_click":7,"impression":2,"clickthrough":3},"lifetime_metrics":{"pin_click":7,"impression":2,"clickthrough":3,"reaction":10,"comment":2}};
        return pin;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPin) {           
            OASPin pin = (OASPin) obj;
            return this.id == pin.id
                && this.createdAt == pin.createdAt
                && this.link == pin.link
                && this.title == pin.title
                && this.description == pin.description
                && this.dominantColor == pin.dominantColor
                && this.altText == pin.altText
                && this.creativeType == pin.creativeType
                && this.boardId == pin.boardId
                && this.boardSectionId == pin.boardSectionId
                && this.boardOwner == pin.boardOwner
                && this.isOwner == pin.isOwner
                && this.media == pin.media
                && this.mediaSource == pin.mediaSource
                && this.parentPinId == pin.parentPinId
                && this.isStandard == pin.isStandard
                && this.hasBeenPromoted == pin.hasBeenPromoted
                && this.note == pin.note
                && this.pinMetrics == pin.pinMetrics;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (createdAt == null ? 0 : System.hashCode(createdAt));
        hashCode = (17 * hashCode) + (link == null ? 0 : System.hashCode(link));
        hashCode = (17 * hashCode) + (title == null ? 0 : System.hashCode(title));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (dominantColor == null ? 0 : System.hashCode(dominantColor));
        hashCode = (17 * hashCode) + (altText == null ? 0 : System.hashCode(altText));
        hashCode = (17 * hashCode) + (creativeType == null ? 0 : System.hashCode(creativeType));
        hashCode = (17 * hashCode) + (boardId == null ? 0 : System.hashCode(boardId));
        hashCode = (17 * hashCode) + (boardSectionId == null ? 0 : System.hashCode(boardSectionId));
        hashCode = (17 * hashCode) + (boardOwner == null ? 0 : System.hashCode(boardOwner));
        hashCode = (17 * hashCode) + (isOwner == null ? 0 : System.hashCode(isOwner));
        hashCode = (17 * hashCode) + (media == null ? 0 : System.hashCode(media));
        hashCode = (17 * hashCode) + (mediaSource == null ? 0 : System.hashCode(mediaSource));
        hashCode = (17 * hashCode) + (parentPinId == null ? 0 : System.hashCode(parentPinId));
        hashCode = (17 * hashCode) + (isStandard == null ? 0 : System.hashCode(isStandard));
        hashCode = (17 * hashCode) + (hasBeenPromoted == null ? 0 : System.hashCode(hasBeenPromoted));
        hashCode = (17 * hashCode) + (note == null ? 0 : System.hashCode(note));
        hashCode = (17 * hashCode) + (pinMetrics == null ? 0 : System.hashCode(pinMetrics));
        return hashCode;
    }
}

