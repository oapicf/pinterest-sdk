/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASTermsApi {
    OASClient client;

    public OASTermsApi(OASClient client) {
        this.client = client;
    }

    public OASTermsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * List related terms
     * Get a list of terms logically related to each input term. &lt;p/&gt;\nExample: the term \&#39;workout\&#39; would list related terms like \&#39;one song workout\&#39;, \&#39;yoga workout\&#39;, \&#39;workout motivation\&#39;, etc.
     * @param terms List of input terms. (required)
     * @return OASRelatedTerms
     * @throws OAS.ApiException if fails to make API call
     */
    public OASRelatedTerms termsRelatedList(Map<String, Object> params) {
        client.assertNotNull(params.get('terms'), 'terms');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('terms', (List<String>) params.get('terms')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASRelatedTerms) client.invoke(
            'GET', '/terms/related', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASRelatedTerms.class
        );
    }
    /**
     * List suggested terms
     * Get popular search terms that begin with your input term. &lt;p/&gt;\nExample: \&#39;sport\&#39; would return popular terms like \&#39;sports bar\&#39; and \&#39;sportswear\&#39;, but not \&#39;motor sports\&#39; since the phrase does not begin with the given term.
     * @param term Input term. (required)
     * @param r_limit Max suggested terms to return. (optional, default to 4)
     * @return List<String>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<String> termsSuggestedList(Map<String, Object> params) {
        client.assertNotNull(params.get('term'), 'term');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('term', (String) params.get('term')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<String>) client.invoke(
            'GET', '/terms/suggested', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<String>.class
        );
    }
}
