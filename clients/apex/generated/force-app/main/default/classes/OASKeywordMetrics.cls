/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Keyword metrics JSON
 */
public class OASKeywordMetrics implements OAS.MappedProperties {
    /**
     * Average cost per click
     * @return avgCpcInMicroCurrency
     */
    public Double avgCpcInMicroCurrency { get; set; }

    /**
     * Keyword\'s search frequency. This value is based on keyword frequency in pepsi client response
     * @return keywordQueryVolume
     */
    public String keywordQueryVolume { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'avg_cpc_in_micro_currency' => 'avgCpcInMicroCurrency',
        'keyword_query_volume' => 'keywordQueryVolume'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'avg_cpc_in_micro_currency' => 'avgCpcInMicroCurrency',
        'keyword_query_volume' => 'keywordQueryVolume'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASKeywordMetrics getExample() {
        OASKeywordMetrics keywordMetrics = new OASKeywordMetrics();
          keywordMetrics.avgCpcInMicroCurrency = 100000;
          keywordMetrics.keywordQueryVolume = '5M+';
        return keywordMetrics;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASKeywordMetrics) {           
            OASKeywordMetrics keywordMetrics = (OASKeywordMetrics) obj;
            return this.avgCpcInMicroCurrency == keywordMetrics.avgCpcInMicroCurrency
                && this.keywordQueryVolume == keywordMetrics.keywordQueryVolume;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (avgCpcInMicroCurrency == null ? 0 : System.hashCode(avgCpcInMicroCurrency));
        hashCode = (17 * hashCode) + (keywordQueryVolume == null ? 0 : System.hashCode(keywordQueryVolume));
        return hashCode;
    }
}

