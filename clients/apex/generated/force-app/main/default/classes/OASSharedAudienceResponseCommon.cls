/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSharedAudienceResponseCommon
 */
public class OASSharedAudienceResponseCommon implements OAS.MappedProperties {
    /**
     * Audience ID that was shared
     * @return audienceId
     */
    public String audienceId { get; set; }

    /**
     * Get permissions
     * @return permissions
     */
    public List<OASRole> permissions { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'audience_id' => 'audienceId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSharedAudienceResponseCommon() {
        permissions = new List<OASRole>();
    }

    public static OASSharedAudienceResponseCommon getExample() {
        OASSharedAudienceResponseCommon sharedAudienceResponseCommon = new OASSharedAudienceResponseCommon();
          sharedAudienceResponseCommon.audienceId = '2542621871096';
          sharedAudienceResponseCommon.permissions = new List<OASRole>{OASRole.getExample()};
        return sharedAudienceResponseCommon;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSharedAudienceResponseCommon) {           
            OASSharedAudienceResponseCommon sharedAudienceResponseCommon = (OASSharedAudienceResponseCommon) obj;
            return this.audienceId == sharedAudienceResponseCommon.audienceId
                && this.permissions == sharedAudienceResponseCommon.permissions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (audienceId == null ? 0 : System.hashCode(audienceId));
        hashCode = (17 * hashCode) + (permissions == null ? 0 : System.hashCode(permissions));
        return hashCode;
    }
}

