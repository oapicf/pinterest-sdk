/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASSSIOCreateInsertionOrderRequest
 */
public class OASSSIOCreateInsertionOrderRequest implements OASSSIOInsertionOrderCommon, OAS.MappedProperties {
    /**
     * Starting date of time period. Format: YYYY-MM-DD
     * @return startDate
     */
    public String startDate { get; set; }

    /**
     * End date of time period. Format: YYYY-MM-DD
     * @return endDate
     */
    public String endDate { get; set; }

    /**
     * The po number
     * @return poNumber
     */
    public String poNumber { get; set; }

    /**
     * If Budget order line, the budget amount.
     * @return budgetAmount
     */
    public Double budgetAmount { get; set; }

    /**
     * The billing contact first name
     * @return billingContactFirstname
     */
    public String billingContactFirstname { get; set; }

    /**
     * The billing contact last name
     * @return billingContactLastname
     */
    public String billingContactLastname { get; set; }

    /**
     * The billing contact email
     * @return billingContactEmail
     */
    public String billingContactEmail { get; set; }

    /**
     * The media contact first name
     * @return mediaContactFirstname
     */
    public String mediaContactFirstname { get; set; }

    /**
     * The media contact last name
     * @return mediaContactLastname
     */
    public String mediaContactLastname { get; set; }

    /**
     * The media contact email
     * @return mediaContactEmail
     */
    public String mediaContactEmail { get; set; }

    /**
     * URL link for agency
     * @return agencyLink
     */
    public String agencyLink { get; set; }

    /**
     * The email of user submitting the insertion order
     * @return userEmail
     */
    public String userEmail { get; set; }

    /**
     * The UTC timestamp (to the nearest sec) of when terms were accepted
     * @return acceptedTermsTime
     */
    public Integer acceptedTermsTime { get; set; }

    /**
     * The pmp id
     * @return pmpId
     */
    public String pmpId { get; set; }

    /**
     * The order name
     * @return orderName
     */
    public String orderName { get; set; }

    /**
     * Type can be Budget or Perpetual
     */
    public enum OrderLineTypeEnum {
        BUDGET,
        PERPETUALS
    }

    /**
     * Type can be Budget or Perpetual
     * @return orderLineType
     */
    public OrderLineTypeEnum orderLineType { get; set; }

    /**
     * The SFDC id for the terms
     * @return acceptedTermsId
     */
    public String acceptedTermsId { get; set; }

    /**
     * The bill-to company id
     * @return billtoCompanyId
     */
    public String billtoCompanyId { get; set; }

    /**
     * The bill-to business address id
     * @return billtoBusinessAddressId
     */
    public String billtoBusinessAddressId { get; set; }

    /**
     * The bill-to billing address id
     * @return billtoBillingAddressId
     */
    public String billtoBillingAddressId { get; set; }

    /**
     * If Ongoing (perpetual) order line, the estimated monthly spend
     * @return estimatedMonthlySpend
     */
    public Double estimatedMonthlySpend { get; set; }

    /**
     * Get currencyInfo
     * @return currencyInfo
     */
    public OASCurrency currencyInfo { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'po_number' => 'poNumber',
        'budget_amount' => 'budgetAmount',
        'billing_contact_firstname' => 'billingContactFirstname',
        'billing_contact_lastname' => 'billingContactLastname',
        'billing_contact_email' => 'billingContactEmail',
        'media_contact_firstname' => 'mediaContactFirstname',
        'media_contact_lastname' => 'mediaContactLastname',
        'media_contact_email' => 'mediaContactEmail',
        'agency_link' => 'agencyLink',
        'user_email' => 'userEmail',
        'accepted_terms_time' => 'acceptedTermsTime',
        'pmp_id' => 'pmpId',
        'order_name' => 'orderName',
        'order_line_type' => 'orderLineType',
        'accepted_terms_id' => 'acceptedTermsId',
        'billto_company_id' => 'billtoCompanyId',
        'billto_business_address_id' => 'billtoBusinessAddressId',
        'billto_billing_address_id' => 'billtoBillingAddressId',
        'estimated_monthly_spend' => 'estimatedMonthlySpend',
        'currency_info' => 'currencyInfo'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASSSIOCreateInsertionOrderRequest getExample() {
        OASSSIOCreateInsertionOrderRequest ssIOCreateInsertionOrderRequest = new OASSSIOCreateInsertionOrderRequest();
          ssIOCreateInsertionOrderRequest.startDate = '2020-12-20';
          ssIOCreateInsertionOrderRequest.endDate = '2020-12-20';
          ssIOCreateInsertionOrderRequest.poNumber = '';
          ssIOCreateInsertionOrderRequest.budgetAmount = 5000000;
          ssIOCreateInsertionOrderRequest.billingContactFirstname = '';
          ssIOCreateInsertionOrderRequest.billingContactLastname = '';
          ssIOCreateInsertionOrderRequest.billingContactEmail = 'test@example';
          ssIOCreateInsertionOrderRequest.mediaContactFirstname = '';
          ssIOCreateInsertionOrderRequest.mediaContactLastname = '';
          ssIOCreateInsertionOrderRequest.mediaContactEmail = 'test@example';
          ssIOCreateInsertionOrderRequest.agencyLink = '';
          ssIOCreateInsertionOrderRequest.userEmail = 'test@example';
          ssIOCreateInsertionOrderRequest.acceptedTermsTime = 0;
          ssIOCreateInsertionOrderRequest.pmpId = '';
          ssIOCreateInsertionOrderRequest.orderName = '';
          ssIOCreateInsertionOrderRequest.orderLineType = OrderLineTypeEnum.BUDGET;
          ssIOCreateInsertionOrderRequest.acceptedTermsId = '';
          ssIOCreateInsertionOrderRequest.billtoCompanyId = '';
          ssIOCreateInsertionOrderRequest.billtoBusinessAddressId = '';
          ssIOCreateInsertionOrderRequest.billtoBillingAddressId = '';
          ssIOCreateInsertionOrderRequest.estimatedMonthlySpend = 1.3579;
          ssIOCreateInsertionOrderRequest.currencyInfo = OASCurrency.getExample();
        return ssIOCreateInsertionOrderRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSSIOCreateInsertionOrderRequest) {           
            OASSSIOCreateInsertionOrderRequest ssIOCreateInsertionOrderRequest = (OASSSIOCreateInsertionOrderRequest) obj;
            return this.startDate == ssIOCreateInsertionOrderRequest.startDate
                && this.endDate == ssIOCreateInsertionOrderRequest.endDate
                && this.poNumber == ssIOCreateInsertionOrderRequest.poNumber
                && this.budgetAmount == ssIOCreateInsertionOrderRequest.budgetAmount
                && this.billingContactFirstname == ssIOCreateInsertionOrderRequest.billingContactFirstname
                && this.billingContactLastname == ssIOCreateInsertionOrderRequest.billingContactLastname
                && this.billingContactEmail == ssIOCreateInsertionOrderRequest.billingContactEmail
                && this.mediaContactFirstname == ssIOCreateInsertionOrderRequest.mediaContactFirstname
                && this.mediaContactLastname == ssIOCreateInsertionOrderRequest.mediaContactLastname
                && this.mediaContactEmail == ssIOCreateInsertionOrderRequest.mediaContactEmail
                && this.agencyLink == ssIOCreateInsertionOrderRequest.agencyLink
                && this.userEmail == ssIOCreateInsertionOrderRequest.userEmail
                && this.acceptedTermsTime == ssIOCreateInsertionOrderRequest.acceptedTermsTime
                && this.pmpId == ssIOCreateInsertionOrderRequest.pmpId
                && this.orderName == ssIOCreateInsertionOrderRequest.orderName
                && this.orderLineType == ssIOCreateInsertionOrderRequest.orderLineType
                && this.acceptedTermsId == ssIOCreateInsertionOrderRequest.acceptedTermsId
                && this.billtoCompanyId == ssIOCreateInsertionOrderRequest.billtoCompanyId
                && this.billtoBusinessAddressId == ssIOCreateInsertionOrderRequest.billtoBusinessAddressId
                && this.billtoBillingAddressId == ssIOCreateInsertionOrderRequest.billtoBillingAddressId
                && this.estimatedMonthlySpend == ssIOCreateInsertionOrderRequest.estimatedMonthlySpend
                && this.currencyInfo == ssIOCreateInsertionOrderRequest.currencyInfo;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (startDate == null ? 0 : System.hashCode(startDate));
        hashCode = (17 * hashCode) + (endDate == null ? 0 : System.hashCode(endDate));
        hashCode = (17 * hashCode) + (poNumber == null ? 0 : System.hashCode(poNumber));
        hashCode = (17 * hashCode) + (budgetAmount == null ? 0 : System.hashCode(budgetAmount));
        hashCode = (17 * hashCode) + (billingContactFirstname == null ? 0 : System.hashCode(billingContactFirstname));
        hashCode = (17 * hashCode) + (billingContactLastname == null ? 0 : System.hashCode(billingContactLastname));
        hashCode = (17 * hashCode) + (billingContactEmail == null ? 0 : System.hashCode(billingContactEmail));
        hashCode = (17 * hashCode) + (mediaContactFirstname == null ? 0 : System.hashCode(mediaContactFirstname));
        hashCode = (17 * hashCode) + (mediaContactLastname == null ? 0 : System.hashCode(mediaContactLastname));
        hashCode = (17 * hashCode) + (mediaContactEmail == null ? 0 : System.hashCode(mediaContactEmail));
        hashCode = (17 * hashCode) + (agencyLink == null ? 0 : System.hashCode(agencyLink));
        hashCode = (17 * hashCode) + (userEmail == null ? 0 : System.hashCode(userEmail));
        hashCode = (17 * hashCode) + (acceptedTermsTime == null ? 0 : System.hashCode(acceptedTermsTime));
        hashCode = (17 * hashCode) + (pmpId == null ? 0 : System.hashCode(pmpId));
        hashCode = (17 * hashCode) + (orderName == null ? 0 : System.hashCode(orderName));
        hashCode = (17 * hashCode) + (orderLineType == null ? 0 : System.hashCode(orderLineType));
        hashCode = (17 * hashCode) + (acceptedTermsId == null ? 0 : System.hashCode(acceptedTermsId));
        hashCode = (17 * hashCode) + (billtoCompanyId == null ? 0 : System.hashCode(billtoCompanyId));
        hashCode = (17 * hashCode) + (billtoBusinessAddressId == null ? 0 : System.hashCode(billtoBusinessAddressId));
        hashCode = (17 * hashCode) + (billtoBillingAddressId == null ? 0 : System.hashCode(billtoBillingAddressId));
        hashCode = (17 * hashCode) + (estimatedMonthlySpend == null ? 0 : System.hashCode(estimatedMonthlySpend));
        hashCode = (17 * hashCode) + (currencyInfo == null ? 0 : System.hashCode(currencyInfo));
        return hashCode;
    }
}

