/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCustomerList
 */
public class OASCustomerList implements OAS.MappedProperties {
    /**
     * Associated ad account ID.
     * @return adAccountId
     */
    public String adAccountId { get; set; }

    /**
     * Creation time. Unix timestamp in seconds.
     * @return createdTime
     */
    public Double createdTime { get; set; }

    /**
     * Customer list ID.
     * @return id
     */
    public String id { get; set; }

    /**
     * Customer list name.
     * @return name
     */
    public String name { get; set; }

    /**
     * Total number of list updates.  List creation counts as one batch. Each <a href="/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT">Append</a> or <a href="/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
     * @return numBatches
     */
    public Double numBatches { get; set; }

    /**
     * Number of removed user records. In a <a href="/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT">Remove API</a> call, this counter increases even if the user is not found in the list.
     * @return numRemovedUserRecords
     */
    public Double numRemovedUserRecords { get; set; }

    /**
     * Number of uploaded user records. In an <a href="/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT">Append API</a> call, this counter increases even if the uploaded user is already in the list.
     * @return numUploadedUserRecords
     */
    public Double numUploadedUserRecords { get; set; }

    /**
     * Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
     */
    public enum StatusEnum {
        PROCESSING,
        READY,
        TOO_SMALL,
        UPLOADING
    }

    /**
     * Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
     * @return status
     */
    public StatusEnum status { get; set; }

    /**
     * Always "customerlist".
     * @return type
     */
    public String type { get; set; }

    /**
     * Last update time. Unix timestamp in seconds.
     * @return updatedTime
     */
    public Double updatedTime { get; set; }

    /**
     * Customer list errors
     * @return exceptions
     */
    public Object exceptions { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'created_time' => 'createdTime',
        'num_batches' => 'numBatches',
        'num_removed_user_records' => 'numRemovedUserRecords',
        'num_uploaded_user_records' => 'numUploadedUserRecords',
        'updated_time' => 'updatedTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'created_time' => 'createdTime',
        'num_batches' => 'numBatches',
        'num_removed_user_records' => 'numRemovedUserRecords',
        'num_uploaded_user_records' => 'numUploadedUserRecords',
        'updated_time' => 'updatedTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'created_time' => 'createdTime',
        'num_batches' => 'numBatches',
        'num_removed_user_records' => 'numRemovedUserRecords',
        'num_uploaded_user_records' => 'numUploadedUserRecords',
        'updated_time' => 'updatedTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'created_time' => 'createdTime',
        'num_batches' => 'numBatches',
        'num_removed_user_records' => 'numRemovedUserRecords',
        'num_uploaded_user_records' => 'numUploadedUserRecords',
        'updated_time' => 'updatedTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'created_time' => 'createdTime',
        'num_batches' => 'numBatches',
        'num_removed_user_records' => 'numRemovedUserRecords',
        'num_uploaded_user_records' => 'numUploadedUserRecords',
        'updated_time' => 'updatedTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'created_time' => 'createdTime',
        'num_batches' => 'numBatches',
        'num_removed_user_records' => 'numRemovedUserRecords',
        'num_uploaded_user_records' => 'numUploadedUserRecords',
        'updated_time' => 'updatedTime'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCustomerList getExample() {
        OASCustomerList customerList = new OASCustomerList();
          customerList.adAccountId = '549756359984';
          customerList.createdTime = 1452208622;
          customerList.id = '643';
          customerList.name = 'The Glengarry Glen Ross leads';
          customerList.numBatches = 2;
          customerList.numRemovedUserRecords = 0;
          customerList.numUploadedUserRecords = 11;
          customerList.status = StatusEnum.PROCESSING;
          customerList.type = 'customerlist';
          customerList.updatedTime = 1461269616;
          customerList.exceptions = null;
        return customerList;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCustomerList) {           
            OASCustomerList customerList = (OASCustomerList) obj;
            return this.adAccountId == customerList.adAccountId
                && this.createdTime == customerList.createdTime
                && this.id == customerList.id
                && this.name == customerList.name
                && this.numBatches == customerList.numBatches
                && this.numRemovedUserRecords == customerList.numRemovedUserRecords
                && this.numUploadedUserRecords == customerList.numUploadedUserRecords
                && this.status == customerList.status
                && this.type == customerList.type
                && this.updatedTime == customerList.updatedTime
                && this.exceptions == customerList.exceptions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (adAccountId == null ? 0 : System.hashCode(adAccountId));
        hashCode = (17 * hashCode) + (createdTime == null ? 0 : System.hashCode(createdTime));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (numBatches == null ? 0 : System.hashCode(numBatches));
        hashCode = (17 * hashCode) + (numRemovedUserRecords == null ? 0 : System.hashCode(numRemovedUserRecords));
        hashCode = (17 * hashCode) + (numUploadedUserRecords == null ? 0 : System.hashCode(numUploadedUserRecords));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (updatedTime == null ? 0 : System.hashCode(updatedTime));
        hashCode = (17 * hashCode) + (exceptions == null ? 0 : System.hashCode(exceptions));
        return hashCode;
    }
}

