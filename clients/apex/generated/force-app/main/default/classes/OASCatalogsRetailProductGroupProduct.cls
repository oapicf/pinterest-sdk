/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Product counts for a Retail CatalogsProductGroup
 */
public class OASCatalogsRetailProductGroupProduct implements OAS.MappedProperties {
    /**
     * Gets or Sets catalogType
     */
    public enum CatalogTypeEnum {
        RETAIL
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    public CatalogTypeEnum catalogType { get; set; }

    /**
     * Get inStock
     * minimum: 0
     * @return inStock
     */
    public Double inStock { get; set; }

    /**
     * Get outOfStock
     * minimum: 0
     * @return outOfStock
     */
    public Double outOfStock { get; set; }

    /**
     * Get preorder
     * minimum: 0
     * @return preorder
     */
    public Double preorder { get; set; }

    /**
     * Get total
     * minimum: 0
     * @return total
     */
    public Double total { get; set; }

    /**
     * Get videos
     * minimum: 0
     * @return videos
     */
    public Double videos { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'in_stock' => 'inStock',
        'out_of_stock' => 'outOfStock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'in_stock' => 'inStock',
        'out_of_stock' => 'outOfStock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'catalog_type' => 'catalogType',
        'in_stock' => 'inStock',
        'out_of_stock' => 'outOfStock'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCatalogsRetailProductGroupProduct getExample() {
        OASCatalogsRetailProductGroupProduct catalogsRetailProductGroupProductCounts = new OASCatalogsRetailProductGroupProduct();
          catalogsRetailProductGroupProductCounts.catalogType = CatalogTypeEnum.RETAIL;
          catalogsRetailProductGroupProductCounts.inStock = 1.3579;
          catalogsRetailProductGroupProductCounts.outOfStock = 1.3579;
          catalogsRetailProductGroupProductCounts.preorder = 1.3579;
          catalogsRetailProductGroupProductCounts.total = 1.3579;
          catalogsRetailProductGroupProductCounts.videos = 1.3579;
        return catalogsRetailProductGroupProductCounts;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsRetailProductGroupProduct) {           
            OASCatalogsRetailProductGroupProduct catalogsRetailProductGroupProductCounts = (OASCatalogsRetailProductGroupProduct) obj;
            return this.catalogType == catalogsRetailProductGroupProductCounts.catalogType
                && this.inStock == catalogsRetailProductGroupProductCounts.inStock
                && this.outOfStock == catalogsRetailProductGroupProductCounts.outOfStock
                && this.preorder == catalogsRetailProductGroupProductCounts.preorder
                && this.total == catalogsRetailProductGroupProductCounts.total
                && this.videos == catalogsRetailProductGroupProductCounts.videos;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (catalogType == null ? 0 : System.hashCode(catalogType));
        hashCode = (17 * hashCode) + (inStock == null ? 0 : System.hashCode(inStock));
        hashCode = (17 * hashCode) + (outOfStock == null ? 0 : System.hashCode(outOfStock));
        hashCode = (17 * hashCode) + (preorder == null ? 0 : System.hashCode(preorder));
        hashCode = (17 * hashCode) + (total == null ? 0 : System.hashCode(total));
        hashCode = (17 * hashCode) + (videos == null ? 0 : System.hashCode(videos));
        return hashCode;
    }
}

