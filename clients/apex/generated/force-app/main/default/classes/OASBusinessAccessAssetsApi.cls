/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASBusinessAccessAssetsApi {
    OASClient client;

    public OASBusinessAccessAssetsApi(OASClient client) {
        this.client = client;
    }

    public OASBusinessAccessAssetsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a new asset group.
     * Create a new asset group with the specified parameters.\n- An &lt;a href&#x3D;&quot;https://help.pinterest.com/en/business/article/asset-groups&quot;&gt;asset group&lt;/a&gt; is a custom group of assets based on how youâ€™d like to manage your accounts.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSCreateAssetGroupBody  (required)
     * @return OASCreateAssetGroupResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCreateAssetGroupResponse assetGroupCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSCreateAssetGroupBody'), 'oaSCreateAssetGroupBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCreateAssetGroupResponse) client.invoke(
            'POST', '/businesses/{business_id}/asset_groups',
            (OASCreateAssetGroupBody) params.get('oaSCreateAssetGroupBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASCreateAssetGroupResponse.class
        );
    }
    /**
     * Delete asset groups.
     * Delete a batch of asset groups.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSDeleteAssetGroupBody  (required)
     * @return OASDeleteAssetGroupResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteAssetGroupResponse assetGroupDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteAssetGroupBody'), 'oaSDeleteAssetGroupBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteAssetGroupResponse) client.invoke(
            'DELETE', '/businesses/{business_id}/asset_groups',
            (OASDeleteAssetGroupBody) params.get('oaSDeleteAssetGroupBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASDeleteAssetGroupResponse.class
        );
    }
    /**
     * Update asset groups.
     * Update a batch of asset groups with the specified parameters.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSUpdateAssetGroupBody  (required)
     * @return OASUpdateAssetGroupResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateAssetGroupResponse assetGroupUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateAssetGroupBody'), 'oaSUpdateAssetGroupBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateAssetGroupResponse) client.invoke(
            'PATCH', '/businesses/{business_id}/asset_groups',
            (OASUpdateAssetGroupBody) params.get('oaSUpdateAssetGroupBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASUpdateAssetGroupResponse.class
        );
    }
    /**
     * Get members with access to asset
     * Get all the members the requesting business has granted access to on the given asset.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param assetId Unique identifier of a business asset. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @return OASBusinessAssetMembersGet200Respons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessAssetMembersGet200Respons businessAssetMembersGet(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('assetId'), 'assetId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessAssetMembersGet200Respons) client.invoke(
            'GET', '/businesses/{business_id}/assets/{asset_id}/members', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId'),
                'asset_id' => (String) params.get('assetId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASBusinessAssetMembersGet200Respons.class
        );
    }
    /**
     * Get partners with access to asset
     * Get all the partners the requesting business has granted access to on the given asset.\nNote: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with\nyou cannot be shared with a different partner.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param assetId Unique identifier of a business asset. (required)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASBusinessAssetPartnersGet200Respon
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessAssetPartnersGet200Respon businessAssetPartnersGet(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('assetId'), 'assetId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessAssetPartnersGet200Respon) client.invoke(
            'GET', '/businesses/{business_id}/assets/{asset_id}/partners', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId'),
                'asset_id' => (String) params.get('assetId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASBusinessAssetPartnersGet200Respon.class
        );
    }
    /**
     * List business assets
     * Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param permissions A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned. (optional, default to new List<OASPermissionsWithOwner>())
     * @param childAssetId A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child. (optional)
     * @param assetGroupId An asset group unique identifier. Used to fetch assets contained within the specified asset group. (optional)
     * @param assetType A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to AD_ACCOUNT)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASBusinessAssetsGet200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessAssetsGet200Response businessAssetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParams('permissions', (List<OASPermissionsWithOwner>) params.get('permissions')));
        query.addAll(client.makeParam('child_asset_id', (String) params.get('childAssetId')));
        query.addAll(client.makeParam('asset_group_id', (String) params.get('assetGroupId')));
        query.addAll(client.makeParam('asset_type', (String) params.get('assetType')));
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessAssetsGet200Response) client.invoke(
            'GET', '/businesses/{business_id}/assets', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASBusinessAssetsGet200Response.class
        );
    }
    /**
     * Get assets assigned to a member
     * Get assets on which you assigned asset permissions to the given member. Can be used to:\n- get all assets, regardless of asset type or\n- get assets of one asset type by using the asset_type query.\nThe return response will include the permissions the member has to that asset and the asset type.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param memberId The member id to fetch assets for. (required)
     * @param assetType A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to AD_ACCOUNT)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASBusinessMemberAssetsGet200Respons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessMemberAssetsGet200Respons businessMemberAssetsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('memberId'), 'memberId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('asset_type', (String) params.get('assetType')));
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessMemberAssetsGet200Respons) client.invoke(
            'GET', '/businesses/{business_id}/members/{member_id}/assets', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId'),
                'member_id' => (String) params.get('memberId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASBusinessMemberAssetsGet200Respons.class
        );
    }
    /**
     * Delete member access to asset
     * Terminate multiple members\&#39; access to an asset.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSBusinessMembersAssetAccessDeleteR List member assset permissions to delete. (required)
     * @return OASDeleteMemberAccessResultsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteMemberAccessResultsResponse businessMembersAssetAccessDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSBusinessMembersAssetAccessDeleteR'), 'oaSBusinessMembersAssetAccessDeleteR');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteMemberAccessResultsResponse) client.invoke(
            'DELETE', '/businesses/{business_id}/members/assets/access',
            (OASBusinessMembersAssetAccessDeleteR) params.get('oaSBusinessMembersAssetAccessDeleteR'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASDeleteMemberAccessResultsResponse.class
        );
    }
    /**
     * Assign/Update member asset permissions
     * Grant multiple members access to assets and/or update multiple member\&#39;s exisiting permissions to an asset.\nNote: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.\n
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSUpdateMemberAssetAccessBody List of member asset permissions to create or update. (required)
     * @return OASUpdateMemberAssetsResultsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateMemberAssetsResultsResponse businessMembersAssetAccessUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateMemberAssetAccessBody'), 'oaSUpdateMemberAssetAccessBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateMemberAssetsResultsResponse) client.invoke(
            'PATCH', '/businesses/{business_id}/members/assets/access',
            (OASUpdateMemberAssetAccessBody) params.get('oaSUpdateMemberAssetAccessBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASUpdateMemberAssetsResultsResponse.class
        );
    }
    /**
     * Get assets assigned to a partner or assets assigned by a partner
     * Can be used to get the business assets your partner has granted you access to or the business assets you have\ngranted your partner access to. If you specify:\n- partner_type&#x3D;INTERNAL, you will retrieve your business assets that the partner has access to.\n- partner_type&#x3D;EXTERNAL, you will retrieve the partner\&#39;s business assets that the partner has granted you access to.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param partnerId The partner id to be bound to the Business (required)
     * @param partnerType Specifies whether to fetch internal or external (shared) partners.\nIf partner_type&#x3D;INTERNAL, the asset being queried is for accesses the partner has to your business assets.&lt;br&gt;\nIf partner_type&#x3D;EXTERNAL, the asset being queried is for the accesses you have to the partner\&#39;s business asset. (optional)
     * @param assetType A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to AD_ACCOUNT)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASBusinessPartnerAssetAccessGet200R
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBusinessPartnerAssetAccessGet200R businessPartnerAssetAccessGet(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('partnerId'), 'partnerId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('partner_type', (OASPartnerType) params.get('partnerType')));
        query.addAll(client.makeParam('asset_type', (String) params.get('assetType')));
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBusinessPartnerAssetAccessGet200R) client.invoke(
            'GET', '/businesses/{business_id}/partners/{partner_id}/assets', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId'),
                'partner_id' => (String) params.get('partnerId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASBusinessPartnerAssetAccessGet200R.class
        );
    }
    /**
     * Delete partner access to asset
     * Terminate multiple partners\&#39; access to an asset. If\n- partner_type&#x3D;INTERNAL: You will terminate a partner\&#39;s asset access to your business assets.\n- partner_type&#x3D;EXTERNAL: You will terminate your own access to your partner\&#39;s business assets.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSDeletePartnerAssetAccessBody  (required)
     * @return OASDeletePartnerAssetsResultsRespons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeletePartnerAssetsResultsRespons deletePartnerAssetAccessHandlerImpl(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeletePartnerAssetAccessBody'), 'oaSDeletePartnerAssetAccessBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeletePartnerAssetsResultsRespons) client.invoke(
            'DELETE', '/businesses/{business_id}/partners/assets',
            (OASDeletePartnerAssetAccessBody) params.get('oaSDeletePartnerAssetAccessBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASDeletePartnerAssetsResultsRespons.class
        );
    }
    /**
     * Assign/Update partner asset permissions
     * Grant multiple partners access to assets and/or update multiple partner\&#39;s exisiting permissions to an asset.\nIf your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them.\nTo learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview\n\nNote: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be\napplicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of\nthe type PROFILE.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSUpdatePartnerAssetAccessBody A list of assets and permissions to assign to your partners. (required)
     * @return OASUpdatePartnerAssetsResultsRespons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdatePartnerAssetsResultsRespons updatePartnerAssetAccessHandlerImpl(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdatePartnerAssetAccessBody'), 'oaSUpdatePartnerAssetAccessBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdatePartnerAssetsResultsRespons) client.invoke(
            'PATCH', '/businesses/{business_id}/partners/assets',
            (OASUpdatePartnerAssetAccessBody) params.get('oaSUpdatePartnerAssetAccessBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASUpdatePartnerAssetsResultsRespons.class
        );
    }
}
