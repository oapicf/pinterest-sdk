/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASInterest
 */
public class OASInterest implements OAS.MappedProperties {
    /**
     * Get canonicalUrl
     * @return canonicalUrl
     */
    public String canonicalUrl { get; set; }

    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get key
     * @return key
     */
    public String key { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'canonical_url' => 'canonicalUrl'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASInterest getExample() {
        OASInterest interest = new OASInterest();
          interest.canonicalUrl = '';
          interest.id = '903972677830';
          interest.key = 'man cave';
          interest.name = 'Man cave';
        return interest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASInterest) {           
            OASInterest interest = (OASInterest) obj;
            return this.canonicalUrl == interest.canonicalUrl
                && this.id == interest.id
                && this.key == interest.key
                && this.name == interest.name;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (canonicalUrl == null ? 0 : System.hashCode(canonicalUrl));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (key == null ? 0 : System.hashCode(key));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        return hashCode;
    }
}

