/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Board media.
 */
public class OASBoardMedia implements OAS.MappedProperties {
    /**
     * Board cover image.
     * @return imageCoverUrl
     */
    public String imageCoverUrl { get; set; }

    /**
     * Board pin thumbnail urls.
     * @return pinThumbnailUrls
     */
    public List<String> pinThumbnailUrls { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'image_cover_url' => 'imageCoverUrl',
        'pin_thumbnail_urls' => 'pinThumbnailUrls'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'image_cover_url' => 'imageCoverUrl',
        'pin_thumbnail_urls' => 'pinThumbnailUrls'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASBoardMedia() {
        pinThumbnailUrls = new List<String>();
    }

    public static OASBoardMedia getExample() {
        OASBoardMedia boardMedia = new OASBoardMedia();
          boardMedia.imageCoverUrl = 'https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg';
          boardMedia.pinThumbnailUrls = new List<String>{''};
        return boardMedia;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASBoardMedia) {           
            OASBoardMedia boardMedia = (OASBoardMedia) obj;
            return this.imageCoverUrl == boardMedia.imageCoverUrl
                && this.pinThumbnailUrls == boardMedia.pinThumbnailUrls;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (imageCoverUrl == null ? 0 : System.hashCode(imageCoverUrl));
        hashCode = (17 * hashCode) + (pinThumbnailUrls == null ? 0 : System.hashCode(pinThumbnailUrls));
        return hashCode;
    }
}

