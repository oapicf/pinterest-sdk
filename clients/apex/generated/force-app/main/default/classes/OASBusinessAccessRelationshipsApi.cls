/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASBusinessAccessRelationshipsApi {
    OASClient client;

    public OASBusinessAccessRelationshipsApi(OASClient client) {
        this.client = client;
    }

    public OASBusinessAccessRelationshipsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Terminate business memberships
     * Terminate memberships between the specified members and your business.
     * @param businessId Business id (required)
     * @param oaSMembersToDeleteBody List of members with role to delete. (required)
     * @return OASDeletedMembersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeletedMembersResponse deleteBusinessMembership(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSMembersToDeleteBody'), 'oaSMembersToDeleteBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeletedMembersResponse) client.invoke(
            'DELETE', '/businesses/{business_id}/members',
            (OASMembersToDeleteBody) params.get('oaSMembersToDeleteBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASDeletedMembersResponse.class
        );
    }
    /**
     * Terminate business partnerships
     * Terminate partnerships between the specified partners and your business.\nNote: You may only batch terminate partners of the same partner type.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param oaSDeletePartnersRequest An object containing a &quot;partner_ids&quot; property composed of a list of partner IDs and a &quot;partners_type&quot; property specifying the type of partners to delete.\n (required)
     * @return OASDeletePartnersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeletePartnersResponse deleteBusinessPartners(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeletePartnersRequest'), 'oaSDeletePartnersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeletePartnersResponse) client.invoke(
            'DELETE', '/businesses/{business_id}/partners',
            (OASDeletePartnersRequest) params.get('oaSDeletePartnersRequest'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASDeletePartnersResponse.class
        );
    }
    /**
     * List business employers for user
     * Get all of the viewing user\&#39;s business employers.
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASGetBusinessEmployers200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBusinessEmployers200Response getBusinessEmployers(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBusinessEmployers200Response) client.invoke(
            'GET', '/businesses/employers', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASGetBusinessEmployers200Response.class
        );
    }
    /**
     * Get business members
     * Get all members of the specified business.\nThe return response will include the member\&#39;s business_role and assets they have access to if assets_summary&#x3D;TRUE
     * @param businessId Unique identifier of the requesting business. (required)
     * @param assetsSummary Include assets summary in the response if this is true.\n\nThe assets summary returns a dictionary representing a summary of the assets\nfor the business user ID, with information like the ad accounts and profiles\nthe user has permissions for and what those permissions are (optional, default to false)
     * @param businessRoles A list of business roles to filter the members by. Only members whose roles are in the specified roles will be returned. (optional, default to new List<OASMemberBusinessRole>())
     * @param memberIds A list of business members ids separated by comma. (optional)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return OASGetBusinessMembers200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBusinessMembers200Response getBusinessMembers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('assets_summary', (Boolean) params.get('assetsSummary')));
        query.addAll(client.makeParams('business_roles', (List<OASMemberBusinessRole>) params.get('businessRoles')));
        query.addAll(client.makeParam('member_ids', (String) params.get('memberIds')));
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBusinessMembers200Response) client.invoke(
            'GET', '/businesses/{business_id}/members', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASGetBusinessMembers200Response.class
        );
    }
    /**
     * Get business partners
     * Get all partners of the specified business.\n\nIf the assets_summary&#x3D;TRUE and:\n- partner_type&#x3D;INTERNAL, the business assets returned are your business assets the partner has access to.\n- partner_type&#x3D;EXTERNAL, the business assets returned are your partner\&#39;s business assets the partner has granted you\n  access to.
     * @param businessId Unique identifier of the requesting business. (required)
     * @param assetsSummary Include assets summary in the response if this is true.\n\nThe assets summary returns a dictionary representing a summary of the assets\nfor the business user ID, with information like the ad accounts and profiles\nthe user has permissions for and what those permissions are (optional, default to false)
     * @param partnerType Specifies whether to fetch internal or external (shared) partners.\nIf partner_type&#x3D;INTERNAL, the asset being queried is for accesses the partner has to your business assets.&lt;br&gt;\nIf partner_type&#x3D;EXTERNAL, the asset being queried is for the accesses you have to the partner\&#39;s business asset. (optional)
     * @param partnerIds A list of business partner ids separated by commas used to filter the results. Only partners with the specified ids will be returned. (optional)
     * @param startIndex An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASGetBusinessPartners200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBusinessPartners200Response getBusinessPartners(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('assets_summary', (Boolean) params.get('assetsSummary')));
        query.addAll(client.makeParam('partner_type', (OASPartnerType) params.get('partnerType')));
        query.addAll(client.makeParam('partner_ids', (String) params.get('partnerIds')));
        query.addAll(client.makeParam('start_index', (Integer) params.get('startIndex')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBusinessPartners200Response) client.invoke(
            'GET', '/businesses/{business_id}/partners', '',
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASGetBusinessPartners200Response.class
        );
    }
    /**
     * Update member\&#39;s business role
     * Update a member\&#39;s business role within the business.
     * @param businessId Business id (required)
     * @param oaSUpdateMemberBusinessRoleBody List of objects with the member id and the business_role. (required)
     * @return OASUpdateMemberResultsResponseArray
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateMemberResultsResponseArray updateBusinessMemberships(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateMemberBusinessRoleBody'), 'oaSUpdateMemberBusinessRoleBody');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateMemberResultsResponseArray) client.invoke(
            'PATCH', '/businesses/{business_id}/members',
            (List<OASUpdateMemberBusinessRoleBody>) params.get('oaSUpdateMemberBusinessRoleBody'),
            query, form,
            new Map<String, Object>{
                'business_id' => (String) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASUpdateMemberResultsResponseArray.class
        );
    }
}
