/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCampaignResponse
 */
public class OASCampaignResponse implements OASCampaignId, OASCampaignCommon, OAS.MappedProperties {
    /**
     * Campaign ID.
     * @return id
     */
    public String id { get; set; }

    /**
     * Campaign\'s Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema.
     * @return adAccountId
     */
    public String adAccountId { get; set; }

    /**
     * Campaign name.
     * @return name
     */
    public String name { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASEntityStatus status { get; set; }

    /**
     * Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "daily_spend_cap" cannot be set at the same time.
     * @return lifetimeSpendCap
     */
    public Integer lifetimeSpendCap { get; set; }

    /**
     * Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "lifetime_spend_cap" cannot be set at the same time.
     * @return dailySpendCap
     */
    public Integer dailySpendCap { get; set; }

    /**
     * Order line ID that appears on the invoice.
     * @return orderLineId
     */
    public String orderLineId { get; set; }

    /**
     * Get trackingUrls
     * @return trackingUrls
     */
    public OASTrackingUrls trackingUrls { get; set; }

    /**
     * Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @return startTime
     */
    public Integer startTime { get; set; }

    /**
     * Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @return endTime
     */
    public Integer endTime { get; set; }

    /**
     * Determine if a campaign has flexible daily budgets setup.
     * @return isFlexibleDailyBudgets
     */
    public Boolean isFlexibleDailyBudgets { get; set; }

    /**
     * Get objectiveType
     * @return objectiveType
     */
    public OASObjectiveType objectiveType { get; set; }

    /**
     * Campaign creation time. Unix timestamp in seconds.
     * @return createdTime
     */
    public Integer createdTime { get; set; }

    /**
     * UTC timestamp. Last update time.
     * @return updatedTime
     */
    public Integer updatedTime { get; set; }

    /**
     * Always "campaign".
     * @return type
     */
    public String type { get; set; }

    /**
     * Determines if a campaign automatically generate ad-group level budgets given a campaign budget to maximize campaign outcome. When transitioning from non-cbo to cbo, all previous child ad group budget will be cleared.
     * @return isCampaignBudgetOptimization
     */
    public Boolean isCampaignBudgetOptimization { get; set; }

    /**
     * Get summaryStatus
     * @return summaryStatus
     */
    public OASCampaignSummaryStatus summaryStatus { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ad_account_id' => 'adAccountId',
        'lifetime_spend_cap' => 'lifetimeSpendCap',
        'daily_spend_cap' => 'dailySpendCap',
        'order_line_id' => 'orderLineId',
        'tracking_urls' => 'trackingUrls',
        'start_time' => 'startTime',
        'end_time' => 'endTime',
        'is_flexible_daily_budgets' => 'isFlexibleDailyBudgets',
        'objective_type' => 'objectiveType',
        'created_time' => 'createdTime',
        'updated_time' => 'updatedTime',
        'is_campaign_budget_optimization' => 'isCampaignBudgetOptimization',
        'summary_status' => 'summaryStatus'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCampaignResponse getExample() {
        OASCampaignResponse campaignResponse = new OASCampaignResponse();
          campaignResponse.id = '549755885175';
          campaignResponse.adAccountId = '549755885175';
          campaignResponse.name = 'ACME Tools';
          campaignResponse.status = OASEntityStatus.getExample();
          campaignResponse.lifetimeSpendCap = 1432744744;
          campaignResponse.dailySpendCap = 1432744744;
          campaignResponse.orderLineId = '549755885175';
          campaignResponse.trackingUrls = OASTrackingUrls.getExample();
          campaignResponse.startTime = 1580865126;
          campaignResponse.endTime = 1644023526;
          campaignResponse.isFlexibleDailyBudgets = true;
          campaignResponse.objectiveType = OASObjectiveType.getExample();
          campaignResponse.createdTime = 1432744744;
          campaignResponse.updatedTime = 1432744744;
          campaignResponse.type = 'campaign';
          campaignResponse.isCampaignBudgetOptimization = true;
          campaignResponse.summaryStatus = OASCampaignSummaryStatus.getExample();
        return campaignResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCampaignResponse) {           
            OASCampaignResponse campaignResponse = (OASCampaignResponse) obj;
            return this.id == campaignResponse.id
                && this.adAccountId == campaignResponse.adAccountId
                && this.name == campaignResponse.name
                && this.status == campaignResponse.status
                && this.lifetimeSpendCap == campaignResponse.lifetimeSpendCap
                && this.dailySpendCap == campaignResponse.dailySpendCap
                && this.orderLineId == campaignResponse.orderLineId
                && this.trackingUrls == campaignResponse.trackingUrls
                && this.startTime == campaignResponse.startTime
                && this.endTime == campaignResponse.endTime
                && this.isFlexibleDailyBudgets == campaignResponse.isFlexibleDailyBudgets
                && this.objectiveType == campaignResponse.objectiveType
                && this.createdTime == campaignResponse.createdTime
                && this.updatedTime == campaignResponse.updatedTime
                && this.type == campaignResponse.type
                && this.isCampaignBudgetOptimization == campaignResponse.isCampaignBudgetOptimization
                && this.summaryStatus == campaignResponse.summaryStatus;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (adAccountId == null ? 0 : System.hashCode(adAccountId));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (lifetimeSpendCap == null ? 0 : System.hashCode(lifetimeSpendCap));
        hashCode = (17 * hashCode) + (dailySpendCap == null ? 0 : System.hashCode(dailySpendCap));
        hashCode = (17 * hashCode) + (orderLineId == null ? 0 : System.hashCode(orderLineId));
        hashCode = (17 * hashCode) + (trackingUrls == null ? 0 : System.hashCode(trackingUrls));
        hashCode = (17 * hashCode) + (startTime == null ? 0 : System.hashCode(startTime));
        hashCode = (17 * hashCode) + (endTime == null ? 0 : System.hashCode(endTime));
        hashCode = (17 * hashCode) + (isFlexibleDailyBudgets == null ? 0 : System.hashCode(isFlexibleDailyBudgets));
        hashCode = (17 * hashCode) + (objectiveType == null ? 0 : System.hashCode(objectiveType));
        hashCode = (17 * hashCode) + (createdTime == null ? 0 : System.hashCode(createdTime));
        hashCode = (17 * hashCode) + (updatedTime == null ? 0 : System.hashCode(updatedTime));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (isCampaignBudgetOptimization == null ? 0 : System.hashCode(isCampaignBudgetOptimization));
        hashCode = (17 * hashCode) + (summaryStatus == null ? 0 : System.hashCode(summaryStatus));
        return hashCode;
    }
}

