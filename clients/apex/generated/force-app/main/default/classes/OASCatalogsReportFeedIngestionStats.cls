/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCatalogsReportFeedIngestionStats
 */
public class OASCatalogsReportFeedIngestionStats implements OAS.MappedProperties {
    /**
     * Gets or Sets reportType
     */
    public enum ReportTypeEnum {
        FEED_INGESTION_ISSUES
    }

    /**
     * Get reportType
     * @return reportType
     */
    public ReportTypeEnum reportType { get; set; }

    /**
     * ID of the catalog entity.
     * @return catalogId
     */
    public String catalogId { get; set; }

    /**
     * The event code that a diagnostics aggregated number references
     * @return code
     */
    public Integer code { get; set; }

    /**
     * A human-friendly label for the event code (e.g, \'AVAILABILITY_INVALID\')
     * @return codeLabel
     */
    public String codeLabel { get; set; }

    /**
     * Title message describing the diagnostic issue
     * @return message
     */
    public String message { get; set; }

    /**
     * Number of occurrences of the issue
     * @return occurrences
     */
    public Integer occurrences { get; set; }

    /**
     * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
     */
    public enum SeverityEnum {
        WARN,
        ERROR
    }

    /**
     * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
     * @return severity
     */
    public SeverityEnum severity { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'report_type' => 'reportType',
        'catalog_id' => 'catalogId',
        'code_label' => 'codeLabel'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'report_type' => 'reportType',
        'catalog_id' => 'catalogId',
        'code_label' => 'codeLabel'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'report_type' => 'reportType',
        'catalog_id' => 'catalogId',
        'code_label' => 'codeLabel'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCatalogsReportFeedIngestionStats getExample() {
        OASCatalogsReportFeedIngestionStats catalogsReportFeedIngestionStats = new OASCatalogsReportFeedIngestionStats();
          catalogsReportFeedIngestionStats.reportType = ReportTypeEnum.FEED_INGESTION_ISSUES;
          catalogsReportFeedIngestionStats.catalogId = '';
          catalogsReportFeedIngestionStats.code = 112;
          catalogsReportFeedIngestionStats.codeLabel = 'AVAILABILITY_INVALID';
          catalogsReportFeedIngestionStats.message = '';
          catalogsReportFeedIngestionStats.occurrences = 10;
          catalogsReportFeedIngestionStats.severity = SeverityEnum.WARN;
        return catalogsReportFeedIngestionStats;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCatalogsReportFeedIngestionStats) {           
            OASCatalogsReportFeedIngestionStats catalogsReportFeedIngestionStats = (OASCatalogsReportFeedIngestionStats) obj;
            return this.reportType == catalogsReportFeedIngestionStats.reportType
                && this.catalogId == catalogsReportFeedIngestionStats.catalogId
                && this.code == catalogsReportFeedIngestionStats.code
                && this.codeLabel == catalogsReportFeedIngestionStats.codeLabel
                && this.message == catalogsReportFeedIngestionStats.message
                && this.occurrences == catalogsReportFeedIngestionStats.occurrences
                && this.severity == catalogsReportFeedIngestionStats.severity;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (reportType == null ? 0 : System.hashCode(reportType));
        hashCode = (17 * hashCode) + (catalogId == null ? 0 : System.hashCode(catalogId));
        hashCode = (17 * hashCode) + (code == null ? 0 : System.hashCode(code));
        hashCode = (17 * hashCode) + (codeLabel == null ? 0 : System.hashCode(codeLabel));
        hashCode = (17 * hashCode) + (message == null ? 0 : System.hashCode(message));
        hashCode = (17 * hashCode) + (occurrences == null ? 0 : System.hashCode(occurrences));
        hashCode = (17 * hashCode) + (severity == null ? 0 : System.hashCode(severity));
        return hashCode;
    }
}

