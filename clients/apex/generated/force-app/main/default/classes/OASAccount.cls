/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASAccount
 */
public class OASAccount implements OAS.MappedProperties {
    /**
     * Type of account
     */
    public enum AccountTypeEnum {
        PINNER,
        BUSINESS
    }

    /**
     * Type of account
     * @return accountType
     */
    public AccountTypeEnum accountType { get; set; }

    /**
     * User account ID.
     * @return id
     */
    public String id { get; set; }

    /**
     * Get profileImage
     * @return profileImage
     */
    public String profileImage { get; set; }

    /**
     * Get websiteUrl
     * @return websiteUrl
     */
    public String websiteUrl { get; set; }

    /**
     * Get username
     * @return username
     */
    public String username { get; set; }

    /**
     * Profile about description.
     * @return about
     */
    public String about { get; set; }

    /**
     * Get businessName
     * @return businessName
     */
    public String businessName { get; set; }

    /**
     * User account board count.<br/>**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
     * @return boardCount
     */
    public Integer boardCount { get; private set; }

    /**
     * User account pin count. This includes both created and saved pins.
     * @return pinCount
     */
    public Integer pinCount { get; private set; }

    /**
     * User account follower count.
     * @return followerCount
     */
    public Integer followerCount { get; private set; }

    /**
     * User account following count.
     * @return followingCount
     */
    public Integer followingCount { get; private set; }

    /**
     * User account monthly views.
     * @return monthlyViews
     */
    public Integer monthlyViews { get; private set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'account_type' => 'accountType',
        'profile_image' => 'profileImage',
        'website_url' => 'websiteUrl',
        'business_name' => 'businessName',
        'board_count' => 'boardCount',
        'pin_count' => 'pinCount',
        'follower_count' => 'followerCount',
        'following_count' => 'followingCount',
        'monthly_views' => 'monthlyViews'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASAccount getExample() {
        OASAccount account = new OASAccount();
          account.accountType = AccountTypeEnum.PINNER;
          account.id = '2783136121146311751';
          account.profileImage = '';
          account.websiteUrl = '';
          account.username = '';
          account.about = '';
          account.businessName = '';
          account.boardCount = 14;
          account.pinCount = 339;
          account.followerCount = 10;
          account.followingCount = 347;
          account.monthlyViews = 163;
        return account;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAccount) {           
            OASAccount account = (OASAccount) obj;
            return this.accountType == account.accountType
                && this.id == account.id
                && this.profileImage == account.profileImage
                && this.websiteUrl == account.websiteUrl
                && this.username == account.username
                && this.about == account.about
                && this.businessName == account.businessName
                && this.boardCount == account.boardCount
                && this.pinCount == account.pinCount
                && this.followerCount == account.followerCount
                && this.followingCount == account.followingCount
                && this.monthlyViews == account.monthlyViews;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (accountType == null ? 0 : System.hashCode(accountType));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (profileImage == null ? 0 : System.hashCode(profileImage));
        hashCode = (17 * hashCode) + (websiteUrl == null ? 0 : System.hashCode(websiteUrl));
        hashCode = (17 * hashCode) + (username == null ? 0 : System.hashCode(username));
        hashCode = (17 * hashCode) + (about == null ? 0 : System.hashCode(about));
        hashCode = (17 * hashCode) + (businessName == null ? 0 : System.hashCode(businessName));
        hashCode = (17 * hashCode) + (boardCount == null ? 0 : System.hashCode(boardCount));
        hashCode = (17 * hashCode) + (pinCount == null ? 0 : System.hashCode(pinCount));
        hashCode = (17 * hashCode) + (followerCount == null ? 0 : System.hashCode(followerCount));
        hashCode = (17 * hashCode) + (followingCount == null ? 0 : System.hashCode(followingCount));
        hashCode = (17 * hashCode) + (monthlyViews == null ? 0 : System.hashCode(monthlyViews));
        return hashCode;
    }
}

