/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASKeyword
 */
public class OASKeyword implements OASKeywordsCommon, OAS.MappedProperties {
    /**
     * </p><strong>Note:</strong> bid field has been deprecated. Input will not be set and field will return null. Keyword custom bid in microcurrency - null if inherited from parent ad group.
     * @return bid
     */
    public Integer bid { get; set; }

    /**
     * Get matchType
     * @return matchType
     */
    public OASMatchTypeResponse matchType { get; set; }

    /**
     * Keyword value (120 chars max).
     * @return value
     */
    public String value { get; set; }

    /**
     * Get archived
     * @return archived
     */
    public Boolean archived { get; set; }

    /**
     * Keyword ID .
     * @return id
     */
    public String id { get; set; }

    /**
     * Keyword parent entity ID (advertiser, campaign, ad group).
     * @return parentId
     */
    public String parentId { get; set; }

    /**
     * Parent entity type
     * @return parentType
     */
    public String parentType { get; set; }

    /**
     * Always keyword
     * @return type
     */
    public String type { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'match_type' => 'matchType',
        'parent_id' => 'parentId',
        'parent_type' => 'parentType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'match_type' => 'matchType',
        'parent_id' => 'parentId',
        'parent_type' => 'parentType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'match_type' => 'matchType',
        'parent_id' => 'parentId',
        'parent_type' => 'parentType'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASKeyword getExample() {
        OASKeyword keyword = new OASKeyword();
          keyword.bid = 0;
          keyword.matchType = OASMatchTypeResponse.getExample();
          keyword.value = '';
          keyword.archived = false;
          keyword.id = '383791336903426391';
          keyword.parentId = '383791336903426391';
          keyword.parentType = 'campaign';
          keyword.type = 'keyword';
        return keyword;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASKeyword) {           
            OASKeyword keyword = (OASKeyword) obj;
            return this.bid == keyword.bid
                && this.matchType == keyword.matchType
                && this.value == keyword.value
                && this.archived == keyword.archived
                && this.id == keyword.id
                && this.parentId == keyword.parentId
                && this.parentType == keyword.parentType
                && this.type == keyword.type;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (bid == null ? 0 : System.hashCode(bid));
        hashCode = (17 * hashCode) + (matchType == null ? 0 : System.hashCode(matchType));
        hashCode = (17 * hashCode) + (value == null ? 0 : System.hashCode(value));
        hashCode = (17 * hashCode) + (archived == null ? 0 : System.hashCode(archived));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (parentId == null ? 0 : System.hashCode(parentId));
        hashCode = (17 * hashCode) + (parentType == null ? 0 : System.hashCode(parentType));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        return hashCode;
    }
}

