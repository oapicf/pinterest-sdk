/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Media upload that has been registered but not uploaded/processed yet.
 */
public class OASMediaUpload implements OAS.MappedProperties {
    /**
     * Unique identifier for this media upload. Used to track status and for attaching during Pin creation.
     * @return mediaId
     */
    public String mediaId { get; set; }

    /**
     * Get mediaType
     * @return mediaType
     */
    public OASMediaUploadType mediaType { get; set; }

    /**
     * The URL where you will POST your media file.
     * @return uploadUrl
     */
    public String uploadUrl { get; set; }

    /**
     * Get uploadParameters
     * @return uploadParameters
     */
    public OASMediaUploadAllOfUploadParameters uploadParameters { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'media_id' => 'mediaId',
        'media_type' => 'mediaType',
        'upload_url' => 'uploadUrl',
        'upload_parameters' => 'uploadParameters'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'media_id' => 'mediaId',
        'media_type' => 'mediaType',
        'upload_url' => 'uploadUrl',
        'upload_parameters' => 'uploadParameters'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'media_id' => 'mediaId',
        'media_type' => 'mediaType',
        'upload_url' => 'uploadUrl',
        'upload_parameters' => 'uploadParameters'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'media_id' => 'mediaId',
        'media_type' => 'mediaType',
        'upload_url' => 'uploadUrl',
        'upload_parameters' => 'uploadParameters'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMediaUpload getExample() {
        OASMediaUpload mediaUpload = new OASMediaUpload();
          mediaUpload.mediaId = '';
          mediaUpload.mediaType = OASMediaUploadType.getExample();
          mediaUpload.uploadUrl = 'https://pinterest-media-upload.s3-accelerate.amazonaws.com/';
          mediaUpload.uploadParameters = OASMediaUploadAllOfUploadParameters.getExample();
        return mediaUpload;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMediaUpload) {           
            OASMediaUpload mediaUpload = (OASMediaUpload) obj;
            return this.mediaId == mediaUpload.mediaId
                && this.mediaType == mediaUpload.mediaType
                && this.uploadUrl == mediaUpload.uploadUrl
                && this.uploadParameters == mediaUpload.uploadParameters;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (mediaId == null ? 0 : System.hashCode(mediaId));
        hashCode = (17 * hashCode) + (mediaType == null ? 0 : System.hashCode(mediaType));
        hashCode = (17 * hashCode) + (uploadUrl == null ? 0 : System.hashCode(uploadUrl));
        hashCode = (17 * hashCode) + (uploadParameters == null ? 0 : System.hashCode(uploadParameters));
        return hashCode;
    }
}

