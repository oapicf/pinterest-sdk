/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASAdPreviewRequest
 */
public class OASAdPreviewRequest implements OASAdPreviewCreateFromImage, OASAdPreviewCreateFromPin, OAS.MappedProperties {
    /**
     * Image URL.
     * @return imageUrl
     */
    public String imageUrl { get; set; }

    /**
     * Title displayed below ad.
     * @return title
     */
    public String title { get; set; }

    /**
     * Pin ID.
     * @return pinId
     */
    public String pinId { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'image_url' => 'imageUrl',
        'pin_id' => 'pinId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'image_url' => 'imageUrl',
        'pin_id' => 'pinId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASAdPreviewRequest getExample() {
        OASAdPreviewRequest adPreviewRequest = new OASAdPreviewRequest();
          adPreviewRequest.imageUrl = 'https://somewebsite.com/someimage.jpg';
          adPreviewRequest.title = 'My Preview Image';
          adPreviewRequest.pinId = '7389479023';
        return adPreviewRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAdPreviewRequest) {           
            OASAdPreviewRequest adPreviewRequest = (OASAdPreviewRequest) obj;
            return this.imageUrl == adPreviewRequest.imageUrl
                && this.title == adPreviewRequest.title
                && this.pinId == adPreviewRequest.pinId;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (imageUrl == null ? 0 : System.hashCode(imageUrl));
        hashCode = (17 * hashCode) + (title == null ? 0 : System.hashCode(title));
        hashCode = (17 * hashCode) + (pinId == null ? 0 : System.hashCode(pinId));
        return hashCode;
    }
}

