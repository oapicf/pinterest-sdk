/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASResourcesApi {
    OASClient client;

    public OASResourcesApi(OASClient client) {
        this.client = client;
    }

    public OASResourcesApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Get ad accounts countries
     * Get Ad Accounts countries
     * @return OASAdAccountsCountryResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAdAccountsCountryResponse adAccountCountriesGet() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAdAccountsCountryResponse) client.invoke(
            'GET', '/resources/ad_account_countries', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASAdAccountsCountryResponse.class
        );
    }
    /**
     * Get available metrics\&#39; definitions
     * Get the definitions for ads and organic metrics available across both synchronous and asynchronous report endpoints.\nThe &#x60;display_name&#x60; attribute will match how the metric is named in our native tools like Ads Manager.\nSee &lt;a href&#x3D;\&#39;/docs/api-features/analytics-overview/\&#39;&gt;Organic Analytics&lt;/a&gt; and &lt;a href&#x3D;\&#39;/docs/api-features/ads-reporting/\&#39;&gt;Ads Analytics&lt;/a&gt; for more information.
     * @param reportType Report type. (optional)
     * @return OASDeliveryMetricsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeliveryMetricsResponse deliveryMetricsGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('report_type', (String) params.get('reportType')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeliveryMetricsResponse) client.invoke(
            'GET', '/resources/delivery_metrics', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASDeliveryMetricsResponse.class
        );
    }
    /**
     * Get interest details
     * &lt;p&gt;Get details of a specific interest given interest ID.&lt;/p&gt; &lt;p&gt;Click &lt;a href&#x3D;&quot;https://docs.google.com/spreadsheets/d/1HxL-0Z3p2fgxis9YBP2HWC3tvPrs1hAuHDRtH-NJTIM/edit#gid&#x3D;118370875&quot; target&#x3D;&quot;_blank&quot;&gt;here&lt;/a&gt; for a spreadsheet listing interests and their IDs.&lt;/p&gt;
     * @param interestId Unique identifier of an interest. (required)
     * @return OASSingleInterestTargetingOptionResp
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSingleInterestTargetingOptionResp interestTargetingOptionsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('interestId'), 'interestId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSingleInterestTargetingOptionResp) client.invoke(
            'GET', '/resources/targeting/interests/{interest_id}', '',
            query, form,
            new Map<String, Object>{
                'interest_id' => (String) params.get('interestId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASSingleInterestTargetingOptionResp.class
        );
    }
    /**
     * Get lead form questions
     * Get a list of all lead form question type names. Some questions might not be used.\n\n&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     * @throws OAS.ApiException if fails to make API call
     */
    public void leadFormQuestionsGet() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/resources/lead_form_questions', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
    /**
     * Get metrics ready state
     * Learn whether conversion or non-conversion metrics are finalized and ready to query.
     * @param r_date Analytics reports request date (UTC). Format: YYYY-MM-DD (required)
     * @return OASBookClosedResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASBookClosedResponse metricsReadyStateGet(Map<String, Object> params) {
        client.assertNotNull(params.get('r_date'), 'r_date');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('date', (String) params.get('r_date')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASBookClosedResponse) client.invoke(
            'GET', '/resources/metrics_ready_state', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASBookClosedResponse.class
        );
    }
    /**
     * Get targeting options
     * &lt;p&gt;You can use targeting values in ads placement to define your intended audience. &lt;/p&gt; &lt;p&gt;Targeting metrics are organized around targeting specifications.&lt;/p&gt; &lt;p&gt;For more information on ads targeting, see &lt;a class&#x3D;&quot;reference external&quot; href&#x3D;&quot;https://help.pinterest.com/en/business/article/audience-targeting&quot; target&#x3D;&quot;_blank&quot;&gt;Audience targeting&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;b&gt;Sample return:&lt;/b&gt;&lt;/p&gt; &lt;pre class&#x3D;&quot;literal-block&quot;&gt; [{&amp;quot;36313&amp;quot;: &amp;quot;Australia: Moreton Bay - North&amp;quot;, &amp;quot;124735&amp;quot;: &amp;quot;Canada: North Battleford&amp;quot;, &amp;quot;36109&amp;quot;: &amp;quot;Australia: Murray&amp;quot;, &amp;quot;36108&amp;quot;: &amp;quot;Australia: Mid North Coast&amp;quot;, &amp;quot;36101&amp;quot;: &amp;quot;Australia: Capital Region&amp;quot;, &amp;quot;811&amp;quot;: &amp;quot;U.S.: Reno&amp;quot;, &amp;quot;36103&amp;quot;: &amp;quot;Australia: Central West&amp;quot;, &amp;quot;36102&amp;quot;: &amp;quot;Australia: Central Coast&amp;quot;, &amp;quot;36105&amp;quot;: &amp;quot;Australia: Far West and Orana&amp;quot;, &amp;quot;36104&amp;quot;: &amp;quot;Australia: Coffs Harbour - Grafton&amp;quot;, &amp;quot;36107&amp;quot;: &amp;quot;Australia: Illawarra&amp;quot;, &amp;quot;36106&amp;quot;: &amp;quot;Australia: Hunter Valley Exc Newcastle&amp;quot;, &amp;quot;554017&amp;quot;: &amp;quot;New Zealand: Wanganui&amp;quot;, &amp;quot;554016&amp;quot;: &amp;quot;New Zealand: Marlborough&amp;quot;, &amp;quot;554015&amp;quot;: &amp;quot;New Zealand: Gisborne&amp;quot;, &amp;quot;554014&amp;quot;: &amp;quot;New Zealand: Tararua&amp;quot;, &amp;quot;554013&amp;quot;: &amp;quot;New Zealand: Invercargill&amp;quot;, &amp;quot;GR&amp;quot;: &amp;quot;Greece&amp;quot;, &amp;quot;554011&amp;quot;: &amp;quot;New Zealand: Whangarei&amp;quot;, &amp;quot;554010&amp;quot;: &amp;quot;New Zealand: Far North&amp;quot;, &amp;quot;717&amp;quot;: &amp;quot;U.S.: Quincy-Hannibal-Keokuk&amp;quot;, &amp;quot;716&amp;quot;: &amp;quot;U.S.: Baton Rouge&amp;quot;,...}] &lt;/pre&gt;
     * @param targetingType Public targeting type. (required)
     * @param clientId Client ID. (optional)
     * @param oauthSignature Oauth signature (optional)
     * @param timestamp Timestamp (optional)
     * @param adAccountId Unique identifier of an ad account. (optional)
     * @return List<Object>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<Object> targetingOptionsGet(Map<String, Object> params) {
        client.assertNotNull(params.get('targetingType'), 'targetingType');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('client_id', (String) params.get('clientId')));
        query.addAll(client.makeParam('oauth_signature', (String) params.get('oauthSignature')));
        query.addAll(client.makeParam('timestamp', (String) params.get('timestamp')));
        query.addAll(client.makeParam('ad_account_id', (String) params.get('adAccountId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<Object>) client.invoke(
            'GET', '/resources/targeting/{targeting_type}', '',
            query, form,
            new Map<String, Object>{
                'targeting_type' => (String) params.get('targetingType')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            List<Object>.class
        );
    }
}
