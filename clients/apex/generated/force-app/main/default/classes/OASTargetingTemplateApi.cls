/*
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASTargetingTemplateApi {
    OASClient client;

    public OASTargetingTemplateApi(OASClient client) {
        this.client = client;
    }

    public OASTargetingTemplateApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create targeting templates
     * &lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,\n keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;\n &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse\n  performance targeting from prior campaigns for new campaigns.&lt;/p&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSTargetingTemplateCreate targeting template creation entity (required)
     * @return OASTargetingTemplateGetResponseData
     * @throws OAS.ApiException if fails to make API call
     */
    public OASTargetingTemplateGetResponseData targetingTemplateCreate(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSTargetingTemplateCreate'), 'oaSTargetingTemplateCreate');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASTargetingTemplateGetResponseData) client.invoke(
            'POST', '/ad_accounts/{ad_account_id}/targeting_templates',
            (OASTargetingTemplateCreate) params.get('oaSTargetingTemplateCreate'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            OASTargetingTemplateGetResponseData.class
        );
    }
    /**
     * List targeting templates
     * Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING”\nby ID. Note that higher-value IDs are associated with more-recently added\nitems. (optional)
     * @param includeSizing Include audience sizing in result or not (optional, default to false)
     * @param searchQuery Search keyword for targeting templates (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return OASTargetingTemplateList200Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASTargetingTemplateList200Response targetingTemplateList(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('order', (String) params.get('order')));
        query.addAll(client.makeParam('include_sizing', (Boolean) params.get('includeSizing')));
        query.addAll(client.makeParam('search_query', (String) params.get('searchQuery')));
        query.addAll(client.makeParam('page_size', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('bookmark', (String) params.get('bookmark')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASTargetingTemplateList200Response) client.invoke(
            'GET', '/ad_accounts/{ad_account_id}/targeting_templates', '',
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'pinterest_oauth2' },
            OASTargetingTemplateList200Response.class
        );
    }
    /**
     * Update targeting templates
     * &lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param oaSTargetingTemplateUpdateRequest Operation type and targeting template ID (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void targetingTemplateUpdate(Map<String, Object> params) {
        client.assertNotNull(params.get('adAccountId'), 'adAccountId');
        client.assertNotNull(params.get('oaSTargetingTemplateUpdateRequest'), 'oaSTargetingTemplateUpdateRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'PATCH', '/ad_accounts/{ad_account_id}/targeting_templates',
            (OASTargetingTemplateUpdateRequest) params.get('oaSTargetingTemplateUpdateRequest'),
            query, form,
            new Map<String, Object>{
                'ad_account_id' => (String) params.get('adAccountId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'pinterest_oauth2' },
            null
        );
    }
}
