/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.Error
import org.openapitools.client.model.OauthAccessTokenResponse
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object OauthApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new OauthApi(baseUrl)
}

class OauthApi(baseUrl: String) {

  /**
   * Generate an OAuth access token by using an authorization code or a refresh token.  IMPORTANT: You need to start the OAuth flow via www.pinterest.com/oauth before calling this endpoint (or have an existing refresh token).  See <a href='/docs/getting-started/authentication-and-scopes/'>Authentication</a> for more.  <strong>Parameter <i>refresh_on</i> and its corresponding response type <i>everlasting_refresh</i> are now available to all apps! Later this year, continuous refresh will become the default behavior (ie you will no longer need to send this parameter). <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>  <strong>Grant type <i>client_credentials</i> and its corresponding response type are not fully available. You will likely get a default error if you attempt to use this grant_type.</strong>
   * 
   * Expected answers:
   *   code 200 : OauthAccessTokenResponse (response)
   *   code 0 : Error (Unexpected error)
   * 
   * Available security schemes:
   *   basic (http)
   * 
   * @param grantType 
   */
  def oauthToken(grantType: String)(implicit basicAuth: BasicCredentials): ApiRequest[OauthAccessTokenResponse] =
    ApiRequest[OauthAccessTokenResponse](ApiMethods.POST, baseUrl, "/oauth/token", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth).withFormParam("grant_type", grantType)
      .withSuccessResponse[OauthAccessTokenResponse](200)
      .withDefaultErrorResponse[Error]
      



}

