/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.Error
import org.openapitools.client.model.PinsList200Response
import org.openapitools.client.model.SearchPartnerPins200Response
import org.openapitools.client.model.SearchUserBoardsGet200Response
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object SearchApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new SearchApi(baseUrl)
}

class SearchApi(baseUrl: String) {

  /**
   * <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>  Get the top 10 Pins by a given search term.
   * 
   * Expected answers:
   *   code 200 : SearchPartnerPins200Response (Success)
   *   code 400 : Error (Invalid pins)
   *   code 0 : Error (Unexpected error)
   * 
   * @param term Search term to look up pins.
   * @param countryCode Two letter country code (ISO 3166-1 alpha-2)
   * @param bookmark Cursor used to fetch the next page of items
   * @param locale Search locale.
   * @param limit Max search result size
   */
  def searchPartnerPins(term: String, countryCode: String, bookmark: Option[String] = None, locale: Option[String] = None, limit: Option[Int] = None): ApiRequest[SearchPartnerPins200Response] =
    ApiRequest[SearchPartnerPins200Response](ApiMethods.GET, baseUrl, "/search/partner/pins", "application/json")
      .withQueryParam("term", term)
      .withQueryParam("country_code", countryCode)
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("locale", locale)
      .withQueryParam("limit", limit)
      .withSuccessResponse[SearchPartnerPins200Response](200)
      .withErrorResponse[Error](400)
      .withDefaultErrorResponse[Error]
      

  /**
   * Search for boards for the \"operation user_account\". This includes boards of all board types. - By default, the \"operation user_account\" is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\". See <a href='/docs/getting-started/using-business-access/'>Understanding Business Access</a> for more information.
   * 
   * Expected answers:
   *   code 200 : SearchUserBoardsGet200Response (response)
   *   code 0 : Error (Unexpected error)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
   * @param query Search query. Can contain pin description keywords or comma-separated pin IDs.
   */
  def searchUserBoardsGet(adAccountId: Option[String] = None, bookmark: Option[String] = None, pageSize: Option[Int] = None, query: Option[String] = None): ApiRequest[SearchUserBoardsGet200Response] =
    ApiRequest[SearchUserBoardsGet200Response](ApiMethods.GET, baseUrl, "/search/boards", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withQueryParam("query", query)
      .withSuccessResponse[SearchUserBoardsGet200Response](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Search for pins for the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\". See <a href='/docs/getting-started/using-business-access/'>Understanding Business Access</a> for more information.
   * 
   * Expected answers:
   *   code 200 : PinsList200Response (Success)
   *   code 404 : Error (User not found)
   *   code 0 : Error (Unexpected error)
   * 
   * @param query Search query. Can contain pin description keywords or comma-separated pin IDs.
   * @param adAccountId Unique identifier of an ad account.
   * @param bookmark Cursor used to fetch the next page of items
   */
  def searchUserPinsList(query: String, adAccountId: Option[String] = None, bookmark: Option[String] = None): ApiRequest[PinsList200Response] =
    ApiRequest[PinsList200Response](ApiMethods.GET, baseUrl, "/search/pins", "application/json")
      .withQueryParam("ad_account_id", adAccountId)
      .withQueryParam("query", query)
      .withQueryParam("bookmark", bookmark)
      .withSuccessResponse[PinsList200Response](200)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      



}

