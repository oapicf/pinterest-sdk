/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.CustomerList
import org.openapitools.client.model.CustomerListRequest
import org.openapitools.client.model.CustomerListUpdateRequest
import org.openapitools.client.model.CustomerListsList200Response
import org.openapitools.client.model.Error
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object CustomerListsApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new CustomerListsApi(baseUrl)
}

class CustomerListsApi(baseUrl: String) {

  /**
   * <p>Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).</p> <p>A customer list is one of the four types of Pinterest audiences: for more information, see <a href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a> or the <a href=\"/docs/api-features/targeting-overview/\" target=\"_blank\">Audiences</a> section of the ads management guide.<p/>  <p><b>Please review our <u><a href=\"https://help.pinterest.com/en/business/article/audience-targeting#section-13341\" target=\"_blank\">requirements</a></u> for what type of information is allowed when uploading a customer list.</b></p> <p>When you create a customer list, the system scans the list for existing Pinterest accounts; the list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process is complete. The filtered list – containing only the Pinterest accounts that were included in your starting list – is what will be used to create the audience.</p> <p>Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type) using the <a href=\"#operation/create_audience_handler\">create audience endpoint</a> before it can be used.</p>
   * 
   * Expected answers:
   *   code 200 : CustomerList (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param customerListRequest Parameters to get Customer lists info
   */
  def customerListsCreate(adAccountId: String, customerListRequest: CustomerListRequest): ApiRequest[CustomerList] =
    ApiRequest[CustomerList](ApiMethods.POST, baseUrl, "/ad_accounts/{ad_account_id}/customer_lists", "application/json")
      .withBody(customerListRequest)
      .withPathParam("ad_account_id", adAccountId)
      .withSuccessResponse[CustomerList](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Gets a specific customer list given the customer list ID.
   * 
   * Expected answers:
   *   code 200 : CustomerList (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param customerListId Unique identifier of a customer list
   */
  def customerListsGet(adAccountId: String, customerListId: String): ApiRequest[CustomerList] =
    ApiRequest[CustomerList](ApiMethods.GET, baseUrl, "/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}", "application/json")
      .withPathParam("ad_account_id", adAccountId)
      .withPathParam("customer_list_id", customerListId)
      .withSuccessResponse[CustomerList](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * <p>Get a set of customer lists including id and name based on the filters provided.</p> <p>(Customer lists are a type of audience.) For more information, see <a href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a>  or the <a href=\"/docs/api-features/targeting-overview/\" target=\"_blank\">Audiences</a> section of the ads management guide.</p>
   * 
   * Expected answers:
   *   code 200 : CustomerListsList200Response (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
   * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
   * @param bookmark Cursor used to fetch the next page of items
   */
  def customerListsList(adAccountId: String, pageSize: Option[Int] = None, order: Option[String] = None, bookmark: Option[String] = None): ApiRequest[CustomerListsList200Response] =
    ApiRequest[CustomerListsList200Response](ApiMethods.GET, baseUrl, "/ad_accounts/{ad_account_id}/customer_lists", "application/json")
      .withQueryParam("page_size", pageSize)
      .withQueryParam("order", order)
      .withQueryParam("bookmark", bookmark)
      .withPathParam("ad_account_id", adAccountId)
      .withSuccessResponse[CustomerListsList200Response](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * <p>Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)</p> <p>When you add records to an existing customer list, the system scans the additions for existing Pinterest accounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records  to add will be deleted when the matching process is complete.</p> <p>For more information, see <a href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a> or the <a href=\"/docs/api-features/targeting-overview/\" target=\"_blank\">Audiences</a> section of the ads management guide.</p>
   * 
   * Expected answers:
   *   code 200 : CustomerList (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param customerListId Unique identifier of a customer list
   * @param customerListUpdateRequest 
   */
  def customerListsUpdate(adAccountId: String, customerListId: String, customerListUpdateRequest: CustomerListUpdateRequest): ApiRequest[CustomerList] =
    ApiRequest[CustomerList](ApiMethods.PATCH, baseUrl, "/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}", "application/json")
      .withBody(customerListUpdateRequest)
      .withPathParam("ad_account_id", adAccountId)
      .withPathParam("customer_list_id", customerListId)
      .withSuccessResponse[CustomerList](200)
      .withDefaultErrorResponse[Error]
      



}

