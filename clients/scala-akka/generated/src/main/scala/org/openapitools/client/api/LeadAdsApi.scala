/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.AdAccountCreateSubscriptionRequest
import org.openapitools.client.model.AdAccountCreateSubscriptionResponse
import org.openapitools.client.model.AdAccountGetSubscriptionResponse
import org.openapitools.client.model.AdAccountsSubscriptionsGetList200Response
import org.openapitools.client.model.Error
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object LeadAdsApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new LeadAdsApi(baseUrl)
}

class LeadAdsApi(baseUrl: String) {

  /**
   * Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
   * 
   * Expected answers:
   *   code 204 :  (Subscription deleted successfully)
   *   code 400 : Error (Invalid input parameters.)
   *   code 403 : Error (You are not authorized to delete this subscription.)
   *   code 404 : Error (Subscription not found.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param subscriptionId Unique identifier of a subscription.
   */
  def adAccountsSubscriptionsDelById(adAccountId: String, subscriptionId: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, baseUrl, "/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}", "application/json")
      .withPathParam("ad_account_id", adAccountId)
      .withPathParam("subscription_id", subscriptionId)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
   * 
   * Expected answers:
   *   code 200 : AdAccountGetSubscriptionResponse (Success)
   *   code 400 : Error (Invalid input parameters.)
   *   code 403 : Error (Can't access this subscription.)
   *   code 404 : Error (Subscription not found.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param subscriptionId Unique identifier of a subscription.
   */
  def adAccountsSubscriptionsGetById(adAccountId: String, subscriptionId: String): ApiRequest[AdAccountGetSubscriptionResponse] =
    ApiRequest[AdAccountGetSubscriptionResponse](ApiMethods.GET, baseUrl, "/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}", "application/json")
      .withPathParam("ad_account_id", adAccountId)
      .withPathParam("subscription_id", subscriptionId)
      .withSuccessResponse[AdAccountGetSubscriptionResponse](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get the advertiser's list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
   * 
   * Expected answers:
   *   code 200 : AdAccountsSubscriptionsGetList200Response (Success)
   *   code 403 : Error (Can't access this subscription.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
   * @param bookmark Cursor used to fetch the next page of items
   */
  def adAccountsSubscriptionsGetList(adAccountId: String, pageSize: Option[Int] = None, bookmark: Option[String] = None): ApiRequest[AdAccountsSubscriptionsGetList200Response] =
    ApiRequest[AdAccountsSubscriptionsGetList200Response](ApiMethods.GET, baseUrl, "/ad_accounts/{ad_account_id}/leads/subscriptions", "application/json")
      .withQueryParam("page_size", pageSize)
      .withQueryParam("bookmark", bookmark)
      .withPathParam("ad_account_id", adAccountId)
      .withSuccessResponse[AdAccountsSubscriptionsGetList200Response](200)
      .withErrorResponse[Error](403)
      .withDefaultErrorResponse[Error]
      

  /**
   * Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
   * 
   * Expected answers:
   *   code 200 : AdAccountCreateSubscriptionResponse (Success)
   *   code 400 : Error (Invalid input parameters.)
   *   code 403 : Error (Can't access this subscription.)
   *   code 0 : Error (Unexpected error.)
   * 
   * @param adAccountId Unique identifier of an ad account.
   * @param adAccountCreateSubscriptionRequest Subscription to create.
   */
  def adAccountsSubscriptionsPost(adAccountId: String, adAccountCreateSubscriptionRequest: AdAccountCreateSubscriptionRequest): ApiRequest[AdAccountCreateSubscriptionResponse] =
    ApiRequest[AdAccountCreateSubscriptionResponse](ApiMethods.POST, baseUrl, "/ad_accounts/{ad_account_id}/leads/subscriptions", "application/json")
      .withBody(adAccountCreateSubscriptionRequest)
      .withPathParam("ad_account_id", adAccountId)
      .withSuccessResponse[AdAccountCreateSubscriptionResponse](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](403)
      .withDefaultErrorResponse[Error]
      



}

