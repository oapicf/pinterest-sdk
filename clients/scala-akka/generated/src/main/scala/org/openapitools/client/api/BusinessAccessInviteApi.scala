/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.AuthRespondInvitesBody
import org.openapitools.client.model.CancelInvitesBody
import org.openapitools.client.model.CreateAssetAccessRequestBody
import org.openapitools.client.model.CreateAssetAccessRequestResponse
import org.openapitools.client.model.CreateAssetInvitesRequest
import org.openapitools.client.model.CreateInvitesResultsResponseArray
import org.openapitools.client.model.CreateMembershipOrPartnershipInvitesBody
import org.openapitools.client.model.DeleteInvitesResultsResponseArray
import org.openapitools.client.model.Error
import org.openapitools.client.model.GetInvites200Response
import org.openapitools.client.model.InviteType
import org.openapitools.client.model.RespondToInvitesResponseArray
import org.openapitools.client.model.UpdateInvitesResultsResponseArray
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object BusinessAccessInviteApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new BusinessAccessInviteApi(baseUrl)
}

class BusinessAccessInviteApi(baseUrl: String) {

  /**
   * Create a request to access an existing partner's assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
   * 
   * Expected answers:
   *   code 200 : CreateAssetAccessRequestResponse (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param businessId Unique identifier of the requesting business.
   * @param createAssetAccessRequestBody 
   */
  def assetAccessRequestsCreate(businessId: String, createAssetAccessRequestBody: CreateAssetAccessRequestBody): ApiRequest[CreateAssetAccessRequestResponse] =
    ApiRequest[CreateAssetAccessRequestResponse](ApiMethods.POST, baseUrl, "/businesses/{business_id}/requests/assets/access", "application/json")
      .withBody(createAssetAccessRequestBody)
      .withPathParam("business_id", businessId)
      .withSuccessResponse[CreateAssetAccessRequestResponse](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Cancel membership/partnership invites and/or requests.
   * 
   * Expected answers:
   *   code 200 : DeleteInvitesResultsResponseArray (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param businessId Business id
   * @param cancelInvitesBody A list with invite ids
   */
  def cancelInvitesOrRequests(businessId: String, cancelInvitesBody: CancelInvitesBody): ApiRequest[DeleteInvitesResultsResponseArray] =
    ApiRequest[DeleteInvitesResultsResponseArray](ApiMethods.DELETE, baseUrl, "/businesses/{business_id}/invites", "application/json")
      .withBody(cancelInvitesBody)
      .withPathParam("business_id", businessId)
      .withSuccessResponse[DeleteInvitesResultsResponseArray](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner's asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \"Create a request to access an existing partner's assets\" to request access to your   partner's assets.     - invite_type=\"PARTNER_REQUEST\" - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \"Assign/Update partner asset permissions\" to assign a partner access to   new assets.     - invite_type=\"PARTNER_INVITE\" - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \"Assign/Update member asset permissions\" to assign a member access to new   assets.     - invite_type=\"MEMBER_INVITE\"  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
   * 
   * Expected answers:
   *   code 200 : UpdateInvitesResultsResponseArray (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param businessId Unique identifier of the requesting business.
   * @param createAssetInvitesRequest A list of invites/requests together with the asset permissions to be assigned to the invite/request. 
   */
  def createAssetInvites(businessId: String, createAssetInvitesRequest: CreateAssetInvitesRequest): ApiRequest[UpdateInvitesResultsResponseArray] =
    ApiRequest[UpdateInvitesResultsResponseArray](ApiMethods.POST, baseUrl, "/businesses/{business_id}/invites/assets/access", "application/json")
      .withBody(createAssetInvitesRequest)
      .withPathParam("business_id", businessId)
      .withSuccessResponse[UpdateInvitesResultsResponseArray](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type=\"MEMBER_INVITE\"     - business_role=\"EMPLOYEE\" OR business_role=\"BIZ_ADMIN\" (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type=\"PARTNER_INVITE\"     - business_role=\"PARTNER\"     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type=\"PARTNER_REQUEST\"     - business_role=\"PARTNER\"     - partners
   * 
   * Expected answers:
   *   code 200 : CreateInvitesResultsResponseArray (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param businessId Business id
   * @param createMembershipOrPartnershipInvitesBody An object with the properties: invite_type, partners, members, business_role
   */
  def createMembershipOrPartnershipInvites(businessId: String, createMembershipOrPartnershipInvitesBody: CreateMembershipOrPartnershipInvitesBody): ApiRequest[CreateInvitesResultsResponseArray] =
    ApiRequest[CreateInvitesResultsResponseArray](ApiMethods.POST, baseUrl, "/businesses/{business_id}/invites", "application/json")
      .withBody(createMembershipOrPartnershipInvitesBody)
      .withPathParam("business_id", businessId)
      .withSuccessResponse[CreateInvitesResultsResponseArray](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get the membership/partnership invites and/or requests for the authorized user.
   * 
   * Expected answers:
   *   code 200 : GetInvites200Response (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param businessId Unique identifier of the requesting business.
   * @param isMember A boolean field to indicate whether the invite is to create a partnership or a membership.
   * @param inviteStatus A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned.
   * @param inviteType Invite type to filter invites by. Only invites of the specified type will be returned.
   * @param bookmark Cursor used to fetch the next page of items
   * @param pageSize Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
   */
  def getInvites(businessId: String, isMember: Option[Boolean] = None, inviteStatus: Seq[String], inviteType: Option[InviteType] = None, bookmark: Option[String] = None, pageSize: Option[Int] = None): ApiRequest[GetInvites200Response] =
    ApiRequest[GetInvites200Response](ApiMethods.GET, baseUrl, "/businesses/{business_id}/invites", "application/json")
      .withQueryParam("is_member", isMember)
      .withQueryParam("invite_status", ArrayValues(inviteStatus, MULTI))
      .withQueryParam("invite_type", inviteType)
      .withQueryParam("bookmark", bookmark)
      .withQueryParam("page_size", pageSize)
      .withPathParam("business_id", businessId)
      .withSuccessResponse[GetInvites200Response](200)
      .withDefaultErrorResponse[Error]
      

  /**
   * Accept or decline invites or requests.
   * 
   * Expected answers:
   *   code 200 : RespondToInvitesResponseArray (Success)
   *   code 0 : Error (Unexpected error)
   * 
   * @param authRespondInvitesBody 
   */
  def respondBusinessAccessInvites(authRespondInvitesBody: AuthRespondInvitesBody): ApiRequest[RespondToInvitesResponseArray] =
    ApiRequest[RespondToInvitesResponseArray](ApiMethods.PATCH, baseUrl, "/businesses/invites", "application/json")
      .withBody(authRespondInvitesBody)
      .withSuccessResponse[RespondToInvitesResponseArray](200)
      .withDefaultErrorResponse[Error]
      



}

