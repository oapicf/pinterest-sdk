/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.Error
import org.openapitools.client.model.RelatedTerms
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object TermsApi {

  def apply(baseUrl: String = "https://api.pinterest.com/v5") = new TermsApi(baseUrl)
}

class TermsApi(baseUrl: String) {

  /**
   * Get a list of terms logically related to each input term. <p/> Example: the term 'workout' would list related terms like 'one song workout', 'yoga workout', 'workout motivation', etc.
   * 
   * Expected answers:
   *   code 200 : RelatedTerms (Success)
   *   code 400 : Error (Invalid terms related parameters.)
   *   code 0 : Error (Unexpected error)
   * 
   * @param terms List of input terms.
   */
  def termsRelatedList(terms: Seq[String]): ApiRequest[RelatedTerms] =
    ApiRequest[RelatedTerms](ApiMethods.GET, baseUrl, "/terms/related", "application/json")
      .withQueryParam("terms", ArrayValues(terms, MULTI))
      .withSuccessResponse[RelatedTerms](200)
      .withErrorResponse[Error](400)
      .withDefaultErrorResponse[Error]
      

  /**
   * Get popular search terms that begin with your input term. <p/> Example: 'sport' would return popular terms like 'sports bar' and 'sportswear', but not 'motor sports' since the phrase does not begin with the given term.
   * 
   * Expected answers:
   *   code 200 : Seq[String] (Success)
   *   code 400 : Error (Invalid terms suggested parameters.)
   *   code 0 : Error (Unexpected error)
   * 
   * @param term Input term.
   * @param limit Max suggested terms to return.
   */
  def termsSuggestedList(term: String, limit: Option[Int] = None): ApiRequest[Seq[String]] =
    ApiRequest[Seq[String]](ApiMethods.GET, baseUrl, "/terms/suggested", "application/json")
      .withQueryParam("term", term)
      .withQueryParam("limit", limit)
      .withSuccessResponse[Seq[String]](200)
      .withErrorResponse[Error](400)
      .withDefaultErrorResponse[Error]
      



}

