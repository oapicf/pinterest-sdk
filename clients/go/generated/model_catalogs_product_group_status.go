/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CatalogsProductGroupStatus the model 'CatalogsProductGroupStatus'
type CatalogsProductGroupStatus string

// List of CatalogsProductGroupStatus
const (
	ACTIVE CatalogsProductGroupStatus = "ACTIVE"
	INACTIVE CatalogsProductGroupStatus = "INACTIVE"
)

// All allowed values of CatalogsProductGroupStatus enum
var AllowedCatalogsProductGroupStatusEnumValues = []CatalogsProductGroupStatus{
	"ACTIVE",
	"INACTIVE",
}

func (v *CatalogsProductGroupStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CatalogsProductGroupStatus(value)
	for _, existing := range AllowedCatalogsProductGroupStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CatalogsProductGroupStatus", value)
}

// NewCatalogsProductGroupStatusFromValue returns a pointer to a valid CatalogsProductGroupStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCatalogsProductGroupStatusFromValue(v string) (*CatalogsProductGroupStatus, error) {
	ev := CatalogsProductGroupStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CatalogsProductGroupStatus: valid values are %v", v, AllowedCatalogsProductGroupStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CatalogsProductGroupStatus) IsValid() bool {
	for _, existing := range AllowedCatalogsProductGroupStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CatalogsProductGroupStatus value
func (v CatalogsProductGroupStatus) Ptr() *CatalogsProductGroupStatus {
	return &v
}

type NullableCatalogsProductGroupStatus struct {
	value *CatalogsProductGroupStatus
	isSet bool
}

func (v NullableCatalogsProductGroupStatus) Get() *CatalogsProductGroupStatus {
	return v.value
}

func (v *NullableCatalogsProductGroupStatus) Set(val *CatalogsProductGroupStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupStatus(val *CatalogsProductGroupStatus) *NullableCatalogsProductGroupStatus {
	return &NullableCatalogsProductGroupStatus{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

