/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LeadFormQuestion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LeadFormQuestion{}

// LeadFormQuestion struct for LeadFormQuestion
type LeadFormQuestion struct {
	QuestionType *LeadFormQuestionType `json:"question_type,omitempty"`
	CustomQuestionFieldType NullableLeadFormQuestionFieldType `json:"custom_question_field_type,omitempty"`
	// Question label for a custom question.
	CustomQuestionLabel NullableString `json:"custom_question_label,omitempty"`
	// Question options for a custom question.
	CustomQuestionOptions []string `json:"custom_question_options,omitempty"`
}

// NewLeadFormQuestion instantiates a new LeadFormQuestion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeadFormQuestion() *LeadFormQuestion {
	this := LeadFormQuestion{}
	return &this
}

// NewLeadFormQuestionWithDefaults instantiates a new LeadFormQuestion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeadFormQuestionWithDefaults() *LeadFormQuestion {
	this := LeadFormQuestion{}
	return &this
}

// GetQuestionType returns the QuestionType field value if set, zero value otherwise.
func (o *LeadFormQuestion) GetQuestionType() LeadFormQuestionType {
	if o == nil || IsNil(o.QuestionType) {
		var ret LeadFormQuestionType
		return ret
	}
	return *o.QuestionType
}

// GetQuestionTypeOk returns a tuple with the QuestionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeadFormQuestion) GetQuestionTypeOk() (*LeadFormQuestionType, bool) {
	if o == nil || IsNil(o.QuestionType) {
		return nil, false
	}
	return o.QuestionType, true
}

// HasQuestionType returns a boolean if a field has been set.
func (o *LeadFormQuestion) HasQuestionType() bool {
	if o != nil && !IsNil(o.QuestionType) {
		return true
	}

	return false
}

// SetQuestionType gets a reference to the given LeadFormQuestionType and assigns it to the QuestionType field.
func (o *LeadFormQuestion) SetQuestionType(v LeadFormQuestionType) {
	o.QuestionType = &v
}

// GetCustomQuestionFieldType returns the CustomQuestionFieldType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LeadFormQuestion) GetCustomQuestionFieldType() LeadFormQuestionFieldType {
	if o == nil || IsNil(o.CustomQuestionFieldType.Get()) {
		var ret LeadFormQuestionFieldType
		return ret
	}
	return *o.CustomQuestionFieldType.Get()
}

// GetCustomQuestionFieldTypeOk returns a tuple with the CustomQuestionFieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LeadFormQuestion) GetCustomQuestionFieldTypeOk() (*LeadFormQuestionFieldType, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomQuestionFieldType.Get(), o.CustomQuestionFieldType.IsSet()
}

// HasCustomQuestionFieldType returns a boolean if a field has been set.
func (o *LeadFormQuestion) HasCustomQuestionFieldType() bool {
	if o != nil && o.CustomQuestionFieldType.IsSet() {
		return true
	}

	return false
}

// SetCustomQuestionFieldType gets a reference to the given NullableLeadFormQuestionFieldType and assigns it to the CustomQuestionFieldType field.
func (o *LeadFormQuestion) SetCustomQuestionFieldType(v LeadFormQuestionFieldType) {
	o.CustomQuestionFieldType.Set(&v)
}
// SetCustomQuestionFieldTypeNil sets the value for CustomQuestionFieldType to be an explicit nil
func (o *LeadFormQuestion) SetCustomQuestionFieldTypeNil() {
	o.CustomQuestionFieldType.Set(nil)
}

// UnsetCustomQuestionFieldType ensures that no value is present for CustomQuestionFieldType, not even an explicit nil
func (o *LeadFormQuestion) UnsetCustomQuestionFieldType() {
	o.CustomQuestionFieldType.Unset()
}

// GetCustomQuestionLabel returns the CustomQuestionLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LeadFormQuestion) GetCustomQuestionLabel() string {
	if o == nil || IsNil(o.CustomQuestionLabel.Get()) {
		var ret string
		return ret
	}
	return *o.CustomQuestionLabel.Get()
}

// GetCustomQuestionLabelOk returns a tuple with the CustomQuestionLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LeadFormQuestion) GetCustomQuestionLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomQuestionLabel.Get(), o.CustomQuestionLabel.IsSet()
}

// HasCustomQuestionLabel returns a boolean if a field has been set.
func (o *LeadFormQuestion) HasCustomQuestionLabel() bool {
	if o != nil && o.CustomQuestionLabel.IsSet() {
		return true
	}

	return false
}

// SetCustomQuestionLabel gets a reference to the given NullableString and assigns it to the CustomQuestionLabel field.
func (o *LeadFormQuestion) SetCustomQuestionLabel(v string) {
	o.CustomQuestionLabel.Set(&v)
}
// SetCustomQuestionLabelNil sets the value for CustomQuestionLabel to be an explicit nil
func (o *LeadFormQuestion) SetCustomQuestionLabelNil() {
	o.CustomQuestionLabel.Set(nil)
}

// UnsetCustomQuestionLabel ensures that no value is present for CustomQuestionLabel, not even an explicit nil
func (o *LeadFormQuestion) UnsetCustomQuestionLabel() {
	o.CustomQuestionLabel.Unset()
}

// GetCustomQuestionOptions returns the CustomQuestionOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LeadFormQuestion) GetCustomQuestionOptions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CustomQuestionOptions
}

// GetCustomQuestionOptionsOk returns a tuple with the CustomQuestionOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LeadFormQuestion) GetCustomQuestionOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomQuestionOptions) {
		return nil, false
	}
	return o.CustomQuestionOptions, true
}

// HasCustomQuestionOptions returns a boolean if a field has been set.
func (o *LeadFormQuestion) HasCustomQuestionOptions() bool {
	if o != nil && !IsNil(o.CustomQuestionOptions) {
		return true
	}

	return false
}

// SetCustomQuestionOptions gets a reference to the given []string and assigns it to the CustomQuestionOptions field.
func (o *LeadFormQuestion) SetCustomQuestionOptions(v []string) {
	o.CustomQuestionOptions = v
}

func (o LeadFormQuestion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LeadFormQuestion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuestionType) {
		toSerialize["question_type"] = o.QuestionType
	}
	if o.CustomQuestionFieldType.IsSet() {
		toSerialize["custom_question_field_type"] = o.CustomQuestionFieldType.Get()
	}
	if o.CustomQuestionLabel.IsSet() {
		toSerialize["custom_question_label"] = o.CustomQuestionLabel.Get()
	}
	if o.CustomQuestionOptions != nil {
		toSerialize["custom_question_options"] = o.CustomQuestionOptions
	}
	return toSerialize, nil
}

type NullableLeadFormQuestion struct {
	value *LeadFormQuestion
	isSet bool
}

func (v NullableLeadFormQuestion) Get() *LeadFormQuestion {
	return v.value
}

func (v *NullableLeadFormQuestion) Set(val *LeadFormQuestion) {
	v.value = val
	v.isSet = true
}

func (v NullableLeadFormQuestion) IsSet() bool {
	return v.isSet
}

func (v *NullableLeadFormQuestion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeadFormQuestion(val *LeadFormQuestion) *NullableLeadFormQuestion {
	return &NullableLeadFormQuestion{value: val, isSet: true}
}

func (v NullableLeadFormQuestion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeadFormQuestion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


