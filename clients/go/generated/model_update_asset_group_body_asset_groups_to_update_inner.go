/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateAssetGroupBodyAssetGroupsToUpdateInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAssetGroupBodyAssetGroupsToUpdateInner{}

// UpdateAssetGroupBodyAssetGroupsToUpdateInner struct for UpdateAssetGroupBodyAssetGroupsToUpdateInner
type UpdateAssetGroupBodyAssetGroupsToUpdateInner struct {
	// Unique identifier of the asset group to update.
	AssetGroupId string `json:"asset_group_id"`
	// Asset Group name
	Name *string `json:"name,omitempty"`
	// Asset group description
	Description *string `json:"description,omitempty"`
	// Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
	AssetGroupTypes []AssetGroupType `json:"asset_group_types,omitempty"`
	// A list of asset ids to add to the asset group.
	AssetsToAdd []string `json:"assets_to_add,omitempty"`
	// A list of asset ids to remove from the asset group.
	AssetsToRemove []string `json:"assets_to_remove,omitempty"`
}

type _UpdateAssetGroupBodyAssetGroupsToUpdateInner UpdateAssetGroupBodyAssetGroupsToUpdateInner

// NewUpdateAssetGroupBodyAssetGroupsToUpdateInner instantiates a new UpdateAssetGroupBodyAssetGroupsToUpdateInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAssetGroupBodyAssetGroupsToUpdateInner(assetGroupId string) *UpdateAssetGroupBodyAssetGroupsToUpdateInner {
	this := UpdateAssetGroupBodyAssetGroupsToUpdateInner{}
	this.AssetGroupId = assetGroupId
	return &this
}

// NewUpdateAssetGroupBodyAssetGroupsToUpdateInnerWithDefaults instantiates a new UpdateAssetGroupBodyAssetGroupsToUpdateInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAssetGroupBodyAssetGroupsToUpdateInnerWithDefaults() *UpdateAssetGroupBodyAssetGroupsToUpdateInner {
	this := UpdateAssetGroupBodyAssetGroupsToUpdateInner{}
	return &this
}

// GetAssetGroupId returns the AssetGroupId field value
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetGroupId
}

// GetAssetGroupIdOk returns a tuple with the AssetGroupId field value
// and a boolean to check if the value has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetGroupId, true
}

// SetAssetGroupId sets field value
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) SetAssetGroupId(v string) {
	o.AssetGroupId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) SetDescription(v string) {
	o.Description = &v
}

// GetAssetGroupTypes returns the AssetGroupTypes field value if set, zero value otherwise.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetGroupTypes() []AssetGroupType {
	if o == nil || IsNil(o.AssetGroupTypes) {
		var ret []AssetGroupType
		return ret
	}
	return o.AssetGroupTypes
}

// GetAssetGroupTypesOk returns a tuple with the AssetGroupTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetGroupTypesOk() ([]AssetGroupType, bool) {
	if o == nil || IsNil(o.AssetGroupTypes) {
		return nil, false
	}
	return o.AssetGroupTypes, true
}

// HasAssetGroupTypes returns a boolean if a field has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) HasAssetGroupTypes() bool {
	if o != nil && !IsNil(o.AssetGroupTypes) {
		return true
	}

	return false
}

// SetAssetGroupTypes gets a reference to the given []AssetGroupType and assigns it to the AssetGroupTypes field.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) SetAssetGroupTypes(v []AssetGroupType) {
	o.AssetGroupTypes = v
}

// GetAssetsToAdd returns the AssetsToAdd field value if set, zero value otherwise.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetsToAdd() []string {
	if o == nil || IsNil(o.AssetsToAdd) {
		var ret []string
		return ret
	}
	return o.AssetsToAdd
}

// GetAssetsToAddOk returns a tuple with the AssetsToAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetsToAddOk() ([]string, bool) {
	if o == nil || IsNil(o.AssetsToAdd) {
		return nil, false
	}
	return o.AssetsToAdd, true
}

// HasAssetsToAdd returns a boolean if a field has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) HasAssetsToAdd() bool {
	if o != nil && !IsNil(o.AssetsToAdd) {
		return true
	}

	return false
}

// SetAssetsToAdd gets a reference to the given []string and assigns it to the AssetsToAdd field.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) SetAssetsToAdd(v []string) {
	o.AssetsToAdd = v
}

// GetAssetsToRemove returns the AssetsToRemove field value if set, zero value otherwise.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetsToRemove() []string {
	if o == nil || IsNil(o.AssetsToRemove) {
		var ret []string
		return ret
	}
	return o.AssetsToRemove
}

// GetAssetsToRemoveOk returns a tuple with the AssetsToRemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) GetAssetsToRemoveOk() ([]string, bool) {
	if o == nil || IsNil(o.AssetsToRemove) {
		return nil, false
	}
	return o.AssetsToRemove, true
}

// HasAssetsToRemove returns a boolean if a field has been set.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) HasAssetsToRemove() bool {
	if o != nil && !IsNil(o.AssetsToRemove) {
		return true
	}

	return false
}

// SetAssetsToRemove gets a reference to the given []string and assigns it to the AssetsToRemove field.
func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) SetAssetsToRemove(v []string) {
	o.AssetsToRemove = v
}

func (o UpdateAssetGroupBodyAssetGroupsToUpdateInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAssetGroupBodyAssetGroupsToUpdateInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_group_id"] = o.AssetGroupId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AssetGroupTypes) {
		toSerialize["asset_group_types"] = o.AssetGroupTypes
	}
	if !IsNil(o.AssetsToAdd) {
		toSerialize["assets_to_add"] = o.AssetsToAdd
	}
	if !IsNil(o.AssetsToRemove) {
		toSerialize["assets_to_remove"] = o.AssetsToRemove
	}
	return toSerialize, nil
}

func (o *UpdateAssetGroupBodyAssetGroupsToUpdateInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_group_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateAssetGroupBodyAssetGroupsToUpdateInner := _UpdateAssetGroupBodyAssetGroupsToUpdateInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateAssetGroupBodyAssetGroupsToUpdateInner)

	if err != nil {
		return err
	}

	*o = UpdateAssetGroupBodyAssetGroupsToUpdateInner(varUpdateAssetGroupBodyAssetGroupsToUpdateInner)

	return err
}

type NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner struct {
	value *UpdateAssetGroupBodyAssetGroupsToUpdateInner
	isSet bool
}

func (v NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner) Get() *UpdateAssetGroupBodyAssetGroupsToUpdateInner {
	return v.value
}

func (v *NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner) Set(val *UpdateAssetGroupBodyAssetGroupsToUpdateInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAssetGroupBodyAssetGroupsToUpdateInner(val *UpdateAssetGroupBodyAssetGroupsToUpdateInner) *NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner {
	return &NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner{value: val, isSet: true}
}

func (v NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAssetGroupBodyAssetGroupsToUpdateInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


