/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsRetailProductMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsRetailProductMetadata{}

// CatalogsRetailProductMetadata Retail product metadata entity
type CatalogsRetailProductMetadata struct {
	// The user-created unique ID that represents the product.
	ItemId string `json:"item_id"`
	// The parent ID of the product.
	ItemGroupId NullableString `json:"item_group_id"`
	Availability NonNullableProductAvailabilityType `json:"availability"`
	// The price of the product.
	Price float32 `json:"price"`
	// The discounted price of the product.
	SalePrice NullableFloat32 `json:"sale_price"`
	Currency NonNullableCatalogsCurrency `json:"currency"`
}

type _CatalogsRetailProductMetadata CatalogsRetailProductMetadata

// NewCatalogsRetailProductMetadata instantiates a new CatalogsRetailProductMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsRetailProductMetadata(itemId string, itemGroupId NullableString, availability NonNullableProductAvailabilityType, price float32, salePrice NullableFloat32, currency NonNullableCatalogsCurrency) *CatalogsRetailProductMetadata {
	this := CatalogsRetailProductMetadata{}
	this.ItemId = itemId
	this.ItemGroupId = itemGroupId
	this.Availability = availability
	this.Price = price
	this.SalePrice = salePrice
	this.Currency = currency
	return &this
}

// NewCatalogsRetailProductMetadataWithDefaults instantiates a new CatalogsRetailProductMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsRetailProductMetadataWithDefaults() *CatalogsRetailProductMetadata {
	this := CatalogsRetailProductMetadata{}
	return &this
}

// GetItemId returns the ItemId field value
func (o *CatalogsRetailProductMetadata) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductMetadata) GetItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *CatalogsRetailProductMetadata) SetItemId(v string) {
	o.ItemId = v
}

// GetItemGroupId returns the ItemGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CatalogsRetailProductMetadata) GetItemGroupId() string {
	if o == nil || o.ItemGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemGroupId.Get()
}

// GetItemGroupIdOk returns a tuple with the ItemGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductMetadata) GetItemGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemGroupId.Get(), o.ItemGroupId.IsSet()
}

// SetItemGroupId sets field value
func (o *CatalogsRetailProductMetadata) SetItemGroupId(v string) {
	o.ItemGroupId.Set(&v)
}

// GetAvailability returns the Availability field value
func (o *CatalogsRetailProductMetadata) GetAvailability() NonNullableProductAvailabilityType {
	if o == nil {
		var ret NonNullableProductAvailabilityType
		return ret
	}

	return o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductMetadata) GetAvailabilityOk() (*NonNullableProductAvailabilityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Availability, true
}

// SetAvailability sets field value
func (o *CatalogsRetailProductMetadata) SetAvailability(v NonNullableProductAvailabilityType) {
	o.Availability = v
}

// GetPrice returns the Price field value
func (o *CatalogsRetailProductMetadata) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductMetadata) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *CatalogsRetailProductMetadata) SetPrice(v float32) {
	o.Price = v
}

// GetSalePrice returns the SalePrice field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *CatalogsRetailProductMetadata) GetSalePrice() float32 {
	if o == nil || o.SalePrice.Get() == nil {
		var ret float32
		return ret
	}

	return *o.SalePrice.Get()
}

// GetSalePriceOk returns a tuple with the SalePrice field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductMetadata) GetSalePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalePrice.Get(), o.SalePrice.IsSet()
}

// SetSalePrice sets field value
func (o *CatalogsRetailProductMetadata) SetSalePrice(v float32) {
	o.SalePrice.Set(&v)
}

// GetCurrency returns the Currency field value
func (o *CatalogsRetailProductMetadata) GetCurrency() NonNullableCatalogsCurrency {
	if o == nil {
		var ret NonNullableCatalogsCurrency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductMetadata) GetCurrencyOk() (*NonNullableCatalogsCurrency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CatalogsRetailProductMetadata) SetCurrency(v NonNullableCatalogsCurrency) {
	o.Currency = v
}

func (o CatalogsRetailProductMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsRetailProductMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["item_id"] = o.ItemId
	toSerialize["item_group_id"] = o.ItemGroupId.Get()
	toSerialize["availability"] = o.Availability
	toSerialize["price"] = o.Price
	toSerialize["sale_price"] = o.SalePrice.Get()
	toSerialize["currency"] = o.Currency
	return toSerialize, nil
}

func (o *CatalogsRetailProductMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"item_id",
		"item_group_id",
		"availability",
		"price",
		"sale_price",
		"currency",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsRetailProductMetadata := _CatalogsRetailProductMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsRetailProductMetadata)

	if err != nil {
		return err
	}

	*o = CatalogsRetailProductMetadata(varCatalogsRetailProductMetadata)

	return err
}

type NullableCatalogsRetailProductMetadata struct {
	value *CatalogsRetailProductMetadata
	isSet bool
}

func (v NullableCatalogsRetailProductMetadata) Get() *CatalogsRetailProductMetadata {
	return v.value
}

func (v *NullableCatalogsRetailProductMetadata) Set(val *CatalogsRetailProductMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsRetailProductMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsRetailProductMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsRetailProductMetadata(val *CatalogsRetailProductMetadata) *NullableCatalogsRetailProductMetadata {
	return &NullableCatalogsRetailProductMetadata{value: val, isSet: true}
}

func (v NullableCatalogsRetailProductMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsRetailProductMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


