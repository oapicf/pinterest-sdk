/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ConversionReportAttributionType Attribution type. Refers to the Pinterest Tag endpoints
type ConversionReportAttributionType string

// List of ConversionReportAttributionType
const (
	INDIVIDUAL ConversionReportAttributionType = "INDIVIDUAL"
	HOUSEHOLD ConversionReportAttributionType = "HOUSEHOLD"
)

// All allowed values of ConversionReportAttributionType enum
var AllowedConversionReportAttributionTypeEnumValues = []ConversionReportAttributionType{
	"INDIVIDUAL",
	"HOUSEHOLD",
}

func (v *ConversionReportAttributionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConversionReportAttributionType(value)
	for _, existing := range AllowedConversionReportAttributionTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConversionReportAttributionType", value)
}

// NewConversionReportAttributionTypeFromValue returns a pointer to a valid ConversionReportAttributionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConversionReportAttributionTypeFromValue(v string) (*ConversionReportAttributionType, error) {
	ev := ConversionReportAttributionType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConversionReportAttributionType: valid values are %v", v, AllowedConversionReportAttributionTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConversionReportAttributionType) IsValid() bool {
	for _, existing := range AllowedConversionReportAttributionTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConversionReportAttributionType value
func (v ConversionReportAttributionType) Ptr() *ConversionReportAttributionType {
	return &v
}

type NullableConversionReportAttributionType struct {
	value *ConversionReportAttributionType
	isSet bool
}

func (v NullableConversionReportAttributionType) Get() *ConversionReportAttributionType {
	return v.value
}

func (v *NullableConversionReportAttributionType) Set(val *ConversionReportAttributionType) {
	v.value = val
	v.isSet = true
}

func (v NullableConversionReportAttributionType) IsSet() bool {
	return v.isSet
}

func (v *NullableConversionReportAttributionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversionReportAttributionType(val *ConversionReportAttributionType) *NullableConversionReportAttributionType {
	return &NullableConversionReportAttributionType{value: val, isSet: true}
}

func (v NullableConversionReportAttributionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversionReportAttributionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

