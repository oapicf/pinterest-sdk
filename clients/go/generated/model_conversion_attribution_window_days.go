/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ConversionAttributionWindowDays the model 'ConversionAttributionWindowDays'
type ConversionAttributionWindowDays int32

// List of ConversionAttributionWindowDays
const (
	_0 ConversionAttributionWindowDays = 0
	_1 ConversionAttributionWindowDays = 1
	_7 ConversionAttributionWindowDays = 7
	_14 ConversionAttributionWindowDays = 14
	_30 ConversionAttributionWindowDays = 30
	_60 ConversionAttributionWindowDays = 60
)

// All allowed values of ConversionAttributionWindowDays enum
var AllowedConversionAttributionWindowDaysEnumValues = []ConversionAttributionWindowDays{
	0,
	1,
	7,
	14,
	30,
	60,
}

func (v *ConversionAttributionWindowDays) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConversionAttributionWindowDays(value)
	for _, existing := range AllowedConversionAttributionWindowDaysEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConversionAttributionWindowDays", value)
}

// NewConversionAttributionWindowDaysFromValue returns a pointer to a valid ConversionAttributionWindowDays
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConversionAttributionWindowDaysFromValue(v int32) (*ConversionAttributionWindowDays, error) {
	ev := ConversionAttributionWindowDays(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConversionAttributionWindowDays: valid values are %v", v, AllowedConversionAttributionWindowDaysEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConversionAttributionWindowDays) IsValid() bool {
	for _, existing := range AllowedConversionAttributionWindowDaysEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ConversionAttributionWindowDays value
func (v ConversionAttributionWindowDays) Ptr() *ConversionAttributionWindowDays {
	return &v
}

type NullableConversionAttributionWindowDays struct {
	value *ConversionAttributionWindowDays
	isSet bool
}

func (v NullableConversionAttributionWindowDays) Get() *ConversionAttributionWindowDays {
	return v.value
}

func (v *NullableConversionAttributionWindowDays) Set(val *ConversionAttributionWindowDays) {
	v.value = val
	v.isSet = true
}

func (v NullableConversionAttributionWindowDays) IsSet() bool {
	return v.isSet
}

func (v *NullableConversionAttributionWindowDays) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversionAttributionWindowDays(val *ConversionAttributionWindowDays) *NullableConversionAttributionWindowDays {
	return &NullableConversionAttributionWindowDays{value: val, isSet: true}
}

func (v NullableConversionAttributionWindowDays) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversionAttributionWindowDays) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

