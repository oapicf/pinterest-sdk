/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AudienceDemographics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceDemographics{}

// AudienceDemographics Audience demographics
type AudienceDemographics struct {
	// Ages distribution.
	Ages []AudienceDemographicValue `json:"ages,omitempty"`
	// Gender distribution.
	Genders []AudienceDemographicValue `json:"genders,omitempty"`
	// Device usage distribution.
	Devices []AudienceDemographicValue `json:"devices,omitempty"`
	// Geographic metro area distribution.
	Metros []AudienceDemographicValue `json:"metros,omitempty"`
	// Country area distribution.
	Countries []AudienceDemographicValue `json:"countries,omitempty"`
}

// NewAudienceDemographics instantiates a new AudienceDemographics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceDemographics() *AudienceDemographics {
	this := AudienceDemographics{}
	return &this
}

// NewAudienceDemographicsWithDefaults instantiates a new AudienceDemographics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceDemographicsWithDefaults() *AudienceDemographics {
	this := AudienceDemographics{}
	return &this
}

// GetAges returns the Ages field value if set, zero value otherwise.
func (o *AudienceDemographics) GetAges() []AudienceDemographicValue {
	if o == nil || IsNil(o.Ages) {
		var ret []AudienceDemographicValue
		return ret
	}
	return o.Ages
}

// GetAgesOk returns a tuple with the Ages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceDemographics) GetAgesOk() ([]AudienceDemographicValue, bool) {
	if o == nil || IsNil(o.Ages) {
		return nil, false
	}
	return o.Ages, true
}

// HasAges returns a boolean if a field has been set.
func (o *AudienceDemographics) HasAges() bool {
	if o != nil && !IsNil(o.Ages) {
		return true
	}

	return false
}

// SetAges gets a reference to the given []AudienceDemographicValue and assigns it to the Ages field.
func (o *AudienceDemographics) SetAges(v []AudienceDemographicValue) {
	o.Ages = v
}

// GetGenders returns the Genders field value if set, zero value otherwise.
func (o *AudienceDemographics) GetGenders() []AudienceDemographicValue {
	if o == nil || IsNil(o.Genders) {
		var ret []AudienceDemographicValue
		return ret
	}
	return o.Genders
}

// GetGendersOk returns a tuple with the Genders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceDemographics) GetGendersOk() ([]AudienceDemographicValue, bool) {
	if o == nil || IsNil(o.Genders) {
		return nil, false
	}
	return o.Genders, true
}

// HasGenders returns a boolean if a field has been set.
func (o *AudienceDemographics) HasGenders() bool {
	if o != nil && !IsNil(o.Genders) {
		return true
	}

	return false
}

// SetGenders gets a reference to the given []AudienceDemographicValue and assigns it to the Genders field.
func (o *AudienceDemographics) SetGenders(v []AudienceDemographicValue) {
	o.Genders = v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *AudienceDemographics) GetDevices() []AudienceDemographicValue {
	if o == nil || IsNil(o.Devices) {
		var ret []AudienceDemographicValue
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceDemographics) GetDevicesOk() ([]AudienceDemographicValue, bool) {
	if o == nil || IsNil(o.Devices) {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *AudienceDemographics) HasDevices() bool {
	if o != nil && !IsNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []AudienceDemographicValue and assigns it to the Devices field.
func (o *AudienceDemographics) SetDevices(v []AudienceDemographicValue) {
	o.Devices = v
}

// GetMetros returns the Metros field value if set, zero value otherwise.
func (o *AudienceDemographics) GetMetros() []AudienceDemographicValue {
	if o == nil || IsNil(o.Metros) {
		var ret []AudienceDemographicValue
		return ret
	}
	return o.Metros
}

// GetMetrosOk returns a tuple with the Metros field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceDemographics) GetMetrosOk() ([]AudienceDemographicValue, bool) {
	if o == nil || IsNil(o.Metros) {
		return nil, false
	}
	return o.Metros, true
}

// HasMetros returns a boolean if a field has been set.
func (o *AudienceDemographics) HasMetros() bool {
	if o != nil && !IsNil(o.Metros) {
		return true
	}

	return false
}

// SetMetros gets a reference to the given []AudienceDemographicValue and assigns it to the Metros field.
func (o *AudienceDemographics) SetMetros(v []AudienceDemographicValue) {
	o.Metros = v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *AudienceDemographics) GetCountries() []AudienceDemographicValue {
	if o == nil || IsNil(o.Countries) {
		var ret []AudienceDemographicValue
		return ret
	}
	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceDemographics) GetCountriesOk() ([]AudienceDemographicValue, bool) {
	if o == nil || IsNil(o.Countries) {
		return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *AudienceDemographics) HasCountries() bool {
	if o != nil && !IsNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given []AudienceDemographicValue and assigns it to the Countries field.
func (o *AudienceDemographics) SetCountries(v []AudienceDemographicValue) {
	o.Countries = v
}

func (o AudienceDemographics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceDemographics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ages) {
		toSerialize["ages"] = o.Ages
	}
	if !IsNil(o.Genders) {
		toSerialize["genders"] = o.Genders
	}
	if !IsNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	if !IsNil(o.Metros) {
		toSerialize["metros"] = o.Metros
	}
	if !IsNil(o.Countries) {
		toSerialize["countries"] = o.Countries
	}
	return toSerialize, nil
}

type NullableAudienceDemographics struct {
	value *AudienceDemographics
	isSet bool
}

func (v NullableAudienceDemographics) Get() *AudienceDemographics {
	return v.value
}

func (v *NullableAudienceDemographics) Set(val *AudienceDemographics) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceDemographics) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceDemographics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceDemographics(val *AudienceDemographics) *NullableAudienceDemographics {
	return &NullableAudienceDemographics{value: val, isSet: true}
}

func (v NullableAudienceDemographics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceDemographics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


