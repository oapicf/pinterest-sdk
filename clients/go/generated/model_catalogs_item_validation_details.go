/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsItemValidationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsItemValidationDetails{}

// CatalogsItemValidationDetails struct for CatalogsItemValidationDetails
type CatalogsItemValidationDetails struct {
	AttributeName NullableNullableCatalogsItemFieldType `json:"attribute_name"`
	// Provided value that caused the validation issue.
	ProvidedValue NullableString `json:"provided_value"`
}

type _CatalogsItemValidationDetails CatalogsItemValidationDetails

// NewCatalogsItemValidationDetails instantiates a new CatalogsItemValidationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsItemValidationDetails(attributeName NullableNullableCatalogsItemFieldType, providedValue NullableString) *CatalogsItemValidationDetails {
	this := CatalogsItemValidationDetails{}
	this.AttributeName = attributeName
	this.ProvidedValue = providedValue
	return &this
}

// NewCatalogsItemValidationDetailsWithDefaults instantiates a new CatalogsItemValidationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsItemValidationDetailsWithDefaults() *CatalogsItemValidationDetails {
	this := CatalogsItemValidationDetails{}
	return &this
}

// GetAttributeName returns the AttributeName field value
// If the value is explicit nil, the zero value for NullableCatalogsItemFieldType will be returned
func (o *CatalogsItemValidationDetails) GetAttributeName() NullableCatalogsItemFieldType {
	if o == nil || o.AttributeName.Get() == nil {
		var ret NullableCatalogsItemFieldType
		return ret
	}

	return *o.AttributeName.Get()
}

// GetAttributeNameOk returns a tuple with the AttributeName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsItemValidationDetails) GetAttributeNameOk() (*NullableCatalogsItemFieldType, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttributeName.Get(), o.AttributeName.IsSet()
}

// SetAttributeName sets field value
func (o *CatalogsItemValidationDetails) SetAttributeName(v NullableCatalogsItemFieldType) {
	o.AttributeName.Set(&v)
}

// GetProvidedValue returns the ProvidedValue field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CatalogsItemValidationDetails) GetProvidedValue() string {
	if o == nil || o.ProvidedValue.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProvidedValue.Get()
}

// GetProvidedValueOk returns a tuple with the ProvidedValue field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsItemValidationDetails) GetProvidedValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProvidedValue.Get(), o.ProvidedValue.IsSet()
}

// SetProvidedValue sets field value
func (o *CatalogsItemValidationDetails) SetProvidedValue(v string) {
	o.ProvidedValue.Set(&v)
}

func (o CatalogsItemValidationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsItemValidationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute_name"] = o.AttributeName.Get()
	toSerialize["provided_value"] = o.ProvidedValue.Get()
	return toSerialize, nil
}

func (o *CatalogsItemValidationDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attribute_name",
		"provided_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsItemValidationDetails := _CatalogsItemValidationDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsItemValidationDetails)

	if err != nil {
		return err
	}

	*o = CatalogsItemValidationDetails(varCatalogsItemValidationDetails)

	return err
}

type NullableCatalogsItemValidationDetails struct {
	value *CatalogsItemValidationDetails
	isSet bool
}

func (v NullableCatalogsItemValidationDetails) Get() *CatalogsItemValidationDetails {
	return v.value
}

func (v *NullableCatalogsItemValidationDetails) Set(val *CatalogsItemValidationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsItemValidationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsItemValidationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsItemValidationDetails(val *CatalogsItemValidationDetails) *NullableCatalogsItemValidationDetails {
	return &NullableCatalogsItemValidationDetails{value: val, isSet: true}
}

func (v NullableCatalogsItemValidationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsItemValidationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


