/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdArrayResponseElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdArrayResponseElement{}

// AdArrayResponseElement struct for AdArrayResponseElement
type AdArrayResponseElement struct {
	Data *AdResponse `json:"data,omitempty"`
	Exceptions *Exception `json:"exceptions,omitempty"`
}

// NewAdArrayResponseElement instantiates a new AdArrayResponseElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdArrayResponseElement() *AdArrayResponseElement {
	this := AdArrayResponseElement{}
	return &this
}

// NewAdArrayResponseElementWithDefaults instantiates a new AdArrayResponseElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdArrayResponseElementWithDefaults() *AdArrayResponseElement {
	this := AdArrayResponseElement{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AdArrayResponseElement) GetData() AdResponse {
	if o == nil || IsNil(o.Data) {
		var ret AdResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdArrayResponseElement) GetDataOk() (*AdResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AdArrayResponseElement) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AdResponse and assigns it to the Data field.
func (o *AdArrayResponseElement) SetData(v AdResponse) {
	o.Data = &v
}

// GetExceptions returns the Exceptions field value if set, zero value otherwise.
func (o *AdArrayResponseElement) GetExceptions() Exception {
	if o == nil || IsNil(o.Exceptions) {
		var ret Exception
		return ret
	}
	return *o.Exceptions
}

// GetExceptionsOk returns a tuple with the Exceptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdArrayResponseElement) GetExceptionsOk() (*Exception, bool) {
	if o == nil || IsNil(o.Exceptions) {
		return nil, false
	}
	return o.Exceptions, true
}

// HasExceptions returns a boolean if a field has been set.
func (o *AdArrayResponseElement) HasExceptions() bool {
	if o != nil && !IsNil(o.Exceptions) {
		return true
	}

	return false
}

// SetExceptions gets a reference to the given Exception and assigns it to the Exceptions field.
func (o *AdArrayResponseElement) SetExceptions(v Exception) {
	o.Exceptions = &v
}

func (o AdArrayResponseElement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdArrayResponseElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Exceptions) {
		toSerialize["exceptions"] = o.Exceptions
	}
	return toSerialize, nil
}

type NullableAdArrayResponseElement struct {
	value *AdArrayResponseElement
	isSet bool
}

func (v NullableAdArrayResponseElement) Get() *AdArrayResponseElement {
	return v.value
}

func (v *NullableAdArrayResponseElement) Set(val *AdArrayResponseElement) {
	v.value = val
	v.isSet = true
}

func (v NullableAdArrayResponseElement) IsSet() bool {
	return v.isSet
}

func (v *NullableAdArrayResponseElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdArrayResponseElement(val *AdArrayResponseElement) *NullableAdArrayResponseElement {
	return &NullableAdArrayResponseElement{value: val, isSet: true}
}

func (v NullableAdArrayResponseElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdArrayResponseElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


