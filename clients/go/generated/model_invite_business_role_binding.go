/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InviteBusinessRoleBinding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InviteBusinessRoleBinding{}

// InviteBusinessRoleBinding An invite object if the invite/request was successfully updated. Will only be provided if the an invite/request is successfully updated.
type InviteBusinessRoleBinding struct {
	// Unique identifier for the business that created the invite/request.
	CreatedByBusinessId *string `json:"created_by_business_id,omitempty"`
	// Unique identifier for the user that created the invite/request.
	CreatedByUserId *string `json:"created_by_user_id,omitempty"`
	// Metadata for the user that updated the invite/request.
	User *BusinessAccessUserSummary `json:"user,omitempty"`
	// Unique identifier of the invite/request.
	Id *string `json:"id,omitempty" validate:"regexp=^\\\\d+$"`
	InviteData *BaseInviteDataResponseInviteData `json:"invite_data,omitempty"`
	// Indicates whether the invite/request was received.
	IsReceivedInvite *bool `json:"is_received_invite,omitempty"`
}

// NewInviteBusinessRoleBinding instantiates a new InviteBusinessRoleBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteBusinessRoleBinding() *InviteBusinessRoleBinding {
	this := InviteBusinessRoleBinding{}
	return &this
}

// NewInviteBusinessRoleBindingWithDefaults instantiates a new InviteBusinessRoleBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteBusinessRoleBindingWithDefaults() *InviteBusinessRoleBinding {
	this := InviteBusinessRoleBinding{}
	return &this
}

// GetCreatedByBusinessId returns the CreatedByBusinessId field value if set, zero value otherwise.
func (o *InviteBusinessRoleBinding) GetCreatedByBusinessId() string {
	if o == nil || IsNil(o.CreatedByBusinessId) {
		var ret string
		return ret
	}
	return *o.CreatedByBusinessId
}

// GetCreatedByBusinessIdOk returns a tuple with the CreatedByBusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteBusinessRoleBinding) GetCreatedByBusinessIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByBusinessId) {
		return nil, false
	}
	return o.CreatedByBusinessId, true
}

// HasCreatedByBusinessId returns a boolean if a field has been set.
func (o *InviteBusinessRoleBinding) HasCreatedByBusinessId() bool {
	if o != nil && !IsNil(o.CreatedByBusinessId) {
		return true
	}

	return false
}

// SetCreatedByBusinessId gets a reference to the given string and assigns it to the CreatedByBusinessId field.
func (o *InviteBusinessRoleBinding) SetCreatedByBusinessId(v string) {
	o.CreatedByBusinessId = &v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *InviteBusinessRoleBinding) GetCreatedByUserId() string {
	if o == nil || IsNil(o.CreatedByUserId) {
		var ret string
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteBusinessRoleBinding) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUserId) {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *InviteBusinessRoleBinding) HasCreatedByUserId() bool {
	if o != nil && !IsNil(o.CreatedByUserId) {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given string and assigns it to the CreatedByUserId field.
func (o *InviteBusinessRoleBinding) SetCreatedByUserId(v string) {
	o.CreatedByUserId = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *InviteBusinessRoleBinding) GetUser() BusinessAccessUserSummary {
	if o == nil || IsNil(o.User) {
		var ret BusinessAccessUserSummary
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteBusinessRoleBinding) GetUserOk() (*BusinessAccessUserSummary, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *InviteBusinessRoleBinding) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given BusinessAccessUserSummary and assigns it to the User field.
func (o *InviteBusinessRoleBinding) SetUser(v BusinessAccessUserSummary) {
	o.User = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InviteBusinessRoleBinding) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteBusinessRoleBinding) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InviteBusinessRoleBinding) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InviteBusinessRoleBinding) SetId(v string) {
	o.Id = &v
}

// GetInviteData returns the InviteData field value if set, zero value otherwise.
func (o *InviteBusinessRoleBinding) GetInviteData() BaseInviteDataResponseInviteData {
	if o == nil || IsNil(o.InviteData) {
		var ret BaseInviteDataResponseInviteData
		return ret
	}
	return *o.InviteData
}

// GetInviteDataOk returns a tuple with the InviteData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteBusinessRoleBinding) GetInviteDataOk() (*BaseInviteDataResponseInviteData, bool) {
	if o == nil || IsNil(o.InviteData) {
		return nil, false
	}
	return o.InviteData, true
}

// HasInviteData returns a boolean if a field has been set.
func (o *InviteBusinessRoleBinding) HasInviteData() bool {
	if o != nil && !IsNil(o.InviteData) {
		return true
	}

	return false
}

// SetInviteData gets a reference to the given BaseInviteDataResponseInviteData and assigns it to the InviteData field.
func (o *InviteBusinessRoleBinding) SetInviteData(v BaseInviteDataResponseInviteData) {
	o.InviteData = &v
}

// GetIsReceivedInvite returns the IsReceivedInvite field value if set, zero value otherwise.
func (o *InviteBusinessRoleBinding) GetIsReceivedInvite() bool {
	if o == nil || IsNil(o.IsReceivedInvite) {
		var ret bool
		return ret
	}
	return *o.IsReceivedInvite
}

// GetIsReceivedInviteOk returns a tuple with the IsReceivedInvite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteBusinessRoleBinding) GetIsReceivedInviteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReceivedInvite) {
		return nil, false
	}
	return o.IsReceivedInvite, true
}

// HasIsReceivedInvite returns a boolean if a field has been set.
func (o *InviteBusinessRoleBinding) HasIsReceivedInvite() bool {
	if o != nil && !IsNil(o.IsReceivedInvite) {
		return true
	}

	return false
}

// SetIsReceivedInvite gets a reference to the given bool and assigns it to the IsReceivedInvite field.
func (o *InviteBusinessRoleBinding) SetIsReceivedInvite(v bool) {
	o.IsReceivedInvite = &v
}

func (o InviteBusinessRoleBinding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InviteBusinessRoleBinding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedByBusinessId) {
		toSerialize["created_by_business_id"] = o.CreatedByBusinessId
	}
	if !IsNil(o.CreatedByUserId) {
		toSerialize["created_by_user_id"] = o.CreatedByUserId
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InviteData) {
		toSerialize["invite_data"] = o.InviteData
	}
	if !IsNil(o.IsReceivedInvite) {
		toSerialize["is_received_invite"] = o.IsReceivedInvite
	}
	return toSerialize, nil
}

type NullableInviteBusinessRoleBinding struct {
	value *InviteBusinessRoleBinding
	isSet bool
}

func (v NullableInviteBusinessRoleBinding) Get() *InviteBusinessRoleBinding {
	return v.value
}

func (v *NullableInviteBusinessRoleBinding) Set(val *InviteBusinessRoleBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteBusinessRoleBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteBusinessRoleBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteBusinessRoleBinding(val *InviteBusinessRoleBinding) *NullableInviteBusinessRoleBinding {
	return &NullableInviteBusinessRoleBinding{value: val, isSet: true}
}

func (v NullableInviteBusinessRoleBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteBusinessRoleBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


