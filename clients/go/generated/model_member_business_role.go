/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MemberBusinessRole The access level a member/partner has to the business. Values are case-sensitive. <br> - EMPLOYEE: Can only view and access ad accounts you assign to them. They cannot see details about other employees, external partners or other ad accounts. <br> - BIZ_ADMIN: Have full control of roles and can add employees, external partners as well as grant ad account access.
type MemberBusinessRole string

// List of MemberBusinessRole
const (
	EMPLOYEE MemberBusinessRole = "EMPLOYEE"
	BIZ_ADMIN MemberBusinessRole = "BIZ_ADMIN"
)

// All allowed values of MemberBusinessRole enum
var AllowedMemberBusinessRoleEnumValues = []MemberBusinessRole{
	"EMPLOYEE",
	"BIZ_ADMIN",
}

func (v *MemberBusinessRole) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MemberBusinessRole(value)
	for _, existing := range AllowedMemberBusinessRoleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MemberBusinessRole", value)
}

// NewMemberBusinessRoleFromValue returns a pointer to a valid MemberBusinessRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMemberBusinessRoleFromValue(v string) (*MemberBusinessRole, error) {
	ev := MemberBusinessRole(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MemberBusinessRole: valid values are %v", v, AllowedMemberBusinessRoleEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MemberBusinessRole) IsValid() bool {
	for _, existing := range AllowedMemberBusinessRoleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MemberBusinessRole value
func (v MemberBusinessRole) Ptr() *MemberBusinessRole {
	return &v
}

type NullableMemberBusinessRole struct {
	value *MemberBusinessRole
	isSet bool
}

func (v NullableMemberBusinessRole) Get() *MemberBusinessRole {
	return v.value
}

func (v *NullableMemberBusinessRole) Set(val *MemberBusinessRole) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberBusinessRole) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberBusinessRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberBusinessRole(val *MemberBusinessRole) *NullableMemberBusinessRole {
	return &NullableMemberBusinessRole{value: val, isSet: true}
}

func (v NullableMemberBusinessRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberBusinessRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

