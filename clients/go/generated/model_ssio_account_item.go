/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SSIOAccountItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SSIOAccountItem{}

// SSIOAccountItem struct for SSIOAccountItem
type SSIOAccountItem struct {
	// Salesforce id for billto_info
	Id *string `json:"id,omitempty"`
	// Salesforce id for IO Terms and Conditions
	IoTermsId *string `json:"io_terms_id,omitempty"`
	// Salesforce text for IO Terms and Conditions
	IoTerms *string `json:"io_terms,omitempty"`
	// Salesforce id for US Terms and Conditions
	UsTermsId *string `json:"us_terms_id,omitempty"`
	// Salesforce text for US Terms and Conditions
	UsTerms *string `json:"us_terms,omitempty"`
	// Salesforce id for Rest of the World Terms and Conditions
	RowTermsId *string `json:"row_terms_id,omitempty"`
	// Salesforce text for Rest of the World Terms and Conditions
	RowTerms *string `json:"row_terms,omitempty"`
	// Insertion Order Type - Pinterest Paper or Agency Paper
	IoType *string `json:"io_type,omitempty"`
	// Address information that is associated with this account.
	Addresses []SSIOAccountAddress `json:"addresses,omitempty"`
}

// NewSSIOAccountItem instantiates a new SSIOAccountItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSIOAccountItem() *SSIOAccountItem {
	this := SSIOAccountItem{}
	return &this
}

// NewSSIOAccountItemWithDefaults instantiates a new SSIOAccountItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSIOAccountItemWithDefaults() *SSIOAccountItem {
	this := SSIOAccountItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SSIOAccountItem) SetId(v string) {
	o.Id = &v
}

// GetIoTermsId returns the IoTermsId field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetIoTermsId() string {
	if o == nil || IsNil(o.IoTermsId) {
		var ret string
		return ret
	}
	return *o.IoTermsId
}

// GetIoTermsIdOk returns a tuple with the IoTermsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetIoTermsIdOk() (*string, bool) {
	if o == nil || IsNil(o.IoTermsId) {
		return nil, false
	}
	return o.IoTermsId, true
}

// HasIoTermsId returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasIoTermsId() bool {
	if o != nil && !IsNil(o.IoTermsId) {
		return true
	}

	return false
}

// SetIoTermsId gets a reference to the given string and assigns it to the IoTermsId field.
func (o *SSIOAccountItem) SetIoTermsId(v string) {
	o.IoTermsId = &v
}

// GetIoTerms returns the IoTerms field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetIoTerms() string {
	if o == nil || IsNil(o.IoTerms) {
		var ret string
		return ret
	}
	return *o.IoTerms
}

// GetIoTermsOk returns a tuple with the IoTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetIoTermsOk() (*string, bool) {
	if o == nil || IsNil(o.IoTerms) {
		return nil, false
	}
	return o.IoTerms, true
}

// HasIoTerms returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasIoTerms() bool {
	if o != nil && !IsNil(o.IoTerms) {
		return true
	}

	return false
}

// SetIoTerms gets a reference to the given string and assigns it to the IoTerms field.
func (o *SSIOAccountItem) SetIoTerms(v string) {
	o.IoTerms = &v
}

// GetUsTermsId returns the UsTermsId field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetUsTermsId() string {
	if o == nil || IsNil(o.UsTermsId) {
		var ret string
		return ret
	}
	return *o.UsTermsId
}

// GetUsTermsIdOk returns a tuple with the UsTermsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetUsTermsIdOk() (*string, bool) {
	if o == nil || IsNil(o.UsTermsId) {
		return nil, false
	}
	return o.UsTermsId, true
}

// HasUsTermsId returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasUsTermsId() bool {
	if o != nil && !IsNil(o.UsTermsId) {
		return true
	}

	return false
}

// SetUsTermsId gets a reference to the given string and assigns it to the UsTermsId field.
func (o *SSIOAccountItem) SetUsTermsId(v string) {
	o.UsTermsId = &v
}

// GetUsTerms returns the UsTerms field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetUsTerms() string {
	if o == nil || IsNil(o.UsTerms) {
		var ret string
		return ret
	}
	return *o.UsTerms
}

// GetUsTermsOk returns a tuple with the UsTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetUsTermsOk() (*string, bool) {
	if o == nil || IsNil(o.UsTerms) {
		return nil, false
	}
	return o.UsTerms, true
}

// HasUsTerms returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasUsTerms() bool {
	if o != nil && !IsNil(o.UsTerms) {
		return true
	}

	return false
}

// SetUsTerms gets a reference to the given string and assigns it to the UsTerms field.
func (o *SSIOAccountItem) SetUsTerms(v string) {
	o.UsTerms = &v
}

// GetRowTermsId returns the RowTermsId field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetRowTermsId() string {
	if o == nil || IsNil(o.RowTermsId) {
		var ret string
		return ret
	}
	return *o.RowTermsId
}

// GetRowTermsIdOk returns a tuple with the RowTermsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetRowTermsIdOk() (*string, bool) {
	if o == nil || IsNil(o.RowTermsId) {
		return nil, false
	}
	return o.RowTermsId, true
}

// HasRowTermsId returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasRowTermsId() bool {
	if o != nil && !IsNil(o.RowTermsId) {
		return true
	}

	return false
}

// SetRowTermsId gets a reference to the given string and assigns it to the RowTermsId field.
func (o *SSIOAccountItem) SetRowTermsId(v string) {
	o.RowTermsId = &v
}

// GetRowTerms returns the RowTerms field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetRowTerms() string {
	if o == nil || IsNil(o.RowTerms) {
		var ret string
		return ret
	}
	return *o.RowTerms
}

// GetRowTermsOk returns a tuple with the RowTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetRowTermsOk() (*string, bool) {
	if o == nil || IsNil(o.RowTerms) {
		return nil, false
	}
	return o.RowTerms, true
}

// HasRowTerms returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasRowTerms() bool {
	if o != nil && !IsNil(o.RowTerms) {
		return true
	}

	return false
}

// SetRowTerms gets a reference to the given string and assigns it to the RowTerms field.
func (o *SSIOAccountItem) SetRowTerms(v string) {
	o.RowTerms = &v
}

// GetIoType returns the IoType field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetIoType() string {
	if o == nil || IsNil(o.IoType) {
		var ret string
		return ret
	}
	return *o.IoType
}

// GetIoTypeOk returns a tuple with the IoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetIoTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IoType) {
		return nil, false
	}
	return o.IoType, true
}

// HasIoType returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasIoType() bool {
	if o != nil && !IsNil(o.IoType) {
		return true
	}

	return false
}

// SetIoType gets a reference to the given string and assigns it to the IoType field.
func (o *SSIOAccountItem) SetIoType(v string) {
	o.IoType = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *SSIOAccountItem) GetAddresses() []SSIOAccountAddress {
	if o == nil || IsNil(o.Addresses) {
		var ret []SSIOAccountAddress
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountItem) GetAddressesOk() ([]SSIOAccountAddress, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *SSIOAccountItem) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []SSIOAccountAddress and assigns it to the Addresses field.
func (o *SSIOAccountItem) SetAddresses(v []SSIOAccountAddress) {
	o.Addresses = v
}

func (o SSIOAccountItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SSIOAccountItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IoTermsId) {
		toSerialize["io_terms_id"] = o.IoTermsId
	}
	if !IsNil(o.IoTerms) {
		toSerialize["io_terms"] = o.IoTerms
	}
	if !IsNil(o.UsTermsId) {
		toSerialize["us_terms_id"] = o.UsTermsId
	}
	if !IsNil(o.UsTerms) {
		toSerialize["us_terms"] = o.UsTerms
	}
	if !IsNil(o.RowTermsId) {
		toSerialize["row_terms_id"] = o.RowTermsId
	}
	if !IsNil(o.RowTerms) {
		toSerialize["row_terms"] = o.RowTerms
	}
	if !IsNil(o.IoType) {
		toSerialize["io_type"] = o.IoType
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return toSerialize, nil
}

type NullableSSIOAccountItem struct {
	value *SSIOAccountItem
	isSet bool
}

func (v NullableSSIOAccountItem) Get() *SSIOAccountItem {
	return v.value
}

func (v *NullableSSIOAccountItem) Set(val *SSIOAccountItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSSIOAccountItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSSIOAccountItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSIOAccountItem(val *SSIOAccountItem) *NullableSSIOAccountItem {
	return &NullableSSIOAccountItem{value: val, isSet: true}
}

func (v NullableSSIOAccountItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSIOAccountItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


