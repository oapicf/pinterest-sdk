/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthRespondInvitesBodyInvitesInnerAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthRespondInvitesBodyInvitesInnerAction{}

// AuthRespondInvitesBodyInvitesInnerAction struct for AuthRespondInvitesBodyInvitesInnerAction
type AuthRespondInvitesBodyInvitesInnerAction struct {
	// Whether the invite/request is accepted.
	AcceptInvite bool `json:"accept_invite"`
	// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
	AssetIdToPermissions *map[string][]Permissions `json:"asset_id_to_permissions,omitempty"`
}

type _AuthRespondInvitesBodyInvitesInnerAction AuthRespondInvitesBodyInvitesInnerAction

// NewAuthRespondInvitesBodyInvitesInnerAction instantiates a new AuthRespondInvitesBodyInvitesInnerAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthRespondInvitesBodyInvitesInnerAction(acceptInvite bool) *AuthRespondInvitesBodyInvitesInnerAction {
	this := AuthRespondInvitesBodyInvitesInnerAction{}
	this.AcceptInvite = acceptInvite
	return &this
}

// NewAuthRespondInvitesBodyInvitesInnerActionWithDefaults instantiates a new AuthRespondInvitesBodyInvitesInnerAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthRespondInvitesBodyInvitesInnerActionWithDefaults() *AuthRespondInvitesBodyInvitesInnerAction {
	this := AuthRespondInvitesBodyInvitesInnerAction{}
	return &this
}

// GetAcceptInvite returns the AcceptInvite field value
func (o *AuthRespondInvitesBodyInvitesInnerAction) GetAcceptInvite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AcceptInvite
}

// GetAcceptInviteOk returns a tuple with the AcceptInvite field value
// and a boolean to check if the value has been set.
func (o *AuthRespondInvitesBodyInvitesInnerAction) GetAcceptInviteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptInvite, true
}

// SetAcceptInvite sets field value
func (o *AuthRespondInvitesBodyInvitesInnerAction) SetAcceptInvite(v bool) {
	o.AcceptInvite = v
}

// GetAssetIdToPermissions returns the AssetIdToPermissions field value if set, zero value otherwise.
func (o *AuthRespondInvitesBodyInvitesInnerAction) GetAssetIdToPermissions() map[string][]Permissions {
	if o == nil || IsNil(o.AssetIdToPermissions) {
		var ret map[string][]Permissions
		return ret
	}
	return *o.AssetIdToPermissions
}

// GetAssetIdToPermissionsOk returns a tuple with the AssetIdToPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRespondInvitesBodyInvitesInnerAction) GetAssetIdToPermissionsOk() (*map[string][]Permissions, bool) {
	if o == nil || IsNil(o.AssetIdToPermissions) {
		return nil, false
	}
	return o.AssetIdToPermissions, true
}

// HasAssetIdToPermissions returns a boolean if a field has been set.
func (o *AuthRespondInvitesBodyInvitesInnerAction) HasAssetIdToPermissions() bool {
	if o != nil && !IsNil(o.AssetIdToPermissions) {
		return true
	}

	return false
}

// SetAssetIdToPermissions gets a reference to the given map[string][]Permissions and assigns it to the AssetIdToPermissions field.
func (o *AuthRespondInvitesBodyInvitesInnerAction) SetAssetIdToPermissions(v map[string][]Permissions) {
	o.AssetIdToPermissions = &v
}

func (o AuthRespondInvitesBodyInvitesInnerAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthRespondInvitesBodyInvitesInnerAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accept_invite"] = o.AcceptInvite
	if !IsNil(o.AssetIdToPermissions) {
		toSerialize["asset_id_to_permissions"] = o.AssetIdToPermissions
	}
	return toSerialize, nil
}

func (o *AuthRespondInvitesBodyInvitesInnerAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accept_invite",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthRespondInvitesBodyInvitesInnerAction := _AuthRespondInvitesBodyInvitesInnerAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthRespondInvitesBodyInvitesInnerAction)

	if err != nil {
		return err
	}

	*o = AuthRespondInvitesBodyInvitesInnerAction(varAuthRespondInvitesBodyInvitesInnerAction)

	return err
}

type NullableAuthRespondInvitesBodyInvitesInnerAction struct {
	value *AuthRespondInvitesBodyInvitesInnerAction
	isSet bool
}

func (v NullableAuthRespondInvitesBodyInvitesInnerAction) Get() *AuthRespondInvitesBodyInvitesInnerAction {
	return v.value
}

func (v *NullableAuthRespondInvitesBodyInvitesInnerAction) Set(val *AuthRespondInvitesBodyInvitesInnerAction) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRespondInvitesBodyInvitesInnerAction) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRespondInvitesBodyInvitesInnerAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRespondInvitesBodyInvitesInnerAction(val *AuthRespondInvitesBodyInvitesInnerAction) *NullableAuthRespondInvitesBodyInvitesInnerAction {
	return &NullableAuthRespondInvitesBodyInvitesInnerAction{value: val, isSet: true}
}

func (v NullableAuthRespondInvitesBodyInvitesInnerAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRespondInvitesBodyInvitesInnerAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


