/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TargetingTemplateKeyword type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetingTemplateKeyword{}

// TargetingTemplateKeyword struct for TargetingTemplateKeyword
type TargetingTemplateKeyword struct {
	MatchType *MatchType `json:"match_type,omitempty"`
	// The keyword targeting (120 chars max).
	Value *string `json:"value,omitempty"`
}

// NewTargetingTemplateKeyword instantiates a new TargetingTemplateKeyword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetingTemplateKeyword() *TargetingTemplateKeyword {
	this := TargetingTemplateKeyword{}
	return &this
}

// NewTargetingTemplateKeywordWithDefaults instantiates a new TargetingTemplateKeyword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetingTemplateKeywordWithDefaults() *TargetingTemplateKeyword {
	this := TargetingTemplateKeyword{}
	return &this
}

// GetMatchType returns the MatchType field value if set, zero value otherwise.
func (o *TargetingTemplateKeyword) GetMatchType() MatchType {
	if o == nil || IsNil(o.MatchType) {
		var ret MatchType
		return ret
	}
	return *o.MatchType
}

// GetMatchTypeOk returns a tuple with the MatchType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetingTemplateKeyword) GetMatchTypeOk() (*MatchType, bool) {
	if o == nil || IsNil(o.MatchType) {
		return nil, false
	}
	return o.MatchType, true
}

// HasMatchType returns a boolean if a field has been set.
func (o *TargetingTemplateKeyword) HasMatchType() bool {
	if o != nil && !IsNil(o.MatchType) {
		return true
	}

	return false
}

// SetMatchType gets a reference to the given MatchType and assigns it to the MatchType field.
func (o *TargetingTemplateKeyword) SetMatchType(v MatchType) {
	o.MatchType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TargetingTemplateKeyword) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetingTemplateKeyword) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TargetingTemplateKeyword) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TargetingTemplateKeyword) SetValue(v string) {
	o.Value = &v
}

func (o TargetingTemplateKeyword) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetingTemplateKeyword) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchType) {
		toSerialize["match_type"] = o.MatchType
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableTargetingTemplateKeyword struct {
	value *TargetingTemplateKeyword
	isSet bool
}

func (v NullableTargetingTemplateKeyword) Get() *TargetingTemplateKeyword {
	return v.value
}

func (v *NullableTargetingTemplateKeyword) Set(val *TargetingTemplateKeyword) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetingTemplateKeyword) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetingTemplateKeyword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetingTemplateKeyword(val *TargetingTemplateKeyword) *NullableTargetingTemplateKeyword {
	return &NullableTargetingTemplateKeyword{value: val, isSet: true}
}

func (v NullableTargetingTemplateKeyword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetingTemplateKeyword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


