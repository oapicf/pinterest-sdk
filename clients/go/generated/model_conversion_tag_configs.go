/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConversionTagConfigs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversionTagConfigs{}

// ConversionTagConfigs struct for ConversionTagConfigs
type ConversionTagConfigs struct {
	// Whether Automatic Enhanced Match email is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information.
	AemEnabled NullableBool `json:"aem_enabled,omitempty"`
	// Metadata ingestion frequency.
	MdFrequency NullableFloat32 `json:"md_frequency,omitempty"`
	// Whether Automatic Enhanced Match name is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information.
	AemFnlnEnabled NullableBool `json:"aem_fnln_enabled,omitempty"`
	// Whether Automatic Enhanced Match phone is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information.
	AemPhEnabled NullableBool `json:"aem_ph_enabled,omitempty"`
	// Whether Automatic Enhanced Match gender is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information.
	AemGeEnabled NullableBool `json:"aem_ge_enabled,omitempty"`
	// Whether Automatic Enhanced Match birthdate is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information.
	AemDbEnabled NullableBool `json:"aem_db_enabled,omitempty"`
	// Whether Automatic Enhanced Match location is enabled. See <a href=\"https://help.pinterest.com/en/business/article/enhanced-match\" target=\"_blank\">Enhanced match</a> for more information.
	AemLocEnabled NullableBool `json:"aem_loc_enabled,omitempty"`
}

// NewConversionTagConfigs instantiates a new ConversionTagConfigs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversionTagConfigs() *ConversionTagConfigs {
	this := ConversionTagConfigs{}
	var aemEnabled bool = false
	this.AemEnabled = *NewNullableBool(&aemEnabled)
	var mdFrequency float32 = 1
	this.MdFrequency = *NewNullableFloat32(&mdFrequency)
	var aemFnlnEnabled bool = false
	this.AemFnlnEnabled = *NewNullableBool(&aemFnlnEnabled)
	var aemPhEnabled bool = false
	this.AemPhEnabled = *NewNullableBool(&aemPhEnabled)
	var aemGeEnabled bool = false
	this.AemGeEnabled = *NewNullableBool(&aemGeEnabled)
	var aemDbEnabled bool = false
	this.AemDbEnabled = *NewNullableBool(&aemDbEnabled)
	var aemLocEnabled bool = false
	this.AemLocEnabled = *NewNullableBool(&aemLocEnabled)
	return &this
}

// NewConversionTagConfigsWithDefaults instantiates a new ConversionTagConfigs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversionTagConfigsWithDefaults() *ConversionTagConfigs {
	this := ConversionTagConfigs{}
	var aemEnabled bool = false
	this.AemEnabled = *NewNullableBool(&aemEnabled)
	var mdFrequency float32 = 1
	this.MdFrequency = *NewNullableFloat32(&mdFrequency)
	var aemFnlnEnabled bool = false
	this.AemFnlnEnabled = *NewNullableBool(&aemFnlnEnabled)
	var aemPhEnabled bool = false
	this.AemPhEnabled = *NewNullableBool(&aemPhEnabled)
	var aemGeEnabled bool = false
	this.AemGeEnabled = *NewNullableBool(&aemGeEnabled)
	var aemDbEnabled bool = false
	this.AemDbEnabled = *NewNullableBool(&aemDbEnabled)
	var aemLocEnabled bool = false
	this.AemLocEnabled = *NewNullableBool(&aemLocEnabled)
	return &this
}

// GetAemEnabled returns the AemEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetAemEnabled() bool {
	if o == nil || IsNil(o.AemEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.AemEnabled.Get()
}

// GetAemEnabledOk returns a tuple with the AemEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetAemEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AemEnabled.Get(), o.AemEnabled.IsSet()
}

// HasAemEnabled returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasAemEnabled() bool {
	if o != nil && o.AemEnabled.IsSet() {
		return true
	}

	return false
}

// SetAemEnabled gets a reference to the given NullableBool and assigns it to the AemEnabled field.
func (o *ConversionTagConfigs) SetAemEnabled(v bool) {
	o.AemEnabled.Set(&v)
}
// SetAemEnabledNil sets the value for AemEnabled to be an explicit nil
func (o *ConversionTagConfigs) SetAemEnabledNil() {
	o.AemEnabled.Set(nil)
}

// UnsetAemEnabled ensures that no value is present for AemEnabled, not even an explicit nil
func (o *ConversionTagConfigs) UnsetAemEnabled() {
	o.AemEnabled.Unset()
}

// GetMdFrequency returns the MdFrequency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetMdFrequency() float32 {
	if o == nil || IsNil(o.MdFrequency.Get()) {
		var ret float32
		return ret
	}
	return *o.MdFrequency.Get()
}

// GetMdFrequencyOk returns a tuple with the MdFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetMdFrequencyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MdFrequency.Get(), o.MdFrequency.IsSet()
}

// HasMdFrequency returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasMdFrequency() bool {
	if o != nil && o.MdFrequency.IsSet() {
		return true
	}

	return false
}

// SetMdFrequency gets a reference to the given NullableFloat32 and assigns it to the MdFrequency field.
func (o *ConversionTagConfigs) SetMdFrequency(v float32) {
	o.MdFrequency.Set(&v)
}
// SetMdFrequencyNil sets the value for MdFrequency to be an explicit nil
func (o *ConversionTagConfigs) SetMdFrequencyNil() {
	o.MdFrequency.Set(nil)
}

// UnsetMdFrequency ensures that no value is present for MdFrequency, not even an explicit nil
func (o *ConversionTagConfigs) UnsetMdFrequency() {
	o.MdFrequency.Unset()
}

// GetAemFnlnEnabled returns the AemFnlnEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetAemFnlnEnabled() bool {
	if o == nil || IsNil(o.AemFnlnEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.AemFnlnEnabled.Get()
}

// GetAemFnlnEnabledOk returns a tuple with the AemFnlnEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetAemFnlnEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AemFnlnEnabled.Get(), o.AemFnlnEnabled.IsSet()
}

// HasAemFnlnEnabled returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasAemFnlnEnabled() bool {
	if o != nil && o.AemFnlnEnabled.IsSet() {
		return true
	}

	return false
}

// SetAemFnlnEnabled gets a reference to the given NullableBool and assigns it to the AemFnlnEnabled field.
func (o *ConversionTagConfigs) SetAemFnlnEnabled(v bool) {
	o.AemFnlnEnabled.Set(&v)
}
// SetAemFnlnEnabledNil sets the value for AemFnlnEnabled to be an explicit nil
func (o *ConversionTagConfigs) SetAemFnlnEnabledNil() {
	o.AemFnlnEnabled.Set(nil)
}

// UnsetAemFnlnEnabled ensures that no value is present for AemFnlnEnabled, not even an explicit nil
func (o *ConversionTagConfigs) UnsetAemFnlnEnabled() {
	o.AemFnlnEnabled.Unset()
}

// GetAemPhEnabled returns the AemPhEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetAemPhEnabled() bool {
	if o == nil || IsNil(o.AemPhEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.AemPhEnabled.Get()
}

// GetAemPhEnabledOk returns a tuple with the AemPhEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetAemPhEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AemPhEnabled.Get(), o.AemPhEnabled.IsSet()
}

// HasAemPhEnabled returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasAemPhEnabled() bool {
	if o != nil && o.AemPhEnabled.IsSet() {
		return true
	}

	return false
}

// SetAemPhEnabled gets a reference to the given NullableBool and assigns it to the AemPhEnabled field.
func (o *ConversionTagConfigs) SetAemPhEnabled(v bool) {
	o.AemPhEnabled.Set(&v)
}
// SetAemPhEnabledNil sets the value for AemPhEnabled to be an explicit nil
func (o *ConversionTagConfigs) SetAemPhEnabledNil() {
	o.AemPhEnabled.Set(nil)
}

// UnsetAemPhEnabled ensures that no value is present for AemPhEnabled, not even an explicit nil
func (o *ConversionTagConfigs) UnsetAemPhEnabled() {
	o.AemPhEnabled.Unset()
}

// GetAemGeEnabled returns the AemGeEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetAemGeEnabled() bool {
	if o == nil || IsNil(o.AemGeEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.AemGeEnabled.Get()
}

// GetAemGeEnabledOk returns a tuple with the AemGeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetAemGeEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AemGeEnabled.Get(), o.AemGeEnabled.IsSet()
}

// HasAemGeEnabled returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasAemGeEnabled() bool {
	if o != nil && o.AemGeEnabled.IsSet() {
		return true
	}

	return false
}

// SetAemGeEnabled gets a reference to the given NullableBool and assigns it to the AemGeEnabled field.
func (o *ConversionTagConfigs) SetAemGeEnabled(v bool) {
	o.AemGeEnabled.Set(&v)
}
// SetAemGeEnabledNil sets the value for AemGeEnabled to be an explicit nil
func (o *ConversionTagConfigs) SetAemGeEnabledNil() {
	o.AemGeEnabled.Set(nil)
}

// UnsetAemGeEnabled ensures that no value is present for AemGeEnabled, not even an explicit nil
func (o *ConversionTagConfigs) UnsetAemGeEnabled() {
	o.AemGeEnabled.Unset()
}

// GetAemDbEnabled returns the AemDbEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetAemDbEnabled() bool {
	if o == nil || IsNil(o.AemDbEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.AemDbEnabled.Get()
}

// GetAemDbEnabledOk returns a tuple with the AemDbEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetAemDbEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AemDbEnabled.Get(), o.AemDbEnabled.IsSet()
}

// HasAemDbEnabled returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasAemDbEnabled() bool {
	if o != nil && o.AemDbEnabled.IsSet() {
		return true
	}

	return false
}

// SetAemDbEnabled gets a reference to the given NullableBool and assigns it to the AemDbEnabled field.
func (o *ConversionTagConfigs) SetAemDbEnabled(v bool) {
	o.AemDbEnabled.Set(&v)
}
// SetAemDbEnabledNil sets the value for AemDbEnabled to be an explicit nil
func (o *ConversionTagConfigs) SetAemDbEnabledNil() {
	o.AemDbEnabled.Set(nil)
}

// UnsetAemDbEnabled ensures that no value is present for AemDbEnabled, not even an explicit nil
func (o *ConversionTagConfigs) UnsetAemDbEnabled() {
	o.AemDbEnabled.Unset()
}

// GetAemLocEnabled returns the AemLocEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionTagConfigs) GetAemLocEnabled() bool {
	if o == nil || IsNil(o.AemLocEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.AemLocEnabled.Get()
}

// GetAemLocEnabledOk returns a tuple with the AemLocEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionTagConfigs) GetAemLocEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AemLocEnabled.Get(), o.AemLocEnabled.IsSet()
}

// HasAemLocEnabled returns a boolean if a field has been set.
func (o *ConversionTagConfigs) HasAemLocEnabled() bool {
	if o != nil && o.AemLocEnabled.IsSet() {
		return true
	}

	return false
}

// SetAemLocEnabled gets a reference to the given NullableBool and assigns it to the AemLocEnabled field.
func (o *ConversionTagConfigs) SetAemLocEnabled(v bool) {
	o.AemLocEnabled.Set(&v)
}
// SetAemLocEnabledNil sets the value for AemLocEnabled to be an explicit nil
func (o *ConversionTagConfigs) SetAemLocEnabledNil() {
	o.AemLocEnabled.Set(nil)
}

// UnsetAemLocEnabled ensures that no value is present for AemLocEnabled, not even an explicit nil
func (o *ConversionTagConfigs) UnsetAemLocEnabled() {
	o.AemLocEnabled.Unset()
}

func (o ConversionTagConfigs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversionTagConfigs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AemEnabled.IsSet() {
		toSerialize["aem_enabled"] = o.AemEnabled.Get()
	}
	if o.MdFrequency.IsSet() {
		toSerialize["md_frequency"] = o.MdFrequency.Get()
	}
	if o.AemFnlnEnabled.IsSet() {
		toSerialize["aem_fnln_enabled"] = o.AemFnlnEnabled.Get()
	}
	if o.AemPhEnabled.IsSet() {
		toSerialize["aem_ph_enabled"] = o.AemPhEnabled.Get()
	}
	if o.AemGeEnabled.IsSet() {
		toSerialize["aem_ge_enabled"] = o.AemGeEnabled.Get()
	}
	if o.AemDbEnabled.IsSet() {
		toSerialize["aem_db_enabled"] = o.AemDbEnabled.Get()
	}
	if o.AemLocEnabled.IsSet() {
		toSerialize["aem_loc_enabled"] = o.AemLocEnabled.Get()
	}
	return toSerialize, nil
}

type NullableConversionTagConfigs struct {
	value *ConversionTagConfigs
	isSet bool
}

func (v NullableConversionTagConfigs) Get() *ConversionTagConfigs {
	return v.value
}

func (v *NullableConversionTagConfigs) Set(val *ConversionTagConfigs) {
	v.value = val
	v.isSet = true
}

func (v NullableConversionTagConfigs) IsSet() bool {
	return v.isSet
}

func (v *NullableConversionTagConfigs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversionTagConfigs(val *ConversionTagConfigs) *NullableConversionTagConfigs {
	return &NullableConversionTagConfigs{value: val, isSet: true}
}

func (v NullableConversionTagConfigs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversionTagConfigs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


