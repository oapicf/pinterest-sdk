/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// CatalogsItemsRequestLanguage We recommend using the CatalogsLocale values.
type CatalogsItemsRequestLanguage struct {
	CatalogsLocale *CatalogsLocale
	Language *Language
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CatalogsItemsRequestLanguage) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CatalogsLocale
	err = json.Unmarshal(data, &dst.CatalogsLocale);
	if err == nil {
		jsonCatalogsLocale, _ := json.Marshal(dst.CatalogsLocale)
		if string(jsonCatalogsLocale) == "{}" { // empty struct
			dst.CatalogsLocale = nil
		} else {
			return nil // data stored in dst.CatalogsLocale, return on the first match
		}
	} else {
		dst.CatalogsLocale = nil
	}

	// try to unmarshal JSON data into Language
	err = json.Unmarshal(data, &dst.Language);
	if err == nil {
		jsonLanguage, _ := json.Marshal(dst.Language)
		if string(jsonLanguage) == "{}" { // empty struct
			dst.Language = nil
		} else {
			return nil // data stored in dst.Language, return on the first match
		}
	} else {
		dst.Language = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CatalogsItemsRequestLanguage)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *CatalogsItemsRequestLanguage) MarshalJSON() ([]byte, error) {
	if src.CatalogsLocale != nil {
		return json.Marshal(&src.CatalogsLocale)
	}

	if src.Language != nil {
		return json.Marshal(&src.Language)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableCatalogsItemsRequestLanguage struct {
	value *CatalogsItemsRequestLanguage
	isSet bool
}

func (v NullableCatalogsItemsRequestLanguage) Get() *CatalogsItemsRequestLanguage {
	return v.value
}

func (v *NullableCatalogsItemsRequestLanguage) Set(val *CatalogsItemsRequestLanguage) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsItemsRequestLanguage) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsItemsRequestLanguage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsItemsRequestLanguage(val *CatalogsItemsRequestLanguage) *NullableCatalogsItemsRequestLanguage {
	return &NullableCatalogsItemsRequestLanguage{value: val, isSet: true}
}

func (v NullableCatalogsItemsRequestLanguage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsItemsRequestLanguage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


