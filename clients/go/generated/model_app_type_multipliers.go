/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppTypeMultipliers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppTypeMultipliers{}

// AppTypeMultipliers This represents a mapping from app type targeting criteria to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified app type in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. All app type multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
type AppTypeMultipliers struct {
	APP_TYPE *TargetingSpecAppType `json:"APP_TYPE,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppTypeMultipliers AppTypeMultipliers

// NewAppTypeMultipliers instantiates a new AppTypeMultipliers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppTypeMultipliers() *AppTypeMultipliers {
	this := AppTypeMultipliers{}
	return &this
}

// NewAppTypeMultipliersWithDefaults instantiates a new AppTypeMultipliers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppTypeMultipliersWithDefaults() *AppTypeMultipliers {
	this := AppTypeMultipliers{}
	return &this
}

// GetAPP_TYPE returns the APP_TYPE field value if set, zero value otherwise.
func (o *AppTypeMultipliers) GetAPP_TYPE() TargetingSpecAppType {
	if o == nil || IsNil(o.APP_TYPE) {
		var ret TargetingSpecAppType
		return ret
	}
	return *o.APP_TYPE
}

// GetAPP_TYPEOk returns a tuple with the APP_TYPE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppTypeMultipliers) GetAPP_TYPEOk() (*TargetingSpecAppType, bool) {
	if o == nil || IsNil(o.APP_TYPE) {
		return nil, false
	}
	return o.APP_TYPE, true
}

// HasAPP_TYPE returns a boolean if a field has been set.
func (o *AppTypeMultipliers) HasAPP_TYPE() bool {
	if o != nil && !IsNil(o.APP_TYPE) {
		return true
	}

	return false
}

// SetAPP_TYPE gets a reference to the given TargetingSpecAppType and assigns it to the APP_TYPE field.
func (o *AppTypeMultipliers) SetAPP_TYPE(v TargetingSpecAppType) {
	o.APP_TYPE = &v
}

func (o AppTypeMultipliers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppTypeMultipliers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.APP_TYPE) {
		toSerialize["APP_TYPE"] = o.APP_TYPE
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AppTypeMultipliers) UnmarshalJSON(data []byte) (err error) {
	varAppTypeMultipliers := _AppTypeMultipliers{}

	err = json.Unmarshal(data, &varAppTypeMultipliers)

	if err != nil {
		return err
	}

	*o = AppTypeMultipliers(varAppTypeMultipliers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "APP_TYPE")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppTypeMultipliers struct {
	value *AppTypeMultipliers
	isSet bool
}

func (v NullableAppTypeMultipliers) Get() *AppTypeMultipliers {
	return v.value
}

func (v *NullableAppTypeMultipliers) Set(val *AppTypeMultipliers) {
	v.value = val
	v.isSet = true
}

func (v NullableAppTypeMultipliers) IsSet() bool {
	return v.isSet
}

func (v *NullableAppTypeMultipliers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppTypeMultipliers(val *AppTypeMultipliers) *NullableAppTypeMultipliers {
	return &NullableAppTypeMultipliers{value: val, isSet: true}
}

func (v NullableAppTypeMultipliers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppTypeMultipliers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


