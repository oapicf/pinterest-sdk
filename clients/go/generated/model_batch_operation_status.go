/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// BatchOperationStatus The status of the operation performed by the batch
type BatchOperationStatus string

// List of BatchOperationStatus
const (
	PROCESSING BatchOperationStatus = "PROCESSING"
	COMPLETED BatchOperationStatus = "COMPLETED"
	FAILED BatchOperationStatus = "FAILED"
)

// All allowed values of BatchOperationStatus enum
var AllowedBatchOperationStatusEnumValues = []BatchOperationStatus{
	"PROCESSING",
	"COMPLETED",
	"FAILED",
}

func (v *BatchOperationStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BatchOperationStatus(value)
	for _, existing := range AllowedBatchOperationStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BatchOperationStatus", value)
}

// NewBatchOperationStatusFromValue returns a pointer to a valid BatchOperationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBatchOperationStatusFromValue(v string) (*BatchOperationStatus, error) {
	ev := BatchOperationStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BatchOperationStatus: valid values are %v", v, AllowedBatchOperationStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BatchOperationStatus) IsValid() bool {
	for _, existing := range AllowedBatchOperationStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BatchOperationStatus value
func (v BatchOperationStatus) Ptr() *BatchOperationStatus {
	return &v
}

type NullableBatchOperationStatus struct {
	value *BatchOperationStatus
	isSet bool
}

func (v NullableBatchOperationStatus) Get() *BatchOperationStatus {
	return v.value
}

func (v *NullableBatchOperationStatus) Set(val *BatchOperationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchOperationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchOperationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchOperationStatus(val *BatchOperationStatus) *NullableBatchOperationStatus {
	return &NullableBatchOperationStatus{value: val, isSet: true}
}

func (v NullableBatchOperationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchOperationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

