/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PinUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinUpdate{}

// PinUpdate Pin fields for updates
type PinUpdate struct {
	// Pin's alternative text.
	AltText NullableString `json:"alt_text,omitempty"`
	// The id of the board to move the Pin onto.
	BoardId NullableString `json:"board_id,omitempty" validate:"regexp=^\\\\d+$"`
	// <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID.
	BoardSectionId NullableString `json:"board_section_id,omitempty" validate:"regexp=^\\\\d+$"`
	// Pin description - 800 characters maximum.
	Description NullableString `json:"description,omitempty"`
	// URL viewer is taken to when they click pin.
	Link NullableString `json:"link,omitempty"`
	// The native pin title that creators explicitly prefer to display.
	Title NullableString `json:"title,omitempty"`
	// Carousel Pin slots data.
	CarouselSlots []PinUpdateCarouselSlotsInner `json:"carousel_slots,omitempty"`
	// Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
	Note NullableString `json:"note,omitempty"`
}

// NewPinUpdate instantiates a new PinUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinUpdate() *PinUpdate {
	this := PinUpdate{}
	return &this
}

// NewPinUpdateWithDefaults instantiates a new PinUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinUpdateWithDefaults() *PinUpdate {
	this := PinUpdate{}
	return &this
}

// GetAltText returns the AltText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetAltText() string {
	if o == nil || IsNil(o.AltText.Get()) {
		var ret string
		return ret
	}
	return *o.AltText.Get()
}

// GetAltTextOk returns a tuple with the AltText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetAltTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AltText.Get(), o.AltText.IsSet()
}

// HasAltText returns a boolean if a field has been set.
func (o *PinUpdate) HasAltText() bool {
	if o != nil && o.AltText.IsSet() {
		return true
	}

	return false
}

// SetAltText gets a reference to the given NullableString and assigns it to the AltText field.
func (o *PinUpdate) SetAltText(v string) {
	o.AltText.Set(&v)
}
// SetAltTextNil sets the value for AltText to be an explicit nil
func (o *PinUpdate) SetAltTextNil() {
	o.AltText.Set(nil)
}

// UnsetAltText ensures that no value is present for AltText, not even an explicit nil
func (o *PinUpdate) UnsetAltText() {
	o.AltText.Unset()
}

// GetBoardId returns the BoardId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetBoardId() string {
	if o == nil || IsNil(o.BoardId.Get()) {
		var ret string
		return ret
	}
	return *o.BoardId.Get()
}

// GetBoardIdOk returns a tuple with the BoardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetBoardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BoardId.Get(), o.BoardId.IsSet()
}

// HasBoardId returns a boolean if a field has been set.
func (o *PinUpdate) HasBoardId() bool {
	if o != nil && o.BoardId.IsSet() {
		return true
	}

	return false
}

// SetBoardId gets a reference to the given NullableString and assigns it to the BoardId field.
func (o *PinUpdate) SetBoardId(v string) {
	o.BoardId.Set(&v)
}
// SetBoardIdNil sets the value for BoardId to be an explicit nil
func (o *PinUpdate) SetBoardIdNil() {
	o.BoardId.Set(nil)
}

// UnsetBoardId ensures that no value is present for BoardId, not even an explicit nil
func (o *PinUpdate) UnsetBoardId() {
	o.BoardId.Unset()
}

// GetBoardSectionId returns the BoardSectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetBoardSectionId() string {
	if o == nil || IsNil(o.BoardSectionId.Get()) {
		var ret string
		return ret
	}
	return *o.BoardSectionId.Get()
}

// GetBoardSectionIdOk returns a tuple with the BoardSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetBoardSectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BoardSectionId.Get(), o.BoardSectionId.IsSet()
}

// HasBoardSectionId returns a boolean if a field has been set.
func (o *PinUpdate) HasBoardSectionId() bool {
	if o != nil && o.BoardSectionId.IsSet() {
		return true
	}

	return false
}

// SetBoardSectionId gets a reference to the given NullableString and assigns it to the BoardSectionId field.
func (o *PinUpdate) SetBoardSectionId(v string) {
	o.BoardSectionId.Set(&v)
}
// SetBoardSectionIdNil sets the value for BoardSectionId to be an explicit nil
func (o *PinUpdate) SetBoardSectionIdNil() {
	o.BoardSectionId.Set(nil)
}

// UnsetBoardSectionId ensures that no value is present for BoardSectionId, not even an explicit nil
func (o *PinUpdate) UnsetBoardSectionId() {
	o.BoardSectionId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PinUpdate) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PinUpdate) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PinUpdate) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PinUpdate) UnsetDescription() {
	o.Description.Unset()
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *PinUpdate) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *PinUpdate) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *PinUpdate) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *PinUpdate) UnsetLink() {
	o.Link.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *PinUpdate) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *PinUpdate) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *PinUpdate) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *PinUpdate) UnsetTitle() {
	o.Title.Unset()
}

// GetCarouselSlots returns the CarouselSlots field value if set, zero value otherwise.
func (o *PinUpdate) GetCarouselSlots() []PinUpdateCarouselSlotsInner {
	if o == nil || IsNil(o.CarouselSlots) {
		var ret []PinUpdateCarouselSlotsInner
		return ret
	}
	return o.CarouselSlots
}

// GetCarouselSlotsOk returns a tuple with the CarouselSlots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinUpdate) GetCarouselSlotsOk() ([]PinUpdateCarouselSlotsInner, bool) {
	if o == nil || IsNil(o.CarouselSlots) {
		return nil, false
	}
	return o.CarouselSlots, true
}

// HasCarouselSlots returns a boolean if a field has been set.
func (o *PinUpdate) HasCarouselSlots() bool {
	if o != nil && !IsNil(o.CarouselSlots) {
		return true
	}

	return false
}

// SetCarouselSlots gets a reference to the given []PinUpdateCarouselSlotsInner and assigns it to the CarouselSlots field.
func (o *PinUpdate) SetCarouselSlots(v []PinUpdateCarouselSlotsInner) {
	o.CarouselSlots = v
}

// GetNote returns the Note field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinUpdate) GetNote() string {
	if o == nil || IsNil(o.Note.Get()) {
		var ret string
		return ret
	}
	return *o.Note.Get()
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinUpdate) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Note.Get(), o.Note.IsSet()
}

// HasNote returns a boolean if a field has been set.
func (o *PinUpdate) HasNote() bool {
	if o != nil && o.Note.IsSet() {
		return true
	}

	return false
}

// SetNote gets a reference to the given NullableString and assigns it to the Note field.
func (o *PinUpdate) SetNote(v string) {
	o.Note.Set(&v)
}
// SetNoteNil sets the value for Note to be an explicit nil
func (o *PinUpdate) SetNoteNil() {
	o.Note.Set(nil)
}

// UnsetNote ensures that no value is present for Note, not even an explicit nil
func (o *PinUpdate) UnsetNote() {
	o.Note.Unset()
}

func (o PinUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AltText.IsSet() {
		toSerialize["alt_text"] = o.AltText.Get()
	}
	if o.BoardId.IsSet() {
		toSerialize["board_id"] = o.BoardId.Get()
	}
	if o.BoardSectionId.IsSet() {
		toSerialize["board_section_id"] = o.BoardSectionId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.CarouselSlots) {
		toSerialize["carousel_slots"] = o.CarouselSlots
	}
	if o.Note.IsSet() {
		toSerialize["note"] = o.Note.Get()
	}
	return toSerialize, nil
}

type NullablePinUpdate struct {
	value *PinUpdate
	isSet bool
}

func (v NullablePinUpdate) Get() *PinUpdate {
	return v.value
}

func (v *NullablePinUpdate) Set(val *PinUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePinUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePinUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinUpdate(val *PinUpdate) *NullablePinUpdate {
	return &NullablePinUpdate{value: val, isSet: true}
}

func (v NullablePinUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


