/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderLinePaidType Order Line Paid Type
type OrderLinePaidType string

// List of OrderLinePaidType
const (
	PAID OrderLinePaidType = "PAID"
	BONUS OrderLinePaidType = "BONUS"
	MAKE_GOOD OrderLinePaidType = "MAKE_GOOD"
	TEST OrderLinePaidType = "TEST"
)

// All allowed values of OrderLinePaidType enum
var AllowedOrderLinePaidTypeEnumValues = []OrderLinePaidType{
	"PAID",
	"BONUS",
	"MAKE_GOOD",
	"TEST",
}

func (v *OrderLinePaidType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderLinePaidType(value)
	for _, existing := range AllowedOrderLinePaidTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderLinePaidType", value)
}

// NewOrderLinePaidTypeFromValue returns a pointer to a valid OrderLinePaidType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderLinePaidTypeFromValue(v string) (*OrderLinePaidType, error) {
	ev := OrderLinePaidType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderLinePaidType: valid values are %v", v, AllowedOrderLinePaidTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderLinePaidType) IsValid() bool {
	for _, existing := range AllowedOrderLinePaidTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderLinePaidType value
func (v OrderLinePaidType) Ptr() *OrderLinePaidType {
	return &v
}

type NullableOrderLinePaidType struct {
	value *OrderLinePaidType
	isSet bool
}

func (v NullableOrderLinePaidType) Get() *OrderLinePaidType {
	return v.value
}

func (v *NullableOrderLinePaidType) Set(val *OrderLinePaidType) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderLinePaidType) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderLinePaidType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderLinePaidType(val *OrderLinePaidType) *NullableOrderLinePaidType {
	return &NullableOrderLinePaidType{value: val, isSet: true}
}

func (v NullableOrderLinePaidType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderLinePaidType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

