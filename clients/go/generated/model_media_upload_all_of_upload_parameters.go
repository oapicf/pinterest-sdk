/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MediaUploadAllOfUploadParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaUploadAllOfUploadParameters{}

// MediaUploadAllOfUploadParameters The list of parameter key/value pairs you will need to send with your POST request to upload your media file.
type MediaUploadAllOfUploadParameters struct {
	XAmzDate *string `json:"x-amz-date,omitempty"`
	XAmzSignature *string `json:"x-amz-signature,omitempty"`
	XAmzSecurityToken *string `json:"x-amz-security-token,omitempty"`
	XAmzAlgorithm *string `json:"x-amz-algorithm,omitempty"`
	Key *string `json:"key,omitempty"`
	Policy *string `json:"policy,omitempty"`
	XAmzCredential *string `json:"x-amz-credential,omitempty"`
	ContentType *string `json:"Content-Type,omitempty"`
}

// NewMediaUploadAllOfUploadParameters instantiates a new MediaUploadAllOfUploadParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaUploadAllOfUploadParameters() *MediaUploadAllOfUploadParameters {
	this := MediaUploadAllOfUploadParameters{}
	return &this
}

// NewMediaUploadAllOfUploadParametersWithDefaults instantiates a new MediaUploadAllOfUploadParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaUploadAllOfUploadParametersWithDefaults() *MediaUploadAllOfUploadParameters {
	this := MediaUploadAllOfUploadParameters{}
	return &this
}

// GetXAmzDate returns the XAmzDate field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetXAmzDate() string {
	if o == nil || IsNil(o.XAmzDate) {
		var ret string
		return ret
	}
	return *o.XAmzDate
}

// GetXAmzDateOk returns a tuple with the XAmzDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetXAmzDateOk() (*string, bool) {
	if o == nil || IsNil(o.XAmzDate) {
		return nil, false
	}
	return o.XAmzDate, true
}

// HasXAmzDate returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasXAmzDate() bool {
	if o != nil && !IsNil(o.XAmzDate) {
		return true
	}

	return false
}

// SetXAmzDate gets a reference to the given string and assigns it to the XAmzDate field.
func (o *MediaUploadAllOfUploadParameters) SetXAmzDate(v string) {
	o.XAmzDate = &v
}

// GetXAmzSignature returns the XAmzSignature field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetXAmzSignature() string {
	if o == nil || IsNil(o.XAmzSignature) {
		var ret string
		return ret
	}
	return *o.XAmzSignature
}

// GetXAmzSignatureOk returns a tuple with the XAmzSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetXAmzSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.XAmzSignature) {
		return nil, false
	}
	return o.XAmzSignature, true
}

// HasXAmzSignature returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasXAmzSignature() bool {
	if o != nil && !IsNil(o.XAmzSignature) {
		return true
	}

	return false
}

// SetXAmzSignature gets a reference to the given string and assigns it to the XAmzSignature field.
func (o *MediaUploadAllOfUploadParameters) SetXAmzSignature(v string) {
	o.XAmzSignature = &v
}

// GetXAmzSecurityToken returns the XAmzSecurityToken field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetXAmzSecurityToken() string {
	if o == nil || IsNil(o.XAmzSecurityToken) {
		var ret string
		return ret
	}
	return *o.XAmzSecurityToken
}

// GetXAmzSecurityTokenOk returns a tuple with the XAmzSecurityToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetXAmzSecurityTokenOk() (*string, bool) {
	if o == nil || IsNil(o.XAmzSecurityToken) {
		return nil, false
	}
	return o.XAmzSecurityToken, true
}

// HasXAmzSecurityToken returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasXAmzSecurityToken() bool {
	if o != nil && !IsNil(o.XAmzSecurityToken) {
		return true
	}

	return false
}

// SetXAmzSecurityToken gets a reference to the given string and assigns it to the XAmzSecurityToken field.
func (o *MediaUploadAllOfUploadParameters) SetXAmzSecurityToken(v string) {
	o.XAmzSecurityToken = &v
}

// GetXAmzAlgorithm returns the XAmzAlgorithm field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetXAmzAlgorithm() string {
	if o == nil || IsNil(o.XAmzAlgorithm) {
		var ret string
		return ret
	}
	return *o.XAmzAlgorithm
}

// GetXAmzAlgorithmOk returns a tuple with the XAmzAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetXAmzAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.XAmzAlgorithm) {
		return nil, false
	}
	return o.XAmzAlgorithm, true
}

// HasXAmzAlgorithm returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasXAmzAlgorithm() bool {
	if o != nil && !IsNil(o.XAmzAlgorithm) {
		return true
	}

	return false
}

// SetXAmzAlgorithm gets a reference to the given string and assigns it to the XAmzAlgorithm field.
func (o *MediaUploadAllOfUploadParameters) SetXAmzAlgorithm(v string) {
	o.XAmzAlgorithm = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MediaUploadAllOfUploadParameters) SetKey(v string) {
	o.Key = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *MediaUploadAllOfUploadParameters) SetPolicy(v string) {
	o.Policy = &v
}

// GetXAmzCredential returns the XAmzCredential field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetXAmzCredential() string {
	if o == nil || IsNil(o.XAmzCredential) {
		var ret string
		return ret
	}
	return *o.XAmzCredential
}

// GetXAmzCredentialOk returns a tuple with the XAmzCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetXAmzCredentialOk() (*string, bool) {
	if o == nil || IsNil(o.XAmzCredential) {
		return nil, false
	}
	return o.XAmzCredential, true
}

// HasXAmzCredential returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasXAmzCredential() bool {
	if o != nil && !IsNil(o.XAmzCredential) {
		return true
	}

	return false
}

// SetXAmzCredential gets a reference to the given string and assigns it to the XAmzCredential field.
func (o *MediaUploadAllOfUploadParameters) SetXAmzCredential(v string) {
	o.XAmzCredential = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *MediaUploadAllOfUploadParameters) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUploadAllOfUploadParameters) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *MediaUploadAllOfUploadParameters) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *MediaUploadAllOfUploadParameters) SetContentType(v string) {
	o.ContentType = &v
}

func (o MediaUploadAllOfUploadParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaUploadAllOfUploadParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.XAmzDate) {
		toSerialize["x-amz-date"] = o.XAmzDate
	}
	if !IsNil(o.XAmzSignature) {
		toSerialize["x-amz-signature"] = o.XAmzSignature
	}
	if !IsNil(o.XAmzSecurityToken) {
		toSerialize["x-amz-security-token"] = o.XAmzSecurityToken
	}
	if !IsNil(o.XAmzAlgorithm) {
		toSerialize["x-amz-algorithm"] = o.XAmzAlgorithm
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.XAmzCredential) {
		toSerialize["x-amz-credential"] = o.XAmzCredential
	}
	if !IsNil(o.ContentType) {
		toSerialize["Content-Type"] = o.ContentType
	}
	return toSerialize, nil
}

type NullableMediaUploadAllOfUploadParameters struct {
	value *MediaUploadAllOfUploadParameters
	isSet bool
}

func (v NullableMediaUploadAllOfUploadParameters) Get() *MediaUploadAllOfUploadParameters {
	return v.value
}

func (v *NullableMediaUploadAllOfUploadParameters) Set(val *MediaUploadAllOfUploadParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaUploadAllOfUploadParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaUploadAllOfUploadParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaUploadAllOfUploadParameters(val *MediaUploadAllOfUploadParameters) *NullableMediaUploadAllOfUploadParameters {
	return &NullableMediaUploadAllOfUploadParameters{value: val, isSet: true}
}

func (v NullableMediaUploadAllOfUploadParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaUploadAllOfUploadParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


