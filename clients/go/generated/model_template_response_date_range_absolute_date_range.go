/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateResponseDateRangeAbsoluteDateRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseDateRangeAbsoluteDateRange{}

// TemplateResponseDateRangeAbsoluteDateRange The absolute date range of the template
type TemplateResponseDateRangeAbsoluteDateRange struct {
	// The date range type
	Type *string `json:"type,omitempty"`
	// The start date of the date range
	StartDate *float32 `json:"start_date,omitempty"`
	// The end date of the date range
	EndDate *float32 `json:"end_date,omitempty"`
}

// NewTemplateResponseDateRangeAbsoluteDateRange instantiates a new TemplateResponseDateRangeAbsoluteDateRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseDateRangeAbsoluteDateRange() *TemplateResponseDateRangeAbsoluteDateRange {
	this := TemplateResponseDateRangeAbsoluteDateRange{}
	return &this
}

// NewTemplateResponseDateRangeAbsoluteDateRangeWithDefaults instantiates a new TemplateResponseDateRangeAbsoluteDateRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseDateRangeAbsoluteDateRangeWithDefaults() *TemplateResponseDateRangeAbsoluteDateRange {
	this := TemplateResponseDateRangeAbsoluteDateRange{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeAbsoluteDateRange) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeAbsoluteDateRange) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeAbsoluteDateRange) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TemplateResponseDateRangeAbsoluteDateRange) SetType(v string) {
	o.Type = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeAbsoluteDateRange) GetStartDate() float32 {
	if o == nil || IsNil(o.StartDate) {
		var ret float32
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeAbsoluteDateRange) GetStartDateOk() (*float32, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeAbsoluteDateRange) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given float32 and assigns it to the StartDate field.
func (o *TemplateResponseDateRangeAbsoluteDateRange) SetStartDate(v float32) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeAbsoluteDateRange) GetEndDate() float32 {
	if o == nil || IsNil(o.EndDate) {
		var ret float32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeAbsoluteDateRange) GetEndDateOk() (*float32, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeAbsoluteDateRange) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given float32 and assigns it to the EndDate field.
func (o *TemplateResponseDateRangeAbsoluteDateRange) SetEndDate(v float32) {
	o.EndDate = &v
}

func (o TemplateResponseDateRangeAbsoluteDateRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseDateRangeAbsoluteDateRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableTemplateResponseDateRangeAbsoluteDateRange struct {
	value *TemplateResponseDateRangeAbsoluteDateRange
	isSet bool
}

func (v NullableTemplateResponseDateRangeAbsoluteDateRange) Get() *TemplateResponseDateRangeAbsoluteDateRange {
	return v.value
}

func (v *NullableTemplateResponseDateRangeAbsoluteDateRange) Set(val *TemplateResponseDateRangeAbsoluteDateRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseDateRangeAbsoluteDateRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseDateRangeAbsoluteDateRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseDateRangeAbsoluteDateRange(val *TemplateResponseDateRangeAbsoluteDateRange) *NullableTemplateResponseDateRangeAbsoluteDateRange {
	return &NullableTemplateResponseDateRangeAbsoluteDateRange{value: val, isSet: true}
}

func (v NullableTemplateResponseDateRangeAbsoluteDateRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseDateRangeAbsoluteDateRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


