/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// CatalogsVerticalFeedsCreateRequest - Request object for creating a feed.
type CatalogsVerticalFeedsCreateRequest struct {
	CatalogsCreativeAssetsFeedsCreateRequest *CatalogsCreativeAssetsFeedsCreateRequest
	CatalogsHotelFeedsCreateRequest *CatalogsHotelFeedsCreateRequest
	CatalogsRetailFeedsCreateRequest *CatalogsRetailFeedsCreateRequest
}

// CatalogsCreativeAssetsFeedsCreateRequestAsCatalogsVerticalFeedsCreateRequest is a convenience function that returns CatalogsCreativeAssetsFeedsCreateRequest wrapped in CatalogsVerticalFeedsCreateRequest
func CatalogsCreativeAssetsFeedsCreateRequestAsCatalogsVerticalFeedsCreateRequest(v *CatalogsCreativeAssetsFeedsCreateRequest) CatalogsVerticalFeedsCreateRequest {
	return CatalogsVerticalFeedsCreateRequest{
		CatalogsCreativeAssetsFeedsCreateRequest: v,
	}
}

// CatalogsHotelFeedsCreateRequestAsCatalogsVerticalFeedsCreateRequest is a convenience function that returns CatalogsHotelFeedsCreateRequest wrapped in CatalogsVerticalFeedsCreateRequest
func CatalogsHotelFeedsCreateRequestAsCatalogsVerticalFeedsCreateRequest(v *CatalogsHotelFeedsCreateRequest) CatalogsVerticalFeedsCreateRequest {
	return CatalogsVerticalFeedsCreateRequest{
		CatalogsHotelFeedsCreateRequest: v,
	}
}

// CatalogsRetailFeedsCreateRequestAsCatalogsVerticalFeedsCreateRequest is a convenience function that returns CatalogsRetailFeedsCreateRequest wrapped in CatalogsVerticalFeedsCreateRequest
func CatalogsRetailFeedsCreateRequestAsCatalogsVerticalFeedsCreateRequest(v *CatalogsRetailFeedsCreateRequest) CatalogsVerticalFeedsCreateRequest {
	return CatalogsVerticalFeedsCreateRequest{
		CatalogsRetailFeedsCreateRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CatalogsVerticalFeedsCreateRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CatalogsCreativeAssetsFeedsCreateRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsCreativeAssetsFeedsCreateRequest)
	if err == nil {
		jsonCatalogsCreativeAssetsFeedsCreateRequest, _ := json.Marshal(dst.CatalogsCreativeAssetsFeedsCreateRequest)
		if string(jsonCatalogsCreativeAssetsFeedsCreateRequest) == "{}" { // empty struct
			dst.CatalogsCreativeAssetsFeedsCreateRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsCreativeAssetsFeedsCreateRequest); err != nil {
				dst.CatalogsCreativeAssetsFeedsCreateRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsCreativeAssetsFeedsCreateRequest = nil
	}

	// try to unmarshal data into CatalogsHotelFeedsCreateRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsHotelFeedsCreateRequest)
	if err == nil {
		jsonCatalogsHotelFeedsCreateRequest, _ := json.Marshal(dst.CatalogsHotelFeedsCreateRequest)
		if string(jsonCatalogsHotelFeedsCreateRequest) == "{}" { // empty struct
			dst.CatalogsHotelFeedsCreateRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsHotelFeedsCreateRequest); err != nil {
				dst.CatalogsHotelFeedsCreateRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsHotelFeedsCreateRequest = nil
	}

	// try to unmarshal data into CatalogsRetailFeedsCreateRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsRetailFeedsCreateRequest)
	if err == nil {
		jsonCatalogsRetailFeedsCreateRequest, _ := json.Marshal(dst.CatalogsRetailFeedsCreateRequest)
		if string(jsonCatalogsRetailFeedsCreateRequest) == "{}" { // empty struct
			dst.CatalogsRetailFeedsCreateRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsRetailFeedsCreateRequest); err != nil {
				dst.CatalogsRetailFeedsCreateRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsRetailFeedsCreateRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CatalogsCreativeAssetsFeedsCreateRequest = nil
		dst.CatalogsHotelFeedsCreateRequest = nil
		dst.CatalogsRetailFeedsCreateRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CatalogsVerticalFeedsCreateRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CatalogsVerticalFeedsCreateRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CatalogsVerticalFeedsCreateRequest) MarshalJSON() ([]byte, error) {
	if src.CatalogsCreativeAssetsFeedsCreateRequest != nil {
		return json.Marshal(&src.CatalogsCreativeAssetsFeedsCreateRequest)
	}

	if src.CatalogsHotelFeedsCreateRequest != nil {
		return json.Marshal(&src.CatalogsHotelFeedsCreateRequest)
	}

	if src.CatalogsRetailFeedsCreateRequest != nil {
		return json.Marshal(&src.CatalogsRetailFeedsCreateRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CatalogsVerticalFeedsCreateRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CatalogsCreativeAssetsFeedsCreateRequest != nil {
		return obj.CatalogsCreativeAssetsFeedsCreateRequest
	}

	if obj.CatalogsHotelFeedsCreateRequest != nil {
		return obj.CatalogsHotelFeedsCreateRequest
	}

	if obj.CatalogsRetailFeedsCreateRequest != nil {
		return obj.CatalogsRetailFeedsCreateRequest
	}

	// all schemas are nil
	return nil
}

type NullableCatalogsVerticalFeedsCreateRequest struct {
	value *CatalogsVerticalFeedsCreateRequest
	isSet bool
}

func (v NullableCatalogsVerticalFeedsCreateRequest) Get() *CatalogsVerticalFeedsCreateRequest {
	return v.value
}

func (v *NullableCatalogsVerticalFeedsCreateRequest) Set(val *CatalogsVerticalFeedsCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsVerticalFeedsCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsVerticalFeedsCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsVerticalFeedsCreateRequest(val *CatalogsVerticalFeedsCreateRequest) *NullableCatalogsVerticalFeedsCreateRequest {
	return &NullableCatalogsVerticalFeedsCreateRequest{value: val, isSet: true}
}

func (v NullableCatalogsVerticalFeedsCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsVerticalFeedsCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


