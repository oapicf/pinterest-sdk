/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KeywordError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeywordError{}

// KeywordError struct for KeywordError
type KeywordError struct {
	Data *Keyword `json:"data,omitempty"`
	ErrorMessages []string `json:"error_messages,omitempty"`
}

// NewKeywordError instantiates a new KeywordError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeywordError() *KeywordError {
	this := KeywordError{}
	return &this
}

// NewKeywordErrorWithDefaults instantiates a new KeywordError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeywordErrorWithDefaults() *KeywordError {
	this := KeywordError{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *KeywordError) GetData() Keyword {
	if o == nil || IsNil(o.Data) {
		var ret Keyword
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeywordError) GetDataOk() (*Keyword, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *KeywordError) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given Keyword and assigns it to the Data field.
func (o *KeywordError) SetData(v Keyword) {
	o.Data = &v
}

// GetErrorMessages returns the ErrorMessages field value if set, zero value otherwise.
func (o *KeywordError) GetErrorMessages() []string {
	if o == nil || IsNil(o.ErrorMessages) {
		var ret []string
		return ret
	}
	return o.ErrorMessages
}

// GetErrorMessagesOk returns a tuple with the ErrorMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeywordError) GetErrorMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.ErrorMessages) {
		return nil, false
	}
	return o.ErrorMessages, true
}

// HasErrorMessages returns a boolean if a field has been set.
func (o *KeywordError) HasErrorMessages() bool {
	if o != nil && !IsNil(o.ErrorMessages) {
		return true
	}

	return false
}

// SetErrorMessages gets a reference to the given []string and assigns it to the ErrorMessages field.
func (o *KeywordError) SetErrorMessages(v []string) {
	o.ErrorMessages = v
}

func (o KeywordError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeywordError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ErrorMessages) {
		toSerialize["error_messages"] = o.ErrorMessages
	}
	return toSerialize, nil
}

type NullableKeywordError struct {
	value *KeywordError
	isSet bool
}

func (v NullableKeywordError) Get() *KeywordError {
	return v.value
}

func (v *NullableKeywordError) Set(val *KeywordError) {
	v.value = val
	v.isSet = true
}

func (v NullableKeywordError) IsSet() bool {
	return v.isSet
}

func (v *NullableKeywordError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeywordError(val *KeywordError) *NullableKeywordError {
	return &NullableKeywordError{value: val, isSet: true}
}

func (v NullableKeywordError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeywordError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


