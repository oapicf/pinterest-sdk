/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdAccountsCountryResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdAccountsCountryResponseData{}

// AdAccountsCountryResponseData struct for AdAccountsCountryResponseData
type AdAccountsCountryResponseData struct {
	Code *AdCountry `json:"code,omitempty"`
	// Country currency.
	Currency *string `json:"currency,omitempty"`
	// Country index
	Index *float32 `json:"index,omitempty"`
	// Country name
	Name *string `json:"name,omitempty"`
}

// NewAdAccountsCountryResponseData instantiates a new AdAccountsCountryResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdAccountsCountryResponseData() *AdAccountsCountryResponseData {
	this := AdAccountsCountryResponseData{}
	return &this
}

// NewAdAccountsCountryResponseDataWithDefaults instantiates a new AdAccountsCountryResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdAccountsCountryResponseDataWithDefaults() *AdAccountsCountryResponseData {
	this := AdAccountsCountryResponseData{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AdAccountsCountryResponseData) GetCode() AdCountry {
	if o == nil || IsNil(o.Code) {
		var ret AdCountry
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdAccountsCountryResponseData) GetCodeOk() (*AdCountry, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AdAccountsCountryResponseData) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given AdCountry and assigns it to the Code field.
func (o *AdAccountsCountryResponseData) SetCode(v AdCountry) {
	o.Code = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AdAccountsCountryResponseData) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdAccountsCountryResponseData) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AdAccountsCountryResponseData) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AdAccountsCountryResponseData) SetCurrency(v string) {
	o.Currency = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *AdAccountsCountryResponseData) GetIndex() float32 {
	if o == nil || IsNil(o.Index) {
		var ret float32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdAccountsCountryResponseData) GetIndexOk() (*float32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *AdAccountsCountryResponseData) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given float32 and assigns it to the Index field.
func (o *AdAccountsCountryResponseData) SetIndex(v float32) {
	o.Index = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdAccountsCountryResponseData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdAccountsCountryResponseData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdAccountsCountryResponseData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdAccountsCountryResponseData) SetName(v string) {
	o.Name = &v
}

func (o AdAccountsCountryResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdAccountsCountryResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAdAccountsCountryResponseData struct {
	value *AdAccountsCountryResponseData
	isSet bool
}

func (v NullableAdAccountsCountryResponseData) Get() *AdAccountsCountryResponseData {
	return v.value
}

func (v *NullableAdAccountsCountryResponseData) Set(val *AdAccountsCountryResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAdAccountsCountryResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAdAccountsCountryResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdAccountsCountryResponseData(val *AdAccountsCountryResponseData) *NullableAdAccountsCountryResponseData {
	return &NullableAdAccountsCountryResponseData{value: val, isSet: true}
}

func (v NullableAdAccountsCountryResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdAccountsCountryResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


