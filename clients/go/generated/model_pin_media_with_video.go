/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PinMediaWithVideo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinMediaWithVideo{}

// PinMediaWithVideo Pin with video.
type PinMediaWithVideo struct {
	PinMedia
	Images *PinMediaWithImageAllOfImages `json:"images,omitempty"`
	CoverImageUrl *string `json:"cover_image_url,omitempty"`
	// Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
	VideoUrl NullableString `json:"video_url,omitempty"`
	// Duration (in milliseconds)
	Duration *float32 `json:"duration,omitempty"`
	// Height (in pixels)
	Height *int32 `json:"height,omitempty"`
	// Width (in pixels)
	Width *int32 `json:"width,omitempty"`
}

// NewPinMediaWithVideo instantiates a new PinMediaWithVideo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinMediaWithVideo() *PinMediaWithVideo {
	this := PinMediaWithVideo{}
	return &this
}

// NewPinMediaWithVideoWithDefaults instantiates a new PinMediaWithVideo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinMediaWithVideoWithDefaults() *PinMediaWithVideo {
	this := PinMediaWithVideo{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *PinMediaWithVideo) GetImages() PinMediaWithImageAllOfImages {
	if o == nil || IsNil(o.Images) {
		var ret PinMediaWithImageAllOfImages
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithVideo) GetImagesOk() (*PinMediaWithImageAllOfImages, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *PinMediaWithVideo) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given PinMediaWithImageAllOfImages and assigns it to the Images field.
func (o *PinMediaWithVideo) SetImages(v PinMediaWithImageAllOfImages) {
	o.Images = &v
}

// GetCoverImageUrl returns the CoverImageUrl field value if set, zero value otherwise.
func (o *PinMediaWithVideo) GetCoverImageUrl() string {
	if o == nil || IsNil(o.CoverImageUrl) {
		var ret string
		return ret
	}
	return *o.CoverImageUrl
}

// GetCoverImageUrlOk returns a tuple with the CoverImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithVideo) GetCoverImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CoverImageUrl) {
		return nil, false
	}
	return o.CoverImageUrl, true
}

// HasCoverImageUrl returns a boolean if a field has been set.
func (o *PinMediaWithVideo) HasCoverImageUrl() bool {
	if o != nil && !IsNil(o.CoverImageUrl) {
		return true
	}

	return false
}

// SetCoverImageUrl gets a reference to the given string and assigns it to the CoverImageUrl field.
func (o *PinMediaWithVideo) SetCoverImageUrl(v string) {
	o.CoverImageUrl = &v
}

// GetVideoUrl returns the VideoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PinMediaWithVideo) GetVideoUrl() string {
	if o == nil || IsNil(o.VideoUrl.Get()) {
		var ret string
		return ret
	}
	return *o.VideoUrl.Get()
}

// GetVideoUrlOk returns a tuple with the VideoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PinMediaWithVideo) GetVideoUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoUrl.Get(), o.VideoUrl.IsSet()
}

// HasVideoUrl returns a boolean if a field has been set.
func (o *PinMediaWithVideo) HasVideoUrl() bool {
	if o != nil && o.VideoUrl.IsSet() {
		return true
	}

	return false
}

// SetVideoUrl gets a reference to the given NullableString and assigns it to the VideoUrl field.
func (o *PinMediaWithVideo) SetVideoUrl(v string) {
	o.VideoUrl.Set(&v)
}
// SetVideoUrlNil sets the value for VideoUrl to be an explicit nil
func (o *PinMediaWithVideo) SetVideoUrlNil() {
	o.VideoUrl.Set(nil)
}

// UnsetVideoUrl ensures that no value is present for VideoUrl, not even an explicit nil
func (o *PinMediaWithVideo) UnsetVideoUrl() {
	o.VideoUrl.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *PinMediaWithVideo) GetDuration() float32 {
	if o == nil || IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithVideo) GetDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *PinMediaWithVideo) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *PinMediaWithVideo) SetDuration(v float32) {
	o.Duration = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *PinMediaWithVideo) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithVideo) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *PinMediaWithVideo) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *PinMediaWithVideo) SetHeight(v int32) {
	o.Height = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *PinMediaWithVideo) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithVideo) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *PinMediaWithVideo) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *PinMediaWithVideo) SetWidth(v int32) {
	o.Width = &v
}

func (o PinMediaWithVideo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinMediaWithVideo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.CoverImageUrl) {
		toSerialize["cover_image_url"] = o.CoverImageUrl
	}
	if o.VideoUrl.IsSet() {
		toSerialize["video_url"] = o.VideoUrl.Get()
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullablePinMediaWithVideo struct {
	value *PinMediaWithVideo
	isSet bool
}

func (v NullablePinMediaWithVideo) Get() *PinMediaWithVideo {
	return v.value
}

func (v *NullablePinMediaWithVideo) Set(val *PinMediaWithVideo) {
	v.value = val
	v.isSet = true
}

func (v NullablePinMediaWithVideo) IsSet() bool {
	return v.isSet
}

func (v *NullablePinMediaWithVideo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinMediaWithVideo(val *PinMediaWithVideo) *NullablePinMediaWithVideo {
	return &NullablePinMediaWithVideo{value: val, isSet: true}
}

func (v NullablePinMediaWithVideo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinMediaWithVideo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


