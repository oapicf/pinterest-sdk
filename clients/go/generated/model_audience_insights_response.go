/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AudienceInsightsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceInsightsResponse{}

// AudienceInsightsResponse Audience interests and demographics.
type AudienceInsightsResponse struct {
	// Category interest distribution
	Categories []AudienceCategory `json:"categories,omitempty"`
	Demographics *AudienceDemographics `json:"demographics,omitempty"`
	Type *AudienceInsightType `json:"type,omitempty"`
	// Generation date
	Date NullableString `json:"date,omitempty" validate:"regexp=^\\\\d{4}-\\\\d{2}-\\\\d{2}$"`
	// Population count.
	Size *int32 `json:"size,omitempty"`
	// Indicates whether the audience size has been rounded up to the next highest upper boundary.
	SizeIsUpperBound *bool `json:"size_is_upper_bound,omitempty"`
}

// NewAudienceInsightsResponse instantiates a new AudienceInsightsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceInsightsResponse() *AudienceInsightsResponse {
	this := AudienceInsightsResponse{}
	var type_ AudienceInsightType = YOUR_TOTAL_AUDIENCE
	this.Type = &type_
	return &this
}

// NewAudienceInsightsResponseWithDefaults instantiates a new AudienceInsightsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceInsightsResponseWithDefaults() *AudienceInsightsResponse {
	this := AudienceInsightsResponse{}
	var type_ AudienceInsightType = YOUR_TOTAL_AUDIENCE
	this.Type = &type_
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *AudienceInsightsResponse) GetCategories() []AudienceCategory {
	if o == nil || IsNil(o.Categories) {
		var ret []AudienceCategory
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceInsightsResponse) GetCategoriesOk() ([]AudienceCategory, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *AudienceInsightsResponse) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []AudienceCategory and assigns it to the Categories field.
func (o *AudienceInsightsResponse) SetCategories(v []AudienceCategory) {
	o.Categories = v
}

// GetDemographics returns the Demographics field value if set, zero value otherwise.
func (o *AudienceInsightsResponse) GetDemographics() AudienceDemographics {
	if o == nil || IsNil(o.Demographics) {
		var ret AudienceDemographics
		return ret
	}
	return *o.Demographics
}

// GetDemographicsOk returns a tuple with the Demographics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceInsightsResponse) GetDemographicsOk() (*AudienceDemographics, bool) {
	if o == nil || IsNil(o.Demographics) {
		return nil, false
	}
	return o.Demographics, true
}

// HasDemographics returns a boolean if a field has been set.
func (o *AudienceInsightsResponse) HasDemographics() bool {
	if o != nil && !IsNil(o.Demographics) {
		return true
	}

	return false
}

// SetDemographics gets a reference to the given AudienceDemographics and assigns it to the Demographics field.
func (o *AudienceInsightsResponse) SetDemographics(v AudienceDemographics) {
	o.Demographics = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AudienceInsightsResponse) GetType() AudienceInsightType {
	if o == nil || IsNil(o.Type) {
		var ret AudienceInsightType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceInsightsResponse) GetTypeOk() (*AudienceInsightType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AudienceInsightsResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AudienceInsightType and assigns it to the Type field.
func (o *AudienceInsightsResponse) SetType(v AudienceInsightType) {
	o.Type = &v
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudienceInsightsResponse) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudienceInsightsResponse) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *AudienceInsightsResponse) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *AudienceInsightsResponse) SetDate(v string) {
	o.Date.Set(&v)
}
// SetDateNil sets the value for Date to be an explicit nil
func (o *AudienceInsightsResponse) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *AudienceInsightsResponse) UnsetDate() {
	o.Date.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *AudienceInsightsResponse) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceInsightsResponse) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *AudienceInsightsResponse) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *AudienceInsightsResponse) SetSize(v int32) {
	o.Size = &v
}

// GetSizeIsUpperBound returns the SizeIsUpperBound field value if set, zero value otherwise.
func (o *AudienceInsightsResponse) GetSizeIsUpperBound() bool {
	if o == nil || IsNil(o.SizeIsUpperBound) {
		var ret bool
		return ret
	}
	return *o.SizeIsUpperBound
}

// GetSizeIsUpperBoundOk returns a tuple with the SizeIsUpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceInsightsResponse) GetSizeIsUpperBoundOk() (*bool, bool) {
	if o == nil || IsNil(o.SizeIsUpperBound) {
		return nil, false
	}
	return o.SizeIsUpperBound, true
}

// HasSizeIsUpperBound returns a boolean if a field has been set.
func (o *AudienceInsightsResponse) HasSizeIsUpperBound() bool {
	if o != nil && !IsNil(o.SizeIsUpperBound) {
		return true
	}

	return false
}

// SetSizeIsUpperBound gets a reference to the given bool and assigns it to the SizeIsUpperBound field.
func (o *AudienceInsightsResponse) SetSizeIsUpperBound(v bool) {
	o.SizeIsUpperBound = &v
}

func (o AudienceInsightsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceInsightsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.Demographics) {
		toSerialize["demographics"] = o.Demographics
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SizeIsUpperBound) {
		toSerialize["size_is_upper_bound"] = o.SizeIsUpperBound
	}
	return toSerialize, nil
}

type NullableAudienceInsightsResponse struct {
	value *AudienceInsightsResponse
	isSet bool
}

func (v NullableAudienceInsightsResponse) Get() *AudienceInsightsResponse {
	return v.value
}

func (v *NullableAudienceInsightsResponse) Set(val *AudienceInsightsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceInsightsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceInsightsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceInsightsResponse(val *AudienceInsightsResponse) *NullableAudienceInsightsResponse {
	return &NullableAudienceInsightsResponse{value: val, isSet: true}
}

func (v NullableAudienceInsightsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceInsightsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


