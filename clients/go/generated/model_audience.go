/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Audience type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Audience{}

// Audience struct for Audience
type Audience struct {
	// Ad account ID.
	AdAccountId *string `json:"ad_account_id,omitempty" validate:"regexp=^\\\\d+$"`
	// Audience ID.
	Id *string `json:"id,omitempty" validate:"regexp=^\\\\d+$"`
	// Audience name.
	Name *string `json:"name,omitempty"`
	// <a href=\"/docs/reference/glossary/#Audience Types\">Audience types</a>: ACTALIKE, ENGAGEMENT, CUSTOMER_LIST and VISITOR
	AudienceType *string `json:"audience_type,omitempty"`
	// Audience description.
	Description NullableString `json:"description,omitempty"`
	Rule *AudienceRule `json:"rule,omitempty"`
	// Audience size.
	Size NullableInt32 `json:"size,omitempty"`
	// Audience status. READY, INITIALIZING, TOO_SMALL - Each audience list needs to have at least 100 people with Pinterest accounts before you can start using it.
	Status *string `json:"status,omitempty"`
	// Always \"audience\".
	Type *string `json:"type,omitempty"`
	// Creation time. Unix timestamp in seconds.
	CreatedTimestamp NullableInt32 `json:"created_timestamp,omitempty"`
	// Last update time. Unix timestamp in seconds.
	UpdatedTimestamp NullableInt32 `json:"updated_timestamp,omitempty"`
}

// NewAudience instantiates a new Audience object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudience() *Audience {
	this := Audience{}
	return &this
}

// NewAudienceWithDefaults instantiates a new Audience object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceWithDefaults() *Audience {
	this := Audience{}
	return &this
}

// GetAdAccountId returns the AdAccountId field value if set, zero value otherwise.
func (o *Audience) GetAdAccountId() string {
	if o == nil || IsNil(o.AdAccountId) {
		var ret string
		return ret
	}
	return *o.AdAccountId
}

// GetAdAccountIdOk returns a tuple with the AdAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetAdAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdAccountId) {
		return nil, false
	}
	return o.AdAccountId, true
}

// HasAdAccountId returns a boolean if a field has been set.
func (o *Audience) HasAdAccountId() bool {
	if o != nil && !IsNil(o.AdAccountId) {
		return true
	}

	return false
}

// SetAdAccountId gets a reference to the given string and assigns it to the AdAccountId field.
func (o *Audience) SetAdAccountId(v string) {
	o.AdAccountId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Audience) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Audience) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Audience) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Audience) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Audience) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Audience) SetName(v string) {
	o.Name = &v
}

// GetAudienceType returns the AudienceType field value if set, zero value otherwise.
func (o *Audience) GetAudienceType() string {
	if o == nil || IsNil(o.AudienceType) {
		var ret string
		return ret
	}
	return *o.AudienceType
}

// GetAudienceTypeOk returns a tuple with the AudienceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetAudienceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AudienceType) {
		return nil, false
	}
	return o.AudienceType, true
}

// HasAudienceType returns a boolean if a field has been set.
func (o *Audience) HasAudienceType() bool {
	if o != nil && !IsNil(o.AudienceType) {
		return true
	}

	return false
}

// SetAudienceType gets a reference to the given string and assigns it to the AudienceType field.
func (o *Audience) SetAudienceType(v string) {
	o.AudienceType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Audience) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Audience) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Audience) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Audience) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Audience) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Audience) UnsetDescription() {
	o.Description.Unset()
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *Audience) GetRule() AudienceRule {
	if o == nil || IsNil(o.Rule) {
		var ret AudienceRule
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetRuleOk() (*AudienceRule, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *Audience) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given AudienceRule and assigns it to the Rule field.
func (o *Audience) SetRule(v AudienceRule) {
	o.Rule = &v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Audience) GetSize() int32 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int32
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Audience) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *Audience) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt32 and assigns it to the Size field.
func (o *Audience) SetSize(v int32) {
	o.Size.Set(&v)
}
// SetSizeNil sets the value for Size to be an explicit nil
func (o *Audience) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *Audience) UnsetSize() {
	o.Size.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Audience) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Audience) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Audience) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Audience) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Audience) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Audience) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Audience) SetType(v string) {
	o.Type = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Audience) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp.Get()) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp.Get()
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Audience) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTimestamp.Get(), o.CreatedTimestamp.IsSet()
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *Audience) HasCreatedTimestamp() bool {
	if o != nil && o.CreatedTimestamp.IsSet() {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given NullableInt32 and assigns it to the CreatedTimestamp field.
func (o *Audience) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp.Set(&v)
}
// SetCreatedTimestampNil sets the value for CreatedTimestamp to be an explicit nil
func (o *Audience) SetCreatedTimestampNil() {
	o.CreatedTimestamp.Set(nil)
}

// UnsetCreatedTimestamp ensures that no value is present for CreatedTimestamp, not even an explicit nil
func (o *Audience) UnsetCreatedTimestamp() {
	o.CreatedTimestamp.Unset()
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Audience) GetUpdatedTimestamp() int32 {
	if o == nil || IsNil(o.UpdatedTimestamp.Get()) {
		var ret int32
		return ret
	}
	return *o.UpdatedTimestamp.Get()
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Audience) GetUpdatedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedTimestamp.Get(), o.UpdatedTimestamp.IsSet()
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *Audience) HasUpdatedTimestamp() bool {
	if o != nil && o.UpdatedTimestamp.IsSet() {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given NullableInt32 and assigns it to the UpdatedTimestamp field.
func (o *Audience) SetUpdatedTimestamp(v int32) {
	o.UpdatedTimestamp.Set(&v)
}
// SetUpdatedTimestampNil sets the value for UpdatedTimestamp to be an explicit nil
func (o *Audience) SetUpdatedTimestampNil() {
	o.UpdatedTimestamp.Set(nil)
}

// UnsetUpdatedTimestamp ensures that no value is present for UpdatedTimestamp, not even an explicit nil
func (o *Audience) UnsetUpdatedTimestamp() {
	o.UpdatedTimestamp.Unset()
}

func (o Audience) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Audience) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdAccountId) {
		toSerialize["ad_account_id"] = o.AdAccountId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AudienceType) {
		toSerialize["audience_type"] = o.AudienceType
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.CreatedTimestamp.IsSet() {
		toSerialize["created_timestamp"] = o.CreatedTimestamp.Get()
	}
	if o.UpdatedTimestamp.IsSet() {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp.Get()
	}
	return toSerialize, nil
}

type NullableAudience struct {
	value *Audience
	isSet bool
}

func (v NullableAudience) Get() *Audience {
	return v.value
}

func (v *NullableAudience) Set(val *Audience) {
	v.value = val
	v.isSet = true
}

func (v NullableAudience) IsSet() bool {
	return v.isSet
}

func (v *NullableAudience) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudience(val *Audience) *NullableAudience {
	return &NullableAudience{value: val, isSet: true}
}

func (v NullableAudience) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudience) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


