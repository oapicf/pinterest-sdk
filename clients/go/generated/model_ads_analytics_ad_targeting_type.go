/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AdsAnalyticsAdTargetingType Reporting targeting type for ads
type AdsAnalyticsAdTargetingType string

// List of AdsAnalyticsAdTargetingType
const (
	KEYWORD AdsAnalyticsAdTargetingType = "KEYWORD"
	APPTYPE AdsAnalyticsAdTargetingType = "APPTYPE"
	GENDER AdsAnalyticsAdTargetingType = "GENDER"
	LOCATION AdsAnalyticsAdTargetingType = "LOCATION"
	PLACEMENT AdsAnalyticsAdTargetingType = "PLACEMENT"
	COUNTRY AdsAnalyticsAdTargetingType = "COUNTRY"
	TARGETED_INTEREST AdsAnalyticsAdTargetingType = "TARGETED_INTEREST"
	PINNER_INTEREST AdsAnalyticsAdTargetingType = "PINNER_INTEREST"
	AUDIENCE_INCLUDE AdsAnalyticsAdTargetingType = "AUDIENCE_INCLUDE"
	GEO AdsAnalyticsAdTargetingType = "GEO"
	AGE_BUCKET AdsAnalyticsAdTargetingType = "AGE_BUCKET"
	REGION AdsAnalyticsAdTargetingType = "REGION"
	QUIZ_RESULT AdsAnalyticsAdTargetingType = "QUIZ_RESULT"
	AGE_BUCKET_AND_GENDER AdsAnalyticsAdTargetingType = "AGE_BUCKET_AND_GENDER"
)

// All allowed values of AdsAnalyticsAdTargetingType enum
var AllowedAdsAnalyticsAdTargetingTypeEnumValues = []AdsAnalyticsAdTargetingType{
	"KEYWORD",
	"APPTYPE",
	"GENDER",
	"LOCATION",
	"PLACEMENT",
	"COUNTRY",
	"TARGETED_INTEREST",
	"PINNER_INTEREST",
	"AUDIENCE_INCLUDE",
	"GEO",
	"AGE_BUCKET",
	"REGION",
	"QUIZ_RESULT",
	"AGE_BUCKET_AND_GENDER",
}

func (v *AdsAnalyticsAdTargetingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AdsAnalyticsAdTargetingType(value)
	for _, existing := range AllowedAdsAnalyticsAdTargetingTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AdsAnalyticsAdTargetingType", value)
}

// NewAdsAnalyticsAdTargetingTypeFromValue returns a pointer to a valid AdsAnalyticsAdTargetingType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAdsAnalyticsAdTargetingTypeFromValue(v string) (*AdsAnalyticsAdTargetingType, error) {
	ev := AdsAnalyticsAdTargetingType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AdsAnalyticsAdTargetingType: valid values are %v", v, AllowedAdsAnalyticsAdTargetingTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AdsAnalyticsAdTargetingType) IsValid() bool {
	for _, existing := range AllowedAdsAnalyticsAdTargetingTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AdsAnalyticsAdTargetingType value
func (v AdsAnalyticsAdTargetingType) Ptr() *AdsAnalyticsAdTargetingType {
	return &v
}

type NullableAdsAnalyticsAdTargetingType struct {
	value *AdsAnalyticsAdTargetingType
	isSet bool
}

func (v NullableAdsAnalyticsAdTargetingType) Get() *AdsAnalyticsAdTargetingType {
	return v.value
}

func (v *NullableAdsAnalyticsAdTargetingType) Set(val *AdsAnalyticsAdTargetingType) {
	v.value = val
	v.isSet = true
}

func (v NullableAdsAnalyticsAdTargetingType) IsSet() bool {
	return v.isSet
}

func (v *NullableAdsAnalyticsAdTargetingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdsAnalyticsAdTargetingType(val *AdsAnalyticsAdTargetingType) *NullableAdsAnalyticsAdTargetingType {
	return &NullableAdsAnalyticsAdTargetingType{value: val, isSet: true}
}

func (v NullableAdsAnalyticsAdTargetingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdsAnalyticsAdTargetingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

