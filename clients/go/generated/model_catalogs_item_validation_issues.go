/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsItemValidationIssues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsItemValidationIssues{}

// CatalogsItemValidationIssues struct for CatalogsItemValidationIssues
type CatalogsItemValidationIssues struct {
	// Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation.
	ItemNumber int32 `json:"item_number"`
	// The merchant-created unique ID that represents the product.
	ItemId NullableString `json:"item_id"`
	Errors CatalogsItemValidationErrors `json:"errors"`
	Warnings CatalogsItemValidationWarnings `json:"warnings"`
}

type _CatalogsItemValidationIssues CatalogsItemValidationIssues

// NewCatalogsItemValidationIssues instantiates a new CatalogsItemValidationIssues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsItemValidationIssues(itemNumber int32, itemId NullableString, errors CatalogsItemValidationErrors, warnings CatalogsItemValidationWarnings) *CatalogsItemValidationIssues {
	this := CatalogsItemValidationIssues{}
	this.ItemNumber = itemNumber
	this.ItemId = itemId
	this.Errors = errors
	this.Warnings = warnings
	return &this
}

// NewCatalogsItemValidationIssuesWithDefaults instantiates a new CatalogsItemValidationIssues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsItemValidationIssuesWithDefaults() *CatalogsItemValidationIssues {
	this := CatalogsItemValidationIssues{}
	return &this
}

// GetItemNumber returns the ItemNumber field value
func (o *CatalogsItemValidationIssues) GetItemNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ItemNumber
}

// GetItemNumberOk returns a tuple with the ItemNumber field value
// and a boolean to check if the value has been set.
func (o *CatalogsItemValidationIssues) GetItemNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemNumber, true
}

// SetItemNumber sets field value
func (o *CatalogsItemValidationIssues) SetItemNumber(v int32) {
	o.ItemNumber = v
}

// GetItemId returns the ItemId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CatalogsItemValidationIssues) GetItemId() string {
	if o == nil || o.ItemId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemId.Get()
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsItemValidationIssues) GetItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemId.Get(), o.ItemId.IsSet()
}

// SetItemId sets field value
func (o *CatalogsItemValidationIssues) SetItemId(v string) {
	o.ItemId.Set(&v)
}

// GetErrors returns the Errors field value
func (o *CatalogsItemValidationIssues) GetErrors() CatalogsItemValidationErrors {
	if o == nil {
		var ret CatalogsItemValidationErrors
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *CatalogsItemValidationIssues) GetErrorsOk() (*CatalogsItemValidationErrors, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *CatalogsItemValidationIssues) SetErrors(v CatalogsItemValidationErrors) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value
func (o *CatalogsItemValidationIssues) GetWarnings() CatalogsItemValidationWarnings {
	if o == nil {
		var ret CatalogsItemValidationWarnings
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *CatalogsItemValidationIssues) GetWarningsOk() (*CatalogsItemValidationWarnings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// SetWarnings sets field value
func (o *CatalogsItemValidationIssues) SetWarnings(v CatalogsItemValidationWarnings) {
	o.Warnings = v
}

func (o CatalogsItemValidationIssues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsItemValidationIssues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["item_number"] = o.ItemNumber
	toSerialize["item_id"] = o.ItemId.Get()
	toSerialize["errors"] = o.Errors
	toSerialize["warnings"] = o.Warnings
	return toSerialize, nil
}

func (o *CatalogsItemValidationIssues) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"item_number",
		"item_id",
		"errors",
		"warnings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsItemValidationIssues := _CatalogsItemValidationIssues{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsItemValidationIssues)

	if err != nil {
		return err
	}

	*o = CatalogsItemValidationIssues(varCatalogsItemValidationIssues)

	return err
}

type NullableCatalogsItemValidationIssues struct {
	value *CatalogsItemValidationIssues
	isSet bool
}

func (v NullableCatalogsItemValidationIssues) Get() *CatalogsItemValidationIssues {
	return v.value
}

func (v *NullableCatalogsItemValidationIssues) Set(val *CatalogsItemValidationIssues) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsItemValidationIssues) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsItemValidationIssues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsItemValidationIssues(val *CatalogsItemValidationIssues) *NullableCatalogsItemValidationIssues {
	return &NullableCatalogsItemValidationIssues{value: val, isSet: true}
}

func (v NullableCatalogsItemValidationIssues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsItemValidationIssues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


