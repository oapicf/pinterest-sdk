/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HotelIdFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelIdFilter{}

// HotelIdFilter struct for HotelIdFilter
type HotelIdFilter struct {
	HOTEL_ID CatalogsProductGroupMultipleStringCriteria `json:"HOTEL_ID"`
}

type _HotelIdFilter HotelIdFilter

// NewHotelIdFilter instantiates a new HotelIdFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelIdFilter(hOTELID CatalogsProductGroupMultipleStringCriteria) *HotelIdFilter {
	this := HotelIdFilter{}
	this.HOTEL_ID = hOTELID
	return &this
}

// NewHotelIdFilterWithDefaults instantiates a new HotelIdFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelIdFilterWithDefaults() *HotelIdFilter {
	this := HotelIdFilter{}
	return &this
}

// GetHOTEL_ID returns the HOTEL_ID field value
func (o *HotelIdFilter) GetHOTEL_ID() CatalogsProductGroupMultipleStringCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringCriteria
		return ret
	}

	return o.HOTEL_ID
}

// GetHOTEL_IDOk returns a tuple with the HOTEL_ID field value
// and a boolean to check if the value has been set.
func (o *HotelIdFilter) GetHOTEL_IDOk() (CatalogsProductGroupMultipleStringCriteria, bool) {
	if o == nil {
		return CatalogsProductGroupMultipleStringCriteria{}, false
	}
	return o.HOTEL_ID, true
}

// SetHOTEL_ID sets field value
func (o *HotelIdFilter) SetHOTEL_ID(v CatalogsProductGroupMultipleStringCriteria) {
	o.HOTEL_ID = v
}

func (o HotelIdFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelIdFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["HOTEL_ID"] = o.HOTEL_ID
	return toSerialize, nil
}

func (o *HotelIdFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"HOTEL_ID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHotelIdFilter := _HotelIdFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHotelIdFilter)

	if err != nil {
		return err
	}

	*o = HotelIdFilter(varHotelIdFilter)

	return err
}

type NullableHotelIdFilter struct {
	value *HotelIdFilter
	isSet bool
}

func (v NullableHotelIdFilter) Get() *HotelIdFilter {
	return v.value
}

func (v *NullableHotelIdFilter) Set(val *HotelIdFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelIdFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelIdFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelIdFilter(val *HotelIdFilter) *NullableHotelIdFilter {
	return &NullableHotelIdFilter{value: val, isSet: true}
}

func (v NullableHotelIdFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelIdFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


