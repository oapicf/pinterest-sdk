/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AdvancedAuctionProcessedItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedAuctionProcessedItem{}

// AdvancedAuctionProcessedItem Object describing the result of an operation on an item bid option
type AdvancedAuctionProcessedItem struct {
	AdvancedAuctionItemsSubmitRecord
	// Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
	Errors []AdvancedAuctionOperationError `json:"errors,omitempty"`
}

type _AdvancedAuctionProcessedItem AdvancedAuctionProcessedItem

// NewAdvancedAuctionProcessedItem instantiates a new AdvancedAuctionProcessedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedAuctionProcessedItem(operation AdvancedAuctionOperation, itemId string, country Country, language Language, bidOptions AdvancedAuctionBidOptions, updateMask []UpdateMaskBidOptionField) *AdvancedAuctionProcessedItem {
	this := AdvancedAuctionProcessedItem{}
	this.Operation = operation
	this.ItemId = itemId
	this.Country = country
	this.Language = language
	this.BidOptions = bidOptions
	this.UpdateMask = updateMask
	return &this
}

// NewAdvancedAuctionProcessedItemWithDefaults instantiates a new AdvancedAuctionProcessedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedAuctionProcessedItemWithDefaults() *AdvancedAuctionProcessedItem {
	this := AdvancedAuctionProcessedItem{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *AdvancedAuctionProcessedItem) GetErrors() []AdvancedAuctionOperationError {
	if o == nil || IsNil(o.Errors) {
		var ret []AdvancedAuctionOperationError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAuctionProcessedItem) GetErrorsOk() ([]AdvancedAuctionOperationError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *AdvancedAuctionProcessedItem) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []AdvancedAuctionOperationError and assigns it to the Errors field.
func (o *AdvancedAuctionProcessedItem) SetErrors(v []AdvancedAuctionOperationError) {
	o.Errors = v
}

func (o AdvancedAuctionProcessedItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedAuctionProcessedItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

func (o *AdvancedAuctionProcessedItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation",
		"item_id",
		"country",
		"language",
		"bid_options",
		"update_mask",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdvancedAuctionProcessedItem := _AdvancedAuctionProcessedItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAdvancedAuctionProcessedItem)

	if err != nil {
		return err
	}

	*o = AdvancedAuctionProcessedItem(varAdvancedAuctionProcessedItem)

	return err
}

type NullableAdvancedAuctionProcessedItem struct {
	value *AdvancedAuctionProcessedItem
	isSet bool
}

func (v NullableAdvancedAuctionProcessedItem) Get() *AdvancedAuctionProcessedItem {
	return v.value
}

func (v *NullableAdvancedAuctionProcessedItem) Set(val *AdvancedAuctionProcessedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAuctionProcessedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAuctionProcessedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAuctionProcessedItem(val *AdvancedAuctionProcessedItem) *NullableAdvancedAuctionProcessedItem {
	return &NullableAdvancedAuctionProcessedItem{value: val, isSet: true}
}

func (v NullableAdvancedAuctionProcessedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAuctionProcessedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


