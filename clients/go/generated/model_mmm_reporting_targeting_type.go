/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MMMReportingTargetingType Ad targeting types for MMM report
type MMMReportingTargetingType string

// List of MMMReportingTargetingType
const (
	APPTYPE MMMReportingTargetingType = "APPTYPE"
	COUNTRY MMMReportingTargetingType = "COUNTRY"
	CREATIVE_TYPE MMMReportingTargetingType = "CREATIVE_TYPE"
	GENDER MMMReportingTargetingType = "GENDER"
	LOCATION MMMReportingTargetingType = "LOCATION"
)

// All allowed values of MMMReportingTargetingType enum
var AllowedMMMReportingTargetingTypeEnumValues = []MMMReportingTargetingType{
	"APPTYPE",
	"COUNTRY",
	"CREATIVE_TYPE",
	"GENDER",
	"LOCATION",
}

func (v *MMMReportingTargetingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MMMReportingTargetingType(value)
	for _, existing := range AllowedMMMReportingTargetingTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MMMReportingTargetingType", value)
}

// NewMMMReportingTargetingTypeFromValue returns a pointer to a valid MMMReportingTargetingType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMMMReportingTargetingTypeFromValue(v string) (*MMMReportingTargetingType, error) {
	ev := MMMReportingTargetingType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MMMReportingTargetingType: valid values are %v", v, AllowedMMMReportingTargetingTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MMMReportingTargetingType) IsValid() bool {
	for _, existing := range AllowedMMMReportingTargetingTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MMMReportingTargetingType value
func (v MMMReportingTargetingType) Ptr() *MMMReportingTargetingType {
	return &v
}

type NullableMMMReportingTargetingType struct {
	value *MMMReportingTargetingType
	isSet bool
}

func (v NullableMMMReportingTargetingType) Get() *MMMReportingTargetingType {
	return v.value
}

func (v *NullableMMMReportingTargetingType) Set(val *MMMReportingTargetingType) {
	v.value = val
	v.isSet = true
}

func (v NullableMMMReportingTargetingType) IsSet() bool {
	return v.isSet
}

func (v *NullableMMMReportingTargetingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMMMReportingTargetingType(val *MMMReportingTargetingType) *NullableMMMReportingTargetingType {
	return &NullableMMMReportingTargetingType{value: val, isSet: true}
}

func (v NullableMMMReportingTargetingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMMMReportingTargetingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

