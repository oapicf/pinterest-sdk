/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SSIOInsertionOrderStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SSIOInsertionOrderStatus{}

// SSIOInsertionOrderStatus struct for SSIOInsertionOrderStatus
type SSIOInsertionOrderStatus struct {
	// Salesforce order id
	PinOrderId *string `json:"pin_order_id,omitempty"`
	// Salesforce insertion order status
	Status *string `json:"status,omitempty"`
	// Salesforce insertion order creation time
	CreationTime NullableString `json:"creation_time,omitempty"`
}

// NewSSIOInsertionOrderStatus instantiates a new SSIOInsertionOrderStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSIOInsertionOrderStatus() *SSIOInsertionOrderStatus {
	this := SSIOInsertionOrderStatus{}
	return &this
}

// NewSSIOInsertionOrderStatusWithDefaults instantiates a new SSIOInsertionOrderStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSIOInsertionOrderStatusWithDefaults() *SSIOInsertionOrderStatus {
	this := SSIOInsertionOrderStatus{}
	return &this
}

// GetPinOrderId returns the PinOrderId field value if set, zero value otherwise.
func (o *SSIOInsertionOrderStatus) GetPinOrderId() string {
	if o == nil || IsNil(o.PinOrderId) {
		var ret string
		return ret
	}
	return *o.PinOrderId
}

// GetPinOrderIdOk returns a tuple with the PinOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOInsertionOrderStatus) GetPinOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.PinOrderId) {
		return nil, false
	}
	return o.PinOrderId, true
}

// HasPinOrderId returns a boolean if a field has been set.
func (o *SSIOInsertionOrderStatus) HasPinOrderId() bool {
	if o != nil && !IsNil(o.PinOrderId) {
		return true
	}

	return false
}

// SetPinOrderId gets a reference to the given string and assigns it to the PinOrderId field.
func (o *SSIOInsertionOrderStatus) SetPinOrderId(v string) {
	o.PinOrderId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SSIOInsertionOrderStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOInsertionOrderStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SSIOInsertionOrderStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SSIOInsertionOrderStatus) SetStatus(v string) {
	o.Status = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SSIOInsertionOrderStatus) GetCreationTime() string {
	if o == nil || IsNil(o.CreationTime.Get()) {
		var ret string
		return ret
	}
	return *o.CreationTime.Get()
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SSIOInsertionOrderStatus) GetCreationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationTime.Get(), o.CreationTime.IsSet()
}

// HasCreationTime returns a boolean if a field has been set.
func (o *SSIOInsertionOrderStatus) HasCreationTime() bool {
	if o != nil && o.CreationTime.IsSet() {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given NullableString and assigns it to the CreationTime field.
func (o *SSIOInsertionOrderStatus) SetCreationTime(v string) {
	o.CreationTime.Set(&v)
}
// SetCreationTimeNil sets the value for CreationTime to be an explicit nil
func (o *SSIOInsertionOrderStatus) SetCreationTimeNil() {
	o.CreationTime.Set(nil)
}

// UnsetCreationTime ensures that no value is present for CreationTime, not even an explicit nil
func (o *SSIOInsertionOrderStatus) UnsetCreationTime() {
	o.CreationTime.Unset()
}

func (o SSIOInsertionOrderStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SSIOInsertionOrderStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PinOrderId) {
		toSerialize["pin_order_id"] = o.PinOrderId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.CreationTime.IsSet() {
		toSerialize["creation_time"] = o.CreationTime.Get()
	}
	return toSerialize, nil
}

type NullableSSIOInsertionOrderStatus struct {
	value *SSIOInsertionOrderStatus
	isSet bool
}

func (v NullableSSIOInsertionOrderStatus) Get() *SSIOInsertionOrderStatus {
	return v.value
}

func (v *NullableSSIOInsertionOrderStatus) Set(val *SSIOInsertionOrderStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSSIOInsertionOrderStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSSIOInsertionOrderStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSIOInsertionOrderStatus(val *SSIOInsertionOrderStatus) *NullableSSIOInsertionOrderStatus {
	return &NullableSSIOInsertionOrderStatus{value: val, isSet: true}
}

func (v NullableSSIOInsertionOrderStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSIOInsertionOrderStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


