/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnhancedMatchStatusType The enhanced match status of the tag
type EnhancedMatchStatusType string

// List of EnhancedMatchStatusType
const (
	UNKNOWN EnhancedMatchStatusType = "UNKNOWN"
	NOT_VALIDATED EnhancedMatchStatusType = "NOT_VALIDATED"
	VALIDATING_IN_PROGRESS EnhancedMatchStatusType = "VALIDATING_IN_PROGRESS"
	VALIDATION_COMPLETE EnhancedMatchStatusType = "VALIDATION_COMPLETE"
)

// All allowed values of EnhancedMatchStatusType enum
var AllowedEnhancedMatchStatusTypeEnumValues = []EnhancedMatchStatusType{
	"UNKNOWN",
	"NOT_VALIDATED",
	"VALIDATING_IN_PROGRESS",
	"VALIDATION_COMPLETE",
}

func (v *EnhancedMatchStatusType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnhancedMatchStatusType(value)
	for _, existing := range AllowedEnhancedMatchStatusTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnhancedMatchStatusType", value)
}

// NewEnhancedMatchStatusTypeFromValue returns a pointer to a valid EnhancedMatchStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnhancedMatchStatusTypeFromValue(v string) (*EnhancedMatchStatusType, error) {
	ev := EnhancedMatchStatusType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnhancedMatchStatusType: valid values are %v", v, AllowedEnhancedMatchStatusTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnhancedMatchStatusType) IsValid() bool {
	for _, existing := range AllowedEnhancedMatchStatusTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EnhancedMatchStatusType value
func (v EnhancedMatchStatusType) Ptr() *EnhancedMatchStatusType {
	return &v
}

type NullableEnhancedMatchStatusType struct {
	value *EnhancedMatchStatusType
	isSet bool
}

func (v NullableEnhancedMatchStatusType) Get() *EnhancedMatchStatusType {
	return v.value
}

func (v *NullableEnhancedMatchStatusType) Set(val *EnhancedMatchStatusType) {
	v.value = val
	v.isSet = true
}

func (v NullableEnhancedMatchStatusType) IsSet() bool {
	return v.isSet
}

func (v *NullableEnhancedMatchStatusType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnhancedMatchStatusType(val *EnhancedMatchStatusType) *NullableEnhancedMatchStatusType {
	return &NullableEnhancedMatchStatusType{value: val, isSet: true}
}

func (v NullableEnhancedMatchStatusType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnhancedMatchStatusType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

