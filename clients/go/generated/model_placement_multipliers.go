/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PlacementMultipliers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlacementMultipliers{}

// PlacementMultipliers This represents a mapping from placement to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified placement in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. All placement multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
type PlacementMultipliers struct {
	PLACEMENT *string `json:"PLACEMENT,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PlacementMultipliers PlacementMultipliers

// NewPlacementMultipliers instantiates a new PlacementMultipliers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacementMultipliers() *PlacementMultipliers {
	this := PlacementMultipliers{}
	return &this
}

// NewPlacementMultipliersWithDefaults instantiates a new PlacementMultipliers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementMultipliersWithDefaults() *PlacementMultipliers {
	this := PlacementMultipliers{}
	return &this
}

// GetPLACEMENT returns the PLACEMENT field value if set, zero value otherwise.
func (o *PlacementMultipliers) GetPLACEMENT() string {
	if o == nil || IsNil(o.PLACEMENT) {
		var ret string
		return ret
	}
	return *o.PLACEMENT
}

// GetPLACEMENTOk returns a tuple with the PLACEMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementMultipliers) GetPLACEMENTOk() (*string, bool) {
	if o == nil || IsNil(o.PLACEMENT) {
		return nil, false
	}
	return o.PLACEMENT, true
}

// HasPLACEMENT returns a boolean if a field has been set.
func (o *PlacementMultipliers) HasPLACEMENT() bool {
	if o != nil && !IsNil(o.PLACEMENT) {
		return true
	}

	return false
}

// SetPLACEMENT gets a reference to the given string and assigns it to the PLACEMENT field.
func (o *PlacementMultipliers) SetPLACEMENT(v string) {
	o.PLACEMENT = &v
}

func (o PlacementMultipliers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlacementMultipliers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PLACEMENT) {
		toSerialize["PLACEMENT"] = o.PLACEMENT
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PlacementMultipliers) UnmarshalJSON(data []byte) (err error) {
	varPlacementMultipliers := _PlacementMultipliers{}

	err = json.Unmarshal(data, &varPlacementMultipliers)

	if err != nil {
		return err
	}

	*o = PlacementMultipliers(varPlacementMultipliers)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "PLACEMENT")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePlacementMultipliers struct {
	value *PlacementMultipliers
	isSet bool
}

func (v NullablePlacementMultipliers) Get() *PlacementMultipliers {
	return v.value
}

func (v *NullablePlacementMultipliers) Set(val *PlacementMultipliers) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacementMultipliers) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacementMultipliers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacementMultipliers(val *PlacementMultipliers) *NullablePlacementMultipliers {
	return &NullablePlacementMultipliers{value: val, isSet: true}
}

func (v NullablePlacementMultipliers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacementMultipliers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


