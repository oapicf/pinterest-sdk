/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsCreateRequest{}

// CatalogsCreateRequest Request object for creating a catalog.
type CatalogsCreateRequest struct {
	// Type of the catalog entity.
	CatalogType string `json:"catalog_type"`
	// A human-friendly name associated to a given catalog.
	Name string `json:"name"`
}

type _CatalogsCreateRequest CatalogsCreateRequest

// NewCatalogsCreateRequest instantiates a new CatalogsCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsCreateRequest(catalogType string, name string) *CatalogsCreateRequest {
	this := CatalogsCreateRequest{}
	this.CatalogType = catalogType
	this.Name = name
	return &this
}

// NewCatalogsCreateRequestWithDefaults instantiates a new CatalogsCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsCreateRequestWithDefaults() *CatalogsCreateRequest {
	this := CatalogsCreateRequest{}
	return &this
}

// GetCatalogType returns the CatalogType field value
func (o *CatalogsCreateRequest) GetCatalogType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogType
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value
// and a boolean to check if the value has been set.
func (o *CatalogsCreateRequest) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogType, true
}

// SetCatalogType sets field value
func (o *CatalogsCreateRequest) SetCatalogType(v string) {
	o.CatalogType = v
}

// GetName returns the Name field value
func (o *CatalogsCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogsCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogsCreateRequest) SetName(v string) {
	o.Name = v
}

func (o CatalogsCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalog_type"] = o.CatalogType
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *CatalogsCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_type",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsCreateRequest := _CatalogsCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsCreateRequest)

	if err != nil {
		return err
	}

	*o = CatalogsCreateRequest(varCatalogsCreateRequest)

	return err
}

type NullableCatalogsCreateRequest struct {
	value *CatalogsCreateRequest
	isSet bool
}

func (v NullableCatalogsCreateRequest) Get() *CatalogsCreateRequest {
	return v.value
}

func (v *NullableCatalogsCreateRequest) Set(val *CatalogsCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsCreateRequest(val *CatalogsCreateRequest) *NullableCatalogsCreateRequest {
	return &NullableCatalogsCreateRequest{value: val, isSet: true}
}

func (v NullableCatalogsCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


