/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CampaignSummaryStatus Summary status for campaign
type CampaignSummaryStatus string

// List of CampaignSummaryStatus
const (
	RUNNING CampaignSummaryStatus = "RUNNING"
	PAUSED CampaignSummaryStatus = "PAUSED"
	NOT_STARTED CampaignSummaryStatus = "NOT_STARTED"
	COMPLETED CampaignSummaryStatus = "COMPLETED"
	ADVERTISER_DISABLED CampaignSummaryStatus = "ADVERTISER_DISABLED"
	ARCHIVED CampaignSummaryStatus = "ARCHIVED"
	DRAFT CampaignSummaryStatus = "DRAFT"
	DELETED_DRAFT CampaignSummaryStatus = "DELETED_DRAFT"
)

// All allowed values of CampaignSummaryStatus enum
var AllowedCampaignSummaryStatusEnumValues = []CampaignSummaryStatus{
	"RUNNING",
	"PAUSED",
	"NOT_STARTED",
	"COMPLETED",
	"ADVERTISER_DISABLED",
	"ARCHIVED",
	"DRAFT",
	"DELETED_DRAFT",
}

func (v *CampaignSummaryStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CampaignSummaryStatus(value)
	for _, existing := range AllowedCampaignSummaryStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CampaignSummaryStatus", value)
}

// NewCampaignSummaryStatusFromValue returns a pointer to a valid CampaignSummaryStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCampaignSummaryStatusFromValue(v string) (*CampaignSummaryStatus, error) {
	ev := CampaignSummaryStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CampaignSummaryStatus: valid values are %v", v, AllowedCampaignSummaryStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CampaignSummaryStatus) IsValid() bool {
	for _, existing := range AllowedCampaignSummaryStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CampaignSummaryStatus value
func (v CampaignSummaryStatus) Ptr() *CampaignSummaryStatus {
	return &v
}

type NullableCampaignSummaryStatus struct {
	value *CampaignSummaryStatus
	isSet bool
}

func (v NullableCampaignSummaryStatus) Get() *CampaignSummaryStatus {
	return v.value
}

func (v *NullableCampaignSummaryStatus) Set(val *CampaignSummaryStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignSummaryStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignSummaryStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignSummaryStatus(val *CampaignSummaryStatus) *NullableCampaignSummaryStatus {
	return &NullableCampaignSummaryStatus{value: val, isSet: true}
}

func (v NullableCampaignSummaryStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignSummaryStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

