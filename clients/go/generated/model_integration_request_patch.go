/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IntegrationRequestPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationRequestPatch{}

// IntegrationRequestPatch Schema used for updating the integration metadata.
type IntegrationRequestPatch struct {
	ConnectedMerchantId *string `json:"connected_merchant_id,omitempty"`
	ConnectedAdvertiserId *string `json:"connected_advertiser_id,omitempty"`
	ConnectedLbaId *string `json:"connected_lba_id,omitempty"`
	ConnectedTagId *string `json:"connected_tag_id,omitempty"`
	PartnerAccessToken *string `json:"partner_access_token,omitempty"`
	PartnerRefreshToken *string `json:"partner_refresh_token,omitempty"`
	PartnerPrimaryEmail *string `json:"partner_primary_email,omitempty"`
	PartnerAccessTokenExpiry *float32 `json:"partner_access_token_expiry,omitempty"`
	PartnerRefreshTokenExpiry *float32 `json:"partner_refresh_token_expiry,omitempty"`
	Scopes *string `json:"scopes,omitempty"`
	AdditionalId1 *string `json:"additional_id_1,omitempty"`
	PartnerMetadata *string `json:"partner_metadata,omitempty"`
}

// NewIntegrationRequestPatch instantiates a new IntegrationRequestPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationRequestPatch() *IntegrationRequestPatch {
	this := IntegrationRequestPatch{}
	return &this
}

// NewIntegrationRequestPatchWithDefaults instantiates a new IntegrationRequestPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationRequestPatchWithDefaults() *IntegrationRequestPatch {
	this := IntegrationRequestPatch{}
	return &this
}

// GetConnectedMerchantId returns the ConnectedMerchantId field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetConnectedMerchantId() string {
	if o == nil || IsNil(o.ConnectedMerchantId) {
		var ret string
		return ret
	}
	return *o.ConnectedMerchantId
}

// GetConnectedMerchantIdOk returns a tuple with the ConnectedMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetConnectedMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedMerchantId) {
		return nil, false
	}
	return o.ConnectedMerchantId, true
}

// HasConnectedMerchantId returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasConnectedMerchantId() bool {
	if o != nil && !IsNil(o.ConnectedMerchantId) {
		return true
	}

	return false
}

// SetConnectedMerchantId gets a reference to the given string and assigns it to the ConnectedMerchantId field.
func (o *IntegrationRequestPatch) SetConnectedMerchantId(v string) {
	o.ConnectedMerchantId = &v
}

// GetConnectedAdvertiserId returns the ConnectedAdvertiserId field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetConnectedAdvertiserId() string {
	if o == nil || IsNil(o.ConnectedAdvertiserId) {
		var ret string
		return ret
	}
	return *o.ConnectedAdvertiserId
}

// GetConnectedAdvertiserIdOk returns a tuple with the ConnectedAdvertiserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetConnectedAdvertiserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedAdvertiserId) {
		return nil, false
	}
	return o.ConnectedAdvertiserId, true
}

// HasConnectedAdvertiserId returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasConnectedAdvertiserId() bool {
	if o != nil && !IsNil(o.ConnectedAdvertiserId) {
		return true
	}

	return false
}

// SetConnectedAdvertiserId gets a reference to the given string and assigns it to the ConnectedAdvertiserId field.
func (o *IntegrationRequestPatch) SetConnectedAdvertiserId(v string) {
	o.ConnectedAdvertiserId = &v
}

// GetConnectedLbaId returns the ConnectedLbaId field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetConnectedLbaId() string {
	if o == nil || IsNil(o.ConnectedLbaId) {
		var ret string
		return ret
	}
	return *o.ConnectedLbaId
}

// GetConnectedLbaIdOk returns a tuple with the ConnectedLbaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetConnectedLbaIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedLbaId) {
		return nil, false
	}
	return o.ConnectedLbaId, true
}

// HasConnectedLbaId returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasConnectedLbaId() bool {
	if o != nil && !IsNil(o.ConnectedLbaId) {
		return true
	}

	return false
}

// SetConnectedLbaId gets a reference to the given string and assigns it to the ConnectedLbaId field.
func (o *IntegrationRequestPatch) SetConnectedLbaId(v string) {
	o.ConnectedLbaId = &v
}

// GetConnectedTagId returns the ConnectedTagId field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetConnectedTagId() string {
	if o == nil || IsNil(o.ConnectedTagId) {
		var ret string
		return ret
	}
	return *o.ConnectedTagId
}

// GetConnectedTagIdOk returns a tuple with the ConnectedTagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetConnectedTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedTagId) {
		return nil, false
	}
	return o.ConnectedTagId, true
}

// HasConnectedTagId returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasConnectedTagId() bool {
	if o != nil && !IsNil(o.ConnectedTagId) {
		return true
	}

	return false
}

// SetConnectedTagId gets a reference to the given string and assigns it to the ConnectedTagId field.
func (o *IntegrationRequestPatch) SetConnectedTagId(v string) {
	o.ConnectedTagId = &v
}

// GetPartnerAccessToken returns the PartnerAccessToken field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetPartnerAccessToken() string {
	if o == nil || IsNil(o.PartnerAccessToken) {
		var ret string
		return ret
	}
	return *o.PartnerAccessToken
}

// GetPartnerAccessTokenOk returns a tuple with the PartnerAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetPartnerAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerAccessToken) {
		return nil, false
	}
	return o.PartnerAccessToken, true
}

// HasPartnerAccessToken returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasPartnerAccessToken() bool {
	if o != nil && !IsNil(o.PartnerAccessToken) {
		return true
	}

	return false
}

// SetPartnerAccessToken gets a reference to the given string and assigns it to the PartnerAccessToken field.
func (o *IntegrationRequestPatch) SetPartnerAccessToken(v string) {
	o.PartnerAccessToken = &v
}

// GetPartnerRefreshToken returns the PartnerRefreshToken field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetPartnerRefreshToken() string {
	if o == nil || IsNil(o.PartnerRefreshToken) {
		var ret string
		return ret
	}
	return *o.PartnerRefreshToken
}

// GetPartnerRefreshTokenOk returns a tuple with the PartnerRefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetPartnerRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerRefreshToken) {
		return nil, false
	}
	return o.PartnerRefreshToken, true
}

// HasPartnerRefreshToken returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasPartnerRefreshToken() bool {
	if o != nil && !IsNil(o.PartnerRefreshToken) {
		return true
	}

	return false
}

// SetPartnerRefreshToken gets a reference to the given string and assigns it to the PartnerRefreshToken field.
func (o *IntegrationRequestPatch) SetPartnerRefreshToken(v string) {
	o.PartnerRefreshToken = &v
}

// GetPartnerPrimaryEmail returns the PartnerPrimaryEmail field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetPartnerPrimaryEmail() string {
	if o == nil || IsNil(o.PartnerPrimaryEmail) {
		var ret string
		return ret
	}
	return *o.PartnerPrimaryEmail
}

// GetPartnerPrimaryEmailOk returns a tuple with the PartnerPrimaryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetPartnerPrimaryEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerPrimaryEmail) {
		return nil, false
	}
	return o.PartnerPrimaryEmail, true
}

// HasPartnerPrimaryEmail returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasPartnerPrimaryEmail() bool {
	if o != nil && !IsNil(o.PartnerPrimaryEmail) {
		return true
	}

	return false
}

// SetPartnerPrimaryEmail gets a reference to the given string and assigns it to the PartnerPrimaryEmail field.
func (o *IntegrationRequestPatch) SetPartnerPrimaryEmail(v string) {
	o.PartnerPrimaryEmail = &v
}

// GetPartnerAccessTokenExpiry returns the PartnerAccessTokenExpiry field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetPartnerAccessTokenExpiry() float32 {
	if o == nil || IsNil(o.PartnerAccessTokenExpiry) {
		var ret float32
		return ret
	}
	return *o.PartnerAccessTokenExpiry
}

// GetPartnerAccessTokenExpiryOk returns a tuple with the PartnerAccessTokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetPartnerAccessTokenExpiryOk() (*float32, bool) {
	if o == nil || IsNil(o.PartnerAccessTokenExpiry) {
		return nil, false
	}
	return o.PartnerAccessTokenExpiry, true
}

// HasPartnerAccessTokenExpiry returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasPartnerAccessTokenExpiry() bool {
	if o != nil && !IsNil(o.PartnerAccessTokenExpiry) {
		return true
	}

	return false
}

// SetPartnerAccessTokenExpiry gets a reference to the given float32 and assigns it to the PartnerAccessTokenExpiry field.
func (o *IntegrationRequestPatch) SetPartnerAccessTokenExpiry(v float32) {
	o.PartnerAccessTokenExpiry = &v
}

// GetPartnerRefreshTokenExpiry returns the PartnerRefreshTokenExpiry field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetPartnerRefreshTokenExpiry() float32 {
	if o == nil || IsNil(o.PartnerRefreshTokenExpiry) {
		var ret float32
		return ret
	}
	return *o.PartnerRefreshTokenExpiry
}

// GetPartnerRefreshTokenExpiryOk returns a tuple with the PartnerRefreshTokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetPartnerRefreshTokenExpiryOk() (*float32, bool) {
	if o == nil || IsNil(o.PartnerRefreshTokenExpiry) {
		return nil, false
	}
	return o.PartnerRefreshTokenExpiry, true
}

// HasPartnerRefreshTokenExpiry returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasPartnerRefreshTokenExpiry() bool {
	if o != nil && !IsNil(o.PartnerRefreshTokenExpiry) {
		return true
	}

	return false
}

// SetPartnerRefreshTokenExpiry gets a reference to the given float32 and assigns it to the PartnerRefreshTokenExpiry field.
func (o *IntegrationRequestPatch) SetPartnerRefreshTokenExpiry(v float32) {
	o.PartnerRefreshTokenExpiry = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetScopes() string {
	if o == nil || IsNil(o.Scopes) {
		var ret string
		return ret
	}
	return *o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetScopesOk() (*string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given string and assigns it to the Scopes field.
func (o *IntegrationRequestPatch) SetScopes(v string) {
	o.Scopes = &v
}

// GetAdditionalId1 returns the AdditionalId1 field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetAdditionalId1() string {
	if o == nil || IsNil(o.AdditionalId1) {
		var ret string
		return ret
	}
	return *o.AdditionalId1
}

// GetAdditionalId1Ok returns a tuple with the AdditionalId1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetAdditionalId1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdditionalId1) {
		return nil, false
	}
	return o.AdditionalId1, true
}

// HasAdditionalId1 returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasAdditionalId1() bool {
	if o != nil && !IsNil(o.AdditionalId1) {
		return true
	}

	return false
}

// SetAdditionalId1 gets a reference to the given string and assigns it to the AdditionalId1 field.
func (o *IntegrationRequestPatch) SetAdditionalId1(v string) {
	o.AdditionalId1 = &v
}

// GetPartnerMetadata returns the PartnerMetadata field value if set, zero value otherwise.
func (o *IntegrationRequestPatch) GetPartnerMetadata() string {
	if o == nil || IsNil(o.PartnerMetadata) {
		var ret string
		return ret
	}
	return *o.PartnerMetadata
}

// GetPartnerMetadataOk returns a tuple with the PartnerMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequestPatch) GetPartnerMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerMetadata) {
		return nil, false
	}
	return o.PartnerMetadata, true
}

// HasPartnerMetadata returns a boolean if a field has been set.
func (o *IntegrationRequestPatch) HasPartnerMetadata() bool {
	if o != nil && !IsNil(o.PartnerMetadata) {
		return true
	}

	return false
}

// SetPartnerMetadata gets a reference to the given string and assigns it to the PartnerMetadata field.
func (o *IntegrationRequestPatch) SetPartnerMetadata(v string) {
	o.PartnerMetadata = &v
}

func (o IntegrationRequestPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationRequestPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectedMerchantId) {
		toSerialize["connected_merchant_id"] = o.ConnectedMerchantId
	}
	if !IsNil(o.ConnectedAdvertiserId) {
		toSerialize["connected_advertiser_id"] = o.ConnectedAdvertiserId
	}
	if !IsNil(o.ConnectedLbaId) {
		toSerialize["connected_lba_id"] = o.ConnectedLbaId
	}
	if !IsNil(o.ConnectedTagId) {
		toSerialize["connected_tag_id"] = o.ConnectedTagId
	}
	if !IsNil(o.PartnerAccessToken) {
		toSerialize["partner_access_token"] = o.PartnerAccessToken
	}
	if !IsNil(o.PartnerRefreshToken) {
		toSerialize["partner_refresh_token"] = o.PartnerRefreshToken
	}
	if !IsNil(o.PartnerPrimaryEmail) {
		toSerialize["partner_primary_email"] = o.PartnerPrimaryEmail
	}
	if !IsNil(o.PartnerAccessTokenExpiry) {
		toSerialize["partner_access_token_expiry"] = o.PartnerAccessTokenExpiry
	}
	if !IsNil(o.PartnerRefreshTokenExpiry) {
		toSerialize["partner_refresh_token_expiry"] = o.PartnerRefreshTokenExpiry
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.AdditionalId1) {
		toSerialize["additional_id_1"] = o.AdditionalId1
	}
	if !IsNil(o.PartnerMetadata) {
		toSerialize["partner_metadata"] = o.PartnerMetadata
	}
	return toSerialize, nil
}

type NullableIntegrationRequestPatch struct {
	value *IntegrationRequestPatch
	isSet bool
}

func (v NullableIntegrationRequestPatch) Get() *IntegrationRequestPatch {
	return v.value
}

func (v *NullableIntegrationRequestPatch) Set(val *IntegrationRequestPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationRequestPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationRequestPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationRequestPatch(val *IntegrationRequestPatch) *NullableIntegrationRequestPatch {
	return &NullableIntegrationRequestPatch{value: val, isSet: true}
}

func (v NullableIntegrationRequestPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationRequestPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


