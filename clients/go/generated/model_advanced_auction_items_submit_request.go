/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AdvancedAuctionItemsSubmitRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedAuctionItemsSubmitRequest{}

// AdvancedAuctionItemsSubmitRequest Request containing operations to perform on bid prices and bid multipliers for a batch of retail catalog items
type AdvancedAuctionItemsSubmitRequest struct {
	// Catalog id pertaining to all items
	CatalogId string `json:"catalog_id" validate:"regexp=^\\\\d+$"`
	// Array of item bid option operations
	Items []AdvancedAuctionItemsSubmitRecord `json:"items"`
}

type _AdvancedAuctionItemsSubmitRequest AdvancedAuctionItemsSubmitRequest

// NewAdvancedAuctionItemsSubmitRequest instantiates a new AdvancedAuctionItemsSubmitRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedAuctionItemsSubmitRequest(catalogId string, items []AdvancedAuctionItemsSubmitRecord) *AdvancedAuctionItemsSubmitRequest {
	this := AdvancedAuctionItemsSubmitRequest{}
	this.CatalogId = catalogId
	this.Items = items
	return &this
}

// NewAdvancedAuctionItemsSubmitRequestWithDefaults instantiates a new AdvancedAuctionItemsSubmitRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedAuctionItemsSubmitRequestWithDefaults() *AdvancedAuctionItemsSubmitRequest {
	this := AdvancedAuctionItemsSubmitRequest{}
	return &this
}

// GetCatalogId returns the CatalogId field value
func (o *AdvancedAuctionItemsSubmitRequest) GetCatalogId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *AdvancedAuctionItemsSubmitRequest) GetCatalogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *AdvancedAuctionItemsSubmitRequest) SetCatalogId(v string) {
	o.CatalogId = v
}

// GetItems returns the Items field value
func (o *AdvancedAuctionItemsSubmitRequest) GetItems() []AdvancedAuctionItemsSubmitRecord {
	if o == nil {
		var ret []AdvancedAuctionItemsSubmitRecord
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *AdvancedAuctionItemsSubmitRequest) GetItemsOk() ([]AdvancedAuctionItemsSubmitRecord, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *AdvancedAuctionItemsSubmitRequest) SetItems(v []AdvancedAuctionItemsSubmitRecord) {
	o.Items = v
}

func (o AdvancedAuctionItemsSubmitRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedAuctionItemsSubmitRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalog_id"] = o.CatalogId
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

func (o *AdvancedAuctionItemsSubmitRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_id",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdvancedAuctionItemsSubmitRequest := _AdvancedAuctionItemsSubmitRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAdvancedAuctionItemsSubmitRequest)

	if err != nil {
		return err
	}

	*o = AdvancedAuctionItemsSubmitRequest(varAdvancedAuctionItemsSubmitRequest)

	return err
}

type NullableAdvancedAuctionItemsSubmitRequest struct {
	value *AdvancedAuctionItemsSubmitRequest
	isSet bool
}

func (v NullableAdvancedAuctionItemsSubmitRequest) Get() *AdvancedAuctionItemsSubmitRequest {
	return v.value
}

func (v *NullableAdvancedAuctionItemsSubmitRequest) Set(val *AdvancedAuctionItemsSubmitRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAuctionItemsSubmitRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAuctionItemsSubmitRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAuctionItemsSubmitRequest(val *AdvancedAuctionItemsSubmitRequest) *NullableAdvancedAuctionItemsSubmitRequest {
	return &NullableAdvancedAuctionItemsSubmitRequest{value: val, isSet: true}
}

func (v NullableAdvancedAuctionItemsSubmitRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAuctionItemsSubmitRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


