/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineItem{}

// LineItem struct for LineItem
type LineItem struct {
	// Product brand. For example, \"Parker\".
	ProductBrand *string `json:"product_brand,omitempty"`
	// Product category. For example, \"Shoes\".
	ProductCategory *string `json:"product_category,omitempty"`
	// Product ID. For example, 1414.
	ProductId *int32 `json:"product_id,omitempty"`
	// Product name. For example, \"Parker Boots\".
	ProductName *string `json:"product_name,omitempty"`
	// Product price. For example, \"99.99\".
	ProductPrice *string `json:"product_price,omitempty"`
	// Product quantity. For example, 2.
	ProductQuantity *int32 `json:"product_quantity,omitempty"`
	// Product variant. For example, \"Red\".
	ProductVariant *string `json:"product_variant,omitempty"`
	// Product variant ID. For example, \"1414-34832\".
	ProductVariantId *string `json:"product_variant_id,omitempty"`
}

// NewLineItem instantiates a new LineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItem() *LineItem {
	this := LineItem{}
	return &this
}

// NewLineItemWithDefaults instantiates a new LineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemWithDefaults() *LineItem {
	this := LineItem{}
	return &this
}

// GetProductBrand returns the ProductBrand field value if set, zero value otherwise.
func (o *LineItem) GetProductBrand() string {
	if o == nil || IsNil(o.ProductBrand) {
		var ret string
		return ret
	}
	return *o.ProductBrand
}

// GetProductBrandOk returns a tuple with the ProductBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductBrandOk() (*string, bool) {
	if o == nil || IsNil(o.ProductBrand) {
		return nil, false
	}
	return o.ProductBrand, true
}

// HasProductBrand returns a boolean if a field has been set.
func (o *LineItem) HasProductBrand() bool {
	if o != nil && !IsNil(o.ProductBrand) {
		return true
	}

	return false
}

// SetProductBrand gets a reference to the given string and assigns it to the ProductBrand field.
func (o *LineItem) SetProductBrand(v string) {
	o.ProductBrand = &v
}

// GetProductCategory returns the ProductCategory field value if set, zero value otherwise.
func (o *LineItem) GetProductCategory() string {
	if o == nil || IsNil(o.ProductCategory) {
		var ret string
		return ret
	}
	return *o.ProductCategory
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCategory) {
		return nil, false
	}
	return o.ProductCategory, true
}

// HasProductCategory returns a boolean if a field has been set.
func (o *LineItem) HasProductCategory() bool {
	if o != nil && !IsNil(o.ProductCategory) {
		return true
	}

	return false
}

// SetProductCategory gets a reference to the given string and assigns it to the ProductCategory field.
func (o *LineItem) SetProductCategory(v string) {
	o.ProductCategory = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *LineItem) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *LineItem) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *LineItem) SetProductId(v int32) {
	o.ProductId = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *LineItem) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *LineItem) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *LineItem) SetProductName(v string) {
	o.ProductName = &v
}

// GetProductPrice returns the ProductPrice field value if set, zero value otherwise.
func (o *LineItem) GetProductPrice() string {
	if o == nil || IsNil(o.ProductPrice) {
		var ret string
		return ret
	}
	return *o.ProductPrice
}

// GetProductPriceOk returns a tuple with the ProductPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductPriceOk() (*string, bool) {
	if o == nil || IsNil(o.ProductPrice) {
		return nil, false
	}
	return o.ProductPrice, true
}

// HasProductPrice returns a boolean if a field has been set.
func (o *LineItem) HasProductPrice() bool {
	if o != nil && !IsNil(o.ProductPrice) {
		return true
	}

	return false
}

// SetProductPrice gets a reference to the given string and assigns it to the ProductPrice field.
func (o *LineItem) SetProductPrice(v string) {
	o.ProductPrice = &v
}

// GetProductQuantity returns the ProductQuantity field value if set, zero value otherwise.
func (o *LineItem) GetProductQuantity() int32 {
	if o == nil || IsNil(o.ProductQuantity) {
		var ret int32
		return ret
	}
	return *o.ProductQuantity
}

// GetProductQuantityOk returns a tuple with the ProductQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductQuantity) {
		return nil, false
	}
	return o.ProductQuantity, true
}

// HasProductQuantity returns a boolean if a field has been set.
func (o *LineItem) HasProductQuantity() bool {
	if o != nil && !IsNil(o.ProductQuantity) {
		return true
	}

	return false
}

// SetProductQuantity gets a reference to the given int32 and assigns it to the ProductQuantity field.
func (o *LineItem) SetProductQuantity(v int32) {
	o.ProductQuantity = &v
}

// GetProductVariant returns the ProductVariant field value if set, zero value otherwise.
func (o *LineItem) GetProductVariant() string {
	if o == nil || IsNil(o.ProductVariant) {
		var ret string
		return ret
	}
	return *o.ProductVariant
}

// GetProductVariantOk returns a tuple with the ProductVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductVariantOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariant) {
		return nil, false
	}
	return o.ProductVariant, true
}

// HasProductVariant returns a boolean if a field has been set.
func (o *LineItem) HasProductVariant() bool {
	if o != nil && !IsNil(o.ProductVariant) {
		return true
	}

	return false
}

// SetProductVariant gets a reference to the given string and assigns it to the ProductVariant field.
func (o *LineItem) SetProductVariant(v string) {
	o.ProductVariant = &v
}

// GetProductVariantId returns the ProductVariantId field value if set, zero value otherwise.
func (o *LineItem) GetProductVariantId() string {
	if o == nil || IsNil(o.ProductVariantId) {
		var ret string
		return ret
	}
	return *o.ProductVariantId
}

// GetProductVariantIdOk returns a tuple with the ProductVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItem) GetProductVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariantId) {
		return nil, false
	}
	return o.ProductVariantId, true
}

// HasProductVariantId returns a boolean if a field has been set.
func (o *LineItem) HasProductVariantId() bool {
	if o != nil && !IsNil(o.ProductVariantId) {
		return true
	}

	return false
}

// SetProductVariantId gets a reference to the given string and assigns it to the ProductVariantId field.
func (o *LineItem) SetProductVariantId(v string) {
	o.ProductVariantId = &v
}

func (o LineItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductBrand) {
		toSerialize["product_brand"] = o.ProductBrand
	}
	if !IsNil(o.ProductCategory) {
		toSerialize["product_category"] = o.ProductCategory
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductName) {
		toSerialize["product_name"] = o.ProductName
	}
	if !IsNil(o.ProductPrice) {
		toSerialize["product_price"] = o.ProductPrice
	}
	if !IsNil(o.ProductQuantity) {
		toSerialize["product_quantity"] = o.ProductQuantity
	}
	if !IsNil(o.ProductVariant) {
		toSerialize["product_variant"] = o.ProductVariant
	}
	if !IsNil(o.ProductVariantId) {
		toSerialize["product_variant_id"] = o.ProductVariantId
	}
	return toSerialize, nil
}

type NullableLineItem struct {
	value *LineItem
	isSet bool
}

func (v NullableLineItem) Get() *LineItem {
	return v.value
}

func (v *NullableLineItem) Set(val *LineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItem(val *LineItem) *NullableLineItem {
	return &NullableLineItem{value: val, isSet: true}
}

func (v NullableLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


