/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConversionApiResponseEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversionApiResponseEventsInner{}

// ConversionApiResponseEventsInner struct for ConversionApiResponseEventsInner
type ConversionApiResponseEventsInner struct {
	// Whether the event was processed successfully.
	Status string `json:"status"`
	// Error message containing more information about why the event failed to be processed.
	ErrorMessage NullableString `json:"error_message,omitempty"`
	// Warning messages about any fields in the event which are not standard. These are not critical to event processing.
	WarningMessage NullableString `json:"warning_message,omitempty"`
}

type _ConversionApiResponseEventsInner ConversionApiResponseEventsInner

// NewConversionApiResponseEventsInner instantiates a new ConversionApiResponseEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversionApiResponseEventsInner(status string) *ConversionApiResponseEventsInner {
	this := ConversionApiResponseEventsInner{}
	this.Status = status
	return &this
}

// NewConversionApiResponseEventsInnerWithDefaults instantiates a new ConversionApiResponseEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversionApiResponseEventsInnerWithDefaults() *ConversionApiResponseEventsInner {
	this := ConversionApiResponseEventsInner{}
	return &this
}

// GetStatus returns the Status field value
func (o *ConversionApiResponseEventsInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConversionApiResponseEventsInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConversionApiResponseEventsInner) SetStatus(v string) {
	o.Status = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionApiResponseEventsInner) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionApiResponseEventsInner) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ConversionApiResponseEventsInner) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ConversionApiResponseEventsInner) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ConversionApiResponseEventsInner) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ConversionApiResponseEventsInner) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetWarningMessage returns the WarningMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionApiResponseEventsInner) GetWarningMessage() string {
	if o == nil || IsNil(o.WarningMessage.Get()) {
		var ret string
		return ret
	}
	return *o.WarningMessage.Get()
}

// GetWarningMessageOk returns a tuple with the WarningMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionApiResponseEventsInner) GetWarningMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningMessage.Get(), o.WarningMessage.IsSet()
}

// HasWarningMessage returns a boolean if a field has been set.
func (o *ConversionApiResponseEventsInner) HasWarningMessage() bool {
	if o != nil && o.WarningMessage.IsSet() {
		return true
	}

	return false
}

// SetWarningMessage gets a reference to the given NullableString and assigns it to the WarningMessage field.
func (o *ConversionApiResponseEventsInner) SetWarningMessage(v string) {
	o.WarningMessage.Set(&v)
}
// SetWarningMessageNil sets the value for WarningMessage to be an explicit nil
func (o *ConversionApiResponseEventsInner) SetWarningMessageNil() {
	o.WarningMessage.Set(nil)
}

// UnsetWarningMessage ensures that no value is present for WarningMessage, not even an explicit nil
func (o *ConversionApiResponseEventsInner) UnsetWarningMessage() {
	o.WarningMessage.Unset()
}

func (o ConversionApiResponseEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversionApiResponseEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if o.ErrorMessage.IsSet() {
		toSerialize["error_message"] = o.ErrorMessage.Get()
	}
	if o.WarningMessage.IsSet() {
		toSerialize["warning_message"] = o.WarningMessage.Get()
	}
	return toSerialize, nil
}

func (o *ConversionApiResponseEventsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConversionApiResponseEventsInner := _ConversionApiResponseEventsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConversionApiResponseEventsInner)

	if err != nil {
		return err
	}

	*o = ConversionApiResponseEventsInner(varConversionApiResponseEventsInner)

	return err
}

type NullableConversionApiResponseEventsInner struct {
	value *ConversionApiResponseEventsInner
	isSet bool
}

func (v NullableConversionApiResponseEventsInner) Get() *ConversionApiResponseEventsInner {
	return v.value
}

func (v *NullableConversionApiResponseEventsInner) Set(val *ConversionApiResponseEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConversionApiResponseEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConversionApiResponseEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversionApiResponseEventsInner(val *ConversionApiResponseEventsInner) *NullableConversionApiResponseEventsInner {
	return &NullableConversionApiResponseEventsInner{value: val, isSet: true}
}

func (v NullableConversionApiResponseEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversionApiResponseEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


