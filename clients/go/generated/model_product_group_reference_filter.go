/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductGroupReferenceFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductGroupReferenceFilter{}

// ProductGroupReferenceFilter struct for ProductGroupReferenceFilter
type ProductGroupReferenceFilter struct {
	PRODUCT_GROUP CatalogsProductGroupMultipleStringCriteria `json:"PRODUCT_GROUP"`
}

type _ProductGroupReferenceFilter ProductGroupReferenceFilter

// NewProductGroupReferenceFilter instantiates a new ProductGroupReferenceFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductGroupReferenceFilter(pRODUCTGROUP CatalogsProductGroupMultipleStringCriteria) *ProductGroupReferenceFilter {
	this := ProductGroupReferenceFilter{}
	this.PRODUCT_GROUP = pRODUCTGROUP
	return &this
}

// NewProductGroupReferenceFilterWithDefaults instantiates a new ProductGroupReferenceFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductGroupReferenceFilterWithDefaults() *ProductGroupReferenceFilter {
	this := ProductGroupReferenceFilter{}
	return &this
}

// GetPRODUCT_GROUP returns the PRODUCT_GROUP field value
func (o *ProductGroupReferenceFilter) GetPRODUCT_GROUP() CatalogsProductGroupMultipleStringCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringCriteria
		return ret
	}

	return o.PRODUCT_GROUP
}

// GetPRODUCT_GROUPOk returns a tuple with the PRODUCT_GROUP field value
// and a boolean to check if the value has been set.
func (o *ProductGroupReferenceFilter) GetPRODUCT_GROUPOk() (CatalogsProductGroupMultipleStringCriteria, bool) {
	if o == nil {
		return CatalogsProductGroupMultipleStringCriteria{}, false
	}
	return o.PRODUCT_GROUP, true
}

// SetPRODUCT_GROUP sets field value
func (o *ProductGroupReferenceFilter) SetPRODUCT_GROUP(v CatalogsProductGroupMultipleStringCriteria) {
	o.PRODUCT_GROUP = v
}

func (o ProductGroupReferenceFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductGroupReferenceFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["PRODUCT_GROUP"] = o.PRODUCT_GROUP
	return toSerialize, nil
}

func (o *ProductGroupReferenceFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"PRODUCT_GROUP",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductGroupReferenceFilter := _ProductGroupReferenceFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductGroupReferenceFilter)

	if err != nil {
		return err
	}

	*o = ProductGroupReferenceFilter(varProductGroupReferenceFilter)

	return err
}

type NullableProductGroupReferenceFilter struct {
	value *ProductGroupReferenceFilter
	isSet bool
}

func (v NullableProductGroupReferenceFilter) Get() *ProductGroupReferenceFilter {
	return v.value
}

func (v *NullableProductGroupReferenceFilter) Set(val *ProductGroupReferenceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableProductGroupReferenceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableProductGroupReferenceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductGroupReferenceFilter(val *ProductGroupReferenceFilter) *NullableProductGroupReferenceFilter {
	return &NullableProductGroupReferenceFilter{value: val, isSet: true}
}

func (v NullableProductGroupReferenceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductGroupReferenceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


