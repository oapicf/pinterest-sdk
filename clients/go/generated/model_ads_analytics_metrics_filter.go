/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AdsAnalyticsMetricsFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdsAnalyticsMetricsFilter{}

// AdsAnalyticsMetricsFilter struct for AdsAnalyticsMetricsFilter
type AdsAnalyticsMetricsFilter struct {
	Field AdsAnalyticsFilterColumn `json:"field"`
	Operator AdsAnalyticsFilterOperator `json:"operator"`
	// List of values for filtering
	Values []float32 `json:"values"`
}

type _AdsAnalyticsMetricsFilter AdsAnalyticsMetricsFilter

// NewAdsAnalyticsMetricsFilter instantiates a new AdsAnalyticsMetricsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdsAnalyticsMetricsFilter(field AdsAnalyticsFilterColumn, operator AdsAnalyticsFilterOperator, values []float32) *AdsAnalyticsMetricsFilter {
	this := AdsAnalyticsMetricsFilter{}
	this.Field = field
	this.Operator = operator
	this.Values = values
	return &this
}

// NewAdsAnalyticsMetricsFilterWithDefaults instantiates a new AdsAnalyticsMetricsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdsAnalyticsMetricsFilterWithDefaults() *AdsAnalyticsMetricsFilter {
	this := AdsAnalyticsMetricsFilter{}
	return &this
}

// GetField returns the Field field value
func (o *AdsAnalyticsMetricsFilter) GetField() AdsAnalyticsFilterColumn {
	if o == nil {
		var ret AdsAnalyticsFilterColumn
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *AdsAnalyticsMetricsFilter) GetFieldOk() (*AdsAnalyticsFilterColumn, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *AdsAnalyticsMetricsFilter) SetField(v AdsAnalyticsFilterColumn) {
	o.Field = v
}

// GetOperator returns the Operator field value
func (o *AdsAnalyticsMetricsFilter) GetOperator() AdsAnalyticsFilterOperator {
	if o == nil {
		var ret AdsAnalyticsFilterOperator
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *AdsAnalyticsMetricsFilter) GetOperatorOk() (*AdsAnalyticsFilterOperator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *AdsAnalyticsMetricsFilter) SetOperator(v AdsAnalyticsFilterOperator) {
	o.Operator = v
}

// GetValues returns the Values field value
func (o *AdsAnalyticsMetricsFilter) GetValues() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *AdsAnalyticsMetricsFilter) GetValuesOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *AdsAnalyticsMetricsFilter) SetValues(v []float32) {
	o.Values = v
}

func (o AdsAnalyticsMetricsFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdsAnalyticsMetricsFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["operator"] = o.Operator
	toSerialize["values"] = o.Values
	return toSerialize, nil
}

func (o *AdsAnalyticsMetricsFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"field",
		"operator",
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdsAnalyticsMetricsFilter := _AdsAnalyticsMetricsFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAdsAnalyticsMetricsFilter)

	if err != nil {
		return err
	}

	*o = AdsAnalyticsMetricsFilter(varAdsAnalyticsMetricsFilter)

	return err
}

type NullableAdsAnalyticsMetricsFilter struct {
	value *AdsAnalyticsMetricsFilter
	isSet bool
}

func (v NullableAdsAnalyticsMetricsFilter) Get() *AdsAnalyticsMetricsFilter {
	return v.value
}

func (v *NullableAdsAnalyticsMetricsFilter) Set(val *AdsAnalyticsMetricsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAdsAnalyticsMetricsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAdsAnalyticsMetricsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdsAnalyticsMetricsFilter(val *AdsAnalyticsMetricsFilter) *NullableAdsAnalyticsMetricsFilter {
	return &NullableAdsAnalyticsMetricsFilter{value: val, isSet: true}
}

func (v NullableAdsAnalyticsMetricsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdsAnalyticsMetricsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


