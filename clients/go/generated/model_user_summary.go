/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSummary{}

// UserSummary struct for UserSummary
type UserSummary struct {
	// Username
	Username *string `json:"username,omitempty"`
	// Always \"user\"
	Type *string `json:"type,omitempty"`
}

// NewUserSummary instantiates a new UserSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSummary() *UserSummary {
	this := UserSummary{}
	return &this
}

// NewUserSummaryWithDefaults instantiates a new UserSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSummaryWithDefaults() *UserSummary {
	this := UserSummary{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UserSummary) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSummary) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UserSummary) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UserSummary) SetUsername(v string) {
	o.Username = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UserSummary) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSummary) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UserSummary) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UserSummary) SetType(v string) {
	o.Type = &v
}

func (o UserSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableUserSummary struct {
	value *UserSummary
	isSet bool
}

func (v NullableUserSummary) Get() *UserSummary {
	return v.value
}

func (v *NullableUserSummary) Set(val *UserSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSummary(val *UserSummary) *NullableUserSummary {
	return &NullableUserSummary{value: val, isSet: true}
}

func (v NullableUserSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


