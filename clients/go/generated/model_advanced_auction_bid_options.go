/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdvancedAuctionBidOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedAuctionBidOptions{}

// AdvancedAuctionBidOptions Object describing a retail catalog item's bid options (bid price and bid multipliers).
type AdvancedAuctionBidOptions struct {
	// Bid price in micro currency. A value of 0 will stop distribution for this item in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. A value of `null` will fallback to the ad group's `bid_in_micro_currency`.
	BidInMicroCurrency NullableInt64 `json:"bid_in_micro_currency,omitempty"`
	AppTypeMultipliers NullableAppTypeMultipliers `json:"app_type_multipliers,omitempty"`
	PlacementMultipliers NullablePlacementMultipliers `json:"placement_multipliers,omitempty"`
}

// NewAdvancedAuctionBidOptions instantiates a new AdvancedAuctionBidOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedAuctionBidOptions() *AdvancedAuctionBidOptions {
	this := AdvancedAuctionBidOptions{}
	return &this
}

// NewAdvancedAuctionBidOptionsWithDefaults instantiates a new AdvancedAuctionBidOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedAuctionBidOptionsWithDefaults() *AdvancedAuctionBidOptions {
	this := AdvancedAuctionBidOptions{}
	return &this
}

// GetBidInMicroCurrency returns the BidInMicroCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAuctionBidOptions) GetBidInMicroCurrency() int64 {
	if o == nil || IsNil(o.BidInMicroCurrency.Get()) {
		var ret int64
		return ret
	}
	return *o.BidInMicroCurrency.Get()
}

// GetBidInMicroCurrencyOk returns a tuple with the BidInMicroCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAuctionBidOptions) GetBidInMicroCurrencyOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BidInMicroCurrency.Get(), o.BidInMicroCurrency.IsSet()
}

// HasBidInMicroCurrency returns a boolean if a field has been set.
func (o *AdvancedAuctionBidOptions) HasBidInMicroCurrency() bool {
	if o != nil && o.BidInMicroCurrency.IsSet() {
		return true
	}

	return false
}

// SetBidInMicroCurrency gets a reference to the given NullableInt64 and assigns it to the BidInMicroCurrency field.
func (o *AdvancedAuctionBidOptions) SetBidInMicroCurrency(v int64) {
	o.BidInMicroCurrency.Set(&v)
}
// SetBidInMicroCurrencyNil sets the value for BidInMicroCurrency to be an explicit nil
func (o *AdvancedAuctionBidOptions) SetBidInMicroCurrencyNil() {
	o.BidInMicroCurrency.Set(nil)
}

// UnsetBidInMicroCurrency ensures that no value is present for BidInMicroCurrency, not even an explicit nil
func (o *AdvancedAuctionBidOptions) UnsetBidInMicroCurrency() {
	o.BidInMicroCurrency.Unset()
}

// GetAppTypeMultipliers returns the AppTypeMultipliers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAuctionBidOptions) GetAppTypeMultipliers() AppTypeMultipliers {
	if o == nil || IsNil(o.AppTypeMultipliers.Get()) {
		var ret AppTypeMultipliers
		return ret
	}
	return *o.AppTypeMultipliers.Get()
}

// GetAppTypeMultipliersOk returns a tuple with the AppTypeMultipliers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAuctionBidOptions) GetAppTypeMultipliersOk() (*AppTypeMultipliers, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppTypeMultipliers.Get(), o.AppTypeMultipliers.IsSet()
}

// HasAppTypeMultipliers returns a boolean if a field has been set.
func (o *AdvancedAuctionBidOptions) HasAppTypeMultipliers() bool {
	if o != nil && o.AppTypeMultipliers.IsSet() {
		return true
	}

	return false
}

// SetAppTypeMultipliers gets a reference to the given NullableAppTypeMultipliers and assigns it to the AppTypeMultipliers field.
func (o *AdvancedAuctionBidOptions) SetAppTypeMultipliers(v AppTypeMultipliers) {
	o.AppTypeMultipliers.Set(&v)
}
// SetAppTypeMultipliersNil sets the value for AppTypeMultipliers to be an explicit nil
func (o *AdvancedAuctionBidOptions) SetAppTypeMultipliersNil() {
	o.AppTypeMultipliers.Set(nil)
}

// UnsetAppTypeMultipliers ensures that no value is present for AppTypeMultipliers, not even an explicit nil
func (o *AdvancedAuctionBidOptions) UnsetAppTypeMultipliers() {
	o.AppTypeMultipliers.Unset()
}

// GetPlacementMultipliers returns the PlacementMultipliers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAuctionBidOptions) GetPlacementMultipliers() PlacementMultipliers {
	if o == nil || IsNil(o.PlacementMultipliers.Get()) {
		var ret PlacementMultipliers
		return ret
	}
	return *o.PlacementMultipliers.Get()
}

// GetPlacementMultipliersOk returns a tuple with the PlacementMultipliers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAuctionBidOptions) GetPlacementMultipliersOk() (*PlacementMultipliers, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlacementMultipliers.Get(), o.PlacementMultipliers.IsSet()
}

// HasPlacementMultipliers returns a boolean if a field has been set.
func (o *AdvancedAuctionBidOptions) HasPlacementMultipliers() bool {
	if o != nil && o.PlacementMultipliers.IsSet() {
		return true
	}

	return false
}

// SetPlacementMultipliers gets a reference to the given NullablePlacementMultipliers and assigns it to the PlacementMultipliers field.
func (o *AdvancedAuctionBidOptions) SetPlacementMultipliers(v PlacementMultipliers) {
	o.PlacementMultipliers.Set(&v)
}
// SetPlacementMultipliersNil sets the value for PlacementMultipliers to be an explicit nil
func (o *AdvancedAuctionBidOptions) SetPlacementMultipliersNil() {
	o.PlacementMultipliers.Set(nil)
}

// UnsetPlacementMultipliers ensures that no value is present for PlacementMultipliers, not even an explicit nil
func (o *AdvancedAuctionBidOptions) UnsetPlacementMultipliers() {
	o.PlacementMultipliers.Unset()
}

func (o AdvancedAuctionBidOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedAuctionBidOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BidInMicroCurrency.IsSet() {
		toSerialize["bid_in_micro_currency"] = o.BidInMicroCurrency.Get()
	}
	if o.AppTypeMultipliers.IsSet() {
		toSerialize["app_type_multipliers"] = o.AppTypeMultipliers.Get()
	}
	if o.PlacementMultipliers.IsSet() {
		toSerialize["placement_multipliers"] = o.PlacementMultipliers.Get()
	}
	return toSerialize, nil
}

type NullableAdvancedAuctionBidOptions struct {
	value *AdvancedAuctionBidOptions
	isSet bool
}

func (v NullableAdvancedAuctionBidOptions) Get() *AdvancedAuctionBidOptions {
	return v.value
}

func (v *NullableAdvancedAuctionBidOptions) Set(val *AdvancedAuctionBidOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAuctionBidOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAuctionBidOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAuctionBidOptions(val *AdvancedAuctionBidOptions) *NullableAdvancedAuctionBidOptions {
	return &NullableAdvancedAuctionBidOptions{value: val, isSet: true}
}

func (v NullableAdvancedAuctionBidOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAuctionBidOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


