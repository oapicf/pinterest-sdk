/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BoardMedia type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BoardMedia{}

// BoardMedia Board media.
type BoardMedia struct {
	// Board cover image.
	ImageCoverUrl NullableString `json:"image_cover_url,omitempty"`
	// Board pin thumbnail urls.
	PinThumbnailUrls []string `json:"pin_thumbnail_urls,omitempty"`
}

// NewBoardMedia instantiates a new BoardMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoardMedia() *BoardMedia {
	this := BoardMedia{}
	return &this
}

// NewBoardMediaWithDefaults instantiates a new BoardMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoardMediaWithDefaults() *BoardMedia {
	this := BoardMedia{}
	return &this
}

// GetImageCoverUrl returns the ImageCoverUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoardMedia) GetImageCoverUrl() string {
	if o == nil || IsNil(o.ImageCoverUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ImageCoverUrl.Get()
}

// GetImageCoverUrlOk returns a tuple with the ImageCoverUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoardMedia) GetImageCoverUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageCoverUrl.Get(), o.ImageCoverUrl.IsSet()
}

// HasImageCoverUrl returns a boolean if a field has been set.
func (o *BoardMedia) HasImageCoverUrl() bool {
	if o != nil && o.ImageCoverUrl.IsSet() {
		return true
	}

	return false
}

// SetImageCoverUrl gets a reference to the given NullableString and assigns it to the ImageCoverUrl field.
func (o *BoardMedia) SetImageCoverUrl(v string) {
	o.ImageCoverUrl.Set(&v)
}
// SetImageCoverUrlNil sets the value for ImageCoverUrl to be an explicit nil
func (o *BoardMedia) SetImageCoverUrlNil() {
	o.ImageCoverUrl.Set(nil)
}

// UnsetImageCoverUrl ensures that no value is present for ImageCoverUrl, not even an explicit nil
func (o *BoardMedia) UnsetImageCoverUrl() {
	o.ImageCoverUrl.Unset()
}

// GetPinThumbnailUrls returns the PinThumbnailUrls field value if set, zero value otherwise.
func (o *BoardMedia) GetPinThumbnailUrls() []string {
	if o == nil || IsNil(o.PinThumbnailUrls) {
		var ret []string
		return ret
	}
	return o.PinThumbnailUrls
}

// GetPinThumbnailUrlsOk returns a tuple with the PinThumbnailUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoardMedia) GetPinThumbnailUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.PinThumbnailUrls) {
		return nil, false
	}
	return o.PinThumbnailUrls, true
}

// HasPinThumbnailUrls returns a boolean if a field has been set.
func (o *BoardMedia) HasPinThumbnailUrls() bool {
	if o != nil && !IsNil(o.PinThumbnailUrls) {
		return true
	}

	return false
}

// SetPinThumbnailUrls gets a reference to the given []string and assigns it to the PinThumbnailUrls field.
func (o *BoardMedia) SetPinThumbnailUrls(v []string) {
	o.PinThumbnailUrls = v
}

func (o BoardMedia) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BoardMedia) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageCoverUrl.IsSet() {
		toSerialize["image_cover_url"] = o.ImageCoverUrl.Get()
	}
	if !IsNil(o.PinThumbnailUrls) {
		toSerialize["pin_thumbnail_urls"] = o.PinThumbnailUrls
	}
	return toSerialize, nil
}

type NullableBoardMedia struct {
	value *BoardMedia
	isSet bool
}

func (v NullableBoardMedia) Get() *BoardMedia {
	return v.value
}

func (v *NullableBoardMedia) Set(val *BoardMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableBoardMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableBoardMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoardMedia(val *BoardMedia) *NullableBoardMedia {
	return &NullableBoardMedia{value: val, isSet: true}
}

func (v NullableBoardMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoardMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


