/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SSIOAccountAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SSIOAccountAddress{}

// SSIOAccountAddress struct for SSIOAccountAddress
type SSIOAccountAddress struct {
	// Address display
	Display *string `json:"display,omitempty"`
	// Purpose for which the address is used, usually Billing or Businness
	Purpose *string `json:"purpose,omitempty"`
	// Salesforce id for address
	AddressId *string `json:"address_id,omitempty"`
	// Legal entity for this insertion order
	OrderLegalEntity *string `json:"order_legal_entity,omitempty"`
}

// NewSSIOAccountAddress instantiates a new SSIOAccountAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSIOAccountAddress() *SSIOAccountAddress {
	this := SSIOAccountAddress{}
	return &this
}

// NewSSIOAccountAddressWithDefaults instantiates a new SSIOAccountAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSIOAccountAddressWithDefaults() *SSIOAccountAddress {
	this := SSIOAccountAddress{}
	return &this
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *SSIOAccountAddress) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountAddress) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *SSIOAccountAddress) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *SSIOAccountAddress) SetDisplay(v string) {
	o.Display = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *SSIOAccountAddress) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountAddress) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *SSIOAccountAddress) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *SSIOAccountAddress) SetPurpose(v string) {
	o.Purpose = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *SSIOAccountAddress) GetAddressId() string {
	if o == nil || IsNil(o.AddressId) {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountAddress) GetAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *SSIOAccountAddress) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *SSIOAccountAddress) SetAddressId(v string) {
	o.AddressId = &v
}

// GetOrderLegalEntity returns the OrderLegalEntity field value if set, zero value otherwise.
func (o *SSIOAccountAddress) GetOrderLegalEntity() string {
	if o == nil || IsNil(o.OrderLegalEntity) {
		var ret string
		return ret
	}
	return *o.OrderLegalEntity
}

// GetOrderLegalEntityOk returns a tuple with the OrderLegalEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSIOAccountAddress) GetOrderLegalEntityOk() (*string, bool) {
	if o == nil || IsNil(o.OrderLegalEntity) {
		return nil, false
	}
	return o.OrderLegalEntity, true
}

// HasOrderLegalEntity returns a boolean if a field has been set.
func (o *SSIOAccountAddress) HasOrderLegalEntity() bool {
	if o != nil && !IsNil(o.OrderLegalEntity) {
		return true
	}

	return false
}

// SetOrderLegalEntity gets a reference to the given string and assigns it to the OrderLegalEntity field.
func (o *SSIOAccountAddress) SetOrderLegalEntity(v string) {
	o.OrderLegalEntity = &v
}

func (o SSIOAccountAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SSIOAccountAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.AddressId) {
		toSerialize["address_id"] = o.AddressId
	}
	if !IsNil(o.OrderLegalEntity) {
		toSerialize["order_legal_entity"] = o.OrderLegalEntity
	}
	return toSerialize, nil
}

type NullableSSIOAccountAddress struct {
	value *SSIOAccountAddress
	isSet bool
}

func (v NullableSSIOAccountAddress) Get() *SSIOAccountAddress {
	return v.value
}

func (v *NullableSSIOAccountAddress) Set(val *SSIOAccountAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableSSIOAccountAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableSSIOAccountAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSIOAccountAddress(val *SSIOAccountAddress) *NullableSSIOAccountAddress {
	return &NullableSSIOAccountAddress{value: val, isSet: true}
}

func (v NullableSSIOAccountAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSIOAccountAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


