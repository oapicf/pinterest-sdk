/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SharedAudienceCommon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedAudienceCommon{}

// SharedAudienceCommon struct for SharedAudienceCommon
type SharedAudienceCommon struct {
	// Unique identifier of an audience
	AudienceId *string `json:"audience_id,omitempty" validate:"regexp=^\\\\d+$"`
	OperationType *OperationType `json:"operation_type,omitempty"`
}

// NewSharedAudienceCommon instantiates a new SharedAudienceCommon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedAudienceCommon() *SharedAudienceCommon {
	this := SharedAudienceCommon{}
	return &this
}

// NewSharedAudienceCommonWithDefaults instantiates a new SharedAudienceCommon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedAudienceCommonWithDefaults() *SharedAudienceCommon {
	this := SharedAudienceCommon{}
	return &this
}

// GetAudienceId returns the AudienceId field value if set, zero value otherwise.
func (o *SharedAudienceCommon) GetAudienceId() string {
	if o == nil || IsNil(o.AudienceId) {
		var ret string
		return ret
	}
	return *o.AudienceId
}

// GetAudienceIdOk returns a tuple with the AudienceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedAudienceCommon) GetAudienceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AudienceId) {
		return nil, false
	}
	return o.AudienceId, true
}

// HasAudienceId returns a boolean if a field has been set.
func (o *SharedAudienceCommon) HasAudienceId() bool {
	if o != nil && !IsNil(o.AudienceId) {
		return true
	}

	return false
}

// SetAudienceId gets a reference to the given string and assigns it to the AudienceId field.
func (o *SharedAudienceCommon) SetAudienceId(v string) {
	o.AudienceId = &v
}

// GetOperationType returns the OperationType field value if set, zero value otherwise.
func (o *SharedAudienceCommon) GetOperationType() OperationType {
	if o == nil || IsNil(o.OperationType) {
		var ret OperationType
		return ret
	}
	return *o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedAudienceCommon) GetOperationTypeOk() (*OperationType, bool) {
	if o == nil || IsNil(o.OperationType) {
		return nil, false
	}
	return o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *SharedAudienceCommon) HasOperationType() bool {
	if o != nil && !IsNil(o.OperationType) {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given OperationType and assigns it to the OperationType field.
func (o *SharedAudienceCommon) SetOperationType(v OperationType) {
	o.OperationType = &v
}

func (o SharedAudienceCommon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedAudienceCommon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudienceId) {
		toSerialize["audience_id"] = o.AudienceId
	}
	if !IsNil(o.OperationType) {
		toSerialize["operation_type"] = o.OperationType
	}
	return toSerialize, nil
}

type NullableSharedAudienceCommon struct {
	value *SharedAudienceCommon
	isSet bool
}

func (v NullableSharedAudienceCommon) Get() *SharedAudienceCommon {
	return v.value
}

func (v *NullableSharedAudienceCommon) Set(val *SharedAudienceCommon) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedAudienceCommon) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedAudienceCommon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedAudienceCommon(val *SharedAudienceCommon) *NullableSharedAudienceCommon {
	return &NullableSharedAudienceCommon{value: val, isSet: true}
}

func (v NullableSharedAudienceCommon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedAudienceCommon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


