/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PinMediaWithImageAllOfImages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinMediaWithImageAllOfImages{}

// PinMediaWithImageAllOfImages struct for PinMediaWithImageAllOfImages
type PinMediaWithImageAllOfImages struct {
	Var150x150 map[string]interface{} `json:"150x150,omitempty"`
	Var400x300 map[string]interface{} `json:"400x300,omitempty"`
	Var600x map[string]interface{} `json:"600x,omitempty"`
	Var1200x map[string]interface{} `json:"1200x,omitempty"`
}

// NewPinMediaWithImageAllOfImages instantiates a new PinMediaWithImageAllOfImages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinMediaWithImageAllOfImages() *PinMediaWithImageAllOfImages {
	this := PinMediaWithImageAllOfImages{}
	return &this
}

// NewPinMediaWithImageAllOfImagesWithDefaults instantiates a new PinMediaWithImageAllOfImages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinMediaWithImageAllOfImagesWithDefaults() *PinMediaWithImageAllOfImages {
	this := PinMediaWithImageAllOfImages{}
	return &this
}

// GetVar150x150 returns the Var150x150 field value if set, zero value otherwise.
func (o *PinMediaWithImageAllOfImages) GetVar150x150() map[string]interface{} {
	if o == nil || IsNil(o.Var150x150) {
		var ret map[string]interface{}
		return ret
	}
	return o.Var150x150
}

// GetVar150x150Ok returns a tuple with the Var150x150 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithImageAllOfImages) GetVar150x150Ok() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Var150x150) {
		return map[string]interface{}{}, false
	}
	return o.Var150x150, true
}

// HasVar150x150 returns a boolean if a field has been set.
func (o *PinMediaWithImageAllOfImages) HasVar150x150() bool {
	if o != nil && !IsNil(o.Var150x150) {
		return true
	}

	return false
}

// SetVar150x150 gets a reference to the given map[string]interface{} and assigns it to the Var150x150 field.
func (o *PinMediaWithImageAllOfImages) SetVar150x150(v map[string]interface{}) {
	o.Var150x150 = v
}

// GetVar400x300 returns the Var400x300 field value if set, zero value otherwise.
func (o *PinMediaWithImageAllOfImages) GetVar400x300() map[string]interface{} {
	if o == nil || IsNil(o.Var400x300) {
		var ret map[string]interface{}
		return ret
	}
	return o.Var400x300
}

// GetVar400x300Ok returns a tuple with the Var400x300 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithImageAllOfImages) GetVar400x300Ok() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Var400x300) {
		return map[string]interface{}{}, false
	}
	return o.Var400x300, true
}

// HasVar400x300 returns a boolean if a field has been set.
func (o *PinMediaWithImageAllOfImages) HasVar400x300() bool {
	if o != nil && !IsNil(o.Var400x300) {
		return true
	}

	return false
}

// SetVar400x300 gets a reference to the given map[string]interface{} and assigns it to the Var400x300 field.
func (o *PinMediaWithImageAllOfImages) SetVar400x300(v map[string]interface{}) {
	o.Var400x300 = v
}

// GetVar600x returns the Var600x field value if set, zero value otherwise.
func (o *PinMediaWithImageAllOfImages) GetVar600x() map[string]interface{} {
	if o == nil || IsNil(o.Var600x) {
		var ret map[string]interface{}
		return ret
	}
	return o.Var600x
}

// GetVar600xOk returns a tuple with the Var600x field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithImageAllOfImages) GetVar600xOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Var600x) {
		return map[string]interface{}{}, false
	}
	return o.Var600x, true
}

// HasVar600x returns a boolean if a field has been set.
func (o *PinMediaWithImageAllOfImages) HasVar600x() bool {
	if o != nil && !IsNil(o.Var600x) {
		return true
	}

	return false
}

// SetVar600x gets a reference to the given map[string]interface{} and assigns it to the Var600x field.
func (o *PinMediaWithImageAllOfImages) SetVar600x(v map[string]interface{}) {
	o.Var600x = v
}

// GetVar1200x returns the Var1200x field value if set, zero value otherwise.
func (o *PinMediaWithImageAllOfImages) GetVar1200x() map[string]interface{} {
	if o == nil || IsNil(o.Var1200x) {
		var ret map[string]interface{}
		return ret
	}
	return o.Var1200x
}

// GetVar1200xOk returns a tuple with the Var1200x field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaWithImageAllOfImages) GetVar1200xOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Var1200x) {
		return map[string]interface{}{}, false
	}
	return o.Var1200x, true
}

// HasVar1200x returns a boolean if a field has been set.
func (o *PinMediaWithImageAllOfImages) HasVar1200x() bool {
	if o != nil && !IsNil(o.Var1200x) {
		return true
	}

	return false
}

// SetVar1200x gets a reference to the given map[string]interface{} and assigns it to the Var1200x field.
func (o *PinMediaWithImageAllOfImages) SetVar1200x(v map[string]interface{}) {
	o.Var1200x = v
}

func (o PinMediaWithImageAllOfImages) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinMediaWithImageAllOfImages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var150x150) {
		toSerialize["150x150"] = o.Var150x150
	}
	if !IsNil(o.Var400x300) {
		toSerialize["400x300"] = o.Var400x300
	}
	if !IsNil(o.Var600x) {
		toSerialize["600x"] = o.Var600x
	}
	if !IsNil(o.Var1200x) {
		toSerialize["1200x"] = o.Var1200x
	}
	return toSerialize, nil
}

type NullablePinMediaWithImageAllOfImages struct {
	value *PinMediaWithImageAllOfImages
	isSet bool
}

func (v NullablePinMediaWithImageAllOfImages) Get() *PinMediaWithImageAllOfImages {
	return v.value
}

func (v *NullablePinMediaWithImageAllOfImages) Set(val *PinMediaWithImageAllOfImages) {
	v.value = val
	v.isSet = true
}

func (v NullablePinMediaWithImageAllOfImages) IsSet() bool {
	return v.isSet
}

func (v *NullablePinMediaWithImageAllOfImages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinMediaWithImageAllOfImages(val *PinMediaWithImageAllOfImages) *NullablePinMediaWithImageAllOfImages {
	return &NullablePinMediaWithImageAllOfImages{value: val, isSet: true}
}

func (v NullablePinMediaWithImageAllOfImages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinMediaWithImageAllOfImages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


