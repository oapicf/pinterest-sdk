/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PinMediaSourceImagesURLItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinMediaSourceImagesURLItemsInner{}

// PinMediaSourceImagesURLItemsInner struct for PinMediaSourceImagesURLItemsInner
type PinMediaSourceImagesURLItemsInner struct {
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	// Destination link for the image.
	Link *string `json:"link,omitempty"`
	// URL of image to upload.
	Url string `json:"url"`
}

type _PinMediaSourceImagesURLItemsInner PinMediaSourceImagesURLItemsInner

// NewPinMediaSourceImagesURLItemsInner instantiates a new PinMediaSourceImagesURLItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinMediaSourceImagesURLItemsInner(url string) *PinMediaSourceImagesURLItemsInner {
	this := PinMediaSourceImagesURLItemsInner{}
	this.Url = url
	return &this
}

// NewPinMediaSourceImagesURLItemsInnerWithDefaults instantiates a new PinMediaSourceImagesURLItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinMediaSourceImagesURLItemsInnerWithDefaults() *PinMediaSourceImagesURLItemsInner {
	this := PinMediaSourceImagesURLItemsInner{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PinMediaSourceImagesURLItemsInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaSourceImagesURLItemsInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PinMediaSourceImagesURLItemsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PinMediaSourceImagesURLItemsInner) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PinMediaSourceImagesURLItemsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaSourceImagesURLItemsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PinMediaSourceImagesURLItemsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PinMediaSourceImagesURLItemsInner) SetDescription(v string) {
	o.Description = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *PinMediaSourceImagesURLItemsInner) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinMediaSourceImagesURLItemsInner) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *PinMediaSourceImagesURLItemsInner) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *PinMediaSourceImagesURLItemsInner) SetLink(v string) {
	o.Link = &v
}

// GetUrl returns the Url field value
func (o *PinMediaSourceImagesURLItemsInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PinMediaSourceImagesURLItemsInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PinMediaSourceImagesURLItemsInner) SetUrl(v string) {
	o.Url = v
}

func (o PinMediaSourceImagesURLItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinMediaSourceImagesURLItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *PinMediaSourceImagesURLItemsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPinMediaSourceImagesURLItemsInner := _PinMediaSourceImagesURLItemsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPinMediaSourceImagesURLItemsInner)

	if err != nil {
		return err
	}

	*o = PinMediaSourceImagesURLItemsInner(varPinMediaSourceImagesURLItemsInner)

	return err
}

type NullablePinMediaSourceImagesURLItemsInner struct {
	value *PinMediaSourceImagesURLItemsInner
	isSet bool
}

func (v NullablePinMediaSourceImagesURLItemsInner) Get() *PinMediaSourceImagesURLItemsInner {
	return v.value
}

func (v *NullablePinMediaSourceImagesURLItemsInner) Set(val *PinMediaSourceImagesURLItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePinMediaSourceImagesURLItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePinMediaSourceImagesURLItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinMediaSourceImagesURLItemsInner(val *PinMediaSourceImagesURLItemsInner) *NullablePinMediaSourceImagesURLItemsInner {
	return &NullablePinMediaSourceImagesURLItemsInner{value: val, isSet: true}
}

func (v NullablePinMediaSourceImagesURLItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinMediaSourceImagesURLItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


