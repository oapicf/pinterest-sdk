/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// LeadsExportStatus Status of a leads export job
type LeadsExportStatus string

// List of LeadsExportStatus
const (
	IN_PROGRESS LeadsExportStatus = "IN_PROGRESS"
	FINISHED LeadsExportStatus = "FINISHED"
	FAILED LeadsExportStatus = "FAILED"
)

// All allowed values of LeadsExportStatus enum
var AllowedLeadsExportStatusEnumValues = []LeadsExportStatus{
	"IN_PROGRESS",
	"FINISHED",
	"FAILED",
}

func (v *LeadsExportStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LeadsExportStatus(value)
	for _, existing := range AllowedLeadsExportStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LeadsExportStatus", value)
}

// NewLeadsExportStatusFromValue returns a pointer to a valid LeadsExportStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLeadsExportStatusFromValue(v string) (*LeadsExportStatus, error) {
	ev := LeadsExportStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LeadsExportStatus: valid values are %v", v, AllowedLeadsExportStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LeadsExportStatus) IsValid() bool {
	for _, existing := range AllowedLeadsExportStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LeadsExportStatus value
func (v LeadsExportStatus) Ptr() *LeadsExportStatus {
	return &v
}

type NullableLeadsExportStatus struct {
	value *LeadsExportStatus
	isSet bool
}

func (v NullableLeadsExportStatus) Get() *LeadsExportStatus {
	return v.value
}

func (v *NullableLeadsExportStatus) Set(val *LeadsExportStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableLeadsExportStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableLeadsExportStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeadsExportStatus(val *LeadsExportStatus) *NullableLeadsExportStatus {
	return &NullableLeadsExportStatus{value: val, isSet: true}
}

func (v NullableLeadsExportStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeadsExportStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

