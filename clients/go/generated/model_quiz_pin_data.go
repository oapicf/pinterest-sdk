/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QuizPinData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuizPinData{}

// QuizPinData This field includes all quiz data including questions, options, and results.
type QuizPinData struct {
	Questions []QuizPinQuestion `json:"questions,omitempty"`
	Results []QuizPinResult `json:"results,omitempty"`
	// Quiz ad tie breaker type, default is RANDOM
	TieBreakerType *string `json:"tie_breaker_type,omitempty"`
	TieBreakerCustomResult NullableQuizPinResult `json:"tie_breaker_custom_result,omitempty"`
}

// NewQuizPinData instantiates a new QuizPinData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuizPinData() *QuizPinData {
	this := QuizPinData{}
	return &this
}

// NewQuizPinDataWithDefaults instantiates a new QuizPinData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuizPinDataWithDefaults() *QuizPinData {
	this := QuizPinData{}
	return &this
}

// GetQuestions returns the Questions field value if set, zero value otherwise.
func (o *QuizPinData) GetQuestions() []QuizPinQuestion {
	if o == nil || IsNil(o.Questions) {
		var ret []QuizPinQuestion
		return ret
	}
	return o.Questions
}

// GetQuestionsOk returns a tuple with the Questions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuizPinData) GetQuestionsOk() ([]QuizPinQuestion, bool) {
	if o == nil || IsNil(o.Questions) {
		return nil, false
	}
	return o.Questions, true
}

// HasQuestions returns a boolean if a field has been set.
func (o *QuizPinData) HasQuestions() bool {
	if o != nil && !IsNil(o.Questions) {
		return true
	}

	return false
}

// SetQuestions gets a reference to the given []QuizPinQuestion and assigns it to the Questions field.
func (o *QuizPinData) SetQuestions(v []QuizPinQuestion) {
	o.Questions = v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *QuizPinData) GetResults() []QuizPinResult {
	if o == nil || IsNil(o.Results) {
		var ret []QuizPinResult
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuizPinData) GetResultsOk() ([]QuizPinResult, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *QuizPinData) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []QuizPinResult and assigns it to the Results field.
func (o *QuizPinData) SetResults(v []QuizPinResult) {
	o.Results = v
}

// GetTieBreakerType returns the TieBreakerType field value if set, zero value otherwise.
func (o *QuizPinData) GetTieBreakerType() string {
	if o == nil || IsNil(o.TieBreakerType) {
		var ret string
		return ret
	}
	return *o.TieBreakerType
}

// GetTieBreakerTypeOk returns a tuple with the TieBreakerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuizPinData) GetTieBreakerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TieBreakerType) {
		return nil, false
	}
	return o.TieBreakerType, true
}

// HasTieBreakerType returns a boolean if a field has been set.
func (o *QuizPinData) HasTieBreakerType() bool {
	if o != nil && !IsNil(o.TieBreakerType) {
		return true
	}

	return false
}

// SetTieBreakerType gets a reference to the given string and assigns it to the TieBreakerType field.
func (o *QuizPinData) SetTieBreakerType(v string) {
	o.TieBreakerType = &v
}

// GetTieBreakerCustomResult returns the TieBreakerCustomResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuizPinData) GetTieBreakerCustomResult() QuizPinResult {
	if o == nil || IsNil(o.TieBreakerCustomResult.Get()) {
		var ret QuizPinResult
		return ret
	}
	return *o.TieBreakerCustomResult.Get()
}

// GetTieBreakerCustomResultOk returns a tuple with the TieBreakerCustomResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuizPinData) GetTieBreakerCustomResultOk() (*QuizPinResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.TieBreakerCustomResult.Get(), o.TieBreakerCustomResult.IsSet()
}

// HasTieBreakerCustomResult returns a boolean if a field has been set.
func (o *QuizPinData) HasTieBreakerCustomResult() bool {
	if o != nil && o.TieBreakerCustomResult.IsSet() {
		return true
	}

	return false
}

// SetTieBreakerCustomResult gets a reference to the given NullableQuizPinResult and assigns it to the TieBreakerCustomResult field.
func (o *QuizPinData) SetTieBreakerCustomResult(v QuizPinResult) {
	o.TieBreakerCustomResult.Set(&v)
}
// SetTieBreakerCustomResultNil sets the value for TieBreakerCustomResult to be an explicit nil
func (o *QuizPinData) SetTieBreakerCustomResultNil() {
	o.TieBreakerCustomResult.Set(nil)
}

// UnsetTieBreakerCustomResult ensures that no value is present for TieBreakerCustomResult, not even an explicit nil
func (o *QuizPinData) UnsetTieBreakerCustomResult() {
	o.TieBreakerCustomResult.Unset()
}

func (o QuizPinData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuizPinData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Questions) {
		toSerialize["questions"] = o.Questions
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.TieBreakerType) {
		toSerialize["tie_breaker_type"] = o.TieBreakerType
	}
	if o.TieBreakerCustomResult.IsSet() {
		toSerialize["tie_breaker_custom_result"] = o.TieBreakerCustomResult.Get()
	}
	return toSerialize, nil
}

type NullableQuizPinData struct {
	value *QuizPinData
	isSet bool
}

func (v NullableQuizPinData) Get() *QuizPinData {
	return v.value
}

func (v *NullableQuizPinData) Set(val *QuizPinData) {
	v.value = val
	v.isSet = true
}

func (v NullableQuizPinData) IsSet() bool {
	return v.isSet
}

func (v *NullableQuizPinData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuizPinData(val *QuizPinData) *NullableQuizPinData {
	return &NullableQuizPinData{value: val, isSet: true}
}

func (v NullableQuizPinData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuizPinData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


