/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateResponseDateRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseDateRange{}

// TemplateResponseDateRange struct for TemplateResponseDateRange
type TemplateResponseDateRange struct {
	DynamicDateRange NullableTemplateResponseDateRangeDynamicDateRange `json:"dynamic_date_range,omitempty"`
	RelativeDateRange NullableTemplateResponseDateRangeRelativeDateRange `json:"relative_date_range,omitempty"`
	AbsoluteDateRange NullableTemplateResponseDateRangeAbsoluteDateRange `json:"absolute_date_range,omitempty"`
}

// NewTemplateResponseDateRange instantiates a new TemplateResponseDateRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseDateRange() *TemplateResponseDateRange {
	this := TemplateResponseDateRange{}
	return &this
}

// NewTemplateResponseDateRangeWithDefaults instantiates a new TemplateResponseDateRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseDateRangeWithDefaults() *TemplateResponseDateRange {
	this := TemplateResponseDateRange{}
	return &this
}

// GetDynamicDateRange returns the DynamicDateRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponseDateRange) GetDynamicDateRange() TemplateResponseDateRangeDynamicDateRange {
	if o == nil || IsNil(o.DynamicDateRange.Get()) {
		var ret TemplateResponseDateRangeDynamicDateRange
		return ret
	}
	return *o.DynamicDateRange.Get()
}

// GetDynamicDateRangeOk returns a tuple with the DynamicDateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponseDateRange) GetDynamicDateRangeOk() (*TemplateResponseDateRangeDynamicDateRange, bool) {
	if o == nil {
		return nil, false
	}
	return o.DynamicDateRange.Get(), o.DynamicDateRange.IsSet()
}

// HasDynamicDateRange returns a boolean if a field has been set.
func (o *TemplateResponseDateRange) HasDynamicDateRange() bool {
	if o != nil && o.DynamicDateRange.IsSet() {
		return true
	}

	return false
}

// SetDynamicDateRange gets a reference to the given NullableTemplateResponseDateRangeDynamicDateRange and assigns it to the DynamicDateRange field.
func (o *TemplateResponseDateRange) SetDynamicDateRange(v TemplateResponseDateRangeDynamicDateRange) {
	o.DynamicDateRange.Set(&v)
}
// SetDynamicDateRangeNil sets the value for DynamicDateRange to be an explicit nil
func (o *TemplateResponseDateRange) SetDynamicDateRangeNil() {
	o.DynamicDateRange.Set(nil)
}

// UnsetDynamicDateRange ensures that no value is present for DynamicDateRange, not even an explicit nil
func (o *TemplateResponseDateRange) UnsetDynamicDateRange() {
	o.DynamicDateRange.Unset()
}

// GetRelativeDateRange returns the RelativeDateRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponseDateRange) GetRelativeDateRange() TemplateResponseDateRangeRelativeDateRange {
	if o == nil || IsNil(o.RelativeDateRange.Get()) {
		var ret TemplateResponseDateRangeRelativeDateRange
		return ret
	}
	return *o.RelativeDateRange.Get()
}

// GetRelativeDateRangeOk returns a tuple with the RelativeDateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponseDateRange) GetRelativeDateRangeOk() (*TemplateResponseDateRangeRelativeDateRange, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelativeDateRange.Get(), o.RelativeDateRange.IsSet()
}

// HasRelativeDateRange returns a boolean if a field has been set.
func (o *TemplateResponseDateRange) HasRelativeDateRange() bool {
	if o != nil && o.RelativeDateRange.IsSet() {
		return true
	}

	return false
}

// SetRelativeDateRange gets a reference to the given NullableTemplateResponseDateRangeRelativeDateRange and assigns it to the RelativeDateRange field.
func (o *TemplateResponseDateRange) SetRelativeDateRange(v TemplateResponseDateRangeRelativeDateRange) {
	o.RelativeDateRange.Set(&v)
}
// SetRelativeDateRangeNil sets the value for RelativeDateRange to be an explicit nil
func (o *TemplateResponseDateRange) SetRelativeDateRangeNil() {
	o.RelativeDateRange.Set(nil)
}

// UnsetRelativeDateRange ensures that no value is present for RelativeDateRange, not even an explicit nil
func (o *TemplateResponseDateRange) UnsetRelativeDateRange() {
	o.RelativeDateRange.Unset()
}

// GetAbsoluteDateRange returns the AbsoluteDateRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponseDateRange) GetAbsoluteDateRange() TemplateResponseDateRangeAbsoluteDateRange {
	if o == nil || IsNil(o.AbsoluteDateRange.Get()) {
		var ret TemplateResponseDateRangeAbsoluteDateRange
		return ret
	}
	return *o.AbsoluteDateRange.Get()
}

// GetAbsoluteDateRangeOk returns a tuple with the AbsoluteDateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponseDateRange) GetAbsoluteDateRangeOk() (*TemplateResponseDateRangeAbsoluteDateRange, bool) {
	if o == nil {
		return nil, false
	}
	return o.AbsoluteDateRange.Get(), o.AbsoluteDateRange.IsSet()
}

// HasAbsoluteDateRange returns a boolean if a field has been set.
func (o *TemplateResponseDateRange) HasAbsoluteDateRange() bool {
	if o != nil && o.AbsoluteDateRange.IsSet() {
		return true
	}

	return false
}

// SetAbsoluteDateRange gets a reference to the given NullableTemplateResponseDateRangeAbsoluteDateRange and assigns it to the AbsoluteDateRange field.
func (o *TemplateResponseDateRange) SetAbsoluteDateRange(v TemplateResponseDateRangeAbsoluteDateRange) {
	o.AbsoluteDateRange.Set(&v)
}
// SetAbsoluteDateRangeNil sets the value for AbsoluteDateRange to be an explicit nil
func (o *TemplateResponseDateRange) SetAbsoluteDateRangeNil() {
	o.AbsoluteDateRange.Set(nil)
}

// UnsetAbsoluteDateRange ensures that no value is present for AbsoluteDateRange, not even an explicit nil
func (o *TemplateResponseDateRange) UnsetAbsoluteDateRange() {
	o.AbsoluteDateRange.Unset()
}

func (o TemplateResponseDateRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseDateRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DynamicDateRange.IsSet() {
		toSerialize["dynamic_date_range"] = o.DynamicDateRange.Get()
	}
	if o.RelativeDateRange.IsSet() {
		toSerialize["relative_date_range"] = o.RelativeDateRange.Get()
	}
	if o.AbsoluteDateRange.IsSet() {
		toSerialize["absolute_date_range"] = o.AbsoluteDateRange.Get()
	}
	return toSerialize, nil
}

type NullableTemplateResponseDateRange struct {
	value *TemplateResponseDateRange
	isSet bool
}

func (v NullableTemplateResponseDateRange) Get() *TemplateResponseDateRange {
	return v.value
}

func (v *NullableTemplateResponseDateRange) Set(val *TemplateResponseDateRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseDateRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseDateRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseDateRange(val *TemplateResponseDateRange) *NullableTemplateResponseDateRange {
	return &NullableTemplateResponseDateRange{value: val, isSet: true}
}

func (v NullableTemplateResponseDateRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseDateRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


