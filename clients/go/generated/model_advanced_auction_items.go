/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdvancedAuctionItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedAuctionItems{}

// AdvancedAuctionItems Response object containing item bid options
type AdvancedAuctionItems struct {
	// Response object of item bid options
	CatalogId *string `json:"catalog_id,omitempty" validate:"regexp=^\\\\d+$"`
	// Array with item bid options
	Items []AdvancedAuctionItem `json:"items,omitempty"`
}

// NewAdvancedAuctionItems instantiates a new AdvancedAuctionItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedAuctionItems() *AdvancedAuctionItems {
	this := AdvancedAuctionItems{}
	return &this
}

// NewAdvancedAuctionItemsWithDefaults instantiates a new AdvancedAuctionItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedAuctionItemsWithDefaults() *AdvancedAuctionItems {
	this := AdvancedAuctionItems{}
	return &this
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *AdvancedAuctionItems) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAuctionItems) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *AdvancedAuctionItems) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *AdvancedAuctionItems) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AdvancedAuctionItems) GetItems() []AdvancedAuctionItem {
	if o == nil || IsNil(o.Items) {
		var ret []AdvancedAuctionItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAuctionItems) GetItemsOk() ([]AdvancedAuctionItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AdvancedAuctionItems) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AdvancedAuctionItem and assigns it to the Items field.
func (o *AdvancedAuctionItems) SetItems(v []AdvancedAuctionItem) {
	o.Items = v
}

func (o AdvancedAuctionItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedAuctionItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogId) {
		toSerialize["catalog_id"] = o.CatalogId
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableAdvancedAuctionItems struct {
	value *AdvancedAuctionItems
	isSet bool
}

func (v NullableAdvancedAuctionItems) Get() *AdvancedAuctionItems {
	return v.value
}

func (v *NullableAdvancedAuctionItems) Set(val *AdvancedAuctionItems) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAuctionItems) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAuctionItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAuctionItems(val *AdvancedAuctionItems) *NullableAdvancedAuctionItems {
	return &NullableAdvancedAuctionItems{value: val, isSet: true}
}

func (v NullableAdvancedAuctionItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAuctionItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


