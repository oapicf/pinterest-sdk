/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ItemIdFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemIdFilter{}

// ItemIdFilter struct for ItemIdFilter
type ItemIdFilter struct {
	ITEM_ID CatalogsProductGroupMultipleStringCriteria `json:"ITEM_ID"`
}

type _ItemIdFilter ItemIdFilter

// NewItemIdFilter instantiates a new ItemIdFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemIdFilter(iTEMID CatalogsProductGroupMultipleStringCriteria) *ItemIdFilter {
	this := ItemIdFilter{}
	this.ITEM_ID = iTEMID
	return &this
}

// NewItemIdFilterWithDefaults instantiates a new ItemIdFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemIdFilterWithDefaults() *ItemIdFilter {
	this := ItemIdFilter{}
	return &this
}

// GetITEM_ID returns the ITEM_ID field value
func (o *ItemIdFilter) GetITEM_ID() CatalogsProductGroupMultipleStringCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringCriteria
		return ret
	}

	return o.ITEM_ID
}

// GetITEM_IDOk returns a tuple with the ITEM_ID field value
// and a boolean to check if the value has been set.
func (o *ItemIdFilter) GetITEM_IDOk() (CatalogsProductGroupMultipleStringCriteria, bool) {
	if o == nil {
		return CatalogsProductGroupMultipleStringCriteria{}, false
	}
	return o.ITEM_ID, true
}

// SetITEM_ID sets field value
func (o *ItemIdFilter) SetITEM_ID(v CatalogsProductGroupMultipleStringCriteria) {
	o.ITEM_ID = v
}

func (o ItemIdFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemIdFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ITEM_ID"] = o.ITEM_ID
	return toSerialize, nil
}

func (o *ItemIdFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ITEM_ID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varItemIdFilter := _ItemIdFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varItemIdFilter)

	if err != nil {
		return err
	}

	*o = ItemIdFilter(varItemIdFilter)

	return err
}

type NullableItemIdFilter struct {
	value *ItemIdFilter
	isSet bool
}

func (v NullableItemIdFilter) Get() *ItemIdFilter {
	return v.value
}

func (v *NullableItemIdFilter) Set(val *ItemIdFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableItemIdFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableItemIdFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemIdFilter(val *ItemIdFilter) *NullableItemIdFilter {
	return &NullableItemIdFilter{value: val, isSet: true}
}

func (v NullableItemIdFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemIdFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


