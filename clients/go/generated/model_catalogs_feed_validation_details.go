/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsFeedValidationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsFeedValidationDetails{}

// CatalogsFeedValidationDetails struct for CatalogsFeedValidationDetails
type CatalogsFeedValidationDetails struct {
	Errors CatalogsFeedValidationErrors `json:"errors"`
	Warnings CatalogsFeedValidationWarnings `json:"warnings"`
}

type _CatalogsFeedValidationDetails CatalogsFeedValidationDetails

// NewCatalogsFeedValidationDetails instantiates a new CatalogsFeedValidationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsFeedValidationDetails(errors CatalogsFeedValidationErrors, warnings CatalogsFeedValidationWarnings) *CatalogsFeedValidationDetails {
	this := CatalogsFeedValidationDetails{}
	this.Errors = errors
	this.Warnings = warnings
	return &this
}

// NewCatalogsFeedValidationDetailsWithDefaults instantiates a new CatalogsFeedValidationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsFeedValidationDetailsWithDefaults() *CatalogsFeedValidationDetails {
	this := CatalogsFeedValidationDetails{}
	return &this
}

// GetErrors returns the Errors field value
func (o *CatalogsFeedValidationDetails) GetErrors() CatalogsFeedValidationErrors {
	if o == nil {
		var ret CatalogsFeedValidationErrors
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationDetails) GetErrorsOk() (*CatalogsFeedValidationErrors, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *CatalogsFeedValidationDetails) SetErrors(v CatalogsFeedValidationErrors) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value
func (o *CatalogsFeedValidationDetails) GetWarnings() CatalogsFeedValidationWarnings {
	if o == nil {
		var ret CatalogsFeedValidationWarnings
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationDetails) GetWarningsOk() (*CatalogsFeedValidationWarnings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// SetWarnings sets field value
func (o *CatalogsFeedValidationDetails) SetWarnings(v CatalogsFeedValidationWarnings) {
	o.Warnings = v
}

func (o CatalogsFeedValidationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsFeedValidationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["errors"] = o.Errors
	toSerialize["warnings"] = o.Warnings
	return toSerialize, nil
}

func (o *CatalogsFeedValidationDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"errors",
		"warnings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsFeedValidationDetails := _CatalogsFeedValidationDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsFeedValidationDetails)

	if err != nil {
		return err
	}

	*o = CatalogsFeedValidationDetails(varCatalogsFeedValidationDetails)

	return err
}

type NullableCatalogsFeedValidationDetails struct {
	value *CatalogsFeedValidationDetails
	isSet bool
}

func (v NullableCatalogsFeedValidationDetails) Get() *CatalogsFeedValidationDetails {
	return v.value
}

func (v *NullableCatalogsFeedValidationDetails) Set(val *CatalogsFeedValidationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsFeedValidationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsFeedValidationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsFeedValidationDetails(val *CatalogsFeedValidationDetails) *NullableCatalogsFeedValidationDetails {
	return &NullableCatalogsFeedValidationDetails{value: val, isSet: true}
}

func (v NullableCatalogsFeedValidationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsFeedValidationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


