/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreativeAssetsProcessingRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreativeAssetsProcessingRecord{}

// CreativeAssetsProcessingRecord Object describing an item processing record
type CreativeAssetsProcessingRecord struct {
	// The catalog creative assets id in the merchant namespace
	CreativeAssetsId *string `json:"creative_assets_id,omitempty"`
	// Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail.
	Errors []ItemValidationEvent `json:"errors,omitempty"`
	// Array with the validation warnings for the item processing record
	Warnings []ItemValidationEvent `json:"warnings,omitempty"`
	Status *ItemProcessingStatus `json:"status,omitempty"`
}

// NewCreativeAssetsProcessingRecord instantiates a new CreativeAssetsProcessingRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeAssetsProcessingRecord() *CreativeAssetsProcessingRecord {
	this := CreativeAssetsProcessingRecord{}
	return &this
}

// NewCreativeAssetsProcessingRecordWithDefaults instantiates a new CreativeAssetsProcessingRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeAssetsProcessingRecordWithDefaults() *CreativeAssetsProcessingRecord {
	this := CreativeAssetsProcessingRecord{}
	return &this
}

// GetCreativeAssetsId returns the CreativeAssetsId field value if set, zero value otherwise.
func (o *CreativeAssetsProcessingRecord) GetCreativeAssetsId() string {
	if o == nil || IsNil(o.CreativeAssetsId) {
		var ret string
		return ret
	}
	return *o.CreativeAssetsId
}

// GetCreativeAssetsIdOk returns a tuple with the CreativeAssetsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeAssetsProcessingRecord) GetCreativeAssetsIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreativeAssetsId) {
		return nil, false
	}
	return o.CreativeAssetsId, true
}

// HasCreativeAssetsId returns a boolean if a field has been set.
func (o *CreativeAssetsProcessingRecord) HasCreativeAssetsId() bool {
	if o != nil && !IsNil(o.CreativeAssetsId) {
		return true
	}

	return false
}

// SetCreativeAssetsId gets a reference to the given string and assigns it to the CreativeAssetsId field.
func (o *CreativeAssetsProcessingRecord) SetCreativeAssetsId(v string) {
	o.CreativeAssetsId = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *CreativeAssetsProcessingRecord) GetErrors() []ItemValidationEvent {
	if o == nil || IsNil(o.Errors) {
		var ret []ItemValidationEvent
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeAssetsProcessingRecord) GetErrorsOk() ([]ItemValidationEvent, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *CreativeAssetsProcessingRecord) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ItemValidationEvent and assigns it to the Errors field.
func (o *CreativeAssetsProcessingRecord) SetErrors(v []ItemValidationEvent) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CreativeAssetsProcessingRecord) GetWarnings() []ItemValidationEvent {
	if o == nil || IsNil(o.Warnings) {
		var ret []ItemValidationEvent
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeAssetsProcessingRecord) GetWarningsOk() ([]ItemValidationEvent, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CreativeAssetsProcessingRecord) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []ItemValidationEvent and assigns it to the Warnings field.
func (o *CreativeAssetsProcessingRecord) SetWarnings(v []ItemValidationEvent) {
	o.Warnings = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreativeAssetsProcessingRecord) GetStatus() ItemProcessingStatus {
	if o == nil || IsNil(o.Status) {
		var ret ItemProcessingStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeAssetsProcessingRecord) GetStatusOk() (*ItemProcessingStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreativeAssetsProcessingRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ItemProcessingStatus and assigns it to the Status field.
func (o *CreativeAssetsProcessingRecord) SetStatus(v ItemProcessingStatus) {
	o.Status = &v
}

func (o CreativeAssetsProcessingRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreativeAssetsProcessingRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreativeAssetsId) {
		toSerialize["creative_assets_id"] = o.CreativeAssetsId
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCreativeAssetsProcessingRecord struct {
	value *CreativeAssetsProcessingRecord
	isSet bool
}

func (v NullableCreativeAssetsProcessingRecord) Get() *CreativeAssetsProcessingRecord {
	return v.value
}

func (v *NullableCreativeAssetsProcessingRecord) Set(val *CreativeAssetsProcessingRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeAssetsProcessingRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeAssetsProcessingRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeAssetsProcessingRecord(val *CreativeAssetsProcessingRecord) *NullableCreativeAssetsProcessingRecord {
	return &NullableCreativeAssetsProcessingRecord{value: val, isSet: true}
}

func (v NullableCreativeAssetsProcessingRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeAssetsProcessingRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


