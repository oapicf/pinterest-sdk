/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// LeadFormStatus Status of the lead form
type LeadFormStatus string

// List of LeadFormStatus
const (
	DRAFT LeadFormStatus = "DRAFT"
	ACTIVE LeadFormStatus = "ACTIVE"
)

// All allowed values of LeadFormStatus enum
var AllowedLeadFormStatusEnumValues = []LeadFormStatus{
	"DRAFT",
	"ACTIVE",
}

func (v *LeadFormStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LeadFormStatus(value)
	for _, existing := range AllowedLeadFormStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LeadFormStatus", value)
}

// NewLeadFormStatusFromValue returns a pointer to a valid LeadFormStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLeadFormStatusFromValue(v string) (*LeadFormStatus, error) {
	ev := LeadFormStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LeadFormStatus: valid values are %v", v, AllowedLeadFormStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LeadFormStatus) IsValid() bool {
	for _, existing := range AllowedLeadFormStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LeadFormStatus value
func (v LeadFormStatus) Ptr() *LeadFormStatus {
	return &v
}

type NullableLeadFormStatus struct {
	value *LeadFormStatus
	isSet bool
}

func (v NullableLeadFormStatus) Get() *LeadFormStatus {
	return v.value
}

func (v *NullableLeadFormStatus) Set(val *LeadFormStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableLeadFormStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableLeadFormStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeadFormStatus(val *LeadFormStatus) *NullableLeadFormStatus {
	return &NullableLeadFormStatus{value: val, isSet: true}
}

func (v NullableLeadFormStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeadFormStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

