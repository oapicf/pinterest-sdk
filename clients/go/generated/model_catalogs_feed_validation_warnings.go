/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogsFeedValidationWarnings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsFeedValidationWarnings{}

// CatalogsFeedValidationWarnings struct for CatalogsFeedValidationWarnings
type CatalogsFeedValidationWarnings struct {
	// Some items have ad links that are formatted incorrectly.
	AD_LINK_FORMAT_WARNING *int32 `json:"AD_LINK_FORMAT_WARNING,omitempty"`
	// Some items have ad link URLs that are duplicates of the link URLs for those items.
	AD_LINK_SAME_AS_LINK *int32 `json:"AD_LINK_SAME_AS_LINK,omitempty"`
	// The title for some items were truncated because they contain too many characters.
	TITLE_LENGTH_TOO_LONG *int32 `json:"TITLE_LENGTH_TOO_LONG,omitempty"`
	// The description for some items were truncated because they contain too many characters.
	DESCRIPTION_LENGTH_TOO_LONG *int32 `json:"DESCRIPTION_LENGTH_TOO_LONG,omitempty"`
	// Some items have gender values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
	GENDER_INVALID *int32 `json:"GENDER_INVALID,omitempty"`
	// Some items have age group values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
	AGE_GROUP_INVALID *int32 `json:"AGE_GROUP_INVALID,omitempty"`
	// Some items have size type values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
	SIZE_TYPE_INVALID *int32 `json:"SIZE_TYPE_INVALID,omitempty"`
	// Some items have size system values which are not one of the supported size systems.
	SIZE_SYSTEM_INVALID *int32 `json:"SIZE_SYSTEM_INVALID,omitempty"`
	// Some items have an invalid product link which contains invalid UTM tracking paramaters.
	LINK_FORMAT_WARNING *int32 `json:"LINK_FORMAT_WARNING,omitempty"`
	// Some items have sale price values that are higher than the original price of the item.
	SALES_PRICE_INVALID *int32 `json:"SALES_PRICE_INVALID,omitempty"`
	// Some items only have 1 or 2 levels of google_product_category values, which may limit visibility in recommendations, search results and shopping experiences.
	PRODUCT_CATEGORY_DEPTH_WARNING *int32 `json:"PRODUCT_CATEGORY_DEPTH_WARNING,omitempty"`
	// Some items have adwords_redirect links that are formatted incorrectly.
	ADWORDS_FORMAT_WARNING *int32 `json:"ADWORDS_FORMAT_WARNING,omitempty"`
	// Some items have adwords_redirect URLs that are duplicates of the link URLs for those items.
	ADWORDS_SAME_AS_LINK *int32 `json:"ADWORDS_SAME_AS_LINK,omitempty"`
	// Your feed contains duplicate headers.
	DUPLICATE_HEADERS *int32 `json:"DUPLICATE_HEADERS,omitempty"`
	// Ingestion completed early because there are no changes to your feed since the last successful update.
	FETCH_SAME_SIGNATURE *int32 `json:"FETCH_SAME_SIGNATURE,omitempty"`
	// Some items have additional_image_link URLs that contain too many characters, so those items will not be published.
	ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG *int32 `json:"ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG,omitempty"`
	// Some items have additional_image_link URLs that are formatted incorrectly and will not be published with your items.
	ADDITIONAL_IMAGE_LINK_WARNING *int32 `json:"ADDITIONAL_IMAGE_LINK_WARNING,omitempty"`
	// Some items have image_link URLs that are formatted incorrectly and will not be published with those items.
	IMAGE_LINK_WARNING *int32 `json:"IMAGE_LINK_WARNING,omitempty"`
	// Some items have shipping values that are formatted incorrectly.
	SHIPPING_INVALID *int32 `json:"SHIPPING_INVALID,omitempty"`
	// Some items have tax values that are formatted incorrectly.
	TAX_INVALID *int32 `json:"TAX_INVALID,omitempty"`
	// Some items have invalid shipping_weight values.
	SHIPPING_WEIGHT_INVALID *int32 `json:"SHIPPING_WEIGHT_INVALID,omitempty"`
	// Some items have expiration_date values that are formatted incorrectly, those items will be published without an expiration date.
	EXPIRATION_DATE_INVALID *int32 `json:"EXPIRATION_DATE_INVALID,omitempty"`
	// Some items have availability_date values that are formatted incorrectly, those items will be published without an availability date.
	AVAILABILITY_DATE_INVALID *int32 `json:"AVAILABILITY_DATE_INVALID,omitempty"`
	// Some items have sale_price_effective_date values that are formatted incorrectly, those items will be published without a sale date.
	SALE_DATE_INVALID *int32 `json:"SALE_DATE_INVALID,omitempty"`
	// Some items have weight_unit values that are formatted incorrectly, those items will be published without a weight unit.
	WEIGHT_UNIT_INVALID *int32 `json:"WEIGHT_UNIT_INVALID,omitempty"`
	// Some items have is_bundle values that are formatted incorrectly, those items will be published without being bundled with other products.
	IS_BUNDLE_INVALID *int32 `json:"IS_BUNDLE_INVALID,omitempty"`
	// Some items have updated_time values thate are formatted incorrectly, those items will be published without an updated time.
	UPDATED_TIME_INVALID *int32 `json:"UPDATED_TIME_INVALID,omitempty"`
	// Some items have custom_label values that are too long, those items will be published without that custom label.
	CUSTOM_LABEL_LENGTH_TOO_LONG *int32 `json:"CUSTOM_LABEL_LENGTH_TOO_LONG,omitempty"`
	// Some items have product_type values that are too long, those items will be published without that product type.
	PRODUCT_TYPE_LENGTH_TOO_LONG *int32 `json:"PRODUCT_TYPE_LENGTH_TOO_LONG,omitempty"`
	// Some items have additional_image_link values that exceed the limit for additional images, those items will be published without some of your images.
	TOO_MANY_ADDITIONAL_IMAGE_LINKS *int32 `json:"TOO_MANY_ADDITIONAL_IMAGE_LINKS,omitempty"`
	// Some items have invalid multipack values.
	MULTIPACK_INVALID *int32 `json:"MULTIPACK_INVALID,omitempty"`
	// The product count has increased or decreased significantly compared to the last successful ingestion.
	INDEXED_PRODUCT_COUNT_LARGE_DELTA *int32 `json:"INDEXED_PRODUCT_COUNT_LARGE_DELTA,omitempty"`
	// Some items include additional_image_links that can't be found.
	ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE *int32 `json:"ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE,omitempty"`
	// Some items are missing a google_product_category.
	OPTIONAL_PRODUCT_CATEGORY_MISSING *int32 `json:"OPTIONAL_PRODUCT_CATEGORY_MISSING,omitempty"`
	// Some items include google_product_category values that are not formatted correctly according to the GPC taxonomy.
	OPTIONAL_PRODUCT_CATEGORY_INVALID *int32 `json:"OPTIONAL_PRODUCT_CATEGORY_INVALID,omitempty"`
	// Some items are missing a condition value, which may limit visibility in recommendations, search results and shopping experiences.
	OPTIONAL_CONDITION_MISSING *int32 `json:"OPTIONAL_CONDITION_MISSING,omitempty"`
	// Some items include condition values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
	OPTIONAL_CONDITION_INVALID *int32 `json:"OPTIONAL_CONDITION_INVALID,omitempty"`
	// Some items include invalid ios_deep_link values.
	IOS_DEEP_LINK_INVALID *int32 `json:"IOS_DEEP_LINK_INVALID,omitempty"`
	// Some items include invalid android_deep_link.
	ANDROID_DEEP_LINK_INVALID *int32 `json:"ANDROID_DEEP_LINK_INVALID,omitempty"`
	// Some items include utm_source values that are formatted incorrectly and have been automatically corrected.
	UTM_SOURCE_AUTO_CORRECTED *int32 `json:"UTM_SOURCE_AUTO_CORRECTED,omitempty"`
	// Some items include a currency that doesn't match the usual currency for the location where that product is sold or shipped.
	COUNTRY_DOES_NOT_MAP_TO_CURRENCY *int32 `json:"COUNTRY_DOES_NOT_MAP_TO_CURRENCY,omitempty"`
	// Some items include min_ad_price values that are formatted incorrectly.
	MIN_AD_PRICE_INVALID *int32 `json:"MIN_AD_PRICE_INVALID,omitempty"`
	// Some items include incorrectly formatted GTINs.
	GTIN_INVALID *int32 `json:"GTIN_INVALID,omitempty"`
	// Some items include inconsistent currencies in price fields.
	INCONSISTENT_CURRENCY_VALUES *int32 `json:"INCONSISTENT_CURRENCY_VALUES,omitempty"`
	// Some items include sales price that is much lower than the list price.
	SALES_PRICE_TOO_LOW *int32 `json:"SALES_PRICE_TOO_LOW,omitempty"`
	// Some items include incorrectly formatted shipping_width.
	SHIPPING_WIDTH_INVALID *int32 `json:"SHIPPING_WIDTH_INVALID,omitempty"`
	// Some items include incorrectly formatted shipping_height.
	SHIPPING_HEIGHT_INVALID *int32 `json:"SHIPPING_HEIGHT_INVALID,omitempty"`
	// Some items include a sales price that is higher than the list price. The sales price has been defaulted to the list price.
	SALES_PRICE_TOO_HIGH *int32 `json:"SALES_PRICE_TOO_HIGH,omitempty"`
	// Some items include incorrectly formatted MPNs.
	MPN_INVALID *int32 `json:"MPN_INVALID,omitempty"`
}

// NewCatalogsFeedValidationWarnings instantiates a new CatalogsFeedValidationWarnings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsFeedValidationWarnings() *CatalogsFeedValidationWarnings {
	this := CatalogsFeedValidationWarnings{}
	return &this
}

// NewCatalogsFeedValidationWarningsWithDefaults instantiates a new CatalogsFeedValidationWarnings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsFeedValidationWarningsWithDefaults() *CatalogsFeedValidationWarnings {
	this := CatalogsFeedValidationWarnings{}
	return &this
}

// GetAD_LINK_FORMAT_WARNING returns the AD_LINK_FORMAT_WARNING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetAD_LINK_FORMAT_WARNING() int32 {
	if o == nil || IsNil(o.AD_LINK_FORMAT_WARNING) {
		var ret int32
		return ret
	}
	return *o.AD_LINK_FORMAT_WARNING
}

// GetAD_LINK_FORMAT_WARNINGOk returns a tuple with the AD_LINK_FORMAT_WARNING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetAD_LINK_FORMAT_WARNINGOk() (*int32, bool) {
	if o == nil || IsNil(o.AD_LINK_FORMAT_WARNING) {
		return nil, false
	}
	return o.AD_LINK_FORMAT_WARNING, true
}

// HasAD_LINK_FORMAT_WARNING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasAD_LINK_FORMAT_WARNING() bool {
	if o != nil && !IsNil(o.AD_LINK_FORMAT_WARNING) {
		return true
	}

	return false
}

// SetAD_LINK_FORMAT_WARNING gets a reference to the given int32 and assigns it to the AD_LINK_FORMAT_WARNING field.
func (o *CatalogsFeedValidationWarnings) SetAD_LINK_FORMAT_WARNING(v int32) {
	o.AD_LINK_FORMAT_WARNING = &v
}

// GetAD_LINK_SAME_AS_LINK returns the AD_LINK_SAME_AS_LINK field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetAD_LINK_SAME_AS_LINK() int32 {
	if o == nil || IsNil(o.AD_LINK_SAME_AS_LINK) {
		var ret int32
		return ret
	}
	return *o.AD_LINK_SAME_AS_LINK
}

// GetAD_LINK_SAME_AS_LINKOk returns a tuple with the AD_LINK_SAME_AS_LINK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetAD_LINK_SAME_AS_LINKOk() (*int32, bool) {
	if o == nil || IsNil(o.AD_LINK_SAME_AS_LINK) {
		return nil, false
	}
	return o.AD_LINK_SAME_AS_LINK, true
}

// HasAD_LINK_SAME_AS_LINK returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasAD_LINK_SAME_AS_LINK() bool {
	if o != nil && !IsNil(o.AD_LINK_SAME_AS_LINK) {
		return true
	}

	return false
}

// SetAD_LINK_SAME_AS_LINK gets a reference to the given int32 and assigns it to the AD_LINK_SAME_AS_LINK field.
func (o *CatalogsFeedValidationWarnings) SetAD_LINK_SAME_AS_LINK(v int32) {
	o.AD_LINK_SAME_AS_LINK = &v
}

// GetTITLE_LENGTH_TOO_LONG returns the TITLE_LENGTH_TOO_LONG field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetTITLE_LENGTH_TOO_LONG() int32 {
	if o == nil || IsNil(o.TITLE_LENGTH_TOO_LONG) {
		var ret int32
		return ret
	}
	return *o.TITLE_LENGTH_TOO_LONG
}

// GetTITLE_LENGTH_TOO_LONGOk returns a tuple with the TITLE_LENGTH_TOO_LONG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetTITLE_LENGTH_TOO_LONGOk() (*int32, bool) {
	if o == nil || IsNil(o.TITLE_LENGTH_TOO_LONG) {
		return nil, false
	}
	return o.TITLE_LENGTH_TOO_LONG, true
}

// HasTITLE_LENGTH_TOO_LONG returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasTITLE_LENGTH_TOO_LONG() bool {
	if o != nil && !IsNil(o.TITLE_LENGTH_TOO_LONG) {
		return true
	}

	return false
}

// SetTITLE_LENGTH_TOO_LONG gets a reference to the given int32 and assigns it to the TITLE_LENGTH_TOO_LONG field.
func (o *CatalogsFeedValidationWarnings) SetTITLE_LENGTH_TOO_LONG(v int32) {
	o.TITLE_LENGTH_TOO_LONG = &v
}

// GetDESCRIPTION_LENGTH_TOO_LONG returns the DESCRIPTION_LENGTH_TOO_LONG field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetDESCRIPTION_LENGTH_TOO_LONG() int32 {
	if o == nil || IsNil(o.DESCRIPTION_LENGTH_TOO_LONG) {
		var ret int32
		return ret
	}
	return *o.DESCRIPTION_LENGTH_TOO_LONG
}

// GetDESCRIPTION_LENGTH_TOO_LONGOk returns a tuple with the DESCRIPTION_LENGTH_TOO_LONG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetDESCRIPTION_LENGTH_TOO_LONGOk() (*int32, bool) {
	if o == nil || IsNil(o.DESCRIPTION_LENGTH_TOO_LONG) {
		return nil, false
	}
	return o.DESCRIPTION_LENGTH_TOO_LONG, true
}

// HasDESCRIPTION_LENGTH_TOO_LONG returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasDESCRIPTION_LENGTH_TOO_LONG() bool {
	if o != nil && !IsNil(o.DESCRIPTION_LENGTH_TOO_LONG) {
		return true
	}

	return false
}

// SetDESCRIPTION_LENGTH_TOO_LONG gets a reference to the given int32 and assigns it to the DESCRIPTION_LENGTH_TOO_LONG field.
func (o *CatalogsFeedValidationWarnings) SetDESCRIPTION_LENGTH_TOO_LONG(v int32) {
	o.DESCRIPTION_LENGTH_TOO_LONG = &v
}

// GetGENDER_INVALID returns the GENDER_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetGENDER_INVALID() int32 {
	if o == nil || IsNil(o.GENDER_INVALID) {
		var ret int32
		return ret
	}
	return *o.GENDER_INVALID
}

// GetGENDER_INVALIDOk returns a tuple with the GENDER_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetGENDER_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.GENDER_INVALID) {
		return nil, false
	}
	return o.GENDER_INVALID, true
}

// HasGENDER_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasGENDER_INVALID() bool {
	if o != nil && !IsNil(o.GENDER_INVALID) {
		return true
	}

	return false
}

// SetGENDER_INVALID gets a reference to the given int32 and assigns it to the GENDER_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetGENDER_INVALID(v int32) {
	o.GENDER_INVALID = &v
}

// GetAGE_GROUP_INVALID returns the AGE_GROUP_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetAGE_GROUP_INVALID() int32 {
	if o == nil || IsNil(o.AGE_GROUP_INVALID) {
		var ret int32
		return ret
	}
	return *o.AGE_GROUP_INVALID
}

// GetAGE_GROUP_INVALIDOk returns a tuple with the AGE_GROUP_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetAGE_GROUP_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.AGE_GROUP_INVALID) {
		return nil, false
	}
	return o.AGE_GROUP_INVALID, true
}

// HasAGE_GROUP_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasAGE_GROUP_INVALID() bool {
	if o != nil && !IsNil(o.AGE_GROUP_INVALID) {
		return true
	}

	return false
}

// SetAGE_GROUP_INVALID gets a reference to the given int32 and assigns it to the AGE_GROUP_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetAGE_GROUP_INVALID(v int32) {
	o.AGE_GROUP_INVALID = &v
}

// GetSIZE_TYPE_INVALID returns the SIZE_TYPE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSIZE_TYPE_INVALID() int32 {
	if o == nil || IsNil(o.SIZE_TYPE_INVALID) {
		var ret int32
		return ret
	}
	return *o.SIZE_TYPE_INVALID
}

// GetSIZE_TYPE_INVALIDOk returns a tuple with the SIZE_TYPE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSIZE_TYPE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SIZE_TYPE_INVALID) {
		return nil, false
	}
	return o.SIZE_TYPE_INVALID, true
}

// HasSIZE_TYPE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSIZE_TYPE_INVALID() bool {
	if o != nil && !IsNil(o.SIZE_TYPE_INVALID) {
		return true
	}

	return false
}

// SetSIZE_TYPE_INVALID gets a reference to the given int32 and assigns it to the SIZE_TYPE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSIZE_TYPE_INVALID(v int32) {
	o.SIZE_TYPE_INVALID = &v
}

// GetSIZE_SYSTEM_INVALID returns the SIZE_SYSTEM_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSIZE_SYSTEM_INVALID() int32 {
	if o == nil || IsNil(o.SIZE_SYSTEM_INVALID) {
		var ret int32
		return ret
	}
	return *o.SIZE_SYSTEM_INVALID
}

// GetSIZE_SYSTEM_INVALIDOk returns a tuple with the SIZE_SYSTEM_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSIZE_SYSTEM_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SIZE_SYSTEM_INVALID) {
		return nil, false
	}
	return o.SIZE_SYSTEM_INVALID, true
}

// HasSIZE_SYSTEM_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSIZE_SYSTEM_INVALID() bool {
	if o != nil && !IsNil(o.SIZE_SYSTEM_INVALID) {
		return true
	}

	return false
}

// SetSIZE_SYSTEM_INVALID gets a reference to the given int32 and assigns it to the SIZE_SYSTEM_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSIZE_SYSTEM_INVALID(v int32) {
	o.SIZE_SYSTEM_INVALID = &v
}

// GetLINK_FORMAT_WARNING returns the LINK_FORMAT_WARNING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetLINK_FORMAT_WARNING() int32 {
	if o == nil || IsNil(o.LINK_FORMAT_WARNING) {
		var ret int32
		return ret
	}
	return *o.LINK_FORMAT_WARNING
}

// GetLINK_FORMAT_WARNINGOk returns a tuple with the LINK_FORMAT_WARNING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetLINK_FORMAT_WARNINGOk() (*int32, bool) {
	if o == nil || IsNil(o.LINK_FORMAT_WARNING) {
		return nil, false
	}
	return o.LINK_FORMAT_WARNING, true
}

// HasLINK_FORMAT_WARNING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasLINK_FORMAT_WARNING() bool {
	if o != nil && !IsNil(o.LINK_FORMAT_WARNING) {
		return true
	}

	return false
}

// SetLINK_FORMAT_WARNING gets a reference to the given int32 and assigns it to the LINK_FORMAT_WARNING field.
func (o *CatalogsFeedValidationWarnings) SetLINK_FORMAT_WARNING(v int32) {
	o.LINK_FORMAT_WARNING = &v
}

// GetSALES_PRICE_INVALID returns the SALES_PRICE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSALES_PRICE_INVALID() int32 {
	if o == nil || IsNil(o.SALES_PRICE_INVALID) {
		var ret int32
		return ret
	}
	return *o.SALES_PRICE_INVALID
}

// GetSALES_PRICE_INVALIDOk returns a tuple with the SALES_PRICE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSALES_PRICE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SALES_PRICE_INVALID) {
		return nil, false
	}
	return o.SALES_PRICE_INVALID, true
}

// HasSALES_PRICE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSALES_PRICE_INVALID() bool {
	if o != nil && !IsNil(o.SALES_PRICE_INVALID) {
		return true
	}

	return false
}

// SetSALES_PRICE_INVALID gets a reference to the given int32 and assigns it to the SALES_PRICE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSALES_PRICE_INVALID(v int32) {
	o.SALES_PRICE_INVALID = &v
}

// GetPRODUCT_CATEGORY_DEPTH_WARNING returns the PRODUCT_CATEGORY_DEPTH_WARNING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetPRODUCT_CATEGORY_DEPTH_WARNING() int32 {
	if o == nil || IsNil(o.PRODUCT_CATEGORY_DEPTH_WARNING) {
		var ret int32
		return ret
	}
	return *o.PRODUCT_CATEGORY_DEPTH_WARNING
}

// GetPRODUCT_CATEGORY_DEPTH_WARNINGOk returns a tuple with the PRODUCT_CATEGORY_DEPTH_WARNING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetPRODUCT_CATEGORY_DEPTH_WARNINGOk() (*int32, bool) {
	if o == nil || IsNil(o.PRODUCT_CATEGORY_DEPTH_WARNING) {
		return nil, false
	}
	return o.PRODUCT_CATEGORY_DEPTH_WARNING, true
}

// HasPRODUCT_CATEGORY_DEPTH_WARNING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasPRODUCT_CATEGORY_DEPTH_WARNING() bool {
	if o != nil && !IsNil(o.PRODUCT_CATEGORY_DEPTH_WARNING) {
		return true
	}

	return false
}

// SetPRODUCT_CATEGORY_DEPTH_WARNING gets a reference to the given int32 and assigns it to the PRODUCT_CATEGORY_DEPTH_WARNING field.
func (o *CatalogsFeedValidationWarnings) SetPRODUCT_CATEGORY_DEPTH_WARNING(v int32) {
	o.PRODUCT_CATEGORY_DEPTH_WARNING = &v
}

// GetADWORDS_FORMAT_WARNING returns the ADWORDS_FORMAT_WARNING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetADWORDS_FORMAT_WARNING() int32 {
	if o == nil || IsNil(o.ADWORDS_FORMAT_WARNING) {
		var ret int32
		return ret
	}
	return *o.ADWORDS_FORMAT_WARNING
}

// GetADWORDS_FORMAT_WARNINGOk returns a tuple with the ADWORDS_FORMAT_WARNING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetADWORDS_FORMAT_WARNINGOk() (*int32, bool) {
	if o == nil || IsNil(o.ADWORDS_FORMAT_WARNING) {
		return nil, false
	}
	return o.ADWORDS_FORMAT_WARNING, true
}

// HasADWORDS_FORMAT_WARNING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasADWORDS_FORMAT_WARNING() bool {
	if o != nil && !IsNil(o.ADWORDS_FORMAT_WARNING) {
		return true
	}

	return false
}

// SetADWORDS_FORMAT_WARNING gets a reference to the given int32 and assigns it to the ADWORDS_FORMAT_WARNING field.
func (o *CatalogsFeedValidationWarnings) SetADWORDS_FORMAT_WARNING(v int32) {
	o.ADWORDS_FORMAT_WARNING = &v
}

// GetADWORDS_SAME_AS_LINK returns the ADWORDS_SAME_AS_LINK field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetADWORDS_SAME_AS_LINK() int32 {
	if o == nil || IsNil(o.ADWORDS_SAME_AS_LINK) {
		var ret int32
		return ret
	}
	return *o.ADWORDS_SAME_AS_LINK
}

// GetADWORDS_SAME_AS_LINKOk returns a tuple with the ADWORDS_SAME_AS_LINK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetADWORDS_SAME_AS_LINKOk() (*int32, bool) {
	if o == nil || IsNil(o.ADWORDS_SAME_AS_LINK) {
		return nil, false
	}
	return o.ADWORDS_SAME_AS_LINK, true
}

// HasADWORDS_SAME_AS_LINK returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasADWORDS_SAME_AS_LINK() bool {
	if o != nil && !IsNil(o.ADWORDS_SAME_AS_LINK) {
		return true
	}

	return false
}

// SetADWORDS_SAME_AS_LINK gets a reference to the given int32 and assigns it to the ADWORDS_SAME_AS_LINK field.
func (o *CatalogsFeedValidationWarnings) SetADWORDS_SAME_AS_LINK(v int32) {
	o.ADWORDS_SAME_AS_LINK = &v
}

// GetDUPLICATE_HEADERS returns the DUPLICATE_HEADERS field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetDUPLICATE_HEADERS() int32 {
	if o == nil || IsNil(o.DUPLICATE_HEADERS) {
		var ret int32
		return ret
	}
	return *o.DUPLICATE_HEADERS
}

// GetDUPLICATE_HEADERSOk returns a tuple with the DUPLICATE_HEADERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetDUPLICATE_HEADERSOk() (*int32, bool) {
	if o == nil || IsNil(o.DUPLICATE_HEADERS) {
		return nil, false
	}
	return o.DUPLICATE_HEADERS, true
}

// HasDUPLICATE_HEADERS returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasDUPLICATE_HEADERS() bool {
	if o != nil && !IsNil(o.DUPLICATE_HEADERS) {
		return true
	}

	return false
}

// SetDUPLICATE_HEADERS gets a reference to the given int32 and assigns it to the DUPLICATE_HEADERS field.
func (o *CatalogsFeedValidationWarnings) SetDUPLICATE_HEADERS(v int32) {
	o.DUPLICATE_HEADERS = &v
}

// GetFETCH_SAME_SIGNATURE returns the FETCH_SAME_SIGNATURE field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetFETCH_SAME_SIGNATURE() int32 {
	if o == nil || IsNil(o.FETCH_SAME_SIGNATURE) {
		var ret int32
		return ret
	}
	return *o.FETCH_SAME_SIGNATURE
}

// GetFETCH_SAME_SIGNATUREOk returns a tuple with the FETCH_SAME_SIGNATURE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetFETCH_SAME_SIGNATUREOk() (*int32, bool) {
	if o == nil || IsNil(o.FETCH_SAME_SIGNATURE) {
		return nil, false
	}
	return o.FETCH_SAME_SIGNATURE, true
}

// HasFETCH_SAME_SIGNATURE returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasFETCH_SAME_SIGNATURE() bool {
	if o != nil && !IsNil(o.FETCH_SAME_SIGNATURE) {
		return true
	}

	return false
}

// SetFETCH_SAME_SIGNATURE gets a reference to the given int32 and assigns it to the FETCH_SAME_SIGNATURE field.
func (o *CatalogsFeedValidationWarnings) SetFETCH_SAME_SIGNATURE(v int32) {
	o.FETCH_SAME_SIGNATURE = &v
}

// GetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG returns the ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG() int32 {
	if o == nil || IsNil(o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG) {
		var ret int32
		return ret
	}
	return *o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG
}

// GetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONGOk returns a tuple with the ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONGOk() (*int32, bool) {
	if o == nil || IsNil(o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG) {
		return nil, false
	}
	return o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG, true
}

// HasADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG() bool {
	if o != nil && !IsNil(o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG) {
		return true
	}

	return false
}

// SetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG gets a reference to the given int32 and assigns it to the ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG field.
func (o *CatalogsFeedValidationWarnings) SetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG(v int32) {
	o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG = &v
}

// GetADDITIONAL_IMAGE_LINK_WARNING returns the ADDITIONAL_IMAGE_LINK_WARNING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetADDITIONAL_IMAGE_LINK_WARNING() int32 {
	if o == nil || IsNil(o.ADDITIONAL_IMAGE_LINK_WARNING) {
		var ret int32
		return ret
	}
	return *o.ADDITIONAL_IMAGE_LINK_WARNING
}

// GetADDITIONAL_IMAGE_LINK_WARNINGOk returns a tuple with the ADDITIONAL_IMAGE_LINK_WARNING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetADDITIONAL_IMAGE_LINK_WARNINGOk() (*int32, bool) {
	if o == nil || IsNil(o.ADDITIONAL_IMAGE_LINK_WARNING) {
		return nil, false
	}
	return o.ADDITIONAL_IMAGE_LINK_WARNING, true
}

// HasADDITIONAL_IMAGE_LINK_WARNING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasADDITIONAL_IMAGE_LINK_WARNING() bool {
	if o != nil && !IsNil(o.ADDITIONAL_IMAGE_LINK_WARNING) {
		return true
	}

	return false
}

// SetADDITIONAL_IMAGE_LINK_WARNING gets a reference to the given int32 and assigns it to the ADDITIONAL_IMAGE_LINK_WARNING field.
func (o *CatalogsFeedValidationWarnings) SetADDITIONAL_IMAGE_LINK_WARNING(v int32) {
	o.ADDITIONAL_IMAGE_LINK_WARNING = &v
}

// GetIMAGE_LINK_WARNING returns the IMAGE_LINK_WARNING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetIMAGE_LINK_WARNING() int32 {
	if o == nil || IsNil(o.IMAGE_LINK_WARNING) {
		var ret int32
		return ret
	}
	return *o.IMAGE_LINK_WARNING
}

// GetIMAGE_LINK_WARNINGOk returns a tuple with the IMAGE_LINK_WARNING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetIMAGE_LINK_WARNINGOk() (*int32, bool) {
	if o == nil || IsNil(o.IMAGE_LINK_WARNING) {
		return nil, false
	}
	return o.IMAGE_LINK_WARNING, true
}

// HasIMAGE_LINK_WARNING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasIMAGE_LINK_WARNING() bool {
	if o != nil && !IsNil(o.IMAGE_LINK_WARNING) {
		return true
	}

	return false
}

// SetIMAGE_LINK_WARNING gets a reference to the given int32 and assigns it to the IMAGE_LINK_WARNING field.
func (o *CatalogsFeedValidationWarnings) SetIMAGE_LINK_WARNING(v int32) {
	o.IMAGE_LINK_WARNING = &v
}

// GetSHIPPING_INVALID returns the SHIPPING_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_INVALID() int32 {
	if o == nil || IsNil(o.SHIPPING_INVALID) {
		var ret int32
		return ret
	}
	return *o.SHIPPING_INVALID
}

// GetSHIPPING_INVALIDOk returns a tuple with the SHIPPING_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SHIPPING_INVALID) {
		return nil, false
	}
	return o.SHIPPING_INVALID, true
}

// HasSHIPPING_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSHIPPING_INVALID() bool {
	if o != nil && !IsNil(o.SHIPPING_INVALID) {
		return true
	}

	return false
}

// SetSHIPPING_INVALID gets a reference to the given int32 and assigns it to the SHIPPING_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSHIPPING_INVALID(v int32) {
	o.SHIPPING_INVALID = &v
}

// GetTAX_INVALID returns the TAX_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetTAX_INVALID() int32 {
	if o == nil || IsNil(o.TAX_INVALID) {
		var ret int32
		return ret
	}
	return *o.TAX_INVALID
}

// GetTAX_INVALIDOk returns a tuple with the TAX_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetTAX_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.TAX_INVALID) {
		return nil, false
	}
	return o.TAX_INVALID, true
}

// HasTAX_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasTAX_INVALID() bool {
	if o != nil && !IsNil(o.TAX_INVALID) {
		return true
	}

	return false
}

// SetTAX_INVALID gets a reference to the given int32 and assigns it to the TAX_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetTAX_INVALID(v int32) {
	o.TAX_INVALID = &v
}

// GetSHIPPING_WEIGHT_INVALID returns the SHIPPING_WEIGHT_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_WEIGHT_INVALID() int32 {
	if o == nil || IsNil(o.SHIPPING_WEIGHT_INVALID) {
		var ret int32
		return ret
	}
	return *o.SHIPPING_WEIGHT_INVALID
}

// GetSHIPPING_WEIGHT_INVALIDOk returns a tuple with the SHIPPING_WEIGHT_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_WEIGHT_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SHIPPING_WEIGHT_INVALID) {
		return nil, false
	}
	return o.SHIPPING_WEIGHT_INVALID, true
}

// HasSHIPPING_WEIGHT_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSHIPPING_WEIGHT_INVALID() bool {
	if o != nil && !IsNil(o.SHIPPING_WEIGHT_INVALID) {
		return true
	}

	return false
}

// SetSHIPPING_WEIGHT_INVALID gets a reference to the given int32 and assigns it to the SHIPPING_WEIGHT_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSHIPPING_WEIGHT_INVALID(v int32) {
	o.SHIPPING_WEIGHT_INVALID = &v
}

// GetEXPIRATION_DATE_INVALID returns the EXPIRATION_DATE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetEXPIRATION_DATE_INVALID() int32 {
	if o == nil || IsNil(o.EXPIRATION_DATE_INVALID) {
		var ret int32
		return ret
	}
	return *o.EXPIRATION_DATE_INVALID
}

// GetEXPIRATION_DATE_INVALIDOk returns a tuple with the EXPIRATION_DATE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetEXPIRATION_DATE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.EXPIRATION_DATE_INVALID) {
		return nil, false
	}
	return o.EXPIRATION_DATE_INVALID, true
}

// HasEXPIRATION_DATE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasEXPIRATION_DATE_INVALID() bool {
	if o != nil && !IsNil(o.EXPIRATION_DATE_INVALID) {
		return true
	}

	return false
}

// SetEXPIRATION_DATE_INVALID gets a reference to the given int32 and assigns it to the EXPIRATION_DATE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetEXPIRATION_DATE_INVALID(v int32) {
	o.EXPIRATION_DATE_INVALID = &v
}

// GetAVAILABILITY_DATE_INVALID returns the AVAILABILITY_DATE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetAVAILABILITY_DATE_INVALID() int32 {
	if o == nil || IsNil(o.AVAILABILITY_DATE_INVALID) {
		var ret int32
		return ret
	}
	return *o.AVAILABILITY_DATE_INVALID
}

// GetAVAILABILITY_DATE_INVALIDOk returns a tuple with the AVAILABILITY_DATE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetAVAILABILITY_DATE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.AVAILABILITY_DATE_INVALID) {
		return nil, false
	}
	return o.AVAILABILITY_DATE_INVALID, true
}

// HasAVAILABILITY_DATE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasAVAILABILITY_DATE_INVALID() bool {
	if o != nil && !IsNil(o.AVAILABILITY_DATE_INVALID) {
		return true
	}

	return false
}

// SetAVAILABILITY_DATE_INVALID gets a reference to the given int32 and assigns it to the AVAILABILITY_DATE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetAVAILABILITY_DATE_INVALID(v int32) {
	o.AVAILABILITY_DATE_INVALID = &v
}

// GetSALE_DATE_INVALID returns the SALE_DATE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSALE_DATE_INVALID() int32 {
	if o == nil || IsNil(o.SALE_DATE_INVALID) {
		var ret int32
		return ret
	}
	return *o.SALE_DATE_INVALID
}

// GetSALE_DATE_INVALIDOk returns a tuple with the SALE_DATE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSALE_DATE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SALE_DATE_INVALID) {
		return nil, false
	}
	return o.SALE_DATE_INVALID, true
}

// HasSALE_DATE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSALE_DATE_INVALID() bool {
	if o != nil && !IsNil(o.SALE_DATE_INVALID) {
		return true
	}

	return false
}

// SetSALE_DATE_INVALID gets a reference to the given int32 and assigns it to the SALE_DATE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSALE_DATE_INVALID(v int32) {
	o.SALE_DATE_INVALID = &v
}

// GetWEIGHT_UNIT_INVALID returns the WEIGHT_UNIT_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetWEIGHT_UNIT_INVALID() int32 {
	if o == nil || IsNil(o.WEIGHT_UNIT_INVALID) {
		var ret int32
		return ret
	}
	return *o.WEIGHT_UNIT_INVALID
}

// GetWEIGHT_UNIT_INVALIDOk returns a tuple with the WEIGHT_UNIT_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetWEIGHT_UNIT_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.WEIGHT_UNIT_INVALID) {
		return nil, false
	}
	return o.WEIGHT_UNIT_INVALID, true
}

// HasWEIGHT_UNIT_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasWEIGHT_UNIT_INVALID() bool {
	if o != nil && !IsNil(o.WEIGHT_UNIT_INVALID) {
		return true
	}

	return false
}

// SetWEIGHT_UNIT_INVALID gets a reference to the given int32 and assigns it to the WEIGHT_UNIT_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetWEIGHT_UNIT_INVALID(v int32) {
	o.WEIGHT_UNIT_INVALID = &v
}

// GetIS_BUNDLE_INVALID returns the IS_BUNDLE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetIS_BUNDLE_INVALID() int32 {
	if o == nil || IsNil(o.IS_BUNDLE_INVALID) {
		var ret int32
		return ret
	}
	return *o.IS_BUNDLE_INVALID
}

// GetIS_BUNDLE_INVALIDOk returns a tuple with the IS_BUNDLE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetIS_BUNDLE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.IS_BUNDLE_INVALID) {
		return nil, false
	}
	return o.IS_BUNDLE_INVALID, true
}

// HasIS_BUNDLE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasIS_BUNDLE_INVALID() bool {
	if o != nil && !IsNil(o.IS_BUNDLE_INVALID) {
		return true
	}

	return false
}

// SetIS_BUNDLE_INVALID gets a reference to the given int32 and assigns it to the IS_BUNDLE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetIS_BUNDLE_INVALID(v int32) {
	o.IS_BUNDLE_INVALID = &v
}

// GetUPDATED_TIME_INVALID returns the UPDATED_TIME_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetUPDATED_TIME_INVALID() int32 {
	if o == nil || IsNil(o.UPDATED_TIME_INVALID) {
		var ret int32
		return ret
	}
	return *o.UPDATED_TIME_INVALID
}

// GetUPDATED_TIME_INVALIDOk returns a tuple with the UPDATED_TIME_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetUPDATED_TIME_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.UPDATED_TIME_INVALID) {
		return nil, false
	}
	return o.UPDATED_TIME_INVALID, true
}

// HasUPDATED_TIME_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasUPDATED_TIME_INVALID() bool {
	if o != nil && !IsNil(o.UPDATED_TIME_INVALID) {
		return true
	}

	return false
}

// SetUPDATED_TIME_INVALID gets a reference to the given int32 and assigns it to the UPDATED_TIME_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetUPDATED_TIME_INVALID(v int32) {
	o.UPDATED_TIME_INVALID = &v
}

// GetCUSTOM_LABEL_LENGTH_TOO_LONG returns the CUSTOM_LABEL_LENGTH_TOO_LONG field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetCUSTOM_LABEL_LENGTH_TOO_LONG() int32 {
	if o == nil || IsNil(o.CUSTOM_LABEL_LENGTH_TOO_LONG) {
		var ret int32
		return ret
	}
	return *o.CUSTOM_LABEL_LENGTH_TOO_LONG
}

// GetCUSTOM_LABEL_LENGTH_TOO_LONGOk returns a tuple with the CUSTOM_LABEL_LENGTH_TOO_LONG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetCUSTOM_LABEL_LENGTH_TOO_LONGOk() (*int32, bool) {
	if o == nil || IsNil(o.CUSTOM_LABEL_LENGTH_TOO_LONG) {
		return nil, false
	}
	return o.CUSTOM_LABEL_LENGTH_TOO_LONG, true
}

// HasCUSTOM_LABEL_LENGTH_TOO_LONG returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasCUSTOM_LABEL_LENGTH_TOO_LONG() bool {
	if o != nil && !IsNil(o.CUSTOM_LABEL_LENGTH_TOO_LONG) {
		return true
	}

	return false
}

// SetCUSTOM_LABEL_LENGTH_TOO_LONG gets a reference to the given int32 and assigns it to the CUSTOM_LABEL_LENGTH_TOO_LONG field.
func (o *CatalogsFeedValidationWarnings) SetCUSTOM_LABEL_LENGTH_TOO_LONG(v int32) {
	o.CUSTOM_LABEL_LENGTH_TOO_LONG = &v
}

// GetPRODUCT_TYPE_LENGTH_TOO_LONG returns the PRODUCT_TYPE_LENGTH_TOO_LONG field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetPRODUCT_TYPE_LENGTH_TOO_LONG() int32 {
	if o == nil || IsNil(o.PRODUCT_TYPE_LENGTH_TOO_LONG) {
		var ret int32
		return ret
	}
	return *o.PRODUCT_TYPE_LENGTH_TOO_LONG
}

// GetPRODUCT_TYPE_LENGTH_TOO_LONGOk returns a tuple with the PRODUCT_TYPE_LENGTH_TOO_LONG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetPRODUCT_TYPE_LENGTH_TOO_LONGOk() (*int32, bool) {
	if o == nil || IsNil(o.PRODUCT_TYPE_LENGTH_TOO_LONG) {
		return nil, false
	}
	return o.PRODUCT_TYPE_LENGTH_TOO_LONG, true
}

// HasPRODUCT_TYPE_LENGTH_TOO_LONG returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasPRODUCT_TYPE_LENGTH_TOO_LONG() bool {
	if o != nil && !IsNil(o.PRODUCT_TYPE_LENGTH_TOO_LONG) {
		return true
	}

	return false
}

// SetPRODUCT_TYPE_LENGTH_TOO_LONG gets a reference to the given int32 and assigns it to the PRODUCT_TYPE_LENGTH_TOO_LONG field.
func (o *CatalogsFeedValidationWarnings) SetPRODUCT_TYPE_LENGTH_TOO_LONG(v int32) {
	o.PRODUCT_TYPE_LENGTH_TOO_LONG = &v
}

// GetTOO_MANY_ADDITIONAL_IMAGE_LINKS returns the TOO_MANY_ADDITIONAL_IMAGE_LINKS field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetTOO_MANY_ADDITIONAL_IMAGE_LINKS() int32 {
	if o == nil || IsNil(o.TOO_MANY_ADDITIONAL_IMAGE_LINKS) {
		var ret int32
		return ret
	}
	return *o.TOO_MANY_ADDITIONAL_IMAGE_LINKS
}

// GetTOO_MANY_ADDITIONAL_IMAGE_LINKSOk returns a tuple with the TOO_MANY_ADDITIONAL_IMAGE_LINKS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetTOO_MANY_ADDITIONAL_IMAGE_LINKSOk() (*int32, bool) {
	if o == nil || IsNil(o.TOO_MANY_ADDITIONAL_IMAGE_LINKS) {
		return nil, false
	}
	return o.TOO_MANY_ADDITIONAL_IMAGE_LINKS, true
}

// HasTOO_MANY_ADDITIONAL_IMAGE_LINKS returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasTOO_MANY_ADDITIONAL_IMAGE_LINKS() bool {
	if o != nil && !IsNil(o.TOO_MANY_ADDITIONAL_IMAGE_LINKS) {
		return true
	}

	return false
}

// SetTOO_MANY_ADDITIONAL_IMAGE_LINKS gets a reference to the given int32 and assigns it to the TOO_MANY_ADDITIONAL_IMAGE_LINKS field.
func (o *CatalogsFeedValidationWarnings) SetTOO_MANY_ADDITIONAL_IMAGE_LINKS(v int32) {
	o.TOO_MANY_ADDITIONAL_IMAGE_LINKS = &v
}

// GetMULTIPACK_INVALID returns the MULTIPACK_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetMULTIPACK_INVALID() int32 {
	if o == nil || IsNil(o.MULTIPACK_INVALID) {
		var ret int32
		return ret
	}
	return *o.MULTIPACK_INVALID
}

// GetMULTIPACK_INVALIDOk returns a tuple with the MULTIPACK_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetMULTIPACK_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.MULTIPACK_INVALID) {
		return nil, false
	}
	return o.MULTIPACK_INVALID, true
}

// HasMULTIPACK_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasMULTIPACK_INVALID() bool {
	if o != nil && !IsNil(o.MULTIPACK_INVALID) {
		return true
	}

	return false
}

// SetMULTIPACK_INVALID gets a reference to the given int32 and assigns it to the MULTIPACK_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetMULTIPACK_INVALID(v int32) {
	o.MULTIPACK_INVALID = &v
}

// GetINDEXED_PRODUCT_COUNT_LARGE_DELTA returns the INDEXED_PRODUCT_COUNT_LARGE_DELTA field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetINDEXED_PRODUCT_COUNT_LARGE_DELTA() int32 {
	if o == nil || IsNil(o.INDEXED_PRODUCT_COUNT_LARGE_DELTA) {
		var ret int32
		return ret
	}
	return *o.INDEXED_PRODUCT_COUNT_LARGE_DELTA
}

// GetINDEXED_PRODUCT_COUNT_LARGE_DELTAOk returns a tuple with the INDEXED_PRODUCT_COUNT_LARGE_DELTA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetINDEXED_PRODUCT_COUNT_LARGE_DELTAOk() (*int32, bool) {
	if o == nil || IsNil(o.INDEXED_PRODUCT_COUNT_LARGE_DELTA) {
		return nil, false
	}
	return o.INDEXED_PRODUCT_COUNT_LARGE_DELTA, true
}

// HasINDEXED_PRODUCT_COUNT_LARGE_DELTA returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasINDEXED_PRODUCT_COUNT_LARGE_DELTA() bool {
	if o != nil && !IsNil(o.INDEXED_PRODUCT_COUNT_LARGE_DELTA) {
		return true
	}

	return false
}

// SetINDEXED_PRODUCT_COUNT_LARGE_DELTA gets a reference to the given int32 and assigns it to the INDEXED_PRODUCT_COUNT_LARGE_DELTA field.
func (o *CatalogsFeedValidationWarnings) SetINDEXED_PRODUCT_COUNT_LARGE_DELTA(v int32) {
	o.INDEXED_PRODUCT_COUNT_LARGE_DELTA = &v
}

// GetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE returns the ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE() int32 {
	if o == nil || IsNil(o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE) {
		var ret int32
		return ret
	}
	return *o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE
}

// GetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILUREOk returns a tuple with the ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILUREOk() (*int32, bool) {
	if o == nil || IsNil(o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE) {
		return nil, false
	}
	return o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE, true
}

// HasITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE() bool {
	if o != nil && !IsNil(o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE) {
		return true
	}

	return false
}

// SetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE gets a reference to the given int32 and assigns it to the ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE field.
func (o *CatalogsFeedValidationWarnings) SetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE(v int32) {
	o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE = &v
}

// GetOPTIONAL_PRODUCT_CATEGORY_MISSING returns the OPTIONAL_PRODUCT_CATEGORY_MISSING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_PRODUCT_CATEGORY_MISSING() int32 {
	if o == nil || IsNil(o.OPTIONAL_PRODUCT_CATEGORY_MISSING) {
		var ret int32
		return ret
	}
	return *o.OPTIONAL_PRODUCT_CATEGORY_MISSING
}

// GetOPTIONAL_PRODUCT_CATEGORY_MISSINGOk returns a tuple with the OPTIONAL_PRODUCT_CATEGORY_MISSING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_PRODUCT_CATEGORY_MISSINGOk() (*int32, bool) {
	if o == nil || IsNil(o.OPTIONAL_PRODUCT_CATEGORY_MISSING) {
		return nil, false
	}
	return o.OPTIONAL_PRODUCT_CATEGORY_MISSING, true
}

// HasOPTIONAL_PRODUCT_CATEGORY_MISSING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasOPTIONAL_PRODUCT_CATEGORY_MISSING() bool {
	if o != nil && !IsNil(o.OPTIONAL_PRODUCT_CATEGORY_MISSING) {
		return true
	}

	return false
}

// SetOPTIONAL_PRODUCT_CATEGORY_MISSING gets a reference to the given int32 and assigns it to the OPTIONAL_PRODUCT_CATEGORY_MISSING field.
func (o *CatalogsFeedValidationWarnings) SetOPTIONAL_PRODUCT_CATEGORY_MISSING(v int32) {
	o.OPTIONAL_PRODUCT_CATEGORY_MISSING = &v
}

// GetOPTIONAL_PRODUCT_CATEGORY_INVALID returns the OPTIONAL_PRODUCT_CATEGORY_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_PRODUCT_CATEGORY_INVALID() int32 {
	if o == nil || IsNil(o.OPTIONAL_PRODUCT_CATEGORY_INVALID) {
		var ret int32
		return ret
	}
	return *o.OPTIONAL_PRODUCT_CATEGORY_INVALID
}

// GetOPTIONAL_PRODUCT_CATEGORY_INVALIDOk returns a tuple with the OPTIONAL_PRODUCT_CATEGORY_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_PRODUCT_CATEGORY_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.OPTIONAL_PRODUCT_CATEGORY_INVALID) {
		return nil, false
	}
	return o.OPTIONAL_PRODUCT_CATEGORY_INVALID, true
}

// HasOPTIONAL_PRODUCT_CATEGORY_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasOPTIONAL_PRODUCT_CATEGORY_INVALID() bool {
	if o != nil && !IsNil(o.OPTIONAL_PRODUCT_CATEGORY_INVALID) {
		return true
	}

	return false
}

// SetOPTIONAL_PRODUCT_CATEGORY_INVALID gets a reference to the given int32 and assigns it to the OPTIONAL_PRODUCT_CATEGORY_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetOPTIONAL_PRODUCT_CATEGORY_INVALID(v int32) {
	o.OPTIONAL_PRODUCT_CATEGORY_INVALID = &v
}

// GetOPTIONAL_CONDITION_MISSING returns the OPTIONAL_CONDITION_MISSING field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_CONDITION_MISSING() int32 {
	if o == nil || IsNil(o.OPTIONAL_CONDITION_MISSING) {
		var ret int32
		return ret
	}
	return *o.OPTIONAL_CONDITION_MISSING
}

// GetOPTIONAL_CONDITION_MISSINGOk returns a tuple with the OPTIONAL_CONDITION_MISSING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_CONDITION_MISSINGOk() (*int32, bool) {
	if o == nil || IsNil(o.OPTIONAL_CONDITION_MISSING) {
		return nil, false
	}
	return o.OPTIONAL_CONDITION_MISSING, true
}

// HasOPTIONAL_CONDITION_MISSING returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasOPTIONAL_CONDITION_MISSING() bool {
	if o != nil && !IsNil(o.OPTIONAL_CONDITION_MISSING) {
		return true
	}

	return false
}

// SetOPTIONAL_CONDITION_MISSING gets a reference to the given int32 and assigns it to the OPTIONAL_CONDITION_MISSING field.
func (o *CatalogsFeedValidationWarnings) SetOPTIONAL_CONDITION_MISSING(v int32) {
	o.OPTIONAL_CONDITION_MISSING = &v
}

// GetOPTIONAL_CONDITION_INVALID returns the OPTIONAL_CONDITION_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_CONDITION_INVALID() int32 {
	if o == nil || IsNil(o.OPTIONAL_CONDITION_INVALID) {
		var ret int32
		return ret
	}
	return *o.OPTIONAL_CONDITION_INVALID
}

// GetOPTIONAL_CONDITION_INVALIDOk returns a tuple with the OPTIONAL_CONDITION_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetOPTIONAL_CONDITION_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.OPTIONAL_CONDITION_INVALID) {
		return nil, false
	}
	return o.OPTIONAL_CONDITION_INVALID, true
}

// HasOPTIONAL_CONDITION_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasOPTIONAL_CONDITION_INVALID() bool {
	if o != nil && !IsNil(o.OPTIONAL_CONDITION_INVALID) {
		return true
	}

	return false
}

// SetOPTIONAL_CONDITION_INVALID gets a reference to the given int32 and assigns it to the OPTIONAL_CONDITION_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetOPTIONAL_CONDITION_INVALID(v int32) {
	o.OPTIONAL_CONDITION_INVALID = &v
}

// GetIOS_DEEP_LINK_INVALID returns the IOS_DEEP_LINK_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetIOS_DEEP_LINK_INVALID() int32 {
	if o == nil || IsNil(o.IOS_DEEP_LINK_INVALID) {
		var ret int32
		return ret
	}
	return *o.IOS_DEEP_LINK_INVALID
}

// GetIOS_DEEP_LINK_INVALIDOk returns a tuple with the IOS_DEEP_LINK_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetIOS_DEEP_LINK_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.IOS_DEEP_LINK_INVALID) {
		return nil, false
	}
	return o.IOS_DEEP_LINK_INVALID, true
}

// HasIOS_DEEP_LINK_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasIOS_DEEP_LINK_INVALID() bool {
	if o != nil && !IsNil(o.IOS_DEEP_LINK_INVALID) {
		return true
	}

	return false
}

// SetIOS_DEEP_LINK_INVALID gets a reference to the given int32 and assigns it to the IOS_DEEP_LINK_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetIOS_DEEP_LINK_INVALID(v int32) {
	o.IOS_DEEP_LINK_INVALID = &v
}

// GetANDROID_DEEP_LINK_INVALID returns the ANDROID_DEEP_LINK_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetANDROID_DEEP_LINK_INVALID() int32 {
	if o == nil || IsNil(o.ANDROID_DEEP_LINK_INVALID) {
		var ret int32
		return ret
	}
	return *o.ANDROID_DEEP_LINK_INVALID
}

// GetANDROID_DEEP_LINK_INVALIDOk returns a tuple with the ANDROID_DEEP_LINK_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetANDROID_DEEP_LINK_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.ANDROID_DEEP_LINK_INVALID) {
		return nil, false
	}
	return o.ANDROID_DEEP_LINK_INVALID, true
}

// HasANDROID_DEEP_LINK_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasANDROID_DEEP_LINK_INVALID() bool {
	if o != nil && !IsNil(o.ANDROID_DEEP_LINK_INVALID) {
		return true
	}

	return false
}

// SetANDROID_DEEP_LINK_INVALID gets a reference to the given int32 and assigns it to the ANDROID_DEEP_LINK_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetANDROID_DEEP_LINK_INVALID(v int32) {
	o.ANDROID_DEEP_LINK_INVALID = &v
}

// GetUTM_SOURCE_AUTO_CORRECTED returns the UTM_SOURCE_AUTO_CORRECTED field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetUTM_SOURCE_AUTO_CORRECTED() int32 {
	if o == nil || IsNil(o.UTM_SOURCE_AUTO_CORRECTED) {
		var ret int32
		return ret
	}
	return *o.UTM_SOURCE_AUTO_CORRECTED
}

// GetUTM_SOURCE_AUTO_CORRECTEDOk returns a tuple with the UTM_SOURCE_AUTO_CORRECTED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetUTM_SOURCE_AUTO_CORRECTEDOk() (*int32, bool) {
	if o == nil || IsNil(o.UTM_SOURCE_AUTO_CORRECTED) {
		return nil, false
	}
	return o.UTM_SOURCE_AUTO_CORRECTED, true
}

// HasUTM_SOURCE_AUTO_CORRECTED returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasUTM_SOURCE_AUTO_CORRECTED() bool {
	if o != nil && !IsNil(o.UTM_SOURCE_AUTO_CORRECTED) {
		return true
	}

	return false
}

// SetUTM_SOURCE_AUTO_CORRECTED gets a reference to the given int32 and assigns it to the UTM_SOURCE_AUTO_CORRECTED field.
func (o *CatalogsFeedValidationWarnings) SetUTM_SOURCE_AUTO_CORRECTED(v int32) {
	o.UTM_SOURCE_AUTO_CORRECTED = &v
}

// GetCOUNTRY_DOES_NOT_MAP_TO_CURRENCY returns the COUNTRY_DOES_NOT_MAP_TO_CURRENCY field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetCOUNTRY_DOES_NOT_MAP_TO_CURRENCY() int32 {
	if o == nil || IsNil(o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY) {
		var ret int32
		return ret
	}
	return *o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY
}

// GetCOUNTRY_DOES_NOT_MAP_TO_CURRENCYOk returns a tuple with the COUNTRY_DOES_NOT_MAP_TO_CURRENCY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetCOUNTRY_DOES_NOT_MAP_TO_CURRENCYOk() (*int32, bool) {
	if o == nil || IsNil(o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY) {
		return nil, false
	}
	return o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY, true
}

// HasCOUNTRY_DOES_NOT_MAP_TO_CURRENCY returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasCOUNTRY_DOES_NOT_MAP_TO_CURRENCY() bool {
	if o != nil && !IsNil(o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY) {
		return true
	}

	return false
}

// SetCOUNTRY_DOES_NOT_MAP_TO_CURRENCY gets a reference to the given int32 and assigns it to the COUNTRY_DOES_NOT_MAP_TO_CURRENCY field.
func (o *CatalogsFeedValidationWarnings) SetCOUNTRY_DOES_NOT_MAP_TO_CURRENCY(v int32) {
	o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY = &v
}

// GetMIN_AD_PRICE_INVALID returns the MIN_AD_PRICE_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetMIN_AD_PRICE_INVALID() int32 {
	if o == nil || IsNil(o.MIN_AD_PRICE_INVALID) {
		var ret int32
		return ret
	}
	return *o.MIN_AD_PRICE_INVALID
}

// GetMIN_AD_PRICE_INVALIDOk returns a tuple with the MIN_AD_PRICE_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetMIN_AD_PRICE_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.MIN_AD_PRICE_INVALID) {
		return nil, false
	}
	return o.MIN_AD_PRICE_INVALID, true
}

// HasMIN_AD_PRICE_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasMIN_AD_PRICE_INVALID() bool {
	if o != nil && !IsNil(o.MIN_AD_PRICE_INVALID) {
		return true
	}

	return false
}

// SetMIN_AD_PRICE_INVALID gets a reference to the given int32 and assigns it to the MIN_AD_PRICE_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetMIN_AD_PRICE_INVALID(v int32) {
	o.MIN_AD_PRICE_INVALID = &v
}

// GetGTIN_INVALID returns the GTIN_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetGTIN_INVALID() int32 {
	if o == nil || IsNil(o.GTIN_INVALID) {
		var ret int32
		return ret
	}
	return *o.GTIN_INVALID
}

// GetGTIN_INVALIDOk returns a tuple with the GTIN_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetGTIN_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.GTIN_INVALID) {
		return nil, false
	}
	return o.GTIN_INVALID, true
}

// HasGTIN_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasGTIN_INVALID() bool {
	if o != nil && !IsNil(o.GTIN_INVALID) {
		return true
	}

	return false
}

// SetGTIN_INVALID gets a reference to the given int32 and assigns it to the GTIN_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetGTIN_INVALID(v int32) {
	o.GTIN_INVALID = &v
}

// GetINCONSISTENT_CURRENCY_VALUES returns the INCONSISTENT_CURRENCY_VALUES field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetINCONSISTENT_CURRENCY_VALUES() int32 {
	if o == nil || IsNil(o.INCONSISTENT_CURRENCY_VALUES) {
		var ret int32
		return ret
	}
	return *o.INCONSISTENT_CURRENCY_VALUES
}

// GetINCONSISTENT_CURRENCY_VALUESOk returns a tuple with the INCONSISTENT_CURRENCY_VALUES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetINCONSISTENT_CURRENCY_VALUESOk() (*int32, bool) {
	if o == nil || IsNil(o.INCONSISTENT_CURRENCY_VALUES) {
		return nil, false
	}
	return o.INCONSISTENT_CURRENCY_VALUES, true
}

// HasINCONSISTENT_CURRENCY_VALUES returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasINCONSISTENT_CURRENCY_VALUES() bool {
	if o != nil && !IsNil(o.INCONSISTENT_CURRENCY_VALUES) {
		return true
	}

	return false
}

// SetINCONSISTENT_CURRENCY_VALUES gets a reference to the given int32 and assigns it to the INCONSISTENT_CURRENCY_VALUES field.
func (o *CatalogsFeedValidationWarnings) SetINCONSISTENT_CURRENCY_VALUES(v int32) {
	o.INCONSISTENT_CURRENCY_VALUES = &v
}

// GetSALES_PRICE_TOO_LOW returns the SALES_PRICE_TOO_LOW field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSALES_PRICE_TOO_LOW() int32 {
	if o == nil || IsNil(o.SALES_PRICE_TOO_LOW) {
		var ret int32
		return ret
	}
	return *o.SALES_PRICE_TOO_LOW
}

// GetSALES_PRICE_TOO_LOWOk returns a tuple with the SALES_PRICE_TOO_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSALES_PRICE_TOO_LOWOk() (*int32, bool) {
	if o == nil || IsNil(o.SALES_PRICE_TOO_LOW) {
		return nil, false
	}
	return o.SALES_PRICE_TOO_LOW, true
}

// HasSALES_PRICE_TOO_LOW returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSALES_PRICE_TOO_LOW() bool {
	if o != nil && !IsNil(o.SALES_PRICE_TOO_LOW) {
		return true
	}

	return false
}

// SetSALES_PRICE_TOO_LOW gets a reference to the given int32 and assigns it to the SALES_PRICE_TOO_LOW field.
func (o *CatalogsFeedValidationWarnings) SetSALES_PRICE_TOO_LOW(v int32) {
	o.SALES_PRICE_TOO_LOW = &v
}

// GetSHIPPING_WIDTH_INVALID returns the SHIPPING_WIDTH_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_WIDTH_INVALID() int32 {
	if o == nil || IsNil(o.SHIPPING_WIDTH_INVALID) {
		var ret int32
		return ret
	}
	return *o.SHIPPING_WIDTH_INVALID
}

// GetSHIPPING_WIDTH_INVALIDOk returns a tuple with the SHIPPING_WIDTH_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_WIDTH_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SHIPPING_WIDTH_INVALID) {
		return nil, false
	}
	return o.SHIPPING_WIDTH_INVALID, true
}

// HasSHIPPING_WIDTH_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSHIPPING_WIDTH_INVALID() bool {
	if o != nil && !IsNil(o.SHIPPING_WIDTH_INVALID) {
		return true
	}

	return false
}

// SetSHIPPING_WIDTH_INVALID gets a reference to the given int32 and assigns it to the SHIPPING_WIDTH_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSHIPPING_WIDTH_INVALID(v int32) {
	o.SHIPPING_WIDTH_INVALID = &v
}

// GetSHIPPING_HEIGHT_INVALID returns the SHIPPING_HEIGHT_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_HEIGHT_INVALID() int32 {
	if o == nil || IsNil(o.SHIPPING_HEIGHT_INVALID) {
		var ret int32
		return ret
	}
	return *o.SHIPPING_HEIGHT_INVALID
}

// GetSHIPPING_HEIGHT_INVALIDOk returns a tuple with the SHIPPING_HEIGHT_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSHIPPING_HEIGHT_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.SHIPPING_HEIGHT_INVALID) {
		return nil, false
	}
	return o.SHIPPING_HEIGHT_INVALID, true
}

// HasSHIPPING_HEIGHT_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSHIPPING_HEIGHT_INVALID() bool {
	if o != nil && !IsNil(o.SHIPPING_HEIGHT_INVALID) {
		return true
	}

	return false
}

// SetSHIPPING_HEIGHT_INVALID gets a reference to the given int32 and assigns it to the SHIPPING_HEIGHT_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetSHIPPING_HEIGHT_INVALID(v int32) {
	o.SHIPPING_HEIGHT_INVALID = &v
}

// GetSALES_PRICE_TOO_HIGH returns the SALES_PRICE_TOO_HIGH field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetSALES_PRICE_TOO_HIGH() int32 {
	if o == nil || IsNil(o.SALES_PRICE_TOO_HIGH) {
		var ret int32
		return ret
	}
	return *o.SALES_PRICE_TOO_HIGH
}

// GetSALES_PRICE_TOO_HIGHOk returns a tuple with the SALES_PRICE_TOO_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetSALES_PRICE_TOO_HIGHOk() (*int32, bool) {
	if o == nil || IsNil(o.SALES_PRICE_TOO_HIGH) {
		return nil, false
	}
	return o.SALES_PRICE_TOO_HIGH, true
}

// HasSALES_PRICE_TOO_HIGH returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasSALES_PRICE_TOO_HIGH() bool {
	if o != nil && !IsNil(o.SALES_PRICE_TOO_HIGH) {
		return true
	}

	return false
}

// SetSALES_PRICE_TOO_HIGH gets a reference to the given int32 and assigns it to the SALES_PRICE_TOO_HIGH field.
func (o *CatalogsFeedValidationWarnings) SetSALES_PRICE_TOO_HIGH(v int32) {
	o.SALES_PRICE_TOO_HIGH = &v
}

// GetMPN_INVALID returns the MPN_INVALID field value if set, zero value otherwise.
func (o *CatalogsFeedValidationWarnings) GetMPN_INVALID() int32 {
	if o == nil || IsNil(o.MPN_INVALID) {
		var ret int32
		return ret
	}
	return *o.MPN_INVALID
}

// GetMPN_INVALIDOk returns a tuple with the MPN_INVALID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedValidationWarnings) GetMPN_INVALIDOk() (*int32, bool) {
	if o == nil || IsNil(o.MPN_INVALID) {
		return nil, false
	}
	return o.MPN_INVALID, true
}

// HasMPN_INVALID returns a boolean if a field has been set.
func (o *CatalogsFeedValidationWarnings) HasMPN_INVALID() bool {
	if o != nil && !IsNil(o.MPN_INVALID) {
		return true
	}

	return false
}

// SetMPN_INVALID gets a reference to the given int32 and assigns it to the MPN_INVALID field.
func (o *CatalogsFeedValidationWarnings) SetMPN_INVALID(v int32) {
	o.MPN_INVALID = &v
}

func (o CatalogsFeedValidationWarnings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsFeedValidationWarnings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AD_LINK_FORMAT_WARNING) {
		toSerialize["AD_LINK_FORMAT_WARNING"] = o.AD_LINK_FORMAT_WARNING
	}
	if !IsNil(o.AD_LINK_SAME_AS_LINK) {
		toSerialize["AD_LINK_SAME_AS_LINK"] = o.AD_LINK_SAME_AS_LINK
	}
	if !IsNil(o.TITLE_LENGTH_TOO_LONG) {
		toSerialize["TITLE_LENGTH_TOO_LONG"] = o.TITLE_LENGTH_TOO_LONG
	}
	if !IsNil(o.DESCRIPTION_LENGTH_TOO_LONG) {
		toSerialize["DESCRIPTION_LENGTH_TOO_LONG"] = o.DESCRIPTION_LENGTH_TOO_LONG
	}
	if !IsNil(o.GENDER_INVALID) {
		toSerialize["GENDER_INVALID"] = o.GENDER_INVALID
	}
	if !IsNil(o.AGE_GROUP_INVALID) {
		toSerialize["AGE_GROUP_INVALID"] = o.AGE_GROUP_INVALID
	}
	if !IsNil(o.SIZE_TYPE_INVALID) {
		toSerialize["SIZE_TYPE_INVALID"] = o.SIZE_TYPE_INVALID
	}
	if !IsNil(o.SIZE_SYSTEM_INVALID) {
		toSerialize["SIZE_SYSTEM_INVALID"] = o.SIZE_SYSTEM_INVALID
	}
	if !IsNil(o.LINK_FORMAT_WARNING) {
		toSerialize["LINK_FORMAT_WARNING"] = o.LINK_FORMAT_WARNING
	}
	if !IsNil(o.SALES_PRICE_INVALID) {
		toSerialize["SALES_PRICE_INVALID"] = o.SALES_PRICE_INVALID
	}
	if !IsNil(o.PRODUCT_CATEGORY_DEPTH_WARNING) {
		toSerialize["PRODUCT_CATEGORY_DEPTH_WARNING"] = o.PRODUCT_CATEGORY_DEPTH_WARNING
	}
	if !IsNil(o.ADWORDS_FORMAT_WARNING) {
		toSerialize["ADWORDS_FORMAT_WARNING"] = o.ADWORDS_FORMAT_WARNING
	}
	if !IsNil(o.ADWORDS_SAME_AS_LINK) {
		toSerialize["ADWORDS_SAME_AS_LINK"] = o.ADWORDS_SAME_AS_LINK
	}
	if !IsNil(o.DUPLICATE_HEADERS) {
		toSerialize["DUPLICATE_HEADERS"] = o.DUPLICATE_HEADERS
	}
	if !IsNil(o.FETCH_SAME_SIGNATURE) {
		toSerialize["FETCH_SAME_SIGNATURE"] = o.FETCH_SAME_SIGNATURE
	}
	if !IsNil(o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG) {
		toSerialize["ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG"] = o.ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG
	}
	if !IsNil(o.ADDITIONAL_IMAGE_LINK_WARNING) {
		toSerialize["ADDITIONAL_IMAGE_LINK_WARNING"] = o.ADDITIONAL_IMAGE_LINK_WARNING
	}
	if !IsNil(o.IMAGE_LINK_WARNING) {
		toSerialize["IMAGE_LINK_WARNING"] = o.IMAGE_LINK_WARNING
	}
	if !IsNil(o.SHIPPING_INVALID) {
		toSerialize["SHIPPING_INVALID"] = o.SHIPPING_INVALID
	}
	if !IsNil(o.TAX_INVALID) {
		toSerialize["TAX_INVALID"] = o.TAX_INVALID
	}
	if !IsNil(o.SHIPPING_WEIGHT_INVALID) {
		toSerialize["SHIPPING_WEIGHT_INVALID"] = o.SHIPPING_WEIGHT_INVALID
	}
	if !IsNil(o.EXPIRATION_DATE_INVALID) {
		toSerialize["EXPIRATION_DATE_INVALID"] = o.EXPIRATION_DATE_INVALID
	}
	if !IsNil(o.AVAILABILITY_DATE_INVALID) {
		toSerialize["AVAILABILITY_DATE_INVALID"] = o.AVAILABILITY_DATE_INVALID
	}
	if !IsNil(o.SALE_DATE_INVALID) {
		toSerialize["SALE_DATE_INVALID"] = o.SALE_DATE_INVALID
	}
	if !IsNil(o.WEIGHT_UNIT_INVALID) {
		toSerialize["WEIGHT_UNIT_INVALID"] = o.WEIGHT_UNIT_INVALID
	}
	if !IsNil(o.IS_BUNDLE_INVALID) {
		toSerialize["IS_BUNDLE_INVALID"] = o.IS_BUNDLE_INVALID
	}
	if !IsNil(o.UPDATED_TIME_INVALID) {
		toSerialize["UPDATED_TIME_INVALID"] = o.UPDATED_TIME_INVALID
	}
	if !IsNil(o.CUSTOM_LABEL_LENGTH_TOO_LONG) {
		toSerialize["CUSTOM_LABEL_LENGTH_TOO_LONG"] = o.CUSTOM_LABEL_LENGTH_TOO_LONG
	}
	if !IsNil(o.PRODUCT_TYPE_LENGTH_TOO_LONG) {
		toSerialize["PRODUCT_TYPE_LENGTH_TOO_LONG"] = o.PRODUCT_TYPE_LENGTH_TOO_LONG
	}
	if !IsNil(o.TOO_MANY_ADDITIONAL_IMAGE_LINKS) {
		toSerialize["TOO_MANY_ADDITIONAL_IMAGE_LINKS"] = o.TOO_MANY_ADDITIONAL_IMAGE_LINKS
	}
	if !IsNil(o.MULTIPACK_INVALID) {
		toSerialize["MULTIPACK_INVALID"] = o.MULTIPACK_INVALID
	}
	if !IsNil(o.INDEXED_PRODUCT_COUNT_LARGE_DELTA) {
		toSerialize["INDEXED_PRODUCT_COUNT_LARGE_DELTA"] = o.INDEXED_PRODUCT_COUNT_LARGE_DELTA
	}
	if !IsNil(o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE) {
		toSerialize["ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE"] = o.ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE
	}
	if !IsNil(o.OPTIONAL_PRODUCT_CATEGORY_MISSING) {
		toSerialize["OPTIONAL_PRODUCT_CATEGORY_MISSING"] = o.OPTIONAL_PRODUCT_CATEGORY_MISSING
	}
	if !IsNil(o.OPTIONAL_PRODUCT_CATEGORY_INVALID) {
		toSerialize["OPTIONAL_PRODUCT_CATEGORY_INVALID"] = o.OPTIONAL_PRODUCT_CATEGORY_INVALID
	}
	if !IsNil(o.OPTIONAL_CONDITION_MISSING) {
		toSerialize["OPTIONAL_CONDITION_MISSING"] = o.OPTIONAL_CONDITION_MISSING
	}
	if !IsNil(o.OPTIONAL_CONDITION_INVALID) {
		toSerialize["OPTIONAL_CONDITION_INVALID"] = o.OPTIONAL_CONDITION_INVALID
	}
	if !IsNil(o.IOS_DEEP_LINK_INVALID) {
		toSerialize["IOS_DEEP_LINK_INVALID"] = o.IOS_DEEP_LINK_INVALID
	}
	if !IsNil(o.ANDROID_DEEP_LINK_INVALID) {
		toSerialize["ANDROID_DEEP_LINK_INVALID"] = o.ANDROID_DEEP_LINK_INVALID
	}
	if !IsNil(o.UTM_SOURCE_AUTO_CORRECTED) {
		toSerialize["UTM_SOURCE_AUTO_CORRECTED"] = o.UTM_SOURCE_AUTO_CORRECTED
	}
	if !IsNil(o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY) {
		toSerialize["COUNTRY_DOES_NOT_MAP_TO_CURRENCY"] = o.COUNTRY_DOES_NOT_MAP_TO_CURRENCY
	}
	if !IsNil(o.MIN_AD_PRICE_INVALID) {
		toSerialize["MIN_AD_PRICE_INVALID"] = o.MIN_AD_PRICE_INVALID
	}
	if !IsNil(o.GTIN_INVALID) {
		toSerialize["GTIN_INVALID"] = o.GTIN_INVALID
	}
	if !IsNil(o.INCONSISTENT_CURRENCY_VALUES) {
		toSerialize["INCONSISTENT_CURRENCY_VALUES"] = o.INCONSISTENT_CURRENCY_VALUES
	}
	if !IsNil(o.SALES_PRICE_TOO_LOW) {
		toSerialize["SALES_PRICE_TOO_LOW"] = o.SALES_PRICE_TOO_LOW
	}
	if !IsNil(o.SHIPPING_WIDTH_INVALID) {
		toSerialize["SHIPPING_WIDTH_INVALID"] = o.SHIPPING_WIDTH_INVALID
	}
	if !IsNil(o.SHIPPING_HEIGHT_INVALID) {
		toSerialize["SHIPPING_HEIGHT_INVALID"] = o.SHIPPING_HEIGHT_INVALID
	}
	if !IsNil(o.SALES_PRICE_TOO_HIGH) {
		toSerialize["SALES_PRICE_TOO_HIGH"] = o.SALES_PRICE_TOO_HIGH
	}
	if !IsNil(o.MPN_INVALID) {
		toSerialize["MPN_INVALID"] = o.MPN_INVALID
	}
	return toSerialize, nil
}

type NullableCatalogsFeedValidationWarnings struct {
	value *CatalogsFeedValidationWarnings
	isSet bool
}

func (v NullableCatalogsFeedValidationWarnings) Get() *CatalogsFeedValidationWarnings {
	return v.value
}

func (v *NullableCatalogsFeedValidationWarnings) Set(val *CatalogsFeedValidationWarnings) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsFeedValidationWarnings) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsFeedValidationWarnings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsFeedValidationWarnings(val *CatalogsFeedValidationWarnings) *NullableCatalogsFeedValidationWarnings {
	return &NullableCatalogsFeedValidationWarnings{value: val, isSet: true}
}

func (v NullableCatalogsFeedValidationWarnings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsFeedValidationWarnings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


