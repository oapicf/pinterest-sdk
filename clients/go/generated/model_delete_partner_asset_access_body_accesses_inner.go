/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeletePartnerAssetAccessBodyAccessesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePartnerAssetAccessBodyAccessesInner{}

// DeletePartnerAssetAccessBodyAccessesInner struct for DeletePartnerAssetAccessBodyAccessesInner
type DeletePartnerAssetAccessBodyAccessesInner struct {
	// Unique identifier of a business partner to update asset access to.
	PartnerId string `json:"partner_id" validate:"regexp=^\\\\d+$"`
	// Unique identifier of the business asset.
	AssetId string `json:"asset_id" validate:"regexp=^\\\\d+$"`
	// If partner_type=INTERNAL, the deleted asset access is for the access the partner has to your business asset.<br> If partner_type=EXTERNAL, the deleted asset access is for the access you have to the partner's business asset.
	PartnerType *string `json:"partner_type,omitempty"`
}

type _DeletePartnerAssetAccessBodyAccessesInner DeletePartnerAssetAccessBodyAccessesInner

// NewDeletePartnerAssetAccessBodyAccessesInner instantiates a new DeletePartnerAssetAccessBodyAccessesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePartnerAssetAccessBodyAccessesInner(partnerId string, assetId string) *DeletePartnerAssetAccessBodyAccessesInner {
	this := DeletePartnerAssetAccessBodyAccessesInner{}
	this.PartnerId = partnerId
	this.AssetId = assetId
	var partnerType string = "INTERNAL"
	this.PartnerType = &partnerType
	return &this
}

// NewDeletePartnerAssetAccessBodyAccessesInnerWithDefaults instantiates a new DeletePartnerAssetAccessBodyAccessesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePartnerAssetAccessBodyAccessesInnerWithDefaults() *DeletePartnerAssetAccessBodyAccessesInner {
	this := DeletePartnerAssetAccessBodyAccessesInner{}
	var partnerType string = "INTERNAL"
	this.PartnerType = &partnerType
	return &this
}

// GetPartnerId returns the PartnerId field value
func (o *DeletePartnerAssetAccessBodyAccessesInner) GetPartnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
func (o *DeletePartnerAssetAccessBodyAccessesInner) GetPartnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerId, true
}

// SetPartnerId sets field value
func (o *DeletePartnerAssetAccessBodyAccessesInner) SetPartnerId(v string) {
	o.PartnerId = v
}

// GetAssetId returns the AssetId field value
func (o *DeletePartnerAssetAccessBodyAccessesInner) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *DeletePartnerAssetAccessBodyAccessesInner) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *DeletePartnerAssetAccessBodyAccessesInner) SetAssetId(v string) {
	o.AssetId = v
}

// GetPartnerType returns the PartnerType field value if set, zero value otherwise.
func (o *DeletePartnerAssetAccessBodyAccessesInner) GetPartnerType() string {
	if o == nil || IsNil(o.PartnerType) {
		var ret string
		return ret
	}
	return *o.PartnerType
}

// GetPartnerTypeOk returns a tuple with the PartnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePartnerAssetAccessBodyAccessesInner) GetPartnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerType) {
		return nil, false
	}
	return o.PartnerType, true
}

// HasPartnerType returns a boolean if a field has been set.
func (o *DeletePartnerAssetAccessBodyAccessesInner) HasPartnerType() bool {
	if o != nil && !IsNil(o.PartnerType) {
		return true
	}

	return false
}

// SetPartnerType gets a reference to the given string and assigns it to the PartnerType field.
func (o *DeletePartnerAssetAccessBodyAccessesInner) SetPartnerType(v string) {
	o.PartnerType = &v
}

func (o DeletePartnerAssetAccessBodyAccessesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePartnerAssetAccessBodyAccessesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["partner_id"] = o.PartnerId
	toSerialize["asset_id"] = o.AssetId
	if !IsNil(o.PartnerType) {
		toSerialize["partner_type"] = o.PartnerType
	}
	return toSerialize, nil
}

func (o *DeletePartnerAssetAccessBodyAccessesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"partner_id",
		"asset_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeletePartnerAssetAccessBodyAccessesInner := _DeletePartnerAssetAccessBodyAccessesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeletePartnerAssetAccessBodyAccessesInner)

	if err != nil {
		return err
	}

	*o = DeletePartnerAssetAccessBodyAccessesInner(varDeletePartnerAssetAccessBodyAccessesInner)

	return err
}

type NullableDeletePartnerAssetAccessBodyAccessesInner struct {
	value *DeletePartnerAssetAccessBodyAccessesInner
	isSet bool
}

func (v NullableDeletePartnerAssetAccessBodyAccessesInner) Get() *DeletePartnerAssetAccessBodyAccessesInner {
	return v.value
}

func (v *NullableDeletePartnerAssetAccessBodyAccessesInner) Set(val *DeletePartnerAssetAccessBodyAccessesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePartnerAssetAccessBodyAccessesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePartnerAssetAccessBodyAccessesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePartnerAssetAccessBodyAccessesInner(val *DeletePartnerAssetAccessBodyAccessesInner) *NullableDeletePartnerAssetAccessBodyAccessesInner {
	return &NullableDeletePartnerAssetAccessBodyAccessesInner{value: val, isSet: true}
}

func (v NullableDeletePartnerAssetAccessBodyAccessesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePartnerAssetAccessBodyAccessesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


