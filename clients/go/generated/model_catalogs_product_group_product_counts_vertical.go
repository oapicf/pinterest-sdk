/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// CatalogsProductGroupProductCountsVertical - Product counts for a CatalogsProductGroup
type CatalogsProductGroupProductCountsVertical struct {
	CatalogsCreativeAssetsProductGroupProductCounts *CatalogsCreativeAssetsProductGroupProductCounts
	CatalogsHotelProductGroupProductCounts *CatalogsHotelProductGroupProductCounts
	CatalogsRetailProductGroupProductCounts *CatalogsRetailProductGroupProductCounts
}

// CatalogsCreativeAssetsProductGroupProductCountsAsCatalogsProductGroupProductCountsVertical is a convenience function that returns CatalogsCreativeAssetsProductGroupProductCounts wrapped in CatalogsProductGroupProductCountsVertical
func CatalogsCreativeAssetsProductGroupProductCountsAsCatalogsProductGroupProductCountsVertical(v *CatalogsCreativeAssetsProductGroupProductCounts) CatalogsProductGroupProductCountsVertical {
	return CatalogsProductGroupProductCountsVertical{
		CatalogsCreativeAssetsProductGroupProductCounts: v,
	}
}

// CatalogsHotelProductGroupProductCountsAsCatalogsProductGroupProductCountsVertical is a convenience function that returns CatalogsHotelProductGroupProductCounts wrapped in CatalogsProductGroupProductCountsVertical
func CatalogsHotelProductGroupProductCountsAsCatalogsProductGroupProductCountsVertical(v *CatalogsHotelProductGroupProductCounts) CatalogsProductGroupProductCountsVertical {
	return CatalogsProductGroupProductCountsVertical{
		CatalogsHotelProductGroupProductCounts: v,
	}
}

// CatalogsRetailProductGroupProductCountsAsCatalogsProductGroupProductCountsVertical is a convenience function that returns CatalogsRetailProductGroupProductCounts wrapped in CatalogsProductGroupProductCountsVertical
func CatalogsRetailProductGroupProductCountsAsCatalogsProductGroupProductCountsVertical(v *CatalogsRetailProductGroupProductCounts) CatalogsProductGroupProductCountsVertical {
	return CatalogsProductGroupProductCountsVertical{
		CatalogsRetailProductGroupProductCounts: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CatalogsProductGroupProductCountsVertical) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CatalogsCreativeAssetsProductGroupProductCounts
	err = newStrictDecoder(data).Decode(&dst.CatalogsCreativeAssetsProductGroupProductCounts)
	if err == nil {
		jsonCatalogsCreativeAssetsProductGroupProductCounts, _ := json.Marshal(dst.CatalogsCreativeAssetsProductGroupProductCounts)
		if string(jsonCatalogsCreativeAssetsProductGroupProductCounts) == "{}" { // empty struct
			dst.CatalogsCreativeAssetsProductGroupProductCounts = nil
		} else {
			if err = validator.Validate(dst.CatalogsCreativeAssetsProductGroupProductCounts); err != nil {
				dst.CatalogsCreativeAssetsProductGroupProductCounts = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsCreativeAssetsProductGroupProductCounts = nil
	}

	// try to unmarshal data into CatalogsHotelProductGroupProductCounts
	err = newStrictDecoder(data).Decode(&dst.CatalogsHotelProductGroupProductCounts)
	if err == nil {
		jsonCatalogsHotelProductGroupProductCounts, _ := json.Marshal(dst.CatalogsHotelProductGroupProductCounts)
		if string(jsonCatalogsHotelProductGroupProductCounts) == "{}" { // empty struct
			dst.CatalogsHotelProductGroupProductCounts = nil
		} else {
			if err = validator.Validate(dst.CatalogsHotelProductGroupProductCounts); err != nil {
				dst.CatalogsHotelProductGroupProductCounts = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsHotelProductGroupProductCounts = nil
	}

	// try to unmarshal data into CatalogsRetailProductGroupProductCounts
	err = newStrictDecoder(data).Decode(&dst.CatalogsRetailProductGroupProductCounts)
	if err == nil {
		jsonCatalogsRetailProductGroupProductCounts, _ := json.Marshal(dst.CatalogsRetailProductGroupProductCounts)
		if string(jsonCatalogsRetailProductGroupProductCounts) == "{}" { // empty struct
			dst.CatalogsRetailProductGroupProductCounts = nil
		} else {
			if err = validator.Validate(dst.CatalogsRetailProductGroupProductCounts); err != nil {
				dst.CatalogsRetailProductGroupProductCounts = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsRetailProductGroupProductCounts = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CatalogsCreativeAssetsProductGroupProductCounts = nil
		dst.CatalogsHotelProductGroupProductCounts = nil
		dst.CatalogsRetailProductGroupProductCounts = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CatalogsProductGroupProductCountsVertical)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CatalogsProductGroupProductCountsVertical)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CatalogsProductGroupProductCountsVertical) MarshalJSON() ([]byte, error) {
	if src.CatalogsCreativeAssetsProductGroupProductCounts != nil {
		return json.Marshal(&src.CatalogsCreativeAssetsProductGroupProductCounts)
	}

	if src.CatalogsHotelProductGroupProductCounts != nil {
		return json.Marshal(&src.CatalogsHotelProductGroupProductCounts)
	}

	if src.CatalogsRetailProductGroupProductCounts != nil {
		return json.Marshal(&src.CatalogsRetailProductGroupProductCounts)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CatalogsProductGroupProductCountsVertical) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CatalogsCreativeAssetsProductGroupProductCounts != nil {
		return obj.CatalogsCreativeAssetsProductGroupProductCounts
	}

	if obj.CatalogsHotelProductGroupProductCounts != nil {
		return obj.CatalogsHotelProductGroupProductCounts
	}

	if obj.CatalogsRetailProductGroupProductCounts != nil {
		return obj.CatalogsRetailProductGroupProductCounts
	}

	// all schemas are nil
	return nil
}

type NullableCatalogsProductGroupProductCountsVertical struct {
	value *CatalogsProductGroupProductCountsVertical
	isSet bool
}

func (v NullableCatalogsProductGroupProductCountsVertical) Get() *CatalogsProductGroupProductCountsVertical {
	return v.value
}

func (v *NullableCatalogsProductGroupProductCountsVertical) Set(val *CatalogsProductGroupProductCountsVertical) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupProductCountsVertical) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupProductCountsVertical) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupProductCountsVertical(val *CatalogsProductGroupProductCountsVertical) *NullableCatalogsProductGroupProductCountsVertical {
	return &NullableCatalogsProductGroupProductCountsVertical{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupProductCountsVertical) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupProductCountsVertical) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


