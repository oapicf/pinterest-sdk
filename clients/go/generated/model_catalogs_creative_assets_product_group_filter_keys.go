/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// CatalogsCreativeAssetsProductGroupFilterKeys struct for CatalogsCreativeAssetsProductGroupFilterKeys
type CatalogsCreativeAssetsProductGroupFilterKeys struct {
	CreativeAssetsIdFilter *CreativeAssetsIdFilter
	CustomLabel0Filter *CustomLabel0Filter
	CustomLabel1Filter *CustomLabel1Filter
	CustomLabel2Filter *CustomLabel2Filter
	CustomLabel3Filter *CustomLabel3Filter
	CustomLabel4Filter *CustomLabel4Filter
	GoogleProductCategory0Filter *GoogleProductCategory0Filter
	GoogleProductCategory1Filter *GoogleProductCategory1Filter
	GoogleProductCategory2Filter *GoogleProductCategory2Filter
	GoogleProductCategory3Filter *GoogleProductCategory3Filter
	GoogleProductCategory4Filter *GoogleProductCategory4Filter
	GoogleProductCategory5Filter *GoogleProductCategory5Filter
	GoogleProductCategory6Filter *GoogleProductCategory6Filter
	MediaTypeFilter *MediaTypeFilter
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CatalogsCreativeAssetsProductGroupFilterKeys) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CreativeAssetsIdFilter
	err = json.Unmarshal(data, &dst.CreativeAssetsIdFilter);
	if err == nil {
		jsonCreativeAssetsIdFilter, _ := json.Marshal(dst.CreativeAssetsIdFilter)
		if string(jsonCreativeAssetsIdFilter) == "{}" { // empty struct
			dst.CreativeAssetsIdFilter = nil
		} else {
			return nil // data stored in dst.CreativeAssetsIdFilter, return on the first match
		}
	} else {
		dst.CreativeAssetsIdFilter = nil
	}

	// try to unmarshal JSON data into CustomLabel0Filter
	err = json.Unmarshal(data, &dst.CustomLabel0Filter);
	if err == nil {
		jsonCustomLabel0Filter, _ := json.Marshal(dst.CustomLabel0Filter)
		if string(jsonCustomLabel0Filter) == "{}" { // empty struct
			dst.CustomLabel0Filter = nil
		} else {
			return nil // data stored in dst.CustomLabel0Filter, return on the first match
		}
	} else {
		dst.CustomLabel0Filter = nil
	}

	// try to unmarshal JSON data into CustomLabel1Filter
	err = json.Unmarshal(data, &dst.CustomLabel1Filter);
	if err == nil {
		jsonCustomLabel1Filter, _ := json.Marshal(dst.CustomLabel1Filter)
		if string(jsonCustomLabel1Filter) == "{}" { // empty struct
			dst.CustomLabel1Filter = nil
		} else {
			return nil // data stored in dst.CustomLabel1Filter, return on the first match
		}
	} else {
		dst.CustomLabel1Filter = nil
	}

	// try to unmarshal JSON data into CustomLabel2Filter
	err = json.Unmarshal(data, &dst.CustomLabel2Filter);
	if err == nil {
		jsonCustomLabel2Filter, _ := json.Marshal(dst.CustomLabel2Filter)
		if string(jsonCustomLabel2Filter) == "{}" { // empty struct
			dst.CustomLabel2Filter = nil
		} else {
			return nil // data stored in dst.CustomLabel2Filter, return on the first match
		}
	} else {
		dst.CustomLabel2Filter = nil
	}

	// try to unmarshal JSON data into CustomLabel3Filter
	err = json.Unmarshal(data, &dst.CustomLabel3Filter);
	if err == nil {
		jsonCustomLabel3Filter, _ := json.Marshal(dst.CustomLabel3Filter)
		if string(jsonCustomLabel3Filter) == "{}" { // empty struct
			dst.CustomLabel3Filter = nil
		} else {
			return nil // data stored in dst.CustomLabel3Filter, return on the first match
		}
	} else {
		dst.CustomLabel3Filter = nil
	}

	// try to unmarshal JSON data into CustomLabel4Filter
	err = json.Unmarshal(data, &dst.CustomLabel4Filter);
	if err == nil {
		jsonCustomLabel4Filter, _ := json.Marshal(dst.CustomLabel4Filter)
		if string(jsonCustomLabel4Filter) == "{}" { // empty struct
			dst.CustomLabel4Filter = nil
		} else {
			return nil // data stored in dst.CustomLabel4Filter, return on the first match
		}
	} else {
		dst.CustomLabel4Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory0Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory0Filter);
	if err == nil {
		jsonGoogleProductCategory0Filter, _ := json.Marshal(dst.GoogleProductCategory0Filter)
		if string(jsonGoogleProductCategory0Filter) == "{}" { // empty struct
			dst.GoogleProductCategory0Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory0Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory0Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory1Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory1Filter);
	if err == nil {
		jsonGoogleProductCategory1Filter, _ := json.Marshal(dst.GoogleProductCategory1Filter)
		if string(jsonGoogleProductCategory1Filter) == "{}" { // empty struct
			dst.GoogleProductCategory1Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory1Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory1Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory2Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory2Filter);
	if err == nil {
		jsonGoogleProductCategory2Filter, _ := json.Marshal(dst.GoogleProductCategory2Filter)
		if string(jsonGoogleProductCategory2Filter) == "{}" { // empty struct
			dst.GoogleProductCategory2Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory2Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory2Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory3Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory3Filter);
	if err == nil {
		jsonGoogleProductCategory3Filter, _ := json.Marshal(dst.GoogleProductCategory3Filter)
		if string(jsonGoogleProductCategory3Filter) == "{}" { // empty struct
			dst.GoogleProductCategory3Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory3Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory3Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory4Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory4Filter);
	if err == nil {
		jsonGoogleProductCategory4Filter, _ := json.Marshal(dst.GoogleProductCategory4Filter)
		if string(jsonGoogleProductCategory4Filter) == "{}" { // empty struct
			dst.GoogleProductCategory4Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory4Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory4Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory5Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory5Filter);
	if err == nil {
		jsonGoogleProductCategory5Filter, _ := json.Marshal(dst.GoogleProductCategory5Filter)
		if string(jsonGoogleProductCategory5Filter) == "{}" { // empty struct
			dst.GoogleProductCategory5Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory5Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory5Filter = nil
	}

	// try to unmarshal JSON data into GoogleProductCategory6Filter
	err = json.Unmarshal(data, &dst.GoogleProductCategory6Filter);
	if err == nil {
		jsonGoogleProductCategory6Filter, _ := json.Marshal(dst.GoogleProductCategory6Filter)
		if string(jsonGoogleProductCategory6Filter) == "{}" { // empty struct
			dst.GoogleProductCategory6Filter = nil
		} else {
			return nil // data stored in dst.GoogleProductCategory6Filter, return on the first match
		}
	} else {
		dst.GoogleProductCategory6Filter = nil
	}

	// try to unmarshal JSON data into MediaTypeFilter
	err = json.Unmarshal(data, &dst.MediaTypeFilter);
	if err == nil {
		jsonMediaTypeFilter, _ := json.Marshal(dst.MediaTypeFilter)
		if string(jsonMediaTypeFilter) == "{}" { // empty struct
			dst.MediaTypeFilter = nil
		} else {
			return nil // data stored in dst.MediaTypeFilter, return on the first match
		}
	} else {
		dst.MediaTypeFilter = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CatalogsCreativeAssetsProductGroupFilterKeys)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *CatalogsCreativeAssetsProductGroupFilterKeys) MarshalJSON() ([]byte, error) {
	if src.CreativeAssetsIdFilter != nil {
		return json.Marshal(&src.CreativeAssetsIdFilter)
	}

	if src.CustomLabel0Filter != nil {
		return json.Marshal(&src.CustomLabel0Filter)
	}

	if src.CustomLabel1Filter != nil {
		return json.Marshal(&src.CustomLabel1Filter)
	}

	if src.CustomLabel2Filter != nil {
		return json.Marshal(&src.CustomLabel2Filter)
	}

	if src.CustomLabel3Filter != nil {
		return json.Marshal(&src.CustomLabel3Filter)
	}

	if src.CustomLabel4Filter != nil {
		return json.Marshal(&src.CustomLabel4Filter)
	}

	if src.GoogleProductCategory0Filter != nil {
		return json.Marshal(&src.GoogleProductCategory0Filter)
	}

	if src.GoogleProductCategory1Filter != nil {
		return json.Marshal(&src.GoogleProductCategory1Filter)
	}

	if src.GoogleProductCategory2Filter != nil {
		return json.Marshal(&src.GoogleProductCategory2Filter)
	}

	if src.GoogleProductCategory3Filter != nil {
		return json.Marshal(&src.GoogleProductCategory3Filter)
	}

	if src.GoogleProductCategory4Filter != nil {
		return json.Marshal(&src.GoogleProductCategory4Filter)
	}

	if src.GoogleProductCategory5Filter != nil {
		return json.Marshal(&src.GoogleProductCategory5Filter)
	}

	if src.GoogleProductCategory6Filter != nil {
		return json.Marshal(&src.GoogleProductCategory6Filter)
	}

	if src.MediaTypeFilter != nil {
		return json.Marshal(&src.MediaTypeFilter)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableCatalogsCreativeAssetsProductGroupFilterKeys struct {
	value *CatalogsCreativeAssetsProductGroupFilterKeys
	isSet bool
}

func (v NullableCatalogsCreativeAssetsProductGroupFilterKeys) Get() *CatalogsCreativeAssetsProductGroupFilterKeys {
	return v.value
}

func (v *NullableCatalogsCreativeAssetsProductGroupFilterKeys) Set(val *CatalogsCreativeAssetsProductGroupFilterKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsCreativeAssetsProductGroupFilterKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsCreativeAssetsProductGroupFilterKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsCreativeAssetsProductGroupFilterKeys(val *CatalogsCreativeAssetsProductGroupFilterKeys) *NullableCatalogsCreativeAssetsProductGroupFilterKeys {
	return &NullableCatalogsCreativeAssetsProductGroupFilterKeys{value: val, isSet: true}
}

func (v NullableCatalogsCreativeAssetsProductGroupFilterKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsCreativeAssetsProductGroupFilterKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


