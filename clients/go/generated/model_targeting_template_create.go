/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TargetingTemplateCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetingTemplateCreate{}

// TargetingTemplateCreate struct for TargetingTemplateCreate
type TargetingTemplateCreate struct {
	// Name of targeting template.
	Name string `json:"name"`
	// Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
	AutoTargetingEnabled *bool `json:"auto_targeting_enabled,omitempty"`
	TargetingAttributes TargetingSpec `json:"targeting_attributes"`
	PlacementGroup *PlacementGroupType `json:"placement_group,omitempty"`
	Keywords []TargetingTemplateKeyword `json:"keywords,omitempty"`
	TrackingUrls NullableTrackingUrls `json:"tracking_urls,omitempty"`
}

type _TargetingTemplateCreate TargetingTemplateCreate

// NewTargetingTemplateCreate instantiates a new TargetingTemplateCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetingTemplateCreate(name string, targetingAttributes TargetingSpec) *TargetingTemplateCreate {
	this := TargetingTemplateCreate{}
	this.Name = name
	var autoTargetingEnabled bool = true
	this.AutoTargetingEnabled = &autoTargetingEnabled
	this.TargetingAttributes = targetingAttributes
	var placementGroup PlacementGroupType = ALL
	this.PlacementGroup = &placementGroup
	return &this
}

// NewTargetingTemplateCreateWithDefaults instantiates a new TargetingTemplateCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetingTemplateCreateWithDefaults() *TargetingTemplateCreate {
	this := TargetingTemplateCreate{}
	var autoTargetingEnabled bool = true
	this.AutoTargetingEnabled = &autoTargetingEnabled
	var placementGroup PlacementGroupType = ALL
	this.PlacementGroup = &placementGroup
	return &this
}

// GetName returns the Name field value
func (o *TargetingTemplateCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TargetingTemplateCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TargetingTemplateCreate) SetName(v string) {
	o.Name = v
}

// GetAutoTargetingEnabled returns the AutoTargetingEnabled field value if set, zero value otherwise.
func (o *TargetingTemplateCreate) GetAutoTargetingEnabled() bool {
	if o == nil || IsNil(o.AutoTargetingEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoTargetingEnabled
}

// GetAutoTargetingEnabledOk returns a tuple with the AutoTargetingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetingTemplateCreate) GetAutoTargetingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoTargetingEnabled) {
		return nil, false
	}
	return o.AutoTargetingEnabled, true
}

// HasAutoTargetingEnabled returns a boolean if a field has been set.
func (o *TargetingTemplateCreate) HasAutoTargetingEnabled() bool {
	if o != nil && !IsNil(o.AutoTargetingEnabled) {
		return true
	}

	return false
}

// SetAutoTargetingEnabled gets a reference to the given bool and assigns it to the AutoTargetingEnabled field.
func (o *TargetingTemplateCreate) SetAutoTargetingEnabled(v bool) {
	o.AutoTargetingEnabled = &v
}

// GetTargetingAttributes returns the TargetingAttributes field value
func (o *TargetingTemplateCreate) GetTargetingAttributes() TargetingSpec {
	if o == nil {
		var ret TargetingSpec
		return ret
	}

	return o.TargetingAttributes
}

// GetTargetingAttributesOk returns a tuple with the TargetingAttributes field value
// and a boolean to check if the value has been set.
func (o *TargetingTemplateCreate) GetTargetingAttributesOk() (*TargetingSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetingAttributes, true
}

// SetTargetingAttributes sets field value
func (o *TargetingTemplateCreate) SetTargetingAttributes(v TargetingSpec) {
	o.TargetingAttributes = v
}

// GetPlacementGroup returns the PlacementGroup field value if set, zero value otherwise.
func (o *TargetingTemplateCreate) GetPlacementGroup() PlacementGroupType {
	if o == nil || IsNil(o.PlacementGroup) {
		var ret PlacementGroupType
		return ret
	}
	return *o.PlacementGroup
}

// GetPlacementGroupOk returns a tuple with the PlacementGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetingTemplateCreate) GetPlacementGroupOk() (*PlacementGroupType, bool) {
	if o == nil || IsNil(o.PlacementGroup) {
		return nil, false
	}
	return o.PlacementGroup, true
}

// HasPlacementGroup returns a boolean if a field has been set.
func (o *TargetingTemplateCreate) HasPlacementGroup() bool {
	if o != nil && !IsNil(o.PlacementGroup) {
		return true
	}

	return false
}

// SetPlacementGroup gets a reference to the given PlacementGroupType and assigns it to the PlacementGroup field.
func (o *TargetingTemplateCreate) SetPlacementGroup(v PlacementGroupType) {
	o.PlacementGroup = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *TargetingTemplateCreate) GetKeywords() []TargetingTemplateKeyword {
	if o == nil || IsNil(o.Keywords) {
		var ret []TargetingTemplateKeyword
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetingTemplateCreate) GetKeywordsOk() ([]TargetingTemplateKeyword, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *TargetingTemplateCreate) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []TargetingTemplateKeyword and assigns it to the Keywords field.
func (o *TargetingTemplateCreate) SetKeywords(v []TargetingTemplateKeyword) {
	o.Keywords = v
}

// GetTrackingUrls returns the TrackingUrls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingTemplateCreate) GetTrackingUrls() TrackingUrls {
	if o == nil || IsNil(o.TrackingUrls.Get()) {
		var ret TrackingUrls
		return ret
	}
	return *o.TrackingUrls.Get()
}

// GetTrackingUrlsOk returns a tuple with the TrackingUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingTemplateCreate) GetTrackingUrlsOk() (*TrackingUrls, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackingUrls.Get(), o.TrackingUrls.IsSet()
}

// HasTrackingUrls returns a boolean if a field has been set.
func (o *TargetingTemplateCreate) HasTrackingUrls() bool {
	if o != nil && o.TrackingUrls.IsSet() {
		return true
	}

	return false
}

// SetTrackingUrls gets a reference to the given NullableTrackingUrls and assigns it to the TrackingUrls field.
func (o *TargetingTemplateCreate) SetTrackingUrls(v TrackingUrls) {
	o.TrackingUrls.Set(&v)
}
// SetTrackingUrlsNil sets the value for TrackingUrls to be an explicit nil
func (o *TargetingTemplateCreate) SetTrackingUrlsNil() {
	o.TrackingUrls.Set(nil)
}

// UnsetTrackingUrls ensures that no value is present for TrackingUrls, not even an explicit nil
func (o *TargetingTemplateCreate) UnsetTrackingUrls() {
	o.TrackingUrls.Unset()
}

func (o TargetingTemplateCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetingTemplateCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.AutoTargetingEnabled) {
		toSerialize["auto_targeting_enabled"] = o.AutoTargetingEnabled
	}
	toSerialize["targeting_attributes"] = o.TargetingAttributes
	if !IsNil(o.PlacementGroup) {
		toSerialize["placement_group"] = o.PlacementGroup
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if o.TrackingUrls.IsSet() {
		toSerialize["tracking_urls"] = o.TrackingUrls.Get()
	}
	return toSerialize, nil
}

func (o *TargetingTemplateCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"targeting_attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTargetingTemplateCreate := _TargetingTemplateCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTargetingTemplateCreate)

	if err != nil {
		return err
	}

	*o = TargetingTemplateCreate(varTargetingTemplateCreate)

	return err
}

type NullableTargetingTemplateCreate struct {
	value *TargetingTemplateCreate
	isSet bool
}

func (v NullableTargetingTemplateCreate) Get() *TargetingTemplateCreate {
	return v.value
}

func (v *NullableTargetingTemplateCreate) Set(val *TargetingTemplateCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetingTemplateCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetingTemplateCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetingTemplateCreate(val *TargetingTemplateCreate) *NullableTargetingTemplateCreate {
	return &NullableTargetingTemplateCreate{value: val, isSet: true}
}

func (v NullableTargetingTemplateCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetingTemplateCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


