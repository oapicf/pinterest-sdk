/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BusinessSharedAudience type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessSharedAudience{}

// BusinessSharedAudience struct for BusinessSharedAudience
type BusinessSharedAudience struct {
	// Unique identifier of an audience
	AudienceId string `json:"audience_id" validate:"regexp=^\\\\d+$"`
	OperationType OperationType `json:"operation_type"`
	// List of business IDs to share with or revoke from.
	RecipientBusinessIds []string `json:"recipient_business_ids"`
}

type _BusinessSharedAudience BusinessSharedAudience

// NewBusinessSharedAudience instantiates a new BusinessSharedAudience object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessSharedAudience(audienceId string, operationType OperationType, recipientBusinessIds []string) *BusinessSharedAudience {
	this := BusinessSharedAudience{}
	this.AudienceId = audienceId
	this.OperationType = operationType
	this.RecipientBusinessIds = recipientBusinessIds
	return &this
}

// NewBusinessSharedAudienceWithDefaults instantiates a new BusinessSharedAudience object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessSharedAudienceWithDefaults() *BusinessSharedAudience {
	this := BusinessSharedAudience{}
	return &this
}

// GetAudienceId returns the AudienceId field value
func (o *BusinessSharedAudience) GetAudienceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AudienceId
}

// GetAudienceIdOk returns a tuple with the AudienceId field value
// and a boolean to check if the value has been set.
func (o *BusinessSharedAudience) GetAudienceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AudienceId, true
}

// SetAudienceId sets field value
func (o *BusinessSharedAudience) SetAudienceId(v string) {
	o.AudienceId = v
}

// GetOperationType returns the OperationType field value
func (o *BusinessSharedAudience) GetOperationType() OperationType {
	if o == nil {
		var ret OperationType
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *BusinessSharedAudience) GetOperationTypeOk() (*OperationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *BusinessSharedAudience) SetOperationType(v OperationType) {
	o.OperationType = v
}

// GetRecipientBusinessIds returns the RecipientBusinessIds field value
func (o *BusinessSharedAudience) GetRecipientBusinessIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecipientBusinessIds
}

// GetRecipientBusinessIdsOk returns a tuple with the RecipientBusinessIds field value
// and a boolean to check if the value has been set.
func (o *BusinessSharedAudience) GetRecipientBusinessIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecipientBusinessIds, true
}

// SetRecipientBusinessIds sets field value
func (o *BusinessSharedAudience) SetRecipientBusinessIds(v []string) {
	o.RecipientBusinessIds = v
}

func (o BusinessSharedAudience) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessSharedAudience) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audience_id"] = o.AudienceId
	toSerialize["operation_type"] = o.OperationType
	toSerialize["recipient_business_ids"] = o.RecipientBusinessIds
	return toSerialize, nil
}

func (o *BusinessSharedAudience) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"audience_id",
		"operation_type",
		"recipient_business_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBusinessSharedAudience := _BusinessSharedAudience{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBusinessSharedAudience)

	if err != nil {
		return err
	}

	*o = BusinessSharedAudience(varBusinessSharedAudience)

	return err
}

type NullableBusinessSharedAudience struct {
	value *BusinessSharedAudience
	isSet bool
}

func (v NullableBusinessSharedAudience) Get() *BusinessSharedAudience {
	return v.value
}

func (v *NullableBusinessSharedAudience) Set(val *BusinessSharedAudience) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessSharedAudience) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessSharedAudience) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessSharedAudience(val *BusinessSharedAudience) *NullableBusinessSharedAudience {
	return &NullableBusinessSharedAudience{value: val, isSet: true}
}

func (v NullableBusinessSharedAudience) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessSharedAudience) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


