/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateResponseDateRangeRelativeDateRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseDateRangeRelativeDateRange{}

// TemplateResponseDateRangeRelativeDateRange The relative date range of the template
type TemplateResponseDateRangeRelativeDateRange struct {
	// The date range type
	Type *string `json:"type,omitempty"`
	// The start date of the date range
	StartDaysInPast *float32 `json:"start_days_in_past,omitempty"`
	// The end date of the date range
	EndDaysInPast *float32 `json:"end_days_in_past,omitempty"`
}

// NewTemplateResponseDateRangeRelativeDateRange instantiates a new TemplateResponseDateRangeRelativeDateRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseDateRangeRelativeDateRange() *TemplateResponseDateRangeRelativeDateRange {
	this := TemplateResponseDateRangeRelativeDateRange{}
	return &this
}

// NewTemplateResponseDateRangeRelativeDateRangeWithDefaults instantiates a new TemplateResponseDateRangeRelativeDateRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseDateRangeRelativeDateRangeWithDefaults() *TemplateResponseDateRangeRelativeDateRange {
	this := TemplateResponseDateRangeRelativeDateRange{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeRelativeDateRange) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeRelativeDateRange) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeRelativeDateRange) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TemplateResponseDateRangeRelativeDateRange) SetType(v string) {
	o.Type = &v
}

// GetStartDaysInPast returns the StartDaysInPast field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeRelativeDateRange) GetStartDaysInPast() float32 {
	if o == nil || IsNil(o.StartDaysInPast) {
		var ret float32
		return ret
	}
	return *o.StartDaysInPast
}

// GetStartDaysInPastOk returns a tuple with the StartDaysInPast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeRelativeDateRange) GetStartDaysInPastOk() (*float32, bool) {
	if o == nil || IsNil(o.StartDaysInPast) {
		return nil, false
	}
	return o.StartDaysInPast, true
}

// HasStartDaysInPast returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeRelativeDateRange) HasStartDaysInPast() bool {
	if o != nil && !IsNil(o.StartDaysInPast) {
		return true
	}

	return false
}

// SetStartDaysInPast gets a reference to the given float32 and assigns it to the StartDaysInPast field.
func (o *TemplateResponseDateRangeRelativeDateRange) SetStartDaysInPast(v float32) {
	o.StartDaysInPast = &v
}

// GetEndDaysInPast returns the EndDaysInPast field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeRelativeDateRange) GetEndDaysInPast() float32 {
	if o == nil || IsNil(o.EndDaysInPast) {
		var ret float32
		return ret
	}
	return *o.EndDaysInPast
}

// GetEndDaysInPastOk returns a tuple with the EndDaysInPast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeRelativeDateRange) GetEndDaysInPastOk() (*float32, bool) {
	if o == nil || IsNil(o.EndDaysInPast) {
		return nil, false
	}
	return o.EndDaysInPast, true
}

// HasEndDaysInPast returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeRelativeDateRange) HasEndDaysInPast() bool {
	if o != nil && !IsNil(o.EndDaysInPast) {
		return true
	}

	return false
}

// SetEndDaysInPast gets a reference to the given float32 and assigns it to the EndDaysInPast field.
func (o *TemplateResponseDateRangeRelativeDateRange) SetEndDaysInPast(v float32) {
	o.EndDaysInPast = &v
}

func (o TemplateResponseDateRangeRelativeDateRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseDateRangeRelativeDateRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.StartDaysInPast) {
		toSerialize["start_days_in_past"] = o.StartDaysInPast
	}
	if !IsNil(o.EndDaysInPast) {
		toSerialize["end_days_in_past"] = o.EndDaysInPast
	}
	return toSerialize, nil
}

type NullableTemplateResponseDateRangeRelativeDateRange struct {
	value *TemplateResponseDateRangeRelativeDateRange
	isSet bool
}

func (v NullableTemplateResponseDateRangeRelativeDateRange) Get() *TemplateResponseDateRangeRelativeDateRange {
	return v.value
}

func (v *NullableTemplateResponseDateRangeRelativeDateRange) Set(val *TemplateResponseDateRangeRelativeDateRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseDateRangeRelativeDateRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseDateRangeRelativeDateRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseDateRangeRelativeDateRange(val *TemplateResponseDateRangeRelativeDateRange) *NullableTemplateResponseDateRangeRelativeDateRange {
	return &NullableTemplateResponseDateRangeRelativeDateRange{value: val, isSet: true}
}

func (v NullableTemplateResponseDateRangeRelativeDateRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseDateRangeRelativeDateRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


