/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogsFeedsUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsFeedsUpdateRequest{}

// CatalogsFeedsUpdateRequest Request object for updating a feed.
type CatalogsFeedsUpdateRequest struct {
	DefaultAvailability NullableProductAvailabilityType `json:"default_availability,omitempty"`
	DefaultCurrency NullableNullableCurrency `json:"default_currency,omitempty"`
	// A human-friendly name associated to a given feed.
	Name *string `json:"name,omitempty"`
	Format *CatalogsFormat `json:"format,omitempty"`
	Credentials NullableCatalogsFeedCredentials `json:"credentials,omitempty"`
	// The URL where a feed is available for download. This URL is what Pinterest will use to download a feed for processing.
	Location *string `json:"location,omitempty" validate:"regexp=^(http|https|ftp|sftp):\\/\\/"`
	PreferredProcessingSchedule NullableCatalogsFeedProcessingSchedule `json:"preferred_processing_schedule,omitempty"`
	Status *CatalogsStatus `json:"status,omitempty"`
}

// NewCatalogsFeedsUpdateRequest instantiates a new CatalogsFeedsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsFeedsUpdateRequest() *CatalogsFeedsUpdateRequest {
	this := CatalogsFeedsUpdateRequest{}
	return &this
}

// NewCatalogsFeedsUpdateRequestWithDefaults instantiates a new CatalogsFeedsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsFeedsUpdateRequestWithDefaults() *CatalogsFeedsUpdateRequest {
	this := CatalogsFeedsUpdateRequest{}
	return &this
}

// GetDefaultAvailability returns the DefaultAvailability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsFeedsUpdateRequest) GetDefaultAvailability() ProductAvailabilityType {
	if o == nil || IsNil(o.DefaultAvailability.Get()) {
		var ret ProductAvailabilityType
		return ret
	}
	return *o.DefaultAvailability.Get()
}

// GetDefaultAvailabilityOk returns a tuple with the DefaultAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsFeedsUpdateRequest) GetDefaultAvailabilityOk() (*ProductAvailabilityType, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultAvailability.Get(), o.DefaultAvailability.IsSet()
}

// HasDefaultAvailability returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasDefaultAvailability() bool {
	if o != nil && o.DefaultAvailability.IsSet() {
		return true
	}

	return false
}

// SetDefaultAvailability gets a reference to the given NullableProductAvailabilityType and assigns it to the DefaultAvailability field.
func (o *CatalogsFeedsUpdateRequest) SetDefaultAvailability(v ProductAvailabilityType) {
	o.DefaultAvailability.Set(&v)
}
// SetDefaultAvailabilityNil sets the value for DefaultAvailability to be an explicit nil
func (o *CatalogsFeedsUpdateRequest) SetDefaultAvailabilityNil() {
	o.DefaultAvailability.Set(nil)
}

// UnsetDefaultAvailability ensures that no value is present for DefaultAvailability, not even an explicit nil
func (o *CatalogsFeedsUpdateRequest) UnsetDefaultAvailability() {
	o.DefaultAvailability.Unset()
}

// GetDefaultCurrency returns the DefaultCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsFeedsUpdateRequest) GetDefaultCurrency() NullableCurrency {
	if o == nil || IsNil(o.DefaultCurrency.Get()) {
		var ret NullableCurrency
		return ret
	}
	return *o.DefaultCurrency.Get()
}

// GetDefaultCurrencyOk returns a tuple with the DefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsFeedsUpdateRequest) GetDefaultCurrencyOk() (*NullableCurrency, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultCurrency.Get(), o.DefaultCurrency.IsSet()
}

// HasDefaultCurrency returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasDefaultCurrency() bool {
	if o != nil && o.DefaultCurrency.IsSet() {
		return true
	}

	return false
}

// SetDefaultCurrency gets a reference to the given NullableNullableCurrency and assigns it to the DefaultCurrency field.
func (o *CatalogsFeedsUpdateRequest) SetDefaultCurrency(v NullableCurrency) {
	o.DefaultCurrency.Set(&v)
}
// SetDefaultCurrencyNil sets the value for DefaultCurrency to be an explicit nil
func (o *CatalogsFeedsUpdateRequest) SetDefaultCurrencyNil() {
	o.DefaultCurrency.Set(nil)
}

// UnsetDefaultCurrency ensures that no value is present for DefaultCurrency, not even an explicit nil
func (o *CatalogsFeedsUpdateRequest) UnsetDefaultCurrency() {
	o.DefaultCurrency.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogsFeedsUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedsUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogsFeedsUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CatalogsFeedsUpdateRequest) GetFormat() CatalogsFormat {
	if o == nil || IsNil(o.Format) {
		var ret CatalogsFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedsUpdateRequest) GetFormatOk() (*CatalogsFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given CatalogsFormat and assigns it to the Format field.
func (o *CatalogsFeedsUpdateRequest) SetFormat(v CatalogsFormat) {
	o.Format = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsFeedsUpdateRequest) GetCredentials() CatalogsFeedCredentials {
	if o == nil || IsNil(o.Credentials.Get()) {
		var ret CatalogsFeedCredentials
		return ret
	}
	return *o.Credentials.Get()
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsFeedsUpdateRequest) GetCredentialsOk() (*CatalogsFeedCredentials, bool) {
	if o == nil {
		return nil, false
	}
	return o.Credentials.Get(), o.Credentials.IsSet()
}

// HasCredentials returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasCredentials() bool {
	if o != nil && o.Credentials.IsSet() {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given NullableCatalogsFeedCredentials and assigns it to the Credentials field.
func (o *CatalogsFeedsUpdateRequest) SetCredentials(v CatalogsFeedCredentials) {
	o.Credentials.Set(&v)
}
// SetCredentialsNil sets the value for Credentials to be an explicit nil
func (o *CatalogsFeedsUpdateRequest) SetCredentialsNil() {
	o.Credentials.Set(nil)
}

// UnsetCredentials ensures that no value is present for Credentials, not even an explicit nil
func (o *CatalogsFeedsUpdateRequest) UnsetCredentials() {
	o.Credentials.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CatalogsFeedsUpdateRequest) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedsUpdateRequest) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *CatalogsFeedsUpdateRequest) SetLocation(v string) {
	o.Location = &v
}

// GetPreferredProcessingSchedule returns the PreferredProcessingSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsFeedsUpdateRequest) GetPreferredProcessingSchedule() CatalogsFeedProcessingSchedule {
	if o == nil || IsNil(o.PreferredProcessingSchedule.Get()) {
		var ret CatalogsFeedProcessingSchedule
		return ret
	}
	return *o.PreferredProcessingSchedule.Get()
}

// GetPreferredProcessingScheduleOk returns a tuple with the PreferredProcessingSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsFeedsUpdateRequest) GetPreferredProcessingScheduleOk() (*CatalogsFeedProcessingSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreferredProcessingSchedule.Get(), o.PreferredProcessingSchedule.IsSet()
}

// HasPreferredProcessingSchedule returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasPreferredProcessingSchedule() bool {
	if o != nil && o.PreferredProcessingSchedule.IsSet() {
		return true
	}

	return false
}

// SetPreferredProcessingSchedule gets a reference to the given NullableCatalogsFeedProcessingSchedule and assigns it to the PreferredProcessingSchedule field.
func (o *CatalogsFeedsUpdateRequest) SetPreferredProcessingSchedule(v CatalogsFeedProcessingSchedule) {
	o.PreferredProcessingSchedule.Set(&v)
}
// SetPreferredProcessingScheduleNil sets the value for PreferredProcessingSchedule to be an explicit nil
func (o *CatalogsFeedsUpdateRequest) SetPreferredProcessingScheduleNil() {
	o.PreferredProcessingSchedule.Set(nil)
}

// UnsetPreferredProcessingSchedule ensures that no value is present for PreferredProcessingSchedule, not even an explicit nil
func (o *CatalogsFeedsUpdateRequest) UnsetPreferredProcessingSchedule() {
	o.PreferredProcessingSchedule.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogsFeedsUpdateRequest) GetStatus() CatalogsStatus {
	if o == nil || IsNil(o.Status) {
		var ret CatalogsStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsFeedsUpdateRequest) GetStatusOk() (*CatalogsStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogsFeedsUpdateRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CatalogsStatus and assigns it to the Status field.
func (o *CatalogsFeedsUpdateRequest) SetStatus(v CatalogsStatus) {
	o.Status = &v
}

func (o CatalogsFeedsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsFeedsUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultAvailability.IsSet() {
		toSerialize["default_availability"] = o.DefaultAvailability.Get()
	}
	if o.DefaultCurrency.IsSet() {
		toSerialize["default_currency"] = o.DefaultCurrency.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if o.Credentials.IsSet() {
		toSerialize["credentials"] = o.Credentials.Get()
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if o.PreferredProcessingSchedule.IsSet() {
		toSerialize["preferred_processing_schedule"] = o.PreferredProcessingSchedule.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCatalogsFeedsUpdateRequest struct {
	value *CatalogsFeedsUpdateRequest
	isSet bool
}

func (v NullableCatalogsFeedsUpdateRequest) Get() *CatalogsFeedsUpdateRequest {
	return v.value
}

func (v *NullableCatalogsFeedsUpdateRequest) Set(val *CatalogsFeedsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsFeedsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsFeedsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsFeedsUpdateRequest(val *CatalogsFeedsUpdateRequest) *NullableCatalogsFeedsUpdateRequest {
	return &NullableCatalogsFeedsUpdateRequest{value: val, isSet: true}
}

func (v NullableCatalogsFeedsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsFeedsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


