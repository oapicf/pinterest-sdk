/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TrendingKeywordsResponseTrendsInnerTimeSeries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrendingKeywordsResponseTrendsInnerTimeSeries{}

// TrendingKeywordsResponseTrendsInnerTimeSeries A sequence of weekly observations of the relative search volume for this keyword over the past year.<br /> These values are normalized to a [0-100] range, and can be used to visualize the history of user interest in this keyword. By default, normalization is applied independently to the time series of each keyword, but the `normalize_against_group` query parameter can be used in cases where you wish to compare relative volume between keywords.<br /> **Note**: The date of each observation is in ISO-8601 format and represents the *end* of the week.  For example, a value of `2023-10-31` would include searches that happened between `2023-10-25` and `2023-10-31`.
type TrendingKeywordsResponseTrendsInnerTimeSeries struct {
	Date *string `json:"date,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TrendingKeywordsResponseTrendsInnerTimeSeries TrendingKeywordsResponseTrendsInnerTimeSeries

// NewTrendingKeywordsResponseTrendsInnerTimeSeries instantiates a new TrendingKeywordsResponseTrendsInnerTimeSeries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrendingKeywordsResponseTrendsInnerTimeSeries() *TrendingKeywordsResponseTrendsInnerTimeSeries {
	this := TrendingKeywordsResponseTrendsInnerTimeSeries{}
	return &this
}

// NewTrendingKeywordsResponseTrendsInnerTimeSeriesWithDefaults instantiates a new TrendingKeywordsResponseTrendsInnerTimeSeries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrendingKeywordsResponseTrendsInnerTimeSeriesWithDefaults() *TrendingKeywordsResponseTrendsInnerTimeSeries {
	this := TrendingKeywordsResponseTrendsInnerTimeSeries{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *TrendingKeywordsResponseTrendsInnerTimeSeries) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingKeywordsResponseTrendsInnerTimeSeries) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *TrendingKeywordsResponseTrendsInnerTimeSeries) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *TrendingKeywordsResponseTrendsInnerTimeSeries) SetDate(v string) {
	o.Date = &v
}

func (o TrendingKeywordsResponseTrendsInnerTimeSeries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrendingKeywordsResponseTrendsInnerTimeSeries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TrendingKeywordsResponseTrendsInnerTimeSeries) UnmarshalJSON(data []byte) (err error) {
	varTrendingKeywordsResponseTrendsInnerTimeSeries := _TrendingKeywordsResponseTrendsInnerTimeSeries{}

	err = json.Unmarshal(data, &varTrendingKeywordsResponseTrendsInnerTimeSeries)

	if err != nil {
		return err
	}

	*o = TrendingKeywordsResponseTrendsInnerTimeSeries(varTrendingKeywordsResponseTrendsInnerTimeSeries)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTrendingKeywordsResponseTrendsInnerTimeSeries struct {
	value *TrendingKeywordsResponseTrendsInnerTimeSeries
	isSet bool
}

func (v NullableTrendingKeywordsResponseTrendsInnerTimeSeries) Get() *TrendingKeywordsResponseTrendsInnerTimeSeries {
	return v.value
}

func (v *NullableTrendingKeywordsResponseTrendsInnerTimeSeries) Set(val *TrendingKeywordsResponseTrendsInnerTimeSeries) {
	v.value = val
	v.isSet = true
}

func (v NullableTrendingKeywordsResponseTrendsInnerTimeSeries) IsSet() bool {
	return v.isSet
}

func (v *NullableTrendingKeywordsResponseTrendsInnerTimeSeries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrendingKeywordsResponseTrendsInnerTimeSeries(val *TrendingKeywordsResponseTrendsInnerTimeSeries) *NullableTrendingKeywordsResponseTrendsInnerTimeSeries {
	return &NullableTrendingKeywordsResponseTrendsInnerTimeSeries{value: val, isSet: true}
}

func (v NullableTrendingKeywordsResponseTrendsInnerTimeSeries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrendingKeywordsResponseTrendsInnerTimeSeries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


