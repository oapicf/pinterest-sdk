/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// BulkOutputFormat Bulk file output format
type BulkOutputFormat string

// List of BulkOutputFormat
const (
	CSV BulkOutputFormat = "CSV"
	JSON BulkOutputFormat = "JSON"
)

// All allowed values of BulkOutputFormat enum
var AllowedBulkOutputFormatEnumValues = []BulkOutputFormat{
	"CSV",
	"JSON",
}

func (v *BulkOutputFormat) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BulkOutputFormat(value)
	for _, existing := range AllowedBulkOutputFormatEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BulkOutputFormat", value)
}

// NewBulkOutputFormatFromValue returns a pointer to a valid BulkOutputFormat
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBulkOutputFormatFromValue(v string) (*BulkOutputFormat, error) {
	ev := BulkOutputFormat(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BulkOutputFormat: valid values are %v", v, AllowedBulkOutputFormatEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BulkOutputFormat) IsValid() bool {
	for _, existing := range AllowedBulkOutputFormatEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BulkOutputFormat value
func (v BulkOutputFormat) Ptr() *BulkOutputFormat {
	return &v
}

type NullableBulkOutputFormat struct {
	value *BulkOutputFormat
	isSet bool
}

func (v NullableBulkOutputFormat) Get() *BulkOutputFormat {
	return v.value
}

func (v *NullableBulkOutputFormat) Set(val *BulkOutputFormat) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkOutputFormat) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkOutputFormat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkOutputFormat(val *BulkOutputFormat) *NullableBulkOutputFormat {
	return &NullableBulkOutputFormat{value: val, isSet: true}
}

func (v NullableBulkOutputFormat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkOutputFormat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

