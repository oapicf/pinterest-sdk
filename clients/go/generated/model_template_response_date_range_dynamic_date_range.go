/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TemplateResponseDateRangeDynamicDateRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseDateRangeDynamicDateRange{}

// TemplateResponseDateRangeDynamicDateRange The dynamic date range of the template
type TemplateResponseDateRangeDynamicDateRange struct {
	// The date range type
	Type *string `json:"type,omitempty"`
	// The dynamic range type
	Range *string `json:"range,omitempty"`
}

// NewTemplateResponseDateRangeDynamicDateRange instantiates a new TemplateResponseDateRangeDynamicDateRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseDateRangeDynamicDateRange() *TemplateResponseDateRangeDynamicDateRange {
	this := TemplateResponseDateRangeDynamicDateRange{}
	return &this
}

// NewTemplateResponseDateRangeDynamicDateRangeWithDefaults instantiates a new TemplateResponseDateRangeDynamicDateRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseDateRangeDynamicDateRangeWithDefaults() *TemplateResponseDateRangeDynamicDateRange {
	this := TemplateResponseDateRangeDynamicDateRange{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeDynamicDateRange) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeDynamicDateRange) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeDynamicDateRange) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TemplateResponseDateRangeDynamicDateRange) SetType(v string) {
	o.Type = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *TemplateResponseDateRangeDynamicDateRange) GetRange() string {
	if o == nil || IsNil(o.Range) {
		var ret string
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseDateRangeDynamicDateRange) GetRangeOk() (*string, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *TemplateResponseDateRangeDynamicDateRange) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given string and assigns it to the Range field.
func (o *TemplateResponseDateRangeDynamicDateRange) SetRange(v string) {
	o.Range = &v
}

func (o TemplateResponseDateRangeDynamicDateRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseDateRangeDynamicDateRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}
	return toSerialize, nil
}

type NullableTemplateResponseDateRangeDynamicDateRange struct {
	value *TemplateResponseDateRangeDynamicDateRange
	isSet bool
}

func (v NullableTemplateResponseDateRangeDynamicDateRange) Get() *TemplateResponseDateRangeDynamicDateRange {
	return v.value
}

func (v *NullableTemplateResponseDateRangeDynamicDateRange) Set(val *TemplateResponseDateRangeDynamicDateRange) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseDateRangeDynamicDateRange) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseDateRangeDynamicDateRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseDateRangeDynamicDateRange(val *TemplateResponseDateRangeDynamicDateRange) *NullableTemplateResponseDateRangeDynamicDateRange {
	return &NullableTemplateResponseDateRangeDynamicDateRange{value: val, isSet: true}
}

func (v NullableTemplateResponseDateRangeDynamicDateRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseDateRangeDynamicDateRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


