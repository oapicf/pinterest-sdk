/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogsReportDistributionStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsReportDistributionStats{}

// CatalogsReportDistributionStats struct for CatalogsReportDistributionStats
type CatalogsReportDistributionStats struct {
	ReportType *string `json:"report_type,omitempty"`
	// ID of the catalog entity.
	CatalogId *string `json:"catalog_id,omitempty" validate:"regexp=^\\\\d+$"`
	// The event code that a diagnostics aggregated number references
	Code *int32 `json:"code,omitempty"`
	// A human-friendly label for the event code (e.g, 'SPAM')
	CodeLabel *string `json:"code_label,omitempty"`
	// Title message describing the diagnostic issue
	Message *string `json:"message,omitempty"`
	// Number of occurrences of the issue
	Occurrences *int32 `json:"occurrences,omitempty"`
	// Indicates if issue makes items ineligible for ads distribution
	IneligibleForAds *bool `json:"ineligible_for_ads,omitempty"`
	// Indicates if issue makes items ineligible for organic distribution
	IneligibleForOrganic *bool `json:"ineligible_for_organic,omitempty"`
}

// NewCatalogsReportDistributionStats instantiates a new CatalogsReportDistributionStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsReportDistributionStats() *CatalogsReportDistributionStats {
	this := CatalogsReportDistributionStats{}
	return &this
}

// NewCatalogsReportDistributionStatsWithDefaults instantiates a new CatalogsReportDistributionStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsReportDistributionStatsWithDefaults() *CatalogsReportDistributionStats {
	this := CatalogsReportDistributionStats{}
	return &this
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetReportType() string {
	if o == nil || IsNil(o.ReportType) {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetReportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasReportType() bool {
	if o != nil && !IsNil(o.ReportType) {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *CatalogsReportDistributionStats) SetReportType(v string) {
	o.ReportType = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *CatalogsReportDistributionStats) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *CatalogsReportDistributionStats) SetCode(v int32) {
	o.Code = &v
}

// GetCodeLabel returns the CodeLabel field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetCodeLabel() string {
	if o == nil || IsNil(o.CodeLabel) {
		var ret string
		return ret
	}
	return *o.CodeLabel
}

// GetCodeLabelOk returns a tuple with the CodeLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetCodeLabelOk() (*string, bool) {
	if o == nil || IsNil(o.CodeLabel) {
		return nil, false
	}
	return o.CodeLabel, true
}

// HasCodeLabel returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasCodeLabel() bool {
	if o != nil && !IsNil(o.CodeLabel) {
		return true
	}

	return false
}

// SetCodeLabel gets a reference to the given string and assigns it to the CodeLabel field.
func (o *CatalogsReportDistributionStats) SetCodeLabel(v string) {
	o.CodeLabel = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CatalogsReportDistributionStats) SetMessage(v string) {
	o.Message = &v
}

// GetOccurrences returns the Occurrences field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetOccurrences() int32 {
	if o == nil || IsNil(o.Occurrences) {
		var ret int32
		return ret
	}
	return *o.Occurrences
}

// GetOccurrencesOk returns a tuple with the Occurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetOccurrencesOk() (*int32, bool) {
	if o == nil || IsNil(o.Occurrences) {
		return nil, false
	}
	return o.Occurrences, true
}

// HasOccurrences returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasOccurrences() bool {
	if o != nil && !IsNil(o.Occurrences) {
		return true
	}

	return false
}

// SetOccurrences gets a reference to the given int32 and assigns it to the Occurrences field.
func (o *CatalogsReportDistributionStats) SetOccurrences(v int32) {
	o.Occurrences = &v
}

// GetIneligibleForAds returns the IneligibleForAds field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetIneligibleForAds() bool {
	if o == nil || IsNil(o.IneligibleForAds) {
		var ret bool
		return ret
	}
	return *o.IneligibleForAds
}

// GetIneligibleForAdsOk returns a tuple with the IneligibleForAds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetIneligibleForAdsOk() (*bool, bool) {
	if o == nil || IsNil(o.IneligibleForAds) {
		return nil, false
	}
	return o.IneligibleForAds, true
}

// HasIneligibleForAds returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasIneligibleForAds() bool {
	if o != nil && !IsNil(o.IneligibleForAds) {
		return true
	}

	return false
}

// SetIneligibleForAds gets a reference to the given bool and assigns it to the IneligibleForAds field.
func (o *CatalogsReportDistributionStats) SetIneligibleForAds(v bool) {
	o.IneligibleForAds = &v
}

// GetIneligibleForOrganic returns the IneligibleForOrganic field value if set, zero value otherwise.
func (o *CatalogsReportDistributionStats) GetIneligibleForOrganic() bool {
	if o == nil || IsNil(o.IneligibleForOrganic) {
		var ret bool
		return ret
	}
	return *o.IneligibleForOrganic
}

// GetIneligibleForOrganicOk returns a tuple with the IneligibleForOrganic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsReportDistributionStats) GetIneligibleForOrganicOk() (*bool, bool) {
	if o == nil || IsNil(o.IneligibleForOrganic) {
		return nil, false
	}
	return o.IneligibleForOrganic, true
}

// HasIneligibleForOrganic returns a boolean if a field has been set.
func (o *CatalogsReportDistributionStats) HasIneligibleForOrganic() bool {
	if o != nil && !IsNil(o.IneligibleForOrganic) {
		return true
	}

	return false
}

// SetIneligibleForOrganic gets a reference to the given bool and assigns it to the IneligibleForOrganic field.
func (o *CatalogsReportDistributionStats) SetIneligibleForOrganic(v bool) {
	o.IneligibleForOrganic = &v
}

func (o CatalogsReportDistributionStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsReportDistributionStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportType) {
		toSerialize["report_type"] = o.ReportType
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalog_id"] = o.CatalogId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CodeLabel) {
		toSerialize["code_label"] = o.CodeLabel
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Occurrences) {
		toSerialize["occurrences"] = o.Occurrences
	}
	if !IsNil(o.IneligibleForAds) {
		toSerialize["ineligible_for_ads"] = o.IneligibleForAds
	}
	if !IsNil(o.IneligibleForOrganic) {
		toSerialize["ineligible_for_organic"] = o.IneligibleForOrganic
	}
	return toSerialize, nil
}

type NullableCatalogsReportDistributionStats struct {
	value *CatalogsReportDistributionStats
	isSet bool
}

func (v NullableCatalogsReportDistributionStats) Get() *CatalogsReportDistributionStats {
	return v.value
}

func (v *NullableCatalogsReportDistributionStats) Set(val *CatalogsReportDistributionStats) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsReportDistributionStats) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsReportDistributionStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsReportDistributionStats(val *CatalogsReportDistributionStats) *NullableCatalogsReportDistributionStats {
	return &NullableCatalogsReportDistributionStats{value: val, isSet: true}
}

func (v NullableCatalogsReportDistributionStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsReportDistributionStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


