/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// CatalogsVerticalsListProductsByCatalogBasedFilterRequest - Request object to list products for a given catalog_id and product group filter.
type CatalogsVerticalsListProductsByCatalogBasedFilterRequest struct {
	CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest *CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest
	CatalogsHotelListProductsByCatalogBasedFilterRequest *CatalogsHotelListProductsByCatalogBasedFilterRequest
	CatalogsRetailListProductsByCatalogBasedFilterRequest *CatalogsRetailListProductsByCatalogBasedFilterRequest
}

// CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequestAsCatalogsVerticalsListProductsByCatalogBasedFilterRequest is a convenience function that returns CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest wrapped in CatalogsVerticalsListProductsByCatalogBasedFilterRequest
func CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequestAsCatalogsVerticalsListProductsByCatalogBasedFilterRequest(v *CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest) CatalogsVerticalsListProductsByCatalogBasedFilterRequest {
	return CatalogsVerticalsListProductsByCatalogBasedFilterRequest{
		CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest: v,
	}
}

// CatalogsHotelListProductsByCatalogBasedFilterRequestAsCatalogsVerticalsListProductsByCatalogBasedFilterRequest is a convenience function that returns CatalogsHotelListProductsByCatalogBasedFilterRequest wrapped in CatalogsVerticalsListProductsByCatalogBasedFilterRequest
func CatalogsHotelListProductsByCatalogBasedFilterRequestAsCatalogsVerticalsListProductsByCatalogBasedFilterRequest(v *CatalogsHotelListProductsByCatalogBasedFilterRequest) CatalogsVerticalsListProductsByCatalogBasedFilterRequest {
	return CatalogsVerticalsListProductsByCatalogBasedFilterRequest{
		CatalogsHotelListProductsByCatalogBasedFilterRequest: v,
	}
}

// CatalogsRetailListProductsByCatalogBasedFilterRequestAsCatalogsVerticalsListProductsByCatalogBasedFilterRequest is a convenience function that returns CatalogsRetailListProductsByCatalogBasedFilterRequest wrapped in CatalogsVerticalsListProductsByCatalogBasedFilterRequest
func CatalogsRetailListProductsByCatalogBasedFilterRequestAsCatalogsVerticalsListProductsByCatalogBasedFilterRequest(v *CatalogsRetailListProductsByCatalogBasedFilterRequest) CatalogsVerticalsListProductsByCatalogBasedFilterRequest {
	return CatalogsVerticalsListProductsByCatalogBasedFilterRequest{
		CatalogsRetailListProductsByCatalogBasedFilterRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CatalogsVerticalsListProductsByCatalogBasedFilterRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest)
	if err == nil {
		jsonCatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest, _ := json.Marshal(dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest)
		if string(jsonCatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest) == "{}" { // empty struct
			dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest); err != nil {
				dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest = nil
	}

	// try to unmarshal data into CatalogsHotelListProductsByCatalogBasedFilterRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsHotelListProductsByCatalogBasedFilterRequest)
	if err == nil {
		jsonCatalogsHotelListProductsByCatalogBasedFilterRequest, _ := json.Marshal(dst.CatalogsHotelListProductsByCatalogBasedFilterRequest)
		if string(jsonCatalogsHotelListProductsByCatalogBasedFilterRequest) == "{}" { // empty struct
			dst.CatalogsHotelListProductsByCatalogBasedFilterRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsHotelListProductsByCatalogBasedFilterRequest); err != nil {
				dst.CatalogsHotelListProductsByCatalogBasedFilterRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsHotelListProductsByCatalogBasedFilterRequest = nil
	}

	// try to unmarshal data into CatalogsRetailListProductsByCatalogBasedFilterRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsRetailListProductsByCatalogBasedFilterRequest)
	if err == nil {
		jsonCatalogsRetailListProductsByCatalogBasedFilterRequest, _ := json.Marshal(dst.CatalogsRetailListProductsByCatalogBasedFilterRequest)
		if string(jsonCatalogsRetailListProductsByCatalogBasedFilterRequest) == "{}" { // empty struct
			dst.CatalogsRetailListProductsByCatalogBasedFilterRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsRetailListProductsByCatalogBasedFilterRequest); err != nil {
				dst.CatalogsRetailListProductsByCatalogBasedFilterRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsRetailListProductsByCatalogBasedFilterRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest = nil
		dst.CatalogsHotelListProductsByCatalogBasedFilterRequest = nil
		dst.CatalogsRetailListProductsByCatalogBasedFilterRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CatalogsVerticalsListProductsByCatalogBasedFilterRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CatalogsVerticalsListProductsByCatalogBasedFilterRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CatalogsVerticalsListProductsByCatalogBasedFilterRequest) MarshalJSON() ([]byte, error) {
	if src.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest != nil {
		return json.Marshal(&src.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest)
	}

	if src.CatalogsHotelListProductsByCatalogBasedFilterRequest != nil {
		return json.Marshal(&src.CatalogsHotelListProductsByCatalogBasedFilterRequest)
	}

	if src.CatalogsRetailListProductsByCatalogBasedFilterRequest != nil {
		return json.Marshal(&src.CatalogsRetailListProductsByCatalogBasedFilterRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CatalogsVerticalsListProductsByCatalogBasedFilterRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest != nil {
		return obj.CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest
	}

	if obj.CatalogsHotelListProductsByCatalogBasedFilterRequest != nil {
		return obj.CatalogsHotelListProductsByCatalogBasedFilterRequest
	}

	if obj.CatalogsRetailListProductsByCatalogBasedFilterRequest != nil {
		return obj.CatalogsRetailListProductsByCatalogBasedFilterRequest
	}

	// all schemas are nil
	return nil
}

type NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest struct {
	value *CatalogsVerticalsListProductsByCatalogBasedFilterRequest
	isSet bool
}

func (v NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest) Get() *CatalogsVerticalsListProductsByCatalogBasedFilterRequest {
	return v.value
}

func (v *NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest) Set(val *CatalogsVerticalsListProductsByCatalogBasedFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest(val *CatalogsVerticalsListProductsByCatalogBasedFilterRequest) *NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest {
	return &NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest{value: val, isSet: true}
}

func (v NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsVerticalsListProductsByCatalogBasedFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


