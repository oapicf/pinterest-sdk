/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// TrendType the model 'TrendType'
type TrendType string

// List of TrendType
const (
	GROWING TrendType = "growing"
	MONTHLY TrendType = "monthly"
	YEARLY TrendType = "yearly"
	SEASONAL TrendType = "seasonal"
)

// All allowed values of TrendType enum
var AllowedTrendTypeEnumValues = []TrendType{
	"growing",
	"monthly",
	"yearly",
	"seasonal",
}

func (v *TrendType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TrendType(value)
	for _, existing := range AllowedTrendTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TrendType", value)
}

// NewTrendTypeFromValue returns a pointer to a valid TrendType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTrendTypeFromValue(v string) (*TrendType, error) {
	ev := TrendType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TrendType: valid values are %v", v, AllowedTrendTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TrendType) IsValid() bool {
	for _, existing := range AllowedTrendTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TrendType value
func (v TrendType) Ptr() *TrendType {
	return &v
}

type NullableTrendType struct {
	value *TrendType
	isSet bool
}

func (v NullableTrendType) Get() *TrendType {
	return v.value
}

func (v *NullableTrendType) Set(val *TrendType) {
	v.value = val
	v.isSet = true
}

func (v NullableTrendType) IsSet() bool {
	return v.isSet
}

func (v *NullableTrendType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrendType(val *TrendType) *NullableTrendType {
	return &NullableTrendType{value: val, isSet: true}
}

func (v NullableTrendType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrendType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

