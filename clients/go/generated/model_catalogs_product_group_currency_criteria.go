/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsProductGroupCurrencyCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsProductGroupCurrencyCriteria{}

// CatalogsProductGroupCurrencyCriteria A currency filter. This filter cannot be negated
type CatalogsProductGroupCurrencyCriteria struct {
	Values NonNullableCatalogsCurrency `json:"values"`
	Negated *bool `json:"negated,omitempty"`
}

type _CatalogsProductGroupCurrencyCriteria CatalogsProductGroupCurrencyCriteria

// NewCatalogsProductGroupCurrencyCriteria instantiates a new CatalogsProductGroupCurrencyCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsProductGroupCurrencyCriteria(values NonNullableCatalogsCurrency) *CatalogsProductGroupCurrencyCriteria {
	this := CatalogsProductGroupCurrencyCriteria{}
	this.Values = values
	var negated bool = false
	this.Negated = &negated
	return &this
}

// NewCatalogsProductGroupCurrencyCriteriaWithDefaults instantiates a new CatalogsProductGroupCurrencyCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsProductGroupCurrencyCriteriaWithDefaults() *CatalogsProductGroupCurrencyCriteria {
	this := CatalogsProductGroupCurrencyCriteria{}
	var negated bool = false
	this.Negated = &negated
	return &this
}

// GetValues returns the Values field value
func (o *CatalogsProductGroupCurrencyCriteria) GetValues() NonNullableCatalogsCurrency {
	if o == nil {
		var ret NonNullableCatalogsCurrency
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupCurrencyCriteria) GetValuesOk() (*NonNullableCatalogsCurrency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *CatalogsProductGroupCurrencyCriteria) SetValues(v NonNullableCatalogsCurrency) {
	o.Values = v
}

// GetNegated returns the Negated field value if set, zero value otherwise.
func (o *CatalogsProductGroupCurrencyCriteria) GetNegated() bool {
	if o == nil || IsNil(o.Negated) {
		var ret bool
		return ret
	}
	return *o.Negated
}

// GetNegatedOk returns a tuple with the Negated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupCurrencyCriteria) GetNegatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Negated) {
		return nil, false
	}
	return o.Negated, true
}

// HasNegated returns a boolean if a field has been set.
func (o *CatalogsProductGroupCurrencyCriteria) HasNegated() bool {
	if o != nil && !IsNil(o.Negated) {
		return true
	}

	return false
}

// SetNegated gets a reference to the given bool and assigns it to the Negated field.
func (o *CatalogsProductGroupCurrencyCriteria) SetNegated(v bool) {
	o.Negated = &v
}

func (o CatalogsProductGroupCurrencyCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsProductGroupCurrencyCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["values"] = o.Values
	if !IsNil(o.Negated) {
		toSerialize["negated"] = o.Negated
	}
	return toSerialize, nil
}

func (o *CatalogsProductGroupCurrencyCriteria) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsProductGroupCurrencyCriteria := _CatalogsProductGroupCurrencyCriteria{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsProductGroupCurrencyCriteria)

	if err != nil {
		return err
	}

	*o = CatalogsProductGroupCurrencyCriteria(varCatalogsProductGroupCurrencyCriteria)

	return err
}

type NullableCatalogsProductGroupCurrencyCriteria struct {
	value *CatalogsProductGroupCurrencyCriteria
	isSet bool
}

func (v NullableCatalogsProductGroupCurrencyCriteria) Get() *CatalogsProductGroupCurrencyCriteria {
	return v.value
}

func (v *NullableCatalogsProductGroupCurrencyCriteria) Set(val *CatalogsProductGroupCurrencyCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupCurrencyCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupCurrencyCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupCurrencyCriteria(val *CatalogsProductGroupCurrencyCriteria) *NullableCatalogsProductGroupCurrencyCriteria {
	return &NullableCatalogsProductGroupCurrencyCriteria{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupCurrencyCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupCurrencyCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


