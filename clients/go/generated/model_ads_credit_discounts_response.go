/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdsCreditDiscountsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdsCreditDiscountsResponse{}

// AdsCreditDiscountsResponse struct for AdsCreditDiscountsResponse
type AdsCreditDiscountsResponse struct {
	// True if the offer code is currently active.
	Active *bool `json:"active,omitempty"`
	// Advertiser ID the offer was applied to.
	AdvertiserId *string `json:"advertiser_id,omitempty" validate:"regexp=^\\\\d+$"`
	// The type of discount of this credit
	DiscountType NullableString `json:"discountType,omitempty"`
	// The discount applied in the offerâ€™s currency value.
	DiscountInMicroCurrency NullableFloat32 `json:"discountInMicroCurrency,omitempty"`
	// Currency value for the discount.
	DiscountCurrency NullableString `json:"discountCurrency,omitempty"`
	// Human readable title of the offer code.
	Title NullableString `json:"title,omitempty"`
	// The credits left to spend.
	RemainingDiscountInMicroCurrency NullableFloat32 `json:"remainingDiscountInMicroCurrency,omitempty"`
}

// NewAdsCreditDiscountsResponse instantiates a new AdsCreditDiscountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdsCreditDiscountsResponse() *AdsCreditDiscountsResponse {
	this := AdsCreditDiscountsResponse{}
	return &this
}

// NewAdsCreditDiscountsResponseWithDefaults instantiates a new AdsCreditDiscountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdsCreditDiscountsResponseWithDefaults() *AdsCreditDiscountsResponse {
	this := AdsCreditDiscountsResponse{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *AdsCreditDiscountsResponse) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdsCreditDiscountsResponse) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *AdsCreditDiscountsResponse) SetActive(v bool) {
	o.Active = &v
}

// GetAdvertiserId returns the AdvertiserId field value if set, zero value otherwise.
func (o *AdsCreditDiscountsResponse) GetAdvertiserId() string {
	if o == nil || IsNil(o.AdvertiserId) {
		var ret string
		return ret
	}
	return *o.AdvertiserId
}

// GetAdvertiserIdOk returns a tuple with the AdvertiserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdsCreditDiscountsResponse) GetAdvertiserIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdvertiserId) {
		return nil, false
	}
	return o.AdvertiserId, true
}

// HasAdvertiserId returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasAdvertiserId() bool {
	if o != nil && !IsNil(o.AdvertiserId) {
		return true
	}

	return false
}

// SetAdvertiserId gets a reference to the given string and assigns it to the AdvertiserId field.
func (o *AdsCreditDiscountsResponse) SetAdvertiserId(v string) {
	o.AdvertiserId = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdsCreditDiscountsResponse) GetDiscountType() string {
	if o == nil || IsNil(o.DiscountType.Get()) {
		var ret string
		return ret
	}
	return *o.DiscountType.Get()
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdsCreditDiscountsResponse) GetDiscountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountType.Get(), o.DiscountType.IsSet()
}

// HasDiscountType returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasDiscountType() bool {
	if o != nil && o.DiscountType.IsSet() {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given NullableString and assigns it to the DiscountType field.
func (o *AdsCreditDiscountsResponse) SetDiscountType(v string) {
	o.DiscountType.Set(&v)
}
// SetDiscountTypeNil sets the value for DiscountType to be an explicit nil
func (o *AdsCreditDiscountsResponse) SetDiscountTypeNil() {
	o.DiscountType.Set(nil)
}

// UnsetDiscountType ensures that no value is present for DiscountType, not even an explicit nil
func (o *AdsCreditDiscountsResponse) UnsetDiscountType() {
	o.DiscountType.Unset()
}

// GetDiscountInMicroCurrency returns the DiscountInMicroCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdsCreditDiscountsResponse) GetDiscountInMicroCurrency() float32 {
	if o == nil || IsNil(o.DiscountInMicroCurrency.Get()) {
		var ret float32
		return ret
	}
	return *o.DiscountInMicroCurrency.Get()
}

// GetDiscountInMicroCurrencyOk returns a tuple with the DiscountInMicroCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdsCreditDiscountsResponse) GetDiscountInMicroCurrencyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountInMicroCurrency.Get(), o.DiscountInMicroCurrency.IsSet()
}

// HasDiscountInMicroCurrency returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasDiscountInMicroCurrency() bool {
	if o != nil && o.DiscountInMicroCurrency.IsSet() {
		return true
	}

	return false
}

// SetDiscountInMicroCurrency gets a reference to the given NullableFloat32 and assigns it to the DiscountInMicroCurrency field.
func (o *AdsCreditDiscountsResponse) SetDiscountInMicroCurrency(v float32) {
	o.DiscountInMicroCurrency.Set(&v)
}
// SetDiscountInMicroCurrencyNil sets the value for DiscountInMicroCurrency to be an explicit nil
func (o *AdsCreditDiscountsResponse) SetDiscountInMicroCurrencyNil() {
	o.DiscountInMicroCurrency.Set(nil)
}

// UnsetDiscountInMicroCurrency ensures that no value is present for DiscountInMicroCurrency, not even an explicit nil
func (o *AdsCreditDiscountsResponse) UnsetDiscountInMicroCurrency() {
	o.DiscountInMicroCurrency.Unset()
}

// GetDiscountCurrency returns the DiscountCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdsCreditDiscountsResponse) GetDiscountCurrency() string {
	if o == nil || IsNil(o.DiscountCurrency.Get()) {
		var ret string
		return ret
	}
	return *o.DiscountCurrency.Get()
}

// GetDiscountCurrencyOk returns a tuple with the DiscountCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdsCreditDiscountsResponse) GetDiscountCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountCurrency.Get(), o.DiscountCurrency.IsSet()
}

// HasDiscountCurrency returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasDiscountCurrency() bool {
	if o != nil && o.DiscountCurrency.IsSet() {
		return true
	}

	return false
}

// SetDiscountCurrency gets a reference to the given NullableString and assigns it to the DiscountCurrency field.
func (o *AdsCreditDiscountsResponse) SetDiscountCurrency(v string) {
	o.DiscountCurrency.Set(&v)
}
// SetDiscountCurrencyNil sets the value for DiscountCurrency to be an explicit nil
func (o *AdsCreditDiscountsResponse) SetDiscountCurrencyNil() {
	o.DiscountCurrency.Set(nil)
}

// UnsetDiscountCurrency ensures that no value is present for DiscountCurrency, not even an explicit nil
func (o *AdsCreditDiscountsResponse) UnsetDiscountCurrency() {
	o.DiscountCurrency.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdsCreditDiscountsResponse) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdsCreditDiscountsResponse) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *AdsCreditDiscountsResponse) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *AdsCreditDiscountsResponse) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *AdsCreditDiscountsResponse) UnsetTitle() {
	o.Title.Unset()
}

// GetRemainingDiscountInMicroCurrency returns the RemainingDiscountInMicroCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdsCreditDiscountsResponse) GetRemainingDiscountInMicroCurrency() float32 {
	if o == nil || IsNil(o.RemainingDiscountInMicroCurrency.Get()) {
		var ret float32
		return ret
	}
	return *o.RemainingDiscountInMicroCurrency.Get()
}

// GetRemainingDiscountInMicroCurrencyOk returns a tuple with the RemainingDiscountInMicroCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdsCreditDiscountsResponse) GetRemainingDiscountInMicroCurrencyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemainingDiscountInMicroCurrency.Get(), o.RemainingDiscountInMicroCurrency.IsSet()
}

// HasRemainingDiscountInMicroCurrency returns a boolean if a field has been set.
func (o *AdsCreditDiscountsResponse) HasRemainingDiscountInMicroCurrency() bool {
	if o != nil && o.RemainingDiscountInMicroCurrency.IsSet() {
		return true
	}

	return false
}

// SetRemainingDiscountInMicroCurrency gets a reference to the given NullableFloat32 and assigns it to the RemainingDiscountInMicroCurrency field.
func (o *AdsCreditDiscountsResponse) SetRemainingDiscountInMicroCurrency(v float32) {
	o.RemainingDiscountInMicroCurrency.Set(&v)
}
// SetRemainingDiscountInMicroCurrencyNil sets the value for RemainingDiscountInMicroCurrency to be an explicit nil
func (o *AdsCreditDiscountsResponse) SetRemainingDiscountInMicroCurrencyNil() {
	o.RemainingDiscountInMicroCurrency.Set(nil)
}

// UnsetRemainingDiscountInMicroCurrency ensures that no value is present for RemainingDiscountInMicroCurrency, not even an explicit nil
func (o *AdsCreditDiscountsResponse) UnsetRemainingDiscountInMicroCurrency() {
	o.RemainingDiscountInMicroCurrency.Unset()
}

func (o AdsCreditDiscountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdsCreditDiscountsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AdvertiserId) {
		toSerialize["advertiser_id"] = o.AdvertiserId
	}
	if o.DiscountType.IsSet() {
		toSerialize["discountType"] = o.DiscountType.Get()
	}
	if o.DiscountInMicroCurrency.IsSet() {
		toSerialize["discountInMicroCurrency"] = o.DiscountInMicroCurrency.Get()
	}
	if o.DiscountCurrency.IsSet() {
		toSerialize["discountCurrency"] = o.DiscountCurrency.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.RemainingDiscountInMicroCurrency.IsSet() {
		toSerialize["remainingDiscountInMicroCurrency"] = o.RemainingDiscountInMicroCurrency.Get()
	}
	return toSerialize, nil
}

type NullableAdsCreditDiscountsResponse struct {
	value *AdsCreditDiscountsResponse
	isSet bool
}

func (v NullableAdsCreditDiscountsResponse) Get() *AdsCreditDiscountsResponse {
	return v.value
}

func (v *NullableAdsCreditDiscountsResponse) Set(val *AdsCreditDiscountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAdsCreditDiscountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAdsCreditDiscountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdsCreditDiscountsResponse(val *AdsCreditDiscountsResponse) *NullableAdsCreditDiscountsResponse {
	return &NullableAdsCreditDiscountsResponse{value: val, isSet: true}
}

func (v NullableAdsCreditDiscountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdsCreditDiscountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


