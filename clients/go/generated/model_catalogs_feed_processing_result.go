/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CatalogsFeedProcessingResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsFeedProcessingResult{}

// CatalogsFeedProcessingResult struct for CatalogsFeedProcessingResult
type CatalogsFeedProcessingResult struct {
	CreatedAt time.Time `json:"created_at"`
	Id string `json:"id"`
	UpdatedAt time.Time `json:"updated_at"`
	IngestionDetails CatalogsFeedIngestionDetails `json:"ingestion_details"`
	Status CatalogsFeedProcessingStatus `json:"status"`
	ProductCounts NullableCatalogsFeedProductCounts `json:"product_counts"`
	ValidationDetails CatalogsFeedValidationDetails `json:"validation_details"`
}

type _CatalogsFeedProcessingResult CatalogsFeedProcessingResult

// NewCatalogsFeedProcessingResult instantiates a new CatalogsFeedProcessingResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsFeedProcessingResult(createdAt time.Time, id string, updatedAt time.Time, ingestionDetails CatalogsFeedIngestionDetails, status CatalogsFeedProcessingStatus, productCounts NullableCatalogsFeedProductCounts, validationDetails CatalogsFeedValidationDetails) *CatalogsFeedProcessingResult {
	this := CatalogsFeedProcessingResult{}
	this.CreatedAt = createdAt
	this.Id = id
	this.UpdatedAt = updatedAt
	this.IngestionDetails = ingestionDetails
	this.Status = status
	this.ProductCounts = productCounts
	this.ValidationDetails = validationDetails
	return &this
}

// NewCatalogsFeedProcessingResultWithDefaults instantiates a new CatalogsFeedProcessingResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsFeedProcessingResultWithDefaults() *CatalogsFeedProcessingResult {
	this := CatalogsFeedProcessingResult{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *CatalogsFeedProcessingResult) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedProcessingResult) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CatalogsFeedProcessingResult) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *CatalogsFeedProcessingResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedProcessingResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CatalogsFeedProcessingResult) SetId(v string) {
	o.Id = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CatalogsFeedProcessingResult) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedProcessingResult) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CatalogsFeedProcessingResult) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIngestionDetails returns the IngestionDetails field value
func (o *CatalogsFeedProcessingResult) GetIngestionDetails() CatalogsFeedIngestionDetails {
	if o == nil {
		var ret CatalogsFeedIngestionDetails
		return ret
	}

	return o.IngestionDetails
}

// GetIngestionDetailsOk returns a tuple with the IngestionDetails field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedProcessingResult) GetIngestionDetailsOk() (*CatalogsFeedIngestionDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngestionDetails, true
}

// SetIngestionDetails sets field value
func (o *CatalogsFeedProcessingResult) SetIngestionDetails(v CatalogsFeedIngestionDetails) {
	o.IngestionDetails = v
}

// GetStatus returns the Status field value
func (o *CatalogsFeedProcessingResult) GetStatus() CatalogsFeedProcessingStatus {
	if o == nil {
		var ret CatalogsFeedProcessingStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedProcessingResult) GetStatusOk() (*CatalogsFeedProcessingStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CatalogsFeedProcessingResult) SetStatus(v CatalogsFeedProcessingStatus) {
	o.Status = v
}

// GetProductCounts returns the ProductCounts field value
// If the value is explicit nil, the zero value for CatalogsFeedProductCounts will be returned
func (o *CatalogsFeedProcessingResult) GetProductCounts() CatalogsFeedProductCounts {
	if o == nil || o.ProductCounts.Get() == nil {
		var ret CatalogsFeedProductCounts
		return ret
	}

	return *o.ProductCounts.Get()
}

// GetProductCountsOk returns a tuple with the ProductCounts field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsFeedProcessingResult) GetProductCountsOk() (*CatalogsFeedProductCounts, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductCounts.Get(), o.ProductCounts.IsSet()
}

// SetProductCounts sets field value
func (o *CatalogsFeedProcessingResult) SetProductCounts(v CatalogsFeedProductCounts) {
	o.ProductCounts.Set(&v)
}

// GetValidationDetails returns the ValidationDetails field value
func (o *CatalogsFeedProcessingResult) GetValidationDetails() CatalogsFeedValidationDetails {
	if o == nil {
		var ret CatalogsFeedValidationDetails
		return ret
	}

	return o.ValidationDetails
}

// GetValidationDetailsOk returns a tuple with the ValidationDetails field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedProcessingResult) GetValidationDetailsOk() (*CatalogsFeedValidationDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidationDetails, true
}

// SetValidationDetails sets field value
func (o *CatalogsFeedProcessingResult) SetValidationDetails(v CatalogsFeedValidationDetails) {
	o.ValidationDetails = v
}

func (o CatalogsFeedProcessingResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsFeedProcessingResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["id"] = o.Id
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["ingestion_details"] = o.IngestionDetails
	toSerialize["status"] = o.Status
	toSerialize["product_counts"] = o.ProductCounts.Get()
	toSerialize["validation_details"] = o.ValidationDetails
	return toSerialize, nil
}

func (o *CatalogsFeedProcessingResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"id",
		"updated_at",
		"ingestion_details",
		"status",
		"product_counts",
		"validation_details",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsFeedProcessingResult := _CatalogsFeedProcessingResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsFeedProcessingResult)

	if err != nil {
		return err
	}

	*o = CatalogsFeedProcessingResult(varCatalogsFeedProcessingResult)

	return err
}

type NullableCatalogsFeedProcessingResult struct {
	value *CatalogsFeedProcessingResult
	isSet bool
}

func (v NullableCatalogsFeedProcessingResult) Get() *CatalogsFeedProcessingResult {
	return v.value
}

func (v *NullableCatalogsFeedProcessingResult) Set(val *CatalogsFeedProcessingResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsFeedProcessingResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsFeedProcessingResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsFeedProcessingResult(val *CatalogsFeedProcessingResult) *NullableCatalogsFeedProcessingResult {
	return &NullableCatalogsFeedProcessingResult{value: val, isSet: true}
}

func (v NullableCatalogsFeedProcessingResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsFeedProcessingResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


