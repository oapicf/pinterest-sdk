/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsRetailProductGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsRetailProductGroup{}

// CatalogsRetailProductGroup struct for CatalogsRetailProductGroup
type CatalogsRetailProductGroup struct {
	CatalogType string `json:"catalog_type"`
	// ID of the catalog product group.
	Id string `json:"id" validate:"regexp=^\\\\d+$"`
	// Name of catalog product group
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Filters CatalogsProductGroupFilters `json:"filters"`
	// boolean indicator of whether the product group is being featured or not
	// Deprecated
	IsFeatured *bool `json:"is_featured,omitempty"`
	Type *CatalogsProductGroupType `json:"type,omitempty"`
	Status *CatalogsProductGroupStatus `json:"status,omitempty"`
	// Unix timestamp in seconds of when catalog product group was created.
	CreatedAt *int32 `json:"created_at,omitempty"`
	// Unix timestamp in seconds of last time catalog product group was updated.
	UpdatedAt *int32 `json:"updated_at,omitempty"`
	// Catalog id pertaining to the retail product group.
	CatalogId string `json:"catalog_id" validate:"regexp=^\\\\d+$"`
	// id of the catalogs feed belonging to this catalog product group
	FeedId NullableString `json:"feed_id" validate:"regexp=^\\\\d+$"`
	Country NullableString `json:"country,omitempty"`
	Locale NullableString `json:"locale,omitempty"`
}

type _CatalogsRetailProductGroup CatalogsRetailProductGroup

// NewCatalogsRetailProductGroup instantiates a new CatalogsRetailProductGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsRetailProductGroup(catalogType string, id string, filters CatalogsProductGroupFilters, catalogId string, feedId NullableString) *CatalogsRetailProductGroup {
	this := CatalogsRetailProductGroup{}
	this.CatalogType = catalogType
	this.Id = id
	this.Filters = filters
	this.CatalogId = catalogId
	this.FeedId = feedId
	return &this
}

// NewCatalogsRetailProductGroupWithDefaults instantiates a new CatalogsRetailProductGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsRetailProductGroupWithDefaults() *CatalogsRetailProductGroup {
	this := CatalogsRetailProductGroup{}
	return &this
}

// GetCatalogType returns the CatalogType field value
func (o *CatalogsRetailProductGroup) GetCatalogType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogType
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogType, true
}

// SetCatalogType sets field value
func (o *CatalogsRetailProductGroup) SetCatalogType(v string) {
	o.CatalogType = v
}

// GetId returns the Id field value
func (o *CatalogsRetailProductGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CatalogsRetailProductGroup) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogsRetailProductGroup) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsRetailProductGroup) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductGroup) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogsRetailProductGroup) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogsRetailProductGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogsRetailProductGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetFilters returns the Filters field value
func (o *CatalogsRetailProductGroup) GetFilters() CatalogsProductGroupFilters {
	if o == nil {
		var ret CatalogsProductGroupFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetFiltersOk() (*CatalogsProductGroupFilters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *CatalogsRetailProductGroup) SetFilters(v CatalogsProductGroupFilters) {
	o.Filters = v
}

// GetIsFeatured returns the IsFeatured field value if set, zero value otherwise.
// Deprecated
func (o *CatalogsRetailProductGroup) GetIsFeatured() bool {
	if o == nil || IsNil(o.IsFeatured) {
		var ret bool
		return ret
	}
	return *o.IsFeatured
}

// GetIsFeaturedOk returns a tuple with the IsFeatured field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CatalogsRetailProductGroup) GetIsFeaturedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFeatured) {
		return nil, false
	}
	return o.IsFeatured, true
}

// HasIsFeatured returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasIsFeatured() bool {
	if o != nil && !IsNil(o.IsFeatured) {
		return true
	}

	return false
}

// SetIsFeatured gets a reference to the given bool and assigns it to the IsFeatured field.
// Deprecated
func (o *CatalogsRetailProductGroup) SetIsFeatured(v bool) {
	o.IsFeatured = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroup) GetType() CatalogsProductGroupType {
	if o == nil || IsNil(o.Type) {
		var ret CatalogsProductGroupType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetTypeOk() (*CatalogsProductGroupType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CatalogsProductGroupType and assigns it to the Type field.
func (o *CatalogsRetailProductGroup) SetType(v CatalogsProductGroupType) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroup) GetStatus() CatalogsProductGroupStatus {
	if o == nil || IsNil(o.Status) {
		var ret CatalogsProductGroupStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetStatusOk() (*CatalogsProductGroupStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CatalogsProductGroupStatus and assigns it to the Status field.
func (o *CatalogsRetailProductGroup) SetStatus(v CatalogsProductGroupStatus) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroup) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *CatalogsRetailProductGroup) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroup) GetUpdatedAt() int32 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *CatalogsRetailProductGroup) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetCatalogId returns the CatalogId field value
func (o *CatalogsRetailProductGroup) GetCatalogId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroup) GetCatalogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *CatalogsRetailProductGroup) SetCatalogId(v string) {
	o.CatalogId = v
}

// GetFeedId returns the FeedId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CatalogsRetailProductGroup) GetFeedId() string {
	if o == nil || o.FeedId.Get() == nil {
		var ret string
		return ret
	}

	return *o.FeedId.Get()
}

// GetFeedIdOk returns a tuple with the FeedId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductGroup) GetFeedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeedId.Get(), o.FeedId.IsSet()
}

// SetFeedId sets field value
func (o *CatalogsRetailProductGroup) SetFeedId(v string) {
	o.FeedId.Set(&v)
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsRetailProductGroup) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductGroup) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *CatalogsRetailProductGroup) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *CatalogsRetailProductGroup) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *CatalogsRetailProductGroup) UnsetCountry() {
	o.Country.Unset()
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsRetailProductGroup) GetLocale() string {
	if o == nil || IsNil(o.Locale.Get()) {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductGroup) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroup) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *CatalogsRetailProductGroup) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *CatalogsRetailProductGroup) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *CatalogsRetailProductGroup) UnsetLocale() {
	o.Locale.Unset()
}

func (o CatalogsRetailProductGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsRetailProductGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalog_type"] = o.CatalogType
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["filters"] = o.Filters
	if !IsNil(o.IsFeatured) {
		toSerialize["is_featured"] = o.IsFeatured
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["catalog_id"] = o.CatalogId
	toSerialize["feed_id"] = o.FeedId.Get()
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	return toSerialize, nil
}

func (o *CatalogsRetailProductGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_type",
		"id",
		"filters",
		"catalog_id",
		"feed_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsRetailProductGroup := _CatalogsRetailProductGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsRetailProductGroup)

	if err != nil {
		return err
	}

	*o = CatalogsRetailProductGroup(varCatalogsRetailProductGroup)

	return err
}

type NullableCatalogsRetailProductGroup struct {
	value *CatalogsRetailProductGroup
	isSet bool
}

func (v NullableCatalogsRetailProductGroup) Get() *CatalogsRetailProductGroup {
	return v.value
}

func (v *NullableCatalogsRetailProductGroup) Set(val *CatalogsRetailProductGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsRetailProductGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsRetailProductGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsRetailProductGroup(val *CatalogsRetailProductGroup) *NullableCatalogsRetailProductGroup {
	return &NullableCatalogsRetailProductGroup{value: val, isSet: true}
}

func (v NullableCatalogsRetailProductGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsRetailProductGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


