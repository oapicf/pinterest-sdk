/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsFeedIngestionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsFeedIngestionDetails{}

// CatalogsFeedIngestionDetails struct for CatalogsFeedIngestionDetails
type CatalogsFeedIngestionDetails struct {
	Errors CatalogsFeedIngestionErrors `json:"errors"`
	Info CatalogsFeedIngestionInfo `json:"info"`
	Warnings CatalogsFeedIngestionWarnings `json:"warnings"`
}

type _CatalogsFeedIngestionDetails CatalogsFeedIngestionDetails

// NewCatalogsFeedIngestionDetails instantiates a new CatalogsFeedIngestionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsFeedIngestionDetails(errors CatalogsFeedIngestionErrors, info CatalogsFeedIngestionInfo, warnings CatalogsFeedIngestionWarnings) *CatalogsFeedIngestionDetails {
	this := CatalogsFeedIngestionDetails{}
	this.Errors = errors
	this.Info = info
	this.Warnings = warnings
	return &this
}

// NewCatalogsFeedIngestionDetailsWithDefaults instantiates a new CatalogsFeedIngestionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsFeedIngestionDetailsWithDefaults() *CatalogsFeedIngestionDetails {
	this := CatalogsFeedIngestionDetails{}
	return &this
}

// GetErrors returns the Errors field value
func (o *CatalogsFeedIngestionDetails) GetErrors() CatalogsFeedIngestionErrors {
	if o == nil {
		var ret CatalogsFeedIngestionErrors
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedIngestionDetails) GetErrorsOk() (*CatalogsFeedIngestionErrors, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *CatalogsFeedIngestionDetails) SetErrors(v CatalogsFeedIngestionErrors) {
	o.Errors = v
}

// GetInfo returns the Info field value
func (o *CatalogsFeedIngestionDetails) GetInfo() CatalogsFeedIngestionInfo {
	if o == nil {
		var ret CatalogsFeedIngestionInfo
		return ret
	}

	return o.Info
}

// GetInfoOk returns a tuple with the Info field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedIngestionDetails) GetInfoOk() (*CatalogsFeedIngestionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Info, true
}

// SetInfo sets field value
func (o *CatalogsFeedIngestionDetails) SetInfo(v CatalogsFeedIngestionInfo) {
	o.Info = v
}

// GetWarnings returns the Warnings field value
func (o *CatalogsFeedIngestionDetails) GetWarnings() CatalogsFeedIngestionWarnings {
	if o == nil {
		var ret CatalogsFeedIngestionWarnings
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *CatalogsFeedIngestionDetails) GetWarningsOk() (*CatalogsFeedIngestionWarnings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// SetWarnings sets field value
func (o *CatalogsFeedIngestionDetails) SetWarnings(v CatalogsFeedIngestionWarnings) {
	o.Warnings = v
}

func (o CatalogsFeedIngestionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsFeedIngestionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["errors"] = o.Errors
	toSerialize["info"] = o.Info
	toSerialize["warnings"] = o.Warnings
	return toSerialize, nil
}

func (o *CatalogsFeedIngestionDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"errors",
		"info",
		"warnings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsFeedIngestionDetails := _CatalogsFeedIngestionDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsFeedIngestionDetails)

	if err != nil {
		return err
	}

	*o = CatalogsFeedIngestionDetails(varCatalogsFeedIngestionDetails)

	return err
}

type NullableCatalogsFeedIngestionDetails struct {
	value *CatalogsFeedIngestionDetails
	isSet bool
}

func (v NullableCatalogsFeedIngestionDetails) Get() *CatalogsFeedIngestionDetails {
	return v.value
}

func (v *NullableCatalogsFeedIngestionDetails) Set(val *CatalogsFeedIngestionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsFeedIngestionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsFeedIngestionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsFeedIngestionDetails(val *CatalogsFeedIngestionDetails) *NullableCatalogsFeedIngestionDetails {
	return &NullableCatalogsFeedIngestionDetails{value: val, isSet: true}
}

func (v NullableCatalogsFeedIngestionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsFeedIngestionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


