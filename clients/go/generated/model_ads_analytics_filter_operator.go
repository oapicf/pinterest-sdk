/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AdsAnalyticsFilterOperator Filter operator for sync reporting
type AdsAnalyticsFilterOperator string

// List of AdsAnalyticsFilterOperator
const (
	LESS_THAN AdsAnalyticsFilterOperator = "LESS_THAN"
	GREATER_THAN AdsAnalyticsFilterOperator = "GREATER_THAN"
)

// All allowed values of AdsAnalyticsFilterOperator enum
var AllowedAdsAnalyticsFilterOperatorEnumValues = []AdsAnalyticsFilterOperator{
	"LESS_THAN",
	"GREATER_THAN",
}

func (v *AdsAnalyticsFilterOperator) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AdsAnalyticsFilterOperator(value)
	for _, existing := range AllowedAdsAnalyticsFilterOperatorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AdsAnalyticsFilterOperator", value)
}

// NewAdsAnalyticsFilterOperatorFromValue returns a pointer to a valid AdsAnalyticsFilterOperator
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAdsAnalyticsFilterOperatorFromValue(v string) (*AdsAnalyticsFilterOperator, error) {
	ev := AdsAnalyticsFilterOperator(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AdsAnalyticsFilterOperator: valid values are %v", v, AllowedAdsAnalyticsFilterOperatorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AdsAnalyticsFilterOperator) IsValid() bool {
	for _, existing := range AllowedAdsAnalyticsFilterOperatorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AdsAnalyticsFilterOperator value
func (v AdsAnalyticsFilterOperator) Ptr() *AdsAnalyticsFilterOperator {
	return &v
}

type NullableAdsAnalyticsFilterOperator struct {
	value *AdsAnalyticsFilterOperator
	isSet bool
}

func (v NullableAdsAnalyticsFilterOperator) Get() *AdsAnalyticsFilterOperator {
	return v.value
}

func (v *NullableAdsAnalyticsFilterOperator) Set(val *AdsAnalyticsFilterOperator) {
	v.value = val
	v.isSet = true
}

func (v NullableAdsAnalyticsFilterOperator) IsSet() bool {
	return v.isSet
}

func (v *NullableAdsAnalyticsFilterOperator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdsAnalyticsFilterOperator(val *AdsAnalyticsFilterOperator) *NullableAdsAnalyticsFilterOperator {
	return &NullableAdsAnalyticsFilterOperator{value: val, isSet: true}
}

func (v NullableAdsAnalyticsFilterOperator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdsAnalyticsFilterOperator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

