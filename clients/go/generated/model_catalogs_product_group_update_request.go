/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogsProductGroupUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsProductGroupUpdateRequest{}

// CatalogsProductGroupUpdateRequest Request object for updating a product group.
type CatalogsProductGroupUpdateRequest struct {
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// boolean indicator of whether the product group is being featured or not
	// Deprecated
	IsFeatured *bool `json:"is_featured,omitempty"`
	Filters *CatalogsProductGroupFiltersRequest `json:"filters,omitempty"`
}

// NewCatalogsProductGroupUpdateRequest instantiates a new CatalogsProductGroupUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsProductGroupUpdateRequest() *CatalogsProductGroupUpdateRequest {
	this := CatalogsProductGroupUpdateRequest{}
	return &this
}

// NewCatalogsProductGroupUpdateRequestWithDefaults instantiates a new CatalogsProductGroupUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsProductGroupUpdateRequestWithDefaults() *CatalogsProductGroupUpdateRequest {
	this := CatalogsProductGroupUpdateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogsProductGroupUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogsProductGroupUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogsProductGroupUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsProductGroupUpdateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsProductGroupUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogsProductGroupUpdateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogsProductGroupUpdateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogsProductGroupUpdateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogsProductGroupUpdateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetIsFeatured returns the IsFeatured field value if set, zero value otherwise.
// Deprecated
func (o *CatalogsProductGroupUpdateRequest) GetIsFeatured() bool {
	if o == nil || IsNil(o.IsFeatured) {
		var ret bool
		return ret
	}
	return *o.IsFeatured
}

// GetIsFeaturedOk returns a tuple with the IsFeatured field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CatalogsProductGroupUpdateRequest) GetIsFeaturedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFeatured) {
		return nil, false
	}
	return o.IsFeatured, true
}

// HasIsFeatured returns a boolean if a field has been set.
func (o *CatalogsProductGroupUpdateRequest) HasIsFeatured() bool {
	if o != nil && !IsNil(o.IsFeatured) {
		return true
	}

	return false
}

// SetIsFeatured gets a reference to the given bool and assigns it to the IsFeatured field.
// Deprecated
func (o *CatalogsProductGroupUpdateRequest) SetIsFeatured(v bool) {
	o.IsFeatured = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CatalogsProductGroupUpdateRequest) GetFilters() CatalogsProductGroupFiltersRequest {
	if o == nil || IsNil(o.Filters) {
		var ret CatalogsProductGroupFiltersRequest
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupUpdateRequest) GetFiltersOk() (*CatalogsProductGroupFiltersRequest, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CatalogsProductGroupUpdateRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given CatalogsProductGroupFiltersRequest and assigns it to the Filters field.
func (o *CatalogsProductGroupUpdateRequest) SetFilters(v CatalogsProductGroupFiltersRequest) {
	o.Filters = &v
}

func (o CatalogsProductGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsProductGroupUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.IsFeatured) {
		toSerialize["is_featured"] = o.IsFeatured
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	return toSerialize, nil
}

type NullableCatalogsProductGroupUpdateRequest struct {
	value *CatalogsProductGroupUpdateRequest
	isSet bool
}

func (v NullableCatalogsProductGroupUpdateRequest) Get() *CatalogsProductGroupUpdateRequest {
	return v.value
}

func (v *NullableCatalogsProductGroupUpdateRequest) Set(val *CatalogsProductGroupUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupUpdateRequest(val *CatalogsProductGroupUpdateRequest) *NullableCatalogsProductGroupUpdateRequest {
	return &NullableCatalogsProductGroupUpdateRequest{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


