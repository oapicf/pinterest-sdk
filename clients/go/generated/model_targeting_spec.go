/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TargetingSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetingSpec{}

// TargetingSpec Ad group targeting specification defining the ad group target audience. For example, `{\"APPTYPE\":[\"iphone\"], \"GENDER\":[\"male\"], \"LOCALE\":[\"en-US\"], \"LOCATION\":[\"501\"], \"AGE_BUCKET\":[\"25-34\"]}`
type TargetingSpec struct {
	// Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.
	AGE_BUCKET []string `json:"AGE_BUCKET,omitempty"`
	// Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.
	APPTYPE []string `json:"APPTYPE,omitempty"`
	// Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\"2542620905475\"]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.
	AUDIENCE_EXCLUDE []string `json:"AUDIENCE_EXCLUDE,omitempty"`
	// Targeted customer list IDs. For example: [\"2542620905473\"]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.
	AUDIENCE_INCLUDE []string `json:"AUDIENCE_INCLUDE,omitempty"`
	// Targeted genders. Values: [\"unknown\",\"male\",\"female\"]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.
	GENDER []string `json:"GENDER,omitempty"`
	// Location region codes, e.g., \"BE-VOV\" (East Flanders, Belgium) For complete list, <a href=\"https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\" target=\"_blank\">click here</a> or postal codes, e.g., \"US-94107\". Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).
	GEO []string `json:"GEO,omitempty"`
	// Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.
	INTEREST []string `json:"INTEREST,omitempty"`
	// 24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.
	LOCALE []string `json:"LOCALE,omitempty"`
	// 22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\"US\", \"807\"]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).
	LOCATION []string `json:"LOCATION,omitempty"`
	// Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting
	SHOPPING_RETARGETING []TargetingSpecSHOPPINGRETARGETING `json:"SHOPPING_RETARGETING,omitempty"`
	// 
	TARGETING_STRATEGY []string `json:"TARGETING_STRATEGY,omitempty"`
}

// NewTargetingSpec instantiates a new TargetingSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetingSpec() *TargetingSpec {
	this := TargetingSpec{}
	return &this
}

// NewTargetingSpecWithDefaults instantiates a new TargetingSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetingSpecWithDefaults() *TargetingSpec {
	this := TargetingSpec{}
	return &this
}

// GetAGE_BUCKET returns the AGE_BUCKET field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetAGE_BUCKET() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AGE_BUCKET
}

// GetAGE_BUCKETOk returns a tuple with the AGE_BUCKET field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetAGE_BUCKETOk() ([]string, bool) {
	if o == nil || IsNil(o.AGE_BUCKET) {
		return nil, false
	}
	return o.AGE_BUCKET, true
}

// HasAGE_BUCKET returns a boolean if a field has been set.
func (o *TargetingSpec) HasAGE_BUCKET() bool {
	if o != nil && !IsNil(o.AGE_BUCKET) {
		return true
	}

	return false
}

// SetAGE_BUCKET gets a reference to the given []string and assigns it to the AGE_BUCKET field.
func (o *TargetingSpec) SetAGE_BUCKET(v []string) {
	o.AGE_BUCKET = v
}

// GetAPPTYPE returns the APPTYPE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetAPPTYPE() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.APPTYPE
}

// GetAPPTYPEOk returns a tuple with the APPTYPE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetAPPTYPEOk() ([]string, bool) {
	if o == nil || IsNil(o.APPTYPE) {
		return nil, false
	}
	return o.APPTYPE, true
}

// HasAPPTYPE returns a boolean if a field has been set.
func (o *TargetingSpec) HasAPPTYPE() bool {
	if o != nil && !IsNil(o.APPTYPE) {
		return true
	}

	return false
}

// SetAPPTYPE gets a reference to the given []string and assigns it to the APPTYPE field.
func (o *TargetingSpec) SetAPPTYPE(v []string) {
	o.APPTYPE = v
}

// GetAUDIENCE_EXCLUDE returns the AUDIENCE_EXCLUDE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetAUDIENCE_EXCLUDE() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AUDIENCE_EXCLUDE
}

// GetAUDIENCE_EXCLUDEOk returns a tuple with the AUDIENCE_EXCLUDE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetAUDIENCE_EXCLUDEOk() ([]string, bool) {
	if o == nil || IsNil(o.AUDIENCE_EXCLUDE) {
		return nil, false
	}
	return o.AUDIENCE_EXCLUDE, true
}

// HasAUDIENCE_EXCLUDE returns a boolean if a field has been set.
func (o *TargetingSpec) HasAUDIENCE_EXCLUDE() bool {
	if o != nil && !IsNil(o.AUDIENCE_EXCLUDE) {
		return true
	}

	return false
}

// SetAUDIENCE_EXCLUDE gets a reference to the given []string and assigns it to the AUDIENCE_EXCLUDE field.
func (o *TargetingSpec) SetAUDIENCE_EXCLUDE(v []string) {
	o.AUDIENCE_EXCLUDE = v
}

// GetAUDIENCE_INCLUDE returns the AUDIENCE_INCLUDE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetAUDIENCE_INCLUDE() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AUDIENCE_INCLUDE
}

// GetAUDIENCE_INCLUDEOk returns a tuple with the AUDIENCE_INCLUDE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetAUDIENCE_INCLUDEOk() ([]string, bool) {
	if o == nil || IsNil(o.AUDIENCE_INCLUDE) {
		return nil, false
	}
	return o.AUDIENCE_INCLUDE, true
}

// HasAUDIENCE_INCLUDE returns a boolean if a field has been set.
func (o *TargetingSpec) HasAUDIENCE_INCLUDE() bool {
	if o != nil && !IsNil(o.AUDIENCE_INCLUDE) {
		return true
	}

	return false
}

// SetAUDIENCE_INCLUDE gets a reference to the given []string and assigns it to the AUDIENCE_INCLUDE field.
func (o *TargetingSpec) SetAUDIENCE_INCLUDE(v []string) {
	o.AUDIENCE_INCLUDE = v
}

// GetGENDER returns the GENDER field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetGENDER() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.GENDER
}

// GetGENDEROk returns a tuple with the GENDER field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetGENDEROk() ([]string, bool) {
	if o == nil || IsNil(o.GENDER) {
		return nil, false
	}
	return o.GENDER, true
}

// HasGENDER returns a boolean if a field has been set.
func (o *TargetingSpec) HasGENDER() bool {
	if o != nil && !IsNil(o.GENDER) {
		return true
	}

	return false
}

// SetGENDER gets a reference to the given []string and assigns it to the GENDER field.
func (o *TargetingSpec) SetGENDER(v []string) {
	o.GENDER = v
}

// GetGEO returns the GEO field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetGEO() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.GEO
}

// GetGEOOk returns a tuple with the GEO field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetGEOOk() ([]string, bool) {
	if o == nil || IsNil(o.GEO) {
		return nil, false
	}
	return o.GEO, true
}

// HasGEO returns a boolean if a field has been set.
func (o *TargetingSpec) HasGEO() bool {
	if o != nil && !IsNil(o.GEO) {
		return true
	}

	return false
}

// SetGEO gets a reference to the given []string and assigns it to the GEO field.
func (o *TargetingSpec) SetGEO(v []string) {
	o.GEO = v
}

// GetINTEREST returns the INTEREST field value if set, zero value otherwise.
func (o *TargetingSpec) GetINTEREST() []string {
	if o == nil || IsNil(o.INTEREST) {
		var ret []string
		return ret
	}
	return o.INTEREST
}

// GetINTERESTOk returns a tuple with the INTEREST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetingSpec) GetINTERESTOk() ([]string, bool) {
	if o == nil || IsNil(o.INTEREST) {
		return nil, false
	}
	return o.INTEREST, true
}

// HasINTEREST returns a boolean if a field has been set.
func (o *TargetingSpec) HasINTEREST() bool {
	if o != nil && !IsNil(o.INTEREST) {
		return true
	}

	return false
}

// SetINTEREST gets a reference to the given []string and assigns it to the INTEREST field.
func (o *TargetingSpec) SetINTEREST(v []string) {
	o.INTEREST = v
}

// GetLOCALE returns the LOCALE field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetLOCALE() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.LOCALE
}

// GetLOCALEOk returns a tuple with the LOCALE field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetLOCALEOk() ([]string, bool) {
	if o == nil || IsNil(o.LOCALE) {
		return nil, false
	}
	return o.LOCALE, true
}

// HasLOCALE returns a boolean if a field has been set.
func (o *TargetingSpec) HasLOCALE() bool {
	if o != nil && !IsNil(o.LOCALE) {
		return true
	}

	return false
}

// SetLOCALE gets a reference to the given []string and assigns it to the LOCALE field.
func (o *TargetingSpec) SetLOCALE(v []string) {
	o.LOCALE = v
}

// GetLOCATION returns the LOCATION field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetLOCATION() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.LOCATION
}

// GetLOCATIONOk returns a tuple with the LOCATION field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetLOCATIONOk() ([]string, bool) {
	if o == nil || IsNil(o.LOCATION) {
		return nil, false
	}
	return o.LOCATION, true
}

// HasLOCATION returns a boolean if a field has been set.
func (o *TargetingSpec) HasLOCATION() bool {
	if o != nil && !IsNil(o.LOCATION) {
		return true
	}

	return false
}

// SetLOCATION gets a reference to the given []string and assigns it to the LOCATION field.
func (o *TargetingSpec) SetLOCATION(v []string) {
	o.LOCATION = v
}

// GetSHOPPING_RETARGETING returns the SHOPPING_RETARGETING field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetSHOPPING_RETARGETING() []TargetingSpecSHOPPINGRETARGETING {
	if o == nil {
		var ret []TargetingSpecSHOPPINGRETARGETING
		return ret
	}
	return o.SHOPPING_RETARGETING
}

// GetSHOPPING_RETARGETINGOk returns a tuple with the SHOPPING_RETARGETING field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetSHOPPING_RETARGETINGOk() ([]TargetingSpecSHOPPINGRETARGETING, bool) {
	if o == nil || IsNil(o.SHOPPING_RETARGETING) {
		return nil, false
	}
	return o.SHOPPING_RETARGETING, true
}

// HasSHOPPING_RETARGETING returns a boolean if a field has been set.
func (o *TargetingSpec) HasSHOPPING_RETARGETING() bool {
	if o != nil && !IsNil(o.SHOPPING_RETARGETING) {
		return true
	}

	return false
}

// SetSHOPPING_RETARGETING gets a reference to the given []TargetingSpecSHOPPINGRETARGETING and assigns it to the SHOPPING_RETARGETING field.
func (o *TargetingSpec) SetSHOPPING_RETARGETING(v []TargetingSpecSHOPPINGRETARGETING) {
	o.SHOPPING_RETARGETING = v
}

// GetTARGETING_STRATEGY returns the TARGETING_STRATEGY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TargetingSpec) GetTARGETING_STRATEGY() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TARGETING_STRATEGY
}

// GetTARGETING_STRATEGYOk returns a tuple with the TARGETING_STRATEGY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetingSpec) GetTARGETING_STRATEGYOk() ([]string, bool) {
	if o == nil || IsNil(o.TARGETING_STRATEGY) {
		return nil, false
	}
	return o.TARGETING_STRATEGY, true
}

// HasTARGETING_STRATEGY returns a boolean if a field has been set.
func (o *TargetingSpec) HasTARGETING_STRATEGY() bool {
	if o != nil && !IsNil(o.TARGETING_STRATEGY) {
		return true
	}

	return false
}

// SetTARGETING_STRATEGY gets a reference to the given []string and assigns it to the TARGETING_STRATEGY field.
func (o *TargetingSpec) SetTARGETING_STRATEGY(v []string) {
	o.TARGETING_STRATEGY = v
}

func (o TargetingSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetingSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AGE_BUCKET != nil {
		toSerialize["AGE_BUCKET"] = o.AGE_BUCKET
	}
	if o.APPTYPE != nil {
		toSerialize["APPTYPE"] = o.APPTYPE
	}
	if o.AUDIENCE_EXCLUDE != nil {
		toSerialize["AUDIENCE_EXCLUDE"] = o.AUDIENCE_EXCLUDE
	}
	if o.AUDIENCE_INCLUDE != nil {
		toSerialize["AUDIENCE_INCLUDE"] = o.AUDIENCE_INCLUDE
	}
	if o.GENDER != nil {
		toSerialize["GENDER"] = o.GENDER
	}
	if o.GEO != nil {
		toSerialize["GEO"] = o.GEO
	}
	if !IsNil(o.INTEREST) {
		toSerialize["INTEREST"] = o.INTEREST
	}
	if o.LOCALE != nil {
		toSerialize["LOCALE"] = o.LOCALE
	}
	if o.LOCATION != nil {
		toSerialize["LOCATION"] = o.LOCATION
	}
	if o.SHOPPING_RETARGETING != nil {
		toSerialize["SHOPPING_RETARGETING"] = o.SHOPPING_RETARGETING
	}
	if o.TARGETING_STRATEGY != nil {
		toSerialize["TARGETING_STRATEGY"] = o.TARGETING_STRATEGY
	}
	return toSerialize, nil
}

type NullableTargetingSpec struct {
	value *TargetingSpec
	isSet bool
}

func (v NullableTargetingSpec) Get() *TargetingSpec {
	return v.value
}

func (v *NullableTargetingSpec) Set(val *TargetingSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetingSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetingSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetingSpec(val *TargetingSpec) *NullableTargetingSpec {
	return &NullableTargetingSpec{value: val, isSet: true}
}

func (v NullableTargetingSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetingSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


