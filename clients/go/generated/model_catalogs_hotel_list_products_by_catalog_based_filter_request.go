/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsHotelListProductsByCatalogBasedFilterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsHotelListProductsByCatalogBasedFilterRequest{}

// CatalogsHotelListProductsByCatalogBasedFilterRequest Request object to list products for a given hotel catalog_id and product group filter.
type CatalogsHotelListProductsByCatalogBasedFilterRequest struct {
	CatalogType string `json:"catalog_type"`
	// Catalog id pertaining to the hotel product group.
	CatalogId string `json:"catalog_id" validate:"regexp=^\\\\d+$"`
	Filters CatalogsHotelProductGroupFilters `json:"filters"`
}

type _CatalogsHotelListProductsByCatalogBasedFilterRequest CatalogsHotelListProductsByCatalogBasedFilterRequest

// NewCatalogsHotelListProductsByCatalogBasedFilterRequest instantiates a new CatalogsHotelListProductsByCatalogBasedFilterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsHotelListProductsByCatalogBasedFilterRequest(catalogType string, catalogId string, filters CatalogsHotelProductGroupFilters) *CatalogsHotelListProductsByCatalogBasedFilterRequest {
	this := CatalogsHotelListProductsByCatalogBasedFilterRequest{}
	this.CatalogType = catalogType
	this.CatalogId = catalogId
	this.Filters = filters
	return &this
}

// NewCatalogsHotelListProductsByCatalogBasedFilterRequestWithDefaults instantiates a new CatalogsHotelListProductsByCatalogBasedFilterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsHotelListProductsByCatalogBasedFilterRequestWithDefaults() *CatalogsHotelListProductsByCatalogBasedFilterRequest {
	this := CatalogsHotelListProductsByCatalogBasedFilterRequest{}
	return &this
}

// GetCatalogType returns the CatalogType field value
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) GetCatalogType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogType
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value
// and a boolean to check if the value has been set.
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogType, true
}

// SetCatalogType sets field value
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) SetCatalogType(v string) {
	o.CatalogType = v
}

// GetCatalogId returns the CatalogId field value
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) GetCatalogId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) GetCatalogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) SetCatalogId(v string) {
	o.CatalogId = v
}

// GetFilters returns the Filters field value
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) GetFilters() CatalogsHotelProductGroupFilters {
	if o == nil {
		var ret CatalogsHotelProductGroupFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) GetFiltersOk() (*CatalogsHotelProductGroupFilters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) SetFilters(v CatalogsHotelProductGroupFilters) {
	o.Filters = v
}

func (o CatalogsHotelListProductsByCatalogBasedFilterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsHotelListProductsByCatalogBasedFilterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalog_type"] = o.CatalogType
	toSerialize["catalog_id"] = o.CatalogId
	toSerialize["filters"] = o.Filters
	return toSerialize, nil
}

func (o *CatalogsHotelListProductsByCatalogBasedFilterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_type",
		"catalog_id",
		"filters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsHotelListProductsByCatalogBasedFilterRequest := _CatalogsHotelListProductsByCatalogBasedFilterRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsHotelListProductsByCatalogBasedFilterRequest)

	if err != nil {
		return err
	}

	*o = CatalogsHotelListProductsByCatalogBasedFilterRequest(varCatalogsHotelListProductsByCatalogBasedFilterRequest)

	return err
}

type NullableCatalogsHotelListProductsByCatalogBasedFilterRequest struct {
	value *CatalogsHotelListProductsByCatalogBasedFilterRequest
	isSet bool
}

func (v NullableCatalogsHotelListProductsByCatalogBasedFilterRequest) Get() *CatalogsHotelListProductsByCatalogBasedFilterRequest {
	return v.value
}

func (v *NullableCatalogsHotelListProductsByCatalogBasedFilterRequest) Set(val *CatalogsHotelListProductsByCatalogBasedFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsHotelListProductsByCatalogBasedFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsHotelListProductsByCatalogBasedFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsHotelListProductsByCatalogBasedFilterRequest(val *CatalogsHotelListProductsByCatalogBasedFilterRequest) *NullableCatalogsHotelListProductsByCatalogBasedFilterRequest {
	return &NullableCatalogsHotelListProductsByCatalogBasedFilterRequest{value: val, isSet: true}
}

func (v NullableCatalogsHotelListProductsByCatalogBasedFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsHotelListProductsByCatalogBasedFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


