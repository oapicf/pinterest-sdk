/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CatalogsFeedProcessingStatus the model 'CatalogsFeedProcessingStatus'
type CatalogsFeedProcessingStatus string

// List of CatalogsFeedProcessingStatus
const (
	COMPLETED CatalogsFeedProcessingStatus = "COMPLETED"
	FAILED CatalogsFeedProcessingStatus = "FAILED"
	PROCESSING CatalogsFeedProcessingStatus = "PROCESSING"
)

// All allowed values of CatalogsFeedProcessingStatus enum
var AllowedCatalogsFeedProcessingStatusEnumValues = []CatalogsFeedProcessingStatus{
	"COMPLETED",
	"FAILED",
	"PROCESSING",
}

func (v *CatalogsFeedProcessingStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CatalogsFeedProcessingStatus(value)
	for _, existing := range AllowedCatalogsFeedProcessingStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CatalogsFeedProcessingStatus", value)
}

// NewCatalogsFeedProcessingStatusFromValue returns a pointer to a valid CatalogsFeedProcessingStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCatalogsFeedProcessingStatusFromValue(v string) (*CatalogsFeedProcessingStatus, error) {
	ev := CatalogsFeedProcessingStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CatalogsFeedProcessingStatus: valid values are %v", v, AllowedCatalogsFeedProcessingStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CatalogsFeedProcessingStatus) IsValid() bool {
	for _, existing := range AllowedCatalogsFeedProcessingStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CatalogsFeedProcessingStatus value
func (v CatalogsFeedProcessingStatus) Ptr() *CatalogsFeedProcessingStatus {
	return &v
}

type NullableCatalogsFeedProcessingStatus struct {
	value *CatalogsFeedProcessingStatus
	isSet bool
}

func (v NullableCatalogsFeedProcessingStatus) Get() *CatalogsFeedProcessingStatus {
	return v.value
}

func (v *NullableCatalogsFeedProcessingStatus) Set(val *CatalogsFeedProcessingStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsFeedProcessingStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsFeedProcessingStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsFeedProcessingStatus(val *CatalogsFeedProcessingStatus) *NullableCatalogsFeedProcessingStatus {
	return &NullableCatalogsFeedProcessingStatus{value: val, isSet: true}
}

func (v NullableCatalogsFeedProcessingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsFeedProcessingStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

