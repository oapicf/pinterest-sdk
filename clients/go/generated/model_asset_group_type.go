/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AssetGroupType Asset group type
type AssetGroupType string

// List of AssetGroupType
const (
	BRAND AssetGroupType = "BRAND"
	LOCATION_OR_LANGUAGE AssetGroupType = "LOCATION_OR_LANGUAGE"
	PRODUCT_LINE AssetGroupType = "PRODUCT_LINE"
	OTHER AssetGroupType = "OTHER"
)

// All allowed values of AssetGroupType enum
var AllowedAssetGroupTypeEnumValues = []AssetGroupType{
	"BRAND",
	"LOCATION_OR_LANGUAGE",
	"PRODUCT_LINE",
	"OTHER",
}

func (v *AssetGroupType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AssetGroupType(value)
	for _, existing := range AllowedAssetGroupTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AssetGroupType", value)
}

// NewAssetGroupTypeFromValue returns a pointer to a valid AssetGroupType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAssetGroupTypeFromValue(v string) (*AssetGroupType, error) {
	ev := AssetGroupType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AssetGroupType: valid values are %v", v, AllowedAssetGroupTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AssetGroupType) IsValid() bool {
	for _, existing := range AllowedAssetGroupTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AssetGroupType value
func (v AssetGroupType) Ptr() *AssetGroupType {
	return &v
}

type NullableAssetGroupType struct {
	value *AssetGroupType
	isSet bool
}

func (v NullableAssetGroupType) Get() *AssetGroupType {
	return v.value
}

func (v *NullableAssetGroupType) Set(val *AssetGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetGroupType(val *AssetGroupType) *NullableAssetGroupType {
	return &NullableAssetGroupType{value: val, isSet: true}
}

func (v NullableAssetGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

