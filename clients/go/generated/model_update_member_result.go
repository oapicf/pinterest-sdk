/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateMemberResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMemberResult{}

// UpdateMemberResult struct for UpdateMemberResult
type UpdateMemberResult struct {
	// The access level a member has to the business. Values are case-sensitive. <br> - EMPLOYEE: Can only view and access assets you assign to them. They cannot see details about other employees, partners, or other assets. <br> - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access.
	BusinessRole *string `json:"business_role,omitempty"`
	// Unique identifier of the business member.
	MemberId *string `json:"member_id,omitempty" validate:"regexp=^\\\\d+$"`
}

// NewUpdateMemberResult instantiates a new UpdateMemberResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMemberResult() *UpdateMemberResult {
	this := UpdateMemberResult{}
	return &this
}

// NewUpdateMemberResultWithDefaults instantiates a new UpdateMemberResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMemberResultWithDefaults() *UpdateMemberResult {
	this := UpdateMemberResult{}
	return &this
}

// GetBusinessRole returns the BusinessRole field value if set, zero value otherwise.
func (o *UpdateMemberResult) GetBusinessRole() string {
	if o == nil || IsNil(o.BusinessRole) {
		var ret string
		return ret
	}
	return *o.BusinessRole
}

// GetBusinessRoleOk returns a tuple with the BusinessRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMemberResult) GetBusinessRoleOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessRole) {
		return nil, false
	}
	return o.BusinessRole, true
}

// HasBusinessRole returns a boolean if a field has been set.
func (o *UpdateMemberResult) HasBusinessRole() bool {
	if o != nil && !IsNil(o.BusinessRole) {
		return true
	}

	return false
}

// SetBusinessRole gets a reference to the given string and assigns it to the BusinessRole field.
func (o *UpdateMemberResult) SetBusinessRole(v string) {
	o.BusinessRole = &v
}

// GetMemberId returns the MemberId field value if set, zero value otherwise.
func (o *UpdateMemberResult) GetMemberId() string {
	if o == nil || IsNil(o.MemberId) {
		var ret string
		return ret
	}
	return *o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMemberResult) GetMemberIdOk() (*string, bool) {
	if o == nil || IsNil(o.MemberId) {
		return nil, false
	}
	return o.MemberId, true
}

// HasMemberId returns a boolean if a field has been set.
func (o *UpdateMemberResult) HasMemberId() bool {
	if o != nil && !IsNil(o.MemberId) {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given string and assigns it to the MemberId field.
func (o *UpdateMemberResult) SetMemberId(v string) {
	o.MemberId = &v
}

func (o UpdateMemberResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMemberResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessRole) {
		toSerialize["business_role"] = o.BusinessRole
	}
	if !IsNil(o.MemberId) {
		toSerialize["member_id"] = o.MemberId
	}
	return toSerialize, nil
}

type NullableUpdateMemberResult struct {
	value *UpdateMemberResult
	isSet bool
}

func (v NullableUpdateMemberResult) Get() *UpdateMemberResult {
	return v.value
}

func (v *NullableUpdateMemberResult) Set(val *UpdateMemberResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMemberResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMemberResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMemberResult(val *UpdateMemberResult) *NullableUpdateMemberResult {
	return &NullableUpdateMemberResult{value: val, isSet: true}
}

func (v NullableUpdateMemberResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMemberResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


