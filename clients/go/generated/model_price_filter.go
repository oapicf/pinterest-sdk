/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PriceFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceFilter{}

// PriceFilter struct for PriceFilter
type PriceFilter struct {
	PRICE CatalogsProductGroupPricingCurrencyCriteria `json:"PRICE"`
}

type _PriceFilter PriceFilter

// NewPriceFilter instantiates a new PriceFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceFilter(pRICE CatalogsProductGroupPricingCurrencyCriteria) *PriceFilter {
	this := PriceFilter{}
	this.PRICE = pRICE
	return &this
}

// NewPriceFilterWithDefaults instantiates a new PriceFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceFilterWithDefaults() *PriceFilter {
	this := PriceFilter{}
	return &this
}

// GetPRICE returns the PRICE field value
func (o *PriceFilter) GetPRICE() CatalogsProductGroupPricingCurrencyCriteria {
	if o == nil {
		var ret CatalogsProductGroupPricingCurrencyCriteria
		return ret
	}

	return o.PRICE
}

// GetPRICEOk returns a tuple with the PRICE field value
// and a boolean to check if the value has been set.
func (o *PriceFilter) GetPRICEOk() (*CatalogsProductGroupPricingCurrencyCriteria, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PRICE, true
}

// SetPRICE sets field value
func (o *PriceFilter) SetPRICE(v CatalogsProductGroupPricingCurrencyCriteria) {
	o.PRICE = v
}

func (o PriceFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["PRICE"] = o.PRICE
	return toSerialize, nil
}

func (o *PriceFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"PRICE",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPriceFilter := _PriceFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPriceFilter)

	if err != nil {
		return err
	}

	*o = PriceFilter(varPriceFilter)

	return err
}

type NullablePriceFilter struct {
	value *PriceFilter
	isSet bool
}

func (v NullablePriceFilter) Get() *PriceFilter {
	return v.value
}

func (v *NullablePriceFilter) Set(val *PriceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceFilter(val *PriceFilter) *NullablePriceFilter {
	return &NullablePriceFilter{value: val, isSet: true}
}

func (v NullablePriceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


