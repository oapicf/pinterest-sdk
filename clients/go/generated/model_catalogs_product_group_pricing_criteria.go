/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsProductGroupPricingCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsProductGroupPricingCriteria{}

// CatalogsProductGroupPricingCriteria struct for CatalogsProductGroupPricingCriteria
type CatalogsProductGroupPricingCriteria struct {
	Inclusion *bool `json:"inclusion,omitempty"`
	Values float32 `json:"values"`
	Negated *bool `json:"negated,omitempty"`
}

type _CatalogsProductGroupPricingCriteria CatalogsProductGroupPricingCriteria

// NewCatalogsProductGroupPricingCriteria instantiates a new CatalogsProductGroupPricingCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsProductGroupPricingCriteria(values float32) *CatalogsProductGroupPricingCriteria {
	this := CatalogsProductGroupPricingCriteria{}
	var inclusion bool = true
	this.Inclusion = &inclusion
	this.Values = values
	var negated bool = false
	this.Negated = &negated
	return &this
}

// NewCatalogsProductGroupPricingCriteriaWithDefaults instantiates a new CatalogsProductGroupPricingCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsProductGroupPricingCriteriaWithDefaults() *CatalogsProductGroupPricingCriteria {
	this := CatalogsProductGroupPricingCriteria{}
	var inclusion bool = true
	this.Inclusion = &inclusion
	var negated bool = false
	this.Negated = &negated
	return &this
}

// GetInclusion returns the Inclusion field value if set, zero value otherwise.
func (o *CatalogsProductGroupPricingCriteria) GetInclusion() bool {
	if o == nil || IsNil(o.Inclusion) {
		var ret bool
		return ret
	}
	return *o.Inclusion
}

// GetInclusionOk returns a tuple with the Inclusion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupPricingCriteria) GetInclusionOk() (*bool, bool) {
	if o == nil || IsNil(o.Inclusion) {
		return nil, false
	}
	return o.Inclusion, true
}

// HasInclusion returns a boolean if a field has been set.
func (o *CatalogsProductGroupPricingCriteria) HasInclusion() bool {
	if o != nil && !IsNil(o.Inclusion) {
		return true
	}

	return false
}

// SetInclusion gets a reference to the given bool and assigns it to the Inclusion field.
func (o *CatalogsProductGroupPricingCriteria) SetInclusion(v bool) {
	o.Inclusion = &v
}

// GetValues returns the Values field value
func (o *CatalogsProductGroupPricingCriteria) GetValues() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupPricingCriteria) GetValuesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *CatalogsProductGroupPricingCriteria) SetValues(v float32) {
	o.Values = v
}

// GetNegated returns the Negated field value if set, zero value otherwise.
func (o *CatalogsProductGroupPricingCriteria) GetNegated() bool {
	if o == nil || IsNil(o.Negated) {
		var ret bool
		return ret
	}
	return *o.Negated
}

// GetNegatedOk returns a tuple with the Negated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsProductGroupPricingCriteria) GetNegatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Negated) {
		return nil, false
	}
	return o.Negated, true
}

// HasNegated returns a boolean if a field has been set.
func (o *CatalogsProductGroupPricingCriteria) HasNegated() bool {
	if o != nil && !IsNil(o.Negated) {
		return true
	}

	return false
}

// SetNegated gets a reference to the given bool and assigns it to the Negated field.
func (o *CatalogsProductGroupPricingCriteria) SetNegated(v bool) {
	o.Negated = &v
}

func (o CatalogsProductGroupPricingCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsProductGroupPricingCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inclusion) {
		toSerialize["inclusion"] = o.Inclusion
	}
	toSerialize["values"] = o.Values
	if !IsNil(o.Negated) {
		toSerialize["negated"] = o.Negated
	}
	return toSerialize, nil
}

func (o *CatalogsProductGroupPricingCriteria) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsProductGroupPricingCriteria := _CatalogsProductGroupPricingCriteria{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsProductGroupPricingCriteria)

	if err != nil {
		return err
	}

	*o = CatalogsProductGroupPricingCriteria(varCatalogsProductGroupPricingCriteria)

	return err
}

type NullableCatalogsProductGroupPricingCriteria struct {
	value *CatalogsProductGroupPricingCriteria
	isSet bool
}

func (v NullableCatalogsProductGroupPricingCriteria) Get() *CatalogsProductGroupPricingCriteria {
	return v.value
}

func (v *NullableCatalogsProductGroupPricingCriteria) Set(val *CatalogsProductGroupPricingCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsProductGroupPricingCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsProductGroupPricingCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsProductGroupPricingCriteria(val *CatalogsProductGroupPricingCriteria) *NullableCatalogsProductGroupPricingCriteria {
	return &NullableCatalogsProductGroupPricingCriteria{value: val, isSet: true}
}

func (v NullableCatalogsProductGroupPricingCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsProductGroupPricingCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


