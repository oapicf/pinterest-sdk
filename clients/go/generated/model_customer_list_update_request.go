/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomerListUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerListUpdateRequest{}

// CustomerListUpdateRequest struct for CustomerListUpdateRequest
type CustomerListUpdateRequest struct {
	// Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
	Records string `json:"records"`
	OperationType UserListOperationType `json:"operation_type"`
	Exceptions Exception `json:"exceptions,omitempty"`
}

type _CustomerListUpdateRequest CustomerListUpdateRequest

// NewCustomerListUpdateRequest instantiates a new CustomerListUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerListUpdateRequest(records string, operationType UserListOperationType) *CustomerListUpdateRequest {
	this := CustomerListUpdateRequest{}
	this.Records = records
	this.OperationType = operationType
	return &this
}

// NewCustomerListUpdateRequestWithDefaults instantiates a new CustomerListUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerListUpdateRequestWithDefaults() *CustomerListUpdateRequest {
	this := CustomerListUpdateRequest{}
	return &this
}

// GetRecords returns the Records field value
func (o *CustomerListUpdateRequest) GetRecords() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value
// and a boolean to check if the value has been set.
func (o *CustomerListUpdateRequest) GetRecordsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Records, true
}

// SetRecords sets field value
func (o *CustomerListUpdateRequest) SetRecords(v string) {
	o.Records = v
}

// GetOperationType returns the OperationType field value
func (o *CustomerListUpdateRequest) GetOperationType() UserListOperationType {
	if o == nil {
		var ret UserListOperationType
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *CustomerListUpdateRequest) GetOperationTypeOk() (*UserListOperationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *CustomerListUpdateRequest) SetOperationType(v UserListOperationType) {
	o.OperationType = v
}

// GetExceptions returns the Exceptions field value if set, zero value otherwise.
func (o *CustomerListUpdateRequest) GetExceptions() Exception {
	if o == nil || IsNil(o.Exceptions) {
		var ret Exception
		return ret
	}
	return o.Exceptions
}

// GetExceptionsOk returns a tuple with the Exceptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerListUpdateRequest) GetExceptionsOk() (Exception, bool) {
	if o == nil || IsNil(o.Exceptions) {
		return Exception{}, false
	}
	return o.Exceptions, true
}

// HasExceptions returns a boolean if a field has been set.
func (o *CustomerListUpdateRequest) HasExceptions() bool {
	if o != nil && !IsNil(o.Exceptions) {
		return true
	}

	return false
}

// SetExceptions gets a reference to the given Exception and assigns it to the Exceptions field.
func (o *CustomerListUpdateRequest) SetExceptions(v Exception) {
	o.Exceptions = v
}

func (o CustomerListUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerListUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["records"] = o.Records
	toSerialize["operation_type"] = o.OperationType
	if !IsNil(o.Exceptions) {
		toSerialize["exceptions"] = o.Exceptions
	}
	return toSerialize, nil
}

func (o *CustomerListUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"records",
		"operation_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerListUpdateRequest := _CustomerListUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerListUpdateRequest)

	if err != nil {
		return err
	}

	*o = CustomerListUpdateRequest(varCustomerListUpdateRequest)

	return err
}

type NullableCustomerListUpdateRequest struct {
	value *CustomerListUpdateRequest
	isSet bool
}

func (v NullableCustomerListUpdateRequest) Get() *CustomerListUpdateRequest {
	return v.value
}

func (v *NullableCustomerListUpdateRequest) Set(val *CustomerListUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerListUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerListUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerListUpdateRequest(val *CustomerListUpdateRequest) *NullableCustomerListUpdateRequest {
	return &NullableCustomerListUpdateRequest{value: val, isSet: true}
}

func (v NullableCustomerListUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerListUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


