/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BaseInviteDataResponseInviteData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseInviteDataResponseInviteData{}

// BaseInviteDataResponseInviteData Metadata for the invite/request.
type BaseInviteDataResponseInviteData struct {
	// The date and time when the invite/request will expire. Returned in milliseconds.
	InviteExpiration *int32 `json:"invite_expiration,omitempty"`
	// The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
	InviteStatus *string `json:"invite_status,omitempty"`
	// The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
	InviteType *string `json:"invite_type,omitempty"`
	// The date and time the invite/request was last updated. Returned in milliseconds.
	LastUpdatedTime *int32 `json:"last_updated_time,omitempty"`
	// The date and time the invite/request was sent/created. Returned in milliseconds.
	SentAt *int32 `json:"sent_at,omitempty"`
}

// NewBaseInviteDataResponseInviteData instantiates a new BaseInviteDataResponseInviteData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseInviteDataResponseInviteData() *BaseInviteDataResponseInviteData {
	this := BaseInviteDataResponseInviteData{}
	return &this
}

// NewBaseInviteDataResponseInviteDataWithDefaults instantiates a new BaseInviteDataResponseInviteData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseInviteDataResponseInviteDataWithDefaults() *BaseInviteDataResponseInviteData {
	this := BaseInviteDataResponseInviteData{}
	return &this
}

// GetInviteExpiration returns the InviteExpiration field value if set, zero value otherwise.
func (o *BaseInviteDataResponseInviteData) GetInviteExpiration() int32 {
	if o == nil || IsNil(o.InviteExpiration) {
		var ret int32
		return ret
	}
	return *o.InviteExpiration
}

// GetInviteExpirationOk returns a tuple with the InviteExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseInviteDataResponseInviteData) GetInviteExpirationOk() (*int32, bool) {
	if o == nil || IsNil(o.InviteExpiration) {
		return nil, false
	}
	return o.InviteExpiration, true
}

// HasInviteExpiration returns a boolean if a field has been set.
func (o *BaseInviteDataResponseInviteData) HasInviteExpiration() bool {
	if o != nil && !IsNil(o.InviteExpiration) {
		return true
	}

	return false
}

// SetInviteExpiration gets a reference to the given int32 and assigns it to the InviteExpiration field.
func (o *BaseInviteDataResponseInviteData) SetInviteExpiration(v int32) {
	o.InviteExpiration = &v
}

// GetInviteStatus returns the InviteStatus field value if set, zero value otherwise.
func (o *BaseInviteDataResponseInviteData) GetInviteStatus() string {
	if o == nil || IsNil(o.InviteStatus) {
		var ret string
		return ret
	}
	return *o.InviteStatus
}

// GetInviteStatusOk returns a tuple with the InviteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseInviteDataResponseInviteData) GetInviteStatusOk() (*string, bool) {
	if o == nil || IsNil(o.InviteStatus) {
		return nil, false
	}
	return o.InviteStatus, true
}

// HasInviteStatus returns a boolean if a field has been set.
func (o *BaseInviteDataResponseInviteData) HasInviteStatus() bool {
	if o != nil && !IsNil(o.InviteStatus) {
		return true
	}

	return false
}

// SetInviteStatus gets a reference to the given string and assigns it to the InviteStatus field.
func (o *BaseInviteDataResponseInviteData) SetInviteStatus(v string) {
	o.InviteStatus = &v
}

// GetInviteType returns the InviteType field value if set, zero value otherwise.
func (o *BaseInviteDataResponseInviteData) GetInviteType() string {
	if o == nil || IsNil(o.InviteType) {
		var ret string
		return ret
	}
	return *o.InviteType
}

// GetInviteTypeOk returns a tuple with the InviteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseInviteDataResponseInviteData) GetInviteTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InviteType) {
		return nil, false
	}
	return o.InviteType, true
}

// HasInviteType returns a boolean if a field has been set.
func (o *BaseInviteDataResponseInviteData) HasInviteType() bool {
	if o != nil && !IsNil(o.InviteType) {
		return true
	}

	return false
}

// SetInviteType gets a reference to the given string and assigns it to the InviteType field.
func (o *BaseInviteDataResponseInviteData) SetInviteType(v string) {
	o.InviteType = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *BaseInviteDataResponseInviteData) GetLastUpdatedTime() int32 {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret int32
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseInviteDataResponseInviteData) GetLastUpdatedTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *BaseInviteDataResponseInviteData) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given int32 and assigns it to the LastUpdatedTime field.
func (o *BaseInviteDataResponseInviteData) SetLastUpdatedTime(v int32) {
	o.LastUpdatedTime = &v
}

// GetSentAt returns the SentAt field value if set, zero value otherwise.
func (o *BaseInviteDataResponseInviteData) GetSentAt() int32 {
	if o == nil || IsNil(o.SentAt) {
		var ret int32
		return ret
	}
	return *o.SentAt
}

// GetSentAtOk returns a tuple with the SentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseInviteDataResponseInviteData) GetSentAtOk() (*int32, bool) {
	if o == nil || IsNil(o.SentAt) {
		return nil, false
	}
	return o.SentAt, true
}

// HasSentAt returns a boolean if a field has been set.
func (o *BaseInviteDataResponseInviteData) HasSentAt() bool {
	if o != nil && !IsNil(o.SentAt) {
		return true
	}

	return false
}

// SetSentAt gets a reference to the given int32 and assigns it to the SentAt field.
func (o *BaseInviteDataResponseInviteData) SetSentAt(v int32) {
	o.SentAt = &v
}

func (o BaseInviteDataResponseInviteData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseInviteDataResponseInviteData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InviteExpiration) {
		toSerialize["invite_expiration"] = o.InviteExpiration
	}
	if !IsNil(o.InviteStatus) {
		toSerialize["invite_status"] = o.InviteStatus
	}
	if !IsNil(o.InviteType) {
		toSerialize["invite_type"] = o.InviteType
	}
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.SentAt) {
		toSerialize["sent_at"] = o.SentAt
	}
	return toSerialize, nil
}

type NullableBaseInviteDataResponseInviteData struct {
	value *BaseInviteDataResponseInviteData
	isSet bool
}

func (v NullableBaseInviteDataResponseInviteData) Get() *BaseInviteDataResponseInviteData {
	return v.value
}

func (v *NullableBaseInviteDataResponseInviteData) Set(val *BaseInviteDataResponseInviteData) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseInviteDataResponseInviteData) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseInviteDataResponseInviteData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseInviteDataResponseInviteData(val *BaseInviteDataResponseInviteData) *NullableBaseInviteDataResponseInviteData {
	return &NullableBaseInviteDataResponseInviteData{value: val, isSet: true}
}

func (v NullableBaseInviteDataResponseInviteData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseInviteDataResponseInviteData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


