/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomerList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerList{}

// CustomerList struct for CustomerList
type CustomerList struct {
	// Associated ad account ID.
	AdAccountId *string `json:"ad_account_id,omitempty"`
	// Creation time. Unix timestamp in seconds.
	CreatedTime *float32 `json:"created_time,omitempty"`
	// Customer list ID.
	Id *string `json:"id,omitempty"`
	// Customer list name.
	Name *string `json:"name,omitempty"`
	// Total number of list updates.  List creation counts as one batch. Each <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append</a> or <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
	NumBatches *float32 `json:"num_batches,omitempty"`
	// Number of removed user records. In a <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call, this counter increases even if the user is not found in the list.
	NumRemovedUserRecords *float32 `json:"num_removed_user_records,omitempty"`
	// Number of uploaded user records. In an <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append API</a> call, this counter increases even if the uploaded user is already in the list.
	NumUploadedUserRecords *float32 `json:"num_uploaded_user_records,omitempty"`
	// Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
	Status *string `json:"status,omitempty"`
	// Always \"customerlist\".
	Type *string `json:"type,omitempty"`
	// Last update time. Unix timestamp in seconds.
	UpdatedTime *float32 `json:"updated_time,omitempty"`
	// Customer list errors
	Exceptions map[string]interface{} `json:"exceptions,omitempty"`
}

// NewCustomerList instantiates a new CustomerList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerList() *CustomerList {
	this := CustomerList{}
	return &this
}

// NewCustomerListWithDefaults instantiates a new CustomerList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerListWithDefaults() *CustomerList {
	this := CustomerList{}
	return &this
}

// GetAdAccountId returns the AdAccountId field value if set, zero value otherwise.
func (o *CustomerList) GetAdAccountId() string {
	if o == nil || IsNil(o.AdAccountId) {
		var ret string
		return ret
	}
	return *o.AdAccountId
}

// GetAdAccountIdOk returns a tuple with the AdAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetAdAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdAccountId) {
		return nil, false
	}
	return o.AdAccountId, true
}

// HasAdAccountId returns a boolean if a field has been set.
func (o *CustomerList) HasAdAccountId() bool {
	if o != nil && !IsNil(o.AdAccountId) {
		return true
	}

	return false
}

// SetAdAccountId gets a reference to the given string and assigns it to the AdAccountId field.
func (o *CustomerList) SetAdAccountId(v string) {
	o.AdAccountId = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *CustomerList) GetCreatedTime() float32 {
	if o == nil || IsNil(o.CreatedTime) {
		var ret float32
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetCreatedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *CustomerList) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given float32 and assigns it to the CreatedTime field.
func (o *CustomerList) SetCreatedTime(v float32) {
	o.CreatedTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerList) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerList) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomerList) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomerList) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomerList) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomerList) SetName(v string) {
	o.Name = &v
}

// GetNumBatches returns the NumBatches field value if set, zero value otherwise.
func (o *CustomerList) GetNumBatches() float32 {
	if o == nil || IsNil(o.NumBatches) {
		var ret float32
		return ret
	}
	return *o.NumBatches
}

// GetNumBatchesOk returns a tuple with the NumBatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetNumBatchesOk() (*float32, bool) {
	if o == nil || IsNil(o.NumBatches) {
		return nil, false
	}
	return o.NumBatches, true
}

// HasNumBatches returns a boolean if a field has been set.
func (o *CustomerList) HasNumBatches() bool {
	if o != nil && !IsNil(o.NumBatches) {
		return true
	}

	return false
}

// SetNumBatches gets a reference to the given float32 and assigns it to the NumBatches field.
func (o *CustomerList) SetNumBatches(v float32) {
	o.NumBatches = &v
}

// GetNumRemovedUserRecords returns the NumRemovedUserRecords field value if set, zero value otherwise.
func (o *CustomerList) GetNumRemovedUserRecords() float32 {
	if o == nil || IsNil(o.NumRemovedUserRecords) {
		var ret float32
		return ret
	}
	return *o.NumRemovedUserRecords
}

// GetNumRemovedUserRecordsOk returns a tuple with the NumRemovedUserRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetNumRemovedUserRecordsOk() (*float32, bool) {
	if o == nil || IsNil(o.NumRemovedUserRecords) {
		return nil, false
	}
	return o.NumRemovedUserRecords, true
}

// HasNumRemovedUserRecords returns a boolean if a field has been set.
func (o *CustomerList) HasNumRemovedUserRecords() bool {
	if o != nil && !IsNil(o.NumRemovedUserRecords) {
		return true
	}

	return false
}

// SetNumRemovedUserRecords gets a reference to the given float32 and assigns it to the NumRemovedUserRecords field.
func (o *CustomerList) SetNumRemovedUserRecords(v float32) {
	o.NumRemovedUserRecords = &v
}

// GetNumUploadedUserRecords returns the NumUploadedUserRecords field value if set, zero value otherwise.
func (o *CustomerList) GetNumUploadedUserRecords() float32 {
	if o == nil || IsNil(o.NumUploadedUserRecords) {
		var ret float32
		return ret
	}
	return *o.NumUploadedUserRecords
}

// GetNumUploadedUserRecordsOk returns a tuple with the NumUploadedUserRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetNumUploadedUserRecordsOk() (*float32, bool) {
	if o == nil || IsNil(o.NumUploadedUserRecords) {
		return nil, false
	}
	return o.NumUploadedUserRecords, true
}

// HasNumUploadedUserRecords returns a boolean if a field has been set.
func (o *CustomerList) HasNumUploadedUserRecords() bool {
	if o != nil && !IsNil(o.NumUploadedUserRecords) {
		return true
	}

	return false
}

// SetNumUploadedUserRecords gets a reference to the given float32 and assigns it to the NumUploadedUserRecords field.
func (o *CustomerList) SetNumUploadedUserRecords(v float32) {
	o.NumUploadedUserRecords = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CustomerList) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CustomerList) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CustomerList) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CustomerList) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CustomerList) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CustomerList) SetType(v string) {
	o.Type = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *CustomerList) GetUpdatedTime() float32 {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret float32
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetUpdatedTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *CustomerList) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given float32 and assigns it to the UpdatedTime field.
func (o *CustomerList) SetUpdatedTime(v float32) {
	o.UpdatedTime = &v
}

// GetExceptions returns the Exceptions field value if set, zero value otherwise.
func (o *CustomerList) GetExceptions() map[string]interface{} {
	if o == nil || IsNil(o.Exceptions) {
		var ret map[string]interface{}
		return ret
	}
	return o.Exceptions
}

// GetExceptionsOk returns a tuple with the Exceptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerList) GetExceptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Exceptions) {
		return map[string]interface{}{}, false
	}
	return o.Exceptions, true
}

// HasExceptions returns a boolean if a field has been set.
func (o *CustomerList) HasExceptions() bool {
	if o != nil && !IsNil(o.Exceptions) {
		return true
	}

	return false
}

// SetExceptions gets a reference to the given map[string]interface{} and assigns it to the Exceptions field.
func (o *CustomerList) SetExceptions(v map[string]interface{}) {
	o.Exceptions = v
}

func (o CustomerList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdAccountId) {
		toSerialize["ad_account_id"] = o.AdAccountId
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumBatches) {
		toSerialize["num_batches"] = o.NumBatches
	}
	if !IsNil(o.NumRemovedUserRecords) {
		toSerialize["num_removed_user_records"] = o.NumRemovedUserRecords
	}
	if !IsNil(o.NumUploadedUserRecords) {
		toSerialize["num_uploaded_user_records"] = o.NumUploadedUserRecords
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	if !IsNil(o.Exceptions) {
		toSerialize["exceptions"] = o.Exceptions
	}
	return toSerialize, nil
}

type NullableCustomerList struct {
	value *CustomerList
	isSet bool
}

func (v NullableCustomerList) Get() *CustomerList {
	return v.value
}

func (v *NullableCustomerList) Set(val *CustomerList) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerList) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerList(val *CustomerList) *NullableCustomerList {
	return &NullableCustomerList{value: val, isSet: true}
}

func (v NullableCustomerList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


