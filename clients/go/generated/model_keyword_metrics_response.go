/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KeywordMetricsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeywordMetricsResponse{}

// KeywordMetricsResponse struct for KeywordMetricsResponse
type KeywordMetricsResponse struct {
	// Keyword name, e.g., \"keyword\":\"fashion outfits\"
	Keyword *string `json:"keyword,omitempty"`
	Metrics *KeywordMetrics `json:"metrics,omitempty"`
}

// NewKeywordMetricsResponse instantiates a new KeywordMetricsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeywordMetricsResponse() *KeywordMetricsResponse {
	this := KeywordMetricsResponse{}
	return &this
}

// NewKeywordMetricsResponseWithDefaults instantiates a new KeywordMetricsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeywordMetricsResponseWithDefaults() *KeywordMetricsResponse {
	this := KeywordMetricsResponse{}
	return &this
}

// GetKeyword returns the Keyword field value if set, zero value otherwise.
func (o *KeywordMetricsResponse) GetKeyword() string {
	if o == nil || IsNil(o.Keyword) {
		var ret string
		return ret
	}
	return *o.Keyword
}

// GetKeywordOk returns a tuple with the Keyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeywordMetricsResponse) GetKeywordOk() (*string, bool) {
	if o == nil || IsNil(o.Keyword) {
		return nil, false
	}
	return o.Keyword, true
}

// HasKeyword returns a boolean if a field has been set.
func (o *KeywordMetricsResponse) HasKeyword() bool {
	if o != nil && !IsNil(o.Keyword) {
		return true
	}

	return false
}

// SetKeyword gets a reference to the given string and assigns it to the Keyword field.
func (o *KeywordMetricsResponse) SetKeyword(v string) {
	o.Keyword = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *KeywordMetricsResponse) GetMetrics() KeywordMetrics {
	if o == nil || IsNil(o.Metrics) {
		var ret KeywordMetrics
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeywordMetricsResponse) GetMetricsOk() (*KeywordMetrics, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *KeywordMetricsResponse) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given KeywordMetrics and assigns it to the Metrics field.
func (o *KeywordMetricsResponse) SetMetrics(v KeywordMetrics) {
	o.Metrics = &v
}

func (o KeywordMetricsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeywordMetricsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Keyword) {
		toSerialize["keyword"] = o.Keyword
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	return toSerialize, nil
}

type NullableKeywordMetricsResponse struct {
	value *KeywordMetricsResponse
	isSet bool
}

func (v NullableKeywordMetricsResponse) Get() *KeywordMetricsResponse {
	return v.value
}

func (v *NullableKeywordMetricsResponse) Set(val *KeywordMetricsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeywordMetricsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeywordMetricsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeywordMetricsResponse(val *KeywordMetricsResponse) *NullableKeywordMetricsResponse {
	return &NullableKeywordMetricsResponse{value: val, isSet: true}
}

func (v NullableKeywordMetricsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeywordMetricsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


