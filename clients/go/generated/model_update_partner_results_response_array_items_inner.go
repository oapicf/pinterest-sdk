/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdatePartnerResultsResponseArrayItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePartnerResultsResponseArrayItemsInner{}

// UpdatePartnerResultsResponseArrayItemsInner struct for UpdatePartnerResultsResponseArrayItemsInner
type UpdatePartnerResultsResponseArrayItemsInner struct {
	Exception NullableBusinessAccessError `json:"exception,omitempty"`
	MemberOrPartnerId NullableString `json:"member_or_partner_id,omitempty" validate:"regexp=^\\\\d+$"`
}

// NewUpdatePartnerResultsResponseArrayItemsInner instantiates a new UpdatePartnerResultsResponseArrayItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePartnerResultsResponseArrayItemsInner() *UpdatePartnerResultsResponseArrayItemsInner {
	this := UpdatePartnerResultsResponseArrayItemsInner{}
	return &this
}

// NewUpdatePartnerResultsResponseArrayItemsInnerWithDefaults instantiates a new UpdatePartnerResultsResponseArrayItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePartnerResultsResponseArrayItemsInnerWithDefaults() *UpdatePartnerResultsResponseArrayItemsInner {
	this := UpdatePartnerResultsResponseArrayItemsInner{}
	return &this
}

// GetException returns the Exception field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePartnerResultsResponseArrayItemsInner) GetException() BusinessAccessError {
	if o == nil || IsNil(o.Exception.Get()) {
		var ret BusinessAccessError
		return ret
	}
	return *o.Exception.Get()
}

// GetExceptionOk returns a tuple with the Exception field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePartnerResultsResponseArrayItemsInner) GetExceptionOk() (*BusinessAccessError, bool) {
	if o == nil {
		return nil, false
	}
	return o.Exception.Get(), o.Exception.IsSet()
}

// HasException returns a boolean if a field has been set.
func (o *UpdatePartnerResultsResponseArrayItemsInner) HasException() bool {
	if o != nil && o.Exception.IsSet() {
		return true
	}

	return false
}

// SetException gets a reference to the given NullableBusinessAccessError and assigns it to the Exception field.
func (o *UpdatePartnerResultsResponseArrayItemsInner) SetException(v BusinessAccessError) {
	o.Exception.Set(&v)
}
// SetExceptionNil sets the value for Exception to be an explicit nil
func (o *UpdatePartnerResultsResponseArrayItemsInner) SetExceptionNil() {
	o.Exception.Set(nil)
}

// UnsetException ensures that no value is present for Exception, not even an explicit nil
func (o *UpdatePartnerResultsResponseArrayItemsInner) UnsetException() {
	o.Exception.Unset()
}

// GetMemberOrPartnerId returns the MemberOrPartnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePartnerResultsResponseArrayItemsInner) GetMemberOrPartnerId() string {
	if o == nil || IsNil(o.MemberOrPartnerId.Get()) {
		var ret string
		return ret
	}
	return *o.MemberOrPartnerId.Get()
}

// GetMemberOrPartnerIdOk returns a tuple with the MemberOrPartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePartnerResultsResponseArrayItemsInner) GetMemberOrPartnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberOrPartnerId.Get(), o.MemberOrPartnerId.IsSet()
}

// HasMemberOrPartnerId returns a boolean if a field has been set.
func (o *UpdatePartnerResultsResponseArrayItemsInner) HasMemberOrPartnerId() bool {
	if o != nil && o.MemberOrPartnerId.IsSet() {
		return true
	}

	return false
}

// SetMemberOrPartnerId gets a reference to the given NullableString and assigns it to the MemberOrPartnerId field.
func (o *UpdatePartnerResultsResponseArrayItemsInner) SetMemberOrPartnerId(v string) {
	o.MemberOrPartnerId.Set(&v)
}
// SetMemberOrPartnerIdNil sets the value for MemberOrPartnerId to be an explicit nil
func (o *UpdatePartnerResultsResponseArrayItemsInner) SetMemberOrPartnerIdNil() {
	o.MemberOrPartnerId.Set(nil)
}

// UnsetMemberOrPartnerId ensures that no value is present for MemberOrPartnerId, not even an explicit nil
func (o *UpdatePartnerResultsResponseArrayItemsInner) UnsetMemberOrPartnerId() {
	o.MemberOrPartnerId.Unset()
}

func (o UpdatePartnerResultsResponseArrayItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePartnerResultsResponseArrayItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Exception.IsSet() {
		toSerialize["exception"] = o.Exception.Get()
	}
	if o.MemberOrPartnerId.IsSet() {
		toSerialize["member_or_partner_id"] = o.MemberOrPartnerId.Get()
	}
	return toSerialize, nil
}

type NullableUpdatePartnerResultsResponseArrayItemsInner struct {
	value *UpdatePartnerResultsResponseArrayItemsInner
	isSet bool
}

func (v NullableUpdatePartnerResultsResponseArrayItemsInner) Get() *UpdatePartnerResultsResponseArrayItemsInner {
	return v.value
}

func (v *NullableUpdatePartnerResultsResponseArrayItemsInner) Set(val *UpdatePartnerResultsResponseArrayItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePartnerResultsResponseArrayItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePartnerResultsResponseArrayItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePartnerResultsResponseArrayItemsInner(val *UpdatePartnerResultsResponseArrayItemsInner) *NullableUpdatePartnerResultsResponseArrayItemsInner {
	return &NullableUpdatePartnerResultsResponseArrayItemsInner{value: val, isSet: true}
}

func (v NullableUpdatePartnerResultsResponseArrayItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePartnerResultsResponseArrayItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


