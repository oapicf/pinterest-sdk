/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// CatalogsListProductsByFilterRequest - Request object to list products for a given product group filter.
type CatalogsListProductsByFilterRequest struct {
	CatalogsListProductsByFeedBasedFilter *CatalogsListProductsByFeedBasedFilter
	CatalogsVerticalsListProductsByCatalogBasedFilterRequest *CatalogsVerticalsListProductsByCatalogBasedFilterRequest
}

// CatalogsListProductsByFeedBasedFilterAsCatalogsListProductsByFilterRequest is a convenience function that returns CatalogsListProductsByFeedBasedFilter wrapped in CatalogsListProductsByFilterRequest
func CatalogsListProductsByFeedBasedFilterAsCatalogsListProductsByFilterRequest(v *CatalogsListProductsByFeedBasedFilter) CatalogsListProductsByFilterRequest {
	return CatalogsListProductsByFilterRequest{
		CatalogsListProductsByFeedBasedFilter: v,
	}
}

// CatalogsVerticalsListProductsByCatalogBasedFilterRequestAsCatalogsListProductsByFilterRequest is a convenience function that returns CatalogsVerticalsListProductsByCatalogBasedFilterRequest wrapped in CatalogsListProductsByFilterRequest
func CatalogsVerticalsListProductsByCatalogBasedFilterRequestAsCatalogsListProductsByFilterRequest(v *CatalogsVerticalsListProductsByCatalogBasedFilterRequest) CatalogsListProductsByFilterRequest {
	return CatalogsListProductsByFilterRequest{
		CatalogsVerticalsListProductsByCatalogBasedFilterRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CatalogsListProductsByFilterRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CatalogsListProductsByFeedBasedFilter
	err = newStrictDecoder(data).Decode(&dst.CatalogsListProductsByFeedBasedFilter)
	if err == nil {
		jsonCatalogsListProductsByFeedBasedFilter, _ := json.Marshal(dst.CatalogsListProductsByFeedBasedFilter)
		if string(jsonCatalogsListProductsByFeedBasedFilter) == "{}" { // empty struct
			dst.CatalogsListProductsByFeedBasedFilter = nil
		} else {
			if err = validator.Validate(dst.CatalogsListProductsByFeedBasedFilter); err != nil {
				dst.CatalogsListProductsByFeedBasedFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsListProductsByFeedBasedFilter = nil
	}

	// try to unmarshal data into CatalogsVerticalsListProductsByCatalogBasedFilterRequest
	err = newStrictDecoder(data).Decode(&dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest)
	if err == nil {
		jsonCatalogsVerticalsListProductsByCatalogBasedFilterRequest, _ := json.Marshal(dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest)
		if string(jsonCatalogsVerticalsListProductsByCatalogBasedFilterRequest) == "{}" { // empty struct
			dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest = nil
		} else {
			if err = validator.Validate(dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest); err != nil {
				dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CatalogsListProductsByFeedBasedFilter = nil
		dst.CatalogsVerticalsListProductsByCatalogBasedFilterRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CatalogsListProductsByFilterRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CatalogsListProductsByFilterRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CatalogsListProductsByFilterRequest) MarshalJSON() ([]byte, error) {
	if src.CatalogsListProductsByFeedBasedFilter != nil {
		return json.Marshal(&src.CatalogsListProductsByFeedBasedFilter)
	}

	if src.CatalogsVerticalsListProductsByCatalogBasedFilterRequest != nil {
		return json.Marshal(&src.CatalogsVerticalsListProductsByCatalogBasedFilterRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CatalogsListProductsByFilterRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CatalogsListProductsByFeedBasedFilter != nil {
		return obj.CatalogsListProductsByFeedBasedFilter
	}

	if obj.CatalogsVerticalsListProductsByCatalogBasedFilterRequest != nil {
		return obj.CatalogsVerticalsListProductsByCatalogBasedFilterRequest
	}

	// all schemas are nil
	return nil
}

type NullableCatalogsListProductsByFilterRequest struct {
	value *CatalogsListProductsByFilterRequest
	isSet bool
}

func (v NullableCatalogsListProductsByFilterRequest) Get() *CatalogsListProductsByFilterRequest {
	return v.value
}

func (v *NullableCatalogsListProductsByFilterRequest) Set(val *CatalogsListProductsByFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsListProductsByFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsListProductsByFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsListProductsByFilterRequest(val *CatalogsListProductsByFilterRequest) *NullableCatalogsListProductsByFilterRequest {
	return &NullableCatalogsListProductsByFilterRequest{value: val, isSet: true}
}

func (v NullableCatalogsListProductsByFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsListProductsByFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


