/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductType2Filter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductType2Filter{}

// ProductType2Filter struct for ProductType2Filter
type ProductType2Filter struct {
	PRODUCTTYPE2 CatalogsProductGroupMultipleStringListCriteria `json:"PRODUCT_TYPE_2"`
}

type _ProductType2Filter ProductType2Filter

// NewProductType2Filter instantiates a new ProductType2Filter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductType2Filter(pRODUCTTYPE2 CatalogsProductGroupMultipleStringListCriteria) *ProductType2Filter {
	this := ProductType2Filter{}
	this.PRODUCTTYPE2 = pRODUCTTYPE2
	return &this
}

// NewProductType2FilterWithDefaults instantiates a new ProductType2Filter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductType2FilterWithDefaults() *ProductType2Filter {
	this := ProductType2Filter{}
	return &this
}

// GetPRODUCTTYPE2 returns the PRODUCTTYPE2 field value
func (o *ProductType2Filter) GetPRODUCTTYPE2() CatalogsProductGroupMultipleStringListCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringListCriteria
		return ret
	}

	return o.PRODUCTTYPE2
}

// GetPRODUCTTYPE2Ok returns a tuple with the PRODUCTTYPE2 field value
// and a boolean to check if the value has been set.
func (o *ProductType2Filter) GetPRODUCTTYPE2Ok() (CatalogsProductGroupMultipleStringListCriteria, bool) {
	if o == nil {
		return CatalogsProductGroupMultipleStringListCriteria{}, false
	}
	return o.PRODUCTTYPE2, true
}

// SetPRODUCTTYPE2 sets field value
func (o *ProductType2Filter) SetPRODUCTTYPE2(v CatalogsProductGroupMultipleStringListCriteria) {
	o.PRODUCTTYPE2 = v
}

func (o ProductType2Filter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductType2Filter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["PRODUCT_TYPE_2"] = o.PRODUCTTYPE2
	return toSerialize, nil
}

func (o *ProductType2Filter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"PRODUCT_TYPE_2",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductType2Filter := _ProductType2Filter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductType2Filter)

	if err != nil {
		return err
	}

	*o = ProductType2Filter(varProductType2Filter)

	return err
}

type NullableProductType2Filter struct {
	value *ProductType2Filter
	isSet bool
}

func (v NullableProductType2Filter) Get() *ProductType2Filter {
	return v.value
}

func (v *NullableProductType2Filter) Set(val *ProductType2Filter) {
	v.value = val
	v.isSet = true
}

func (v NullableProductType2Filter) IsSet() bool {
	return v.isSet
}

func (v *NullableProductType2Filter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductType2Filter(val *ProductType2Filter) *NullableProductType2Filter {
	return &NullableProductType2Filter{value: val, isSet: true}
}

func (v NullableProductType2Filter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductType2Filter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


