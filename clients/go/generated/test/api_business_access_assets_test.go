/*
Pinterest REST API

Testing BusinessAccessAssetsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/oapicf/pinterest-sdk"
)

func Test_openapi_BusinessAccessAssetsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BusinessAccessAssetsAPIService AssetGroupCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.AssetGroupCreate(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService AssetGroupDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.AssetGroupDelete(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService AssetGroupUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.AssetGroupUpdate(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessAssetMembersGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string
		var assetId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessAssetMembersGet(context.Background(), businessId, assetId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessAssetPartnersGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string
		var assetId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessAssetPartnersGet(context.Background(), businessId, assetId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessAssetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessAssetsGet(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessMemberAssetsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string
		var memberId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessMemberAssetsGet(context.Background(), businessId, memberId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessMembersAssetAccessDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessMembersAssetAccessDelete(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessMembersAssetAccessUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessMembersAssetAccessUpdate(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService BusinessPartnerAssetAccessGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string
		var partnerId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.BusinessPartnerAssetAccessGet(context.Background(), businessId, partnerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService DeletePartnerAssetAccessHandlerImpl", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.DeletePartnerAssetAccessHandlerImpl(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessAssetsAPIService UpdatePartnerAssetAccessHandlerImpl", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessAssetsAPI.UpdatePartnerAssetAccessHandlerImpl(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
