/*
Pinterest REST API

Testing BusinessAccessRelationshipsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/oapicf/pinterest-sdk"
)

func Test_openapi_BusinessAccessRelationshipsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BusinessAccessRelationshipsAPIService DeleteBusinessMembership", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessRelationshipsAPI.DeleteBusinessMembership(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessRelationshipsAPIService DeleteBusinessPartners", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessRelationshipsAPI.DeleteBusinessPartners(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessRelationshipsAPIService GetBusinessEmployers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BusinessAccessRelationshipsAPI.GetBusinessEmployers(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessRelationshipsAPIService GetBusinessMembers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessRelationshipsAPI.GetBusinessMembers(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessRelationshipsAPIService GetBusinessPartners", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessRelationshipsAPI.GetBusinessPartners(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BusinessAccessRelationshipsAPIService UpdateBusinessMemberships", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.BusinessAccessRelationshipsAPI.UpdateBusinessMemberships(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
