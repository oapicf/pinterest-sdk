/*
Pinterest REST API

Testing PinsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/oapicf/pinterest-sdk"
)

func Test_openapi_PinsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PinsAPIService MultiPinsAnalytics", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PinsAPI.MultiPinsAnalytics(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsAnalytics", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pinId string

		resp, httpRes, err := apiClient.PinsAPI.PinsAnalytics(context.Background(), pinId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PinsAPI.PinsCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pinId string

		httpRes, err := apiClient.PinsAPI.PinsDelete(context.Background(), pinId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pinId string

		resp, httpRes, err := apiClient.PinsAPI.PinsGet(context.Background(), pinId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PinsAPI.PinsList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsSave", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pinId string

		resp, httpRes, err := apiClient.PinsAPI.PinsSave(context.Background(), pinId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PinsAPIService PinsUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pinId string

		resp, httpRes, err := apiClient.PinsAPI.PinsUpdate(context.Background(), pinId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
