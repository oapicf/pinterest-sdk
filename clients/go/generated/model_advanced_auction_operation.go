/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AdvancedAuctionOperation the model 'AdvancedAuctionOperation'
type AdvancedAuctionOperation string

// List of AdvancedAuctionOperation
const (
	UPSERT AdvancedAuctionOperation = "UPSERT"
	DELETE AdvancedAuctionOperation = "DELETE"
)

// All allowed values of AdvancedAuctionOperation enum
var AllowedAdvancedAuctionOperationEnumValues = []AdvancedAuctionOperation{
	"UPSERT",
	"DELETE",
}

func (v *AdvancedAuctionOperation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AdvancedAuctionOperation(value)
	for _, existing := range AllowedAdvancedAuctionOperationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AdvancedAuctionOperation", value)
}

// NewAdvancedAuctionOperationFromValue returns a pointer to a valid AdvancedAuctionOperation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAdvancedAuctionOperationFromValue(v string) (*AdvancedAuctionOperation, error) {
	ev := AdvancedAuctionOperation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AdvancedAuctionOperation: valid values are %v", v, AllowedAdvancedAuctionOperationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AdvancedAuctionOperation) IsValid() bool {
	for _, existing := range AllowedAdvancedAuctionOperationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AdvancedAuctionOperation value
func (v AdvancedAuctionOperation) Ptr() *AdvancedAuctionOperation {
	return &v
}

type NullableAdvancedAuctionOperation struct {
	value *AdvancedAuctionOperation
	isSet bool
}

func (v NullableAdvancedAuctionOperation) Get() *AdvancedAuctionOperation {
	return v.value
}

func (v *NullableAdvancedAuctionOperation) Set(val *AdvancedAuctionOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAuctionOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAuctionOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAuctionOperation(val *AdvancedAuctionOperation) *NullableAdvancedAuctionOperation {
	return &NullableAdvancedAuctionOperation{value: val, isSet: true}
}

func (v NullableAdvancedAuctionOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAuctionOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

