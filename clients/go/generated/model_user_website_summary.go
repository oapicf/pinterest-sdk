/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserWebsiteSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserWebsiteSummary{}

// UserWebsiteSummary struct for UserWebsiteSummary
type UserWebsiteSummary struct {
	// Website with path or domain only
	Website *string `json:"website,omitempty"`
	// Status of the verification process
	Status *string `json:"status,omitempty"`
	// UTC timestamp when the verification happened - sometimes missing
	VerifiedAt *string `json:"verified_at,omitempty"`
}

// NewUserWebsiteSummary instantiates a new UserWebsiteSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWebsiteSummary() *UserWebsiteSummary {
	this := UserWebsiteSummary{}
	return &this
}

// NewUserWebsiteSummaryWithDefaults instantiates a new UserWebsiteSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWebsiteSummaryWithDefaults() *UserWebsiteSummary {
	this := UserWebsiteSummary{}
	return &this
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *UserWebsiteSummary) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebsiteSummary) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *UserWebsiteSummary) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *UserWebsiteSummary) SetWebsite(v string) {
	o.Website = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserWebsiteSummary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebsiteSummary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserWebsiteSummary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UserWebsiteSummary) SetStatus(v string) {
	o.Status = &v
}

// GetVerifiedAt returns the VerifiedAt field value if set, zero value otherwise.
func (o *UserWebsiteSummary) GetVerifiedAt() string {
	if o == nil || IsNil(o.VerifiedAt) {
		var ret string
		return ret
	}
	return *o.VerifiedAt
}

// GetVerifiedAtOk returns a tuple with the VerifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebsiteSummary) GetVerifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.VerifiedAt) {
		return nil, false
	}
	return o.VerifiedAt, true
}

// HasVerifiedAt returns a boolean if a field has been set.
func (o *UserWebsiteSummary) HasVerifiedAt() bool {
	if o != nil && !IsNil(o.VerifiedAt) {
		return true
	}

	return false
}

// SetVerifiedAt gets a reference to the given string and assigns it to the VerifiedAt field.
func (o *UserWebsiteSummary) SetVerifiedAt(v string) {
	o.VerifiedAt = &v
}

func (o UserWebsiteSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserWebsiteSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.VerifiedAt) {
		toSerialize["verified_at"] = o.VerifiedAt
	}
	return toSerialize, nil
}

type NullableUserWebsiteSummary struct {
	value *UserWebsiteSummary
	isSet bool
}

func (v NullableUserWebsiteSummary) Get() *UserWebsiteSummary {
	return v.value
}

func (v *NullableUserWebsiteSummary) Set(val *UserWebsiteSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWebsiteSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWebsiteSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWebsiteSummary(val *UserWebsiteSummary) *NullableUserWebsiteSummary {
	return &NullableUserWebsiteSummary{value: val, isSet: true}
}

func (v NullableUserWebsiteSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWebsiteSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


