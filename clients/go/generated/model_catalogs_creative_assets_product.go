/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsCreativeAssetsProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsCreativeAssetsProduct{}

// CatalogsCreativeAssetsProduct struct for CatalogsCreativeAssetsProduct
type CatalogsCreativeAssetsProduct struct {
	CatalogType string `json:"catalog_type"`
	Metadata CatalogsCreativeAssetsProductMetadata `json:"metadata"`
	Pin NullablePin `json:"pin"`
}

type _CatalogsCreativeAssetsProduct CatalogsCreativeAssetsProduct

// NewCatalogsCreativeAssetsProduct instantiates a new CatalogsCreativeAssetsProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsCreativeAssetsProduct(catalogType string, metadata CatalogsCreativeAssetsProductMetadata, pin NullablePin) *CatalogsCreativeAssetsProduct {
	this := CatalogsCreativeAssetsProduct{}
	this.CatalogType = catalogType
	this.Metadata = metadata
	this.Pin = pin
	return &this
}

// NewCatalogsCreativeAssetsProductWithDefaults instantiates a new CatalogsCreativeAssetsProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsCreativeAssetsProductWithDefaults() *CatalogsCreativeAssetsProduct {
	this := CatalogsCreativeAssetsProduct{}
	return &this
}

// GetCatalogType returns the CatalogType field value
func (o *CatalogsCreativeAssetsProduct) GetCatalogType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogType
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value
// and a boolean to check if the value has been set.
func (o *CatalogsCreativeAssetsProduct) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogType, true
}

// SetCatalogType sets field value
func (o *CatalogsCreativeAssetsProduct) SetCatalogType(v string) {
	o.CatalogType = v
}

// GetMetadata returns the Metadata field value
func (o *CatalogsCreativeAssetsProduct) GetMetadata() CatalogsCreativeAssetsProductMetadata {
	if o == nil {
		var ret CatalogsCreativeAssetsProductMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *CatalogsCreativeAssetsProduct) GetMetadataOk() (*CatalogsCreativeAssetsProductMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *CatalogsCreativeAssetsProduct) SetMetadata(v CatalogsCreativeAssetsProductMetadata) {
	o.Metadata = v
}

// GetPin returns the Pin field value
// If the value is explicit nil, the zero value for Pin will be returned
func (o *CatalogsCreativeAssetsProduct) GetPin() Pin {
	if o == nil || o.Pin.Get() == nil {
		var ret Pin
		return ret
	}

	return *o.Pin.Get()
}

// GetPinOk returns a tuple with the Pin field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsCreativeAssetsProduct) GetPinOk() (*Pin, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pin.Get(), o.Pin.IsSet()
}

// SetPin sets field value
func (o *CatalogsCreativeAssetsProduct) SetPin(v Pin) {
	o.Pin.Set(&v)
}

func (o CatalogsCreativeAssetsProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsCreativeAssetsProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalog_type"] = o.CatalogType
	toSerialize["metadata"] = o.Metadata
	toSerialize["pin"] = o.Pin.Get()
	return toSerialize, nil
}

func (o *CatalogsCreativeAssetsProduct) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_type",
		"metadata",
		"pin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsCreativeAssetsProduct := _CatalogsCreativeAssetsProduct{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsCreativeAssetsProduct)

	if err != nil {
		return err
	}

	*o = CatalogsCreativeAssetsProduct(varCatalogsCreativeAssetsProduct)

	return err
}

type NullableCatalogsCreativeAssetsProduct struct {
	value *CatalogsCreativeAssetsProduct
	isSet bool
}

func (v NullableCatalogsCreativeAssetsProduct) Get() *CatalogsCreativeAssetsProduct {
	return v.value
}

func (v *NullableCatalogsCreativeAssetsProduct) Set(val *CatalogsCreativeAssetsProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsCreativeAssetsProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsCreativeAssetsProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsCreativeAssetsProduct(val *CatalogsCreativeAssetsProduct) *NullableCatalogsCreativeAssetsProduct {
	return &NullableCatalogsCreativeAssetsProduct{value: val, isSet: true}
}

func (v NullableCatalogsCreativeAssetsProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsCreativeAssetsProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


