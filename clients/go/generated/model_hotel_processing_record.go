/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HotelProcessingRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelProcessingRecord{}

// HotelProcessingRecord Object describing an item processing record
type HotelProcessingRecord struct {
	// The catalog hotel id in the merchant namespace
	HotelId *string `json:"hotel_id,omitempty"`
	// Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail.
	Errors []ItemValidationEvent `json:"errors,omitempty"`
	// Array with the validation warnings for the item processing record
	Warnings []ItemValidationEvent `json:"warnings,omitempty"`
	Status *ItemProcessingStatus `json:"status,omitempty"`
}

// NewHotelProcessingRecord instantiates a new HotelProcessingRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelProcessingRecord() *HotelProcessingRecord {
	this := HotelProcessingRecord{}
	return &this
}

// NewHotelProcessingRecordWithDefaults instantiates a new HotelProcessingRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelProcessingRecordWithDefaults() *HotelProcessingRecord {
	this := HotelProcessingRecord{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *HotelProcessingRecord) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelProcessingRecord) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *HotelProcessingRecord) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *HotelProcessingRecord) SetHotelId(v string) {
	o.HotelId = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *HotelProcessingRecord) GetErrors() []ItemValidationEvent {
	if o == nil || IsNil(o.Errors) {
		var ret []ItemValidationEvent
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelProcessingRecord) GetErrorsOk() ([]ItemValidationEvent, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *HotelProcessingRecord) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ItemValidationEvent and assigns it to the Errors field.
func (o *HotelProcessingRecord) SetErrors(v []ItemValidationEvent) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *HotelProcessingRecord) GetWarnings() []ItemValidationEvent {
	if o == nil || IsNil(o.Warnings) {
		var ret []ItemValidationEvent
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelProcessingRecord) GetWarningsOk() ([]ItemValidationEvent, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *HotelProcessingRecord) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []ItemValidationEvent and assigns it to the Warnings field.
func (o *HotelProcessingRecord) SetWarnings(v []ItemValidationEvent) {
	o.Warnings = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HotelProcessingRecord) GetStatus() ItemProcessingStatus {
	if o == nil || IsNil(o.Status) {
		var ret ItemProcessingStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelProcessingRecord) GetStatusOk() (*ItemProcessingStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HotelProcessingRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ItemProcessingStatus and assigns it to the Status field.
func (o *HotelProcessingRecord) SetStatus(v ItemProcessingStatus) {
	o.Status = &v
}

func (o HotelProcessingRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelProcessingRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotel_id"] = o.HotelId
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableHotelProcessingRecord struct {
	value *HotelProcessingRecord
	isSet bool
}

func (v NullableHotelProcessingRecord) Get() *HotelProcessingRecord {
	return v.value
}

func (v *NullableHotelProcessingRecord) Set(val *HotelProcessingRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelProcessingRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelProcessingRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelProcessingRecord(val *HotelProcessingRecord) *NullableHotelProcessingRecord {
	return &NullableHotelProcessingRecord{value: val, isSet: true}
}

func (v NullableHotelProcessingRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelProcessingRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


