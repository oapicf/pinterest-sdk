/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsHotelProductMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsHotelProductMetadata{}

// CatalogsHotelProductMetadata Hotel product metadata entity
type CatalogsHotelProductMetadata struct {
	// The user-created unique ID that represents the hotel item.
	HotelId string `json:"hotel_id"`
}

type _CatalogsHotelProductMetadata CatalogsHotelProductMetadata

// NewCatalogsHotelProductMetadata instantiates a new CatalogsHotelProductMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsHotelProductMetadata(hotelId string) *CatalogsHotelProductMetadata {
	this := CatalogsHotelProductMetadata{}
	this.HotelId = hotelId
	return &this
}

// NewCatalogsHotelProductMetadataWithDefaults instantiates a new CatalogsHotelProductMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsHotelProductMetadataWithDefaults() *CatalogsHotelProductMetadata {
	this := CatalogsHotelProductMetadata{}
	return &this
}

// GetHotelId returns the HotelId field value
func (o *CatalogsHotelProductMetadata) GetHotelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value
// and a boolean to check if the value has been set.
func (o *CatalogsHotelProductMetadata) GetHotelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HotelId, true
}

// SetHotelId sets field value
func (o *CatalogsHotelProductMetadata) SetHotelId(v string) {
	o.HotelId = v
}

func (o CatalogsHotelProductMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsHotelProductMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hotel_id"] = o.HotelId
	return toSerialize, nil
}

func (o *CatalogsHotelProductMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hotel_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsHotelProductMetadata := _CatalogsHotelProductMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsHotelProductMetadata)

	if err != nil {
		return err
	}

	*o = CatalogsHotelProductMetadata(varCatalogsHotelProductMetadata)

	return err
}

type NullableCatalogsHotelProductMetadata struct {
	value *CatalogsHotelProductMetadata
	isSet bool
}

func (v NullableCatalogsHotelProductMetadata) Get() *CatalogsHotelProductMetadata {
	return v.value
}

func (v *NullableCatalogsHotelProductMetadata) Set(val *CatalogsHotelProductMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsHotelProductMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsHotelProductMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsHotelProductMetadata(val *CatalogsHotelProductMetadata) *NullableCatalogsHotelProductMetadata {
	return &NullableCatalogsHotelProductMetadata{value: val, isSet: true}
}

func (v NullableCatalogsHotelProductMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsHotelProductMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


