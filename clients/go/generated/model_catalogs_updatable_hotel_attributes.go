/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogsUpdatableHotelAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsUpdatableHotelAttributes{}

// CatalogsUpdatableHotelAttributes struct for CatalogsUpdatableHotelAttributes
type CatalogsUpdatableHotelAttributes struct {
	// The hotel's name.
	Name NullableString `json:"name,omitempty"`
	// Link to the product page
	Link NullableString `json:"link,omitempty"`
	// Brief description of the hotel.
	Description NullableString `json:"description,omitempty"`
	// The brand to which this hotel belongs to.
	Brand NullableString `json:"brand,omitempty"`
	// Latitude of the hotel.
	Latitude *float32 `json:"latitude,omitempty"`
	// Longitude of the hotel.
	Longitude NullableFloat32 `json:"longitude,omitempty"`
	// A list of neighborhoods where the hotel is located
	Neighborhood []string `json:"neighborhood,omitempty"`
	Address *CatalogsHotelAddress `json:"address,omitempty"`
	// Custom grouping of hotels
	CustomLabel0 NullableString `json:"custom_label_0,omitempty"`
	// Custom grouping of hotels
	CustomLabel1 NullableString `json:"custom_label_1,omitempty"`
	// Custom grouping of hotels
	CustomLabel2 NullableString `json:"custom_label_2,omitempty"`
	// Custom grouping of hotels
	CustomLabel3 NullableString `json:"custom_label_3,omitempty"`
	// Custom grouping of hotels
	CustomLabel4 NullableString `json:"custom_label_4,omitempty"`
	// The type of property. The category can be any type of internal description desired.
	Category NullableString `json:"category,omitempty"`
	// Base price of the hotel room per night followed by the ISO currency code
	BasePrice NullableString `json:"base_price,omitempty"`
	// Sale price of a hotel room per night. Used to advertise discounts off the regular price of the hotel.
	SalePrice NullableString `json:"sale_price,omitempty"`
	GuestRatings *CatalogsHotelGuestRatings `json:"guest_ratings,omitempty"`
}

// NewCatalogsUpdatableHotelAttributes instantiates a new CatalogsUpdatableHotelAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsUpdatableHotelAttributes() *CatalogsUpdatableHotelAttributes {
	this := CatalogsUpdatableHotelAttributes{}
	return &this
}

// NewCatalogsUpdatableHotelAttributesWithDefaults instantiates a new CatalogsUpdatableHotelAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsUpdatableHotelAttributesWithDefaults() *CatalogsUpdatableHotelAttributes {
	this := CatalogsUpdatableHotelAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CatalogsUpdatableHotelAttributes) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetName() {
	o.Name.Unset()
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *CatalogsUpdatableHotelAttributes) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetLink() {
	o.Link.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogsUpdatableHotelAttributes) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetDescription() {
	o.Description.Unset()
}

// GetBrand returns the Brand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetBrand() string {
	if o == nil || IsNil(o.Brand.Get()) {
		var ret string
		return ret
	}
	return *o.Brand.Get()
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Brand.Get(), o.Brand.IsSet()
}

// HasBrand returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasBrand() bool {
	if o != nil && o.Brand.IsSet() {
		return true
	}

	return false
}

// SetBrand gets a reference to the given NullableString and assigns it to the Brand field.
func (o *CatalogsUpdatableHotelAttributes) SetBrand(v string) {
	o.Brand.Set(&v)
}
// SetBrandNil sets the value for Brand to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetBrandNil() {
	o.Brand.Set(nil)
}

// UnsetBrand ensures that no value is present for Brand, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetBrand() {
	o.Brand.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *CatalogsUpdatableHotelAttributes) GetLatitude() float32 {
	if o == nil || IsNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsUpdatableHotelAttributes) GetLatitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *CatalogsUpdatableHotelAttributes) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetLongitude() float32 {
	if o == nil || IsNil(o.Longitude.Get()) {
		var ret float32
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetLongitudeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableFloat32 and assigns it to the Longitude field.
func (o *CatalogsUpdatableHotelAttributes) SetLongitude(v float32) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetNeighborhood returns the Neighborhood field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetNeighborhood() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Neighborhood
}

// GetNeighborhoodOk returns a tuple with the Neighborhood field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetNeighborhoodOk() ([]string, bool) {
	if o == nil || IsNil(o.Neighborhood) {
		return nil, false
	}
	return o.Neighborhood, true
}

// HasNeighborhood returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasNeighborhood() bool {
	if o != nil && !IsNil(o.Neighborhood) {
		return true
	}

	return false
}

// SetNeighborhood gets a reference to the given []string and assigns it to the Neighborhood field.
func (o *CatalogsUpdatableHotelAttributes) SetNeighborhood(v []string) {
	o.Neighborhood = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CatalogsUpdatableHotelAttributes) GetAddress() CatalogsHotelAddress {
	if o == nil || IsNil(o.Address) {
		var ret CatalogsHotelAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsUpdatableHotelAttributes) GetAddressOk() (*CatalogsHotelAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given CatalogsHotelAddress and assigns it to the Address field.
func (o *CatalogsUpdatableHotelAttributes) SetAddress(v CatalogsHotelAddress) {
	o.Address = &v
}

// GetCustomLabel0 returns the CustomLabel0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel0() string {
	if o == nil || IsNil(o.CustomLabel0.Get()) {
		var ret string
		return ret
	}
	return *o.CustomLabel0.Get()
}

// GetCustomLabel0Ok returns a tuple with the CustomLabel0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomLabel0.Get(), o.CustomLabel0.IsSet()
}

// HasCustomLabel0 returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasCustomLabel0() bool {
	if o != nil && o.CustomLabel0.IsSet() {
		return true
	}

	return false
}

// SetCustomLabel0 gets a reference to the given NullableString and assigns it to the CustomLabel0 field.
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel0(v string) {
	o.CustomLabel0.Set(&v)
}
// SetCustomLabel0Nil sets the value for CustomLabel0 to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel0Nil() {
	o.CustomLabel0.Set(nil)
}

// UnsetCustomLabel0 ensures that no value is present for CustomLabel0, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetCustomLabel0() {
	o.CustomLabel0.Unset()
}

// GetCustomLabel1 returns the CustomLabel1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel1() string {
	if o == nil || IsNil(o.CustomLabel1.Get()) {
		var ret string
		return ret
	}
	return *o.CustomLabel1.Get()
}

// GetCustomLabel1Ok returns a tuple with the CustomLabel1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomLabel1.Get(), o.CustomLabel1.IsSet()
}

// HasCustomLabel1 returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasCustomLabel1() bool {
	if o != nil && o.CustomLabel1.IsSet() {
		return true
	}

	return false
}

// SetCustomLabel1 gets a reference to the given NullableString and assigns it to the CustomLabel1 field.
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel1(v string) {
	o.CustomLabel1.Set(&v)
}
// SetCustomLabel1Nil sets the value for CustomLabel1 to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel1Nil() {
	o.CustomLabel1.Set(nil)
}

// UnsetCustomLabel1 ensures that no value is present for CustomLabel1, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetCustomLabel1() {
	o.CustomLabel1.Unset()
}

// GetCustomLabel2 returns the CustomLabel2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel2() string {
	if o == nil || IsNil(o.CustomLabel2.Get()) {
		var ret string
		return ret
	}
	return *o.CustomLabel2.Get()
}

// GetCustomLabel2Ok returns a tuple with the CustomLabel2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomLabel2.Get(), o.CustomLabel2.IsSet()
}

// HasCustomLabel2 returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasCustomLabel2() bool {
	if o != nil && o.CustomLabel2.IsSet() {
		return true
	}

	return false
}

// SetCustomLabel2 gets a reference to the given NullableString and assigns it to the CustomLabel2 field.
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel2(v string) {
	o.CustomLabel2.Set(&v)
}
// SetCustomLabel2Nil sets the value for CustomLabel2 to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel2Nil() {
	o.CustomLabel2.Set(nil)
}

// UnsetCustomLabel2 ensures that no value is present for CustomLabel2, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetCustomLabel2() {
	o.CustomLabel2.Unset()
}

// GetCustomLabel3 returns the CustomLabel3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel3() string {
	if o == nil || IsNil(o.CustomLabel3.Get()) {
		var ret string
		return ret
	}
	return *o.CustomLabel3.Get()
}

// GetCustomLabel3Ok returns a tuple with the CustomLabel3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomLabel3.Get(), o.CustomLabel3.IsSet()
}

// HasCustomLabel3 returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasCustomLabel3() bool {
	if o != nil && o.CustomLabel3.IsSet() {
		return true
	}

	return false
}

// SetCustomLabel3 gets a reference to the given NullableString and assigns it to the CustomLabel3 field.
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel3(v string) {
	o.CustomLabel3.Set(&v)
}
// SetCustomLabel3Nil sets the value for CustomLabel3 to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel3Nil() {
	o.CustomLabel3.Set(nil)
}

// UnsetCustomLabel3 ensures that no value is present for CustomLabel3, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetCustomLabel3() {
	o.CustomLabel3.Unset()
}

// GetCustomLabel4 returns the CustomLabel4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel4() string {
	if o == nil || IsNil(o.CustomLabel4.Get()) {
		var ret string
		return ret
	}
	return *o.CustomLabel4.Get()
}

// GetCustomLabel4Ok returns a tuple with the CustomLabel4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetCustomLabel4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomLabel4.Get(), o.CustomLabel4.IsSet()
}

// HasCustomLabel4 returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasCustomLabel4() bool {
	if o != nil && o.CustomLabel4.IsSet() {
		return true
	}

	return false
}

// SetCustomLabel4 gets a reference to the given NullableString and assigns it to the CustomLabel4 field.
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel4(v string) {
	o.CustomLabel4.Set(&v)
}
// SetCustomLabel4Nil sets the value for CustomLabel4 to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetCustomLabel4Nil() {
	o.CustomLabel4.Set(nil)
}

// UnsetCustomLabel4 ensures that no value is present for CustomLabel4, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetCustomLabel4() {
	o.CustomLabel4.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetCategory() string {
	if o == nil || IsNil(o.Category.Get()) {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *CatalogsUpdatableHotelAttributes) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetCategory() {
	o.Category.Unset()
}

// GetBasePrice returns the BasePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetBasePrice() string {
	if o == nil || IsNil(o.BasePrice.Get()) {
		var ret string
		return ret
	}
	return *o.BasePrice.Get()
}

// GetBasePriceOk returns a tuple with the BasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetBasePriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BasePrice.Get(), o.BasePrice.IsSet()
}

// HasBasePrice returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasBasePrice() bool {
	if o != nil && o.BasePrice.IsSet() {
		return true
	}

	return false
}

// SetBasePrice gets a reference to the given NullableString and assigns it to the BasePrice field.
func (o *CatalogsUpdatableHotelAttributes) SetBasePrice(v string) {
	o.BasePrice.Set(&v)
}
// SetBasePriceNil sets the value for BasePrice to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetBasePriceNil() {
	o.BasePrice.Set(nil)
}

// UnsetBasePrice ensures that no value is present for BasePrice, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetBasePrice() {
	o.BasePrice.Unset()
}

// GetSalePrice returns the SalePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsUpdatableHotelAttributes) GetSalePrice() string {
	if o == nil || IsNil(o.SalePrice.Get()) {
		var ret string
		return ret
	}
	return *o.SalePrice.Get()
}

// GetSalePriceOk returns a tuple with the SalePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsUpdatableHotelAttributes) GetSalePriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalePrice.Get(), o.SalePrice.IsSet()
}

// HasSalePrice returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasSalePrice() bool {
	if o != nil && o.SalePrice.IsSet() {
		return true
	}

	return false
}

// SetSalePrice gets a reference to the given NullableString and assigns it to the SalePrice field.
func (o *CatalogsUpdatableHotelAttributes) SetSalePrice(v string) {
	o.SalePrice.Set(&v)
}
// SetSalePriceNil sets the value for SalePrice to be an explicit nil
func (o *CatalogsUpdatableHotelAttributes) SetSalePriceNil() {
	o.SalePrice.Set(nil)
}

// UnsetSalePrice ensures that no value is present for SalePrice, not even an explicit nil
func (o *CatalogsUpdatableHotelAttributes) UnsetSalePrice() {
	o.SalePrice.Unset()
}

// GetGuestRatings returns the GuestRatings field value if set, zero value otherwise.
func (o *CatalogsUpdatableHotelAttributes) GetGuestRatings() CatalogsHotelGuestRatings {
	if o == nil || IsNil(o.GuestRatings) {
		var ret CatalogsHotelGuestRatings
		return ret
	}
	return *o.GuestRatings
}

// GetGuestRatingsOk returns a tuple with the GuestRatings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsUpdatableHotelAttributes) GetGuestRatingsOk() (*CatalogsHotelGuestRatings, bool) {
	if o == nil || IsNil(o.GuestRatings) {
		return nil, false
	}
	return o.GuestRatings, true
}

// HasGuestRatings returns a boolean if a field has been set.
func (o *CatalogsUpdatableHotelAttributes) HasGuestRatings() bool {
	if o != nil && !IsNil(o.GuestRatings) {
		return true
	}

	return false
}

// SetGuestRatings gets a reference to the given CatalogsHotelGuestRatings and assigns it to the GuestRatings field.
func (o *CatalogsUpdatableHotelAttributes) SetGuestRatings(v CatalogsHotelGuestRatings) {
	o.GuestRatings = &v
}

func (o CatalogsUpdatableHotelAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsUpdatableHotelAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Brand.IsSet() {
		toSerialize["brand"] = o.Brand.Get()
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if o.Longitude.IsSet() {
		toSerialize["longitude"] = o.Longitude.Get()
	}
	if o.Neighborhood != nil {
		toSerialize["neighborhood"] = o.Neighborhood
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if o.CustomLabel0.IsSet() {
		toSerialize["custom_label_0"] = o.CustomLabel0.Get()
	}
	if o.CustomLabel1.IsSet() {
		toSerialize["custom_label_1"] = o.CustomLabel1.Get()
	}
	if o.CustomLabel2.IsSet() {
		toSerialize["custom_label_2"] = o.CustomLabel2.Get()
	}
	if o.CustomLabel3.IsSet() {
		toSerialize["custom_label_3"] = o.CustomLabel3.Get()
	}
	if o.CustomLabel4.IsSet() {
		toSerialize["custom_label_4"] = o.CustomLabel4.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.BasePrice.IsSet() {
		toSerialize["base_price"] = o.BasePrice.Get()
	}
	if o.SalePrice.IsSet() {
		toSerialize["sale_price"] = o.SalePrice.Get()
	}
	if !IsNil(o.GuestRatings) {
		toSerialize["guest_ratings"] = o.GuestRatings
	}
	return toSerialize, nil
}

type NullableCatalogsUpdatableHotelAttributes struct {
	value *CatalogsUpdatableHotelAttributes
	isSet bool
}

func (v NullableCatalogsUpdatableHotelAttributes) Get() *CatalogsUpdatableHotelAttributes {
	return v.value
}

func (v *NullableCatalogsUpdatableHotelAttributes) Set(val *CatalogsUpdatableHotelAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsUpdatableHotelAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsUpdatableHotelAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsUpdatableHotelAttributes(val *CatalogsUpdatableHotelAttributes) *NullableCatalogsUpdatableHotelAttributes {
	return &NullableCatalogsUpdatableHotelAttributes{value: val, isSet: true}
}

func (v NullableCatalogsUpdatableHotelAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsUpdatableHotelAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


