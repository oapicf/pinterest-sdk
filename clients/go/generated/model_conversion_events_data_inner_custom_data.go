/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConversionEventsDataInnerCustomData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversionEventsDataInnerCustomData{}

// ConversionEventsDataInnerCustomData Object containing other custom data.
type ConversionEventsDataInnerCustomData struct {
	// The ISO-4217 currency code. If not provided, we will default to the advertiser's currency set during account creation. Your campaign performance needs this field to report right ROAS/CPA.
	Currency NullableString `json:"currency,omitempty"`
	// Total value of the event. Accepted as a string in the request; it will be parsed into a double. For example, if there are two items in a checkout event, the value should be the total price. We recommend to use pre-tax, pre-shipping final value.
	Value NullableString `json:"value,omitempty"`
	// List of products IDs. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
	ContentIds []string `json:"content_ids,omitempty"`
	// The name of the page or product associated with the event.
	ContentName NullableString `json:"content_name,omitempty"`
	// The category of the content associated with the event.
	ContentCategory NullableString `json:"content_category,omitempty"`
	// The brand of the content associated with the event.
	ContentBrand NullableString `json:"content_brand,omitempty"`
	// A list of objects containing information about products, such as price and quantity. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
	Contents []ConversionEventsDataInnerCustomDataContentsInner `json:"contents,omitempty"`
	// Total number of products of the event. For example, the total number of items purchased in a checkout event. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
	NumItems *int64 `json:"num_items,omitempty"`
	// The order ID. We recommend sending order_id to help us deduplicate events when necessary. This also helps to run other measurement products at Pinterest.
	OrderId NullableString `json:"order_id,omitempty"`
	// The search string related to the user conversion event.
	SearchString NullableString `json:"search_string,omitempty"`
	// Flags for different privacy rights laws to opt out users of sharing personal information. Values should be comma separated. Please follow the <a href=\"https://help.pinterest.com/en/business/article/limited-data-processing\" target=\"_blank\">Help Center</a> and <a href=\"/docs/api-features/conversion-overview/\" target=\"_blank\">dev site</a> for specific opt_out_type set up.
	OptOutType NullableString `json:"opt_out_type,omitempty"`
	// Named partner. Not required, this is for Pinterest internal use only. Please do not use this unless specifically guided.
	Np NullableString `json:"np,omitempty"`
}

// NewConversionEventsDataInnerCustomData instantiates a new ConversionEventsDataInnerCustomData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversionEventsDataInnerCustomData() *ConversionEventsDataInnerCustomData {
	this := ConversionEventsDataInnerCustomData{}
	return &this
}

// NewConversionEventsDataInnerCustomDataWithDefaults instantiates a new ConversionEventsDataInnerCustomData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversionEventsDataInnerCustomDataWithDefaults() *ConversionEventsDataInnerCustomData {
	this := ConversionEventsDataInnerCustomData{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetCurrency() string {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *ConversionEventsDataInnerCustomData) SetCurrency(v string) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetCurrency() {
	o.Currency.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetValue() string {
	if o == nil || IsNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *ConversionEventsDataInnerCustomData) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetValue() {
	o.Value.Unset()
}

// GetContentIds returns the ContentIds field value if set, zero value otherwise.
func (o *ConversionEventsDataInnerCustomData) GetContentIds() []string {
	if o == nil || IsNil(o.ContentIds) {
		var ret []string
		return ret
	}
	return o.ContentIds
}

// GetContentIdsOk returns a tuple with the ContentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversionEventsDataInnerCustomData) GetContentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ContentIds) {
		return nil, false
	}
	return o.ContentIds, true
}

// HasContentIds returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasContentIds() bool {
	if o != nil && !IsNil(o.ContentIds) {
		return true
	}

	return false
}

// SetContentIds gets a reference to the given []string and assigns it to the ContentIds field.
func (o *ConversionEventsDataInnerCustomData) SetContentIds(v []string) {
	o.ContentIds = v
}

// GetContentName returns the ContentName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetContentName() string {
	if o == nil || IsNil(o.ContentName.Get()) {
		var ret string
		return ret
	}
	return *o.ContentName.Get()
}

// GetContentNameOk returns a tuple with the ContentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetContentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentName.Get(), o.ContentName.IsSet()
}

// HasContentName returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasContentName() bool {
	if o != nil && o.ContentName.IsSet() {
		return true
	}

	return false
}

// SetContentName gets a reference to the given NullableString and assigns it to the ContentName field.
func (o *ConversionEventsDataInnerCustomData) SetContentName(v string) {
	o.ContentName.Set(&v)
}
// SetContentNameNil sets the value for ContentName to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetContentNameNil() {
	o.ContentName.Set(nil)
}

// UnsetContentName ensures that no value is present for ContentName, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetContentName() {
	o.ContentName.Unset()
}

// GetContentCategory returns the ContentCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetContentCategory() string {
	if o == nil || IsNil(o.ContentCategory.Get()) {
		var ret string
		return ret
	}
	return *o.ContentCategory.Get()
}

// GetContentCategoryOk returns a tuple with the ContentCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetContentCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentCategory.Get(), o.ContentCategory.IsSet()
}

// HasContentCategory returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasContentCategory() bool {
	if o != nil && o.ContentCategory.IsSet() {
		return true
	}

	return false
}

// SetContentCategory gets a reference to the given NullableString and assigns it to the ContentCategory field.
func (o *ConversionEventsDataInnerCustomData) SetContentCategory(v string) {
	o.ContentCategory.Set(&v)
}
// SetContentCategoryNil sets the value for ContentCategory to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetContentCategoryNil() {
	o.ContentCategory.Set(nil)
}

// UnsetContentCategory ensures that no value is present for ContentCategory, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetContentCategory() {
	o.ContentCategory.Unset()
}

// GetContentBrand returns the ContentBrand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetContentBrand() string {
	if o == nil || IsNil(o.ContentBrand.Get()) {
		var ret string
		return ret
	}
	return *o.ContentBrand.Get()
}

// GetContentBrandOk returns a tuple with the ContentBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetContentBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentBrand.Get(), o.ContentBrand.IsSet()
}

// HasContentBrand returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasContentBrand() bool {
	if o != nil && o.ContentBrand.IsSet() {
		return true
	}

	return false
}

// SetContentBrand gets a reference to the given NullableString and assigns it to the ContentBrand field.
func (o *ConversionEventsDataInnerCustomData) SetContentBrand(v string) {
	o.ContentBrand.Set(&v)
}
// SetContentBrandNil sets the value for ContentBrand to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetContentBrandNil() {
	o.ContentBrand.Set(nil)
}

// UnsetContentBrand ensures that no value is present for ContentBrand, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetContentBrand() {
	o.ContentBrand.Unset()
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *ConversionEventsDataInnerCustomData) GetContents() []ConversionEventsDataInnerCustomDataContentsInner {
	if o == nil || IsNil(o.Contents) {
		var ret []ConversionEventsDataInnerCustomDataContentsInner
		return ret
	}
	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversionEventsDataInnerCustomData) GetContentsOk() ([]ConversionEventsDataInnerCustomDataContentsInner, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given []ConversionEventsDataInnerCustomDataContentsInner and assigns it to the Contents field.
func (o *ConversionEventsDataInnerCustomData) SetContents(v []ConversionEventsDataInnerCustomDataContentsInner) {
	o.Contents = v
}

// GetNumItems returns the NumItems field value if set, zero value otherwise.
func (o *ConversionEventsDataInnerCustomData) GetNumItems() int64 {
	if o == nil || IsNil(o.NumItems) {
		var ret int64
		return ret
	}
	return *o.NumItems
}

// GetNumItemsOk returns a tuple with the NumItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversionEventsDataInnerCustomData) GetNumItemsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumItems) {
		return nil, false
	}
	return o.NumItems, true
}

// HasNumItems returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasNumItems() bool {
	if o != nil && !IsNil(o.NumItems) {
		return true
	}

	return false
}

// SetNumItems gets a reference to the given int64 and assigns it to the NumItems field.
func (o *ConversionEventsDataInnerCustomData) SetNumItems(v int64) {
	o.NumItems = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetOrderId() string {
	if o == nil || IsNil(o.OrderId.Get()) {
		var ret string
		return ret
	}
	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// HasOrderId returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasOrderId() bool {
	if o != nil && o.OrderId.IsSet() {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given NullableString and assigns it to the OrderId field.
func (o *ConversionEventsDataInnerCustomData) SetOrderId(v string) {
	o.OrderId.Set(&v)
}
// SetOrderIdNil sets the value for OrderId to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetOrderIdNil() {
	o.OrderId.Set(nil)
}

// UnsetOrderId ensures that no value is present for OrderId, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetOrderId() {
	o.OrderId.Unset()
}

// GetSearchString returns the SearchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetSearchString() string {
	if o == nil || IsNil(o.SearchString.Get()) {
		var ret string
		return ret
	}
	return *o.SearchString.Get()
}

// GetSearchStringOk returns a tuple with the SearchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetSearchStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchString.Get(), o.SearchString.IsSet()
}

// HasSearchString returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasSearchString() bool {
	if o != nil && o.SearchString.IsSet() {
		return true
	}

	return false
}

// SetSearchString gets a reference to the given NullableString and assigns it to the SearchString field.
func (o *ConversionEventsDataInnerCustomData) SetSearchString(v string) {
	o.SearchString.Set(&v)
}
// SetSearchStringNil sets the value for SearchString to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetSearchStringNil() {
	o.SearchString.Set(nil)
}

// UnsetSearchString ensures that no value is present for SearchString, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetSearchString() {
	o.SearchString.Unset()
}

// GetOptOutType returns the OptOutType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetOptOutType() string {
	if o == nil || IsNil(o.OptOutType.Get()) {
		var ret string
		return ret
	}
	return *o.OptOutType.Get()
}

// GetOptOutTypeOk returns a tuple with the OptOutType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetOptOutTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OptOutType.Get(), o.OptOutType.IsSet()
}

// HasOptOutType returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasOptOutType() bool {
	if o != nil && o.OptOutType.IsSet() {
		return true
	}

	return false
}

// SetOptOutType gets a reference to the given NullableString and assigns it to the OptOutType field.
func (o *ConversionEventsDataInnerCustomData) SetOptOutType(v string) {
	o.OptOutType.Set(&v)
}
// SetOptOutTypeNil sets the value for OptOutType to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetOptOutTypeNil() {
	o.OptOutType.Set(nil)
}

// UnsetOptOutType ensures that no value is present for OptOutType, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetOptOutType() {
	o.OptOutType.Unset()
}

// GetNp returns the Np field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversionEventsDataInnerCustomData) GetNp() string {
	if o == nil || IsNil(o.Np.Get()) {
		var ret string
		return ret
	}
	return *o.Np.Get()
}

// GetNpOk returns a tuple with the Np field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversionEventsDataInnerCustomData) GetNpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Np.Get(), o.Np.IsSet()
}

// HasNp returns a boolean if a field has been set.
func (o *ConversionEventsDataInnerCustomData) HasNp() bool {
	if o != nil && o.Np.IsSet() {
		return true
	}

	return false
}

// SetNp gets a reference to the given NullableString and assigns it to the Np field.
func (o *ConversionEventsDataInnerCustomData) SetNp(v string) {
	o.Np.Set(&v)
}
// SetNpNil sets the value for Np to be an explicit nil
func (o *ConversionEventsDataInnerCustomData) SetNpNil() {
	o.Np.Set(nil)
}

// UnsetNp ensures that no value is present for Np, not even an explicit nil
func (o *ConversionEventsDataInnerCustomData) UnsetNp() {
	o.Np.Unset()
}

func (o ConversionEventsDataInnerCustomData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversionEventsDataInnerCustomData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if !IsNil(o.ContentIds) {
		toSerialize["content_ids"] = o.ContentIds
	}
	if o.ContentName.IsSet() {
		toSerialize["content_name"] = o.ContentName.Get()
	}
	if o.ContentCategory.IsSet() {
		toSerialize["content_category"] = o.ContentCategory.Get()
	}
	if o.ContentBrand.IsSet() {
		toSerialize["content_brand"] = o.ContentBrand.Get()
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.NumItems) {
		toSerialize["num_items"] = o.NumItems
	}
	if o.OrderId.IsSet() {
		toSerialize["order_id"] = o.OrderId.Get()
	}
	if o.SearchString.IsSet() {
		toSerialize["search_string"] = o.SearchString.Get()
	}
	if o.OptOutType.IsSet() {
		toSerialize["opt_out_type"] = o.OptOutType.Get()
	}
	if o.Np.IsSet() {
		toSerialize["np"] = o.Np.Get()
	}
	return toSerialize, nil
}

type NullableConversionEventsDataInnerCustomData struct {
	value *ConversionEventsDataInnerCustomData
	isSet bool
}

func (v NullableConversionEventsDataInnerCustomData) Get() *ConversionEventsDataInnerCustomData {
	return v.value
}

func (v *NullableConversionEventsDataInnerCustomData) Set(val *ConversionEventsDataInnerCustomData) {
	v.value = val
	v.isSet = true
}

func (v NullableConversionEventsDataInnerCustomData) IsSet() bool {
	return v.isSet
}

func (v *NullableConversionEventsDataInnerCustomData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversionEventsDataInnerCustomData(val *ConversionEventsDataInnerCustomData) *NullableConversionEventsDataInnerCustomData {
	return &NullableConversionEventsDataInnerCustomData{value: val, isSet: true}
}

func (v NullableConversionEventsDataInnerCustomData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversionEventsDataInnerCustomData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


