/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AdPreviewCreateFromImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdPreviewCreateFromImage{}

// AdPreviewCreateFromImage struct for AdPreviewCreateFromImage
type AdPreviewCreateFromImage struct {
	// Image URL.
	ImageUrl string `json:"image_url"`
	// Title displayed below ad.
	Title string `json:"title"`
}

type _AdPreviewCreateFromImage AdPreviewCreateFromImage

// NewAdPreviewCreateFromImage instantiates a new AdPreviewCreateFromImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdPreviewCreateFromImage(imageUrl string, title string) *AdPreviewCreateFromImage {
	this := AdPreviewCreateFromImage{}
	this.ImageUrl = imageUrl
	this.Title = title
	return &this
}

// NewAdPreviewCreateFromImageWithDefaults instantiates a new AdPreviewCreateFromImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdPreviewCreateFromImageWithDefaults() *AdPreviewCreateFromImage {
	this := AdPreviewCreateFromImage{}
	return &this
}

// GetImageUrl returns the ImageUrl field value
func (o *AdPreviewCreateFromImage) GetImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value
// and a boolean to check if the value has been set.
func (o *AdPreviewCreateFromImage) GetImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUrl, true
}

// SetImageUrl sets field value
func (o *AdPreviewCreateFromImage) SetImageUrl(v string) {
	o.ImageUrl = v
}

// GetTitle returns the Title field value
func (o *AdPreviewCreateFromImage) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AdPreviewCreateFromImage) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AdPreviewCreateFromImage) SetTitle(v string) {
	o.Title = v
}

func (o AdPreviewCreateFromImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdPreviewCreateFromImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image_url"] = o.ImageUrl
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *AdPreviewCreateFromImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image_url",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdPreviewCreateFromImage := _AdPreviewCreateFromImage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAdPreviewCreateFromImage)

	if err != nil {
		return err
	}

	*o = AdPreviewCreateFromImage(varAdPreviewCreateFromImage)

	return err
}

type NullableAdPreviewCreateFromImage struct {
	value *AdPreviewCreateFromImage
	isSet bool
}

func (v NullableAdPreviewCreateFromImage) Get() *AdPreviewCreateFromImage {
	return v.value
}

func (v *NullableAdPreviewCreateFromImage) Set(val *AdPreviewCreateFromImage) {
	v.value = val
	v.isSet = true
}

func (v NullableAdPreviewCreateFromImage) IsSet() bool {
	return v.isSet
}

func (v *NullableAdPreviewCreateFromImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdPreviewCreateFromImage(val *AdPreviewCreateFromImage) *NullableAdPreviewCreateFromImage {
	return &NullableAdPreviewCreateFromImage{value: val, isSet: true}
}

func (v NullableAdPreviewCreateFromImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdPreviewCreateFromImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


