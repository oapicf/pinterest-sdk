/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// ConversionEventsUserData Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.
type ConversionEventsUserData struct {
	ConversionEventsUserDataAnyOf *ConversionEventsUserDataAnyOf
	ConversionEventsUserDataAnyOf1 *ConversionEventsUserDataAnyOf1
	ConversionEventsUserDataAnyOf2 *ConversionEventsUserDataAnyOf2
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ConversionEventsUserData) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ConversionEventsUserDataAnyOf
	err = json.Unmarshal(data, &dst.ConversionEventsUserDataAnyOf);
	if err == nil {
		jsonConversionEventsUserDataAnyOf, _ := json.Marshal(dst.ConversionEventsUserDataAnyOf)
		if string(jsonConversionEventsUserDataAnyOf) == "{}" { // empty struct
			dst.ConversionEventsUserDataAnyOf = nil
		} else {
			return nil // data stored in dst.ConversionEventsUserDataAnyOf, return on the first match
		}
	} else {
		dst.ConversionEventsUserDataAnyOf = nil
	}

	// try to unmarshal JSON data into ConversionEventsUserDataAnyOf1
	err = json.Unmarshal(data, &dst.ConversionEventsUserDataAnyOf1);
	if err == nil {
		jsonConversionEventsUserDataAnyOf1, _ := json.Marshal(dst.ConversionEventsUserDataAnyOf1)
		if string(jsonConversionEventsUserDataAnyOf1) == "{}" { // empty struct
			dst.ConversionEventsUserDataAnyOf1 = nil
		} else {
			return nil // data stored in dst.ConversionEventsUserDataAnyOf1, return on the first match
		}
	} else {
		dst.ConversionEventsUserDataAnyOf1 = nil
	}

	// try to unmarshal JSON data into ConversionEventsUserDataAnyOf2
	err = json.Unmarshal(data, &dst.ConversionEventsUserDataAnyOf2);
	if err == nil {
		jsonConversionEventsUserDataAnyOf2, _ := json.Marshal(dst.ConversionEventsUserDataAnyOf2)
		if string(jsonConversionEventsUserDataAnyOf2) == "{}" { // empty struct
			dst.ConversionEventsUserDataAnyOf2 = nil
		} else {
			return nil // data stored in dst.ConversionEventsUserDataAnyOf2, return on the first match
		}
	} else {
		dst.ConversionEventsUserDataAnyOf2 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ConversionEventsUserData)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ConversionEventsUserData) MarshalJSON() ([]byte, error) {
	if src.ConversionEventsUserDataAnyOf != nil {
		return json.Marshal(&src.ConversionEventsUserDataAnyOf)
	}

	if src.ConversionEventsUserDataAnyOf1 != nil {
		return json.Marshal(&src.ConversionEventsUserDataAnyOf1)
	}

	if src.ConversionEventsUserDataAnyOf2 != nil {
		return json.Marshal(&src.ConversionEventsUserDataAnyOf2)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableConversionEventsUserData struct {
	value *ConversionEventsUserData
	isSet bool
}

func (v NullableConversionEventsUserData) Get() *ConversionEventsUserData {
	return v.value
}

func (v *NullableConversionEventsUserData) Set(val *ConversionEventsUserData) {
	v.value = val
	v.isSet = true
}

func (v NullableConversionEventsUserData) IsSet() bool {
	return v.isSet
}

func (v *NullableConversionEventsUserData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversionEventsUserData(val *ConversionEventsUserData) *NullableConversionEventsUserData {
	return &NullableConversionEventsUserData{value: val, isSet: true}
}

func (v NullableConversionEventsUserData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversionEventsUserData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


