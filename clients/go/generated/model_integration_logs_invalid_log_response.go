/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IntegrationLogsInvalidLogResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationLogsInvalidLogResponse{}

// IntegrationLogsInvalidLogResponse Schema describing the response when a log has invalid fields.
type IntegrationLogsInvalidLogResponse struct {
	RejectedLogs []IntegrationLogsInvalidLogResponseRejectedLogsInner `json:"rejected_logs,omitempty"`
}

// NewIntegrationLogsInvalidLogResponse instantiates a new IntegrationLogsInvalidLogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationLogsInvalidLogResponse() *IntegrationLogsInvalidLogResponse {
	this := IntegrationLogsInvalidLogResponse{}
	return &this
}

// NewIntegrationLogsInvalidLogResponseWithDefaults instantiates a new IntegrationLogsInvalidLogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationLogsInvalidLogResponseWithDefaults() *IntegrationLogsInvalidLogResponse {
	this := IntegrationLogsInvalidLogResponse{}
	return &this
}

// GetRejectedLogs returns the RejectedLogs field value if set, zero value otherwise.
func (o *IntegrationLogsInvalidLogResponse) GetRejectedLogs() []IntegrationLogsInvalidLogResponseRejectedLogsInner {
	if o == nil || IsNil(o.RejectedLogs) {
		var ret []IntegrationLogsInvalidLogResponseRejectedLogsInner
		return ret
	}
	return o.RejectedLogs
}

// GetRejectedLogsOk returns a tuple with the RejectedLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationLogsInvalidLogResponse) GetRejectedLogsOk() ([]IntegrationLogsInvalidLogResponseRejectedLogsInner, bool) {
	if o == nil || IsNil(o.RejectedLogs) {
		return nil, false
	}
	return o.RejectedLogs, true
}

// HasRejectedLogs returns a boolean if a field has been set.
func (o *IntegrationLogsInvalidLogResponse) HasRejectedLogs() bool {
	if o != nil && !IsNil(o.RejectedLogs) {
		return true
	}

	return false
}

// SetRejectedLogs gets a reference to the given []IntegrationLogsInvalidLogResponseRejectedLogsInner and assigns it to the RejectedLogs field.
func (o *IntegrationLogsInvalidLogResponse) SetRejectedLogs(v []IntegrationLogsInvalidLogResponseRejectedLogsInner) {
	o.RejectedLogs = v
}

func (o IntegrationLogsInvalidLogResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationLogsInvalidLogResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RejectedLogs) {
		toSerialize["rejected_logs"] = o.RejectedLogs
	}
	return toSerialize, nil
}

type NullableIntegrationLogsInvalidLogResponse struct {
	value *IntegrationLogsInvalidLogResponse
	isSet bool
}

func (v NullableIntegrationLogsInvalidLogResponse) Get() *IntegrationLogsInvalidLogResponse {
	return v.value
}

func (v *NullableIntegrationLogsInvalidLogResponse) Set(val *IntegrationLogsInvalidLogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationLogsInvalidLogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationLogsInvalidLogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationLogsInvalidLogResponse(val *IntegrationLogsInvalidLogResponse) *NullableIntegrationLogsInvalidLogResponse {
	return &NullableIntegrationLogsInvalidLogResponse{value: val, isSet: true}
}

func (v NullableIntegrationLogsInvalidLogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationLogsInvalidLogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


