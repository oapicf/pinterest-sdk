/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsUpsertCreativeAssetsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsUpsertCreativeAssetsItem{}

// CatalogsUpsertCreativeAssetsItem A creative assets item to be upserted.
type CatalogsUpsertCreativeAssetsItem struct {
	// The catalog creative assets id in the merchant namespace
	CreativeAssetsId string `json:"creative_assets_id"`
	Operation string `json:"operation"`
	Attributes CatalogsCreativeAssetsAttributes `json:"attributes"`
}

type _CatalogsUpsertCreativeAssetsItem CatalogsUpsertCreativeAssetsItem

// NewCatalogsUpsertCreativeAssetsItem instantiates a new CatalogsUpsertCreativeAssetsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsUpsertCreativeAssetsItem(creativeAssetsId string, operation string, attributes CatalogsCreativeAssetsAttributes) *CatalogsUpsertCreativeAssetsItem {
	this := CatalogsUpsertCreativeAssetsItem{}
	this.CreativeAssetsId = creativeAssetsId
	this.Operation = operation
	this.Attributes = attributes
	return &this
}

// NewCatalogsUpsertCreativeAssetsItemWithDefaults instantiates a new CatalogsUpsertCreativeAssetsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsUpsertCreativeAssetsItemWithDefaults() *CatalogsUpsertCreativeAssetsItem {
	this := CatalogsUpsertCreativeAssetsItem{}
	return &this
}

// GetCreativeAssetsId returns the CreativeAssetsId field value
func (o *CatalogsUpsertCreativeAssetsItem) GetCreativeAssetsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreativeAssetsId
}

// GetCreativeAssetsIdOk returns a tuple with the CreativeAssetsId field value
// and a boolean to check if the value has been set.
func (o *CatalogsUpsertCreativeAssetsItem) GetCreativeAssetsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreativeAssetsId, true
}

// SetCreativeAssetsId sets field value
func (o *CatalogsUpsertCreativeAssetsItem) SetCreativeAssetsId(v string) {
	o.CreativeAssetsId = v
}

// GetOperation returns the Operation field value
func (o *CatalogsUpsertCreativeAssetsItem) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *CatalogsUpsertCreativeAssetsItem) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *CatalogsUpsertCreativeAssetsItem) SetOperation(v string) {
	o.Operation = v
}

// GetAttributes returns the Attributes field value
func (o *CatalogsUpsertCreativeAssetsItem) GetAttributes() CatalogsCreativeAssetsAttributes {
	if o == nil {
		var ret CatalogsCreativeAssetsAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *CatalogsUpsertCreativeAssetsItem) GetAttributesOk() (*CatalogsCreativeAssetsAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *CatalogsUpsertCreativeAssetsItem) SetAttributes(v CatalogsCreativeAssetsAttributes) {
	o.Attributes = v
}

func (o CatalogsUpsertCreativeAssetsItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsUpsertCreativeAssetsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["creative_assets_id"] = o.CreativeAssetsId
	toSerialize["operation"] = o.Operation
	toSerialize["attributes"] = o.Attributes
	return toSerialize, nil
}

func (o *CatalogsUpsertCreativeAssetsItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"creative_assets_id",
		"operation",
		"attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsUpsertCreativeAssetsItem := _CatalogsUpsertCreativeAssetsItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsUpsertCreativeAssetsItem)

	if err != nil {
		return err
	}

	*o = CatalogsUpsertCreativeAssetsItem(varCatalogsUpsertCreativeAssetsItem)

	return err
}

type NullableCatalogsUpsertCreativeAssetsItem struct {
	value *CatalogsUpsertCreativeAssetsItem
	isSet bool
}

func (v NullableCatalogsUpsertCreativeAssetsItem) Get() *CatalogsUpsertCreativeAssetsItem {
	return v.value
}

func (v *NullableCatalogsUpsertCreativeAssetsItem) Set(val *CatalogsUpsertCreativeAssetsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsUpsertCreativeAssetsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsUpsertCreativeAssetsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsUpsertCreativeAssetsItem(val *CatalogsUpsertCreativeAssetsItem) *NullableCatalogsUpsertCreativeAssetsItem {
	return &NullableCatalogsUpsertCreativeAssetsItem{value: val, isSet: true}
}

func (v NullableCatalogsUpsertCreativeAssetsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsUpsertCreativeAssetsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


