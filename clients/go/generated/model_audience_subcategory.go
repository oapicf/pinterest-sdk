/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AudienceSubcategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceSubcategory{}

// AudienceSubcategory struct for AudienceSubcategory
type AudienceSubcategory struct {
	// Interest unique key (same as ID).
	Key *string `json:"key,omitempty"`
	// Subinterest name.
	Name *string `json:"name,omitempty"`
	// Subinterest's percent of category's total audience.
	Ratio *float32 `json:"ratio,omitempty"`
	// Subinterest affinity index.
	Index *float32 `json:"index,omitempty"`
	// Subinterest ID.
	Id *string `json:"id,omitempty"`
}

// NewAudienceSubcategory instantiates a new AudienceSubcategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceSubcategory() *AudienceSubcategory {
	this := AudienceSubcategory{}
	return &this
}

// NewAudienceSubcategoryWithDefaults instantiates a new AudienceSubcategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceSubcategoryWithDefaults() *AudienceSubcategory {
	this := AudienceSubcategory{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *AudienceSubcategory) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSubcategory) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *AudienceSubcategory) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *AudienceSubcategory) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AudienceSubcategory) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSubcategory) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AudienceSubcategory) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AudienceSubcategory) SetName(v string) {
	o.Name = &v
}

// GetRatio returns the Ratio field value if set, zero value otherwise.
func (o *AudienceSubcategory) GetRatio() float32 {
	if o == nil || IsNil(o.Ratio) {
		var ret float32
		return ret
	}
	return *o.Ratio
}

// GetRatioOk returns a tuple with the Ratio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSubcategory) GetRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.Ratio) {
		return nil, false
	}
	return o.Ratio, true
}

// HasRatio returns a boolean if a field has been set.
func (o *AudienceSubcategory) HasRatio() bool {
	if o != nil && !IsNil(o.Ratio) {
		return true
	}

	return false
}

// SetRatio gets a reference to the given float32 and assigns it to the Ratio field.
func (o *AudienceSubcategory) SetRatio(v float32) {
	o.Ratio = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *AudienceSubcategory) GetIndex() float32 {
	if o == nil || IsNil(o.Index) {
		var ret float32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSubcategory) GetIndexOk() (*float32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *AudienceSubcategory) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given float32 and assigns it to the Index field.
func (o *AudienceSubcategory) SetIndex(v float32) {
	o.Index = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AudienceSubcategory) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceSubcategory) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AudienceSubcategory) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AudienceSubcategory) SetId(v string) {
	o.Id = &v
}

func (o AudienceSubcategory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceSubcategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ratio) {
		toSerialize["ratio"] = o.Ratio
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableAudienceSubcategory struct {
	value *AudienceSubcategory
	isSet bool
}

func (v NullableAudienceSubcategory) Get() *AudienceSubcategory {
	return v.value
}

func (v *NullableAudienceSubcategory) Set(val *AudienceSubcategory) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceSubcategory) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceSubcategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceSubcategory(val *AudienceSubcategory) *NullableAudienceSubcategory {
	return &NullableAudienceSubcategory{value: val, isSet: true}
}

func (v NullableAudienceSubcategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceSubcategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


