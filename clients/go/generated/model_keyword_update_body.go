/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KeywordUpdateBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeywordUpdateBody{}

// KeywordUpdateBody struct for KeywordUpdateBody
type KeywordUpdateBody struct {
	// Keywords to update. Object array. Each object has 2 possible fields:<br>1. \"id\": (required) keyword ID<br>2. \"archived\": boolean. Should keyword be archived?<br>For example: [{\"id\":\"2886610576653\", \"archived\": false}, {\"id\":\"2886610576654\",  \"archived\": true}, ...]
	Keywords []KeywordUpdate `json:"keywords"`
}

type _KeywordUpdateBody KeywordUpdateBody

// NewKeywordUpdateBody instantiates a new KeywordUpdateBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeywordUpdateBody(keywords []KeywordUpdate) *KeywordUpdateBody {
	this := KeywordUpdateBody{}
	this.Keywords = keywords
	return &this
}

// NewKeywordUpdateBodyWithDefaults instantiates a new KeywordUpdateBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeywordUpdateBodyWithDefaults() *KeywordUpdateBody {
	this := KeywordUpdateBody{}
	return &this
}

// GetKeywords returns the Keywords field value
func (o *KeywordUpdateBody) GetKeywords() []KeywordUpdate {
	if o == nil {
		var ret []KeywordUpdate
		return ret
	}

	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value
// and a boolean to check if the value has been set.
func (o *KeywordUpdateBody) GetKeywordsOk() ([]KeywordUpdate, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keywords, true
}

// SetKeywords sets field value
func (o *KeywordUpdateBody) SetKeywords(v []KeywordUpdate) {
	o.Keywords = v
}

func (o KeywordUpdateBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeywordUpdateBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keywords"] = o.Keywords
	return toSerialize, nil
}

func (o *KeywordUpdateBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"keywords",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeywordUpdateBody := _KeywordUpdateBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKeywordUpdateBody)

	if err != nil {
		return err
	}

	*o = KeywordUpdateBody(varKeywordUpdateBody)

	return err
}

type NullableKeywordUpdateBody struct {
	value *KeywordUpdateBody
	isSet bool
}

func (v NullableKeywordUpdateBody) Get() *KeywordUpdateBody {
	return v.value
}

func (v *NullableKeywordUpdateBody) Set(val *KeywordUpdateBody) {
	v.value = val
	v.isSet = true
}

func (v NullableKeywordUpdateBody) IsSet() bool {
	return v.isSet
}

func (v *NullableKeywordUpdateBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeywordUpdateBody(val *KeywordUpdateBody) *NullableKeywordUpdateBody {
	return &NullableKeywordUpdateBody{value: val, isSet: true}
}

func (v NullableKeywordUpdateBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeywordUpdateBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


