/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogsHotelItemsPostFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsHotelItemsPostFilter{}

// CatalogsHotelItemsPostFilter struct for CatalogsHotelItemsPostFilter
type CatalogsHotelItemsPostFilter struct {
	CatalogType string `json:"catalog_type"`
	HotelIds []string `json:"hotel_ids"`
	// Catalog id pertaining to the hotel item. If not provided, default to oldest hotel catalog
	CatalogId *string `json:"catalog_id,omitempty" validate:"regexp=^\\\\d+$"`
}

type _CatalogsHotelItemsPostFilter CatalogsHotelItemsPostFilter

// NewCatalogsHotelItemsPostFilter instantiates a new CatalogsHotelItemsPostFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsHotelItemsPostFilter(catalogType string, hotelIds []string) *CatalogsHotelItemsPostFilter {
	this := CatalogsHotelItemsPostFilter{}
	this.CatalogType = catalogType
	this.HotelIds = hotelIds
	return &this
}

// NewCatalogsHotelItemsPostFilterWithDefaults instantiates a new CatalogsHotelItemsPostFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsHotelItemsPostFilterWithDefaults() *CatalogsHotelItemsPostFilter {
	this := CatalogsHotelItemsPostFilter{}
	return &this
}

// GetCatalogType returns the CatalogType field value
func (o *CatalogsHotelItemsPostFilter) GetCatalogType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogType
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value
// and a boolean to check if the value has been set.
func (o *CatalogsHotelItemsPostFilter) GetCatalogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogType, true
}

// SetCatalogType sets field value
func (o *CatalogsHotelItemsPostFilter) SetCatalogType(v string) {
	o.CatalogType = v
}

// GetHotelIds returns the HotelIds field value
func (o *CatalogsHotelItemsPostFilter) GetHotelIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.HotelIds
}

// GetHotelIdsOk returns a tuple with the HotelIds field value
// and a boolean to check if the value has been set.
func (o *CatalogsHotelItemsPostFilter) GetHotelIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HotelIds, true
}

// SetHotelIds sets field value
func (o *CatalogsHotelItemsPostFilter) SetHotelIds(v []string) {
	o.HotelIds = v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *CatalogsHotelItemsPostFilter) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsHotelItemsPostFilter) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *CatalogsHotelItemsPostFilter) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *CatalogsHotelItemsPostFilter) SetCatalogId(v string) {
	o.CatalogId = &v
}

func (o CatalogsHotelItemsPostFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsHotelItemsPostFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalog_type"] = o.CatalogType
	toSerialize["hotel_ids"] = o.HotelIds
	if !IsNil(o.CatalogId) {
		toSerialize["catalog_id"] = o.CatalogId
	}
	return toSerialize, nil
}

func (o *CatalogsHotelItemsPostFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_type",
		"hotel_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogsHotelItemsPostFilter := _CatalogsHotelItemsPostFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogsHotelItemsPostFilter)

	if err != nil {
		return err
	}

	*o = CatalogsHotelItemsPostFilter(varCatalogsHotelItemsPostFilter)

	return err
}

type NullableCatalogsHotelItemsPostFilter struct {
	value *CatalogsHotelItemsPostFilter
	isSet bool
}

func (v NullableCatalogsHotelItemsPostFilter) Get() *CatalogsHotelItemsPostFilter {
	return v.value
}

func (v *NullableCatalogsHotelItemsPostFilter) Set(val *CatalogsHotelItemsPostFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsHotelItemsPostFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsHotelItemsPostFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsHotelItemsPostFilter(val *CatalogsHotelItemsPostFilter) *NullableCatalogsHotelItemsPostFilter {
	return &NullableCatalogsHotelItemsPostFilter{value: val, isSet: true}
}

func (v NullableCatalogsHotelItemsPostFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsHotelItemsPostFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


