/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AvailabilityFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailabilityFilter{}

// AvailabilityFilter struct for AvailabilityFilter
type AvailabilityFilter struct {
	AVAILABILITY CatalogsProductGroupMultipleStringCriteria `json:"AVAILABILITY"`
}

type _AvailabilityFilter AvailabilityFilter

// NewAvailabilityFilter instantiates a new AvailabilityFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityFilter(aVAILABILITY CatalogsProductGroupMultipleStringCriteria) *AvailabilityFilter {
	this := AvailabilityFilter{}
	this.AVAILABILITY = aVAILABILITY
	return &this
}

// NewAvailabilityFilterWithDefaults instantiates a new AvailabilityFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityFilterWithDefaults() *AvailabilityFilter {
	this := AvailabilityFilter{}
	return &this
}

// GetAVAILABILITY returns the AVAILABILITY field value
func (o *AvailabilityFilter) GetAVAILABILITY() CatalogsProductGroupMultipleStringCriteria {
	if o == nil {
		var ret CatalogsProductGroupMultipleStringCriteria
		return ret
	}

	return o.AVAILABILITY
}

// GetAVAILABILITYOk returns a tuple with the AVAILABILITY field value
// and a boolean to check if the value has been set.
func (o *AvailabilityFilter) GetAVAILABILITYOk() (CatalogsProductGroupMultipleStringCriteria, bool) {
	if o == nil {
		return CatalogsProductGroupMultipleStringCriteria{}, false
	}
	return o.AVAILABILITY, true
}

// SetAVAILABILITY sets field value
func (o *AvailabilityFilter) SetAVAILABILITY(v CatalogsProductGroupMultipleStringCriteria) {
	o.AVAILABILITY = v
}

func (o AvailabilityFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailabilityFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AVAILABILITY"] = o.AVAILABILITY
	return toSerialize, nil
}

func (o *AvailabilityFilter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"AVAILABILITY",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAvailabilityFilter := _AvailabilityFilter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAvailabilityFilter)

	if err != nil {
		return err
	}

	*o = AvailabilityFilter(varAvailabilityFilter)

	return err
}

type NullableAvailabilityFilter struct {
	value *AvailabilityFilter
	isSet bool
}

func (v NullableAvailabilityFilter) Get() *AvailabilityFilter {
	return v.value
}

func (v *NullableAvailabilityFilter) Set(val *AvailabilityFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityFilter(val *AvailabilityFilter) *NullableAvailabilityFilter {
	return &NullableAvailabilityFilter{value: val, isSet: true}
}

func (v NullableAvailabilityFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


