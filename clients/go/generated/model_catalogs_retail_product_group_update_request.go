/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogsRetailProductGroupUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogsRetailProductGroupUpdateRequest{}

// CatalogsRetailProductGroupUpdateRequest Request object for updating a retail product group.
type CatalogsRetailProductGroupUpdateRequest struct {
	// Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
	CatalogType *string `json:"catalog_type,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Filters *CatalogsProductGroupFiltersRequest `json:"filters,omitempty"`
	Country *Country `json:"country,omitempty"`
	Locale *CatalogsLocale `json:"locale,omitempty"`
}

// NewCatalogsRetailProductGroupUpdateRequest instantiates a new CatalogsRetailProductGroupUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogsRetailProductGroupUpdateRequest() *CatalogsRetailProductGroupUpdateRequest {
	this := CatalogsRetailProductGroupUpdateRequest{}
	return &this
}

// NewCatalogsRetailProductGroupUpdateRequestWithDefaults instantiates a new CatalogsRetailProductGroupUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogsRetailProductGroupUpdateRequestWithDefaults() *CatalogsRetailProductGroupUpdateRequest {
	this := CatalogsRetailProductGroupUpdateRequest{}
	return &this
}

// GetCatalogType returns the CatalogType field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroupUpdateRequest) GetCatalogType() string {
	if o == nil || IsNil(o.CatalogType) {
		var ret string
		return ret
	}
	return *o.CatalogType
}

// GetCatalogTypeOk returns a tuple with the CatalogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) GetCatalogTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogType) {
		return nil, false
	}
	return o.CatalogType, true
}

// HasCatalogType returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) HasCatalogType() bool {
	if o != nil && !IsNil(o.CatalogType) {
		return true
	}

	return false
}

// SetCatalogType gets a reference to the given string and assigns it to the CatalogType field.
func (o *CatalogsRetailProductGroupUpdateRequest) SetCatalogType(v string) {
	o.CatalogType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroupUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogsRetailProductGroupUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogsRetailProductGroupUpdateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogsRetailProductGroupUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogsRetailProductGroupUpdateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogsRetailProductGroupUpdateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogsRetailProductGroupUpdateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroupUpdateRequest) GetFilters() CatalogsProductGroupFiltersRequest {
	if o == nil || IsNil(o.Filters) {
		var ret CatalogsProductGroupFiltersRequest
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) GetFiltersOk() (*CatalogsProductGroupFiltersRequest, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given CatalogsProductGroupFiltersRequest and assigns it to the Filters field.
func (o *CatalogsRetailProductGroupUpdateRequest) SetFilters(v CatalogsProductGroupFiltersRequest) {
	o.Filters = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroupUpdateRequest) GetCountry() Country {
	if o == nil || IsNil(o.Country) {
		var ret Country
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) GetCountryOk() (*Country, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given Country and assigns it to the Country field.
func (o *CatalogsRetailProductGroupUpdateRequest) SetCountry(v Country) {
	o.Country = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *CatalogsRetailProductGroupUpdateRequest) GetLocale() CatalogsLocale {
	if o == nil || IsNil(o.Locale) {
		var ret CatalogsLocale
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) GetLocaleOk() (*CatalogsLocale, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *CatalogsRetailProductGroupUpdateRequest) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given CatalogsLocale and assigns it to the Locale field.
func (o *CatalogsRetailProductGroupUpdateRequest) SetLocale(v CatalogsLocale) {
	o.Locale = &v
}

func (o CatalogsRetailProductGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogsRetailProductGroupUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogType) {
		toSerialize["catalog_type"] = o.CatalogType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	return toSerialize, nil
}

type NullableCatalogsRetailProductGroupUpdateRequest struct {
	value *CatalogsRetailProductGroupUpdateRequest
	isSet bool
}

func (v NullableCatalogsRetailProductGroupUpdateRequest) Get() *CatalogsRetailProductGroupUpdateRequest {
	return v.value
}

func (v *NullableCatalogsRetailProductGroupUpdateRequest) Set(val *CatalogsRetailProductGroupUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogsRetailProductGroupUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogsRetailProductGroupUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogsRetailProductGroupUpdateRequest(val *CatalogsRetailProductGroupUpdateRequest) *NullableCatalogsRetailProductGroupUpdateRequest {
	return &NullableCatalogsRetailProductGroupUpdateRequest{value: val, isSet: true}
}

func (v NullableCatalogsRetailProductGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogsRetailProductGroupUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


