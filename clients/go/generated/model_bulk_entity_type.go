/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// BulkEntityType Refers ads entity type
type BulkEntityType string

// List of BulkEntityType
const (
	CAMPAIGN BulkEntityType = "CAMPAIGN"
	AD_GROUP BulkEntityType = "AD_GROUP"
	PRODUCT_GROUP BulkEntityType = "PRODUCT_GROUP"
	AD BulkEntityType = "AD"
	KEYWORD BulkEntityType = "KEYWORD"
)

// All allowed values of BulkEntityType enum
var AllowedBulkEntityTypeEnumValues = []BulkEntityType{
	"CAMPAIGN",
	"AD_GROUP",
	"PRODUCT_GROUP",
	"AD",
	"KEYWORD",
}

func (v *BulkEntityType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BulkEntityType(value)
	for _, existing := range AllowedBulkEntityTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BulkEntityType", value)
}

// NewBulkEntityTypeFromValue returns a pointer to a valid BulkEntityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBulkEntityTypeFromValue(v string) (*BulkEntityType, error) {
	ev := BulkEntityType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BulkEntityType: valid values are %v", v, AllowedBulkEntityTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BulkEntityType) IsValid() bool {
	for _, existing := range AllowedBulkEntityTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BulkEntityType value
func (v BulkEntityType) Ptr() *BulkEntityType {
	return &v
}

type NullableBulkEntityType struct {
	value *BulkEntityType
	isSet bool
}

func (v NullableBulkEntityType) Get() *BulkEntityType {
	return v.value
}

func (v *NullableBulkEntityType) Set(val *BulkEntityType) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkEntityType) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkEntityType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkEntityType(val *BulkEntityType) *NullableBulkEntityType {
	return &NullableBulkEntityType{value: val, isSet: true}
}

func (v NullableBulkEntityType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkEntityType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

