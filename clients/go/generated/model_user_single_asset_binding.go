/*
Pinterest REST API

Pinterest's REST API

API version: 5.14.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSingleAssetBinding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSingleAssetBinding{}

// UserSingleAssetBinding An object containing the permissions a business member/partner has on the asset.
type UserSingleAssetBinding struct {
	// Permission levels member or partner has on an asset.
	Permissions []string `json:"permissions,omitempty"`
	User *BusinessAccessUserSummary `json:"user,omitempty"`
}

// NewUserSingleAssetBinding instantiates a new UserSingleAssetBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSingleAssetBinding() *UserSingleAssetBinding {
	this := UserSingleAssetBinding{}
	return &this
}

// NewUserSingleAssetBindingWithDefaults instantiates a new UserSingleAssetBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSingleAssetBindingWithDefaults() *UserSingleAssetBinding {
	this := UserSingleAssetBinding{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UserSingleAssetBinding) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSingleAssetBinding) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UserSingleAssetBinding) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *UserSingleAssetBinding) SetPermissions(v []string) {
	o.Permissions = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UserSingleAssetBinding) GetUser() BusinessAccessUserSummary {
	if o == nil || IsNil(o.User) {
		var ret BusinessAccessUserSummary
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSingleAssetBinding) GetUserOk() (*BusinessAccessUserSummary, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UserSingleAssetBinding) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given BusinessAccessUserSummary and assigns it to the User field.
func (o *UserSingleAssetBinding) SetUser(v BusinessAccessUserSummary) {
	o.User = &v
}

func (o UserSingleAssetBinding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSingleAssetBinding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableUserSingleAssetBinding struct {
	value *UserSingleAssetBinding
	isSet bool
}

func (v NullableUserSingleAssetBinding) Get() *UserSingleAssetBinding {
	return v.value
}

func (v *NullableUserSingleAssetBinding) Set(val *UserSingleAssetBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSingleAssetBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSingleAssetBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSingleAssetBinding(val *UserSingleAssetBinding) *NullableUserSingleAssetBinding {
	return &NullableUserSingleAssetBinding{value: val, isSet: true}
}

func (v NullableUserSingleAssetBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSingleAssetBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


