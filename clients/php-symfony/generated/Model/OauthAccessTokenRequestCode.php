<?php
/**
 * OauthAccessTokenRequestCode
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OauthAccessTokenRequestCode model.
 *
 * A request to exchange an authorization code for an access token.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OauthAccessTokenRequestCode 
{
        /**
     * @var string|null
     * @SerializedName("grant_type")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["authorization_code", "refresh_token", "client_credentials"])]
    #[Assert\Type("string")]
    protected ?string $grantType = null;

    /**
     * @var string|null
     * @SerializedName("code")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $code = null;

    /**
     * @var string|null
     * @SerializedName("redirect_uri")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $redirectUri = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->grantType = array_key_exists('grantType', $data) ? $data['grantType'] : $this->grantType;
            $this->code = array_key_exists('code', $data) ? $data['code'] : $this->code;
            $this->redirectUri = array_key_exists('redirectUri', $data) ? $data['redirectUri'] : $this->redirectUri;
        }
    }

    /**
     * Gets grantType.
     *
     * @return string|null
     */
    public function getGrantType(): ?string
    {
        return $this->grantType;
    }

    /**
    * Sets grantType.
    *
    * @param string|null $grantType
    *
    * @return $this
    */
    public function setGrantType(?string $grantType): self
    {
        $this->grantType = $grantType;

        return $this;
    }




    /**
     * Gets code.
     *
     * @return string|null
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
    * Sets code.
    *
    * @param string|null $code
    *
    * @return $this
    */
    public function setCode(?string $code): self
    {
        $this->code = $code;

        return $this;
    }




    /**
     * Gets redirectUri.
     *
     * @return string|null
     */
    public function getRedirectUri(): ?string
    {
        return $this->redirectUri;
    }

    /**
    * Sets redirectUri.
    *
    * @param string|null $redirectUri
    *
    * @return $this
    */
    public function setRedirectUri(?string $redirectUri): self
    {
        $this->redirectUri = $redirectUri;

        return $this;
    }



}


