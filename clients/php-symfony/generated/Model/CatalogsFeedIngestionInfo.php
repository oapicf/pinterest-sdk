<?php
/**
 * CatalogsFeedIngestionInfo
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsFeedIngestionInfo model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsFeedIngestionInfo 
{
        /**
     * The number of ingested products that are in stock.
     *
     * @var int|null
     * @SerializedName("IN_STOCK")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $iNSTOCK = null;

    /**
     * The number of ingested products that are in out of stock.
     *
     * @var int|null
     * @SerializedName("OUT_OF_STOCK")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $oUTOFSTOCK = null;

    /**
     * The number of ingested products that are in preorder.
     *
     * @var int|null
     * @SerializedName("PREORDER")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $pREORDER = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->iNSTOCK = array_key_exists('iNSTOCK', $data) ? $data['iNSTOCK'] : $this->iNSTOCK;
            $this->oUTOFSTOCK = array_key_exists('oUTOFSTOCK', $data) ? $data['oUTOFSTOCK'] : $this->oUTOFSTOCK;
            $this->pREORDER = array_key_exists('pREORDER', $data) ? $data['pREORDER'] : $this->pREORDER;
        }
    }

    /**
     * Gets iNSTOCK.
     *
     * @return int|null
     */
    public function getINSTOCK(): ?int
    {
        return $this->iNSTOCK;
    }

    /**
    * Sets iNSTOCK.
    *
    * @param int|null $iNSTOCK  The number of ingested products that are in stock.
    *
    * @return $this
    */
    public function setINSTOCK(?int $iNSTOCK = null): self
    {
        $this->iNSTOCK = $iNSTOCK;

        return $this;
    }




    /**
     * Gets oUTOFSTOCK.
     *
     * @return int|null
     */
    public function getOUTOFSTOCK(): ?int
    {
        return $this->oUTOFSTOCK;
    }

    /**
    * Sets oUTOFSTOCK.
    *
    * @param int|null $oUTOFSTOCK  The number of ingested products that are in out of stock.
    *
    * @return $this
    */
    public function setOUTOFSTOCK(?int $oUTOFSTOCK = null): self
    {
        $this->oUTOFSTOCK = $oUTOFSTOCK;

        return $this;
    }




    /**
     * Gets pREORDER.
     *
     * @return int|null
     */
    public function getPREORDER(): ?int
    {
        return $this->pREORDER;
    }

    /**
    * Sets pREORDER.
    *
    * @param int|null $pREORDER  The number of ingested products that are in preorder.
    *
    * @return $this
    */
    public function setPREORDER(?int $pREORDER = null): self
    {
        $this->pREORDER = $pREORDER;

        return $this;
    }



}


