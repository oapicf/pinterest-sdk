<?php
/**
 * ProductGroupPromotionResponseElement
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ProductGroupPromotionResponseElement model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ProductGroupPromotionResponseElement 
{
        /**
     * ID of the product group promotion.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $id = null;

    /**
     * ID of the ad group the product group belongs to.
     *
     * @var string|null
     * @SerializedName("ad_group_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^(AG)?\\d+$/")]
    protected ?string $adGroupId = null;

    /**
     * The bid in micro currency.
     *
     * @var int|null
     * @SerializedName("bid_in_micro_currency")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $bidInMicroCurrency = null;

    /**
     * True if the group is BIDDABLE, false if it should be EXCLUDED from serving ads.
     *
     * @var bool|null
     * @SerializedName("included")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $included = null;

    /**
     * The full product group definition path
     *
     * @var string|null
     * @SerializedName("definition")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $definition = null;

    /**
     * The definition of the product group, relative to its parent - an attribute name/value pair
     *
     * @var string|null
     * @SerializedName("relative_definition")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $relativeDefinition = null;

    /**
     * The parent Product Group ID of this Product Group
     *
     * @var string|null
     * @SerializedName("parent_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $parentId = null;

    /**
     * Slideshow Collections Title
     *
     * @var string|null
     * @SerializedName("slideshow_collections_title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $slideshowCollectionsTitle = null;

    /**
     * Slideshow Collections Description
     *
     * @var string|null
     * @SerializedName("slideshow_collections_description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $slideshowCollectionsDescription = null;

    /**
     * If set to true products promoted in this product group will use the Mobile Deep Link specified in your catalog
     *
     * @var bool|null
     * @SerializedName("is_mdl")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $isMdl = null;

    /**
     * @var EntityStatus|null
     * @SerializedName("status")
    * @Accessor(getter="getSerializedStatus", setter="setDeserializedStatus")
    * @Type("string")
    */
    protected ?EntityStatus $status = null;

    /**
     * Tracking template for proudct group promotions. 4000 limit
     *
     * @var string|null
     * @SerializedName("tracking_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $trackingUrl = null;

    /**
     * ID of the catalogs product group that this product group promotion references
     *
     * @var string|null
     * @SerializedName("catalog_product_group_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $catalogProductGroupId = null;

    /**
     * Catalogs product group name
     *
     * @var string|null
     * @SerializedName("catalog_product_group_name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $catalogProductGroupName = null;

    /**
     * Hero Pin ID if this PG is promoted as a Collection
     *
     * @var string|null
     * @SerializedName("collections_hero_pin_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $collectionsHeroPinId = null;

    /**
     * Collections Hero Destination Url
     *
     * @var string|null
     * @SerializedName("collections_hero_destination_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $collectionsHeroDestinationUrl = null;

    /**
     * @var GridClickType|null
     * @SerializedName("grid_click_type")
    * @Accessor(getter="getSerializedGridClickType", setter="setDeserializedGridClickType")
    * @Type("string")
    */
    protected ?GridClickType $gridClickType = null;

    /**
     * @var CreativeType|null
     * @SerializedName("creative_type")
    * @Accessor(getter="getSerializedCreativeType", setter="setDeserializedCreativeType")
    * @Type("string")
    */
    protected ?CreativeType $creativeType = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->adGroupId = array_key_exists('adGroupId', $data) ? $data['adGroupId'] : $this->adGroupId;
            $this->bidInMicroCurrency = array_key_exists('bidInMicroCurrency', $data) ? $data['bidInMicroCurrency'] : $this->bidInMicroCurrency;
            $this->included = array_key_exists('included', $data) ? $data['included'] : $this->included;
            $this->definition = array_key_exists('definition', $data) ? $data['definition'] : $this->definition;
            $this->relativeDefinition = array_key_exists('relativeDefinition', $data) ? $data['relativeDefinition'] : $this->relativeDefinition;
            $this->parentId = array_key_exists('parentId', $data) ? $data['parentId'] : $this->parentId;
            $this->slideshowCollectionsTitle = array_key_exists('slideshowCollectionsTitle', $data) ? $data['slideshowCollectionsTitle'] : $this->slideshowCollectionsTitle;
            $this->slideshowCollectionsDescription = array_key_exists('slideshowCollectionsDescription', $data) ? $data['slideshowCollectionsDescription'] : $this->slideshowCollectionsDescription;
            $this->isMdl = array_key_exists('isMdl', $data) ? $data['isMdl'] : $this->isMdl;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->trackingUrl = array_key_exists('trackingUrl', $data) ? $data['trackingUrl'] : $this->trackingUrl;
            $this->catalogProductGroupId = array_key_exists('catalogProductGroupId', $data) ? $data['catalogProductGroupId'] : $this->catalogProductGroupId;
            $this->catalogProductGroupName = array_key_exists('catalogProductGroupName', $data) ? $data['catalogProductGroupName'] : $this->catalogProductGroupName;
            $this->collectionsHeroPinId = array_key_exists('collectionsHeroPinId', $data) ? $data['collectionsHeroPinId'] : $this->collectionsHeroPinId;
            $this->collectionsHeroDestinationUrl = array_key_exists('collectionsHeroDestinationUrl', $data) ? $data['collectionsHeroDestinationUrl'] : $this->collectionsHeroDestinationUrl;
            $this->gridClickType = array_key_exists('gridClickType', $data) ? $data['gridClickType'] : $this->gridClickType;
            $this->creativeType = array_key_exists('creativeType', $data) ? $data['creativeType'] : $this->creativeType;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  ID of the product group promotion.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets adGroupId.
     *
     * @return string|null
     */
    public function getAdGroupId(): ?string
    {
        return $this->adGroupId;
    }

    /**
    * Sets adGroupId.
    *
    * @param string|null $adGroupId  ID of the ad group the product group belongs to.
    *
    * @return $this
    */
    public function setAdGroupId(?string $adGroupId = null): self
    {
        $this->adGroupId = $adGroupId;

        return $this;
    }




    /**
     * Gets bidInMicroCurrency.
     *
     * @return int|null
     */
    public function getBidInMicroCurrency(): ?int
    {
        return $this->bidInMicroCurrency;
    }

    /**
    * Sets bidInMicroCurrency.
    *
    * @param int|null $bidInMicroCurrency  The bid in micro currency.
    *
    * @return $this
    */
    public function setBidInMicroCurrency(?int $bidInMicroCurrency = null): self
    {
        $this->bidInMicroCurrency = $bidInMicroCurrency;

        return $this;
    }




    /**
     * Gets included.
     *
     * @return bool|null
     */
    public function isIncluded(): ?bool
    {
        return $this->included;
    }

    /**
    * Sets included.
    *
    * @param bool|null $included  True if the group is BIDDABLE, false if it should be EXCLUDED from serving ads.
    *
    * @return $this
    */
    public function setIncluded(?bool $included = null): self
    {
        $this->included = $included;

        return $this;
    }




    /**
     * Gets definition.
     *
     * @return string|null
     */
    public function getDefinition(): ?string
    {
        return $this->definition;
    }

    /**
    * Sets definition.
    *
    * @param string|null $definition  The full product group definition path
    *
    * @return $this
    */
    public function setDefinition(?string $definition = null): self
    {
        $this->definition = $definition;

        return $this;
    }




    /**
     * Gets relativeDefinition.
     *
     * @return string|null
     */
    public function getRelativeDefinition(): ?string
    {
        return $this->relativeDefinition;
    }

    /**
    * Sets relativeDefinition.
    *
    * @param string|null $relativeDefinition  The definition of the product group, relative to its parent - an attribute name/value pair
    *
    * @return $this
    */
    public function setRelativeDefinition(?string $relativeDefinition = null): self
    {
        $this->relativeDefinition = $relativeDefinition;

        return $this;
    }




    /**
     * Gets parentId.
     *
     * @return string|null
     */
    public function getParentId(): ?string
    {
        return $this->parentId;
    }

    /**
    * Sets parentId.
    *
    * @param string|null $parentId  The parent Product Group ID of this Product Group
    *
    * @return $this
    */
    public function setParentId(?string $parentId = null): self
    {
        $this->parentId = $parentId;

        return $this;
    }




    /**
     * Gets slideshowCollectionsTitle.
     *
     * @return string|null
     */
    public function getSlideshowCollectionsTitle(): ?string
    {
        return $this->slideshowCollectionsTitle;
    }

    /**
    * Sets slideshowCollectionsTitle.
    *
    * @param string|null $slideshowCollectionsTitle  Slideshow Collections Title
    *
    * @return $this
    */
    public function setSlideshowCollectionsTitle(?string $slideshowCollectionsTitle = null): self
    {
        $this->slideshowCollectionsTitle = $slideshowCollectionsTitle;

        return $this;
    }




    /**
     * Gets slideshowCollectionsDescription.
     *
     * @return string|null
     */
    public function getSlideshowCollectionsDescription(): ?string
    {
        return $this->slideshowCollectionsDescription;
    }

    /**
    * Sets slideshowCollectionsDescription.
    *
    * @param string|null $slideshowCollectionsDescription  Slideshow Collections Description
    *
    * @return $this
    */
    public function setSlideshowCollectionsDescription(?string $slideshowCollectionsDescription = null): self
    {
        $this->slideshowCollectionsDescription = $slideshowCollectionsDescription;

        return $this;
    }




    /**
     * Gets isMdl.
     *
     * @return bool|null
     */
    public function isIsMdl(): ?bool
    {
        return $this->isMdl;
    }

    /**
    * Sets isMdl.
    *
    * @param bool|null $isMdl  If set to true products promoted in this product group will use the Mobile Deep Link specified in your catalog
    *
    * @return $this
    */
    public function setIsMdl(?bool $isMdl = null): self
    {
        $this->isMdl = $isMdl;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return EntityStatus|null
     */
    public function getStatus(): ?EntityStatus
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param EntityStatus|null $status
    *
    * @return $this
    */
    public function setStatus(?EntityStatus $status = null): self
    {
        $this->status = $status;

        return $this;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return !is_null($this->status?->value) ? (string) $this->status->value : null;
    }

    /**
    * Sets status.
    *
    * @param string|EntityStatus|null $status
    *
    * @return $this
    */
    public function setDeserializedStatus(string|EntityStatus|null $status = null): self
    {
        if (is_string($status)) {
            $status = EntityStatus::tryFrom($status);
        }

        $this->status = $status;

        return $this;
    }



    /**
     * Gets trackingUrl.
     *
     * @return string|null
     */
    public function getTrackingUrl(): ?string
    {
        return $this->trackingUrl;
    }

    /**
    * Sets trackingUrl.
    *
    * @param string|null $trackingUrl  Tracking template for proudct group promotions. 4000 limit
    *
    * @return $this
    */
    public function setTrackingUrl(?string $trackingUrl = null): self
    {
        $this->trackingUrl = $trackingUrl;

        return $this;
    }




    /**
     * Gets catalogProductGroupId.
     *
     * @return string|null
     */
    public function getCatalogProductGroupId(): ?string
    {
        return $this->catalogProductGroupId;
    }

    /**
    * Sets catalogProductGroupId.
    *
    * @param string|null $catalogProductGroupId  ID of the catalogs product group that this product group promotion references
    *
    * @return $this
    */
    public function setCatalogProductGroupId(?string $catalogProductGroupId = null): self
    {
        $this->catalogProductGroupId = $catalogProductGroupId;

        return $this;
    }




    /**
     * Gets catalogProductGroupName.
     *
     * @return string|null
     */
    public function getCatalogProductGroupName(): ?string
    {
        return $this->catalogProductGroupName;
    }

    /**
    * Sets catalogProductGroupName.
    *
    * @param string|null $catalogProductGroupName  Catalogs product group name
    *
    * @return $this
    */
    public function setCatalogProductGroupName(?string $catalogProductGroupName = null): self
    {
        $this->catalogProductGroupName = $catalogProductGroupName;

        return $this;
    }




    /**
     * Gets collectionsHeroPinId.
     *
     * @return string|null
     */
    public function getCollectionsHeroPinId(): ?string
    {
        return $this->collectionsHeroPinId;
    }

    /**
    * Sets collectionsHeroPinId.
    *
    * @param string|null $collectionsHeroPinId  Hero Pin ID if this PG is promoted as a Collection
    *
    * @return $this
    */
    public function setCollectionsHeroPinId(?string $collectionsHeroPinId = null): self
    {
        $this->collectionsHeroPinId = $collectionsHeroPinId;

        return $this;
    }




    /**
     * Gets collectionsHeroDestinationUrl.
     *
     * @return string|null
     */
    public function getCollectionsHeroDestinationUrl(): ?string
    {
        return $this->collectionsHeroDestinationUrl;
    }

    /**
    * Sets collectionsHeroDestinationUrl.
    *
    * @param string|null $collectionsHeroDestinationUrl  Collections Hero Destination Url
    *
    * @return $this
    */
    public function setCollectionsHeroDestinationUrl(?string $collectionsHeroDestinationUrl = null): self
    {
        $this->collectionsHeroDestinationUrl = $collectionsHeroDestinationUrl;

        return $this;
    }




    /**
     * Gets gridClickType.
     *
     * @return GridClickType|null
     */
    public function getGridClickType(): ?GridClickType
    {
        return $this->gridClickType;
    }

    /**
    * Sets gridClickType.
    *
    * @param GridClickType|null $gridClickType
    *
    * @return $this
    */
    public function setGridClickType(?GridClickType $gridClickType = null): self
    {
        $this->gridClickType = $gridClickType;

        return $this;
    }

    /**
    * Gets gridClickType for serialization.
    *
    * @return string|null
    */
    public function getSerializedGridClickType(): string|null
    {
        return !is_null($this->gridClickType?->value) ? (string) $this->gridClickType->value : null;
    }

    /**
    * Sets gridClickType.
    *
    * @param string|GridClickType|null $gridClickType
    *
    * @return $this
    */
    public function setDeserializedGridClickType(string|GridClickType|null $gridClickType = null): self
    {
        if (is_string($gridClickType)) {
            $gridClickType = GridClickType::tryFrom($gridClickType);
        }

        $this->gridClickType = $gridClickType;

        return $this;
    }



    /**
     * Gets creativeType.
     *
     * @return CreativeType|null
     */
    public function getCreativeType(): ?CreativeType
    {
        return $this->creativeType;
    }

    /**
    * Sets creativeType.
    *
    * @param CreativeType|null $creativeType
    *
    * @return $this
    */
    public function setCreativeType(?CreativeType $creativeType = null): self
    {
        $this->creativeType = $creativeType;

        return $this;
    }

    /**
    * Gets creativeType for serialization.
    *
    * @return string|null
    */
    public function getSerializedCreativeType(): string|null
    {
        return !is_null($this->creativeType?->value) ? (string) $this->creativeType->value : null;
    }

    /**
    * Sets creativeType.
    *
    * @param string|CreativeType|null $creativeType
    *
    * @return $this
    */
    public function setDeserializedCreativeType(string|CreativeType|null $creativeType = null): self
    {
        if (is_string($creativeType)) {
            $creativeType = CreativeType::tryFrom($creativeType);
        }

        $this->creativeType = $creativeType;

        return $this;
    }


}


