<?php
/**
 * QuizPinQuestion
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the QuizPinQuestion model.
 *
 * A specific quiz inquiry.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class QuizPinQuestion 
{
        /**
     * @var float|null
     * @SerializedName("question_id")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $questionId = null;

    /**
     * @var string|null
     * @SerializedName("question_text")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $questionText = null;

    /**
     * @var QuizPinOption[]|null
     * @SerializedName("options")
     * @Type("array<OpenAPI\Server\Model\QuizPinOption>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\QuizPinOption"),
    ])]
    protected ?array $options = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->questionId = array_key_exists('questionId', $data) ? $data['questionId'] : $this->questionId;
            $this->questionText = array_key_exists('questionText', $data) ? $data['questionText'] : $this->questionText;
            $this->options = array_key_exists('options', $data) ? $data['options'] : $this->options;
        }
    }

    /**
     * Gets questionId.
     *
     * @return float|null
     */
    public function getQuestionId(): ?float
    {
        return $this->questionId;
    }

    /**
    * Sets questionId.
    *
    * @param float|null $questionId
    *
    * @return $this
    */
    public function setQuestionId(?float $questionId = null): self
    {
        $this->questionId = $questionId;

        return $this;
    }




    /**
     * Gets questionText.
     *
     * @return string|null
     */
    public function getQuestionText(): ?string
    {
        return $this->questionText;
    }

    /**
    * Sets questionText.
    *
    * @param string|null $questionText
    *
    * @return $this
    */
    public function setQuestionText(?string $questionText = null): self
    {
        $this->questionText = $questionText;

        return $this;
    }




    /**
     * Gets options.
     *
     * @return QuizPinOption[]|null
     */
    public function getOptions(): ?array
    {
        return $this->options;
    }

    /**
    * Sets options.
    *
    * @param QuizPinOption[]|null $options
    *
    * @return $this
    */
    public function setOptions(?array $options = null): self
    {
        $this->options = $options;

        return $this;
    }



}


