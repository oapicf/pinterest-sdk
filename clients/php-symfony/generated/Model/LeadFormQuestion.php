<?php
/**
 * LeadFormQuestion
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the LeadFormQuestion model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class LeadFormQuestion 
{
        /**
     * @var LeadFormQuestionType|null
     * @SerializedName("question_type")
    * @Accessor(getter="getSerializedQuestionType", setter="setDeserializedQuestionType")
    * @Type("string")
    */
    protected ?LeadFormQuestionType $questionType = null;

    /**
     * @var LeadFormQuestionFieldType|null
     * @SerializedName("custom_question_field_type")
    * @Accessor(getter="getSerializedCustomQuestionFieldType", setter="setDeserializedCustomQuestionFieldType")
    * @Type("string")
    */
    protected ?LeadFormQuestionFieldType $customQuestionFieldType = null;

    /**
     * Question label for a custom question.
     *
     * @var string|null
     * @SerializedName("custom_question_label")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $customQuestionLabel = null;

    /**
     * Question options for a custom question.
     *
     * @var string[]|null
     * @SerializedName("custom_question_options")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    #[Assert\Count(max: 5)]
    #[Assert\Count(min: 0)]
    protected ?array $customQuestionOptions = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->questionType = array_key_exists('questionType', $data) ? $data['questionType'] : $this->questionType;
            $this->customQuestionFieldType = array_key_exists('customQuestionFieldType', $data) ? $data['customQuestionFieldType'] : $this->customQuestionFieldType;
            $this->customQuestionLabel = array_key_exists('customQuestionLabel', $data) ? $data['customQuestionLabel'] : $this->customQuestionLabel;
            $this->customQuestionOptions = array_key_exists('customQuestionOptions', $data) ? $data['customQuestionOptions'] : $this->customQuestionOptions;
        }
    }

    /**
     * Gets questionType.
     *
     * @return LeadFormQuestionType|null
     */
    public function getQuestionType(): ?LeadFormQuestionType
    {
        return $this->questionType;
    }

    /**
    * Sets questionType.
    *
    * @param LeadFormQuestionType|null $questionType
    *
    * @return $this
    */
    public function setQuestionType(?LeadFormQuestionType $questionType = null): self
    {
        $this->questionType = $questionType;

        return $this;
    }

    /**
    * Gets questionType for serialization.
    *
    * @return string|null
    */
    public function getSerializedQuestionType(): string|null
    {
        return !is_null($this->questionType?->value) ? (string) $this->questionType->value : null;
    }

    /**
    * Sets questionType.
    *
    * @param string|LeadFormQuestionType|null $questionType
    *
    * @return $this
    */
    public function setDeserializedQuestionType(string|LeadFormQuestionType|null $questionType = null): self
    {
        if (is_string($questionType)) {
            $questionType = LeadFormQuestionType::tryFrom($questionType);
        }

        $this->questionType = $questionType;

        return $this;
    }



    /**
     * Gets customQuestionFieldType.
     *
     * @return LeadFormQuestionFieldType|null
     */
    public function getCustomQuestionFieldType(): ?LeadFormQuestionFieldType
    {
        return $this->customQuestionFieldType;
    }

    /**
    * Sets customQuestionFieldType.
    *
    * @param LeadFormQuestionFieldType|null $customQuestionFieldType
    *
    * @return $this
    */
    public function setCustomQuestionFieldType(?LeadFormQuestionFieldType $customQuestionFieldType = null): self
    {
        $this->customQuestionFieldType = $customQuestionFieldType;

        return $this;
    }

    /**
    * Gets customQuestionFieldType for serialization.
    *
    * @return string|null
    */
    public function getSerializedCustomQuestionFieldType(): string|null
    {
        return !is_null($this->customQuestionFieldType?->value) ? (string) $this->customQuestionFieldType->value : null;
    }

    /**
    * Sets customQuestionFieldType.
    *
    * @param string|LeadFormQuestionFieldType|null $customQuestionFieldType
    *
    * @return $this
    */
    public function setDeserializedCustomQuestionFieldType(string|LeadFormQuestionFieldType|null $customQuestionFieldType = null): self
    {
        if (is_string($customQuestionFieldType)) {
            $customQuestionFieldType = LeadFormQuestionFieldType::tryFrom($customQuestionFieldType);
        }

        $this->customQuestionFieldType = $customQuestionFieldType;

        return $this;
    }



    /**
     * Gets customQuestionLabel.
     *
     * @return string|null
     */
    public function getCustomQuestionLabel(): ?string
    {
        return $this->customQuestionLabel;
    }

    /**
    * Sets customQuestionLabel.
    *
    * @param string|null $customQuestionLabel  Question label for a custom question.
    *
    * @return $this
    */
    public function setCustomQuestionLabel(?string $customQuestionLabel = null): self
    {
        $this->customQuestionLabel = $customQuestionLabel;

        return $this;
    }




    /**
     * Gets customQuestionOptions.
     *
     * @return string[]|null
     */
    public function getCustomQuestionOptions(): ?array
    {
        return $this->customQuestionOptions;
    }

    /**
    * Sets customQuestionOptions.
    *
    * @param string[]|null $customQuestionOptions  Question options for a custom question.
    *
    * @return $this
    */
    public function setCustomQuestionOptions(?array $customQuestionOptions = null): self
    {
        $this->customQuestionOptions = $customQuestionOptions;

        return $this;
    }



}


