<?php
/**
 * ConversionEventResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ConversionEventResponse model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ConversionEventResponse 
{
        /**
     * @var ConversionTagType|null
     * @SerializedName("conversion_event")
    * @Accessor(getter="getSerializedConversionEvent", setter="setDeserializedConversionEvent")
    * @Type("string")
    */
    protected ?ConversionTagType $conversionEvent = null;

    /**
     * Id of the tag.
     *
     * @var string|null
     * @SerializedName("conversion_tag_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $conversionTagId = null;

    /**
     * Id of the ad account.
     *
     * @var string|null
     * @SerializedName("ad_account_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $adAccountId = null;

    /**
     * Creation date in epoch format.
     *
     * @var int|null
     * @SerializedName("created_time")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $createdTime = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->conversionEvent = array_key_exists('conversionEvent', $data) ? $data['conversionEvent'] : $this->conversionEvent;
            $this->conversionTagId = array_key_exists('conversionTagId', $data) ? $data['conversionTagId'] : $this->conversionTagId;
            $this->adAccountId = array_key_exists('adAccountId', $data) ? $data['adAccountId'] : $this->adAccountId;
            $this->createdTime = array_key_exists('createdTime', $data) ? $data['createdTime'] : $this->createdTime;
        }
    }

    /**
     * Gets conversionEvent.
     *
     * @return ConversionTagType|null
     */
    public function getConversionEvent(): ?ConversionTagType
    {
        return $this->conversionEvent;
    }

    /**
    * Sets conversionEvent.
    *
    * @param ConversionTagType|null $conversionEvent
    *
    * @return $this
    */
    public function setConversionEvent(?ConversionTagType $conversionEvent = null): self
    {
        $this->conversionEvent = $conversionEvent;

        return $this;
    }

    /**
    * Gets conversionEvent for serialization.
    *
    * @return string|null
    */
    public function getSerializedConversionEvent(): string|null
    {
        return !is_null($this->conversionEvent?->value) ? (string) $this->conversionEvent->value : null;
    }

    /**
    * Sets conversionEvent.
    *
    * @param string|ConversionTagType|null $conversionEvent
    *
    * @return $this
    */
    public function setDeserializedConversionEvent(string|ConversionTagType|null $conversionEvent = null): self
    {
        if (is_string($conversionEvent)) {
            $conversionEvent = ConversionTagType::tryFrom($conversionEvent);
        }

        $this->conversionEvent = $conversionEvent;

        return $this;
    }



    /**
     * Gets conversionTagId.
     *
     * @return string|null
     */
    public function getConversionTagId(): ?string
    {
        return $this->conversionTagId;
    }

    /**
    * Sets conversionTagId.
    *
    * @param string|null $conversionTagId  Id of the tag.
    *
    * @return $this
    */
    public function setConversionTagId(?string $conversionTagId = null): self
    {
        $this->conversionTagId = $conversionTagId;

        return $this;
    }




    /**
     * Gets adAccountId.
     *
     * @return string|null
     */
    public function getAdAccountId(): ?string
    {
        return $this->adAccountId;
    }

    /**
    * Sets adAccountId.
    *
    * @param string|null $adAccountId  Id of the ad account.
    *
    * @return $this
    */
    public function setAdAccountId(?string $adAccountId = null): self
    {
        $this->adAccountId = $adAccountId;

        return $this;
    }




    /**
     * Gets createdTime.
     *
     * @return int|null
     */
    public function getCreatedTime(): ?int
    {
        return $this->createdTime;
    }

    /**
    * Sets createdTime.
    *
    * @param int|null $createdTime  Creation date in epoch format.
    *
    * @return $this
    */
    public function setCreatedTime(?int $createdTime = null): self
    {
        $this->createdTime = $createdTime;

        return $this;
    }



}


