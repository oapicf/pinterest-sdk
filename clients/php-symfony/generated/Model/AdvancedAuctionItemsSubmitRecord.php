<?php
/**
 * AdvancedAuctionItemsSubmitRecord
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the AdvancedAuctionItemsSubmitRecord model.
 *
 * Object describing an item bid option operation
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class AdvancedAuctionItemsSubmitRecord 
{
        /**
     * @var AdvancedAuctionOperation|null
     * @SerializedName("operation")
    * @Accessor(getter="getSerializedOperation", setter="setDeserializedOperation")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?AdvancedAuctionOperation $operation = null;

    /**
     * The catalog retail item id in the merchant namespace
     *
     * @var string|null
     * @SerializedName("item_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $itemId = null;

    /**
     * @var Country|null
     * @SerializedName("country")
    * @Accessor(getter="getSerializedCountry", setter="setDeserializedCountry")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?Country $country = null;

    /**
     * @var Language|null
     * @SerializedName("language")
    * @Accessor(getter="getSerializedLanguage", setter="setDeserializedLanguage")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?Language $language = null;

    /**
     * @var AdvancedAuctionBidOptions|null
     * @SerializedName("bid_options")
     * @Type("OpenAPI\Server\Model\AdvancedAuctionBidOptions")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\AdvancedAuctionBidOptions")]
    protected ?AdvancedAuctionBidOptions $bidOptions = null;

    /**
     * The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the &#x60;bid_options&#x60; object in the body will be set to &#x60;null&#x60;. If an item bid option record is being created, fields not specified in the update mask will be initialized to &#x60;null&#x60;.
     *
     * @var UpdateMaskBidOptionField[]|null
     * @SerializedName("update_mask")
     * @Accessor(getter="getSerializedUpdateMask", setter="setDeserializedUpdateMask")
     * @Type("array<string>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\UpdateMaskBidOptionField"),
    ])]
    protected ?array $updateMask = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->operation = array_key_exists('operation', $data) ? $data['operation'] : $this->operation;
            $this->itemId = array_key_exists('itemId', $data) ? $data['itemId'] : $this->itemId;
            $this->country = array_key_exists('country', $data) ? $data['country'] : $this->country;
            $this->language = array_key_exists('language', $data) ? $data['language'] : $this->language;
            $this->bidOptions = array_key_exists('bidOptions', $data) ? $data['bidOptions'] : $this->bidOptions;
            $this->updateMask = array_key_exists('updateMask', $data) ? $data['updateMask'] : $this->updateMask;
        }
    }

    /**
     * Gets operation.
     *
     * @return AdvancedAuctionOperation|null
     */
    public function getOperation(): ?AdvancedAuctionOperation
    {
        return $this->operation;
    }

    /**
    * Sets operation.
    *
    * @param AdvancedAuctionOperation|null $operation
    *
    * @return $this
    */
    public function setOperation(?AdvancedAuctionOperation $operation): self
    {
        $this->operation = $operation;

        return $this;
    }

    /**
    * Gets operation for serialization.
    *
    * @return string|null
    */
    public function getSerializedOperation(): string|null
    {
        return !is_null($this->operation?->value) ? (string) $this->operation->value : null;
    }

    /**
    * Sets operation.
    *
    * @param string|AdvancedAuctionOperation|null $operation
    *
    * @return $this
    */
    public function setDeserializedOperation(string|AdvancedAuctionOperation|null $operation): self
    {
        if (is_string($operation)) {
            $operation = AdvancedAuctionOperation::tryFrom($operation);
        }

        $this->operation = $operation;

        return $this;
    }



    /**
     * Gets itemId.
     *
     * @return string|null
     */
    public function getItemId(): ?string
    {
        return $this->itemId;
    }

    /**
    * Sets itemId.
    *
    * @param string|null $itemId  The catalog retail item id in the merchant namespace
    *
    * @return $this
    */
    public function setItemId(?string $itemId): self
    {
        $this->itemId = $itemId;

        return $this;
    }




    /**
     * Gets country.
     *
     * @return Country|null
     */
    public function getCountry(): ?Country
    {
        return $this->country;
    }

    /**
    * Sets country.
    *
    * @param Country|null $country
    *
    * @return $this
    */
    public function setCountry(?Country $country): self
    {
        $this->country = $country;

        return $this;
    }

    /**
    * Gets country for serialization.
    *
    * @return string|null
    */
    public function getSerializedCountry(): string|null
    {
        return !is_null($this->country?->value) ? (string) $this->country->value : null;
    }

    /**
    * Sets country.
    *
    * @param string|Country|null $country
    *
    * @return $this
    */
    public function setDeserializedCountry(string|Country|null $country): self
    {
        if (is_string($country)) {
            $country = Country::tryFrom($country);
        }

        $this->country = $country;

        return $this;
    }



    /**
     * Gets language.
     *
     * @return Language|null
     */
    public function getLanguage(): ?Language
    {
        return $this->language;
    }

    /**
    * Sets language.
    *
    * @param Language|null $language
    *
    * @return $this
    */
    public function setLanguage(?Language $language): self
    {
        $this->language = $language;

        return $this;
    }

    /**
    * Gets language for serialization.
    *
    * @return string|null
    */
    public function getSerializedLanguage(): string|null
    {
        return !is_null($this->language?->value) ? (string) $this->language->value : null;
    }

    /**
    * Sets language.
    *
    * @param string|Language|null $language
    *
    * @return $this
    */
    public function setDeserializedLanguage(string|Language|null $language): self
    {
        if (is_string($language)) {
            $language = Language::tryFrom($language);
        }

        $this->language = $language;

        return $this;
    }



    /**
     * Gets bidOptions.
     *
     * @return AdvancedAuctionBidOptions|null
     */
    public function getBidOptions(): ?AdvancedAuctionBidOptions
    {
        return $this->bidOptions;
    }

    /**
    * Sets bidOptions.
    *
    * @param AdvancedAuctionBidOptions|null $bidOptions
    *
    * @return $this
    */
    public function setBidOptions(?AdvancedAuctionBidOptions $bidOptions): self
    {
        $this->bidOptions = $bidOptions;

        return $this;
    }




    /**
     * Gets updateMask.
     *
     * @return UpdateMaskBidOptionField[]|null
     */
    public function getUpdateMask(): ?array
    {
        return $this->updateMask;
    }

    /**
    * Sets updateMask.
    *
    * @param UpdateMaskBidOptionField[]|null $updateMask  The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
    *
    * @return $this
    */
    public function setUpdateMask(?array $updateMask): self
    {
        $this->updateMask = $updateMask;

        return $this;
    }


    /**
    * Gets updateMask for serialization.
    *
    * @return array
    */
    public function getSerializedUpdateMask(): array
    {
        return array_map(
            static fn ($value) => $value?->value ? (string) $value->value : null,
            $this->updateMask ?? []
        );
    }

    /**
    * Sets updateMask.
    *
    * @param ?array $updateMask
    *
    * @return $this
    */
    public function setDeserializedUpdateMask(?array $updateMask = []): self
    {
        $this->updateMask = array_map(
            static function ($value) {
                if (is_string($value)) {
                    $value = UpdateMaskBidOptionField::tryFrom($value);
                }

                return $value;
            },
            $updateMask ?? []
        );

        return $this;
    }

}


