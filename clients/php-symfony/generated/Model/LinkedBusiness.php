<?php
/**
 * LinkedBusiness
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the LinkedBusiness model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class LinkedBusiness 
{
        /**
     * Username
     *
     * @var string|null
     * @SerializedName("username")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $username = null;

    /**
     * image_small_url
     *
     * @var string|null
     * @SerializedName("image_small_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $imageSmallUrl = null;

    /**
     * image_medium_url
     *
     * @var string|null
     * @SerializedName("image_medium_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $imageMediumUrl = null;

    /**
     * image_large_url
     *
     * @var string|null
     * @SerializedName("image_large_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $imageLargeUrl = null;

    /**
     * image_xlarge_url
     *
     * @var string|null
     * @SerializedName("image_xlarge_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $imageXlargeUrl = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->username = array_key_exists('username', $data) ? $data['username'] : $this->username;
            $this->imageSmallUrl = array_key_exists('imageSmallUrl', $data) ? $data['imageSmallUrl'] : $this->imageSmallUrl;
            $this->imageMediumUrl = array_key_exists('imageMediumUrl', $data) ? $data['imageMediumUrl'] : $this->imageMediumUrl;
            $this->imageLargeUrl = array_key_exists('imageLargeUrl', $data) ? $data['imageLargeUrl'] : $this->imageLargeUrl;
            $this->imageXlargeUrl = array_key_exists('imageXlargeUrl', $data) ? $data['imageXlargeUrl'] : $this->imageXlargeUrl;
        }
    }

    /**
     * Gets username.
     *
     * @return string|null
     */
    public function getUsername(): ?string
    {
        return $this->username;
    }

    /**
    * Sets username.
    *
    * @param string|null $username  Username
    *
    * @return $this
    */
    public function setUsername(?string $username = null): self
    {
        $this->username = $username;

        return $this;
    }




    /**
     * Gets imageSmallUrl.
     *
     * @return string|null
     */
    public function getImageSmallUrl(): ?string
    {
        return $this->imageSmallUrl;
    }

    /**
    * Sets imageSmallUrl.
    *
    * @param string|null $imageSmallUrl  image_small_url
    *
    * @return $this
    */
    public function setImageSmallUrl(?string $imageSmallUrl = null): self
    {
        $this->imageSmallUrl = $imageSmallUrl;

        return $this;
    }




    /**
     * Gets imageMediumUrl.
     *
     * @return string|null
     */
    public function getImageMediumUrl(): ?string
    {
        return $this->imageMediumUrl;
    }

    /**
    * Sets imageMediumUrl.
    *
    * @param string|null $imageMediumUrl  image_medium_url
    *
    * @return $this
    */
    public function setImageMediumUrl(?string $imageMediumUrl = null): self
    {
        $this->imageMediumUrl = $imageMediumUrl;

        return $this;
    }




    /**
     * Gets imageLargeUrl.
     *
     * @return string|null
     */
    public function getImageLargeUrl(): ?string
    {
        return $this->imageLargeUrl;
    }

    /**
    * Sets imageLargeUrl.
    *
    * @param string|null $imageLargeUrl  image_large_url
    *
    * @return $this
    */
    public function setImageLargeUrl(?string $imageLargeUrl = null): self
    {
        $this->imageLargeUrl = $imageLargeUrl;

        return $this;
    }




    /**
     * Gets imageXlargeUrl.
     *
     * @return string|null
     */
    public function getImageXlargeUrl(): ?string
    {
        return $this->imageXlargeUrl;
    }

    /**
    * Sets imageXlargeUrl.
    *
    * @param string|null $imageXlargeUrl  image_xlarge_url
    *
    * @return $this
    */
    public function setImageXlargeUrl(?string $imageXlargeUrl = null): self
    {
        $this->imageXlargeUrl = $imageXlargeUrl;

        return $this;
    }



}


