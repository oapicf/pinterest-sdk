<?php
/**
 * PinMediaSourceImagesBase64ItemsInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PinMediaSourceImagesBase64ItemsInner model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PinMediaSourceImagesBase64ItemsInner 
{
        /**
     * @var string|null
     * @SerializedName("title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $title = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * Destination link for the image.
     *
     * @var string|null
     * @SerializedName("link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $link = null;

    /**
     * @var string|null
     * @SerializedName("content_type")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["image/jpeg", "image/png"])]
    #[Assert\Type("string")]
    protected ?string $contentType = null;

    /**
     * Image to upload as base64 string.
     *
     * @var string|null
     * @SerializedName("data")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Regex("/[a-zA-Z0-9+/&#x3D;]+/")]
    protected ?string $data = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->link = array_key_exists('link', $data) ? $data['link'] : $this->link;
            $this->contentType = array_key_exists('contentType', $data) ? $data['contentType'] : $this->contentType;
            $this->data = array_key_exists('data', $data) ? $data['data'] : $this->data;
        }
    }

    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
    * Sets title.
    *
    * @param string|null $title
    *
    * @return $this
    */
    public function setTitle(?string $title = null): self
    {
        $this->title = $title;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets link.
     *
     * @return string|null
     */
    public function getLink(): ?string
    {
        return $this->link;
    }

    /**
    * Sets link.
    *
    * @param string|null $link  Destination link for the image.
    *
    * @return $this
    */
    public function setLink(?string $link = null): self
    {
        $this->link = $link;

        return $this;
    }




    /**
     * Gets contentType.
     *
     * @return string|null
     */
    public function getContentType(): ?string
    {
        return $this->contentType;
    }

    /**
    * Sets contentType.
    *
    * @param string|null $contentType
    *
    * @return $this
    */
    public function setContentType(?string $contentType): self
    {
        $this->contentType = $contentType;

        return $this;
    }




    /**
     * Gets data.
     *
     * @return string|null
     */
    public function getData(): ?string
    {
        return $this->data;
    }

    /**
    * Sets data.
    *
    * @param string|null $data  Image to upload as base64 string.
    *
    * @return $this
    */
    public function setData(?string $data): self
    {
        $this->data = $data;

        return $this;
    }



}


