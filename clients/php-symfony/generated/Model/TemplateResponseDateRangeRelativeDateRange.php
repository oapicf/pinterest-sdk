<?php
/**
 * TemplateResponseDateRangeRelativeDateRange
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the TemplateResponseDateRangeRelativeDateRange model.
 *
 * The relative date range of the template
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class TemplateResponseDateRangeRelativeDateRange 
{
        /**
     * The date range type
     *
     * @var string|null
     * @SerializedName("type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $type = null;

    /**
     * The start date of the date range
     *
     * @var float|null
     * @SerializedName("start_days_in_past")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $startDaysInPast = null;

    /**
     * The end date of the date range
     *
     * @var float|null
     * @SerializedName("end_days_in_past")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $endDaysInPast = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->startDaysInPast = array_key_exists('startDaysInPast', $data) ? $data['startDaysInPast'] : $this->startDaysInPast;
            $this->endDaysInPast = array_key_exists('endDaysInPast', $data) ? $data['endDaysInPast'] : $this->endDaysInPast;
        }
    }

    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param string|null $type  The date range type
    *
    * @return $this
    */
    public function setType(?string $type = null): self
    {
        $this->type = $type;

        return $this;
    }




    /**
     * Gets startDaysInPast.
     *
     * @return float|null
     */
    public function getStartDaysInPast(): ?float
    {
        return $this->startDaysInPast;
    }

    /**
    * Sets startDaysInPast.
    *
    * @param float|null $startDaysInPast  The start date of the date range
    *
    * @return $this
    */
    public function setStartDaysInPast(?float $startDaysInPast = null): self
    {
        $this->startDaysInPast = $startDaysInPast;

        return $this;
    }




    /**
     * Gets endDaysInPast.
     *
     * @return float|null
     */
    public function getEndDaysInPast(): ?float
    {
        return $this->endDaysInPast;
    }

    /**
    * Sets endDaysInPast.
    *
    * @param float|null $endDaysInPast  The end date of the date range
    *
    * @return $this
    */
    public function setEndDaysInPast(?float $endDaysInPast = null): self
    {
        $this->endDaysInPast = $endDaysInPast;

        return $this;
    }



}


