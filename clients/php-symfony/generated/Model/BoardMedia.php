<?php
/**
 * BoardMedia
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BoardMedia model.
 *
 * Board media.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BoardMedia 
{
        /**
     * Board cover image.
     *
     * @var string|null
     * @SerializedName("image_cover_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $imageCoverUrl = null;

    /**
     * Board pin thumbnail urls.
     *
     * @var string[]|null
     * @SerializedName("pin_thumbnail_urls")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $pinThumbnailUrls = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->imageCoverUrl = array_key_exists('imageCoverUrl', $data) ? $data['imageCoverUrl'] : $this->imageCoverUrl;
            $this->pinThumbnailUrls = array_key_exists('pinThumbnailUrls', $data) ? $data['pinThumbnailUrls'] : $this->pinThumbnailUrls;
        }
    }

    /**
     * Gets imageCoverUrl.
     *
     * @return string|null
     */
    public function getImageCoverUrl(): ?string
    {
        return $this->imageCoverUrl;
    }

    /**
    * Sets imageCoverUrl.
    *
    * @param string|null $imageCoverUrl  Board cover image.
    *
    * @return $this
    */
    public function setImageCoverUrl(?string $imageCoverUrl = null): self
    {
        $this->imageCoverUrl = $imageCoverUrl;

        return $this;
    }




    /**
     * Gets pinThumbnailUrls.
     *
     * @return string[]|null
     */
    public function getPinThumbnailUrls(): ?array
    {
        return $this->pinThumbnailUrls;
    }

    /**
    * Sets pinThumbnailUrls.
    *
    * @param string[]|null $pinThumbnailUrls  Board pin thumbnail urls.
    *
    * @return $this
    */
    public function setPinThumbnailUrls(?array $pinThumbnailUrls = null): self
    {
        $this->pinThumbnailUrls = $pinThumbnailUrls;

        return $this;
    }



}


