<?php
/**
 * ConversionEventsUserDataAnyOf1
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ConversionEventsUserDataAnyOf1 model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ConversionEventsUserDataAnyOf1 
{
        /**
     * Sha256 hashes of lowercase version of user&#39;s email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
     *
     * @var string[]|null
     * @SerializedName("em")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $em = null;

    /**
     * Sha256 hashes of user&#39;s \&quot;Google Advertising IDs\&quot; (GAIDs) or \&quot;Apple&#39;s Identifier for Advertisers\&quot; (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
     *
     * @var string[]|null
     * @SerializedName("hashed_maids")
     * @Type("array<string>")
    */
    #[Assert\NotNull]
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $hashedMaids = null;

    /**
     * The user&#39;s IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
     *
     * @var string|null
     * @SerializedName("client_ip_address")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $clientIpAddress = null;

    /**
     * The user agent string of the user&#39;s web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
     *
     * @var string|null
     * @SerializedName("client_user_agent")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $clientUserAgent = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->em = array_key_exists('em', $data) ? $data['em'] : $this->em;
            $this->hashedMaids = array_key_exists('hashedMaids', $data) ? $data['hashedMaids'] : $this->hashedMaids;
            $this->clientIpAddress = array_key_exists('clientIpAddress', $data) ? $data['clientIpAddress'] : $this->clientIpAddress;
            $this->clientUserAgent = array_key_exists('clientUserAgent', $data) ? $data['clientUserAgent'] : $this->clientUserAgent;
        }
    }

    /**
     * Gets em.
     *
     * @return string[]|null
     */
    public function getEm(): ?array
    {
        return $this->em;
    }

    /**
    * Sets em.
    *
    * @param string[]|null $em  Sha256 hashes of lowercase version of user's email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
    *
    * @return $this
    */
    public function setEm(?array $em = null): self
    {
        $this->em = $em;

        return $this;
    }




    /**
     * Gets hashedMaids.
     *
     * @return string[]|null
     */
    public function getHashedMaids(): ?array
    {
        return $this->hashedMaids;
    }

    /**
    * Sets hashedMaids.
    *
    * @param string[]|null $hashedMaids  Sha256 hashes of user's \"Google Advertising IDs\" (GAIDs) or \"Apple's Identifier for Advertisers\" (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
    *
    * @return $this
    */
    public function setHashedMaids(?array $hashedMaids): self
    {
        $this->hashedMaids = $hashedMaids;

        return $this;
    }




    /**
     * Gets clientIpAddress.
     *
     * @return string|null
     */
    public function getClientIpAddress(): ?string
    {
        return $this->clientIpAddress;
    }

    /**
    * Sets clientIpAddress.
    *
    * @param string|null $clientIpAddress  The user's IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
    *
    * @return $this
    */
    public function setClientIpAddress(?string $clientIpAddress = null): self
    {
        $this->clientIpAddress = $clientIpAddress;

        return $this;
    }




    /**
     * Gets clientUserAgent.
     *
     * @return string|null
     */
    public function getClientUserAgent(): ?string
    {
        return $this->clientUserAgent;
    }

    /**
    * Sets clientUserAgent.
    *
    * @param string|null $clientUserAgent  The user agent string of the user's web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
    *
    * @return $this
    */
    public function setClientUserAgent(?string $clientUserAgent = null): self
    {
        $this->clientUserAgent = $clientUserAgent;

        return $this;
    }



}


