<?php
/**
 * AdsCreditRedeemRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the AdsCreditRedeemRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class AdsCreditRedeemRequest 
{
        /**
     * Takes in a SHA256 hash of the offerCode.
     *
     * @var string|null
     * @SerializedName("offerCodeHash")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Regex("/^[a-z0-9]*$/")]
    protected ?string $offerCodeHash = null;

    /**
     * If true, only validate if we can redeem offer code. Otherwise it will actually apply the offer code to the account
     *
     * @var bool|null
     * @SerializedName("validateOnly")
     * @Type("bool")
    */
    #[Assert\NotNull]
    #[Assert\Type("bool")]
    protected ?bool $validateOnly = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->offerCodeHash = array_key_exists('offerCodeHash', $data) ? $data['offerCodeHash'] : $this->offerCodeHash;
            $this->validateOnly = array_key_exists('validateOnly', $data) ? $data['validateOnly'] : $this->validateOnly;
        }
    }

    /**
     * Gets offerCodeHash.
     *
     * @return string|null
     */
    public function getOfferCodeHash(): ?string
    {
        return $this->offerCodeHash;
    }

    /**
    * Sets offerCodeHash.
    *
    * @param string|null $offerCodeHash  Takes in a SHA256 hash of the offerCode.
    *
    * @return $this
    */
    public function setOfferCodeHash(?string $offerCodeHash): self
    {
        $this->offerCodeHash = $offerCodeHash;

        return $this;
    }




    /**
     * Gets validateOnly.
     *
     * @return bool|null
     */
    public function isValidateOnly(): ?bool
    {
        return $this->validateOnly;
    }

    /**
    * Sets validateOnly.
    *
    * @param bool|null $validateOnly  If true, only validate if we can redeem offer code. Otherwise it will actually apply the offer code to the account
    *
    * @return $this
    */
    public function setValidateOnly(?bool $validateOnly): self
    {
        $this->validateOnly = $validateOnly;

        return $this;
    }



}


