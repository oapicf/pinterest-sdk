<?php
/**
 * Board
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Board model.
 *
 * Board
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Board 
{
        /**
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * Date and time of board creation.
     *
     * @var \DateTime|null
     * @SerializedName("created_at")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $createdAt = null;

    /**
     * Date and time of last board pins modified.
     *
     * @var \DateTime|null
     * @SerializedName("board_pins_modified_at")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $boardPinsModifiedAt = null;

    /**
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * Count of collaborators on the board.
     *
     * @var int|null
     * @SerializedName("collaborator_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(0)]
    protected ?int $collaboratorCount = null;

    /**
     * Count of pins on the board.
     *
     * @var int|null
     * @SerializedName("pin_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(0)]
    protected ?int $pinCount = null;

    /**
     * Board follower count.
     *
     * @var int|null
     * @SerializedName("follower_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(0)]
    protected ?int $followerCount = null;

    /**
     * @var BoardMedia|null
     * @SerializedName("media")
     * @Type("OpenAPI\Server\Model\BoardMedia")
    */
    #[Assert\Type("OpenAPI\Server\Model\BoardMedia")]
    protected ?BoardMedia $media = null;

    /**
     * @var BoardOwner|null
     * @SerializedName("owner")
     * @Type("OpenAPI\Server\Model\BoardOwner")
    */
    #[Assert\Type("OpenAPI\Server\Model\BoardOwner")]
    protected ?BoardOwner $owner = null;

    /**
     * Privacy setting for a board. Learn more about &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/secret-boards\&quot;&gt;secret boards&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/protected-boards\&quot;&gt;protected boards&lt;/a&gt;
     *
     * @var string|null
     * @SerializedName("privacy")
     * @Type("string")
    */
    #[Assert\Choice(["PUBLIC", "PROTECTED", "SECRET"])]
    #[Assert\Type("string")]
    protected ?string $privacy = 'PUBLIC';

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->createdAt = array_key_exists('createdAt', $data) ? $data['createdAt'] : $this->createdAt;
            $this->boardPinsModifiedAt = array_key_exists('boardPinsModifiedAt', $data) ? $data['boardPinsModifiedAt'] : $this->boardPinsModifiedAt;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->collaboratorCount = array_key_exists('collaboratorCount', $data) ? $data['collaboratorCount'] : $this->collaboratorCount;
            $this->pinCount = array_key_exists('pinCount', $data) ? $data['pinCount'] : $this->pinCount;
            $this->followerCount = array_key_exists('followerCount', $data) ? $data['followerCount'] : $this->followerCount;
            $this->media = array_key_exists('media', $data) ? $data['media'] : $this->media;
            $this->owner = array_key_exists('owner', $data) ? $data['owner'] : $this->owner;
            $this->privacy = array_key_exists('privacy', $data) ? $data['privacy'] : $this->privacy;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets createdAt.
     *
     * @return \DateTime|null
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
    * Sets createdAt.
    *
    * @param \DateTime|null $createdAt  Date and time of board creation.
    *
    * @return $this
    */
    public function setCreatedAt(?\DateTime $createdAt = null): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }




    /**
     * Gets boardPinsModifiedAt.
     *
     * @return \DateTime|null
     */
    public function getBoardPinsModifiedAt(): ?\DateTime
    {
        return $this->boardPinsModifiedAt;
    }

    /**
    * Sets boardPinsModifiedAt.
    *
    * @param \DateTime|null $boardPinsModifiedAt  Date and time of last board pins modified.
    *
    * @return $this
    */
    public function setBoardPinsModifiedAt(?\DateTime $boardPinsModifiedAt = null): self
    {
        $this->boardPinsModifiedAt = $boardPinsModifiedAt;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name
    *
    * @return $this
    */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets collaboratorCount.
     *
     * @return int|null
     */
    public function getCollaboratorCount(): ?int
    {
        return $this->collaboratorCount;
    }

    /**
    * Sets collaboratorCount.
    *
    * @param int|null $collaboratorCount  Count of collaborators on the board.
    *
    * @return $this
    */
    public function setCollaboratorCount(?int $collaboratorCount = null): self
    {
        $this->collaboratorCount = $collaboratorCount;

        return $this;
    }




    /**
     * Gets pinCount.
     *
     * @return int|null
     */
    public function getPinCount(): ?int
    {
        return $this->pinCount;
    }

    /**
    * Sets pinCount.
    *
    * @param int|null $pinCount  Count of pins on the board.
    *
    * @return $this
    */
    public function setPinCount(?int $pinCount = null): self
    {
        $this->pinCount = $pinCount;

        return $this;
    }




    /**
     * Gets followerCount.
     *
     * @return int|null
     */
    public function getFollowerCount(): ?int
    {
        return $this->followerCount;
    }

    /**
    * Sets followerCount.
    *
    * @param int|null $followerCount  Board follower count.
    *
    * @return $this
    */
    public function setFollowerCount(?int $followerCount = null): self
    {
        $this->followerCount = $followerCount;

        return $this;
    }




    /**
     * Gets media.
     *
     * @return BoardMedia|null
     */
    public function getMedia(): ?BoardMedia
    {
        return $this->media;
    }

    /**
    * Sets media.
    *
    * @param BoardMedia|null $media
    *
    * @return $this
    */
    public function setMedia(?BoardMedia $media = null): self
    {
        $this->media = $media;

        return $this;
    }




    /**
     * Gets owner.
     *
     * @return BoardOwner|null
     */
    public function getOwner(): ?BoardOwner
    {
        return $this->owner;
    }

    /**
    * Sets owner.
    *
    * @param BoardOwner|null $owner
    *
    * @return $this
    */
    public function setOwner(?BoardOwner $owner = null): self
    {
        $this->owner = $owner;

        return $this;
    }




    /**
     * Gets privacy.
     *
     * @return string|null
     */
    public function getPrivacy(): ?string
    {
        return $this->privacy;
    }

    /**
    * Sets privacy.
    *
    * @param string|null $privacy  Privacy setting for a board. Learn more about <a href=\"https://help.pinterest.com/en/article/secret-boards\">secret boards</a> and <a href=\"https://help.pinterest.com/en/business/article/protected-boards\">protected boards</a>
    *
    * @return $this
    */
    public function setPrivacy(?string $privacy = null): self
    {
        $this->privacy = $privacy;

        return $this;
    }



}


