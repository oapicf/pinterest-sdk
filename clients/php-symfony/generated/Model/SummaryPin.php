<?php
/**
 * SummaryPin
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the SummaryPin model.
 *
 * Summarized pin information
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class SummaryPin 
{
        /**
     * @var PinMedia|null
     * @SerializedName("media")
     * @Type("OpenAPI\Server\Model\PinMedia")
    */
    #[Assert\Type("OpenAPI\Server\Model\PinMedia")]
    protected ?PinMedia $media = null;

    /**
     * @var string|null
     * @SerializedName("alt_text")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 500)]
    protected ?string $altText = null;

    /**
     * @var string|null
     * @SerializedName("link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 2048)]
    protected ?string $link = null;

    /**
     * @var string|null
     * @SerializedName("title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $title = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->media = array_key_exists('media', $data) ? $data['media'] : $this->media;
            $this->altText = array_key_exists('altText', $data) ? $data['altText'] : $this->altText;
            $this->link = array_key_exists('link', $data) ? $data['link'] : $this->link;
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
        }
    }

    /**
     * Gets media.
     *
     * @return PinMedia|null
     */
    public function getMedia(): ?PinMedia
    {
        return $this->media;
    }

    /**
    * Sets media.
    *
    * @param PinMedia|null $media
    *
    * @return $this
    */
    public function setMedia(?PinMedia $media = null): self
    {
        $this->media = $media;

        return $this;
    }




    /**
     * Gets altText.
     *
     * @return string|null
     */
    public function getAltText(): ?string
    {
        return $this->altText;
    }

    /**
    * Sets altText.
    *
    * @param string|null $altText
    *
    * @return $this
    */
    public function setAltText(?string $altText = null): self
    {
        $this->altText = $altText;

        return $this;
    }




    /**
     * Gets link.
     *
     * @return string|null
     */
    public function getLink(): ?string
    {
        return $this->link;
    }

    /**
    * Sets link.
    *
    * @param string|null $link
    *
    * @return $this
    */
    public function setLink(?string $link = null): self
    {
        $this->link = $link;

        return $this;
    }




    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
    * Sets title.
    *
    * @param string|null $title
    *
    * @return $this
    */
    public function setTitle(?string $title = null): self
    {
        $this->title = $title;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }



}


