<?php
/**
 * UserWebsiteSummary
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UserWebsiteSummary model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class UserWebsiteSummary 
{
        /**
     * Website with path or domain only
     *
     * @var string|null
     * @SerializedName("website")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $website = null;

    /**
     * Status of the verification process
     *
     * @var string|null
     * @SerializedName("status")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $status = null;

    /**
     * UTC timestamp when the verification happened - sometimes missing
     *
     * @var string|null
     * @SerializedName("verified_at")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $verifiedAt = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->website = array_key_exists('website', $data) ? $data['website'] : $this->website;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->verifiedAt = array_key_exists('verifiedAt', $data) ? $data['verifiedAt'] : $this->verifiedAt;
        }
    }

    /**
     * Gets website.
     *
     * @return string|null
     */
    public function getWebsite(): ?string
    {
        return $this->website;
    }

    /**
    * Sets website.
    *
    * @param string|null $website  Website with path or domain only
    *
    * @return $this
    */
    public function setWebsite(?string $website = null): self
    {
        $this->website = $website;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param string|null $status  Status of the verification process
    *
    * @return $this
    */
    public function setStatus(?string $status = null): self
    {
        $this->status = $status;

        return $this;
    }




    /**
     * Gets verifiedAt.
     *
     * @return string|null
     */
    public function getVerifiedAt(): ?string
    {
        return $this->verifiedAt;
    }

    /**
    * Sets verifiedAt.
    *
    * @param string|null $verifiedAt  UTC timestamp when the verification happened - sometimes missing
    *
    * @return $this
    */
    public function setVerifiedAt(?string $verifiedAt = null): self
    {
        $this->verifiedAt = $verifiedAt;

        return $this;
    }



}


