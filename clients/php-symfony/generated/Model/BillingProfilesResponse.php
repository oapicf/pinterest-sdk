<?php
/**
 * BillingProfilesResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BillingProfilesResponse model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BillingProfilesResponse 
{
        /**
     * Billing ID.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $id = null;

    /**
     * Type of the card.
     *
     * @var string|null
     * @SerializedName("card_type")
     * @Type("string")
    */
    #[Assert\Choice(["UNKNOWN", "VISA", "MASTERCARD", "AMERICAN_EXPRESS", "DISCOVER", "ELO"])]
    #[Assert\Type("string")]
    protected ?string $cardType = null;

    /**
     * Status of the billing.
     *
     * @var string|null
     * @SerializedName("status")
     * @Type("string")
    */
    #[Assert\Choice(["UNSPECIFIED", "VALID", "INVALID", "PENDING", "DELETED", "SECONDARY", "PENDING_SECONDARY"])]
    #[Assert\Type("string")]
    protected ?string $status = null;

    /**
     * Advertiser ID of the billing.
     *
     * @var string|null
     * @SerializedName("advertiser_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $advertiserId = null;

    /**
     * Brand of the payment method.
     *
     * @var string|null
     * @SerializedName("payment_method_brand")
     * @Type("string")
    */
    #[Assert\Choice(["UNKNOWN", "VISA", "MASTERCARD", "AMERICAN_EXPRESS", "DISCOVER", "SOFORT", "DINERS_CLUB", "ELO", "CARTE_BANCAIRE"])]
    #[Assert\Type("string")]
    protected ?string $paymentMethodBrand = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->cardType = array_key_exists('cardType', $data) ? $data['cardType'] : $this->cardType;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->advertiserId = array_key_exists('advertiserId', $data) ? $data['advertiserId'] : $this->advertiserId;
            $this->paymentMethodBrand = array_key_exists('paymentMethodBrand', $data) ? $data['paymentMethodBrand'] : $this->paymentMethodBrand;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Billing ID.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets cardType.
     *
     * @return string|null
     */
    public function getCardType(): ?string
    {
        return $this->cardType;
    }

    /**
    * Sets cardType.
    *
    * @param string|null $cardType  Type of the card.
    *
    * @return $this
    */
    public function setCardType(?string $cardType = null): self
    {
        $this->cardType = $cardType;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param string|null $status  Status of the billing.
    *
    * @return $this
    */
    public function setStatus(?string $status = null): self
    {
        $this->status = $status;

        return $this;
    }




    /**
     * Gets advertiserId.
     *
     * @return string|null
     */
    public function getAdvertiserId(): ?string
    {
        return $this->advertiserId;
    }

    /**
    * Sets advertiserId.
    *
    * @param string|null $advertiserId  Advertiser ID of the billing.
    *
    * @return $this
    */
    public function setAdvertiserId(?string $advertiserId = null): self
    {
        $this->advertiserId = $advertiserId;

        return $this;
    }




    /**
     * Gets paymentMethodBrand.
     *
     * @return string|null
     */
    public function getPaymentMethodBrand(): ?string
    {
        return $this->paymentMethodBrand;
    }

    /**
    * Sets paymentMethodBrand.
    *
    * @param string|null $paymentMethodBrand  Brand of the payment method.
    *
    * @return $this
    */
    public function setPaymentMethodBrand(?string $paymentMethodBrand = null): self
    {
        $this->paymentMethodBrand = $paymentMethodBrand;

        return $this;
    }



}


