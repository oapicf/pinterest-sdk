<?php
/**
 * DeletePartnerAssetAccessBodyAccessesInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the DeletePartnerAssetAccessBodyAccessesInner model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class DeletePartnerAssetAccessBodyAccessesInner 
{
        /**
     * Unique identifier of a business partner to update asset access to.
     *
     * @var string|null
     * @SerializedName("partner_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Length(max: 25)]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $partnerId = null;

    /**
     * Unique identifier of the business asset.
     *
     * @var string|null
     * @SerializedName("asset_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Length(max: 25)]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $assetId = null;

    /**
     * If partner_type&#x3D;INTERNAL, the deleted asset access is for the access the partner has to your business asset.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the deleted asset access is for the access you have to the partner&#39;s business asset.
     *
     * @var string|null
     * @SerializedName("partner_type")
     * @Type("string")
    */
    #[Assert\Choice(["INTERNAL", "EXTERNAL"])]
    #[Assert\Type("string")]
    protected ?string $partnerType = 'INTERNAL';

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->partnerId = array_key_exists('partnerId', $data) ? $data['partnerId'] : $this->partnerId;
            $this->assetId = array_key_exists('assetId', $data) ? $data['assetId'] : $this->assetId;
            $this->partnerType = array_key_exists('partnerType', $data) ? $data['partnerType'] : $this->partnerType;
        }
    }

    /**
     * Gets partnerId.
     *
     * @return string|null
     */
    public function getPartnerId(): ?string
    {
        return $this->partnerId;
    }

    /**
    * Sets partnerId.
    *
    * @param string|null $partnerId  Unique identifier of a business partner to update asset access to.
    *
    * @return $this
    */
    public function setPartnerId(?string $partnerId): self
    {
        $this->partnerId = $partnerId;

        return $this;
    }




    /**
     * Gets assetId.
     *
     * @return string|null
     */
    public function getAssetId(): ?string
    {
        return $this->assetId;
    }

    /**
    * Sets assetId.
    *
    * @param string|null $assetId  Unique identifier of the business asset.
    *
    * @return $this
    */
    public function setAssetId(?string $assetId): self
    {
        $this->assetId = $assetId;

        return $this;
    }




    /**
     * Gets partnerType.
     *
     * @return string|null
     */
    public function getPartnerType(): ?string
    {
        return $this->partnerType;
    }

    /**
    * Sets partnerType.
    *
    * @param string|null $partnerType  If partner_type=INTERNAL, the deleted asset access is for the access the partner has to your business asset.<br> If partner_type=EXTERNAL, the deleted asset access is for the access you have to the partner's business asset.
    *
    * @return $this
    */
    public function setPartnerType(?string $partnerType = null): self
    {
        $this->partnerType = $partnerType;

        return $this;
    }



}


