<?php
/**
 * CatalogsReport
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsReport model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsReport 
{
        /**
     * @var string|null
     * @SerializedName("report_status")
     * @Type("string")
    */
    #[Assert\Choice(["FINISHED", "IN_PROGRESS"])]
    #[Assert\Type("string")]
    protected ?string $reportStatus = null;

    /**
     * URL to download the report
     *
     * @var string|null
     * @SerializedName("url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $url = null;

    /**
     * Size of the report in bytes
     *
     * @var float|null
     * @SerializedName("size")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $size = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->reportStatus = array_key_exists('reportStatus', $data) ? $data['reportStatus'] : $this->reportStatus;
            $this->url = array_key_exists('url', $data) ? $data['url'] : $this->url;
            $this->size = array_key_exists('size', $data) ? $data['size'] : $this->size;
        }
    }

    /**
     * Gets reportStatus.
     *
     * @return string|null
     */
    public function getReportStatus(): ?string
    {
        return $this->reportStatus;
    }

    /**
    * Sets reportStatus.
    *
    * @param string|null $reportStatus
    *
    * @return $this
    */
    public function setReportStatus(?string $reportStatus = null): self
    {
        $this->reportStatus = $reportStatus;

        return $this;
    }




    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
    * Sets url.
    *
    * @param string|null $url  URL to download the report
    *
    * @return $this
    */
    public function setUrl(?string $url = null): self
    {
        $this->url = $url;

        return $this;
    }




    /**
     * Gets size.
     *
     * @return float|null
     */
    public function getSize(): ?float
    {
        return $this->size;
    }

    /**
    * Sets size.
    *
    * @param float|null $size  Size of the report in bytes
    *
    * @return $this
    */
    public function setSize(?float $size = null): self
    {
        $this->size = $size;

        return $this;
    }



}


