<?php
/**
 * TargetingTemplateResponseData
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the TargetingTemplateResponseData model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class TargetingTemplateResponseData 
{
        /**
     * targeting template name
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * Enable auto-targeting for ad group. Also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/expanded-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;\&quot;expanded targeting\&quot;&lt;/a&gt;.
     *
     * @var bool|null
     * @SerializedName("auto_targeting_enabled")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $autoTargetingEnabled = true;

    /**
     * @var TargetingSpec|null
     * @SerializedName("targeting_attributes")
     * @Type("OpenAPI\Server\Model\TargetingSpec")
    */
    #[Assert\Type("OpenAPI\Server\Model\TargetingSpec")]
    protected ?TargetingSpec $targetingAttributes = null;

    /**
     * @var PlacementGroupType|null
     * @SerializedName("placement_group")
    * @Accessor(getter="getSerializedPlacementGroup", setter="setDeserializedPlacementGroup")
    * @Type("string")
    */
    protected ?PlacementGroupType $placementGroup = null;

    /**
     * @var TargetingTemplateKeyword[]|null
     * @SerializedName("keywords")
     * @Type("array<OpenAPI\Server\Model\TargetingTemplateKeyword>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\TargetingTemplateKeyword"),
    ])]
    protected ?array $keywords = null;

    /**
     * @var TrackingUrls|null
     * @SerializedName("tracking_urls")
     * @Type("OpenAPI\Server\Model\TrackingUrls")
    */
    #[Assert\Type("OpenAPI\Server\Model\TrackingUrls")]
    protected ?TrackingUrls $trackingUrls = null;

    /**
     * Targeting template ID.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $id = null;

    /**
     * Targeting template created time. Unix timestamp in seconds.
     *
     * @var int|null
     * @SerializedName("created_time")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $createdTime = null;

    /**
     * Targeting template updated time.Unix timestamp in seconds.
     *
     * @var int|null
     * @SerializedName("updated_time")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $updatedTime = null;

    /**
     * The ID of the advertiser that this targeting template belongs to.
     *
     * @var string|null
     * @SerializedName("ad_account_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $adAccountId = null;

    /**
     * Indicate targeting template is active or Deleted
     *
     * @var string|null
     * @SerializedName("status")
     * @Type("string")
    */
    #[Assert\Choice(["ACTIVE", "DELETED"])]
    #[Assert\Type("string")]
    protected ?string $status = 'ACTIVE';

    /**
     * @var TargetingTemplateAudienceSizing|null
     * @SerializedName("sizing")
     * @Type("OpenAPI\Server\Model\TargetingTemplateAudienceSizing")
    */
    #[Assert\Type("OpenAPI\Server\Model\TargetingTemplateAudienceSizing")]
    protected ?TargetingTemplateAudienceSizing $sizing = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->autoTargetingEnabled = array_key_exists('autoTargetingEnabled', $data) ? $data['autoTargetingEnabled'] : $this->autoTargetingEnabled;
            $this->targetingAttributes = array_key_exists('targetingAttributes', $data) ? $data['targetingAttributes'] : $this->targetingAttributes;
            $this->placementGroup = array_key_exists('placementGroup', $data) ? $data['placementGroup'] : $this->placementGroup;
            $this->keywords = array_key_exists('keywords', $data) ? $data['keywords'] : $this->keywords;
            $this->trackingUrls = array_key_exists('trackingUrls', $data) ? $data['trackingUrls'] : $this->trackingUrls;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->createdTime = array_key_exists('createdTime', $data) ? $data['createdTime'] : $this->createdTime;
            $this->updatedTime = array_key_exists('updatedTime', $data) ? $data['updatedTime'] : $this->updatedTime;
            $this->adAccountId = array_key_exists('adAccountId', $data) ? $data['adAccountId'] : $this->adAccountId;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->sizing = array_key_exists('sizing', $data) ? $data['sizing'] : $this->sizing;
        }
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  targeting template name
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets autoTargetingEnabled.
     *
     * @return bool|null
     */
    public function isAutoTargetingEnabled(): ?bool
    {
        return $this->autoTargetingEnabled;
    }

    /**
    * Sets autoTargetingEnabled.
    *
    * @param bool|null $autoTargetingEnabled  Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
    *
    * @return $this
    */
    public function setAutoTargetingEnabled(?bool $autoTargetingEnabled = null): self
    {
        $this->autoTargetingEnabled = $autoTargetingEnabled;

        return $this;
    }




    /**
     * Gets targetingAttributes.
     *
     * @return TargetingSpec|null
     */
    public function getTargetingAttributes(): ?TargetingSpec
    {
        return $this->targetingAttributes;
    }

    /**
    * Sets targetingAttributes.
    *
    * @param TargetingSpec|null $targetingAttributes
    *
    * @return $this
    */
    public function setTargetingAttributes(?TargetingSpec $targetingAttributes = null): self
    {
        $this->targetingAttributes = $targetingAttributes;

        return $this;
    }




    /**
     * Gets placementGroup.
     *
     * @return PlacementGroupType|null
     */
    public function getPlacementGroup(): ?PlacementGroupType
    {
        return $this->placementGroup;
    }

    /**
    * Sets placementGroup.
    *
    * @param PlacementGroupType|null $placementGroup
    *
    * @return $this
    */
    public function setPlacementGroup(?PlacementGroupType $placementGroup = null): self
    {
        $this->placementGroup = $placementGroup;

        return $this;
    }

    /**
    * Gets placementGroup for serialization.
    *
    * @return string|null
    */
    public function getSerializedPlacementGroup(): string|null
    {
        return !is_null($this->placementGroup?->value) ? (string) $this->placementGroup->value : null;
    }

    /**
    * Sets placementGroup.
    *
    * @param string|PlacementGroupType|null $placementGroup
    *
    * @return $this
    */
    public function setDeserializedPlacementGroup(string|PlacementGroupType|null $placementGroup = null): self
    {
        if (is_string($placementGroup)) {
            $placementGroup = PlacementGroupType::tryFrom($placementGroup);
        }

        $this->placementGroup = $placementGroup;

        return $this;
    }



    /**
     * Gets keywords.
     *
     * @return TargetingTemplateKeyword[]|null
     */
    public function getKeywords(): ?array
    {
        return $this->keywords;
    }

    /**
    * Sets keywords.
    *
    * @param TargetingTemplateKeyword[]|null $keywords
    *
    * @return $this
    */
    public function setKeywords(?array $keywords = null): self
    {
        $this->keywords = $keywords;

        return $this;
    }




    /**
     * Gets trackingUrls.
     *
     * @return TrackingUrls|null
     */
    public function getTrackingUrls(): ?TrackingUrls
    {
        return $this->trackingUrls;
    }

    /**
    * Sets trackingUrls.
    *
    * @param TrackingUrls|null $trackingUrls
    *
    * @return $this
    */
    public function setTrackingUrls(?TrackingUrls $trackingUrls = null): self
    {
        $this->trackingUrls = $trackingUrls;

        return $this;
    }




    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Targeting template ID.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets createdTime.
     *
     * @return int|null
     */
    public function getCreatedTime(): ?int
    {
        return $this->createdTime;
    }

    /**
    * Sets createdTime.
    *
    * @param int|null $createdTime  Targeting template created time. Unix timestamp in seconds.
    *
    * @return $this
    */
    public function setCreatedTime(?int $createdTime = null): self
    {
        $this->createdTime = $createdTime;

        return $this;
    }




    /**
     * Gets updatedTime.
     *
     * @return int|null
     */
    public function getUpdatedTime(): ?int
    {
        return $this->updatedTime;
    }

    /**
    * Sets updatedTime.
    *
    * @param int|null $updatedTime  Targeting template updated time.Unix timestamp in seconds.
    *
    * @return $this
    */
    public function setUpdatedTime(?int $updatedTime = null): self
    {
        $this->updatedTime = $updatedTime;

        return $this;
    }




    /**
     * Gets adAccountId.
     *
     * @return string|null
     */
    public function getAdAccountId(): ?string
    {
        return $this->adAccountId;
    }

    /**
    * Sets adAccountId.
    *
    * @param string|null $adAccountId  The ID of the advertiser that this targeting template belongs to.
    *
    * @return $this
    */
    public function setAdAccountId(?string $adAccountId = null): self
    {
        $this->adAccountId = $adAccountId;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param string|null $status  Indicate targeting template is active or Deleted
    *
    * @return $this
    */
    public function setStatus(?string $status = null): self
    {
        $this->status = $status;

        return $this;
    }




    /**
     * Gets sizing.
     *
     * @return TargetingTemplateAudienceSizing|null
     */
    public function getSizing(): ?TargetingTemplateAudienceSizing
    {
        return $this->sizing;
    }

    /**
    * Sets sizing.
    *
    * @param TargetingTemplateAudienceSizing|null $sizing
    *
    * @return $this
    */
    public function setSizing(?TargetingTemplateAudienceSizing $sizing = null): self
    {
        $this->sizing = $sizing;

        return $this;
    }



}


