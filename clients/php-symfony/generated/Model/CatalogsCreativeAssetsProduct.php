<?php
/**
 * CatalogsCreativeAssetsProduct
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsCreativeAssetsProduct model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsCreativeAssetsProduct 
{
        /**
     * @var string|null
     * @SerializedName("catalog_type")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["CREATIVE_ASSETS"])]
    #[Assert\Type("string")]
    protected ?string $catalogType = null;

    /**
     * @var CatalogsCreativeAssetsProductMetadata|null
     * @SerializedName("metadata")
     * @Type("OpenAPI\Server\Model\CatalogsCreativeAssetsProductMetadata")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\CatalogsCreativeAssetsProductMetadata")]
    protected ?CatalogsCreativeAssetsProductMetadata $metadata = null;

    /**
     * @var Pin|null
     * @SerializedName("pin")
     * @Type("OpenAPI\Server\Model\Pin")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\Pin")]
    protected ?Pin $pin = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->catalogType = array_key_exists('catalogType', $data) ? $data['catalogType'] : $this->catalogType;
            $this->metadata = array_key_exists('metadata', $data) ? $data['metadata'] : $this->metadata;
            $this->pin = array_key_exists('pin', $data) ? $data['pin'] : $this->pin;
        }
    }

    /**
     * Gets catalogType.
     *
     * @return string|null
     */
    public function getCatalogType(): ?string
    {
        return $this->catalogType;
    }

    /**
    * Sets catalogType.
    *
    * @param string|null $catalogType
    *
    * @return $this
    */
    public function setCatalogType(?string $catalogType): self
    {
        $this->catalogType = $catalogType;

        return $this;
    }




    /**
     * Gets metadata.
     *
     * @return CatalogsCreativeAssetsProductMetadata|null
     */
    public function getMetadata(): ?CatalogsCreativeAssetsProductMetadata
    {
        return $this->metadata;
    }

    /**
    * Sets metadata.
    *
    * @param CatalogsCreativeAssetsProductMetadata|null $metadata
    *
    * @return $this
    */
    public function setMetadata(?CatalogsCreativeAssetsProductMetadata $metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }




    /**
     * Gets pin.
     *
     * @return Pin|null
     */
    public function getPin(): ?Pin
    {
        return $this->pin;
    }

    /**
    * Sets pin.
    *
    * @param Pin|null $pin
    *
    * @return $this
    */
    public function setPin(?Pin $pin): self
    {
        $this->pin = $pin;

        return $this;
    }



}


