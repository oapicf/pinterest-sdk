<?php
/**
 * AdvancedAuctionProcessedItem
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the AdvancedAuctionProcessedItem model.
 *
 * Object describing the result of an operation on an item bid option
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class AdvancedAuctionProcessedItem extends AdvancedAuctionItemsSubmitRecord 
{
        /**
     * Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
     *
     * @var AdvancedAuctionOperationError[]|null
     * @SerializedName("errors")
     * @Type("array<OpenAPI\Server\Model\AdvancedAuctionOperationError>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\AdvancedAuctionOperationError"),
    ])]
    protected ?array $errors = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        if (is_array($data)) {
            $this->errors = array_key_exists('errors', $data) ? $data['errors'] : $this->errors;
        }
    }

    /**
     * Gets errors.
     *
     * @return AdvancedAuctionOperationError[]|null
     */
    public function getErrors(): ?array
    {
        return $this->errors;
    }

    /**
    * Sets errors.
    *
    * @param AdvancedAuctionOperationError[]|null $errors  Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
    *
    * @return $this
    */
    public function setErrors(?array $errors = null): self
    {
        $this->errors = $errors;

        return $this;
    }



}


