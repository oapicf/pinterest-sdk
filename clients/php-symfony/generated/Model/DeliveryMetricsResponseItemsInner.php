<?php
/**
 * DeliveryMetricsResponseItemsInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the DeliveryMetricsResponseItemsInner model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class DeliveryMetricsResponseItemsInner 
{
        /**
     * Metric&#39;s name.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * Category name
     *
     * @var string|null
     * @SerializedName("category")
     * @Type("string")
    */
    #[Assert\Choice(["ADS", "ORGANIC"])]
    #[Assert\Type("string")]
    protected ?string $category = null;

    /**
     * How the metric is defined.
     *
     * @var string|null
     * @SerializedName("definition")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $definition = null;

    /**
     * Display name, when available. If unavaible it will not be returned. Matches how the metric is named in our native tools like Pinterest Ads Manager.
     *
     * @var string|null
     * @SerializedName("display_name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $displayName = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->category = array_key_exists('category', $data) ? $data['category'] : $this->category;
            $this->definition = array_key_exists('definition', $data) ? $data['definition'] : $this->definition;
            $this->displayName = array_key_exists('displayName', $data) ? $data['displayName'] : $this->displayName;
        }
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Metric's name.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets category.
     *
     * @return string|null
     */
    public function getCategory(): ?string
    {
        return $this->category;
    }

    /**
    * Sets category.
    *
    * @param string|null $category  Category name
    *
    * @return $this
    */
    public function setCategory(?string $category = null): self
    {
        $this->category = $category;

        return $this;
    }




    /**
     * Gets definition.
     *
     * @return string|null
     */
    public function getDefinition(): ?string
    {
        return $this->definition;
    }

    /**
    * Sets definition.
    *
    * @param string|null $definition  How the metric is defined.
    *
    * @return $this
    */
    public function setDefinition(?string $definition = null): self
    {
        $this->definition = $definition;

        return $this;
    }




    /**
     * Gets displayName.
     *
     * @return string|null
     */
    public function getDisplayName(): ?string
    {
        return $this->displayName;
    }

    /**
    * Sets displayName.
    *
    * @param string|null $displayName  Display name, when available. If unavaible it will not be returned. Matches how the metric is named in our native tools like Pinterest Ads Manager.
    *
    * @return $this
    */
    public function setDisplayName(?string $displayName = null): self
    {
        $this->displayName = $displayName;

        return $this;
    }



}


