<?php
/**
 * PinUpdate
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PinUpdate model.
 *
 * Pin fields for updates
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PinUpdate 
{
        /**
     * Pin&#39;s alternative text.
     *
     * @var string|null
     * @SerializedName("alt_text")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 500)]
    protected ?string $altText = null;

    /**
     * The id of the board to move the Pin onto.
     *
     * @var string|null
     * @SerializedName("board_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $boardId = null;

    /**
     * &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/create-a-board-section\&quot;&gt;Board section&lt;/a&gt; ID.
     *
     * @var string|null
     * @SerializedName("board_section_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $boardSectionId = null;

    /**
     * Pin description - 800 characters maximum.
     *
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 800)]
    protected ?string $description = null;

    /**
     * URL viewer is taken to when they click pin.
     *
     * @var string|null
     * @SerializedName("link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 2048)]
    protected ?string $link = null;

    /**
     * The native pin title that creators explicitly prefer to display.
     *
     * @var string|null
     * @SerializedName("title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 100)]
    protected ?string $title = null;

    /**
     * Carousel Pin slots data.
     *
     * @var PinUpdateCarouselSlotsInner[]|null
     * @SerializedName("carousel_slots")
     * @Type("array<OpenAPI\Server\Model\PinUpdateCarouselSlotsInner>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\PinUpdateCarouselSlotsInner"),
    ])]
    protected ?array $carouselSlots = null;

    /**
     * Private note for this Pin. &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/add-notes-to-your-pins\&quot;&gt;Learn more&lt;/a&gt;.
     *
     * @var string|null
     * @SerializedName("note")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $note = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->altText = array_key_exists('altText', $data) ? $data['altText'] : $this->altText;
            $this->boardId = array_key_exists('boardId', $data) ? $data['boardId'] : $this->boardId;
            $this->boardSectionId = array_key_exists('boardSectionId', $data) ? $data['boardSectionId'] : $this->boardSectionId;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->link = array_key_exists('link', $data) ? $data['link'] : $this->link;
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
            $this->carouselSlots = array_key_exists('carouselSlots', $data) ? $data['carouselSlots'] : $this->carouselSlots;
            $this->note = array_key_exists('note', $data) ? $data['note'] : $this->note;
        }
    }

    /**
     * Gets altText.
     *
     * @return string|null
     */
    public function getAltText(): ?string
    {
        return $this->altText;
    }

    /**
    * Sets altText.
    *
    * @param string|null $altText  Pin's alternative text.
    *
    * @return $this
    */
    public function setAltText(?string $altText = null): self
    {
        $this->altText = $altText;

        return $this;
    }




    /**
     * Gets boardId.
     *
     * @return string|null
     */
    public function getBoardId(): ?string
    {
        return $this->boardId;
    }

    /**
    * Sets boardId.
    *
    * @param string|null $boardId  The id of the board to move the Pin onto.
    *
    * @return $this
    */
    public function setBoardId(?string $boardId = null): self
    {
        $this->boardId = $boardId;

        return $this;
    }




    /**
     * Gets boardSectionId.
     *
     * @return string|null
     */
    public function getBoardSectionId(): ?string
    {
        return $this->boardSectionId;
    }

    /**
    * Sets boardSectionId.
    *
    * @param string|null $boardSectionId  <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID.
    *
    * @return $this
    */
    public function setBoardSectionId(?string $boardSectionId = null): self
    {
        $this->boardSectionId = $boardSectionId;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description  Pin description - 800 characters maximum.
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets link.
     *
     * @return string|null
     */
    public function getLink(): ?string
    {
        return $this->link;
    }

    /**
    * Sets link.
    *
    * @param string|null $link  URL viewer is taken to when they click pin.
    *
    * @return $this
    */
    public function setLink(?string $link = null): self
    {
        $this->link = $link;

        return $this;
    }




    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
    * Sets title.
    *
    * @param string|null $title  The native pin title that creators explicitly prefer to display.
    *
    * @return $this
    */
    public function setTitle(?string $title = null): self
    {
        $this->title = $title;

        return $this;
    }




    /**
     * Gets carouselSlots.
     *
     * @return PinUpdateCarouselSlotsInner[]|null
     */
    public function getCarouselSlots(): ?array
    {
        return $this->carouselSlots;
    }

    /**
    * Sets carouselSlots.
    *
    * @param PinUpdateCarouselSlotsInner[]|null $carouselSlots  Carousel Pin slots data.
    *
    * @return $this
    */
    public function setCarouselSlots(?array $carouselSlots = null): self
    {
        $this->carouselSlots = $carouselSlots;

        return $this;
    }




    /**
     * Gets note.
     *
     * @return string|null
     */
    public function getNote(): ?string
    {
        return $this->note;
    }

    /**
    * Sets note.
    *
    * @param string|null $note  Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
    *
    * @return $this
    */
    public function setNote(?string $note = null): self
    {
        $this->note = $note;

        return $this;
    }



}


