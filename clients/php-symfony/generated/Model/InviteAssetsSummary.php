<?php
/**
 * InviteAssetsSummary
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the InviteAssetsSummary model.
 *
 * Ad accounts and profiles the member/partner will be granted access to with this invite/request.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class InviteAssetsSummary 
{
        /**
     * List of ad account IDs and respective permission levels that will be assigned.
     *
     * @var InviteAssetsSummaryAdAccountsInner[]|null
     * @SerializedName("ad_accounts")
     * @Type("array<OpenAPI\Server\Model\InviteAssetsSummaryAdAccountsInner>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\InviteAssetsSummaryAdAccountsInner"),
    ])]
    protected ?array $adAccounts = null;

    /**
     * List of profile IDs and respective permission levels that will be assigned.
     *
     * @var InviteAssetsSummaryProfilesInner[]|null
     * @SerializedName("profiles")
     * @Type("array<OpenAPI\Server\Model\InviteAssetsSummaryProfilesInner>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\InviteAssetsSummaryProfilesInner"),
    ])]
    protected ?array $profiles = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->adAccounts = array_key_exists('adAccounts', $data) ? $data['adAccounts'] : $this->adAccounts;
            $this->profiles = array_key_exists('profiles', $data) ? $data['profiles'] : $this->profiles;
        }
    }

    /**
     * Gets adAccounts.
     *
     * @return InviteAssetsSummaryAdAccountsInner[]|null
     */
    public function getAdAccounts(): ?array
    {
        return $this->adAccounts;
    }

    /**
    * Sets adAccounts.
    *
    * @param InviteAssetsSummaryAdAccountsInner[]|null $adAccounts  List of ad account IDs and respective permission levels that will be assigned.
    *
    * @return $this
    */
    public function setAdAccounts(?array $adAccounts = null): self
    {
        $this->adAccounts = $adAccounts;

        return $this;
    }




    /**
     * Gets profiles.
     *
     * @return InviteAssetsSummaryProfilesInner[]|null
     */
    public function getProfiles(): ?array
    {
        return $this->profiles;
    }

    /**
    * Sets profiles.
    *
    * @param InviteAssetsSummaryProfilesInner[]|null $profiles  List of profile IDs and respective permission levels that will be assigned.
    *
    * @return $this
    */
    public function setProfiles(?array $profiles = null): self
    {
        $this->profiles = $profiles;

        return $this;
    }



}


