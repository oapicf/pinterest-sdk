<?php
/**
 * PinMediaSource
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PinMediaSource model.
 *
 * Pin media source.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PinMediaSource 
{
        /**
     * @var string|null
     * @SerializedName("source_type")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["pin_url"])]
    #[Assert\Type("string")]
    protected ?string $sourceType = null;

    /**
     * @var string|null
     * @SerializedName("content_type")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Choice(["image/jpeg", "image/png"])]
    #[Assert\Type("string")]
    protected ?string $contentType = null;

    /**
     * @var string|null
     * @SerializedName("data")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Regex("/[a-zA-Z0-9+/&#x3D;]+/")]
    protected ?string $data = null;

    /**
     * Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
     *
     * @var bool|null
     * @SerializedName("is_standard")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $isStandard = true;

    /**
     * @var string|null
     * @SerializedName("url")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $url = null;

    /**
     * Cover image url.
     *
     * @var string|null
     * @SerializedName("cover_image_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $coverImageUrl = null;

    /**
     * Content type for cover image Base64.
     *
     * @var string|null
     * @SerializedName("cover_image_content_type")
     * @Type("string")
    */
    #[Assert\Choice(["image/jpeg", "image/png"])]
    #[Assert\Type("string")]
    protected ?string $coverImageContentType = null;

    /**
     * Cover image Base64.
     *
     * @var string|null
     * @SerializedName("cover_image_data")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $coverImageData = null;

    /**
     * @var string|null
     * @SerializedName("media_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $mediaId = null;

    /**
     * Array with image objects.
     *
     * @var PinMediaSourceImagesURLItemsInner[]|null
     * @SerializedName("items")
     * @Type("array<OpenAPI\Server\Model\PinMediaSourceImagesURLItemsInner>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\PinMediaSourceImagesURLItemsInner"),
    ])]
    #[Assert\Count(max: 5)]
    #[Assert\Count(min: 2)]
    protected ?array $items = null;

    /**
     * @var int|null
     * @SerializedName("index")
     * @Type("int")
    */
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(0)]
    protected ?int $index = null;

    /**
     * This is an affiliate link or sponsored product. The FTC requires disclosure for paid partnerships and affiliate products.
     *
     * @var bool|null
     * @SerializedName("is_affiliate_link")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $isAffiliateLink = false;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->sourceType = array_key_exists('sourceType', $data) ? $data['sourceType'] : $this->sourceType;
            $this->contentType = array_key_exists('contentType', $data) ? $data['contentType'] : $this->contentType;
            $this->data = array_key_exists('data', $data) ? $data['data'] : $this->data;
            $this->isStandard = array_key_exists('isStandard', $data) ? $data['isStandard'] : $this->isStandard;
            $this->url = array_key_exists('url', $data) ? $data['url'] : $this->url;
            $this->coverImageUrl = array_key_exists('coverImageUrl', $data) ? $data['coverImageUrl'] : $this->coverImageUrl;
            $this->coverImageContentType = array_key_exists('coverImageContentType', $data) ? $data['coverImageContentType'] : $this->coverImageContentType;
            $this->coverImageData = array_key_exists('coverImageData', $data) ? $data['coverImageData'] : $this->coverImageData;
            $this->mediaId = array_key_exists('mediaId', $data) ? $data['mediaId'] : $this->mediaId;
            $this->items = array_key_exists('items', $data) ? $data['items'] : $this->items;
            $this->index = array_key_exists('index', $data) ? $data['index'] : $this->index;
            $this->isAffiliateLink = array_key_exists('isAffiliateLink', $data) ? $data['isAffiliateLink'] : $this->isAffiliateLink;
        }
    }

    /**
     * Gets sourceType.
     *
     * @return string|null
     */
    public function getSourceType(): ?string
    {
        return $this->sourceType;
    }

    /**
    * Sets sourceType.
    *
    * @param string|null $sourceType
    *
    * @return $this
    */
    public function setSourceType(?string $sourceType): self
    {
        $this->sourceType = $sourceType;

        return $this;
    }




    /**
     * Gets contentType.
     *
     * @return string|null
     */
    public function getContentType(): ?string
    {
        return $this->contentType;
    }

    /**
    * Sets contentType.
    *
    * @param string|null $contentType
    *
    * @return $this
    */
    public function setContentType(?string $contentType): self
    {
        $this->contentType = $contentType;

        return $this;
    }




    /**
     * Gets data.
     *
     * @return string|null
     */
    public function getData(): ?string
    {
        return $this->data;
    }

    /**
    * Sets data.
    *
    * @param string|null $data
    *
    * @return $this
    */
    public function setData(?string $data): self
    {
        $this->data = $data;

        return $this;
    }




    /**
     * Gets isStandard.
     *
     * @return bool|null
     */
    public function isIsStandard(): ?bool
    {
        return $this->isStandard;
    }

    /**
    * Sets isStandard.
    *
    * @param bool|null $isStandard  Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
    *
    * @return $this
    */
    public function setIsStandard(?bool $isStandard = null): self
    {
        $this->isStandard = $isStandard;

        return $this;
    }




    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
    * Sets url.
    *
    * @param string|null $url
    *
    * @return $this
    */
    public function setUrl(?string $url): self
    {
        $this->url = $url;

        return $this;
    }




    /**
     * Gets coverImageUrl.
     *
     * @return string|null
     */
    public function getCoverImageUrl(): ?string
    {
        return $this->coverImageUrl;
    }

    /**
    * Sets coverImageUrl.
    *
    * @param string|null $coverImageUrl  Cover image url.
    *
    * @return $this
    */
    public function setCoverImageUrl(?string $coverImageUrl = null): self
    {
        $this->coverImageUrl = $coverImageUrl;

        return $this;
    }




    /**
     * Gets coverImageContentType.
     *
     * @return string|null
     */
    public function getCoverImageContentType(): ?string
    {
        return $this->coverImageContentType;
    }

    /**
    * Sets coverImageContentType.
    *
    * @param string|null $coverImageContentType  Content type for cover image Base64.
    *
    * @return $this
    */
    public function setCoverImageContentType(?string $coverImageContentType = null): self
    {
        $this->coverImageContentType = $coverImageContentType;

        return $this;
    }




    /**
     * Gets coverImageData.
     *
     * @return string|null
     */
    public function getCoverImageData(): ?string
    {
        return $this->coverImageData;
    }

    /**
    * Sets coverImageData.
    *
    * @param string|null $coverImageData  Cover image Base64.
    *
    * @return $this
    */
    public function setCoverImageData(?string $coverImageData = null): self
    {
        $this->coverImageData = $coverImageData;

        return $this;
    }




    /**
     * Gets mediaId.
     *
     * @return string|null
     */
    public function getMediaId(): ?string
    {
        return $this->mediaId;
    }

    /**
    * Sets mediaId.
    *
    * @param string|null $mediaId
    *
    * @return $this
    */
    public function setMediaId(?string $mediaId): self
    {
        $this->mediaId = $mediaId;

        return $this;
    }




    /**
     * Gets items.
     *
     * @return PinMediaSourceImagesURLItemsInner[]|null
     */
    public function getItems(): ?array
    {
        return $this->items;
    }

    /**
    * Sets items.
    *
    * @param PinMediaSourceImagesURLItemsInner[]|null $items  Array with image objects.
    *
    * @return $this
    */
    public function setItems(?array $items): self
    {
        $this->items = $items;

        return $this;
    }




    /**
     * Gets index.
     *
     * @return int|null
     */
    public function getIndex(): ?int
    {
        return $this->index;
    }

    /**
    * Sets index.
    *
    * @param int|null $index
    *
    * @return $this
    */
    public function setIndex(?int $index = null): self
    {
        $this->index = $index;

        return $this;
    }




    /**
     * Gets isAffiliateLink.
     *
     * @return bool|null
     */
    public function isIsAffiliateLink(): ?bool
    {
        return $this->isAffiliateLink;
    }

    /**
    * Sets isAffiliateLink.
    *
    * @param bool|null $isAffiliateLink  This is an affiliate link or sponsored product. The FTC requires disclosure for paid partnerships and affiliate products.
    *
    * @return $this
    */
    public function setIsAffiliateLink(?bool $isAffiliateLink = null): self
    {
        $this->isAffiliateLink = $isAffiliateLink;

        return $this;
    }



}


