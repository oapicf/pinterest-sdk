<?php
/**
 * RelatedTerms
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RelatedTerms model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class RelatedTerms 
{
        /**
     * First input term. For example, if you pass \&quot;?terms&#x3D;clothes,workout\&quot;, then id will be \&quot;clothes\&quot;
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * Total number of related terms returned
     *
     * @var int|null
     * @SerializedName("related_term_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $relatedTermCount = null;

    /**
     * The id of the advertiser.
     *
     * @var RelatedTermsRelatedTermsListInner[]|null
     * @SerializedName("related_terms_list")
     * @Type("array<OpenAPI\Server\Model\RelatedTermsRelatedTermsListInner>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\RelatedTermsRelatedTermsListInner"),
    ])]
    protected ?array $relatedTermsList = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->relatedTermCount = array_key_exists('relatedTermCount', $data) ? $data['relatedTermCount'] : $this->relatedTermCount;
            $this->relatedTermsList = array_key_exists('relatedTermsList', $data) ? $data['relatedTermsList'] : $this->relatedTermsList;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  First input term. For example, if you pass \"?terms=clothes,workout\", then id will be \"clothes\"
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets relatedTermCount.
     *
     * @return int|null
     */
    public function getRelatedTermCount(): ?int
    {
        return $this->relatedTermCount;
    }

    /**
    * Sets relatedTermCount.
    *
    * @param int|null $relatedTermCount  Total number of related terms returned
    *
    * @return $this
    */
    public function setRelatedTermCount(?int $relatedTermCount = null): self
    {
        $this->relatedTermCount = $relatedTermCount;

        return $this;
    }




    /**
     * Gets relatedTermsList.
     *
     * @return RelatedTermsRelatedTermsListInner[]|null
     */
    public function getRelatedTermsList(): ?array
    {
        return $this->relatedTermsList;
    }

    /**
    * Sets relatedTermsList.
    *
    * @param RelatedTermsRelatedTermsListInner[]|null $relatedTermsList  The id of the advertiser.
    *
    * @return $this
    */
    public function setRelatedTermsList(?array $relatedTermsList = null): self
    {
        $this->relatedTermsList = $relatedTermsList;

        return $this;
    }



}


