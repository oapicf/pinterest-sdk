<?php
/**
 * TrackingUrls
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the TrackingUrls model.
 *
 * Third-party tracking URLs. Up to three tracking URLs - with a max length of 2,000 - are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Third-party and dynamic tracking&lt;/a&gt;.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class TrackingUrls 
{
        /**
     * @var string[]|null
     * @SerializedName("impression")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $impression = null;

    /**
     * @var string[]|null
     * @SerializedName("click")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $click = null;

    /**
     * @var string[]|null
     * @SerializedName("engagement")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $engagement = null;

    /**
     * @var string[]|null
     * @SerializedName("buyable_button")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $buyableButton = null;

    /**
     * @var string[]|null
     * @SerializedName("audience_verification")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $audienceVerification = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->impression = array_key_exists('impression', $data) ? $data['impression'] : $this->impression;
            $this->click = array_key_exists('click', $data) ? $data['click'] : $this->click;
            $this->engagement = array_key_exists('engagement', $data) ? $data['engagement'] : $this->engagement;
            $this->buyableButton = array_key_exists('buyableButton', $data) ? $data['buyableButton'] : $this->buyableButton;
            $this->audienceVerification = array_key_exists('audienceVerification', $data) ? $data['audienceVerification'] : $this->audienceVerification;
        }
    }

    /**
     * Gets impression.
     *
     * @return string[]|null
     */
    public function getImpression(): ?array
    {
        return $this->impression;
    }

    /**
    * Sets impression.
    *
    * @param string[]|null $impression
    *
    * @return $this
    */
    public function setImpression(?array $impression = null): self
    {
        $this->impression = $impression;

        return $this;
    }




    /**
     * Gets click.
     *
     * @return string[]|null
     */
    public function getClick(): ?array
    {
        return $this->click;
    }

    /**
    * Sets click.
    *
    * @param string[]|null $click
    *
    * @return $this
    */
    public function setClick(?array $click = null): self
    {
        $this->click = $click;

        return $this;
    }




    /**
     * Gets engagement.
     *
     * @return string[]|null
     */
    public function getEngagement(): ?array
    {
        return $this->engagement;
    }

    /**
    * Sets engagement.
    *
    * @param string[]|null $engagement
    *
    * @return $this
    */
    public function setEngagement(?array $engagement = null): self
    {
        $this->engagement = $engagement;

        return $this;
    }




    /**
     * Gets buyableButton.
     *
     * @return string[]|null
     */
    public function getBuyableButton(): ?array
    {
        return $this->buyableButton;
    }

    /**
    * Sets buyableButton.
    *
    * @param string[]|null $buyableButton
    *
    * @return $this
    */
    public function setBuyableButton(?array $buyableButton = null): self
    {
        $this->buyableButton = $buyableButton;

        return $this;
    }




    /**
     * Gets audienceVerification.
     *
     * @return string[]|null
     */
    public function getAudienceVerification(): ?array
    {
        return $this->audienceVerification;
    }

    /**
    * Sets audienceVerification.
    *
    * @param string[]|null $audienceVerification
    *
    * @return $this
    */
    public function setAudienceVerification(?array $audienceVerification = null): self
    {
        $this->audienceVerification = $audienceVerification;

        return $this;
    }



}


