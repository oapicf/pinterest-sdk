<?php
/**
 * ImageMetadata
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ImageMetadata model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ImageMetadata 
{
        /**
     * @var string|null
     * @SerializedName("item_type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $itemType = null;

    /**
     * @var string|null
     * @SerializedName("title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $title = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * @var string|null
     * @SerializedName("link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $link = null;

    /**
     * @var ImageMetadataImages|null
     * @SerializedName("images")
     * @Type("OpenAPI\Server\Model\ImageMetadataImages")
    */
    #[Assert\Type("OpenAPI\Server\Model\ImageMetadataImages")]
    protected ?ImageMetadataImages $images = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->itemType = array_key_exists('itemType', $data) ? $data['itemType'] : $this->itemType;
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->link = array_key_exists('link', $data) ? $data['link'] : $this->link;
            $this->images = array_key_exists('images', $data) ? $data['images'] : $this->images;
        }
    }

    /**
     * Gets itemType.
     *
     * @return string|null
     */
    public function getItemType(): ?string
    {
        return $this->itemType;
    }

    /**
    * Sets itemType.
    *
    * @param string|null $itemType
    *
    * @return $this
    */
    public function setItemType(?string $itemType = null): self
    {
        $this->itemType = $itemType;

        return $this;
    }




    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
    * Sets title.
    *
    * @param string|null $title
    *
    * @return $this
    */
    public function setTitle(?string $title = null): self
    {
        $this->title = $title;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets link.
     *
     * @return string|null
     */
    public function getLink(): ?string
    {
        return $this->link;
    }

    /**
    * Sets link.
    *
    * @param string|null $link
    *
    * @return $this
    */
    public function setLink(?string $link = null): self
    {
        $this->link = $link;

        return $this;
    }




    /**
     * Gets images.
     *
     * @return ImageMetadataImages|null
     */
    public function getImages(): ?ImageMetadataImages
    {
        return $this->images;
    }

    /**
    * Sets images.
    *
    * @param ImageMetadataImages|null $images
    *
    * @return $this
    */
    public function setImages(?ImageMetadataImages $images = null): self
    {
        $this->images = $images;

        return $this;
    }



}


