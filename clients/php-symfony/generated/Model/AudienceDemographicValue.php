<?php
/**
 * AudienceDemographicValue
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the AudienceDemographicValue model.
 *
 * Demographic detail for a single audience demographic
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class AudienceDemographicValue 
{
        /**
     * Unique key for demographic item
     *
     * @var string|null
     * @SerializedName("key")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $key = null;

    /**
     * Display name for demographic
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * Value of demographic item as a percent of total audience
     *
     * @var float|null
     * @SerializedName("ratio")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $ratio = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->key = array_key_exists('key', $data) ? $data['key'] : $this->key;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->ratio = array_key_exists('ratio', $data) ? $data['ratio'] : $this->ratio;
        }
    }

    /**
     * Gets key.
     *
     * @return string|null
     */
    public function getKey(): ?string
    {
        return $this->key;
    }

    /**
    * Sets key.
    *
    * @param string|null $key  Unique key for demographic item
    *
    * @return $this
    */
    public function setKey(?string $key = null): self
    {
        $this->key = $key;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Display name for demographic
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets ratio.
     *
     * @return float|null
     */
    public function getRatio(): ?float
    {
        return $this->ratio;
    }

    /**
    * Sets ratio.
    *
    * @param float|null $ratio  Value of demographic item as a percent of total audience
    *
    * @return $this
    */
    public function setRatio(?float $ratio = null): self
    {
        $this->ratio = $ratio;

        return $this;
    }



}


