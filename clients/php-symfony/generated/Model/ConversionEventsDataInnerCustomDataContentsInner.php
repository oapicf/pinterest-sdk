<?php
/**
 * ConversionEventsDataInnerCustomDataContentsInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ConversionEventsDataInnerCustomDataContentsInner model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ConversionEventsDataInnerCustomDataContentsInner 
{
        /**
     * The id of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * The price of a product. Accepted as a string in the request; it will be parsed into a double. This is the original item value before any discount. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
     *
     * @var string|null
     * @SerializedName("item_price")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $itemPrice = null;

    /**
     * The amount of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
     *
     * @var int|null
     * @SerializedName("quantity")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $quantity = null;

    /**
     * The name of a product.
     *
     * @var string|null
     * @SerializedName("item_name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $itemName = null;

    /**
     * The category of a product.
     *
     * @var string|null
     * @SerializedName("item_category")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $itemCategory = null;

    /**
     * The brand of a product.
     *
     * @var string|null
     * @SerializedName("item_brand")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $itemBrand = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->itemPrice = array_key_exists('itemPrice', $data) ? $data['itemPrice'] : $this->itemPrice;
            $this->quantity = array_key_exists('quantity', $data) ? $data['quantity'] : $this->quantity;
            $this->itemName = array_key_exists('itemName', $data) ? $data['itemName'] : $this->itemName;
            $this->itemCategory = array_key_exists('itemCategory', $data) ? $data['itemCategory'] : $this->itemCategory;
            $this->itemBrand = array_key_exists('itemBrand', $data) ? $data['itemBrand'] : $this->itemBrand;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  The id of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets itemPrice.
     *
     * @return string|null
     */
    public function getItemPrice(): ?string
    {
        return $this->itemPrice;
    }

    /**
    * Sets itemPrice.
    *
    * @param string|null $itemPrice  The price of a product. Accepted as a string in the request; it will be parsed into a double. This is the original item value before any discount. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
    *
    * @return $this
    */
    public function setItemPrice(?string $itemPrice = null): self
    {
        $this->itemPrice = $itemPrice;

        return $this;
    }




    /**
     * Gets quantity.
     *
     * @return int|null
     */
    public function getQuantity(): ?int
    {
        return $this->quantity;
    }

    /**
    * Sets quantity.
    *
    * @param int|null $quantity  The amount of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
    *
    * @return $this
    */
    public function setQuantity(?int $quantity = null): self
    {
        $this->quantity = $quantity;

        return $this;
    }




    /**
     * Gets itemName.
     *
     * @return string|null
     */
    public function getItemName(): ?string
    {
        return $this->itemName;
    }

    /**
    * Sets itemName.
    *
    * @param string|null $itemName  The name of a product.
    *
    * @return $this
    */
    public function setItemName(?string $itemName = null): self
    {
        $this->itemName = $itemName;

        return $this;
    }




    /**
     * Gets itemCategory.
     *
     * @return string|null
     */
    public function getItemCategory(): ?string
    {
        return $this->itemCategory;
    }

    /**
    * Sets itemCategory.
    *
    * @param string|null $itemCategory  The category of a product.
    *
    * @return $this
    */
    public function setItemCategory(?string $itemCategory = null): self
    {
        $this->itemCategory = $itemCategory;

        return $this;
    }




    /**
     * Gets itemBrand.
     *
     * @return string|null
     */
    public function getItemBrand(): ?string
    {
        return $this->itemBrand;
    }

    /**
    * Sets itemBrand.
    *
    * @param string|null $itemBrand  The brand of a product.
    *
    * @return $this
    */
    public function setItemBrand(?string $itemBrand = null): self
    {
        $this->itemBrand = $itemBrand;

        return $this;
    }



}


