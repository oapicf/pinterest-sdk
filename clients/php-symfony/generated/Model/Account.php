<?php
/**
 * Account
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Account model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Account 
{
        /**
     * Type of account
     *
     * @var string|null
     * @SerializedName("account_type")
     * @Type("string")
    */
    #[Assert\Choice(["PINNER", "BUSINESS"])]
    #[Assert\Type("string")]
    protected ?string $accountType = null;

    /**
     * User account ID.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $id = null;

    /**
     * @var string|null
     * @SerializedName("profile_image")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $profileImage = null;

    /**
     * @var string|null
     * @SerializedName("website_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $websiteUrl = null;

    /**
     * @var string|null
     * @SerializedName("username")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $username = null;

    /**
     * Profile about description.
     *
     * @var string|null
     * @SerializedName("about")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $about = null;

    /**
     * @var string|null
     * @SerializedName("business_name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $businessName = null;

    /**
     * User account board count.&lt;br/&gt;**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
     *
     * @var int|null
     * @SerializedName("board_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $boardCount = null;

    /**
     * User account pin count. This includes both created and saved pins.
     *
     * @var int|null
     * @SerializedName("pin_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $pinCount = null;

    /**
     * User account follower count.
     *
     * @var int|null
     * @SerializedName("follower_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $followerCount = null;

    /**
     * User account following count.
     *
     * @var int|null
     * @SerializedName("following_count")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $followingCount = null;

    /**
     * User account monthly views.
     *
     * @var int|null
     * @SerializedName("monthly_views")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $monthlyViews = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->accountType = array_key_exists('accountType', $data) ? $data['accountType'] : $this->accountType;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->profileImage = array_key_exists('profileImage', $data) ? $data['profileImage'] : $this->profileImage;
            $this->websiteUrl = array_key_exists('websiteUrl', $data) ? $data['websiteUrl'] : $this->websiteUrl;
            $this->username = array_key_exists('username', $data) ? $data['username'] : $this->username;
            $this->about = array_key_exists('about', $data) ? $data['about'] : $this->about;
            $this->businessName = array_key_exists('businessName', $data) ? $data['businessName'] : $this->businessName;
            $this->boardCount = array_key_exists('boardCount', $data) ? $data['boardCount'] : $this->boardCount;
            $this->pinCount = array_key_exists('pinCount', $data) ? $data['pinCount'] : $this->pinCount;
            $this->followerCount = array_key_exists('followerCount', $data) ? $data['followerCount'] : $this->followerCount;
            $this->followingCount = array_key_exists('followingCount', $data) ? $data['followingCount'] : $this->followingCount;
            $this->monthlyViews = array_key_exists('monthlyViews', $data) ? $data['monthlyViews'] : $this->monthlyViews;
        }
    }

    /**
     * Gets accountType.
     *
     * @return string|null
     */
    public function getAccountType(): ?string
    {
        return $this->accountType;
    }

    /**
    * Sets accountType.
    *
    * @param string|null $accountType  Type of account
    *
    * @return $this
    */
    public function setAccountType(?string $accountType = null): self
    {
        $this->accountType = $accountType;

        return $this;
    }




    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  User account ID.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets profileImage.
     *
     * @return string|null
     */
    public function getProfileImage(): ?string
    {
        return $this->profileImage;
    }

    /**
    * Sets profileImage.
    *
    * @param string|null $profileImage
    *
    * @return $this
    */
    public function setProfileImage(?string $profileImage = null): self
    {
        $this->profileImage = $profileImage;

        return $this;
    }




    /**
     * Gets websiteUrl.
     *
     * @return string|null
     */
    public function getWebsiteUrl(): ?string
    {
        return $this->websiteUrl;
    }

    /**
    * Sets websiteUrl.
    *
    * @param string|null $websiteUrl
    *
    * @return $this
    */
    public function setWebsiteUrl(?string $websiteUrl = null): self
    {
        $this->websiteUrl = $websiteUrl;

        return $this;
    }




    /**
     * Gets username.
     *
     * @return string|null
     */
    public function getUsername(): ?string
    {
        return $this->username;
    }

    /**
    * Sets username.
    *
    * @param string|null $username
    *
    * @return $this
    */
    public function setUsername(?string $username = null): self
    {
        $this->username = $username;

        return $this;
    }




    /**
     * Gets about.
     *
     * @return string|null
     */
    public function getAbout(): ?string
    {
        return $this->about;
    }

    /**
    * Sets about.
    *
    * @param string|null $about  Profile about description.
    *
    * @return $this
    */
    public function setAbout(?string $about = null): self
    {
        $this->about = $about;

        return $this;
    }




    /**
     * Gets businessName.
     *
     * @return string|null
     */
    public function getBusinessName(): ?string
    {
        return $this->businessName;
    }

    /**
    * Sets businessName.
    *
    * @param string|null $businessName
    *
    * @return $this
    */
    public function setBusinessName(?string $businessName = null): self
    {
        $this->businessName = $businessName;

        return $this;
    }




    /**
     * Gets boardCount.
     *
     * @return int|null
     */
    public function getBoardCount(): ?int
    {
        return $this->boardCount;
    }

    /**
    * Sets boardCount.
    *
    * @param int|null $boardCount  User account board count.<br/>**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
    *
    * @return $this
    */
    public function setBoardCount(?int $boardCount = null): self
    {
        $this->boardCount = $boardCount;

        return $this;
    }




    /**
     * Gets pinCount.
     *
     * @return int|null
     */
    public function getPinCount(): ?int
    {
        return $this->pinCount;
    }

    /**
    * Sets pinCount.
    *
    * @param int|null $pinCount  User account pin count. This includes both created and saved pins.
    *
    * @return $this
    */
    public function setPinCount(?int $pinCount = null): self
    {
        $this->pinCount = $pinCount;

        return $this;
    }




    /**
     * Gets followerCount.
     *
     * @return int|null
     */
    public function getFollowerCount(): ?int
    {
        return $this->followerCount;
    }

    /**
    * Sets followerCount.
    *
    * @param int|null $followerCount  User account follower count.
    *
    * @return $this
    */
    public function setFollowerCount(?int $followerCount = null): self
    {
        $this->followerCount = $followerCount;

        return $this;
    }




    /**
     * Gets followingCount.
     *
     * @return int|null
     */
    public function getFollowingCount(): ?int
    {
        return $this->followingCount;
    }

    /**
    * Sets followingCount.
    *
    * @param int|null $followingCount  User account following count.
    *
    * @return $this
    */
    public function setFollowingCount(?int $followingCount = null): self
    {
        $this->followingCount = $followingCount;

        return $this;
    }




    /**
     * Gets monthlyViews.
     *
     * @return int|null
     */
    public function getMonthlyViews(): ?int
    {
        return $this->monthlyViews;
    }

    /**
    * Sets monthlyViews.
    *
    * @param int|null $monthlyViews  User account monthly views.
    *
    * @return $this
    */
    public function setMonthlyViews(?int $monthlyViews = null): self
    {
        $this->monthlyViews = $monthlyViews;

        return $this;
    }



}


