<?php
/**
 * CustomerList
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CustomerList model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CustomerList 
{
        /**
     * Associated ad account ID.
     *
     * @var string|null
     * @SerializedName("ad_account_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $adAccountId = null;

    /**
     * Creation time. Unix timestamp in seconds.
     *
     * @var float|null
     * @SerializedName("created_time")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $createdTime = null;

    /**
     * Customer list ID.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * Customer list name.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * Total number of list updates.  List creation counts as one batch. Each &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append&lt;/a&gt; or &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
     *
     * @var float|null
     * @SerializedName("num_batches")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $numBatches = null;

    /**
     * Number of removed user records. In a &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\&quot;&gt;Remove API&lt;/a&gt; call, this counter increases even if the user is not found in the list.
     *
     * @var float|null
     * @SerializedName("num_removed_user_records")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $numRemovedUserRecords = null;

    /**
     * Number of uploaded user records. In an &lt;a href&#x3D;\&quot;/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\&quot;&gt;Append API&lt;/a&gt; call, this counter increases even if the uploaded user is already in the list.
     *
     * @var float|null
     * @SerializedName("num_uploaded_user_records")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $numUploadedUserRecords = null;

    /**
     * Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
     *
     * @var string|null
     * @SerializedName("status")
     * @Type("string")
    */
    #[Assert\Choice(["PROCESSING", "READY", "TOO_SMALL", "UPLOADING"])]
    #[Assert\Type("string")]
    protected ?string $status = null;

    /**
     * Always \&quot;customerlist\&quot;.
     *
     * @var string|null
     * @SerializedName("type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $type = null;

    /**
     * Last update time. Unix timestamp in seconds.
     *
     * @var float|null
     * @SerializedName("updated_time")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $updatedTime = null;

    /**
     * Customer list errors
     *
     * @var array|null
     * @SerializedName("exceptions")
     * @Type("array")
    */
    #[Assert\Type("array")]
    protected ?array $exceptions = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->adAccountId = array_key_exists('adAccountId', $data) ? $data['adAccountId'] : $this->adAccountId;
            $this->createdTime = array_key_exists('createdTime', $data) ? $data['createdTime'] : $this->createdTime;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->numBatches = array_key_exists('numBatches', $data) ? $data['numBatches'] : $this->numBatches;
            $this->numRemovedUserRecords = array_key_exists('numRemovedUserRecords', $data) ? $data['numRemovedUserRecords'] : $this->numRemovedUserRecords;
            $this->numUploadedUserRecords = array_key_exists('numUploadedUserRecords', $data) ? $data['numUploadedUserRecords'] : $this->numUploadedUserRecords;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->updatedTime = array_key_exists('updatedTime', $data) ? $data['updatedTime'] : $this->updatedTime;
            $this->exceptions = array_key_exists('exceptions', $data) ? $data['exceptions'] : $this->exceptions;
        }
    }

    /**
     * Gets adAccountId.
     *
     * @return string|null
     */
    public function getAdAccountId(): ?string
    {
        return $this->adAccountId;
    }

    /**
    * Sets adAccountId.
    *
    * @param string|null $adAccountId  Associated ad account ID.
    *
    * @return $this
    */
    public function setAdAccountId(?string $adAccountId = null): self
    {
        $this->adAccountId = $adAccountId;

        return $this;
    }




    /**
     * Gets createdTime.
     *
     * @return float|null
     */
    public function getCreatedTime(): ?float
    {
        return $this->createdTime;
    }

    /**
    * Sets createdTime.
    *
    * @param float|null $createdTime  Creation time. Unix timestamp in seconds.
    *
    * @return $this
    */
    public function setCreatedTime(?float $createdTime = null): self
    {
        $this->createdTime = $createdTime;

        return $this;
    }




    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Customer list ID.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Customer list name.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets numBatches.
     *
     * @return float|null
     */
    public function getNumBatches(): ?float
    {
        return $this->numBatches;
    }

    /**
    * Sets numBatches.
    *
    * @param float|null $numBatches  Total number of list updates.  List creation counts as one batch. Each <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append</a> or <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
    *
    * @return $this
    */
    public function setNumBatches(?float $numBatches = null): self
    {
        $this->numBatches = $numBatches;

        return $this;
    }




    /**
     * Gets numRemovedUserRecords.
     *
     * @return float|null
     */
    public function getNumRemovedUserRecords(): ?float
    {
        return $this->numRemovedUserRecords;
    }

    /**
    * Sets numRemovedUserRecords.
    *
    * @param float|null $numRemovedUserRecords  Number of removed user records. In a <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call, this counter increases even if the user is not found in the list.
    *
    * @return $this
    */
    public function setNumRemovedUserRecords(?float $numRemovedUserRecords = null): self
    {
        $this->numRemovedUserRecords = $numRemovedUserRecords;

        return $this;
    }




    /**
     * Gets numUploadedUserRecords.
     *
     * @return float|null
     */
    public function getNumUploadedUserRecords(): ?float
    {
        return $this->numUploadedUserRecords;
    }

    /**
    * Sets numUploadedUserRecords.
    *
    * @param float|null $numUploadedUserRecords  Number of uploaded user records. In an <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append API</a> call, this counter increases even if the uploaded user is already in the list.
    *
    * @return $this
    */
    public function setNumUploadedUserRecords(?float $numUploadedUserRecords = null): self
    {
        $this->numUploadedUserRecords = $numUploadedUserRecords;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param string|null $status  Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
    *
    * @return $this
    */
    public function setStatus(?string $status = null): self
    {
        $this->status = $status;

        return $this;
    }




    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param string|null $type  Always \"customerlist\".
    *
    * @return $this
    */
    public function setType(?string $type = null): self
    {
        $this->type = $type;

        return $this;
    }




    /**
     * Gets updatedTime.
     *
     * @return float|null
     */
    public function getUpdatedTime(): ?float
    {
        return $this->updatedTime;
    }

    /**
    * Sets updatedTime.
    *
    * @param float|null $updatedTime  Last update time. Unix timestamp in seconds.
    *
    * @return $this
    */
    public function setUpdatedTime(?float $updatedTime = null): self
    {
        $this->updatedTime = $updatedTime;

        return $this;
    }




    /**
     * Gets exceptions.
     *
     * @return array|null
     */
    public function getExceptions(): ?array
    {
        return $this->exceptions;
    }

    /**
    * Sets exceptions.
    *
    * @param array|null $exceptions  Customer list errors
    *
    * @return $this
    */
    public function setExceptions(?array $exceptions = null): self
    {
        $this->exceptions = $exceptions;

        return $this;
    }



}


