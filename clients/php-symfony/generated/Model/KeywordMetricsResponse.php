<?php
/**
 * KeywordMetricsResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the KeywordMetricsResponse model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class KeywordMetricsResponse 
{
        /**
     * Keyword name, e.g., \&quot;keyword\&quot;:\&quot;fashion outfits\&quot;
     *
     * @var string|null
     * @SerializedName("keyword")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $keyword = null;

    /**
     * @var KeywordMetrics|null
     * @SerializedName("metrics")
     * @Type("OpenAPI\Server\Model\KeywordMetrics")
    */
    #[Assert\Type("OpenAPI\Server\Model\KeywordMetrics")]
    protected ?KeywordMetrics $metrics = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->keyword = array_key_exists('keyword', $data) ? $data['keyword'] : $this->keyword;
            $this->metrics = array_key_exists('metrics', $data) ? $data['metrics'] : $this->metrics;
        }
    }

    /**
     * Gets keyword.
     *
     * @return string|null
     */
    public function getKeyword(): ?string
    {
        return $this->keyword;
    }

    /**
    * Sets keyword.
    *
    * @param string|null $keyword  Keyword name, e.g., \"keyword\":\"fashion outfits\"
    *
    * @return $this
    */
    public function setKeyword(?string $keyword = null): self
    {
        $this->keyword = $keyword;

        return $this;
    }




    /**
     * Gets metrics.
     *
     * @return KeywordMetrics|null
     */
    public function getMetrics(): ?KeywordMetrics
    {
        return $this->metrics;
    }

    /**
    * Sets metrics.
    *
    * @param KeywordMetrics|null $metrics
    *
    * @return $this
    */
    public function setMetrics(?KeywordMetrics $metrics = null): self
    {
        $this->metrics = $metrics;

        return $this;
    }



}


