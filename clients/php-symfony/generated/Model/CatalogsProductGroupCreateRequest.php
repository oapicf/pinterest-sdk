<?php
/**
 * CatalogsProductGroupCreateRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsProductGroupCreateRequest model.
 *
 * Request object for creating a product group.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsProductGroupCreateRequest 
{
        /**
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * boolean indicator of whether the product group is being featured or not
     *
     * @var bool|null
     * @SerializedName("is_featured")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $isFeatured = false;

    /**
     * @var CatalogsProductGroupFiltersRequest|null
     * @SerializedName("filters")
     * @Type("OpenAPI\Server\Model\CatalogsProductGroupFiltersRequest")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\CatalogsProductGroupFiltersRequest")]
    protected ?CatalogsProductGroupFiltersRequest $filters = null;

    /**
     * Catalog Feed id pertaining to the catalog product group.
     *
     * @var string|null
     * @SerializedName("feed_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $feedId = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->isFeatured = array_key_exists('isFeatured', $data) ? $data['isFeatured'] : $this->isFeatured;
            $this->filters = array_key_exists('filters', $data) ? $data['filters'] : $this->filters;
            $this->feedId = array_key_exists('feedId', $data) ? $data['feedId'] : $this->feedId;
        }
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name
    *
    * @return $this
    */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets isFeatured.
     *
     * @return bool|null
     */
    public function isIsFeatured(): ?bool
    {
        return $this->isFeatured;
    }

    /**
    * Sets isFeatured.
    *
    * @param bool|null $isFeatured  boolean indicator of whether the product group is being featured or not
    *
    * @return $this
    */
    public function setIsFeatured(?bool $isFeatured = null): self
    {
        $this->isFeatured = $isFeatured;

        return $this;
    }




    /**
     * Gets filters.
     *
     * @return CatalogsProductGroupFiltersRequest|null
     */
    public function getFilters(): ?CatalogsProductGroupFiltersRequest
    {
        return $this->filters;
    }

    /**
    * Sets filters.
    *
    * @param CatalogsProductGroupFiltersRequest|null $filters
    *
    * @return $this
    */
    public function setFilters(?CatalogsProductGroupFiltersRequest $filters): self
    {
        $this->filters = $filters;

        return $this;
    }




    /**
     * Gets feedId.
     *
     * @return string|null
     */
    public function getFeedId(): ?string
    {
        return $this->feedId;
    }

    /**
    * Sets feedId.
    *
    * @param string|null $feedId  Catalog Feed id pertaining to the catalog product group.
    *
    * @return $this
    */
    public function setFeedId(?string $feedId): self
    {
        $this->feedId = $feedId;

        return $this;
    }



}


