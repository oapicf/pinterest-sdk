<?php
/**
 * BulkDownloadRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BulkDownloadRequest model.
 *
 * Ad entities to get in bulk request.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BulkDownloadRequest 
{
        /**
     * All entity types specified will be downloaded. Fewer types result in faster downloads.
     *
     * @var []|null
     * @SerializedName("entity_types")
     * @Accessor(getter="getSerializedEntityTypes", setter="setDeserializedEntityTypes")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\BulkEntityType"),
    ])]
    #[Assert\Count(max: 5)]
    #[Assert\Count(min: 1)]
    protected ?array $entityTypes = null;

    /**
     * All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
     *
     * @var string[]|null
     * @SerializedName("entity_ids")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $entityIds = null;

    /**
     * Unix UTC timestamp to retrieve all entities that have changed since this time.
     *
     * @var string|null
     * @SerializedName("updated_since")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $updatedSince = null;

    /**
     * @var BulkDownloadRequestCampaignFilter|null
     * @SerializedName("campaign_filter")
     * @Type("OpenAPI\Server\Model\BulkDownloadRequestCampaignFilter")
    */
    #[Assert\Type("OpenAPI\Server\Model\BulkDownloadRequestCampaignFilter")]
    protected ?BulkDownloadRequestCampaignFilter $campaignFilter = null;

    /**
     * @var BulkOutputFormat|null
     * @SerializedName("output_format")
    * @Accessor(getter="getSerializedOutputFormat", setter="setDeserializedOutputFormat")
    * @Type("string")
    */
    protected ?BulkOutputFormat $outputFormat = 'JSON';

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->entityTypes = array_key_exists('entityTypes', $data) ? $data['entityTypes'] : $this->entityTypes;
            $this->entityIds = array_key_exists('entityIds', $data) ? $data['entityIds'] : $this->entityIds;
            $this->updatedSince = array_key_exists('updatedSince', $data) ? $data['updatedSince'] : $this->updatedSince;
            $this->campaignFilter = array_key_exists('campaignFilter', $data) ? $data['campaignFilter'] : $this->campaignFilter;
            $this->outputFormat = array_key_exists('outputFormat', $data) ? $data['outputFormat'] : $this->outputFormat;
        }
    }

    /**
     * Gets entityTypes.
     *
     * @return []|null
     */
    public function getEntityTypes(): ?array
    {
        return $this->entityTypes;
    }

    /**
    * Sets entityTypes.
    *
    * @param []|null $entityTypes  All entity types specified will be downloaded. Fewer types result in faster downloads.
    *
    * @return $this
    */
    public function setEntityTypes(?array $entityTypes = null): self
    {
        $this->entityTypes = $entityTypes;

        return $this;
    }


    /**
    * Gets entityTypes for serialization.
    *
    * @return array
    */
    public function getSerializedEntityTypes(): array
    {
        return array_map(
            static fn ($value) => $value?->value ? (string) $value->value : null,
            $this->entityTypes ?? []
        );
    }

    /**
    * Sets entityTypes.
    *
    * @param ?array $entityTypes
    *
    * @return $this
    */
    public function setDeserializedEntityTypes(?array $entityTypes = []): self
    {
        $this->entityTypes = array_map(
            static function ($value) {
                if (is_string($value)) {
                    $value = BulkEntityType::tryFrom($value);
                }

                return $value;
            },
            $entityTypes ?? []
        );

        return $this;
    }


    /**
     * Gets entityIds.
     *
     * @return string[]|null
     */
    public function getEntityIds(): ?array
    {
        return $this->entityIds;
    }

    /**
    * Sets entityIds.
    *
    * @param string[]|null $entityIds  All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
    *
    * @return $this
    */
    public function setEntityIds(?array $entityIds = null): self
    {
        $this->entityIds = $entityIds;

        return $this;
    }




    /**
     * Gets updatedSince.
     *
     * @return string|null
     */
    public function getUpdatedSince(): ?string
    {
        return $this->updatedSince;
    }

    /**
    * Sets updatedSince.
    *
    * @param string|null $updatedSince  Unix UTC timestamp to retrieve all entities that have changed since this time.
    *
    * @return $this
    */
    public function setUpdatedSince(?string $updatedSince = null): self
    {
        $this->updatedSince = $updatedSince;

        return $this;
    }




    /**
     * Gets campaignFilter.
     *
     * @return BulkDownloadRequestCampaignFilter|null
     */
    public function getCampaignFilter(): ?BulkDownloadRequestCampaignFilter
    {
        return $this->campaignFilter;
    }

    /**
    * Sets campaignFilter.
    *
    * @param BulkDownloadRequestCampaignFilter|null $campaignFilter
    *
    * @return $this
    */
    public function setCampaignFilter(?BulkDownloadRequestCampaignFilter $campaignFilter = null): self
    {
        $this->campaignFilter = $campaignFilter;

        return $this;
    }




    /**
     * Gets outputFormat.
     *
     * @return BulkOutputFormat|null
     */
    public function getOutputFormat(): ?BulkOutputFormat
    {
        return $this->outputFormat;
    }

    /**
    * Sets outputFormat.
    *
    * @param BulkOutputFormat|null $outputFormat
    *
    * @return $this
    */
    public function setOutputFormat(?BulkOutputFormat $outputFormat = null): self
    {
        $this->outputFormat = $outputFormat;

        return $this;
    }

    /**
    * Gets outputFormat for serialization.
    *
    * @return string|null
    */
    public function getSerializedOutputFormat(): string|null
    {
        return !is_null($this->outputFormat?->value) ? (string) $this->outputFormat->value : null;
    }

    /**
    * Sets outputFormat.
    *
    * @param string|BulkOutputFormat|null $outputFormat
    *
    * @return $this
    */
    public function setDeserializedOutputFormat(string|BulkOutputFormat|null $outputFormat = null): self
    {
        if (is_string($outputFormat)) {
            $outputFormat = BulkOutputFormat::tryFrom($outputFormat);
        }

        $this->outputFormat = $outputFormat;

        return $this;
    }


}


