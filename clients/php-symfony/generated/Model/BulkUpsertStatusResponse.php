<?php
/**
 * BulkUpsertStatusResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BulkUpsertStatusResponse model.
 *
 * ID of the bulk request.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BulkUpsertStatusResponse 
{
        /**
     * @var BulkUpsertStatus|null
     * @SerializedName("status")
    * @Accessor(getter="getSerializedStatus", setter="setDeserializedStatus")
    * @Type("string")
    */
    protected ?BulkUpsertStatus $status = null;

    /**
     * @var string|null
     * @SerializedName("result_url")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $resultUrl = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->resultUrl = array_key_exists('resultUrl', $data) ? $data['resultUrl'] : $this->resultUrl;
        }
    }

    /**
     * Gets status.
     *
     * @return BulkUpsertStatus|null
     */
    public function getStatus(): ?BulkUpsertStatus
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param BulkUpsertStatus|null $status
    *
    * @return $this
    */
    public function setStatus(?BulkUpsertStatus $status = null): self
    {
        $this->status = $status;

        return $this;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return !is_null($this->status?->value) ? (string) $this->status->value : null;
    }

    /**
    * Sets status.
    *
    * @param string|BulkUpsertStatus|null $status
    *
    * @return $this
    */
    public function setDeserializedStatus(string|BulkUpsertStatus|null $status = null): self
    {
        if (is_string($status)) {
            $status = BulkUpsertStatus::tryFrom($status);
        }

        $this->status = $status;

        return $this;
    }



    /**
     * Gets resultUrl.
     *
     * @return string|null
     */
    public function getResultUrl(): ?string
    {
        return $this->resultUrl;
    }

    /**
    * Sets resultUrl.
    *
    * @param string|null $resultUrl
    *
    * @return $this
    */
    public function setResultUrl(?string $resultUrl = null): self
    {
        $this->resultUrl = $resultUrl;

        return $this;
    }



}


