<?php
/**
 * CatalogsItemValidationIssues
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsItemValidationIssues model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsItemValidationIssues 
{
        /**
     * Item number based on order of appearance in the Catalogs Feed. For example, &#39;0&#39; refers to first item found in a feed that was downloaded from a &#39;location&#39; specified during feed creation.
     *
     * @var int|null
     * @SerializedName("item_number")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $itemNumber = null;

    /**
     * The merchant-created unique ID that represents the product.
     *
     * @var string|null
     * @SerializedName("item_id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $itemId = null;

    /**
     * @var CatalogsItemValidationErrors|null
     * @SerializedName("errors")
     * @Type("OpenAPI\Server\Model\CatalogsItemValidationErrors")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\CatalogsItemValidationErrors")]
    protected ?CatalogsItemValidationErrors $errors = null;

    /**
     * @var CatalogsItemValidationWarnings|null
     * @SerializedName("warnings")
     * @Type("OpenAPI\Server\Model\CatalogsItemValidationWarnings")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\CatalogsItemValidationWarnings")]
    protected ?CatalogsItemValidationWarnings $warnings = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->itemNumber = array_key_exists('itemNumber', $data) ? $data['itemNumber'] : $this->itemNumber;
            $this->itemId = array_key_exists('itemId', $data) ? $data['itemId'] : $this->itemId;
            $this->errors = array_key_exists('errors', $data) ? $data['errors'] : $this->errors;
            $this->warnings = array_key_exists('warnings', $data) ? $data['warnings'] : $this->warnings;
        }
    }

    /**
     * Gets itemNumber.
     *
     * @return int|null
     */
    public function getItemNumber(): ?int
    {
        return $this->itemNumber;
    }

    /**
    * Sets itemNumber.
    *
    * @param int|null $itemNumber  Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation.
    *
    * @return $this
    */
    public function setItemNumber(?int $itemNumber): self
    {
        $this->itemNumber = $itemNumber;

        return $this;
    }




    /**
     * Gets itemId.
     *
     * @return string|null
     */
    public function getItemId(): ?string
    {
        return $this->itemId;
    }

    /**
    * Sets itemId.
    *
    * @param string|null $itemId  The merchant-created unique ID that represents the product.
    *
    * @return $this
    */
    public function setItemId(?string $itemId): self
    {
        $this->itemId = $itemId;

        return $this;
    }




    /**
     * Gets errors.
     *
     * @return CatalogsItemValidationErrors|null
     */
    public function getErrors(): ?CatalogsItemValidationErrors
    {
        return $this->errors;
    }

    /**
    * Sets errors.
    *
    * @param CatalogsItemValidationErrors|null $errors
    *
    * @return $this
    */
    public function setErrors(?CatalogsItemValidationErrors $errors): self
    {
        $this->errors = $errors;

        return $this;
    }




    /**
     * Gets warnings.
     *
     * @return CatalogsItemValidationWarnings|null
     */
    public function getWarnings(): ?CatalogsItemValidationWarnings
    {
        return $this->warnings;
    }

    /**
    * Sets warnings.
    *
    * @param CatalogsItemValidationWarnings|null $warnings
    *
    * @return $this
    */
    public function setWarnings(?CatalogsItemValidationWarnings $warnings): self
    {
        $this->warnings = $warnings;

        return $this;
    }



}


