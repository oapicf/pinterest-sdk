<?php
/**
 * LineItem
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the LineItem model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class LineItem 
{
        /**
     * Product brand. For example, \&quot;Parker\&quot;.
     *
     * @var string|null
     * @SerializedName("product_brand")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $productBrand = null;

    /**
     * Product category. For example, \&quot;Shoes\&quot;.
     *
     * @var string|null
     * @SerializedName("product_category")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $productCategory = null;

    /**
     * Product ID. For example, 1414.
     *
     * @var int|null
     * @SerializedName("product_id")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $productId = null;

    /**
     * Product name. For example, \&quot;Parker Boots\&quot;.
     *
     * @var string|null
     * @SerializedName("product_name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $productName = null;

    /**
     * Product price. For example, \&quot;99.99\&quot;.
     *
     * @var string|null
     * @SerializedName("product_price")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $productPrice = null;

    /**
     * Product quantity. For example, 2.
     *
     * @var int|null
     * @SerializedName("product_quantity")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $productQuantity = null;

    /**
     * Product variant. For example, \&quot;Red\&quot;.
     *
     * @var string|null
     * @SerializedName("product_variant")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $productVariant = null;

    /**
     * Product variant ID. For example, \&quot;1414-34832\&quot;.
     *
     * @var string|null
     * @SerializedName("product_variant_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $productVariantId = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->productBrand = array_key_exists('productBrand', $data) ? $data['productBrand'] : $this->productBrand;
            $this->productCategory = array_key_exists('productCategory', $data) ? $data['productCategory'] : $this->productCategory;
            $this->productId = array_key_exists('productId', $data) ? $data['productId'] : $this->productId;
            $this->productName = array_key_exists('productName', $data) ? $data['productName'] : $this->productName;
            $this->productPrice = array_key_exists('productPrice', $data) ? $data['productPrice'] : $this->productPrice;
            $this->productQuantity = array_key_exists('productQuantity', $data) ? $data['productQuantity'] : $this->productQuantity;
            $this->productVariant = array_key_exists('productVariant', $data) ? $data['productVariant'] : $this->productVariant;
            $this->productVariantId = array_key_exists('productVariantId', $data) ? $data['productVariantId'] : $this->productVariantId;
        }
    }

    /**
     * Gets productBrand.
     *
     * @return string|null
     */
    public function getProductBrand(): ?string
    {
        return $this->productBrand;
    }

    /**
    * Sets productBrand.
    *
    * @param string|null $productBrand  Product brand. For example, \"Parker\".
    *
    * @return $this
    */
    public function setProductBrand(?string $productBrand = null): self
    {
        $this->productBrand = $productBrand;

        return $this;
    }




    /**
     * Gets productCategory.
     *
     * @return string|null
     */
    public function getProductCategory(): ?string
    {
        return $this->productCategory;
    }

    /**
    * Sets productCategory.
    *
    * @param string|null $productCategory  Product category. For example, \"Shoes\".
    *
    * @return $this
    */
    public function setProductCategory(?string $productCategory = null): self
    {
        $this->productCategory = $productCategory;

        return $this;
    }




    /**
     * Gets productId.
     *
     * @return int|null
     */
    public function getProductId(): ?int
    {
        return $this->productId;
    }

    /**
    * Sets productId.
    *
    * @param int|null $productId  Product ID. For example, 1414.
    *
    * @return $this
    */
    public function setProductId(?int $productId = null): self
    {
        $this->productId = $productId;

        return $this;
    }




    /**
     * Gets productName.
     *
     * @return string|null
     */
    public function getProductName(): ?string
    {
        return $this->productName;
    }

    /**
    * Sets productName.
    *
    * @param string|null $productName  Product name. For example, \"Parker Boots\".
    *
    * @return $this
    */
    public function setProductName(?string $productName = null): self
    {
        $this->productName = $productName;

        return $this;
    }




    /**
     * Gets productPrice.
     *
     * @return string|null
     */
    public function getProductPrice(): ?string
    {
        return $this->productPrice;
    }

    /**
    * Sets productPrice.
    *
    * @param string|null $productPrice  Product price. For example, \"99.99\".
    *
    * @return $this
    */
    public function setProductPrice(?string $productPrice = null): self
    {
        $this->productPrice = $productPrice;

        return $this;
    }




    /**
     * Gets productQuantity.
     *
     * @return int|null
     */
    public function getProductQuantity(): ?int
    {
        return $this->productQuantity;
    }

    /**
    * Sets productQuantity.
    *
    * @param int|null $productQuantity  Product quantity. For example, 2.
    *
    * @return $this
    */
    public function setProductQuantity(?int $productQuantity = null): self
    {
        $this->productQuantity = $productQuantity;

        return $this;
    }




    /**
     * Gets productVariant.
     *
     * @return string|null
     */
    public function getProductVariant(): ?string
    {
        return $this->productVariant;
    }

    /**
    * Sets productVariant.
    *
    * @param string|null $productVariant  Product variant. For example, \"Red\".
    *
    * @return $this
    */
    public function setProductVariant(?string $productVariant = null): self
    {
        $this->productVariant = $productVariant;

        return $this;
    }




    /**
     * Gets productVariantId.
     *
     * @return string|null
     */
    public function getProductVariantId(): ?string
    {
        return $this->productVariantId;
    }

    /**
    * Sets productVariantId.
    *
    * @param string|null $productVariantId  Product variant ID. For example, \"1414-34832\".
    *
    * @return $this
    */
    public function setProductVariantId(?string $productVariantId = null): self
    {
        $this->productVariantId = $productVariantId;

        return $this;
    }



}


