<?php
/**
 * ImageMetadataImages
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ImageMetadataImages model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ImageMetadataImages 
{
        /**
     * @var ImageDetails|null
     * @SerializedName("150x150")
     * @Type("OpenAPI\Server\Model\ImageDetails")
    */
    #[Assert\Type("OpenAPI\Server\Model\ImageDetails")]
    protected ?ImageDetails $_150x150 = null;

    /**
     * @var ImageDetails|null
     * @SerializedName("400x300")
     * @Type("OpenAPI\Server\Model\ImageDetails")
    */
    #[Assert\Type("OpenAPI\Server\Model\ImageDetails")]
    protected ?ImageDetails $_400x300 = null;

    /**
     * @var ImageDetails|null
     * @SerializedName("600x")
     * @Type("OpenAPI\Server\Model\ImageDetails")
    */
    #[Assert\Type("OpenAPI\Server\Model\ImageDetails")]
    protected ?ImageDetails $_600x = null;

    /**
     * @var ImageDetails|null
     * @SerializedName("1200x")
     * @Type("OpenAPI\Server\Model\ImageDetails")
    */
    #[Assert\Type("OpenAPI\Server\Model\ImageDetails")]
    protected ?ImageDetails $_1200x = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->_150x150 = array_key_exists('_150x150', $data) ? $data['_150x150'] : $this->_150x150;
            $this->_400x300 = array_key_exists('_400x300', $data) ? $data['_400x300'] : $this->_400x300;
            $this->_600x = array_key_exists('_600x', $data) ? $data['_600x'] : $this->_600x;
            $this->_1200x = array_key_exists('_1200x', $data) ? $data['_1200x'] : $this->_1200x;
        }
    }

    /**
     * Gets _150x150.
     *
     * @return ImageDetails|null
     */
    public function get150x150(): ?ImageDetails
    {
        return $this->_150x150;
    }

    /**
    * Sets _150x150.
    *
    * @param ImageDetails|null $_150x150
    *
    * @return $this
    */
    public function set150x150(?ImageDetails $_150x150 = null): self
    {
        $this->_150x150 = $_150x150;

        return $this;
    }




    /**
     * Gets _400x300.
     *
     * @return ImageDetails|null
     */
    public function get400x300(): ?ImageDetails
    {
        return $this->_400x300;
    }

    /**
    * Sets _400x300.
    *
    * @param ImageDetails|null $_400x300
    *
    * @return $this
    */
    public function set400x300(?ImageDetails $_400x300 = null): self
    {
        $this->_400x300 = $_400x300;

        return $this;
    }




    /**
     * Gets _600x.
     *
     * @return ImageDetails|null
     */
    public function get600x(): ?ImageDetails
    {
        return $this->_600x;
    }

    /**
    * Sets _600x.
    *
    * @param ImageDetails|null $_600x
    *
    * @return $this
    */
    public function set600x(?ImageDetails $_600x = null): self
    {
        $this->_600x = $_600x;

        return $this;
    }




    /**
     * Gets _1200x.
     *
     * @return ImageDetails|null
     */
    public function get1200x(): ?ImageDetails
    {
        return $this->_1200x;
    }

    /**
    * Sets _1200x.
    *
    * @param ImageDetails|null $_1200x
    *
    * @return $this
    */
    public function set1200x(?ImageDetails $_1200x = null): self
    {
        $this->_1200x = $_1200x;

        return $this;
    }



}


