<?php
/**
 * TemplateResponseDateRangeAbsoluteDateRange
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the TemplateResponseDateRangeAbsoluteDateRange model.
 *
 * The absolute date range of the template
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class TemplateResponseDateRangeAbsoluteDateRange 
{
        /**
     * The date range type
     *
     * @var string|null
     * @SerializedName("type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $type = null;

    /**
     * The start date of the date range
     *
     * @var float|null
     * @SerializedName("start_date")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $startDate = null;

    /**
     * The end date of the date range
     *
     * @var float|null
     * @SerializedName("end_date")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $endDate = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->startDate = array_key_exists('startDate', $data) ? $data['startDate'] : $this->startDate;
            $this->endDate = array_key_exists('endDate', $data) ? $data['endDate'] : $this->endDate;
        }
    }

    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param string|null $type  The date range type
    *
    * @return $this
    */
    public function setType(?string $type = null): self
    {
        $this->type = $type;

        return $this;
    }




    /**
     * Gets startDate.
     *
     * @return float|null
     */
    public function getStartDate(): ?float
    {
        return $this->startDate;
    }

    /**
    * Sets startDate.
    *
    * @param float|null $startDate  The start date of the date range
    *
    * @return $this
    */
    public function setStartDate(?float $startDate = null): self
    {
        $this->startDate = $startDate;

        return $this;
    }




    /**
     * Gets endDate.
     *
     * @return float|null
     */
    public function getEndDate(): ?float
    {
        return $this->endDate;
    }

    /**
    * Sets endDate.
    *
    * @param float|null $endDate  The end date of the date range
    *
    * @return $this
    */
    public function setEndDate(?float $endDate = null): self
    {
        $this->endDate = $endDate;

        return $this;
    }



}


