<?php
/**
 * BaseInviteDataResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BaseInviteDataResponse model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BaseInviteDataResponse 
{
        /**
     * Unique identifier of the invite/request.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $id = null;

    /**
     * @var BaseInviteDataResponseInviteData|null
     * @SerializedName("invite_data")
     * @Type("OpenAPI\Server\Model\BaseInviteDataResponseInviteData")
    */
    #[Assert\Type("OpenAPI\Server\Model\BaseInviteDataResponseInviteData")]
    protected ?BaseInviteDataResponseInviteData $inviteData = null;

    /**
     * Indicates whether the invite/request was received.
     *
     * @var bool|null
     * @SerializedName("is_received_invite")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $isReceivedInvite = null;

    /**
     * Metadata for the member/partner that was sent the invite/request.
     *
     * @var BusinessAccessUserSummary|null
     * @SerializedName("user")
     * @Type("OpenAPI\Server\Model\BusinessAccessUserSummary")
    */
    #[Assert\Type("OpenAPI\Server\Model\BusinessAccessUserSummary")]
    protected ?BusinessAccessUserSummary $user = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->inviteData = array_key_exists('inviteData', $data) ? $data['inviteData'] : $this->inviteData;
            $this->isReceivedInvite = array_key_exists('isReceivedInvite', $data) ? $data['isReceivedInvite'] : $this->isReceivedInvite;
            $this->user = array_key_exists('user', $data) ? $data['user'] : $this->user;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Unique identifier of the invite/request.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets inviteData.
     *
     * @return BaseInviteDataResponseInviteData|null
     */
    public function getInviteData(): ?BaseInviteDataResponseInviteData
    {
        return $this->inviteData;
    }

    /**
    * Sets inviteData.
    *
    * @param BaseInviteDataResponseInviteData|null $inviteData
    *
    * @return $this
    */
    public function setInviteData(?BaseInviteDataResponseInviteData $inviteData = null): self
    {
        $this->inviteData = $inviteData;

        return $this;
    }




    /**
     * Gets isReceivedInvite.
     *
     * @return bool|null
     */
    public function isIsReceivedInvite(): ?bool
    {
        return $this->isReceivedInvite;
    }

    /**
    * Sets isReceivedInvite.
    *
    * @param bool|null $isReceivedInvite  Indicates whether the invite/request was received.
    *
    * @return $this
    */
    public function setIsReceivedInvite(?bool $isReceivedInvite = null): self
    {
        $this->isReceivedInvite = $isReceivedInvite;

        return $this;
    }




    /**
     * Gets user.
     *
     * @return BusinessAccessUserSummary|null
     */
    public function getUser(): ?BusinessAccessUserSummary
    {
        return $this->user;
    }

    /**
    * Sets user.
    *
    * @param BusinessAccessUserSummary|null $user  Metadata for the member/partner that was sent the invite/request.
    *
    * @return $this
    */
    public function setUser(?BusinessAccessUserSummary $user = null): self
    {
        $this->user = $user;

        return $this;
    }



}


