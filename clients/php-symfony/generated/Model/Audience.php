<?php
/**
 * Audience
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Audience model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class Audience 
{
        /**
     * Ad account ID.
     *
     * @var string|null
     * @SerializedName("ad_account_id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $adAccountId = null;

    /**
     * Audience ID.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Regex("/^\\d+$/")]
    protected ?string $id = null;

    /**
     * Audience name.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * &lt;a href&#x3D;\&quot;/docs/reference/glossary/#Audience Types\&quot;&gt;Audience types&lt;/a&gt;: ACTALIKE, ENGAGEMENT, CUSTOMER_LIST and VISITOR
     *
     * @var string|null
     * @SerializedName("audience_type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $audienceType = null;

    /**
     * Audience description.
     *
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * @var AudienceRule|null
     * @SerializedName("rule")
     * @Type("OpenAPI\Server\Model\AudienceRule")
    */
    #[Assert\Type("OpenAPI\Server\Model\AudienceRule")]
    protected ?AudienceRule $rule = null;

    /**
     * Audience size.
     *
     * @var int|null
     * @SerializedName("size")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $size = null;

    /**
     * Audience status. READY, INITIALIZING, TOO_SMALL - Each audience list needs to have at least 100 people with Pinterest accounts before you can start using it.
     *
     * @var string|null
     * @SerializedName("status")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $status = null;

    /**
     * Always \&quot;audience\&quot;.
     *
     * @var string|null
     * @SerializedName("type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $type = null;

    /**
     * Creation time. Unix timestamp in seconds.
     *
     * @var int|null
     * @SerializedName("created_timestamp")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $createdTimestamp = null;

    /**
     * Last update time. Unix timestamp in seconds.
     *
     * @var int|null
     * @SerializedName("updated_timestamp")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $updatedTimestamp = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->adAccountId = array_key_exists('adAccountId', $data) ? $data['adAccountId'] : $this->adAccountId;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->audienceType = array_key_exists('audienceType', $data) ? $data['audienceType'] : $this->audienceType;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->rule = array_key_exists('rule', $data) ? $data['rule'] : $this->rule;
            $this->size = array_key_exists('size', $data) ? $data['size'] : $this->size;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->createdTimestamp = array_key_exists('createdTimestamp', $data) ? $data['createdTimestamp'] : $this->createdTimestamp;
            $this->updatedTimestamp = array_key_exists('updatedTimestamp', $data) ? $data['updatedTimestamp'] : $this->updatedTimestamp;
        }
    }

    /**
     * Gets adAccountId.
     *
     * @return string|null
     */
    public function getAdAccountId(): ?string
    {
        return $this->adAccountId;
    }

    /**
    * Sets adAccountId.
    *
    * @param string|null $adAccountId  Ad account ID.
    *
    * @return $this
    */
    public function setAdAccountId(?string $adAccountId = null): self
    {
        $this->adAccountId = $adAccountId;

        return $this;
    }




    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Audience ID.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Audience name.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets audienceType.
     *
     * @return string|null
     */
    public function getAudienceType(): ?string
    {
        return $this->audienceType;
    }

    /**
    * Sets audienceType.
    *
    * @param string|null $audienceType  <a href=\"/docs/reference/glossary/#Audience Types\">Audience types</a>: ACTALIKE, ENGAGEMENT, CUSTOMER_LIST and VISITOR
    *
    * @return $this
    */
    public function setAudienceType(?string $audienceType = null): self
    {
        $this->audienceType = $audienceType;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description  Audience description.
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets rule.
     *
     * @return AudienceRule|null
     */
    public function getRule(): ?AudienceRule
    {
        return $this->rule;
    }

    /**
    * Sets rule.
    *
    * @param AudienceRule|null $rule
    *
    * @return $this
    */
    public function setRule(?AudienceRule $rule = null): self
    {
        $this->rule = $rule;

        return $this;
    }




    /**
     * Gets size.
     *
     * @return int|null
     */
    public function getSize(): ?int
    {
        return $this->size;
    }

    /**
    * Sets size.
    *
    * @param int|null $size  Audience size.
    *
    * @return $this
    */
    public function setSize(?int $size = null): self
    {
        $this->size = $size;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param string|null $status  Audience status. READY, INITIALIZING, TOO_SMALL - Each audience list needs to have at least 100 people with Pinterest accounts before you can start using it.
    *
    * @return $this
    */
    public function setStatus(?string $status = null): self
    {
        $this->status = $status;

        return $this;
    }




    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param string|null $type  Always \"audience\".
    *
    * @return $this
    */
    public function setType(?string $type = null): self
    {
        $this->type = $type;

        return $this;
    }




    /**
     * Gets createdTimestamp.
     *
     * @return int|null
     */
    public function getCreatedTimestamp(): ?int
    {
        return $this->createdTimestamp;
    }

    /**
    * Sets createdTimestamp.
    *
    * @param int|null $createdTimestamp  Creation time. Unix timestamp in seconds.
    *
    * @return $this
    */
    public function setCreatedTimestamp(?int $createdTimestamp = null): self
    {
        $this->createdTimestamp = $createdTimestamp;

        return $this;
    }




    /**
     * Gets updatedTimestamp.
     *
     * @return int|null
     */
    public function getUpdatedTimestamp(): ?int
    {
        return $this->updatedTimestamp;
    }

    /**
    * Sets updatedTimestamp.
    *
    * @param int|null $updatedTimestamp  Last update time. Unix timestamp in seconds.
    *
    * @return $this
    */
    public function setUpdatedTimestamp(?int $updatedTimestamp = null): self
    {
        $this->updatedTimestamp = $updatedTimestamp;

        return $this;
    }



}


