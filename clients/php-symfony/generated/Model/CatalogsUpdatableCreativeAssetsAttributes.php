<?php
/**
 * CatalogsUpdatableCreativeAssetsAttributes
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CatalogsUpdatableCreativeAssetsAttributes model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CatalogsUpdatableCreativeAssetsAttributes 
{
        /**
     * The name of the creative assets.
     *
     * @var string|null
     * @SerializedName("title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $title = null;

    /**
     * Brief description of the creative assets.
     *
     * @var string|null
     * @SerializedName("description")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $description = null;

    /**
     * Link to the creative assets page.
     *
     * @var string|null
     * @SerializedName("link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $link = null;

    /**
     * IOS deep link to the creative assets page.
     *
     * @var string|null
     * @SerializedName("ios_deep_link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $iosDeepLink = null;

    /**
     * Link to the creative assets page.
     *
     * @var string|null
     * @SerializedName("android_deep_link")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $androidDeepLink = null;

    /**
     * The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
     *
     * @var string|null
     * @SerializedName("google_product_category")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $googleProductCategory = null;

    /**
     * Custom grouping of creative assets.
     *
     * @var string|null
     * @SerializedName("custom_label_0")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $customLabel0 = null;

    /**
     * Custom grouping of creative assets.
     *
     * @var string|null
     * @SerializedName("custom_label_1")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $customLabel1 = null;

    /**
     * Custom grouping of creative assets.
     *
     * @var string|null
     * @SerializedName("custom_label_2")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $customLabel2 = null;

    /**
     * Custom grouping of creative assets.
     *
     * @var string|null
     * @SerializedName("custom_label_3")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $customLabel3 = null;

    /**
     * Custom grouping of creative assets.
     *
     * @var string|null
     * @SerializedName("custom_label_4")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $customLabel4 = null;

    /**
     * Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.
     *
     * @var string|null
     * @SerializedName("visibility")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $visibility = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
            $this->description = array_key_exists('description', $data) ? $data['description'] : $this->description;
            $this->link = array_key_exists('link', $data) ? $data['link'] : $this->link;
            $this->iosDeepLink = array_key_exists('iosDeepLink', $data) ? $data['iosDeepLink'] : $this->iosDeepLink;
            $this->androidDeepLink = array_key_exists('androidDeepLink', $data) ? $data['androidDeepLink'] : $this->androidDeepLink;
            $this->googleProductCategory = array_key_exists('googleProductCategory', $data) ? $data['googleProductCategory'] : $this->googleProductCategory;
            $this->customLabel0 = array_key_exists('customLabel0', $data) ? $data['customLabel0'] : $this->customLabel0;
            $this->customLabel1 = array_key_exists('customLabel1', $data) ? $data['customLabel1'] : $this->customLabel1;
            $this->customLabel2 = array_key_exists('customLabel2', $data) ? $data['customLabel2'] : $this->customLabel2;
            $this->customLabel3 = array_key_exists('customLabel3', $data) ? $data['customLabel3'] : $this->customLabel3;
            $this->customLabel4 = array_key_exists('customLabel4', $data) ? $data['customLabel4'] : $this->customLabel4;
            $this->visibility = array_key_exists('visibility', $data) ? $data['visibility'] : $this->visibility;
        }
    }

    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
    * Sets title.
    *
    * @param string|null $title  The name of the creative assets.
    *
    * @return $this
    */
    public function setTitle(?string $title = null): self
    {
        $this->title = $title;

        return $this;
    }




    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
    * Sets description.
    *
    * @param string|null $description  Brief description of the creative assets.
    *
    * @return $this
    */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }




    /**
     * Gets link.
     *
     * @return string|null
     */
    public function getLink(): ?string
    {
        return $this->link;
    }

    /**
    * Sets link.
    *
    * @param string|null $link  Link to the creative assets page.
    *
    * @return $this
    */
    public function setLink(?string $link = null): self
    {
        $this->link = $link;

        return $this;
    }




    /**
     * Gets iosDeepLink.
     *
     * @return string|null
     */
    public function getIosDeepLink(): ?string
    {
        return $this->iosDeepLink;
    }

    /**
    * Sets iosDeepLink.
    *
    * @param string|null $iosDeepLink  IOS deep link to the creative assets page.
    *
    * @return $this
    */
    public function setIosDeepLink(?string $iosDeepLink = null): self
    {
        $this->iosDeepLink = $iosDeepLink;

        return $this;
    }




    /**
     * Gets androidDeepLink.
     *
     * @return string|null
     */
    public function getAndroidDeepLink(): ?string
    {
        return $this->androidDeepLink;
    }

    /**
    * Sets androidDeepLink.
    *
    * @param string|null $androidDeepLink  Link to the creative assets page.
    *
    * @return $this
    */
    public function setAndroidDeepLink(?string $androidDeepLink = null): self
    {
        $this->androidDeepLink = $androidDeepLink;

        return $this;
    }




    /**
     * Gets googleProductCategory.
     *
     * @return string|null
     */
    public function getGoogleProductCategory(): ?string
    {
        return $this->googleProductCategory;
    }

    /**
    * Sets googleProductCategory.
    *
    * @param string|null $googleProductCategory  The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
    *
    * @return $this
    */
    public function setGoogleProductCategory(?string $googleProductCategory = null): self
    {
        $this->googleProductCategory = $googleProductCategory;

        return $this;
    }




    /**
     * Gets customLabel0.
     *
     * @return string|null
     */
    public function getCustomLabel0(): ?string
    {
        return $this->customLabel0;
    }

    /**
    * Sets customLabel0.
    *
    * @param string|null $customLabel0  Custom grouping of creative assets.
    *
    * @return $this
    */
    public function setCustomLabel0(?string $customLabel0 = null): self
    {
        $this->customLabel0 = $customLabel0;

        return $this;
    }




    /**
     * Gets customLabel1.
     *
     * @return string|null
     */
    public function getCustomLabel1(): ?string
    {
        return $this->customLabel1;
    }

    /**
    * Sets customLabel1.
    *
    * @param string|null $customLabel1  Custom grouping of creative assets.
    *
    * @return $this
    */
    public function setCustomLabel1(?string $customLabel1 = null): self
    {
        $this->customLabel1 = $customLabel1;

        return $this;
    }




    /**
     * Gets customLabel2.
     *
     * @return string|null
     */
    public function getCustomLabel2(): ?string
    {
        return $this->customLabel2;
    }

    /**
    * Sets customLabel2.
    *
    * @param string|null $customLabel2  Custom grouping of creative assets.
    *
    * @return $this
    */
    public function setCustomLabel2(?string $customLabel2 = null): self
    {
        $this->customLabel2 = $customLabel2;

        return $this;
    }




    /**
     * Gets customLabel3.
     *
     * @return string|null
     */
    public function getCustomLabel3(): ?string
    {
        return $this->customLabel3;
    }

    /**
    * Sets customLabel3.
    *
    * @param string|null $customLabel3  Custom grouping of creative assets.
    *
    * @return $this
    */
    public function setCustomLabel3(?string $customLabel3 = null): self
    {
        $this->customLabel3 = $customLabel3;

        return $this;
    }




    /**
     * Gets customLabel4.
     *
     * @return string|null
     */
    public function getCustomLabel4(): ?string
    {
        return $this->customLabel4;
    }

    /**
    * Sets customLabel4.
    *
    * @param string|null $customLabel4  Custom grouping of creative assets.
    *
    * @return $this
    */
    public function setCustomLabel4(?string $customLabel4 = null): self
    {
        $this->customLabel4 = $customLabel4;

        return $this;
    }




    /**
     * Gets visibility.
     *
     * @return string|null
     */
    public function getVisibility(): ?string
    {
        return $this->visibility;
    }

    /**
    * Sets visibility.
    *
    * @param string|null $visibility  Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.
    *
    * @return $this
    */
    public function setVisibility(?string $visibility = null): self
    {
        $this->visibility = $visibility;

        return $this;
    }



}


