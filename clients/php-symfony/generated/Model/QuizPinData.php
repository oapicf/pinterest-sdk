<?php
/**
 * QuizPinData
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the QuizPinData model.
 *
 * This field includes all quiz data including questions, options, and results.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class QuizPinData 
{
        /**
     * @var QuizPinQuestion[]|null
     * @SerializedName("questions")
     * @Type("array<OpenAPI\Server\Model\QuizPinQuestion>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\QuizPinQuestion"),
    ])]
    protected ?array $questions = null;

    /**
     * @var QuizPinResult[]|null
     * @SerializedName("results")
     * @Type("array<OpenAPI\Server\Model\QuizPinResult>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\QuizPinResult"),
    ])]
    protected ?array $results = null;

    /**
     * Quiz ad tie breaker type, default is RANDOM
     *
     * @var string|null
     * @SerializedName("tie_breaker_type")
     * @Type("string")
    */
    #[Assert\Choice(["RANDOM", "CUSTOM"])]
    #[Assert\Type("string")]
    protected ?string $tieBreakerType = null;

    /**
     * @var QuizPinResult|null
     * @SerializedName("tie_breaker_custom_result")
     * @Type("OpenAPI\Server\Model\QuizPinResult")
    */
    #[Assert\Type("OpenAPI\Server\Model\QuizPinResult")]
    protected ?QuizPinResult $tieBreakerCustomResult = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->questions = array_key_exists('questions', $data) ? $data['questions'] : $this->questions;
            $this->results = array_key_exists('results', $data) ? $data['results'] : $this->results;
            $this->tieBreakerType = array_key_exists('tieBreakerType', $data) ? $data['tieBreakerType'] : $this->tieBreakerType;
            $this->tieBreakerCustomResult = array_key_exists('tieBreakerCustomResult', $data) ? $data['tieBreakerCustomResult'] : $this->tieBreakerCustomResult;
        }
    }

    /**
     * Gets questions.
     *
     * @return QuizPinQuestion[]|null
     */
    public function getQuestions(): ?array
    {
        return $this->questions;
    }

    /**
    * Sets questions.
    *
    * @param QuizPinQuestion[]|null $questions
    *
    * @return $this
    */
    public function setQuestions(?array $questions = null): self
    {
        $this->questions = $questions;

        return $this;
    }




    /**
     * Gets results.
     *
     * @return QuizPinResult[]|null
     */
    public function getResults(): ?array
    {
        return $this->results;
    }

    /**
    * Sets results.
    *
    * @param QuizPinResult[]|null $results
    *
    * @return $this
    */
    public function setResults(?array $results = null): self
    {
        $this->results = $results;

        return $this;
    }




    /**
     * Gets tieBreakerType.
     *
     * @return string|null
     */
    public function getTieBreakerType(): ?string
    {
        return $this->tieBreakerType;
    }

    /**
    * Sets tieBreakerType.
    *
    * @param string|null $tieBreakerType  Quiz ad tie breaker type, default is RANDOM
    *
    * @return $this
    */
    public function setTieBreakerType(?string $tieBreakerType = null): self
    {
        $this->tieBreakerType = $tieBreakerType;

        return $this;
    }




    /**
     * Gets tieBreakerCustomResult.
     *
     * @return QuizPinResult|null
     */
    public function getTieBreakerCustomResult(): ?QuizPinResult
    {
        return $this->tieBreakerCustomResult;
    }

    /**
    * Sets tieBreakerCustomResult.
    *
    * @param QuizPinResult|null $tieBreakerCustomResult
    *
    * @return $this
    */
    public function setTieBreakerCustomResult(?QuizPinResult $tieBreakerCustomResult = null): self
    {
        $this->tieBreakerCustomResult = $tieBreakerCustomResult;

        return $this;
    }



}


