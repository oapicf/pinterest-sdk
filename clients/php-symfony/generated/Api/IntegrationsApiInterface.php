<?php
/**
 * IntegrationsApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\DetailedError;
use OpenAPI\Server\Model\Error;
use OpenAPI\Server\Model\IntegrationLogsRequest;
use OpenAPI\Server\Model\IntegrationLogsSuccessResponse;
use OpenAPI\Server\Model\IntegrationMetadata;
use OpenAPI\Server\Model\IntegrationRecord;
use OpenAPI\Server\Model\IntegrationRequest;
use OpenAPI\Server\Model\IntegrationRequestPatch;
use OpenAPI\Server\Model\IntegrationsGetList200Response;

/**
 * IntegrationsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface IntegrationsApiInterface
{

    /**
     * Sets authentication method pinterest_oauth2
     *
     * @param string|null $value Value of the pinterest_oauth2 authentication method.
     *
     * @return void
     */
    public function setpinterest_oauth2(?string $value): void;

    /**
     * Operation integrationsCommerceDel
     *
     * Delete commerce integration
     *
     * @param  string $externalBusinessId  External business ID for the integration. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function integrationsCommerceDel(
        string $externalBusinessId,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation integrationsCommerceGet
     *
     * Get commerce integration
     *
     * @param  string $externalBusinessId  External business ID for the integration. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function integrationsCommerceGet(
        string $externalBusinessId,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation integrationsCommercePatch
     *
     * Update commerce integration
     *
     * @param  string $externalBusinessId  External business ID for the integration. (required)
     * @param  IntegrationRequestPatch|null $integrationRequestPatch  Parameters to get create/update the Integration Metadata (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function integrationsCommercePatch(
        string $externalBusinessId,
        ?IntegrationRequestPatch $integrationRequestPatch,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation integrationsCommercePost
     *
     * Create commerce integration
     *
     * @param  IntegrationRequest|null $integrationRequest  Parameters to get create/update the Integration Metadata (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function integrationsCommercePost(
        ?IntegrationRequest $integrationRequest,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation integrationsGetById
     *
     * Get integration metadata
     *
     * @param  string $id  Integration ID. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function integrationsGetById(
        string $id,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation integrationsGetList
     *
     * Get integration metadata list
     *
     * @param  string|null $bookmark  Cursor used to fetch the next page of items (optional)
     * @param  int $pageSize  Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function integrationsGetList(
        ?string $bookmark,
        int $pageSize,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation integrationsLogsPost
     *
     * Receives batched logs from integration applications.
     *
     * @param  IntegrationLogsRequest $integrationLogsRequest  Ingest log information from external integration application. (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function integrationsLogsPost(
        IntegrationLogsRequest $integrationLogsRequest,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;
}
