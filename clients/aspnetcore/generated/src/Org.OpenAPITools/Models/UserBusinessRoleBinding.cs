/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class UserBusinessRoleBinding : IEquatable<UserBusinessRoleBinding>
    {
        /// <summary>
        /// Gets or Sets AssetsSummary
        /// </summary>
        [DataMember(Name="assets_summary", EmitDefaultValue=true)]
        public BusinessMemberAssetsSummary AssetsSummary { get; set; }

        /// <summary>
        /// The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.
        /// </summary>
        /// <value>The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.</value>
        /* <example>[&quot;BIZ_ADMIN&quot;]</example> */
        [DataMember(Name="business_roles", EmitDefaultValue=false)]
        public List<string> BusinessRoles { get; set; }

        /// <summary>
        /// Metadata for the business that created the business relationship.
        /// </summary>
        /// <value>Metadata for the business that created the business relationship.</value>
        [DataMember(Name="created_by_business", EmitDefaultValue=true)]
        public BusinessAccessUserSummary CreatedByBusiness { get; set; }

        /// <summary>
        /// Metadata for the user that created the business relationship.
        /// </summary>
        /// <value>Metadata for the user that created the business relationship.</value>
        [DataMember(Name="created_by_user", EmitDefaultValue=true)]
        public BusinessAccessUserSummary CreatedByUser { get; set; }

        /// <summary>
        /// The time the business relationship was created. Returned in milliseconds.
        /// </summary>
        /// <value>The time the business relationship was created. Returned in milliseconds.</value>
        /* <example>1646767577816</example> */
        [DataMember(Name="created_time", EmitDefaultValue=true)]
        public int? CreatedTime { get; set; }

        /// <summary>
        /// Unique identifier of the business member/business partner/employer.
        /// </summary>
        /// <value>Unique identifier of the business member/business partner/employer.</value>
        /* <example>383791336903426391</example> */
        [RegularExpression("^\\d+$")]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// This field is only relevant when business_role&#x3D;\&quot;PARTNER\&quot;. &lt;br&gt;If is_shared_partner&#x3D;FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. &lt;br&gt;If is_shared_partner&#x3D;TRUE, you can access the partner&#39;s business asset. If assets_summary is not empty, the assets listed are the partner&#39;s business assets you have access to.
        /// </summary>
        /// <value>This field is only relevant when business_role&#x3D;\&quot;PARTNER\&quot;. &lt;br&gt;If is_shared_partner&#x3D;FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. &lt;br&gt;If is_shared_partner&#x3D;TRUE, you can access the partner&#39;s business asset. If assets_summary is not empty, the assets listed are the partner&#39;s business assets you have access to.</value>
        /* <example>false</example> */
        [DataMember(Name="is_shared_partner", EmitDefaultValue=true)]
        public bool IsSharedPartner { get; set; }

        /// <summary>
        /// Metadata for the business member/business partner/employer.
        /// </summary>
        /// <value>Metadata for the business member/business partner/employer.</value>
        [DataMember(Name="user", EmitDefaultValue=true)]
        public BusinessAccessUserSummary User { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserBusinessRoleBinding {\n");
            sb.Append("  AssetsSummary: ").Append(AssetsSummary).Append("\n");
            sb.Append("  BusinessRoles: ").Append(BusinessRoles).Append("\n");
            sb.Append("  CreatedByBusiness: ").Append(CreatedByBusiness).Append("\n");
            sb.Append("  CreatedByUser: ").Append(CreatedByUser).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IsSharedPartner: ").Append(IsSharedPartner).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((UserBusinessRoleBinding)obj);
        }

        /// <summary>
        /// Returns true if UserBusinessRoleBinding instances are equal
        /// </summary>
        /// <param name="other">Instance of UserBusinessRoleBinding to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserBusinessRoleBinding other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AssetsSummary == other.AssetsSummary ||
                    AssetsSummary != null &&
                    AssetsSummary.Equals(other.AssetsSummary)
                ) && 
                (
                    BusinessRoles == other.BusinessRoles ||
                    BusinessRoles != null &&
                    other.BusinessRoles != null &&
                    BusinessRoles.SequenceEqual(other.BusinessRoles)
                ) && 
                (
                    CreatedByBusiness == other.CreatedByBusiness ||
                    CreatedByBusiness != null &&
                    CreatedByBusiness.Equals(other.CreatedByBusiness)
                ) && 
                (
                    CreatedByUser == other.CreatedByUser ||
                    CreatedByUser != null &&
                    CreatedByUser.Equals(other.CreatedByUser)
                ) && 
                (
                    CreatedTime == other.CreatedTime ||
                    CreatedTime != null &&
                    CreatedTime.Equals(other.CreatedTime)
                ) && 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    IsSharedPartner == other.IsSharedPartner ||
                    
                    IsSharedPartner.Equals(other.IsSharedPartner)
                ) && 
                (
                    User == other.User ||
                    User != null &&
                    User.Equals(other.User)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (AssetsSummary != null)
                    hashCode = hashCode * 59 + AssetsSummary.GetHashCode();
                    if (BusinessRoles != null)
                    hashCode = hashCode * 59 + BusinessRoles.GetHashCode();
                    if (CreatedByBusiness != null)
                    hashCode = hashCode * 59 + CreatedByBusiness.GetHashCode();
                    if (CreatedByUser != null)
                    hashCode = hashCode * 59 + CreatedByUser.GetHashCode();
                    if (CreatedTime != null)
                    hashCode = hashCode * 59 + CreatedTime.GetHashCode();
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    
                    hashCode = hashCode * 59 + IsSharedPartner.GetHashCode();
                    if (User != null)
                    hashCode = hashCode * 59 + User.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(UserBusinessRoleBinding left, UserBusinessRoleBinding right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(UserBusinessRoleBinding left, UserBusinessRoleBinding right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
