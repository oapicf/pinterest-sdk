/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AssetGroupBinding : IEquatable<AssetGroupBinding>
    {
        /// <summary>
        /// Asset Group ID.
        /// </summary>
        /// <value>Asset Group ID.</value>
        /* <example>666791336903426391</example> */
        [RegularExpression("^\\d+$")]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Asset Group name
        /// </summary>
        /// <value>Asset Group name</value>
        /* <example>Canada Ad Accounts</example> */
        [DataMember(Name="asset_group_name", EmitDefaultValue=true)]
        public string AssetGroupName { get; set; }

        /// <summary>
        /// Asset group description
        /// </summary>
        /// <value>Asset group description</value>
        /* <example>Asset group that has ad accounts used in Canada</example> */
        [DataMember(Name="asset_group_description", EmitDefaultValue=true)]
        public string AssetGroupDescription { get; set; }

        /// <summary>
        /// Asset group types
        /// </summary>
        /// <value>Asset group types</value>
        /* <example>[&quot;LOCATION_OR_LANGUAGE&quot;]</example> */
        [DataMember(Name="asset_group_types", EmitDefaultValue=false)]
        public List<string> AssetGroupTypes { get; set; }

        /// <summary>
        /// A list of ad account IDs under the asset group
        /// </summary>
        /// <value>A list of ad account IDs under the asset group</value>
        /* <example>[&quot;549755885175&quot;]</example> */
        [DataMember(Name="ad_accounts_ids", EmitDefaultValue=true)]
        public List<string> AdAccountsIds { get; set; }

        /// <summary>
        /// A list of profile IDs under asset group
        /// </summary>
        /// <value>A list of profile IDs under asset group</value>
        /* <example>[&quot;630433785246278264&quot;]</example> */
        [DataMember(Name="profiles_ids", EmitDefaultValue=true)]
        public List<string> ProfilesIds { get; set; }

        /// <summary>
        /// The creation time of the asset group
        /// </summary>
        /// <value>The creation time of the asset group</value>
        /* <example>1646767577816</example> */
        [DataMember(Name="created_time", EmitDefaultValue=true)]
        public int? CreatedTime { get; set; }

        /// <summary>
        /// The last update time of the asset group
        /// </summary>
        /// <value>The last update time of the asset group</value>
        /* <example>1646767577816</example> */
        [DataMember(Name="updated_time", EmitDefaultValue=true)]
        public int? UpdatedTime { get; set; }

        /// <summary>
        /// The data of the business that owns the asset group.
        /// </summary>
        /// <value>The data of the business that owns the asset group.</value>
        [DataMember(Name="owner", EmitDefaultValue=true)]
        public BusinessAccessUserSummary Owner { get; set; }

        /// <summary>
        /// The data of the user that created the asset group.
        /// </summary>
        /// <value>The data of the user that created the asset group.</value>
        [DataMember(Name="created_by", EmitDefaultValue=true)]
        public BusinessAccessUserSummary CreatedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AssetGroupBinding {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AssetGroupName: ").Append(AssetGroupName).Append("\n");
            sb.Append("  AssetGroupDescription: ").Append(AssetGroupDescription).Append("\n");
            sb.Append("  AssetGroupTypes: ").Append(AssetGroupTypes).Append("\n");
            sb.Append("  AdAccountsIds: ").Append(AdAccountsIds).Append("\n");
            sb.Append("  ProfilesIds: ").Append(ProfilesIds).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  UpdatedTime: ").Append(UpdatedTime).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AssetGroupBinding)obj);
        }

        /// <summary>
        /// Returns true if AssetGroupBinding instances are equal
        /// </summary>
        /// <param name="other">Instance of AssetGroupBinding to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssetGroupBinding other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    AssetGroupName == other.AssetGroupName ||
                    AssetGroupName != null &&
                    AssetGroupName.Equals(other.AssetGroupName)
                ) && 
                (
                    AssetGroupDescription == other.AssetGroupDescription ||
                    AssetGroupDescription != null &&
                    AssetGroupDescription.Equals(other.AssetGroupDescription)
                ) && 
                (
                    AssetGroupTypes == other.AssetGroupTypes ||
                    AssetGroupTypes != null &&
                    other.AssetGroupTypes != null &&
                    AssetGroupTypes.SequenceEqual(other.AssetGroupTypes)
                ) && 
                (
                    AdAccountsIds == other.AdAccountsIds ||
                    AdAccountsIds != null &&
                    other.AdAccountsIds != null &&
                    AdAccountsIds.SequenceEqual(other.AdAccountsIds)
                ) && 
                (
                    ProfilesIds == other.ProfilesIds ||
                    ProfilesIds != null &&
                    other.ProfilesIds != null &&
                    ProfilesIds.SequenceEqual(other.ProfilesIds)
                ) && 
                (
                    CreatedTime == other.CreatedTime ||
                    CreatedTime != null &&
                    CreatedTime.Equals(other.CreatedTime)
                ) && 
                (
                    UpdatedTime == other.UpdatedTime ||
                    UpdatedTime != null &&
                    UpdatedTime.Equals(other.UpdatedTime)
                ) && 
                (
                    Owner == other.Owner ||
                    Owner != null &&
                    Owner.Equals(other.Owner)
                ) && 
                (
                    CreatedBy == other.CreatedBy ||
                    CreatedBy != null &&
                    CreatedBy.Equals(other.CreatedBy)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (AssetGroupName != null)
                    hashCode = hashCode * 59 + AssetGroupName.GetHashCode();
                    if (AssetGroupDescription != null)
                    hashCode = hashCode * 59 + AssetGroupDescription.GetHashCode();
                    if (AssetGroupTypes != null)
                    hashCode = hashCode * 59 + AssetGroupTypes.GetHashCode();
                    if (AdAccountsIds != null)
                    hashCode = hashCode * 59 + AdAccountsIds.GetHashCode();
                    if (ProfilesIds != null)
                    hashCode = hashCode * 59 + ProfilesIds.GetHashCode();
                    if (CreatedTime != null)
                    hashCode = hashCode * 59 + CreatedTime.GetHashCode();
                    if (UpdatedTime != null)
                    hashCode = hashCode * 59 + UpdatedTime.GetHashCode();
                    if (Owner != null)
                    hashCode = hashCode * 59 + Owner.GetHashCode();
                    if (CreatedBy != null)
                    hashCode = hashCode * 59 + CreatedBy.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AssetGroupBinding left, AssetGroupBinding right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AssetGroupBinding left, AssetGroupBinding right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
