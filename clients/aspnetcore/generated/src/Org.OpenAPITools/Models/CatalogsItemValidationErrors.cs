/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CatalogsItemValidationErrors : IEquatable<CatalogsItemValidationErrors>
    {
        /// <summary>
        /// Gets or Sets ADULT_INVALID
        /// </summary>
        [DataMember(Name="ADULT_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails ADULT_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets ADWORDS_FORMAT_INVALID
        /// </summary>
        [DataMember(Name="ADWORDS_FORMAT_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails ADWORDS_FORMAT_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets AVAILABILITY_INVALID
        /// </summary>
        [DataMember(Name="AVAILABILITY_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails AVAILABILITY_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets BLOCKLISTED_IMAGE_SIGNATURE
        /// </summary>
        [DataMember(Name="BLOCKLISTED_IMAGE_SIGNATURE", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails BLOCKLISTED_IMAGE_SIGNATURE { get; set; }

        /// <summary>
        /// Gets or Sets DESCRIPTION_MISSING
        /// </summary>
        [DataMember(Name="DESCRIPTION_MISSING", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails DESCRIPTION_MISSING { get; set; }

        /// <summary>
        /// Gets or Sets DUPLICATE_PRODUCTS
        /// </summary>
        [DataMember(Name="DUPLICATE_PRODUCTS", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails DUPLICATE_PRODUCTS { get; set; }

        /// <summary>
        /// Gets or Sets IMAGE_LINK_INVALID
        /// </summary>
        [DataMember(Name="IMAGE_LINK_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails IMAGE_LINK_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets IMAGE_LINK_LENGTH_TOO_LONG
        /// </summary>
        [DataMember(Name="IMAGE_LINK_LENGTH_TOO_LONG", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails IMAGE_LINK_LENGTH_TOO_LONG { get; set; }

        /// <summary>
        /// Gets or Sets IMAGE_LINK_MISSING
        /// </summary>
        [DataMember(Name="IMAGE_LINK_MISSING", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails IMAGE_LINK_MISSING { get; set; }

        /// <summary>
        /// Gets or Sets INVALID_DOMAIN
        /// </summary>
        [DataMember(Name="INVALID_DOMAIN", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails INVALID_DOMAIN { get; set; }

        /// <summary>
        /// Gets or Sets ITEMID_MISSING
        /// </summary>
        [DataMember(Name="ITEMID_MISSING", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails ITEMID_MISSING { get; set; }

        /// <summary>
        /// Gets or Sets ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE
        /// </summary>
        [DataMember(Name="ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE { get; set; }

        /// <summary>
        /// Gets or Sets LINK_FORMAT_INVALID
        /// </summary>
        [DataMember(Name="LINK_FORMAT_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails LINK_FORMAT_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets LINK_LENGTH_TOO_LONG
        /// </summary>
        [DataMember(Name="LINK_LENGTH_TOO_LONG", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails LINK_LENGTH_TOO_LONG { get; set; }

        /// <summary>
        /// Gets or Sets LIST_PRICE_INVALID
        /// </summary>
        [DataMember(Name="LIST_PRICE_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails LIST_PRICE_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED
        /// </summary>
        [DataMember(Name="MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED { get; set; }

        /// <summary>
        /// Gets or Sets PARSE_LINE_ERROR
        /// </summary>
        [DataMember(Name="PARSE_LINE_ERROR", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails PARSE_LINE_ERROR { get; set; }

        /// <summary>
        /// Gets or Sets PINJOIN_CONTENT_UNSAFE
        /// </summary>
        [DataMember(Name="PINJOIN_CONTENT_UNSAFE", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails PINJOIN_CONTENT_UNSAFE { get; set; }

        /// <summary>
        /// Gets or Sets PRICE_CANNOT_BE_DETERMINED
        /// </summary>
        [DataMember(Name="PRICE_CANNOT_BE_DETERMINED", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails PRICE_CANNOT_BE_DETERMINED { get; set; }

        /// <summary>
        /// Gets or Sets PRICE_MISSING
        /// </summary>
        [DataMember(Name="PRICE_MISSING", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails PRICE_MISSING { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCT_LINK_MISSING
        /// </summary>
        [DataMember(Name="PRODUCT_LINK_MISSING", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails PRODUCT_LINK_MISSING { get; set; }

        /// <summary>
        /// Gets or Sets PRODUCT_PRICE_INVALID
        /// </summary>
        [DataMember(Name="PRODUCT_PRICE_INVALID", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails PRODUCT_PRICE_INVALID { get; set; }

        /// <summary>
        /// Gets or Sets TITLE_MISSING
        /// </summary>
        [DataMember(Name="TITLE_MISSING", EmitDefaultValue=false)]
        public CatalogsItemValidationDetails TITLE_MISSING { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsItemValidationErrors {\n");
            sb.Append("  ADULT_INVALID: ").Append(ADULT_INVALID).Append("\n");
            sb.Append("  ADWORDS_FORMAT_INVALID: ").Append(ADWORDS_FORMAT_INVALID).Append("\n");
            sb.Append("  AVAILABILITY_INVALID: ").Append(AVAILABILITY_INVALID).Append("\n");
            sb.Append("  BLOCKLISTED_IMAGE_SIGNATURE: ").Append(BLOCKLISTED_IMAGE_SIGNATURE).Append("\n");
            sb.Append("  DESCRIPTION_MISSING: ").Append(DESCRIPTION_MISSING).Append("\n");
            sb.Append("  DUPLICATE_PRODUCTS: ").Append(DUPLICATE_PRODUCTS).Append("\n");
            sb.Append("  IMAGE_LINK_INVALID: ").Append(IMAGE_LINK_INVALID).Append("\n");
            sb.Append("  IMAGE_LINK_LENGTH_TOO_LONG: ").Append(IMAGE_LINK_LENGTH_TOO_LONG).Append("\n");
            sb.Append("  IMAGE_LINK_MISSING: ").Append(IMAGE_LINK_MISSING).Append("\n");
            sb.Append("  INVALID_DOMAIN: ").Append(INVALID_DOMAIN).Append("\n");
            sb.Append("  ITEMID_MISSING: ").Append(ITEMID_MISSING).Append("\n");
            sb.Append("  ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE: ").Append(ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE).Append("\n");
            sb.Append("  LINK_FORMAT_INVALID: ").Append(LINK_FORMAT_INVALID).Append("\n");
            sb.Append("  LINK_LENGTH_TOO_LONG: ").Append(LINK_LENGTH_TOO_LONG).Append("\n");
            sb.Append("  LIST_PRICE_INVALID: ").Append(LIST_PRICE_INVALID).Append("\n");
            sb.Append("  MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED: ").Append(MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED).Append("\n");
            sb.Append("  PARSE_LINE_ERROR: ").Append(PARSE_LINE_ERROR).Append("\n");
            sb.Append("  PINJOIN_CONTENT_UNSAFE: ").Append(PINJOIN_CONTENT_UNSAFE).Append("\n");
            sb.Append("  PRICE_CANNOT_BE_DETERMINED: ").Append(PRICE_CANNOT_BE_DETERMINED).Append("\n");
            sb.Append("  PRICE_MISSING: ").Append(PRICE_MISSING).Append("\n");
            sb.Append("  PRODUCT_LINK_MISSING: ").Append(PRODUCT_LINK_MISSING).Append("\n");
            sb.Append("  PRODUCT_PRICE_INVALID: ").Append(PRODUCT_PRICE_INVALID).Append("\n");
            sb.Append("  TITLE_MISSING: ").Append(TITLE_MISSING).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CatalogsItemValidationErrors)obj);
        }

        /// <summary>
        /// Returns true if CatalogsItemValidationErrors instances are equal
        /// </summary>
        /// <param name="other">Instance of CatalogsItemValidationErrors to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CatalogsItemValidationErrors other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ADULT_INVALID == other.ADULT_INVALID ||
                    ADULT_INVALID != null &&
                    ADULT_INVALID.Equals(other.ADULT_INVALID)
                ) && 
                (
                    ADWORDS_FORMAT_INVALID == other.ADWORDS_FORMAT_INVALID ||
                    ADWORDS_FORMAT_INVALID != null &&
                    ADWORDS_FORMAT_INVALID.Equals(other.ADWORDS_FORMAT_INVALID)
                ) && 
                (
                    AVAILABILITY_INVALID == other.AVAILABILITY_INVALID ||
                    AVAILABILITY_INVALID != null &&
                    AVAILABILITY_INVALID.Equals(other.AVAILABILITY_INVALID)
                ) && 
                (
                    BLOCKLISTED_IMAGE_SIGNATURE == other.BLOCKLISTED_IMAGE_SIGNATURE ||
                    BLOCKLISTED_IMAGE_SIGNATURE != null &&
                    BLOCKLISTED_IMAGE_SIGNATURE.Equals(other.BLOCKLISTED_IMAGE_SIGNATURE)
                ) && 
                (
                    DESCRIPTION_MISSING == other.DESCRIPTION_MISSING ||
                    DESCRIPTION_MISSING != null &&
                    DESCRIPTION_MISSING.Equals(other.DESCRIPTION_MISSING)
                ) && 
                (
                    DUPLICATE_PRODUCTS == other.DUPLICATE_PRODUCTS ||
                    DUPLICATE_PRODUCTS != null &&
                    DUPLICATE_PRODUCTS.Equals(other.DUPLICATE_PRODUCTS)
                ) && 
                (
                    IMAGE_LINK_INVALID == other.IMAGE_LINK_INVALID ||
                    IMAGE_LINK_INVALID != null &&
                    IMAGE_LINK_INVALID.Equals(other.IMAGE_LINK_INVALID)
                ) && 
                (
                    IMAGE_LINK_LENGTH_TOO_LONG == other.IMAGE_LINK_LENGTH_TOO_LONG ||
                    IMAGE_LINK_LENGTH_TOO_LONG != null &&
                    IMAGE_LINK_LENGTH_TOO_LONG.Equals(other.IMAGE_LINK_LENGTH_TOO_LONG)
                ) && 
                (
                    IMAGE_LINK_MISSING == other.IMAGE_LINK_MISSING ||
                    IMAGE_LINK_MISSING != null &&
                    IMAGE_LINK_MISSING.Equals(other.IMAGE_LINK_MISSING)
                ) && 
                (
                    INVALID_DOMAIN == other.INVALID_DOMAIN ||
                    INVALID_DOMAIN != null &&
                    INVALID_DOMAIN.Equals(other.INVALID_DOMAIN)
                ) && 
                (
                    ITEMID_MISSING == other.ITEMID_MISSING ||
                    ITEMID_MISSING != null &&
                    ITEMID_MISSING.Equals(other.ITEMID_MISSING)
                ) && 
                (
                    ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE == other.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE ||
                    ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE != null &&
                    ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE.Equals(other.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE)
                ) && 
                (
                    LINK_FORMAT_INVALID == other.LINK_FORMAT_INVALID ||
                    LINK_FORMAT_INVALID != null &&
                    LINK_FORMAT_INVALID.Equals(other.LINK_FORMAT_INVALID)
                ) && 
                (
                    LINK_LENGTH_TOO_LONG == other.LINK_LENGTH_TOO_LONG ||
                    LINK_LENGTH_TOO_LONG != null &&
                    LINK_LENGTH_TOO_LONG.Equals(other.LINK_LENGTH_TOO_LONG)
                ) && 
                (
                    LIST_PRICE_INVALID == other.LIST_PRICE_INVALID ||
                    LIST_PRICE_INVALID != null &&
                    LIST_PRICE_INVALID.Equals(other.LIST_PRICE_INVALID)
                ) && 
                (
                    MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED == other.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED ||
                    MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED != null &&
                    MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED.Equals(other.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED)
                ) && 
                (
                    PARSE_LINE_ERROR == other.PARSE_LINE_ERROR ||
                    PARSE_LINE_ERROR != null &&
                    PARSE_LINE_ERROR.Equals(other.PARSE_LINE_ERROR)
                ) && 
                (
                    PINJOIN_CONTENT_UNSAFE == other.PINJOIN_CONTENT_UNSAFE ||
                    PINJOIN_CONTENT_UNSAFE != null &&
                    PINJOIN_CONTENT_UNSAFE.Equals(other.PINJOIN_CONTENT_UNSAFE)
                ) && 
                (
                    PRICE_CANNOT_BE_DETERMINED == other.PRICE_CANNOT_BE_DETERMINED ||
                    PRICE_CANNOT_BE_DETERMINED != null &&
                    PRICE_CANNOT_BE_DETERMINED.Equals(other.PRICE_CANNOT_BE_DETERMINED)
                ) && 
                (
                    PRICE_MISSING == other.PRICE_MISSING ||
                    PRICE_MISSING != null &&
                    PRICE_MISSING.Equals(other.PRICE_MISSING)
                ) && 
                (
                    PRODUCT_LINK_MISSING == other.PRODUCT_LINK_MISSING ||
                    PRODUCT_LINK_MISSING != null &&
                    PRODUCT_LINK_MISSING.Equals(other.PRODUCT_LINK_MISSING)
                ) && 
                (
                    PRODUCT_PRICE_INVALID == other.PRODUCT_PRICE_INVALID ||
                    PRODUCT_PRICE_INVALID != null &&
                    PRODUCT_PRICE_INVALID.Equals(other.PRODUCT_PRICE_INVALID)
                ) && 
                (
                    TITLE_MISSING == other.TITLE_MISSING ||
                    TITLE_MISSING != null &&
                    TITLE_MISSING.Equals(other.TITLE_MISSING)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ADULT_INVALID != null)
                    hashCode = hashCode * 59 + ADULT_INVALID.GetHashCode();
                    if (ADWORDS_FORMAT_INVALID != null)
                    hashCode = hashCode * 59 + ADWORDS_FORMAT_INVALID.GetHashCode();
                    if (AVAILABILITY_INVALID != null)
                    hashCode = hashCode * 59 + AVAILABILITY_INVALID.GetHashCode();
                    if (BLOCKLISTED_IMAGE_SIGNATURE != null)
                    hashCode = hashCode * 59 + BLOCKLISTED_IMAGE_SIGNATURE.GetHashCode();
                    if (DESCRIPTION_MISSING != null)
                    hashCode = hashCode * 59 + DESCRIPTION_MISSING.GetHashCode();
                    if (DUPLICATE_PRODUCTS != null)
                    hashCode = hashCode * 59 + DUPLICATE_PRODUCTS.GetHashCode();
                    if (IMAGE_LINK_INVALID != null)
                    hashCode = hashCode * 59 + IMAGE_LINK_INVALID.GetHashCode();
                    if (IMAGE_LINK_LENGTH_TOO_LONG != null)
                    hashCode = hashCode * 59 + IMAGE_LINK_LENGTH_TOO_LONG.GetHashCode();
                    if (IMAGE_LINK_MISSING != null)
                    hashCode = hashCode * 59 + IMAGE_LINK_MISSING.GetHashCode();
                    if (INVALID_DOMAIN != null)
                    hashCode = hashCode * 59 + INVALID_DOMAIN.GetHashCode();
                    if (ITEMID_MISSING != null)
                    hashCode = hashCode * 59 + ITEMID_MISSING.GetHashCode();
                    if (ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE != null)
                    hashCode = hashCode * 59 + ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE.GetHashCode();
                    if (LINK_FORMAT_INVALID != null)
                    hashCode = hashCode * 59 + LINK_FORMAT_INVALID.GetHashCode();
                    if (LINK_LENGTH_TOO_LONG != null)
                    hashCode = hashCode * 59 + LINK_LENGTH_TOO_LONG.GetHashCode();
                    if (LIST_PRICE_INVALID != null)
                    hashCode = hashCode * 59 + LIST_PRICE_INVALID.GetHashCode();
                    if (MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED != null)
                    hashCode = hashCode * 59 + MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED.GetHashCode();
                    if (PARSE_LINE_ERROR != null)
                    hashCode = hashCode * 59 + PARSE_LINE_ERROR.GetHashCode();
                    if (PINJOIN_CONTENT_UNSAFE != null)
                    hashCode = hashCode * 59 + PINJOIN_CONTENT_UNSAFE.GetHashCode();
                    if (PRICE_CANNOT_BE_DETERMINED != null)
                    hashCode = hashCode * 59 + PRICE_CANNOT_BE_DETERMINED.GetHashCode();
                    if (PRICE_MISSING != null)
                    hashCode = hashCode * 59 + PRICE_MISSING.GetHashCode();
                    if (PRODUCT_LINK_MISSING != null)
                    hashCode = hashCode * 59 + PRODUCT_LINK_MISSING.GetHashCode();
                    if (PRODUCT_PRICE_INVALID != null)
                    hashCode = hashCode * 59 + PRODUCT_PRICE_INVALID.GetHashCode();
                    if (TITLE_MISSING != null)
                    hashCode = hashCode * 59 + TITLE_MISSING.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CatalogsItemValidationErrors left, CatalogsItemValidationErrors right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CatalogsItemValidationErrors left, CatalogsItemValidationErrors right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
