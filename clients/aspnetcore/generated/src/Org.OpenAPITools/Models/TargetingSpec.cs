/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Ad group targeting specification defining the ad group target audience. For example, &#x60;{\&quot;APPTYPE\&quot;:[\&quot;iphone\&quot;], \&quot;GENDER\&quot;:[\&quot;male\&quot;], \&quot;LOCALE\&quot;:[\&quot;en-US\&quot;], \&quot;LOCATION\&quot;:[\&quot;501\&quot;], \&quot;AGE_BUCKET\&quot;:[\&quot;25-34\&quot;]}&#x60;
    /// </summary>
    [DataContract]
    public partial class TargetingSpec : IEquatable<TargetingSpec>
    {

        /// <summary>
        /// Gets or Sets AGE_BUCKET
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<AGEBUCKETEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum AGEBUCKETEnum
        {
            
            /// <summary>
            /// Enum _1824Enum for 18-24
            /// </summary>
            [EnumMember(Value = "18-24")]
            _1824Enum = 1,
            
            /// <summary>
            /// Enum _21Enum for 21+
            /// </summary>
            [EnumMember(Value = "21+")]
            _21Enum = 2,
            
            /// <summary>
            /// Enum _2534Enum for 25-34
            /// </summary>
            [EnumMember(Value = "25-34")]
            _2534Enum = 3,
            
            /// <summary>
            /// Enum _3544Enum for 35-44
            /// </summary>
            [EnumMember(Value = "35-44")]
            _3544Enum = 4,
            
            /// <summary>
            /// Enum _4549Enum for 45-49
            /// </summary>
            [EnumMember(Value = "45-49")]
            _4549Enum = 5,
            
            /// <summary>
            /// Enum _5054Enum for 50-54
            /// </summary>
            [EnumMember(Value = "50-54")]
            _5054Enum = 6,
            
            /// <summary>
            /// Enum _5564Enum for 55-64
            /// </summary>
            [EnumMember(Value = "55-64")]
            _5564Enum = 7,
            
            /// <summary>
            /// Enum _65Enum for 65+
            /// </summary>
            [EnumMember(Value = "65+")]
            _65Enum = 8
        }

        /// <summary>
        /// Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.
        /// </summary>
        /// <value>Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.</value>
        /* <example>[&quot;35-44&quot;,&quot;50-54&quot;]</example> */
        [DataMember(Name="AGE_BUCKET", EmitDefaultValue=true)]
        public List<TargetingSpec.AGEBUCKETEnum> AGE_BUCKET { get; set; }


        /// <summary>
        /// Gets or Sets APPTYPE
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<APPTYPEEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum APPTYPEEnum
        {
            
            /// <summary>
            /// Enum AndroidMobileEnum for android_mobile
            /// </summary>
            [EnumMember(Value = "android_mobile")]
            AndroidMobileEnum = 1,
            
            /// <summary>
            /// Enum AndroidTabletEnum for android_tablet
            /// </summary>
            [EnumMember(Value = "android_tablet")]
            AndroidTabletEnum = 2,
            
            /// <summary>
            /// Enum IpadEnum for ipad
            /// </summary>
            [EnumMember(Value = "ipad")]
            IpadEnum = 3,
            
            /// <summary>
            /// Enum IphoneEnum for iphone
            /// </summary>
            [EnumMember(Value = "iphone")]
            IphoneEnum = 4,
            
            /// <summary>
            /// Enum WebEnum for web
            /// </summary>
            [EnumMember(Value = "web")]
            WebEnum = 5,
            
            /// <summary>
            /// Enum WebMobileEnum for web_mobile
            /// </summary>
            [EnumMember(Value = "web_mobile")]
            WebMobileEnum = 6
        }

        /// <summary>
        /// Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.
        /// </summary>
        /// <value>Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.</value>
        /* <example>[&quot;ipad&quot;,&quot;iphone&quot;]</example> */
        [DataMember(Name="APPTYPE", EmitDefaultValue=true)]
        public List<TargetingSpec.APPTYPEEnum> APPTYPE { get; set; }

        /// <summary>
        /// Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\&quot;2542620905475\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.
        /// </summary>
        /// <value>Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [\&quot;2542620905475\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.</value>
        [DataMember(Name="AUDIENCE_EXCLUDE", EmitDefaultValue=true)]
        public List<string> AUDIENCE_EXCLUDE { get; set; }

        /// <summary>
        /// Targeted customer list IDs. For example: [\&quot;2542620905473\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.
        /// </summary>
        /// <value>Targeted customer list IDs. For example: [\&quot;2542620905473\&quot;]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.</value>
        [DataMember(Name="AUDIENCE_INCLUDE", EmitDefaultValue=true)]
        public List<string> AUDIENCE_INCLUDE { get; set; }


        /// <summary>
        /// Gets or Sets GENDER
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<GENDEREnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum GENDEREnum
        {
            
            /// <summary>
            /// Enum UnknownEnum for unknown
            /// </summary>
            [EnumMember(Value = "unknown")]
            UnknownEnum = 1,
            
            /// <summary>
            /// Enum MaleEnum for male
            /// </summary>
            [EnumMember(Value = "male")]
            MaleEnum = 2,
            
            /// <summary>
            /// Enum FemaleEnum for female
            /// </summary>
            [EnumMember(Value = "female")]
            FemaleEnum = 3
        }

        /// <summary>
        /// Targeted genders. Values: [\&quot;unknown\&quot;,\&quot;male\&quot;,\&quot;female\&quot;]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.
        /// </summary>
        /// <value>Targeted genders. Values: [\&quot;unknown\&quot;,\&quot;male\&quot;,\&quot;female\&quot;]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.</value>
        [DataMember(Name="GENDER", EmitDefaultValue=true)]
        public List<TargetingSpec.GENDEREnum> GENDER { get; set; }

        /// <summary>
        /// Location region codes, e.g., \&quot;BE-VOV\&quot; (East Flanders, Belgium) For complete list, &lt;a href&#x3D;\&quot;https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\&quot; target&#x3D;\&quot;_blank\&quot;&gt;click here&lt;/a&gt; or postal codes, e.g., \&quot;US-94107\&quot;. Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).
        /// </summary>
        /// <value>Location region codes, e.g., \&quot;BE-VOV\&quot; (East Flanders, Belgium) For complete list, &lt;a href&#x3D;\&quot;https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx\&quot; target&#x3D;\&quot;_blank\&quot;&gt;click here&lt;/a&gt; or postal codes, e.g., \&quot;US-94107\&quot;. Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).</value>
        [DataMember(Name="GEO", EmitDefaultValue=true)]
        public List<string> GEO { get; set; }

        /// <summary>
        /// Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.
        /// </summary>
        /// <value>Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.</value>
        [DataMember(Name="INTEREST", EmitDefaultValue=false)]
        public List<string> INTEREST { get; set; }

        /// <summary>
        /// 24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.
        /// </summary>
        /// <value>24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.</value>
        [DataMember(Name="LOCALE", EmitDefaultValue=true)]
        public List<string> LOCALE { get; set; }

        /// <summary>
        /// 22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\&quot;US\&quot;, \&quot;807\&quot;]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).
        /// </summary>
        /// <value>22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [\&quot;US\&quot;, \&quot;807\&quot;]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).</value>
        [DataMember(Name="LOCATION", EmitDefaultValue=true)]
        public List<string> LOCATION { get; set; }

        /// <summary>
        /// Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting
        /// </summary>
        /// <value>Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting</value>
        [DataMember(Name="SHOPPING_RETARGETING", EmitDefaultValue=true)]
        public List<TargetingSpecSHOPPINGRETARGETING> SHOPPING_RETARGETING { get; set; }


        /// <summary>
        /// Gets or Sets TARGETING_STRATEGY
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<TARGETINGSTRATEGYEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TARGETINGSTRATEGYEnum
        {
            
            /// <summary>
            /// Enum CHOOSEYOUROWNEnum for CHOOSE_YOUR_OWN
            /// </summary>
            [EnumMember(Value = "CHOOSE_YOUR_OWN")]
            CHOOSEYOUROWNEnum = 1,
            
            /// <summary>
            /// Enum FINDNEWCUSTOMERSEnum for FIND_NEW_CUSTOMERS
            /// </summary>
            [EnumMember(Value = "FIND_NEW_CUSTOMERS")]
            FINDNEWCUSTOMERSEnum = 2,
            
            /// <summary>
            /// Enum RECONNECTWITHUSERSEnum for RECONNECT_WITH_USERS
            /// </summary>
            [EnumMember(Value = "RECONNECT_WITH_USERS")]
            RECONNECTWITHUSERSEnum = 3
        }

        /// <summary>
        /// Gets or Sets TARGETING_STRATEGY
        /// </summary>
        [DataMember(Name="TARGETING_STRATEGY", EmitDefaultValue=true)]
        public List<TargetingSpec.TARGETINGSTRATEGYEnum> TARGETING_STRATEGY { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TargetingSpec {\n");
            sb.Append("  AGE_BUCKET: ").Append(AGE_BUCKET).Append("\n");
            sb.Append("  APPTYPE: ").Append(APPTYPE).Append("\n");
            sb.Append("  AUDIENCE_EXCLUDE: ").Append(AUDIENCE_EXCLUDE).Append("\n");
            sb.Append("  AUDIENCE_INCLUDE: ").Append(AUDIENCE_INCLUDE).Append("\n");
            sb.Append("  GENDER: ").Append(GENDER).Append("\n");
            sb.Append("  GEO: ").Append(GEO).Append("\n");
            sb.Append("  INTEREST: ").Append(INTEREST).Append("\n");
            sb.Append("  LOCALE: ").Append(LOCALE).Append("\n");
            sb.Append("  LOCATION: ").Append(LOCATION).Append("\n");
            sb.Append("  SHOPPING_RETARGETING: ").Append(SHOPPING_RETARGETING).Append("\n");
            sb.Append("  TARGETING_STRATEGY: ").Append(TARGETING_STRATEGY).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((TargetingSpec)obj);
        }

        /// <summary>
        /// Returns true if TargetingSpec instances are equal
        /// </summary>
        /// <param name="other">Instance of TargetingSpec to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TargetingSpec other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AGE_BUCKET == other.AGE_BUCKET ||
                    AGE_BUCKET != null &&
                    other.AGE_BUCKET != null &&
                    AGE_BUCKET.SequenceEqual(other.AGE_BUCKET)
                ) && 
                (
                    APPTYPE == other.APPTYPE ||
                    APPTYPE != null &&
                    other.APPTYPE != null &&
                    APPTYPE.SequenceEqual(other.APPTYPE)
                ) && 
                (
                    AUDIENCE_EXCLUDE == other.AUDIENCE_EXCLUDE ||
                    AUDIENCE_EXCLUDE != null &&
                    other.AUDIENCE_EXCLUDE != null &&
                    AUDIENCE_EXCLUDE.SequenceEqual(other.AUDIENCE_EXCLUDE)
                ) && 
                (
                    AUDIENCE_INCLUDE == other.AUDIENCE_INCLUDE ||
                    AUDIENCE_INCLUDE != null &&
                    other.AUDIENCE_INCLUDE != null &&
                    AUDIENCE_INCLUDE.SequenceEqual(other.AUDIENCE_INCLUDE)
                ) && 
                (
                    GENDER == other.GENDER ||
                    GENDER != null &&
                    other.GENDER != null &&
                    GENDER.SequenceEqual(other.GENDER)
                ) && 
                (
                    GEO == other.GEO ||
                    GEO != null &&
                    other.GEO != null &&
                    GEO.SequenceEqual(other.GEO)
                ) && 
                (
                    INTEREST == other.INTEREST ||
                    INTEREST != null &&
                    other.INTEREST != null &&
                    INTEREST.SequenceEqual(other.INTEREST)
                ) && 
                (
                    LOCALE == other.LOCALE ||
                    LOCALE != null &&
                    other.LOCALE != null &&
                    LOCALE.SequenceEqual(other.LOCALE)
                ) && 
                (
                    LOCATION == other.LOCATION ||
                    LOCATION != null &&
                    other.LOCATION != null &&
                    LOCATION.SequenceEqual(other.LOCATION)
                ) && 
                (
                    SHOPPING_RETARGETING == other.SHOPPING_RETARGETING ||
                    SHOPPING_RETARGETING != null &&
                    other.SHOPPING_RETARGETING != null &&
                    SHOPPING_RETARGETING.SequenceEqual(other.SHOPPING_RETARGETING)
                ) && 
                (
                    TARGETING_STRATEGY == other.TARGETING_STRATEGY ||
                    TARGETING_STRATEGY != null &&
                    other.TARGETING_STRATEGY != null &&
                    TARGETING_STRATEGY.SequenceEqual(other.TARGETING_STRATEGY)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (AGE_BUCKET != null)
                    hashCode = hashCode * 59 + AGE_BUCKET.GetHashCode();
                    if (APPTYPE != null)
                    hashCode = hashCode * 59 + APPTYPE.GetHashCode();
                    if (AUDIENCE_EXCLUDE != null)
                    hashCode = hashCode * 59 + AUDIENCE_EXCLUDE.GetHashCode();
                    if (AUDIENCE_INCLUDE != null)
                    hashCode = hashCode * 59 + AUDIENCE_INCLUDE.GetHashCode();
                    if (GENDER != null)
                    hashCode = hashCode * 59 + GENDER.GetHashCode();
                    if (GEO != null)
                    hashCode = hashCode * 59 + GEO.GetHashCode();
                    if (INTEREST != null)
                    hashCode = hashCode * 59 + INTEREST.GetHashCode();
                    if (LOCALE != null)
                    hashCode = hashCode * 59 + LOCALE.GetHashCode();
                    if (LOCATION != null)
                    hashCode = hashCode * 59 + LOCATION.GetHashCode();
                    if (SHOPPING_RETARGETING != null)
                    hashCode = hashCode * 59 + SHOPPING_RETARGETING.GetHashCode();
                    if (TARGETING_STRATEGY != null)
                    hashCode = hashCode * 59 + TARGETING_STRATEGY.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(TargetingSpec left, TargetingSpec right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(TargetingSpec left, TargetingSpec right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
