/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CatalogsHotelProductGroupFilterKeys : IEquatable<CatalogsHotelProductGroupFilterKeys>
    {
        /// <summary>
        /// Gets or Sets PRICE
        /// </summary>
        [Required]
        [DataMember(Name="PRICE", EmitDefaultValue=false)]
        public CatalogsProductGroupPricingCurrencyCriteria PRICE { get; set; }

        /// <summary>
        /// Gets or Sets HOTEL_ID
        /// </summary>
        [Required]
        [DataMember(Name="HOTEL_ID", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria HOTEL_ID { get; set; }

        /// <summary>
        /// Gets or Sets BRAND
        /// </summary>
        [Required]
        [DataMember(Name="BRAND", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria BRAND { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL0
        /// </summary>
        [Required]
        [DataMember(Name="CUSTOM_LABEL_0", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL0 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL1
        /// </summary>
        [Required]
        [DataMember(Name="CUSTOM_LABEL_1", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL1 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL2
        /// </summary>
        [Required]
        [DataMember(Name="CUSTOM_LABEL_2", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL2 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL3
        /// </summary>
        [Required]
        [DataMember(Name="CUSTOM_LABEL_3", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL3 { get; set; }

        /// <summary>
        /// Gets or Sets CUSTOMLABEL4
        /// </summary>
        [Required]
        [DataMember(Name="CUSTOM_LABEL_4", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleStringCriteria CUSTOMLABEL4 { get; set; }

        /// <summary>
        /// Gets or Sets COUNTRY
        /// </summary>
        [Required]
        [DataMember(Name="COUNTRY", EmitDefaultValue=false)]
        public CatalogsProductGroupMultipleCountriesCriteria COUNTRY { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CatalogsHotelProductGroupFilterKeys {\n");
            sb.Append("  PRICE: ").Append(PRICE).Append("\n");
            sb.Append("  HOTEL_ID: ").Append(HOTEL_ID).Append("\n");
            sb.Append("  BRAND: ").Append(BRAND).Append("\n");
            sb.Append("  CUSTOMLABEL0: ").Append(CUSTOMLABEL0).Append("\n");
            sb.Append("  CUSTOMLABEL1: ").Append(CUSTOMLABEL1).Append("\n");
            sb.Append("  CUSTOMLABEL2: ").Append(CUSTOMLABEL2).Append("\n");
            sb.Append("  CUSTOMLABEL3: ").Append(CUSTOMLABEL3).Append("\n");
            sb.Append("  CUSTOMLABEL4: ").Append(CUSTOMLABEL4).Append("\n");
            sb.Append("  COUNTRY: ").Append(COUNTRY).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CatalogsHotelProductGroupFilterKeys)obj);
        }

        /// <summary>
        /// Returns true if CatalogsHotelProductGroupFilterKeys instances are equal
        /// </summary>
        /// <param name="other">Instance of CatalogsHotelProductGroupFilterKeys to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CatalogsHotelProductGroupFilterKeys other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    PRICE == other.PRICE ||
                    PRICE != null &&
                    PRICE.Equals(other.PRICE)
                ) && 
                (
                    HOTEL_ID == other.HOTEL_ID ||
                    HOTEL_ID != null &&
                    HOTEL_ID.Equals(other.HOTEL_ID)
                ) && 
                (
                    BRAND == other.BRAND ||
                    BRAND != null &&
                    BRAND.Equals(other.BRAND)
                ) && 
                (
                    CUSTOMLABEL0 == other.CUSTOMLABEL0 ||
                    CUSTOMLABEL0 != null &&
                    CUSTOMLABEL0.Equals(other.CUSTOMLABEL0)
                ) && 
                (
                    CUSTOMLABEL1 == other.CUSTOMLABEL1 ||
                    CUSTOMLABEL1 != null &&
                    CUSTOMLABEL1.Equals(other.CUSTOMLABEL1)
                ) && 
                (
                    CUSTOMLABEL2 == other.CUSTOMLABEL2 ||
                    CUSTOMLABEL2 != null &&
                    CUSTOMLABEL2.Equals(other.CUSTOMLABEL2)
                ) && 
                (
                    CUSTOMLABEL3 == other.CUSTOMLABEL3 ||
                    CUSTOMLABEL3 != null &&
                    CUSTOMLABEL3.Equals(other.CUSTOMLABEL3)
                ) && 
                (
                    CUSTOMLABEL4 == other.CUSTOMLABEL4 ||
                    CUSTOMLABEL4 != null &&
                    CUSTOMLABEL4.Equals(other.CUSTOMLABEL4)
                ) && 
                (
                    COUNTRY == other.COUNTRY ||
                    COUNTRY != null &&
                    COUNTRY.Equals(other.COUNTRY)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (PRICE != null)
                    hashCode = hashCode * 59 + PRICE.GetHashCode();
                    if (HOTEL_ID != null)
                    hashCode = hashCode * 59 + HOTEL_ID.GetHashCode();
                    if (BRAND != null)
                    hashCode = hashCode * 59 + BRAND.GetHashCode();
                    if (CUSTOMLABEL0 != null)
                    hashCode = hashCode * 59 + CUSTOMLABEL0.GetHashCode();
                    if (CUSTOMLABEL1 != null)
                    hashCode = hashCode * 59 + CUSTOMLABEL1.GetHashCode();
                    if (CUSTOMLABEL2 != null)
                    hashCode = hashCode * 59 + CUSTOMLABEL2.GetHashCode();
                    if (CUSTOMLABEL3 != null)
                    hashCode = hashCode * 59 + CUSTOMLABEL3.GetHashCode();
                    if (CUSTOMLABEL4 != null)
                    hashCode = hashCode * 59 + CUSTOMLABEL4.GetHashCode();
                    if (COUNTRY != null)
                    hashCode = hashCode * 59 + COUNTRY.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CatalogsHotelProductGroupFilterKeys left, CatalogsHotelProductGroupFilterKeys right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CatalogsHotelProductGroupFilterKeys left, CatalogsHotelProductGroupFilterKeys right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
