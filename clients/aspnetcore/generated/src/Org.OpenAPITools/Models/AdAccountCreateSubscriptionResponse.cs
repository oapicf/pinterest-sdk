/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AdAccountCreateSubscriptionResponse : IEquatable<AdAccountCreateSubscriptionResponse>
    {
        /// <summary>
        /// Subscription ID.
        /// </summary>
        /// <value>Subscription ID.</value>
        /* <example>8078432025948590686</example> */
        [RegularExpression("^\\d+$")]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Base64 encoded key for client to decrypt lead data.
        /// </summary>
        /// <value>Base64 encoded key for client to decrypt lead data.</value>
        /* <example>ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54</example> */
        [DataMember(Name="cryptographic_key", EmitDefaultValue=true)]
        public string CryptographicKey { get; set; }

        /// <summary>
        /// Lead data encryption algorithm.
        /// </summary>
        /// <value>Lead data encryption algorithm.</value>
        /* <example>AES-256-GCM</example> */
        [DataMember(Name="cryptographic_algorithm", EmitDefaultValue=true)]
        public string CryptographicAlgorithm { get; set; }

        /// <summary>
        /// Subscription creation time. Unix timestamp in milliseconds.
        /// </summary>
        /// <value>Subscription creation time. Unix timestamp in milliseconds.</value>
        /* <example>1699209842000</example> */
        [DataMember(Name="created_time", EmitDefaultValue=true)]
        public int CreatedTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AdAccountCreateSubscriptionResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CryptographicKey: ").Append(CryptographicKey).Append("\n");
            sb.Append("  CryptographicAlgorithm: ").Append(CryptographicAlgorithm).Append("\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((AdAccountCreateSubscriptionResponse)obj);
        }

        /// <summary>
        /// Returns true if AdAccountCreateSubscriptionResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of AdAccountCreateSubscriptionResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdAccountCreateSubscriptionResponse other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    CryptographicKey == other.CryptographicKey ||
                    CryptographicKey != null &&
                    CryptographicKey.Equals(other.CryptographicKey)
                ) && 
                (
                    CryptographicAlgorithm == other.CryptographicAlgorithm ||
                    CryptographicAlgorithm != null &&
                    CryptographicAlgorithm.Equals(other.CryptographicAlgorithm)
                ) && 
                (
                    CreatedTime == other.CreatedTime ||
                    
                    CreatedTime.Equals(other.CreatedTime)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (CryptographicKey != null)
                    hashCode = hashCode * 59 + CryptographicKey.GetHashCode();
                    if (CryptographicAlgorithm != null)
                    hashCode = hashCode * 59 + CryptographicAlgorithm.GetHashCode();
                    
                    hashCode = hashCode * 59 + CreatedTime.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(AdAccountCreateSubscriptionResponse left, AdAccountCreateSubscriptionResponse right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(AdAccountCreateSubscriptionResponse left, AdAccountCreateSubscriptionResponse right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
