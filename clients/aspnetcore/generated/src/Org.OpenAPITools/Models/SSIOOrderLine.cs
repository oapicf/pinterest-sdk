/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SSIOOrderLine : IEquatable<SSIOOrderLine>
    {
        /// <summary>
        /// OrderLineId in SFDC
        /// </summary>
        /// <value>OrderLineId in SFDC</value>
        [DataMember(Name="salesforce_order_line_id", EmitDefaultValue=true)]
        public string SalesforceOrderLineId { get; set; }

        /// <summary>
        /// Ads manager OrderLineId
        /// </summary>
        /// <value>Ads manager OrderLineId</value>
        [DataMember(Name="ads_manager_order_line_id", EmitDefaultValue=true)]
        public string AdsManagerOrderLineId { get; set; }

        /// <summary>
        /// The pin order id associated with the order line in SFDC
        /// </summary>
        /// <value>The pin order id associated with the order line in SFDC</value>
        [DataMember(Name="pin_order_id", EmitDefaultValue=true)]
        public string PinOrderId { get; set; }

        /// <summary>
        /// Last modified date.
        /// </summary>
        /// <value>Last modified date.</value>
        /* <example>2020-10-06T13:07:04.000Z</example> */
        [RegularExpression("^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z$")]
        [DataMember(Name="last_modified_date_time", EmitDefaultValue=true)]
        public string LastModifiedDateTime { get; set; }

        /// <summary>
        /// Start date of the order line.
        /// </summary>
        /// <value>Start date of the order line.</value>
        /* <example>Thu Mar 01 00:00:00 UTC 2018</example> */
        [DataMember(Name="start_date", EmitDefaultValue=true)]
        public DateOnly? StartDate { get; set; }

        /// <summary>
        /// End date of the order line.
        /// </summary>
        /// <value>End date of the order line.</value>
        /* <example>Mon Oct 05 00:00:00 UTC 2020</example> */
        [DataMember(Name="end_date", EmitDefaultValue=true)]
        public DateOnly? EndDate { get; set; }

        /// <summary>
        /// Bill To Company name
        /// </summary>
        /// <value>Bill To Company name</value>
        /* <example>Home Depot Inc.</example> */
        [DataMember(Name="bill_to_company_name", EmitDefaultValue=true)]
        public string BillToCompanyName { get; set; }

        /// <summary>
        /// Billing contact first name
        /// </summary>
        /// <value>Billing contact first name</value>
        /* <example>Mary</example> */
        [DataMember(Name="billing_contact_firstname", EmitDefaultValue=true)]
        public string BillingContactFirstname { get; set; }

        /// <summary>
        /// Billing contact last name
        /// </summary>
        /// <value>Billing contact last name</value>
        /* <example>Smith</example> */
        [DataMember(Name="billing_contact_lastname", EmitDefaultValue=true)]
        public string BillingContactLastname { get; set; }

        /// <summary>
        /// Billing contact email
        /// </summary>
        /// <value>Billing contact email</value>
        /* <example>mail@test.com</example> */
        [DataMember(Name="billing_contact_email", EmitDefaultValue=true)]
        public string BillingContactEmail { get; set; }

        /// <summary>
        /// Billing media email
        /// </summary>
        /// <value>Billing media email</value>
        /* <example>mail@test.com</example> */
        [DataMember(Name="media_contact_email", EmitDefaultValue=true)]
        public string MediaContactEmail { get; set; }

        /// <summary>
        /// Billing contact first name
        /// </summary>
        /// <value>Billing contact first name</value>
        /* <example>John</example> */
        [DataMember(Name="media_contact_firstname", EmitDefaultValue=true)]
        public string MediaContactFirstname { get; set; }

        /// <summary>
        /// Billing contact first name
        /// </summary>
        /// <value>Billing contact first name</value>
        /* <example>Doe</example> */
        [DataMember(Name="media_contact_lastname", EmitDefaultValue=true)]
        public string MediaContactLastname { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyInfo
        /// </summary>
        [DataMember(Name="currency_info", EmitDefaultValue=true)]
        public Currency CurrencyInfo { get; set; }

        /// <summary>
        /// Agency link
        /// </summary>
        /// <value>Agency link</value>
        [DataMember(Name="agency_link", EmitDefaultValue=true)]
        public string AgencyLink { get; set; }

        /// <summary>
        /// The po number
        /// </summary>
        /// <value>The po number</value>
        [DataMember(Name="po_number", EmitDefaultValue=true)]
        public string PoNumber { get; set; }

        /// <summary>
        /// The order name
        /// </summary>
        /// <value>The order name</value>
        [DataMember(Name="order_name", EmitDefaultValue=true)]
        public string OrderName { get; set; }

        /// <summary>
        /// The Pinterest marketing partner name
        /// </summary>
        /// <value>The Pinterest marketing partner name</value>
        [DataMember(Name="pmp_name", EmitDefaultValue=true)]
        public string PmpName { get; set; }

        /// <summary>
        /// The SFDC id for the terms
        /// </summary>
        /// <value>The SFDC id for the terms</value>
        [DataMember(Name="accepted_terms_id", EmitDefaultValue=true)]
        public string AcceptedTermsId { get; set; }

        /// <summary>
        /// The UTC timestamp (to the nearest sec) of when terms were accepted
        /// </summary>
        /// <value>The UTC timestamp (to the nearest sec) of when terms were accepted</value>
        /* <example>2020-10-06T13:07:04.000Z</example> */
        [RegularExpression("^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z$")]
        [DataMember(Name="accepted_terms_time", EmitDefaultValue=true)]
        public string AcceptedTermsTime { get; set; }

        /// <summary>
        /// If Budget order line, the budget amount.
        /// </summary>
        /// <value>If Budget order line, the budget amount.</value>
        /* <example>5000000</example> */
        [DataMember(Name="budget_amount", EmitDefaultValue=true)]
        public decimal? BudgetAmount { get; set; }

        /// <summary>
        /// If Ongoing (perpetual) order line, the estimated monthly spend
        /// </summary>
        /// <value>If Ongoing (perpetual) order line, the estimated monthly spend</value>
        [DataMember(Name="estimated_monthly_spend", EmitDefaultValue=true)]
        public decimal? EstimatedMonthlySpend { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SSIOOrderLine {\n");
            sb.Append("  SalesforceOrderLineId: ").Append(SalesforceOrderLineId).Append("\n");
            sb.Append("  AdsManagerOrderLineId: ").Append(AdsManagerOrderLineId).Append("\n");
            sb.Append("  PinOrderId: ").Append(PinOrderId).Append("\n");
            sb.Append("  LastModifiedDateTime: ").Append(LastModifiedDateTime).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  BillToCompanyName: ").Append(BillToCompanyName).Append("\n");
            sb.Append("  BillingContactFirstname: ").Append(BillingContactFirstname).Append("\n");
            sb.Append("  BillingContactLastname: ").Append(BillingContactLastname).Append("\n");
            sb.Append("  BillingContactEmail: ").Append(BillingContactEmail).Append("\n");
            sb.Append("  MediaContactEmail: ").Append(MediaContactEmail).Append("\n");
            sb.Append("  MediaContactFirstname: ").Append(MediaContactFirstname).Append("\n");
            sb.Append("  MediaContactLastname: ").Append(MediaContactLastname).Append("\n");
            sb.Append("  CurrencyInfo: ").Append(CurrencyInfo).Append("\n");
            sb.Append("  AgencyLink: ").Append(AgencyLink).Append("\n");
            sb.Append("  PoNumber: ").Append(PoNumber).Append("\n");
            sb.Append("  OrderName: ").Append(OrderName).Append("\n");
            sb.Append("  PmpName: ").Append(PmpName).Append("\n");
            sb.Append("  AcceptedTermsId: ").Append(AcceptedTermsId).Append("\n");
            sb.Append("  AcceptedTermsTime: ").Append(AcceptedTermsTime).Append("\n");
            sb.Append("  BudgetAmount: ").Append(BudgetAmount).Append("\n");
            sb.Append("  EstimatedMonthlySpend: ").Append(EstimatedMonthlySpend).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SSIOOrderLine)obj);
        }

        /// <summary>
        /// Returns true if SSIOOrderLine instances are equal
        /// </summary>
        /// <param name="other">Instance of SSIOOrderLine to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SSIOOrderLine other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    SalesforceOrderLineId == other.SalesforceOrderLineId ||
                    SalesforceOrderLineId != null &&
                    SalesforceOrderLineId.Equals(other.SalesforceOrderLineId)
                ) && 
                (
                    AdsManagerOrderLineId == other.AdsManagerOrderLineId ||
                    AdsManagerOrderLineId != null &&
                    AdsManagerOrderLineId.Equals(other.AdsManagerOrderLineId)
                ) && 
                (
                    PinOrderId == other.PinOrderId ||
                    PinOrderId != null &&
                    PinOrderId.Equals(other.PinOrderId)
                ) && 
                (
                    LastModifiedDateTime == other.LastModifiedDateTime ||
                    LastModifiedDateTime != null &&
                    LastModifiedDateTime.Equals(other.LastModifiedDateTime)
                ) && 
                (
                    StartDate == other.StartDate ||
                    StartDate != null &&
                    StartDate.Equals(other.StartDate)
                ) && 
                (
                    EndDate == other.EndDate ||
                    EndDate != null &&
                    EndDate.Equals(other.EndDate)
                ) && 
                (
                    BillToCompanyName == other.BillToCompanyName ||
                    BillToCompanyName != null &&
                    BillToCompanyName.Equals(other.BillToCompanyName)
                ) && 
                (
                    BillingContactFirstname == other.BillingContactFirstname ||
                    BillingContactFirstname != null &&
                    BillingContactFirstname.Equals(other.BillingContactFirstname)
                ) && 
                (
                    BillingContactLastname == other.BillingContactLastname ||
                    BillingContactLastname != null &&
                    BillingContactLastname.Equals(other.BillingContactLastname)
                ) && 
                (
                    BillingContactEmail == other.BillingContactEmail ||
                    BillingContactEmail != null &&
                    BillingContactEmail.Equals(other.BillingContactEmail)
                ) && 
                (
                    MediaContactEmail == other.MediaContactEmail ||
                    MediaContactEmail != null &&
                    MediaContactEmail.Equals(other.MediaContactEmail)
                ) && 
                (
                    MediaContactFirstname == other.MediaContactFirstname ||
                    MediaContactFirstname != null &&
                    MediaContactFirstname.Equals(other.MediaContactFirstname)
                ) && 
                (
                    MediaContactLastname == other.MediaContactLastname ||
                    MediaContactLastname != null &&
                    MediaContactLastname.Equals(other.MediaContactLastname)
                ) && 
                (
                    CurrencyInfo == other.CurrencyInfo ||
                    
                    CurrencyInfo.Equals(other.CurrencyInfo)
                ) && 
                (
                    AgencyLink == other.AgencyLink ||
                    AgencyLink != null &&
                    AgencyLink.Equals(other.AgencyLink)
                ) && 
                (
                    PoNumber == other.PoNumber ||
                    PoNumber != null &&
                    PoNumber.Equals(other.PoNumber)
                ) && 
                (
                    OrderName == other.OrderName ||
                    OrderName != null &&
                    OrderName.Equals(other.OrderName)
                ) && 
                (
                    PmpName == other.PmpName ||
                    PmpName != null &&
                    PmpName.Equals(other.PmpName)
                ) && 
                (
                    AcceptedTermsId == other.AcceptedTermsId ||
                    AcceptedTermsId != null &&
                    AcceptedTermsId.Equals(other.AcceptedTermsId)
                ) && 
                (
                    AcceptedTermsTime == other.AcceptedTermsTime ||
                    AcceptedTermsTime != null &&
                    AcceptedTermsTime.Equals(other.AcceptedTermsTime)
                ) && 
                (
                    BudgetAmount == other.BudgetAmount ||
                    BudgetAmount != null &&
                    BudgetAmount.Equals(other.BudgetAmount)
                ) && 
                (
                    EstimatedMonthlySpend == other.EstimatedMonthlySpend ||
                    EstimatedMonthlySpend != null &&
                    EstimatedMonthlySpend.Equals(other.EstimatedMonthlySpend)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (SalesforceOrderLineId != null)
                    hashCode = hashCode * 59 + SalesforceOrderLineId.GetHashCode();
                    if (AdsManagerOrderLineId != null)
                    hashCode = hashCode * 59 + AdsManagerOrderLineId.GetHashCode();
                    if (PinOrderId != null)
                    hashCode = hashCode * 59 + PinOrderId.GetHashCode();
                    if (LastModifiedDateTime != null)
                    hashCode = hashCode * 59 + LastModifiedDateTime.GetHashCode();
                    if (StartDate != null)
                    hashCode = hashCode * 59 + StartDate.GetHashCode();
                    if (EndDate != null)
                    hashCode = hashCode * 59 + EndDate.GetHashCode();
                    if (BillToCompanyName != null)
                    hashCode = hashCode * 59 + BillToCompanyName.GetHashCode();
                    if (BillingContactFirstname != null)
                    hashCode = hashCode * 59 + BillingContactFirstname.GetHashCode();
                    if (BillingContactLastname != null)
                    hashCode = hashCode * 59 + BillingContactLastname.GetHashCode();
                    if (BillingContactEmail != null)
                    hashCode = hashCode * 59 + BillingContactEmail.GetHashCode();
                    if (MediaContactEmail != null)
                    hashCode = hashCode * 59 + MediaContactEmail.GetHashCode();
                    if (MediaContactFirstname != null)
                    hashCode = hashCode * 59 + MediaContactFirstname.GetHashCode();
                    if (MediaContactLastname != null)
                    hashCode = hashCode * 59 + MediaContactLastname.GetHashCode();
                    
                    hashCode = hashCode * 59 + CurrencyInfo.GetHashCode();
                    if (AgencyLink != null)
                    hashCode = hashCode * 59 + AgencyLink.GetHashCode();
                    if (PoNumber != null)
                    hashCode = hashCode * 59 + PoNumber.GetHashCode();
                    if (OrderName != null)
                    hashCode = hashCode * 59 + OrderName.GetHashCode();
                    if (PmpName != null)
                    hashCode = hashCode * 59 + PmpName.GetHashCode();
                    if (AcceptedTermsId != null)
                    hashCode = hashCode * 59 + AcceptedTermsId.GetHashCode();
                    if (AcceptedTermsTime != null)
                    hashCode = hashCode * 59 + AcceptedTermsTime.GetHashCode();
                    if (BudgetAmount != null)
                    hashCode = hashCode * 59 + BudgetAmount.GetHashCode();
                    if (EstimatedMonthlySpend != null)
                    hashCode = hashCode * 59 + EstimatedMonthlySpend.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SSIOOrderLine left, SSIOOrderLine right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SSIOOrderLine left, SSIOOrderLine right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
