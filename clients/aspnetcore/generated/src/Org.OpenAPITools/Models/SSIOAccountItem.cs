/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SSIOAccountItem : IEquatable<SSIOAccountItem>
    {
        /// <summary>
        /// Salesforce id for billto_info
        /// </summary>
        /// <value>Salesforce id for billto_info</value>
        /* <example>0011N00001LW8kAQAT</example> */
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Salesforce id for IO Terms and Conditions
        /// </summary>
        /// <value>Salesforce id for IO Terms and Conditions</value>
        /* <example>a2S1N000000bKHgUAM</example> */
        [DataMember(Name="io_terms_id", EmitDefaultValue=false)]
        public string IoTermsId { get; set; }

        /// <summary>
        /// Salesforce text for IO Terms and Conditions
        /// </summary>
        /// <value>Salesforce text for IO Terms and Conditions</value>
        /* <example>The IO is governed by the terms available at https://business.pinterest.com/en/pinterest-advertising-services-agreement/. If a budget is listed on this IO, the parties agree that Advertiser (or if applicable, its Agency) may apply any of the budget to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees. The terms of the Agreement supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.</example> */
        [DataMember(Name="io_terms", EmitDefaultValue=false)]
        public string IoTerms { get; set; }

        /// <summary>
        /// Salesforce id for US Terms and Conditions
        /// </summary>
        /// <value>Salesforce id for US Terms and Conditions</value>
        /* <example>a2S1N000000bKIOUA2</example> */
        [DataMember(Name="us_terms_id", EmitDefaultValue=false)]
        public string UsTermsId { get; set; }

        /// <summary>
        /// Salesforce text for US Terms and Conditions
        /// </summary>
        /// <value>Salesforce text for US Terms and Conditions</value>
        /* <example>This Insertion Order (&quot;IO&quot;) is subject to the Pinterest Addendum To IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0), as executed by Pinterest, Inc. and GroupM Worldwide LLC on May 7, 2014 and Amendment No. 1 to Pinterest Addendum to IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0) as executed by Pinterest, Inc. and GroupM Worldwide LLC on August 20, 2015. The parties agree that Agency may apply any of the budget listed on this IO to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees.The terms of the Addendum supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.</example> */
        [DataMember(Name="us_terms", EmitDefaultValue=false)]
        public string UsTerms { get; set; }

        /// <summary>
        /// Salesforce id for Rest of the World Terms and Conditions
        /// </summary>
        /// <value>Salesforce id for Rest of the World Terms and Conditions</value>
        /* <example>a2S1N000000bKHhUAM</example> */
        [DataMember(Name="row_terms_id", EmitDefaultValue=false)]
        public string RowTermsId { get; set; }

        /// <summary>
        /// Salesforce text for Rest of the World Terms and Conditions
        /// </summary>
        /// <value>Salesforce text for Rest of the World Terms and Conditions</value>
        /* <example>The IO is governed by the terms available at
https://business.pinterest.com/en-gb/pinterest-advertising-services-agreement</example> */
        [DataMember(Name="row_terms", EmitDefaultValue=false)]
        public string RowTerms { get; set; }

        /// <summary>
        /// Insertion Order Type - Pinterest Paper or Agency Paper
        /// </summary>
        /// <value>Insertion Order Type - Pinterest Paper or Agency Paper</value>
        /* <example>Pinterest Paper</example> */
        [DataMember(Name="io_type", EmitDefaultValue=false)]
        public string IoType { get; set; }

        /// <summary>
        /// Address information that is associated with this account.
        /// </summary>
        /// <value>Address information that is associated with this account.</value>
        [DataMember(Name="addresses", EmitDefaultValue=false)]
        public List<SSIOAccountAddress> Addresses { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SSIOAccountItem {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IoTermsId: ").Append(IoTermsId).Append("\n");
            sb.Append("  IoTerms: ").Append(IoTerms).Append("\n");
            sb.Append("  UsTermsId: ").Append(UsTermsId).Append("\n");
            sb.Append("  UsTerms: ").Append(UsTerms).Append("\n");
            sb.Append("  RowTermsId: ").Append(RowTermsId).Append("\n");
            sb.Append("  RowTerms: ").Append(RowTerms).Append("\n");
            sb.Append("  IoType: ").Append(IoType).Append("\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SSIOAccountItem)obj);
        }

        /// <summary>
        /// Returns true if SSIOAccountItem instances are equal
        /// </summary>
        /// <param name="other">Instance of SSIOAccountItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SSIOAccountItem other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    IoTermsId == other.IoTermsId ||
                    IoTermsId != null &&
                    IoTermsId.Equals(other.IoTermsId)
                ) && 
                (
                    IoTerms == other.IoTerms ||
                    IoTerms != null &&
                    IoTerms.Equals(other.IoTerms)
                ) && 
                (
                    UsTermsId == other.UsTermsId ||
                    UsTermsId != null &&
                    UsTermsId.Equals(other.UsTermsId)
                ) && 
                (
                    UsTerms == other.UsTerms ||
                    UsTerms != null &&
                    UsTerms.Equals(other.UsTerms)
                ) && 
                (
                    RowTermsId == other.RowTermsId ||
                    RowTermsId != null &&
                    RowTermsId.Equals(other.RowTermsId)
                ) && 
                (
                    RowTerms == other.RowTerms ||
                    RowTerms != null &&
                    RowTerms.Equals(other.RowTerms)
                ) && 
                (
                    IoType == other.IoType ||
                    IoType != null &&
                    IoType.Equals(other.IoType)
                ) && 
                (
                    Addresses == other.Addresses ||
                    Addresses != null &&
                    other.Addresses != null &&
                    Addresses.SequenceEqual(other.Addresses)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (IoTermsId != null)
                    hashCode = hashCode * 59 + IoTermsId.GetHashCode();
                    if (IoTerms != null)
                    hashCode = hashCode * 59 + IoTerms.GetHashCode();
                    if (UsTermsId != null)
                    hashCode = hashCode * 59 + UsTermsId.GetHashCode();
                    if (UsTerms != null)
                    hashCode = hashCode * 59 + UsTerms.GetHashCode();
                    if (RowTermsId != null)
                    hashCode = hashCode * 59 + RowTermsId.GetHashCode();
                    if (RowTerms != null)
                    hashCode = hashCode * 59 + RowTerms.GetHashCode();
                    if (IoType != null)
                    hashCode = hashCode * 59 + IoType.GetHashCode();
                    if (Addresses != null)
                    hashCode = hashCode * 59 + Addresses.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SSIOAccountItem left, SSIOAccountItem right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SSIOAccountItem left, SSIOAccountItem right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
