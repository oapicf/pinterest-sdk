/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Object declaring an asset role update to an invite.
    /// </summary>
    [DataContract]
    public partial class CreateAssetInvitesRequestItem : IEquatable<CreateAssetInvitesRequestItem>
    {
        /// <summary>
        /// Unique identifier of an invite.
        /// </summary>
        /// <value>Unique identifier of an invite.</value>
        /* <example>1234567890123</example> */
        [Required]
        [RegularExpression("^\\d+$")]
        [DataMember(Name="invite_id", EmitDefaultValue=false)]
        public string InviteId { get; set; }

        /// <summary>
        /// Gets or Sets InviteType
        /// </summary>
        [Required]
        [DataMember(Name="invite_type", EmitDefaultValue=true)]
        public InviteType InviteType { get; set; }

        /// <summary>
        /// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
        /// </summary>
        /// <value>An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. </value>
        /* <example>{&quot;549760723247&quot;:[&quot;ANALYST&quot;],&quot;549760723248&quot;:[&quot;ANALYST&quot;,&quot;ADMIN&quot;],&quot;809944451643622187&quot;:[&quot;PROFILE_PUBLISHER&quot;]}</example> */
        [Required]
        [DataMember(Name="asset_id_to_permissions", EmitDefaultValue=false)]
        public Dictionary<string, List<Permissions>> AssetIdToPermissions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateAssetInvitesRequestItem {\n");
            sb.Append("  InviteId: ").Append(InviteId).Append("\n");
            sb.Append("  InviteType: ").Append(InviteType).Append("\n");
            sb.Append("  AssetIdToPermissions: ").Append(AssetIdToPermissions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((CreateAssetInvitesRequestItem)obj);
        }

        /// <summary>
        /// Returns true if CreateAssetInvitesRequestItem instances are equal
        /// </summary>
        /// <param name="other">Instance of CreateAssetInvitesRequestItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateAssetInvitesRequestItem other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    InviteId == other.InviteId ||
                    InviteId != null &&
                    InviteId.Equals(other.InviteId)
                ) && 
                (
                    InviteType == other.InviteType ||
                    
                    InviteType.Equals(other.InviteType)
                ) && 
                (
                    AssetIdToPermissions == other.AssetIdToPermissions ||
                    AssetIdToPermissions != null &&
                    other.AssetIdToPermissions != null &&
                    AssetIdToPermissions.SequenceEqual(other.AssetIdToPermissions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (InviteId != null)
                    hashCode = hashCode * 59 + InviteId.GetHashCode();
                    
                    hashCode = hashCode * 59 + InviteType.GetHashCode();
                    if (AssetIdToPermissions != null)
                    hashCode = hashCode * 59 + AssetIdToPermissions.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(CreateAssetInvitesRequestItem left, CreateAssetInvitesRequestItem right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(CreateAssetInvitesRequestItem left, CreateAssetInvitesRequestItem right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
