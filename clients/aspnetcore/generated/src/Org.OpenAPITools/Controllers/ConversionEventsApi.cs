/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ConversionEventsApiController : ControllerBase
    { 
        /// <summary>
        /// Send conversions
        /// </summary>
        /// <remarks>The Pinterest API offers advertisers a way to send Pinterest their conversion information (including web conversions, in-app conversions, or even offline conversions) based on their &lt;code&gt;ad_account_id&lt;/code&gt;. The request body should be a JSON object. - This endpoint requires an &lt;code&gt;access_token&lt;/code&gt; be generated through Ads Manager. Review the &lt;a href&#x3D;\&quot;/docs/api-features/conversion-overview/\&quot;&gt;Conversions Guide&lt;/a&gt; for more details. (Note that the authorization header required is &lt;code&gt;Authorization: Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;). - The token&#39;s &lt;code&gt;user_account&lt;/code&gt; must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Audience, Campaign. (Note that the token can be used across multiple ad accounts under an user ID.) - This endpoint has a rate limit of 5,000 calls per minute per ad account. - If the merchant is submitting this information using both Pinterest conversion tags and the Pinterest API, Pinterest will remove duplicate information before reporting. (Note that events that took place offline cannot be deduplicated.)</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="conversionEvents">Conversion events.</param>
        /// <param name="test">Include query param ?test&#x3D;true to mark the request as a test request. The events will not be recorded but the API will still return the same response messages. Use this mode to verify your requests are working and your events are constructed correctly. Warning: If you use this query parameter, be certain that it is off (set to false or deleted) before sending a legitimate (non-testing) request.</param>
        /// <response code="200">Success</response>
        /// <response code="400">The request was invalid.</response>
        /// <response code="401">Not authorized to send conversion events</response>
        /// <response code="403">Unauthorized access.</response>
        /// <response code="422">Not all events were successfully processed.</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits within a short time window.</response>
        /// <response code="503">The endpoint has been ramped down and is currently not accepting any traffic.</response>
        /// <response code="0">Unexpected errors</response>
        [HttpPost]
        [Route("/v5/ad_accounts/{ad_account_id}/events")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("EventsCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConversionApiResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The request was invalid.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authorized to send conversion events")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Unauthorized access.")]
        [SwaggerResponse(statusCode: 422, type: typeof(DetailedError), description: "Not all events were successfully processed.")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits within a short time window.")]
        [SwaggerResponse(statusCode: 503, type: typeof(Error), description: "The endpoint has been ramped down and is currently not accepting any traffic.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected errors")]
        public virtual IActionResult EventsCreate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]ConversionEvents conversionEvents, [FromQuery (Name = "test")]bool? test)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConversionApiResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(DetailedError));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"num_events_processed\" : 6,\n  \"num_events_received\" : 0,\n  \"events\" : [ {\n    \"error_message\" : \"error_message\",\n    \"warning_message\" : \"warning_message\",\n    \"status\" : \"processed\"\n  }, {\n    \"error_message\" : \"error_message\",\n    \"warning_message\" : \"warning_message\",\n    \"status\" : \"processed\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 1,\n  \"details\" : \"{}\",\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConversionApiResponse>(exampleJson)
            : default(ConversionApiResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
