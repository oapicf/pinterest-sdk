/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CustomerListsApiController : ControllerBase
    { 
        /// <summary>
        /// Create customer lists
        /// </summary>
        /// <remarks>&lt;p&gt;Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).&lt;/p&gt; &lt;p&gt;A customer list is one of the four types of Pinterest audiences: for more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt; or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;p/&gt;  &lt;p&gt;&lt;b&gt;Please review our &lt;u&gt;&lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting#section-13341\&quot; target&#x3D;\&quot;_blank\&quot;&gt;requirements&lt;/a&gt;&lt;/u&gt; for what type of information is allowed when uploading a customer list.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;When you create a customer list, the system scans the list for existing Pinterest accounts; the list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process is complete. The filtered list – containing only the Pinterest accounts that were included in your starting list – is what will be used to create the audience.&lt;/p&gt; &lt;p&gt;Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type) using the &lt;a href&#x3D;\&quot;#operation/create_audience_handler\&quot;&gt;create audience endpoint&lt;/a&gt; before it can be used.&lt;/p&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="customerListRequest">Parameters to get Customer lists info</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/ad_accounts/{ad_account_id}/customer_lists")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CustomerListsCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomerList), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult CustomerListsCreate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]CustomerListRequest customerListRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomerList));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"created_time\" : 1452208622,\n  \"updated_time\" : 1461269616,\n  \"name\" : \"The Glengarry Glen Ross leads\",\n  \"num_removed_user_records\" : 0,\n  \"id\" : \"643\",\n  \"num_uploaded_user_records\" : 11,\n  \"type\" : \"customerlist\",\n  \"num_batches\" : 2,\n  \"exceptions\" : \"{}\",\n  \"ad_account_id\" : \"549756359984\",\n  \"status\" : \"PROCESSING\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomerList>(exampleJson)
            : default(CustomerList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get customer list
        /// </summary>
        /// <remarks>Gets a specific customer list given the customer list ID.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="customerListId">Unique identifier of a customer list</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}")]
        [ValidateModelState]
        [SwaggerOperation("CustomerListsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomerList), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult CustomerListsGet([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromRoute (Name = "customer_list_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string customerListId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomerList));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"created_time\" : 1452208622,\n  \"updated_time\" : 1461269616,\n  \"name\" : \"The Glengarry Glen Ross leads\",\n  \"num_removed_user_records\" : 0,\n  \"id\" : \"643\",\n  \"num_uploaded_user_records\" : 11,\n  \"type\" : \"customerlist\",\n  \"num_batches\" : 2,\n  \"exceptions\" : \"{}\",\n  \"ad_account_id\" : \"549756359984\",\n  \"status\" : \"PROCESSING\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomerList>(exampleJson)
            : default(CustomerList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get customer lists
        /// </summary>
        /// <remarks>&lt;p&gt;Get a set of customer lists including id and name based on the filters provided.&lt;/p&gt; &lt;p&gt;(Customer lists are a type of audience.) For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;  or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;/p&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/customer_lists")]
        [ValidateModelState]
        [SwaggerOperation("CustomerListsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomerListsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult CustomerListsList([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "order")]string order, [FromQuery (Name = "bookmark")]string bookmark)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomerListsList200Response));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"created_time\" : 1452208622,\n    \"updated_time\" : 1461269616,\n    \"name\" : \"The Glengarry Glen Ross leads\",\n    \"num_removed_user_records\" : 0,\n    \"id\" : \"643\",\n    \"num_uploaded_user_records\" : 11,\n    \"type\" : \"customerlist\",\n    \"num_batches\" : 2,\n    \"exceptions\" : \"{}\",\n    \"ad_account_id\" : \"549756359984\",\n    \"status\" : \"PROCESSING\"\n  }, {\n    \"created_time\" : 1452208622,\n    \"updated_time\" : 1461269616,\n    \"name\" : \"The Glengarry Glen Ross leads\",\n    \"num_removed_user_records\" : 0,\n    \"id\" : \"643\",\n    \"num_uploaded_user_records\" : 11,\n    \"type\" : \"customerlist\",\n    \"num_batches\" : 2,\n    \"exceptions\" : \"{}\",\n    \"ad_account_id\" : \"549756359984\",\n    \"status\" : \"PROCESSING\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomerListsList200Response>(exampleJson)
            : default(CustomerListsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update customer list
        /// </summary>
        /// <remarks>&lt;p&gt;Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)&lt;/p&gt; &lt;p&gt;When you add records to an existing customer list, the system scans the additions for existing Pinterest accounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records  to add will be deleted when the matching process is complete.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt; or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;/p&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="customerListId">Unique identifier of a customer list</param>
        /// <param name="customerListUpdateRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CustomerListsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(CustomerList), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult CustomerListsUpdate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromRoute (Name = "customer_list_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string customerListId, [FromBody]CustomerListUpdateRequest customerListUpdateRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CustomerList));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"created_time\" : 1452208622,\n  \"updated_time\" : 1461269616,\n  \"name\" : \"The Glengarry Glen Ross leads\",\n  \"num_removed_user_records\" : 0,\n  \"id\" : \"643\",\n  \"num_uploaded_user_records\" : 11,\n  \"type\" : \"customerlist\",\n  \"num_batches\" : 2,\n  \"exceptions\" : \"{}\",\n  \"ad_account_id\" : \"549756359984\",\n  \"status\" : \"PROCESSING\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CustomerList>(exampleJson)
            : default(CustomerList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
