/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TargetingTemplateApiController : ControllerBase
    { 
        /// <summary>
        /// Create targeting templates
        /// </summary>
        /// <remarks>&lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;  &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.&lt;/p&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="targetingTemplateCreate">targeting template creation entity</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid ad account id.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/ad_accounts/{ad_account_id}/targeting_templates")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("TargetingTemplateCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(TargetingTemplateGetResponseData), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid ad account id.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult TargetingTemplateCreate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]TargetingTemplateCreate targetingTemplateCreate)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TargetingTemplateGetResponseData));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"sizing\" : {\n    \"reach_estimate\" : {\n      \"estimate\" : 63492000,\n      \"lower_bound\" : 47619000,\n      \"upper_bound\" : 79365000\n    }\n  },\n  \"created_time\" : 1432744744,\n  \"updated_time\" : 1432744744,\n  \"keywords\" : [ {\n    \"value\" : \"cats\",\n    \"match_type\" : \"EXACT_NEGATIVE\"\n  } ],\n  \"auto_targeting_enabled\" : true,\n  \"tracking_urls\" : {\n    \"impression\" : [ \"URL1\", \"URL2\" ],\n    \"click\" : [ \"URL1\", \"URL2\" ],\n    \"engagement\" : [ \"URL1\", \"URL2\" ],\n    \"buyable_button\" : [ \"URL1\", \"URL2\" ],\n    \"audience_verification\" : [ \"URL1\", \"URL2\" ]\n  },\n  \"ad_account_id\" : \"549755885175\",\n  \"targeting_attributes\" : {\n    \"GEO\" : [ \"GEO\", \"GEO\" ],\n    \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ],\n    \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ],\n    \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ],\n    \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ],\n    \"SHOPPING_RETARGETING\" : [ {\n      \"lookback_window\" : 30,\n      \"exclusion_window\" : 14,\n      \"tag_types\" : [ 0, 6 ]\n    }, {\n      \"lookback_window\" : 30,\n      \"exclusion_window\" : 14,\n      \"tag_types\" : [ 0, 6 ]\n    } ],\n    \"GENDER\" : [ \"unknown\", \"unknown\" ],\n    \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ],\n    \"APPTYPE\" : [ \"ipad\", \"iphone\" ],\n    \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ],\n    \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ]\n  },\n  \"valid\" : true,\n  \"name\" : \"Gaming\",\n  \"id\" : \"643\",\n  \"placement_group\" : \"ALL\",\n  \"status\" : \"ACTIVE\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TargetingTemplateGetResponseData>(exampleJson)
            : default(TargetingTemplateGetResponseData);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List targeting templates
        /// </summary>
        /// <remarks>Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.</param>
        /// <param name="includeSizing">Include audience sizing in result or not</param>
        /// <param name="searchQuery">Search keyword for targeting templates</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid ad account id.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/targeting_templates")]
        [ValidateModelState]
        [SwaggerOperation("TargetingTemplateList")]
        [SwaggerResponse(statusCode: 200, type: typeof(TargetingTemplateList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid ad account id.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult TargetingTemplateList([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "order")]string order, [FromQuery (Name = "include_sizing")]bool? includeSizing, [FromQuery (Name = "search_query")]string searchQuery, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "bookmark")]string bookmark)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TargetingTemplateList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"targeting_attributes\" : {\n      \"GEO\" : [ \"GEO\", \"GEO\" ],\n      \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ],\n      \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ],\n      \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ],\n      \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ],\n      \"SHOPPING_RETARGETING\" : [ {\n        \"lookback_window\" : 30,\n        \"exclusion_window\" : 14,\n        \"tag_types\" : [ 0, 6 ]\n      }, {\n        \"lookback_window\" : 30,\n        \"exclusion_window\" : 14,\n        \"tag_types\" : [ 0, 6 ]\n      } ],\n      \"GENDER\" : [ \"unknown\", \"unknown\" ],\n      \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ],\n      \"APPTYPE\" : [ \"ipad\", \"iphone\" ],\n      \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ],\n      \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ]\n    },\n    \"sizing\" : {\n      \"reach_estimate\" : {\n        \"estimate\" : 63492000,\n        \"lower_bound\" : 47619000,\n        \"upper_bound\" : 79365000\n      }\n    },\n    \"created_time\" : 1432744744,\n    \"updated_time\" : 1432744744,\n    \"keywords\" : [ {\n      \"value\" : \"cats\",\n      \"match_type\" : \"EXACT_NEGATIVE\"\n    } ],\n    \"name\" : \"Gaming\",\n    \"id\" : \"643\",\n    \"auto_targeting_enabled\" : true,\n    \"placement_group\" : \"ALL\",\n    \"tracking_urls\" : {\n      \"impression\" : [ \"URL1\", \"URL2\" ],\n      \"click\" : [ \"URL1\", \"URL2\" ],\n      \"engagement\" : [ \"URL1\", \"URL2\" ],\n      \"buyable_button\" : [ \"URL1\", \"URL2\" ],\n      \"audience_verification\" : [ \"URL1\", \"URL2\" ]\n    },\n    \"ad_account_id\" : \"549755885175\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"targeting_attributes\" : {\n      \"GEO\" : [ \"GEO\", \"GEO\" ],\n      \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ],\n      \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ],\n      \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ],\n      \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ],\n      \"SHOPPING_RETARGETING\" : [ {\n        \"lookback_window\" : 30,\n        \"exclusion_window\" : 14,\n        \"tag_types\" : [ 0, 6 ]\n      }, {\n        \"lookback_window\" : 30,\n        \"exclusion_window\" : 14,\n        \"tag_types\" : [ 0, 6 ]\n      } ],\n      \"GENDER\" : [ \"unknown\", \"unknown\" ],\n      \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ],\n      \"APPTYPE\" : [ \"ipad\", \"iphone\" ],\n      \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ],\n      \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ]\n    },\n    \"sizing\" : {\n      \"reach_estimate\" : {\n        \"estimate\" : 63492000,\n        \"lower_bound\" : 47619000,\n        \"upper_bound\" : 79365000\n      }\n    },\n    \"created_time\" : 1432744744,\n    \"updated_time\" : 1432744744,\n    \"keywords\" : [ {\n      \"value\" : \"cats\",\n      \"match_type\" : \"EXACT_NEGATIVE\"\n    } ],\n    \"name\" : \"Gaming\",\n    \"id\" : \"643\",\n    \"auto_targeting_enabled\" : true,\n    \"placement_group\" : \"ALL\",\n    \"tracking_urls\" : {\n      \"impression\" : [ \"URL1\", \"URL2\" ],\n      \"click\" : [ \"URL1\", \"URL2\" ],\n      \"engagement\" : [ \"URL1\", \"URL2\" ],\n      \"buyable_button\" : [ \"URL1\", \"URL2\" ],\n      \"audience_verification\" : [ \"URL1\", \"URL2\" ]\n    },\n    \"ad_account_id\" : \"549755885175\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TargetingTemplateList200Response>(exampleJson)
            : default(TargetingTemplateList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update targeting templates
        /// </summary>
        /// <remarks>&lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="targetingTemplateUpdateRequest">Operation type and targeting template ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid ad account id.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/ad_accounts/{ad_account_id}/targeting_templates")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("TargetingTemplateUpdate")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid ad account id.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult TargetingTemplateUpdate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]TargetingTemplateUpdateRequest targetingTemplateUpdateRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }
    }
}
