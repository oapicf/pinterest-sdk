/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BoardsApiController : ControllerBase
    { 
        /// <summary>
        /// Create board section
        /// </summary>
        /// <remarks>Create a board section on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="boardSection">Create a board section.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="201">response</response>
        /// <response code="400">Invalid board section parameters.</response>
        /// <response code="403">Not authorized to create board sections.</response>
        /// <response code="409">Could not get exclusive access to the board to create a new section.</response>
        /// <response code="500">Could not create a new board section.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/boards/{board_id}/sections")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BoardSectionsCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(BoardSection), description: "response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid board section parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to create board sections.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Could not get exclusive access to the board to create a new section.")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Could not create a new board section.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardSectionsCreate([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromBody]BoardSection boardSection, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(BoardSection));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"Salads\",\n  \"id\" : \"549755885175\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardSection>(exampleJson)
            : default(BoardSection);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete board section
        /// </summary>
        /// <remarks>Delete a board section on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="sectionId">Unique identifier of a board section.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="204">Board section deleted successfully</response>
        /// <response code="403">Not authorized to delete board section.</response>
        /// <response code="404">Board section not found.</response>
        /// <response code="409">Board section conflict.</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v5/boards/{board_id}/sections/{section_id}")]
        [ValidateModelState]
        [SwaggerOperation("BoardSectionsDelete")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to delete board section.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board section not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Board section conflict.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardSectionsDelete([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromRoute (Name = "section_id")][Required][RegularExpression("^\\d+$")]string sectionId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// List board sections
        /// </summary>
        /// <remarks>Get a list of all board sections from a board owned by the \&quot;operation user_account\&quot; - or a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">response</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/boards/{board_id}/sections")]
        [ValidateModelState]
        [SwaggerOperation("BoardSectionsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(BoardSectionsList200Response), description: "response")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardSectionsList([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BoardSectionsList200Response));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"name\" : \"Salads\",\n    \"id\" : \"549755885175\"\n  }, {\n    \"name\" : \"Salads\",\n    \"id\" : \"549755885175\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardSectionsList200Response>(exampleJson)
            : default(BoardSectionsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List Pins on board section
        /// </summary>
        /// <remarks>Get a list of the Pins on a board section of a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="sectionId">Unique identifier of a board section.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">response</response>
        /// <response code="403">Not authorized to access Pins on board section.</response>
        /// <response code="404">Board or section not found.</response>
        /// <response code="409">Board section conflict.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/boards/{board_id}/sections/{section_id}/pins")]
        [ValidateModelState]
        [SwaggerOperation("BoardSectionsListPins")]
        [SwaggerResponse(statusCode: 200, type: typeof(BoardsListPins200Response), description: "response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access Pins on board section.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board or section not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Board section conflict.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardSectionsListPins([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromRoute (Name = "section_id")][Required][RegularExpression("^\\d+$")]string sectionId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BoardsListPins200Response));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  }, {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardsListPins200Response>(exampleJson)
            : default(BoardsListPins200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update board section
        /// </summary>
        /// <remarks>Update a board section on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="sectionId">Unique identifier of a board section.</param>
        /// <param name="boardSection">Update a board section.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="400">Invalid board section parameters.</response>
        /// <response code="403">Not authorized to update board section.</response>
        /// <response code="409">Board section conflict.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/boards/{board_id}/sections/{section_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BoardSectionsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(BoardSection), description: "response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid board section parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to update board section.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Board section conflict.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardSectionsUpdate([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromRoute (Name = "section_id")][Required][RegularExpression("^\\d+$")]string sectionId, [FromBody]BoardSection boardSection, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BoardSection));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"Salads\",\n  \"id\" : \"549755885175\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardSection>(exampleJson)
            : default(BoardSection);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create board
        /// </summary>
        /// <remarks>Create a board owned by the \&quot;operation user_account\&quot;. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="board">Create a board using a single board json object.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="201">response</response>
        /// <response code="400">The board name is invalid or duplicated.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/boards")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BoardsCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(Board), description: "response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The board name is invalid or duplicated.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsCreate([FromBody]Board board, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Board));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"owner\" : \"{}\",\n  \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n  \"name\" : \"Summer Recipes\",\n  \"pin_count\" : 5,\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"My favorite summer recipes\",\n  \"collaborator_count\" : 17,\n  \"privacy\" : \"PUBLIC\",\n  \"id\" : \"549755885175\",\n  \"media\" : {\n    \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n    \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n  },\n  \"follower_count\" : 13\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Board>(exampleJson)
            : default(Board);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete board
        /// </summary>
        /// <remarks>Delete a board owned by the \&quot;operation user_account\&quot;. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="204">Board deleted successfully</response>
        /// <response code="403">Not authorized to delete the board.</response>
        /// <response code="404">Board not found.</response>
        /// <response code="409">Could not get exclusive access to delete the board.</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v5/boards/{board_id}")]
        [ValidateModelState]
        [SwaggerOperation("BoardsDelete")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to delete the board.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board not found.")]
        [SwaggerResponse(statusCode: 409, type: typeof(Error), description: "Could not get exclusive access to delete the board.")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsDelete([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(Error));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get board
        /// </summary>
        /// <remarks>Get a board owned by the operation user_account - or a group board that has been shared with this account. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="404">Board not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/boards/{board_id}")]
        [ValidateModelState]
        [SwaggerOperation("BoardsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Board), description: "response")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsGet([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Board));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"owner\" : \"{}\",\n  \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n  \"name\" : \"Summer Recipes\",\n  \"pin_count\" : 5,\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"My favorite summer recipes\",\n  \"collaborator_count\" : 17,\n  \"privacy\" : \"PUBLIC\",\n  \"id\" : \"549755885175\",\n  \"media\" : {\n    \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n    \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n  },\n  \"follower_count\" : 13\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Board>(exampleJson)
            : default(Board);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List boards
        /// </summary>
        /// <remarks>Get a list of the boards owned by the \&quot;operation user_account\&quot; + group boards where this account is a collaborator Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. Optional: Specify a privacy type (public, protected, or secret) to indicate which boards to return. - If no privacy is specified, all boards that can be returned (based on the scopes of the token and ad_account role if applicable) will be returned.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="privacy">Privacy setting for a board.</param>
        /// <response code="200">response</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/boards")]
        [ValidateModelState]
        [SwaggerOperation("BoardsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(BoardsList200Response), description: "response")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsList([FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "privacy")]string privacy)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BoardsList200Response));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"owner\" : \"{}\",\n    \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n    \"name\" : \"Summer Recipes\",\n    \"pin_count\" : 5,\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"My favorite summer recipes\",\n    \"collaborator_count\" : 17,\n    \"privacy\" : \"PUBLIC\",\n    \"id\" : \"549755885175\",\n    \"media\" : {\n      \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n      \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n    },\n    \"follower_count\" : 13\n  }, {\n    \"owner\" : \"{}\",\n    \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n    \"name\" : \"Summer Recipes\",\n    \"pin_count\" : 5,\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"My favorite summer recipes\",\n    \"collaborator_count\" : 17,\n    \"privacy\" : \"PUBLIC\",\n    \"id\" : \"549755885175\",\n    \"media\" : {\n      \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n      \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n    },\n    \"follower_count\" : 13\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardsList200Response>(exampleJson)
            : default(BoardsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List Pins on board
        /// </summary>
        /// <remarks>Get a list of the Pins on a board owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="creativeTypes">Pin creative types filter. &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="pinMetrics">Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.</param>
        /// <response code="200">response</response>
        /// <response code="404">Board not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/boards/{board_id}/pins")]
        [ValidateModelState]
        [SwaggerOperation("BoardsListPins")]
        [SwaggerResponse(statusCode: 200, type: typeof(BoardsListPins200Response), description: "response")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsListPins([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "creative_types")]List<string> creativeTypes, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "pin_metrics")]bool? pinMetrics)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BoardsListPins200Response));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  }, {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardsListPins200Response>(exampleJson)
            : default(BoardsListPins200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update board
        /// </summary>
        /// <remarks>Update a board owned by the \&quot;operating user_account\&quot;. - Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.</remarks>
        /// <param name="boardId">Unique identifier of a board.</param>
        /// <param name="boardUpdate">Update a board.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="400">Invalid board parameters.</response>
        /// <response code="403">Not authorized to update the board.</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/boards/{board_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BoardsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(Board), description: "response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid board parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to update the board.")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsUpdate([FromRoute (Name = "board_id")][Required][RegularExpression("^\\d+$")]string boardId, [FromBody]BoardUpdate boardUpdate, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Board));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"owner\" : \"{}\",\n  \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n  \"name\" : \"Summer Recipes\",\n  \"pin_count\" : 5,\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"My favorite summer recipes\",\n  \"collaborator_count\" : 17,\n  \"privacy\" : \"PUBLIC\",\n  \"id\" : \"549755885175\",\n  \"media\" : {\n    \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n    \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n  },\n  \"follower_count\" : 13\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Board>(exampleJson)
            : default(Board);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
