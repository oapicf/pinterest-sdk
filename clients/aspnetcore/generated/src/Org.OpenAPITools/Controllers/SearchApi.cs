/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SearchApiController : ControllerBase
    { 
        /// <summary>
        /// Search pins by a given search term
        /// </summary>
        /// <remarks>&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get the top 10 Pins by a given search term.</remarks>
        /// <param name="term">Search term to look up pins.</param>
        /// <param name="countryCode">Two letter country code (ISO 3166-1 alpha-2)</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="locale">Search locale.</param>
        /// <param name="limit">Max search result size</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid pins</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/search/partner/pins")]
        [ValidateModelState]
        [SwaggerOperation("SearchPartnerPins")]
        [SwaggerResponse(statusCode: 200, type: typeof(SearchPartnerPins200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid pins")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult SearchPartnerPins([FromQuery (Name = "term")][Required()]string term, [FromQuery (Name = "country_code")][Required()]string countryCode, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "locale")]string locale, [FromQuery (Name = "limit")][Range(1, 50)]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SearchPartnerPins200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"alt_text\" : \"alt_text\",\n    \"link\" : \"https://www.pinterest.com/\",\n    \"description\" : \"description\",\n    \"media\" : \"{}\",\n    \"title\" : \"title\"\n  }, {\n    \"alt_text\" : \"alt_text\",\n    \"link\" : \"https://www.pinterest.com/\",\n    \"description\" : \"description\",\n    \"media\" : \"{}\",\n    \"title\" : \"title\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SearchPartnerPins200Response>(exampleJson)
            : default(SearchPartnerPins200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search user&#39;s boards
        /// </summary>
        /// <remarks>Search for boards for the \&quot;operation user_account\&quot;. This includes boards of all board types. - By default, the \&quot;operation user_account\&quot; is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. See &lt;a href&#x3D;&#39;/docs/getting-started/using-business-access/&#39;&gt;Understanding Business Access&lt;/a&gt; for more information.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="query">Search query. Can contain pin description keywords or comma-separated pin IDs.</param>
        /// <response code="200">response</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/search/boards")]
        [ValidateModelState]
        [SwaggerOperation("SearchUserBoardsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(SearchUserBoardsGet200Response), description: "response")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult SearchUserBoardsGet([FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "query")]string query)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SearchUserBoardsGet200Response));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"owner\" : \"{}\",\n    \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n    \"name\" : \"Summer Recipes\",\n    \"pin_count\" : 5,\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"My favorite summer recipes\",\n    \"collaborator_count\" : 17,\n    \"privacy\" : \"PUBLIC\",\n    \"id\" : \"549755885175\",\n    \"media\" : {\n      \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n      \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n    },\n    \"follower_count\" : 13\n  }, {\n    \"owner\" : \"{}\",\n    \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n    \"name\" : \"Summer Recipes\",\n    \"pin_count\" : 5,\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"My favorite summer recipes\",\n    \"collaborator_count\" : 17,\n    \"privacy\" : \"PUBLIC\",\n    \"id\" : \"549755885175\",\n    \"media\" : {\n      \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n      \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n    },\n    \"follower_count\" : 13\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SearchUserBoardsGet200Response>(exampleJson)
            : default(SearchUserBoardsGet200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Search user&#39;s Pins
        /// </summary>
        /// <remarks>Search for pins for the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. See &lt;a href&#x3D;&#39;/docs/getting-started/using-business-access/&#39;&gt;Understanding Business Access&lt;/a&gt; for more information.</remarks>
        /// <param name="query">Search query. Can contain pin description keywords or comma-separated pin IDs.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <response code="200">Success</response>
        /// <response code="404">User not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/search/pins")]
        [ValidateModelState]
        [SwaggerOperation("SearchUserPinsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(PinsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "User not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult SearchUserPinsList([FromQuery (Name = "query")][Required()]string query, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "bookmark")]string bookmark)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PinsList200Response));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  }, {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PinsList200Response>(exampleJson)
            : default(PinsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
