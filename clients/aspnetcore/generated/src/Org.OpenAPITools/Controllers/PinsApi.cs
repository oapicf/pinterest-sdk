/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PinsApiController : ControllerBase
    { 
        /// <summary>
        /// Get multiple Pin analytics
        /// </summary>
        /// <remarks>&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Get analytics for multiple pins owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - The maximum number of pins supported in a single request is 100. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&quot;/docs/api/v5/#operation/ad_accounts/list\&quot;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.  If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.</remarks>
        /// <param name="pinIds">List of Pin IDs.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="metricTypes">Pin metric types to get data for.</param>
        /// <param name="appTypes">Apps or devices to get data for, default is all.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="400">Invalid pins analytics parameters.</response>
        /// <response code="401">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/pins/analytics")]
        [ValidateModelState]
        [SwaggerOperation("MultiPinsAnalytics")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dictionary<string, Dictionary>), description: "response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid pins analytics parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult MultiPinsAnalytics([FromQuery (Name = "pin_ids")][Required()]List<string> pinIds, [FromQuery (Name = "start_date")][Required()]DateOnly startDate, [FromQuery (Name = "end_date")][Required()]DateOnly endDate, [FromQuery (Name = "metric_types")][Required()]List<PinsAnalyticsMetricTypesParameterInner> metricTypes, [FromQuery (Name = "app_types")]string appTypes, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Dictionary<string, Dictionary>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dictionary<string, Dictionary<string, PinAnalyticsMetricsResponse>>>(exampleJson)
            : new Dictionary<string, Dictionary<string, PinAnalyticsMetricsResponse>>();
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Pin analytics
        /// </summary>
        /// <remarks>Get analytics for a Pin owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&quot;/docs/api/v5/#operation/ad_accounts/list\&quot;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.  If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="metricTypes">Pin metric types to get data for. VIDEO_MRC_VIEW are Video views, VIDEO_V50_WATCH_TIME is Total play time. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt;, Profile visits and Follows will only be available for Idea Pins. These metrics are available for all Pin formats since then. Keep in mind this cannot have ALL if split_field is set to any value other than &lt;code&gt;NO_SPLIT&lt;/code&gt;.</param>
        /// <param name="appTypes">Apps or devices to get data for, default is all.</param>
        /// <param name="splitField">How to split the data into groups. Not including this param means data won&#39;t be split.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="400">Invalid pins analytics parameters.</response>
        /// <response code="403">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/pins/{pin_id}/analytics")]
        [ValidateModelState]
        [SwaggerOperation("PinsAnalytics")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dictionary<string, PinAnalyticsMetricsResponse>), description: "response")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid pins analytics parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsAnalytics([FromRoute (Name = "pin_id")][Required]string pinId, [FromQuery (Name = "start_date")][Required()]DateOnly startDate, [FromQuery (Name = "end_date")][Required()]DateOnly endDate, [FromQuery (Name = "metric_types")][Required()]List<PinsAnalyticsMetricTypesParameterInner> metricTypes, [FromQuery (Name = "app_types")]string appTypes, [FromQuery (Name = "split_field")]string splitField, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Dictionary<string, PinAnalyticsMetricsResponse>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dictionary<string, PinAnalyticsMetricsResponse>>(exampleJson)
            : new Dictionary<string, PinAnalyticsMetricsResponse>();
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Pin
        /// </summary>
        /// <remarks>Create a Pin on a board or board section owned by the \&quot;operation user_account\&quot;.  Note: If the current \&quot;operation user_account\&quot; (defined by the access token) has access to another user&#39;s Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account&#39;s permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id&#x3D;12345&amp;...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called &#39;curated content&#39;, please use our &lt;a href&#x3D;&#39;/docs/web-features/add-ons-overview/&#39;&gt;Save button&lt;/a&gt; instead. For more tips on creating fresh content for Pinterest, review our &lt;a href&#x3D;&#39;/docs/api-features/content-overview/&#39;&gt;Content App Solutions Guide&lt;/a&gt;.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.</remarks>
        /// <param name="pinCreate">Create a new Pin.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="201">Successful pin creation.</response>
        /// <response code="400">Invalid Pin parameters response</response>
        /// <response code="403">The Pin&#39;s image is too small, too large or is broken</response>
        /// <response code="404">Board or section not found</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/pins")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PinsCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(Pin), description: "Successful pin creation.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid Pin parameters response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "The Pin&#39;s image is too small, too large or is broken")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board or section not found")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsCreate([FromBody]PinCreate pinCreate, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Pin));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"note\" : \"note\",\n  \"board_owner\" : \"{}\",\n  \"media_source\" : \"{}\",\n  \"pin_metrics\" : {\n    \"90d\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3\n    },\n    \"lifetime_metrics\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3,\n      \"reaction\" : 10,\n      \"comment\" : 2\n    }\n  },\n  \"is_owner\" : true,\n  \"link\" : \"https://www.pinterest.com/\",\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"description\",\n  \"has_been_promoted\" : true,\n  \"media\" : \"{}\",\n  \"title\" : \"title\",\n  \"board_section_id\" : \"board_section_id\",\n  \"dominant_color\" : \"#6E7874\",\n  \"alt_text\" : \"alt_text\",\n  \"board_id\" : \"board_id\",\n  \"creative_type\" : \"creative_type\",\n  \"parent_pin_id\" : \"parent_pin_id\",\n  \"id\" : \"813744226420795884\",\n  \"is_standard\" : true\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Pin>(exampleJson)
            : default(Pin);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete Pin
        /// </summary>
        /// <remarks>Delete a Pins owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="204">Successfully deleted Pin</response>
        /// <response code="403">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v5/pins/{pin_id}")]
        [ValidateModelState]
        [SwaggerOperation("PinsDelete")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsDelete([FromRoute (Name = "pin_id")][Required]string pinId, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get Pin
        /// </summary>
        /// <remarks>Get a Pin owned by the \&quot;operation user_account\&quot; - or on a group board that has been shared with this account. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="pinMetrics">Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="403">Not authorized to access board or Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/pins/{pin_id}")]
        [ValidateModelState]
        [SwaggerOperation("PinsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Pin), description: "response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsGet([FromRoute (Name = "pin_id")][Required]string pinId, [FromQuery (Name = "pin_metrics")]bool? pinMetrics, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Pin));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"note\" : \"note\",\n  \"board_owner\" : \"{}\",\n  \"media_source\" : \"{}\",\n  \"pin_metrics\" : {\n    \"90d\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3\n    },\n    \"lifetime_metrics\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3,\n      \"reaction\" : 10,\n      \"comment\" : 2\n    }\n  },\n  \"is_owner\" : true,\n  \"link\" : \"https://www.pinterest.com/\",\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"description\",\n  \"has_been_promoted\" : true,\n  \"media\" : \"{}\",\n  \"title\" : \"title\",\n  \"board_section_id\" : \"board_section_id\",\n  \"dominant_color\" : \"#6E7874\",\n  \"alt_text\" : \"alt_text\",\n  \"board_id\" : \"board_id\",\n  \"creative_type\" : \"creative_type\",\n  \"parent_pin_id\" : \"parent_pin_id\",\n  \"id\" : \"813744226420795884\",\n  \"is_standard\" : true\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Pin>(exampleJson)
            : default(Pin);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List Pins
        /// </summary>
        /// <remarks>Get a list of the Pins owned by the \&quot;operation user_account\&quot;.   - By default, the \&quot;operation user_account\&quot; is the token user_account.   - All Pins owned by the \&quot;operation user_account\&quot; are included, regardless of who owns the board they are on. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.  Disclaimer: there are known performance issues when filtering by field &lt;code&gt;creative_type&lt;/code&gt; and including protected pins. If your request is timing out in this scenario we encourage you to use &lt;a href&#x3D;&#39;/docs/api/v5/#operation/boards/list_pins&#39;&gt;GET List Pins on Board&lt;/a&gt;.</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="pinFilter">Pin filter.</param>
        /// <param name="includeProtectedPins">Specify if return pins from protected boards</param>
        /// <param name="pinType">The type of pins to return, currently only enabled for private pins</param>
        /// <param name="creativeTypes">Pin creative types filter. &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="pinMetrics">Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid pin filter value</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/pins")]
        [ValidateModelState]
        [SwaggerOperation("PinsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(PinsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid pin filter value")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsList([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "pin_filter")]string pinFilter, [FromQuery (Name = "include_protected_pins")]bool? includeProtectedPins, [FromQuery (Name = "pin_type")]string pinType, [FromQuery (Name = "creative_types")]List<string> creativeTypes, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "pin_metrics")]bool? pinMetrics)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PinsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  }, {\n    \"note\" : \"note\",\n    \"board_owner\" : \"{}\",\n    \"media_source\" : \"{}\",\n    \"pin_metrics\" : {\n      \"90d\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3\n      },\n      \"lifetime_metrics\" : {\n        \"pin_click\" : 7,\n        \"impression\" : 2,\n        \"clickthrough\" : 3,\n        \"reaction\" : 10,\n        \"comment\" : 2\n      }\n    },\n    \"is_owner\" : true,\n    \"link\" : \"https://www.pinterest.com/\",\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"description\",\n    \"has_been_promoted\" : true,\n    \"media\" : \"{}\",\n    \"title\" : \"title\",\n    \"board_section_id\" : \"board_section_id\",\n    \"dominant_color\" : \"#6E7874\",\n    \"alt_text\" : \"alt_text\",\n    \"board_id\" : \"board_id\",\n    \"creative_type\" : \"creative_type\",\n    \"parent_pin_id\" : \"parent_pin_id\",\n    \"id\" : \"813744226420795884\",\n    \"is_standard\" : true\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PinsList200Response>(exampleJson)
            : default(PinsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Save Pin
        /// </summary>
        /// <remarks>Save a Pin on a board or board section owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account. Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.  - Any Pin type can be saved: image Pin, video Pin, Idea Pin, product Pin, etc. - Any public Pin can be saved given a pin ID.</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="pinsSaveRequest">Request object used to save an existing pin</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="201">Successfully saved pin.</response>
        /// <response code="403">Not authorized to access Board or Pin.</response>
        /// <response code="404">Board or Pin not found.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/pins/{pin_id}/save")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PinsSave")]
        [SwaggerResponse(statusCode: 201, type: typeof(Pin), description: "Successfully saved pin.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access Board or Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Board or Pin not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsSave([FromRoute (Name = "pin_id")][Required]string pinId, [FromBody]PinsSaveRequest pinsSaveRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Pin));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"note\" : \"note\",\n  \"board_owner\" : \"{}\",\n  \"media_source\" : \"{}\",\n  \"pin_metrics\" : {\n    \"90d\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3\n    },\n    \"lifetime_metrics\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3,\n      \"reaction\" : 10,\n      \"comment\" : 2\n    }\n  },\n  \"is_owner\" : true,\n  \"link\" : \"https://www.pinterest.com/\",\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"description\",\n  \"has_been_promoted\" : true,\n  \"media\" : \"{}\",\n  \"title\" : \"title\",\n  \"board_section_id\" : \"board_section_id\",\n  \"dominant_color\" : \"#6E7874\",\n  \"alt_text\" : \"alt_text\",\n  \"board_id\" : \"board_id\",\n  \"creative_type\" : \"creative_type\",\n  \"parent_pin_id\" : \"parent_pin_id\",\n  \"id\" : \"813744226420795884\",\n  \"is_standard\" : true\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Pin>(exampleJson)
            : default(Pin);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update Pin
        /// </summary>
        /// <remarks>Update a pin owned by the \&quot;operating user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;</remarks>
        /// <param name="pinId">Unique identifier of a Pin.</param>
        /// <param name="pinUpdate"></param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="403">Not authorized to update Pin.</response>
        /// <response code="404">Pin not found.</response>
        /// <response code="429">This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/pins/{pin_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PinsUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(Pin), description: "response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to update Pin.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Pin not found.")]
        [SwaggerResponse(statusCode: 429, type: typeof(Error), description: "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits or if multiple write operations are applied to an object within a short time window.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult PinsUpdate([FromRoute (Name = "pin_id")][Required]string pinId, [FromBody]PinUpdate pinUpdate, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Pin));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"note\" : \"note\",\n  \"board_owner\" : \"{}\",\n  \"media_source\" : \"{}\",\n  \"pin_metrics\" : {\n    \"90d\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3\n    },\n    \"lifetime_metrics\" : {\n      \"pin_click\" : 7,\n      \"impression\" : 2,\n      \"clickthrough\" : 3,\n      \"reaction\" : 10,\n      \"comment\" : 2\n    }\n  },\n  \"is_owner\" : true,\n  \"link\" : \"https://www.pinterest.com/\",\n  \"created_at\" : \"2020-01-01T20:10:40Z\",\n  \"description\" : \"description\",\n  \"has_been_promoted\" : true,\n  \"media\" : \"{}\",\n  \"title\" : \"title\",\n  \"board_section_id\" : \"board_section_id\",\n  \"dominant_color\" : \"#6E7874\",\n  \"alt_text\" : \"alt_text\",\n  \"board_id\" : \"board_id\",\n  \"creative_type\" : \"creative_type\",\n  \"parent_pin_id\" : \"parent_pin_id\",\n  \"id\" : \"813744226420795884\",\n  \"is_standard\" : true\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Pin>(exampleJson)
            : default(Pin);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
