/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AudienceSharingApiController : ControllerBase
    { 
        /// <summary>
        /// List accounts with access to an audience owned by an ad account
        /// </summary>
        /// <remarks>List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="audienceId">Unique identifier of the audience to use to filter the results.</param>
        /// <param name="accountType">Filter accounts by account type.</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid ad account audiences shared accounts parameters.</response>
        /// <response code="404">Shared accounts not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/audiences/shared/accounts")]
        [ValidateModelState]
        [SwaggerOperation("AdAccountsAudiencesSharedAccountsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdAccountsAudiencesSharedAccountsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid ad account audiences shared accounts parameters.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Shared accounts not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult AdAccountsAudiencesSharedAccountsList([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "audience_id")][Required()][RegularExpression("^\\d+$")] [MaxLength(18)]string audienceId, [FromQuery (Name = "account_type")][Required()]AudienceAccountType accountType, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "bookmark")]string bookmark)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdAccountsAudiencesSharedAccountsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"account_type\" : \"AD_ACCOUNT\",\n    \"account_id\" : \"549755885175\",\n    \"account_name\" : \"Home Depot USA\",\n    \"shared_on_timestamp\" : 1677003860\n  }, {\n    \"account_type\" : \"AD_ACCOUNT\",\n    \"account_id\" : \"549755885175\",\n    \"account_name\" : \"Home Depot USA\",\n    \"shared_on_timestamp\" : 1677003860\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdAccountsAudiencesSharedAccountsList200Response>(exampleJson)
            : default(AdAccountsAudiencesSharedAccountsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List accounts with access to an audience owned by a business
        /// </summary>
        /// <remarks>List all ad accounts and/or businesses that have access to a specific audience. The audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business. If the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.</remarks>
        /// <param name="businessId">Unique identifier of the requesting business.</param>
        /// <param name="audienceId">Unique identifier of the audience to use to filter the results.</param>
        /// <param name="accountType">Filter accounts by account type.</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid business audiences shared accounts parameters.</response>
        /// <response code="404">Shared accounts not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/businesses/{business_id}/audiences/shared/accounts")]
        [ValidateModelState]
        [SwaggerOperation("BusinessAccountAudiencesSharedAccountsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdAccountsAudiencesSharedAccountsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid business audiences shared accounts parameters.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Shared accounts not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult BusinessAccountAudiencesSharedAccountsList([FromRoute (Name = "business_id")][Required][RegularExpression("^\\d+$")][StringLength(20, MinimumLength=1)]string businessId, [FromQuery (Name = "audience_id")][Required()][RegularExpression("^\\d+$")] [MaxLength(18)]string audienceId, [FromQuery (Name = "account_type")][Required()]AudienceAccountType accountType, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "bookmark")]string bookmark)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdAccountsAudiencesSharedAccountsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"account_type\" : \"AD_ACCOUNT\",\n    \"account_id\" : \"549755885175\",\n    \"account_name\" : \"Home Depot USA\",\n    \"shared_on_timestamp\" : 1677003860\n  }, {\n    \"account_type\" : \"AD_ACCOUNT\",\n    \"account_id\" : \"549755885175\",\n    \"account_name\" : \"Home Depot USA\",\n    \"shared_on_timestamp\" : 1677003860\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdAccountsAudiencesSharedAccountsList200Response>(exampleJson)
            : default(AdAccountsAudiencesSharedAccountsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List received audiences for a business
        /// </summary>
        /// <remarks>Get a list of received audiences for the given business.</remarks>
        /// <param name="businessId">Unique identifier of the requesting business.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/businesses/{business_id}/audiences")]
        [ValidateModelState]
        [SwaggerOperation("SharedAudiencesForBusinessList")]
        [SwaggerResponse(statusCode: 200, type: typeof(AudiencesList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult SharedAudiencesForBusinessList([FromRoute (Name = "business_id")][Required][RegularExpression("^\\d+$")][StringLength(20, MinimumLength=1)]string businessId, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "order")]string order, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AudiencesList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"size\" : 1000,\n    \"audience_type\" : \"audience_type\",\n    \"updated_timestamp\" : 1451431341,\n    \"name\" : \"ACME Tools\",\n    \"description\" : \"People who love making quilts.\",\n    \"rule\" : {\n      \"country\" : \"US\",\n      \"visitor_source_id\" : \"549755885175\",\n      \"prefill\" : true,\n      \"customer_list_id\" : \"5497558859876\",\n      \"event_source\" : {\n        \"=\" : [ \"web\", \"mobile\" ]\n      },\n      \"objective_type\" : [ \"AWARENESS\" ],\n      \"event_data\" : {\n        \"video_title\" : \"How to style your Parker Boots\",\n        \"page_name\" : \"Our Favorite Pins on Pinterest.\",\n        \"order_quantity\" : 1,\n        \"property\" : \"Athleta\",\n        \"currency\" : \"USD\",\n        \"lead_type\" : \"Newsletter\",\n        \"promo_code\" : \"WINTER10\",\n        \"line_items\" : {\n          \"product_id\" : 1414,\n          \"product_variant\" : \"Red\",\n          \"product_brand\" : \"Parker\",\n          \"product_price\" : \"99.99\",\n          \"product_variant_id\" : \"1414-34832\",\n          \"product_name\" : \"Parker Boots\",\n          \"product_category\" : \"Shoes\",\n          \"product_quantity\" : 2\n        },\n        \"search_query\" : \"boots\",\n        \"order_id\" : \"X-151481\",\n        \"value\" : \"199.98\"\n      },\n      \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ],\n      \"url\" : [ \"url\", \"url\" ],\n      \"ad_account_id\" : \"549755885175\",\n      \"ingestion_source\" : {\n        \"=\" : [ \"tag\" ]\n      },\n      \"ad_id\" : [ \"687201361754\" ],\n      \"retention_days\" : 30,\n      \"engager_type\" : 1,\n      \"engagement_type\" : \"click\",\n      \"percentage\" : 3,\n      \"engagement_domain\" : [ \"www.somedomain.com\" ],\n      \"event\" : \"checkout\",\n      \"pin_id\" : [ \"34567\" ],\n      \"campaign_id\" : [ \"626744528398\" ]\n    },\n    \"created_timestamp\" : 1451431341,\n    \"id\" : \"1234\",\n    \"type\" : \"audience\",\n    \"ad_account_id\" : \"549755885175\",\n    \"status\" : \"status\"\n  }, {\n    \"size\" : 1000,\n    \"audience_type\" : \"audience_type\",\n    \"updated_timestamp\" : 1451431341,\n    \"name\" : \"ACME Tools\",\n    \"description\" : \"People who love making quilts.\",\n    \"rule\" : {\n      \"country\" : \"US\",\n      \"visitor_source_id\" : \"549755885175\",\n      \"prefill\" : true,\n      \"customer_list_id\" : \"5497558859876\",\n      \"event_source\" : {\n        \"=\" : [ \"web\", \"mobile\" ]\n      },\n      \"objective_type\" : [ \"AWARENESS\" ],\n      \"event_data\" : {\n        \"video_title\" : \"How to style your Parker Boots\",\n        \"page_name\" : \"Our Favorite Pins on Pinterest.\",\n        \"order_quantity\" : 1,\n        \"property\" : \"Athleta\",\n        \"currency\" : \"USD\",\n        \"lead_type\" : \"Newsletter\",\n        \"promo_code\" : \"WINTER10\",\n        \"line_items\" : {\n          \"product_id\" : 1414,\n          \"product_variant\" : \"Red\",\n          \"product_brand\" : \"Parker\",\n          \"product_price\" : \"99.99\",\n          \"product_variant_id\" : \"1414-34832\",\n          \"product_name\" : \"Parker Boots\",\n          \"product_category\" : \"Shoes\",\n          \"product_quantity\" : 2\n        },\n        \"search_query\" : \"boots\",\n        \"order_id\" : \"X-151481\",\n        \"value\" : \"199.98\"\n      },\n      \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ],\n      \"url\" : [ \"url\", \"url\" ],\n      \"ad_account_id\" : \"549755885175\",\n      \"ingestion_source\" : {\n        \"=\" : [ \"tag\" ]\n      },\n      \"ad_id\" : [ \"687201361754\" ],\n      \"retention_days\" : 30,\n      \"engager_type\" : 1,\n      \"engagement_type\" : \"click\",\n      \"percentage\" : 3,\n      \"engagement_domain\" : [ \"www.somedomain.com\" ],\n      \"event\" : \"checkout\",\n      \"pin_id\" : [ \"34567\" ],\n      \"campaign_id\" : [ \"626744528398\" ]\n    },\n    \"created_timestamp\" : 1451431341,\n    \"id\" : \"1234\",\n    \"type\" : \"audience\",\n    \"ad_account_id\" : \"549755885175\",\n    \"status\" : \"status\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AudiencesList200Response>(exampleJson)
            : default(AudiencesList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update audience sharing between ad accounts
        /// </summary>
        /// <remarks>From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/create-and-manage-accounts&#39;&gt;Pinterest Business Hierarchy&lt;/a&gt; as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="sharedAudience"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid ad account id.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateAdAccountToAdAccountSharedAudience")]
        [SwaggerResponse(statusCode: 200, type: typeof(SharedAudienceResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid ad account id.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UpdateAdAccountToAdAccountSharedAudience([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]SharedAudience sharedAudience)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SharedAudienceResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"recipient_account_ids\" : [ \"549755885175\" ],\n  \"permissions\" : [ \"RESOURCE_PINNER_LIST_READER\", \"RESOURCE_PINNER_LIST_OWNER\" ],\n  \"audience_id\" : \"2542621871096\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SharedAudienceResponse>(exampleJson)
            : default(SharedAudienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update audience sharing from an ad account to businesses
        /// </summary>
        /// <remarks>From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="businessSharedAudience"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid ad account id.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/ad_accounts/{ad_account_id}/audiences/businesses/shared")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateAdAccountToBusinessSharedAudience")]
        [SwaggerResponse(statusCode: 200, type: typeof(BusinessSharedAudienceResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid ad account id.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UpdateAdAccountToBusinessSharedAudience([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]BusinessSharedAudience businessSharedAudience)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BusinessSharedAudienceResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"recipient_business_ids\" : [ \"549755885175\" ],\n  \"permissions\" : [ \"RESOURCE_PINNER_LIST_READER\", \"RESOURCE_PINNER_LIST_OWNER\" ],\n  \"audience_id\" : \"2542621871096\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BusinessSharedAudienceResponse>(exampleJson)
            : default(BusinessSharedAudienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update audience sharing from a business to ad accounts
        /// </summary>
        /// <remarks>From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. &lt;ul&gt; &lt;li&gt;If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.&lt;/li&gt; &lt;li&gt;If the business is the recipient of the audience, it can share with any of its owned ad accounts.&lt;/li&gt; &lt;/ul&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.</remarks>
        /// <param name="businessId">Unique identifier of the requesting business.</param>
        /// <param name="sharedAudience"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/businesses/{business_id}/audiences/ad_accounts/shared")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateBusinessToAdAccountSharedAudience")]
        [SwaggerResponse(statusCode: 200, type: typeof(SharedAudienceResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UpdateBusinessToAdAccountSharedAudience([FromRoute (Name = "business_id")][Required][RegularExpression("^\\d+$")][StringLength(20, MinimumLength=1)]string businessId, [FromBody]SharedAudience sharedAudience)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SharedAudienceResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"recipient_account_ids\" : [ \"549755885175\" ],\n  \"permissions\" : [ \"RESOURCE_PINNER_LIST_READER\", \"RESOURCE_PINNER_LIST_OWNER\" ],\n  \"audience_id\" : \"2542621871096\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SharedAudienceResponse>(exampleJson)
            : default(SharedAudienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update audience sharing between businesses
        /// </summary>
        /// <remarks>From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.</remarks>
        /// <param name="businessId">Unique identifier of the requesting business.</param>
        /// <param name="businessSharedAudience"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="0">Unexpected error</response>
        [HttpPatch]
        [Route("/v5/businesses/{business_id}/audiences/businesses/shared")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateBusinessToBusinessSharedAudience")]
        [SwaggerResponse(statusCode: 200, type: typeof(BusinessSharedAudienceResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UpdateBusinessToBusinessSharedAudience([FromRoute (Name = "business_id")][Required][RegularExpression("^\\d+$")][StringLength(20, MinimumLength=1)]string businessId, [FromBody]BusinessSharedAudience businessSharedAudience)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BusinessSharedAudienceResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"recipient_business_ids\" : [ \"549755885175\" ],\n  \"permissions\" : [ \"RESOURCE_PINNER_LIST_READER\", \"RESOURCE_PINNER_LIST_OWNER\" ],\n  \"audience_id\" : \"2542621871096\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BusinessSharedAudienceResponse>(exampleJson)
            : default(BusinessSharedAudienceResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
