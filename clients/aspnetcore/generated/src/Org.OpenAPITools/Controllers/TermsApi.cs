/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TermsApiController : ControllerBase
    { 
        /// <summary>
        /// List related terms
        /// </summary>
        /// <remarks>Get a list of terms logically related to each input term. &lt;p/&gt; Example: the term &#39;workout&#39; would list related terms like &#39;one song workout&#39;, &#39;yoga workout&#39;, &#39;workout motivation&#39;, etc.</remarks>
        /// <param name="terms">List of input terms.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid terms related parameters.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/terms/related")]
        [ValidateModelState]
        [SwaggerOperation("TermsRelatedList")]
        [SwaggerResponse(statusCode: 200, type: typeof(RelatedTerms), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid terms related parameters.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult TermsRelatedList([FromQuery (Name = "terms")][Required()]List<string> terms)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RelatedTerms));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"related_terms_list\" : [ {\n    \"related_terms\" : [ \"shoes\", \"cute clothes\" ],\n    \"term\" : \"clothes\"\n  }, {\n    \"related_terms\" : [ \"shoes\", \"cute clothes\" ],\n    \"term\" : \"clothes\"\n  } ],\n  \"related_term_count\" : 2,\n  \"id\" : \"clothes\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RelatedTerms>(exampleJson)
            : default(RelatedTerms);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List suggested terms
        /// </summary>
        /// <remarks>Get popular search terms that begin with your input term. &lt;p/&gt; Example: &#39;sport&#39; would return popular terms like &#39;sports bar&#39; and &#39;sportswear&#39;, but not &#39;motor sports&#39; since the phrase does not begin with the given term.</remarks>
        /// <param name="term">Input term.</param>
        /// <param name="limit">Max suggested terms to return.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid terms suggested parameters.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/terms/suggested")]
        [ValidateModelState]
        [SwaggerOperation("TermsSuggestedList")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid terms suggested parameters.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult TermsSuggestedList([FromQuery (Name = "term")][Required()]string term, [FromQuery (Name = "limit")][Range(1, 10)]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
