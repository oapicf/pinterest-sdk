/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AdvancedAuctionApiController : ControllerBase
    { 
        /// <summary>
        /// Get item bid options (POST)
        /// </summary>
        /// <remarks>Get the bid options for a batch of retail catalog items.  The catalog must be owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: &#x60;Owner&#x60;, &#x60;Admin&#x60;.  This endpoint is not available to all users.</remarks>
        /// <param name="advancedAuctionItemsGetRequest">Request object used to get bid options values for a batch of retail catalog items</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Response containing the bid option values for the requested retail catalog items. Items that don&#39;t exist or do not have bid options set won&#39;t be present in the response.</response>
        /// <response code="400">Invalid request parameters.</response>
        /// <response code="401">Not authenticated to get item bid options</response>
        /// <response code="403">Not authorized to get item bid options</response>
        /// <response code="500">Internal error</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/advanced_auction/items/get")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AdvancedAuctionItemsGetPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdvancedAuctionItems), description: "Response containing the bid option values for the requested retail catalog items. Items that don&#39;t exist or do not have bid options set won&#39;t be present in the response.")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid request parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authenticated to get item bid options")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to get item bid options")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal error")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult AdvancedAuctionItemsGetPost([FromBody]AdvancedAuctionItemsGetRequest advancedAuctionItemsGetRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdvancedAuctionItems));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"catalog_id\" : \"2680059592705\",\n  \"items\" : [ {\n    \"country\" : \"US\",\n    \"bid_options\" : {\n      \"bid_in_micro_currency\" : 5000000,\n      \"placement_multipliers\" : {\n        \"browse\" : 0.9,\n        \"search\" : 1.2\n      },\n      \"app_type_multipliers\" : {\n        \"android_mobile\" : 1.1,\n        \"android_tablet\" : 1.1,\n        \"ipad\" : 1.2,\n        \"iphone\" : 1.2,\n        \"web\" : 0.9,\n        \"web_mobile\" : 0.8\n      }\n    },\n    \"item_id\" : \"DS0294-M\",\n    \"language\" : \"EN\"\n  }, {\n    \"country\" : \"US\",\n    \"bid_options\" : {\n      \"bid_in_micro_currency\" : 5000000,\n      \"placement_multipliers\" : {\n        \"browse\" : 0.9,\n        \"search\" : 1.2\n      },\n      \"app_type_multipliers\" : {\n        \"android_mobile\" : 1.1,\n        \"android_tablet\" : 1.1,\n        \"ipad\" : 1.2,\n        \"iphone\" : 1.2,\n        \"web\" : 0.9,\n        \"web_mobile\" : 0.8\n      }\n    },\n    \"item_id\" : \"DS0294-M\",\n    \"language\" : \"EN\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdvancedAuctionItems>(exampleJson)
            : default(AdvancedAuctionItems);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Operate on item level bid options
        /// </summary>
        /// <remarks>This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type &#x60;CATALOG_SALES&#x60; and ad groups using bid_strategy_type &#x60;MAX_BID&#x60;.  The catalog must be owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/modify-items-in-batch/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: &#x60;Owner&#x60;, &#x60;Admin&#x60;.  This endpoint is not available to all users.</remarks>
        /// <param name="advancedAuctionItemsSubmitRequest">Request object used to upsert or delete bid options for a batch of retail catalog items</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Response containing the results of the item bid options operations</response>
        /// <response code="400">Invalid request parameters.</response>
        /// <response code="401">Not authenticated to post item bid options</response>
        /// <response code="403">Not authorized to post item bid options</response>
        /// <response code="500">Internal error</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/advanced_auction/items/submit")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AdvancedAuctionItemsSubmitPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdvancedAuctionProcessedItems), description: "Response containing the results of the item bid options operations")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid request parameters.")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Not authenticated to post item bid options")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to post item bid options")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Internal error")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult AdvancedAuctionItemsSubmitPost([FromBody]AdvancedAuctionItemsSubmitRequest advancedAuctionItemsSubmitRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdvancedAuctionProcessedItems));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"catalog_id\" : \"2680059592705\",\n  \"items\" : [ {\n    \"operation\" : \"UPSERT\",\n    \"errors\" : [ {\n      \"code\" : 6,\n      \"message\" : \"Bid in micro currency should be non-negative\"\n    }, {\n      \"code\" : 6,\n      \"message\" : \"Bid in micro currency should be non-negative\"\n    } ]\n  }, {\n    \"operation\" : \"UPSERT\",\n    \"errors\" : [ {\n      \"code\" : 6,\n      \"message\" : \"Bid in micro currency should be non-negative\"\n    }, {\n      \"code\" : 6,\n      \"message\" : \"Bid in micro currency should be non-negative\"\n    } ]\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdvancedAuctionProcessedItems>(exampleJson)
            : default(AdvancedAuctionProcessedItems);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
