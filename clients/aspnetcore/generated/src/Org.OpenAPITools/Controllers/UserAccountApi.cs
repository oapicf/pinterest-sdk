/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserAccountApiController : ControllerBase
    { 
        /// <summary>
        /// List following boards
        /// </summary>
        /// <remarks>Get a list of the boards a user follows. The request returns a board summary object array.</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="explicitFollowing">Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid user id</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/following/boards")]
        [ValidateModelState]
        [SwaggerOperation("BoardsUserFollowsList")]
        [SwaggerResponse(statusCode: 200, type: typeof(BoardsUserFollowsList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid user id")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BoardsUserFollowsList([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "explicit_following")]bool? explicitFollowing, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BoardsUserFollowsList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"owner\" : \"{}\",\n    \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n    \"name\" : \"Summer Recipes\",\n    \"pin_count\" : 5,\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"My favorite summer recipes\",\n    \"collaborator_count\" : 17,\n    \"privacy\" : \"PUBLIC\",\n    \"id\" : \"549755885175\",\n    \"media\" : {\n      \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n      \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n    },\n    \"follower_count\" : 13\n  }, {\n    \"owner\" : \"{}\",\n    \"board_pins_modified_at\" : \"2020-01-01T20:10:40Z\",\n    \"name\" : \"Summer Recipes\",\n    \"pin_count\" : 5,\n    \"created_at\" : \"2020-01-01T20:10:40Z\",\n    \"description\" : \"My favorite summer recipes\",\n    \"collaborator_count\" : 17,\n    \"privacy\" : \"PUBLIC\",\n    \"id\" : \"549755885175\",\n    \"media\" : {\n      \"pin_thumbnail_urls\" : [ \"https://i.pinimg.com/150x150/b4/57/10/b45710f1ede96af55230f4b43935c4af.jpg\", \"https://i.pinimg.com/150x150/dd/ff/46/ddff4616e39c1935cd05738794fa860e.jpg\", \"https://i.pinimg.com/150x150/84/ac/59/84ac59b670ccb5b903dace480a98930c.jpg\", \"https://i.pinimg.com/150x150/4c/54/6f/4c546f521be85e30838fb742bfff6936.jpg\" ],\n      \"image_cover_url\" : \"https://i.pinimg.com/400x300/fd/cd/d5/fdcdd5a6d8a80824add0d054125cd957.jpg\"\n    },\n    \"follower_count\" : 13\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BoardsUserFollowsList200Response>(exampleJson)
            : default(BoardsUserFollowsList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Follow user
        /// </summary>
        /// <remarks>&lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  Use this request, as a signed-in user, to follow another user.</remarks>
        /// <param name="username">A valid username</param>
        /// <param name="followUserRequest">Follow a user.</param>
        /// <response code="200">Success</response>
        /// <response code="404">User not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/user_account/following/{username}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("FollowUserUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserSummary), description: "Success")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "User not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult FollowUserUpdate([FromRoute (Name = "username")][Required][RegularExpression("(?!^\\d+$)^.+$")]string username, [FromBody]FollowUserRequest followUserRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserSummary));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"type\" : \"user\",\n  \"username\" : \"username\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserSummary>(exampleJson)
            : default(UserSummary);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List followers
        /// </summary>
        /// <remarks>Get a list of your followers.</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid user id</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/followers")]
        [ValidateModelState]
        [SwaggerOperation("FollowersList")]
        [SwaggerResponse(statusCode: 200, type: typeof(FollowersList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid user id")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult FollowersList([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(FollowersList200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"type\" : \"user\",\n    \"username\" : \"username\"\n  }, {\n    \"type\" : \"user\",\n    \"username\" : \"username\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FollowersList200Response>(exampleJson)
            : default(FollowersList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List linked businesses
        /// </summary>
        /// <remarks>Get a list of your linked business accounts.</remarks>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/businesses")]
        [ValidateModelState]
        [SwaggerOperation("LinkedBusinessAccountsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<LinkedBusiness>), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult LinkedBusinessAccountsGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<LinkedBusiness>));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "[ {\n  \"image_large_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\",\n  \"image_medium_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\",\n  \"image_xlarge_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\",\n  \"username\" : \"username\",\n  \"image_small_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\"\n}, {\n  \"image_large_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\",\n  \"image_medium_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\",\n  \"image_xlarge_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\",\n  \"username\" : \"username\",\n  \"image_small_url\" : \"https://www.example.com/dj23454f53dfk2324.jpg\"\n} ]";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<LinkedBusiness>>(exampleJson)
            : default(List<LinkedBusiness>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Unverify website
        /// </summary>
        /// <remarks>Unverifu a website verified by the signed-in user.</remarks>
        /// <param name="website">Website with path or domain only</param>
        /// <response code="204">Successfully unverified website</response>
        /// <response code="404">Website not in user list.</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v5/user_account/websites")]
        [ValidateModelState]
        [SwaggerOperation("UnverifyWebsiteDelete")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Website not in user list.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UnverifyWebsiteDelete([FromQuery (Name = "website")][Required()]string website)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get user account analytics
        /// </summary>
        /// <remarks>Get analytics for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.</remarks>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="fromClaimedContent">Filter on Pins that match your claimed domain.</param>
        /// <param name="pinFormat">Pin formats to get data for, default is all.</param>
        /// <param name="appTypes">Apps or devices to get data for, default is all.</param>
        /// <param name="contentType">Filter to paid or organic data. Default is all.</param>
        /// <param name="source">Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts</param>
        /// <param name="metricTypes">Metric types to get data for, default is all. </param>
        /// <param name="splitField">How to split the data into groups. Not including this param means data won&#39;t be split.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid user accounts analytics parameters.</response>
        /// <response code="403">Not authorized to access the user account analytics.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/analytics")]
        [ValidateModelState]
        [SwaggerOperation("UserAccountAnalytics")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dictionary<string, AnalyticsMetricsResponse>), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid user accounts analytics parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access the user account analytics.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserAccountAnalytics([FromQuery (Name = "start_date")][Required()]DateOnly startDate, [FromQuery (Name = "end_date")][Required()]DateOnly endDate, [FromQuery (Name = "from_claimed_content")]string fromClaimedContent, [FromQuery (Name = "pin_format")]string pinFormat, [FromQuery (Name = "app_types")]string appTypes, [FromQuery (Name = "content_type")]string contentType, [FromQuery (Name = "source")]string source, [FromQuery (Name = "metric_types")]List<string> metricTypes, [FromQuery (Name = "split_field")]string splitField, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Dictionary<string, AnalyticsMetricsResponse>));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dictionary<string, AnalyticsMetricsResponse>>(exampleJson)
            : new Dictionary<string, AnalyticsMetricsResponse>();
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get user account top pins analytics
        /// </summary>
        /// <remarks>Gets analytics data about a user&#39;s top pins (limited to the top 50). - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.</remarks>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="sortBy">Specify sorting order for metrics</param>
        /// <param name="fromClaimedContent">Filter on Pins that match your claimed domain.</param>
        /// <param name="pinFormat">Pin formats to get data for, default is all.</param>
        /// <param name="appTypes">Apps or devices to get data for, default is all.</param>
        /// <param name="contentType">Filter to paid or organic data. Default is all.</param>
        /// <param name="source">Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts</param>
        /// <param name="metricTypes">Metric types to get data for, default is all. </param>
        /// <param name="numOfPins">Number of pins to include, default is 10. Max is 50.</param>
        /// <param name="createdInLastNDays">Get metrics for pins created in the last \&quot;n\&quot; days.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="403">Not authorized to access the user account analytics.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/analytics/top_pins")]
        [ValidateModelState]
        [SwaggerOperation("UserAccountAnalyticsTopPins")]
        [SwaggerResponse(statusCode: 200, type: typeof(TopPinsAnalyticsResponse), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access the user account analytics.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserAccountAnalyticsTopPins([FromQuery (Name = "start_date")][Required()]DateOnly startDate, [FromQuery (Name = "end_date")][Required()]DateOnly endDate, [FromQuery (Name = "sort_by")][Required()]string sortBy, [FromQuery (Name = "from_claimed_content")]string fromClaimedContent, [FromQuery (Name = "pin_format")]string pinFormat, [FromQuery (Name = "app_types")]string appTypes, [FromQuery (Name = "content_type")]string contentType, [FromQuery (Name = "source")]string source, [FromQuery (Name = "metric_types")]List<string> metricTypes, [FromQuery (Name = "num_of_pins")][Range(1, 50)]int? numOfPins, [FromQuery (Name = "created_in_last_n_days")]int? createdInLastNDays, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TopPinsAnalyticsResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"date_availability\" : {\n    \"latest_available_timestamp\" : 1649116799000,\n    \"is_realtime\" : false\n  },\n  \"pins\" : [ {\n    \"metrics\" : {\n      \"CLOSEUP\" : 1,\n      \"CLOSEUP_RATE\" : 0,\n      \"ENGAGEMENT\" : 1,\n      \"ENGAGEMENT_RATE\" : 0,\n      \"IMPRESSION\" : 240,\n      \"OUTBOUND_CLICK\" : 20,\n      \"OUTBOUND_CLICK_RATE\" : 0.08,\n      \"PIN_CLICK\" : 37,\n      \"PIN_CLICK_RATE\" : 0.15,\n      \"QUARTILE_95_PERCENT_VIEW\" : 8,\n      \"SAVE\" : 20,\n      \"SAVE_RATE\" : 0.18,\n      \"VIDEO_10S_VIEW\" : 2,\n      \"VIDEO_AVG_WATCH_TIME\" : 2507.75,\n      \"VIDEO_MRC_VIEW\" : 20,\n      \"VIDEO_START\" : 29,\n      \"VIDEO_V50_WATCH_TIME\" : 10031\n    },\n    \"data_status\" : {\n      \"key\" : \"READY\"\n    },\n    \"pin_id\" : \"642396334344813594\"\n  }, {\n    \"metrics\" : {\n      \"CLOSEUP\" : 1,\n      \"CLOSEUP_RATE\" : 0,\n      \"ENGAGEMENT\" : 1,\n      \"ENGAGEMENT_RATE\" : 0,\n      \"IMPRESSION\" : 240,\n      \"OUTBOUND_CLICK\" : 20,\n      \"OUTBOUND_CLICK_RATE\" : 0.08,\n      \"PIN_CLICK\" : 37,\n      \"PIN_CLICK_RATE\" : 0.15,\n      \"QUARTILE_95_PERCENT_VIEW\" : 8,\n      \"SAVE\" : 20,\n      \"SAVE_RATE\" : 0.18,\n      \"VIDEO_10S_VIEW\" : 2,\n      \"VIDEO_AVG_WATCH_TIME\" : 2507.75,\n      \"VIDEO_MRC_VIEW\" : 20,\n      \"VIDEO_START\" : 29,\n      \"VIDEO_V50_WATCH_TIME\" : 10031\n    },\n    \"data_status\" : {\n      \"key\" : \"READY\"\n    },\n    \"pin_id\" : \"642396334344813594\"\n  } ],\n  \"sort_by\" : \"IMPRESSION\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TopPinsAnalyticsResponse>(exampleJson)
            : default(TopPinsAnalyticsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get user account top video pins analytics
        /// </summary>
        /// <remarks>Gets analytics data about a user&#39;s top video pins (limited to the top 50). - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;.</remarks>
        /// <param name="startDate">Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.</param>
        /// <param name="endDate">Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.</param>
        /// <param name="sortBy">Specify sorting order for video metrics</param>
        /// <param name="fromClaimedContent">Filter on Pins that match your claimed domain.</param>
        /// <param name="pinFormat">Pin formats to get data for, default is all.</param>
        /// <param name="appTypes">Apps or devices to get data for, default is all.</param>
        /// <param name="contentType">Filter to paid or organic data. Default is all.</param>
        /// <param name="source">Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts</param>
        /// <param name="metricTypes">Metric types to get video data for, default is all. </param>
        /// <param name="numOfPins">Number of pins to include, default is 10. Max is 50.</param>
        /// <param name="createdInLastNDays">Get metrics for pins created in the last \&quot;n\&quot; days.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="403">Not authorized to access the user account analytics.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/analytics/top_video_pins")]
        [ValidateModelState]
        [SwaggerOperation("UserAccountAnalyticsTopVideoPins")]
        [SwaggerResponse(statusCode: 200, type: typeof(TopVideoPinsAnalyticsResponse), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access the user account analytics.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserAccountAnalyticsTopVideoPins([FromQuery (Name = "start_date")][Required()]DateOnly startDate, [FromQuery (Name = "end_date")][Required()]DateOnly endDate, [FromQuery (Name = "sort_by")][Required()]string sortBy, [FromQuery (Name = "from_claimed_content")]string fromClaimedContent, [FromQuery (Name = "pin_format")]string pinFormat, [FromQuery (Name = "app_types")]string appTypes, [FromQuery (Name = "content_type")]string contentType, [FromQuery (Name = "source")]string source, [FromQuery (Name = "metric_types")]List<string> metricTypes, [FromQuery (Name = "num_of_pins")][Range(1, 50)]int? numOfPins, [FromQuery (Name = "created_in_last_n_days")]int? createdInLastNDays, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TopVideoPinsAnalyticsResponse));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"date_availability\" : {\n    \"latest_available_timestamp\" : 1649116799000,\n    \"is_realtime\" : false\n  },\n  \"pins\" : [ {\n    \"metrics\" : {\n      \"IMPRESSION\" : 7,\n      \"QUARTILE_95_PERCENT_VIEW\" : 2,\n      \"SAVE\" : 1,\n      \"VIDEO_10S_VIEW\" : 5,\n      \"VIDEO_AVG_WATCH_TIME\" : 86989,\n      \"VIDEO_MRC_VIEW\" : 2,\n      \"VIDEO_START\" : 2,\n      \"VIDEO_V50_WATCH_TIME\" : 173979,\n      \"OUTBOUND_CLICK\" : 2\n    },\n    \"data_status\" : {\n      \"key\" : \"READY\"\n    },\n    \"pin_id\" : \"642396334344813594\"\n  }, {\n    \"metrics\" : {\n      \"IMPRESSION\" : 7,\n      \"QUARTILE_95_PERCENT_VIEW\" : 2,\n      \"SAVE\" : 1,\n      \"VIDEO_10S_VIEW\" : 5,\n      \"VIDEO_AVG_WATCH_TIME\" : 86989,\n      \"VIDEO_MRC_VIEW\" : 2,\n      \"VIDEO_START\" : 2,\n      \"VIDEO_V50_WATCH_TIME\" : 173979,\n      \"OUTBOUND_CLICK\" : 2\n    },\n    \"data_status\" : {\n      \"key\" : \"READY\"\n    },\n    \"pin_id\" : \"642396334344813594\"\n  } ],\n  \"sort_by\" : \"IMPRESSION\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TopVideoPinsAnalyticsResponse>(exampleJson)
            : default(TopVideoPinsAnalyticsResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List following interests
        /// </summary>
        /// <remarks>Get a list of a user&#39;s following interests in one place.</remarks>
        /// <param name="username">A valid username</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid parameters</response>
        /// <response code="401">Authorization failed</response>
        /// <response code="404">User not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/users/{username}/interests/follow")]
        [ValidateModelState]
        [SwaggerOperation("UserAccountFollowedInterests")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserAccountFollowedInterests200Response), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid parameters")]
        [SwaggerResponse(statusCode: 401, type: typeof(Error), description: "Authorization failed")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "User not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserAccountFollowedInterests([FromRoute (Name = "username")][Required][RegularExpression("(?!^\\d+$)^.+$")]string username, [FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserAccountFollowedInterests200Response));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"name\" : \"Man cave\",\n    \"id\" : \"903972677830\",\n    \"canonical_url\" : \"canonical_url\",\n    \"key\" : \"man cave\"\n  }, {\n    \"name\" : \"Man cave\",\n    \"id\" : \"903972677830\",\n    \"canonical_url\" : \"canonical_url\",\n    \"key\" : \"man cave\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserAccountFollowedInterests200Response>(exampleJson)
            : default(UserAccountFollowedInterests200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get user account
        /// </summary>
        /// <remarks>Get account information for the \&quot;operation user_account\&quot; - By default, the \&quot;operation user_account\&quot; is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \&quot;operation user_account\&quot;. See &lt;a href&#x3D;&#39;/docs/getting-started/using-business-access/&#39;&gt;Understanding Business Access&lt;/a&gt; for more information.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="403">Not authorized to access the user account.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account")]
        [ValidateModelState]
        [SwaggerOperation("UserAccountGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Account), description: "response")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access the user account.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserAccountGet([FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Account));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"business_name\" : \"business_name\",\n  \"account_type\" : \"PINNER\",\n  \"profile_image\" : \"profile_image\",\n  \"website_url\" : \"website_url\",\n  \"following_count\" : 347,\n  \"about\" : \"about\",\n  \"pin_count\" : 339,\n  \"id\" : \"2783136121146311751\",\n  \"monthly_views\" : 163,\n  \"board_count\" : 14,\n  \"follower_count\" : 10,\n  \"username\" : \"username\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Account>(exampleJson)
            : default(Account);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List following
        /// </summary>
        /// <remarks>Get a list of who a certain user follows.</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="feedType">Thrift param specifying what type of followees will be kept. Default to include all followees.</param>
        /// <param name="explicitFollowing">Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">response</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/following")]
        [ValidateModelState]
        [SwaggerOperation("UserFollowingGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserFollowingGet200Response), description: "response")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserFollowingGet([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "feed_type")]UserFollowingFeedType? feedType, [FromQuery (Name = "explicit_following")]bool? explicitFollowing, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserFollowingGet200Response));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"type\" : \"user\",\n    \"username\" : \"username\"\n  }, {\n    \"type\" : \"user\",\n    \"username\" : \"username\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserFollowingGet200Response>(exampleJson)
            : default(UserFollowingGet200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get user websites
        /// </summary>
        /// <remarks>Get user websites, claimed or not</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">Success</response>
        /// <response code="403">Not authorized to access the user website list.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/websites")]
        [ValidateModelState]
        [SwaggerOperation("UserWebsitesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserWebsitesGet200Response), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access the user website list.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult UserWebsitesGet([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserWebsitesGet200Response));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"website\" : \"mysite.test\",\n    \"verified_at\" : \"2022-12-14T21:03:01.602000\",\n    \"status\" : \"success\"\n  }, {\n    \"website\" : \"mysite.test\",\n    \"verified_at\" : \"2022-12-14T21:03:01.602000\",\n    \"status\" : \"success\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserWebsitesGet200Response>(exampleJson)
            : default(UserWebsitesGet200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Verify website
        /// </summary>
        /// <remarks>Verify a website as a signed-in user.</remarks>
        /// <param name="userWebsiteVerifyRequest">Verify a website.</param>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/user_account/websites")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("VerifyWebsiteUpdate")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserWebsiteSummary), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult VerifyWebsiteUpdate([FromBody]UserWebsiteVerifyRequest userWebsiteVerifyRequest, [FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserWebsiteSummary));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"website\" : \"mysite.test\",\n  \"verified_at\" : \"2022-12-14T21:03:01.602000\",\n  \"status\" : \"success\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserWebsiteSummary>(exampleJson)
            : default(UserWebsiteSummary);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get user verification code for website claiming
        /// </summary>
        /// <remarks>Get verification code for user to install on the website to claim it.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <response code="200">Success</response>
        /// <response code="403">Not authorized to access the user verification code for website claiming.</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/user_account/websites/verification")]
        [ValidateModelState]
        [SwaggerOperation("WebsiteVerificationGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserWebsiteVerificationCode), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Not authorized to access the user verification code for website claiming.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult WebsiteVerificationGet([FromQuery (Name = "ad_account_id")][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserWebsiteVerificationCode));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"file_content\" : \"file_content\",\n  \"dns_txt_record\" : \"pinterest-site-verification=e1edcc1a43976c646367e9c6c9a9b7b6\",\n  \"filename\" : \"pinterest-e1edc.html\",\n  \"metatag\" : \"<meta name=\\"p:domain_verify\\" content=\\"e1edcc1a43976c646367e9c6c9a9b7b6\\"/>\",\n  \"verification_code\" : \"e1edcc1a43976c646367e9c6c9a9b7b6\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserWebsiteVerificationCode>(exampleJson)
            : default(UserWebsiteVerificationCode);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
