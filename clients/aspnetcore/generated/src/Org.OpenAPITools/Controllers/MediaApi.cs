/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class MediaApiController : ControllerBase
    { 
        /// <summary>
        /// Register media upload
        /// </summary>
        /// <remarks>Register your intent to upload media  The response includes all of the information needed to upload the media to Pinterest.  To upload the media, make an HTTP POST request (using &lt;tt&gt;curl&lt;/tt&gt;, for example) to &lt;tt&gt;upload_url&lt;/tt&gt; using the &lt;tt&gt;Content-Type&lt;/tt&gt; header value. Send the media file&#39;s contents as the request&#39;s &lt;tt&gt;file&lt;/tt&gt; parameter and also include all of the parameters from &lt;tt&gt;upload_parameters&lt;/tt&gt;.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.</remarks>
        /// <param name="mediaUploadRequest">Create a media upload request</param>
        /// <response code="201">response</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/media")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("MediaCreate")]
        [SwaggerResponse(statusCode: 201, type: typeof(MediaUpload), description: "response")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult MediaCreate([FromBody]MediaUploadRequest mediaUploadRequest)
        {

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(MediaUpload));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"media_id\" : \"12345\",\n  \"media_type\" : \"video\",\n  \"upload_url\" : \"https://pinterest-media-upload.s3-accelerate.amazonaws.com/\",\n  \"upload_parameters\" : {\n    \"x-amz-data\" : \"20220127T185143Z\",\n    \"x-amz-signature\" : \"fcd6309a6aaee213348666a72abed8b44552a43acb6b340e8e1b288d21a5fe92\",\n    \"key\" : \"uploads/11/aa/22/3:video:203014033110991560:5212123920968240771\",\n    \"policy\" : \"eyJleHBpcmF0aW9uIjoiMj..==\",\n    \"x-amz-credential\" : \"ASIA6QZJ64OPIKV7FRVX/20220127/us-east-1/s3/aws4_request\",\n    \"x-amz-security-token\" : \"IQoJb3JpZ2luX2VjEJr...==\",\n    \"x-amz-algorithm\" : \"AWS4-HMAC-SHA256\",\n    \"Content-Type\" : \"multipart/form-data\"\n  }\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MediaUpload>(exampleJson)
            : default(MediaUpload);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get media upload details
        /// </summary>
        /// <remarks>Get details for a registered media upload, including its current status.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.</remarks>
        /// <param name="mediaId">Media identifier</param>
        /// <response code="200">response</response>
        /// <response code="404">Media upload not found</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/media/{media_id}")]
        [ValidateModelState]
        [SwaggerOperation("MediaGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(MediaUploadDetails), description: "response")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Media upload not found")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult MediaGet([FromRoute (Name = "media_id")][Required][RegularExpression("^\\d+$")]string mediaId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MediaUploadDetails));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"media_id\" : \"12345\",\n  \"media_type\" : \"video\",\n  \"status\" : \"succeeded\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MediaUploadDetails>(exampleJson)
            : default(MediaUploadDetails);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List media uploads
        /// </summary>
        /// <remarks>List media uploads filtered by given parameters.  &lt;strong&gt;&lt;a href&#x3D;&#39;/docs/api-features/creating-boards-and-pins/#creating-video-pins&#39;&gt;Learn more&lt;/a&gt;&lt;/strong&gt; about video Pin creation.</remarks>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <response code="200">response</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/media")]
        [ValidateModelState]
        [SwaggerOperation("MediaList")]
        [SwaggerResponse(statusCode: 200, type: typeof(MediaList200Response), description: "response")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult MediaList([FromQuery (Name = "bookmark")]string bookmark, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(MediaList200Response));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"media_id\" : \"12345\",\n    \"media_type\" : \"video\",\n    \"status\" : \"succeeded\"\n  }, {\n    \"media_id\" : \"12345\",\n    \"media_type\" : \"video\",\n    \"status\" : \"succeeded\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MediaList200Response>(exampleJson)
            : default(MediaList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
