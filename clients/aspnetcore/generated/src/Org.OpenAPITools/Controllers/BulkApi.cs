/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BulkApiController : ControllerBase
    { 
        /// <summary>
        /// Get advertiser entities in bulk
        /// </summary>
        /// <remarks>Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bulkDownloadRequest">Parameters to get ad entities in bulk</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/ad_accounts/{ad_account_id}/bulk/download")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BulkDownloadCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(BulkDownloadResponse), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BulkDownloadCreate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]BulkDownloadRequest bulkDownloadRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BulkDownloadResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"request_id\" : \"2680059592705\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BulkDownloadResponse>(exampleJson)
            : default(BulkDownloadResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Download advertiser entities in bulk
        /// </summary>
        /// <remarks>Get the status of a bulk request by &lt;code&gt;request_id&lt;/code&gt;, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bulkRequestId">Unique identifier of a bulk upsert request.</param>
        /// <param name="includeDetails">if set to True then attach the errors/details to all the requests</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}")]
        [ValidateModelState]
        [SwaggerOperation("BulkRequestGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(BulkUpsertStatusResponse), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BulkRequestGet([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromRoute (Name = "bulk_request_id")][Required]string bulkRequestId, [FromQuery (Name = "include_details")]bool? includeDetails)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BulkUpsertStatusResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"result_url\" : \"https://pinterest-waterloo.s3.us-east-1.amazonaws.com/bulk_framework/AD_ENTITY_UPSERT/549763856637-1659122537-0b4d77d3-f620-48ce-bec9-616106afb8d4/(...)\",\n  \"status\" : \"SUCCEEDED\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BulkUpsertStatusResponse>(exampleJson)
            : default(BulkUpsertStatusResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create/update ad entities in bulk
        /// </summary>
        /// <remarks>Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a &lt;code&gt;request_id&lt;/code&gt; that can be used to obtain the status of the request.</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="bulkUpsertRequest">Parameters to get create/update ad entities in bulk</param>
        /// <response code="200">Success</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v5/ad_accounts/{ad_account_id}/bulk/upsert")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("BulkUpsertCreate")]
        [SwaggerResponse(statusCode: 200, type: typeof(BulkUpsertResponse), description: "Success")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error")]
        public virtual IActionResult BulkUpsertCreate([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]BulkUpsertRequest bulkUpsertRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BulkUpsertResponse));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"request_id\" : \"549763856477-1660864560-1407e16a-c586-4add-94df-d0b160bec0ff, 549763856477-1660864560-d0b160bec0ff\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BulkUpsertResponse>(exampleJson)
            : default(BulkUpsertResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
