/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class LeadAdsApiController : ControllerBase
    { 
        /// <summary>
        /// Delete lead ads subscription
        /// </summary>
        /// <remarks>Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="subscriptionId">Unique identifier of a subscription.</param>
        /// <response code="204">Subscription deleted successfully</response>
        /// <response code="400">Invalid input parameters.</response>
        /// <response code="403">You are not authorized to delete this subscription.</response>
        /// <response code="404">Subscription not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpDelete]
        [Route("/v5/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}")]
        [ValidateModelState]
        [SwaggerOperation("AdAccountsSubscriptionsDelById")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid input parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "You are not authorized to delete this subscription.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Subscription not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult AdAccountsSubscriptionsDelById([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromRoute (Name = "subscription_id")][Required][RegularExpression("^\\d+$")]string subscriptionId)
        {

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get lead ads subscription
        /// </summary>
        /// <remarks>Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="subscriptionId">Unique identifier of a subscription.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid input parameters.</response>
        /// <response code="403">Can&#39;t access this subscription.</response>
        /// <response code="404">Subscription not found.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}")]
        [ValidateModelState]
        [SwaggerOperation("AdAccountsSubscriptionsGetById")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdAccountGetSubscriptionResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid input parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Can&#39;t access this subscription.")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Subscription not found.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult AdAccountsSubscriptionsGetById([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromRoute (Name = "subscription_id")][Required][RegularExpression("^\\d+$")]string subscriptionId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdAccountGetSubscriptionResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\",\n  \"created_time\" : 1699209842000,\n  \"user_account_id\" : \"549755885175\",\n  \"webhook_url\" : \"https://webhook.example.com/xyz\",\n  \"lead_form_id\" : \"383791336903426390\",\n  \"cryptographic_algorithm\" : \"AES-256-GCM\",\n  \"id\" : \"8078432025948590686\",\n  \"api_version\" : \"v5\",\n  \"ad_account_id\" : \"549755885176\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdAccountGetSubscriptionResponse>(exampleJson)
            : default(AdAccountGetSubscriptionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get lead ads subscriptions
        /// </summary>
        /// <remarks>Get the advertiser&#39;s list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information.</param>
        /// <param name="bookmark">Cursor used to fetch the next page of items</param>
        /// <response code="200">Success</response>
        /// <response code="403">Can&#39;t access this subscription.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpGet]
        [Route("/v5/ad_accounts/{ad_account_id}/leads/subscriptions")]
        [ValidateModelState]
        [SwaggerOperation("AdAccountsSubscriptionsGetList")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdAccountsSubscriptionsGetList200Response), description: "Success")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Can&#39;t access this subscription.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult AdAccountsSubscriptionsGetList([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromQuery (Name = "page_size")][Range(1, 250)]int? pageSize, [FromQuery (Name = "bookmark")]string bookmark)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdAccountsSubscriptionsGetList200Response));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"bookmark\" : \"bookmark\",\n  \"items\" : [ {\n    \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\",\n    \"created_time\" : 1699209842000,\n    \"user_account_id\" : \"549755885175\",\n    \"webhook_url\" : \"https://webhook.example.com/xyz\",\n    \"lead_form_id\" : \"383791336903426390\",\n    \"cryptographic_algorithm\" : \"AES-256-GCM\",\n    \"id\" : \"8078432025948590686\",\n    \"api_version\" : \"v5\",\n    \"ad_account_id\" : \"549755885176\"\n  }, {\n    \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\",\n    \"created_time\" : 1699209842000,\n    \"user_account_id\" : \"549755885175\",\n    \"webhook_url\" : \"https://webhook.example.com/xyz\",\n    \"lead_form_id\" : \"383791336903426390\",\n    \"cryptographic_algorithm\" : \"AES-256-GCM\",\n    \"id\" : \"8078432025948590686\",\n    \"api_version\" : \"v5\",\n    \"ad_account_id\" : \"549755885176\"\n  } ]\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdAccountsSubscriptionsGetList200Response>(exampleJson)
            : default(AdAccountsSubscriptionsGetList200Response);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create lead ads subscription
        /// </summary>
        /// <remarks>Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;</remarks>
        /// <param name="adAccountId">Unique identifier of an ad account.</param>
        /// <param name="adAccountCreateSubscriptionRequest">Subscription to create.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Invalid input parameters.</response>
        /// <response code="403">Can&#39;t access this subscription.</response>
        /// <response code="0">Unexpected error.</response>
        [HttpPost]
        [Route("/v5/ad_accounts/{ad_account_id}/leads/subscriptions")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AdAccountsSubscriptionsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(AdAccountCreateSubscriptionResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Invalid input parameters.")]
        [SwaggerResponse(statusCode: 403, type: typeof(Error), description: "Can&#39;t access this subscription.")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "Unexpected error.")]
        public virtual IActionResult AdAccountsSubscriptionsPost([FromRoute (Name = "ad_account_id")][Required][RegularExpression("^\\d+$")] [MaxLength(18)]string adAccountId, [FromBody]AdAccountCreateSubscriptionRequest adAccountCreateSubscriptionRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AdAccountCreateSubscriptionResponse));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(Error));
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));
            string exampleJson = null;
            exampleJson = "{\n  \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\",\n  \"created_time\" : 1699209842000,\n  \"cryptographic_algorithm\" : \"AES-256-GCM\",\n  \"id\" : \"8078432025948590686\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AdAccountCreateSubscriptionResponse>(exampleJson)
            : default(AdAccountCreateSubscriptionResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
