/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedProductCounts.h
 *
 * The counts can be null early in the process.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedProductCounts_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedProductCounts_H_


#include "CppRestOpenAPIClient/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// The counts can be null early in the process.
/// </summary>
class  CatalogsFeedProductCounts
    : public ModelBase
{
public:
    CatalogsFeedProductCounts();
    virtual ~CatalogsFeedProductCounts();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsFeedProductCounts members

    /// <summary>
    /// The number of products in the feed file.
    /// </summary>
    int32_t getOriginal() const;
    bool originalIsSet() const;
    void unsetOriginal();

    void setOriginal(int32_t value);

    /// <summary>
    /// The number of products successfully ingested from the feed file.
    /// </summary>
    int32_t getIngested() const;
    bool ingestedIsSet() const;
    void unsetIngested();

    void setIngested(int32_t value);


protected:
    int32_t m_Original;
    bool m_OriginalIsSet;
    int32_t m_Ingested;
    bool m_IngestedIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedProductCounts_H_ */
