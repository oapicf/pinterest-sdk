/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LinkedBusiness.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_LinkedBusiness_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_LinkedBusiness_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  LinkedBusiness
    : public ModelBase
{
public:
    LinkedBusiness();
    virtual ~LinkedBusiness();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LinkedBusiness members

    /// <summary>
    /// Username
    /// </summary>
    utility::string_t getUsername() const;
    bool usernameIsSet() const;
    void unsetUsername();

    void setUsername(const utility::string_t& value);

    /// <summary>
    /// image_small_url
    /// </summary>
    utility::string_t getImageSmallUrl() const;
    bool imageSmallUrlIsSet() const;
    void unsetImage_small_url();

    void setImageSmallUrl(const utility::string_t& value);

    /// <summary>
    /// image_medium_url
    /// </summary>
    utility::string_t getImageMediumUrl() const;
    bool imageMediumUrlIsSet() const;
    void unsetImage_medium_url();

    void setImageMediumUrl(const utility::string_t& value);

    /// <summary>
    /// image_large_url
    /// </summary>
    utility::string_t getImageLargeUrl() const;
    bool imageLargeUrlIsSet() const;
    void unsetImage_large_url();

    void setImageLargeUrl(const utility::string_t& value);

    /// <summary>
    /// image_xlarge_url
    /// </summary>
    utility::string_t getImageXlargeUrl() const;
    bool imageXlargeUrlIsSet() const;
    void unsetImage_xlarge_url();

    void setImageXlargeUrl(const utility::string_t& value);


protected:
    utility::string_t m_Username;
    bool m_UsernameIsSet;
    utility::string_t m_Image_small_url;
    bool m_Image_small_urlIsSet;
    utility::string_t m_Image_medium_url;
    bool m_Image_medium_urlIsSet;
    utility::string_t m_Image_large_url;
    bool m_Image_large_urlIsSet;
    utility::string_t m_Image_xlarge_url;
    bool m_Image_xlarge_urlIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_LinkedBusiness_H_ */
