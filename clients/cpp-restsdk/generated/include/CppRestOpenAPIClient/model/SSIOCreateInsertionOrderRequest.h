/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SSIOCreateInsertionOrderRequest.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SSIOCreateInsertionOrderRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SSIOCreateInsertionOrderRequest_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Currency.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  SSIOCreateInsertionOrderRequest
    : public ModelBase
{
public:
    SSIOCreateInsertionOrderRequest();
    virtual ~SSIOCreateInsertionOrderRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SSIOCreateInsertionOrderRequest members

    /// <summary>
    /// Starting date of time period. Format: YYYY-MM-DD
    /// </summary>
    utility::string_t getStartDate() const;
    bool startDateIsSet() const;
    void unsetStart_date();

    void setStartDate(const utility::string_t& value);

    /// <summary>
    /// End date of time period. Format: YYYY-MM-DD
    /// </summary>
    utility::string_t getEndDate() const;
    bool endDateIsSet() const;
    void unsetEnd_date();

    void setEndDate(const utility::string_t& value);

    /// <summary>
    /// The po number
    /// </summary>
    utility::string_t getPoNumber() const;
    bool poNumberIsSet() const;
    void unsetPo_number();

    void setPoNumber(const utility::string_t& value);

    /// <summary>
    /// If Budget order line, the budget amount.
    /// </summary>
    double getBudgetAmount() const;
    bool budgetAmountIsSet() const;
    void unsetBudget_amount();

    void setBudgetAmount(double value);

    /// <summary>
    /// The billing contact first name
    /// </summary>
    utility::string_t getBillingContactFirstname() const;
    bool billingContactFirstnameIsSet() const;
    void unsetBilling_contact_firstname();

    void setBillingContactFirstname(const utility::string_t& value);

    /// <summary>
    /// The billing contact last name
    /// </summary>
    utility::string_t getBillingContactLastname() const;
    bool billingContactLastnameIsSet() const;
    void unsetBilling_contact_lastname();

    void setBillingContactLastname(const utility::string_t& value);

    /// <summary>
    /// The billing contact email
    /// </summary>
    utility::string_t getBillingContactEmail() const;
    bool billingContactEmailIsSet() const;
    void unsetBilling_contact_email();

    void setBillingContactEmail(const utility::string_t& value);

    /// <summary>
    /// The media contact first name
    /// </summary>
    utility::string_t getMediaContactFirstname() const;
    bool mediaContactFirstnameIsSet() const;
    void unsetMedia_contact_firstname();

    void setMediaContactFirstname(const utility::string_t& value);

    /// <summary>
    /// The media contact last name
    /// </summary>
    utility::string_t getMediaContactLastname() const;
    bool mediaContactLastnameIsSet() const;
    void unsetMedia_contact_lastname();

    void setMediaContactLastname(const utility::string_t& value);

    /// <summary>
    /// The media contact email
    /// </summary>
    utility::string_t getMediaContactEmail() const;
    bool mediaContactEmailIsSet() const;
    void unsetMedia_contact_email();

    void setMediaContactEmail(const utility::string_t& value);

    /// <summary>
    /// URL link for agency
    /// </summary>
    utility::string_t getAgencyLink() const;
    bool agencyLinkIsSet() const;
    void unsetAgency_link();

    void setAgencyLink(const utility::string_t& value);

    /// <summary>
    /// The email of user submitting the insertion order
    /// </summary>
    utility::string_t getUserEmail() const;
    bool userEmailIsSet() const;
    void unsetUser_email();

    void setUserEmail(const utility::string_t& value);

    /// <summary>
    /// The UTC timestamp (to the nearest sec) of when terms were accepted
    /// </summary>
    int32_t getAcceptedTermsTime() const;
    bool acceptedTermsTimeIsSet() const;
    void unsetAccepted_terms_time();

    void setAcceptedTermsTime(int32_t value);

    /// <summary>
    /// The pmp id
    /// </summary>
    utility::string_t getPmpId() const;
    bool pmpIdIsSet() const;
    void unsetPmp_id();

    void setPmpId(const utility::string_t& value);

    /// <summary>
    /// The order name
    /// </summary>
    utility::string_t getOrderName() const;
    bool orderNameIsSet() const;
    void unsetOrder_name();

    void setOrderName(const utility::string_t& value);

    /// <summary>
    /// Type can be Budget or Perpetual
    /// </summary>
    utility::string_t getOrderLineType() const;
    bool orderLineTypeIsSet() const;
    void unsetOrder_line_type();

    void setOrderLineType(const utility::string_t& value);

    /// <summary>
    /// The SFDC id for the terms
    /// </summary>
    utility::string_t getAcceptedTermsId() const;
    bool acceptedTermsIdIsSet() const;
    void unsetAccepted_terms_id();

    void setAcceptedTermsId(const utility::string_t& value);

    /// <summary>
    /// The bill-to company id
    /// </summary>
    utility::string_t getBilltoCompanyId() const;
    bool billtoCompanyIdIsSet() const;
    void unsetBillto_company_id();

    void setBilltoCompanyId(const utility::string_t& value);

    /// <summary>
    /// The bill-to business address id
    /// </summary>
    utility::string_t getBilltoBusinessAddressId() const;
    bool billtoBusinessAddressIdIsSet() const;
    void unsetBillto_business_address_id();

    void setBilltoBusinessAddressId(const utility::string_t& value);

    /// <summary>
    /// The bill-to billing address id
    /// </summary>
    utility::string_t getBilltoBillingAddressId() const;
    bool billtoBillingAddressIdIsSet() const;
    void unsetBillto_billing_address_id();

    void setBilltoBillingAddressId(const utility::string_t& value);

    /// <summary>
    /// If Ongoing (perpetual) order line, the estimated monthly spend
    /// </summary>
    double getEstimatedMonthlySpend() const;
    bool estimatedMonthlySpendIsSet() const;
    void unsetEstimated_monthly_spend();

    void setEstimatedMonthlySpend(double value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Currency> getCurrencyInfo() const;
    bool currencyInfoIsSet() const;
    void unsetCurrency_info();

    void setCurrencyInfo(const std::shared_ptr<Currency>& value);


protected:
    utility::string_t m_Start_date;
    bool m_Start_dateIsSet;
    utility::string_t m_End_date;
    bool m_End_dateIsSet;
    utility::string_t m_Po_number;
    bool m_Po_numberIsSet;
    double m_Budget_amount;
    bool m_Budget_amountIsSet;
    utility::string_t m_Billing_contact_firstname;
    bool m_Billing_contact_firstnameIsSet;
    utility::string_t m_Billing_contact_lastname;
    bool m_Billing_contact_lastnameIsSet;
    utility::string_t m_Billing_contact_email;
    bool m_Billing_contact_emailIsSet;
    utility::string_t m_Media_contact_firstname;
    bool m_Media_contact_firstnameIsSet;
    utility::string_t m_Media_contact_lastname;
    bool m_Media_contact_lastnameIsSet;
    utility::string_t m_Media_contact_email;
    bool m_Media_contact_emailIsSet;
    utility::string_t m_Agency_link;
    bool m_Agency_linkIsSet;
    utility::string_t m_User_email;
    bool m_User_emailIsSet;
    int32_t m_Accepted_terms_time;
    bool m_Accepted_terms_timeIsSet;
    utility::string_t m_Pmp_id;
    bool m_Pmp_idIsSet;
    utility::string_t m_Order_name;
    bool m_Order_nameIsSet;
    utility::string_t m_Order_line_type;
    bool m_Order_line_typeIsSet;
    utility::string_t m_Accepted_terms_id;
    bool m_Accepted_terms_idIsSet;
    utility::string_t m_Billto_company_id;
    bool m_Billto_company_idIsSet;
    utility::string_t m_Billto_business_address_id;
    bool m_Billto_business_address_idIsSet;
    utility::string_t m_Billto_billing_address_id;
    bool m_Billto_billing_address_idIsSet;
    double m_Estimated_monthly_spend;
    bool m_Estimated_monthly_spendIsSet;
    std::shared_ptr<Currency> m_Currency_info;
    bool m_Currency_infoIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SSIOCreateInsertionOrderRequest_H_ */
