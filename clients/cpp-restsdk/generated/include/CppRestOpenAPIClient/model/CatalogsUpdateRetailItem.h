/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsUpdateRetailItem.h
 *
 * An item to be updated
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsUpdateRetailItem_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsUpdateRetailItem_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/UpdatableItemAttributes.h"
#include "CppRestOpenAPIClient/model/UpdateMaskFieldType.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class UpdatableItemAttributes;


/// <summary>
/// An item to be updated
/// </summary>
class  CatalogsUpdateRetailItem
    : public ModelBase
{
public:
    CatalogsUpdateRetailItem();
    virtual ~CatalogsUpdateRetailItem();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsUpdateRetailItem members

    /// <summary>
    /// The catalog item id in the merchant namespace
    /// </summary>
    utility::string_t getItemId() const;
    bool itemIdIsSet() const;
    void unsetItem_id();

    void setItemId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOperation() const;
    bool operationIsSet() const;
    void unsetOperation();

    void setOperation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<UpdatableItemAttributes> getAttributes() const;
    bool attributesIsSet() const;
    void unsetAttributes();

    void setAttributes(const std::shared_ptr<UpdatableItemAttributes>& value);

    /// <summary>
    /// The list of product attributes to be updated. Attributes specified in the update mask without a value specified in the body will be deleted from the product item.
    /// </summary>
    std::vector<std::shared_ptr<UpdateMaskFieldType>>& getUpdateMask();
    bool updateMaskIsSet() const;
    void unsetUpdate_mask();

    void setUpdateMask(const std::vector<std::shared_ptr<UpdateMaskFieldType>>& value);


protected:
    utility::string_t m_Item_id;
    bool m_Item_idIsSet;
    utility::string_t m_Operation;
    bool m_OperationIsSet;
    std::shared_ptr<UpdatableItemAttributes> m_Attributes;
    bool m_AttributesIsSet;
    std::vector<std::shared_ptr<UpdateMaskFieldType>> m_Update_mask;
    bool m_Update_maskIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsUpdateRetailItem_H_ */
