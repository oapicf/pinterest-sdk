/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BusinessSharedAudience.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BusinessSharedAudience_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BusinessSharedAudience_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/OperationType.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  BusinessSharedAudience
    : public ModelBase
{
public:
    BusinessSharedAudience();
    virtual ~BusinessSharedAudience();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BusinessSharedAudience members

    /// <summary>
    /// Unique identifier of an audience
    /// </summary>
    utility::string_t getAudienceId() const;
    bool audienceIdIsSet() const;
    void unsetAudience_id();

    void setAudienceId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OperationType> getOperationType() const;
    bool operationTypeIsSet() const;
    void unsetOperation_type();

    void setOperationType(const std::shared_ptr<OperationType>& value);

    /// <summary>
    /// List of business IDs to share with or revoke from.
    /// </summary>
    std::vector<utility::string_t>& getRecipientBusinessIds();
    bool recipientBusinessIdsIsSet() const;
    void unsetRecipient_business_ids();

    void setRecipientBusinessIds(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_Audience_id;
    bool m_Audience_idIsSet;
    std::shared_ptr<OperationType> m_Operation_type;
    bool m_Operation_typeIsSet;
    std::vector<utility::string_t> m_Recipient_business_ids;
    bool m_Recipient_business_idsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BusinessSharedAudience_H_ */
