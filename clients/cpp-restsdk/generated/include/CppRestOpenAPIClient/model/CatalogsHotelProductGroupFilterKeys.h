/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsHotelProductGroupFilterKeys.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelProductGroupFilterKeys_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelProductGroupFilterKeys_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CountryFilter.h"
#include "CppRestOpenAPIClient/model/CatalogsProductGroupMultipleCountriesCriteria.h"
#include "CppRestOpenAPIClient/model/CustomLabel3Filter.h"
#include "CppRestOpenAPIClient/model/BrandFilter.h"
#include "CppRestOpenAPIClient/model/CatalogsProductGroupMultipleStringCriteria.h"
#include "CppRestOpenAPIClient/model/CustomLabel4Filter.h"
#include "CppRestOpenAPIClient/model/CustomLabel1Filter.h"
#include "CppRestOpenAPIClient/model/HotelIdFilter.h"
#include "CppRestOpenAPIClient/model/PriceFilter.h"
#include "CppRestOpenAPIClient/model/CustomLabel2Filter.h"
#include "CppRestOpenAPIClient/model/Catalogs_product_group_pricing_currency_criteria.h"
#include "CppRestOpenAPIClient/model/CustomLabel0Filter.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Catalogs_product_group_pricing_currency_criteria;


/// <summary>
/// 
/// </summary>
class  CatalogsHotelProductGroupFilterKeys
    : public ModelBase
{
public:
    CatalogsHotelProductGroupFilterKeys();
    virtual ~CatalogsHotelProductGroupFilterKeys();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsHotelProductGroupFilterKeys members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Catalogs_product_group_pricing_currency_criteria> getPRICE() const;
    bool pRICEIsSet() const;
    void unsetPRICE();

    void setPRICE(const std::shared_ptr<Catalogs_product_group_pricing_currency_criteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getHOTELID() const;
    bool hOTELIDIsSet() const;
    void unsetHOTEL_ID();

    void setHOTELID(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getBRAND() const;
    bool bRANDIsSet() const;
    void unsetBRAND();

    void setBRAND(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getCUSTOMLABEL0() const;
    bool cUSTOMLABEL0IsSet() const;
    void unsetCUSTOM_LABEL_0();

    void setCUSTOMLABEL0(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getCUSTOMLABEL1() const;
    bool cUSTOMLABEL1IsSet() const;
    void unsetCUSTOM_LABEL_1();

    void setCUSTOMLABEL1(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getCUSTOMLABEL2() const;
    bool cUSTOMLABEL2IsSet() const;
    void unsetCUSTOM_LABEL_2();

    void setCUSTOMLABEL2(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getCUSTOMLABEL3() const;
    bool cUSTOMLABEL3IsSet() const;
    void unsetCUSTOM_LABEL_3();

    void setCUSTOMLABEL3(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> getCUSTOMLABEL4() const;
    bool cUSTOMLABEL4IsSet() const;
    void unsetCUSTOM_LABEL_4();

    void setCUSTOMLABEL4(const std::shared_ptr<CatalogsProductGroupMultipleStringCriteria>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsProductGroupMultipleCountriesCriteria> getCOUNTRY() const;
    bool cOUNTRYIsSet() const;
    void unsetCOUNTRY();

    void setCOUNTRY(const std::shared_ptr<CatalogsProductGroupMultipleCountriesCriteria>& value);


protected:
    std::shared_ptr<Catalogs_product_group_pricing_currency_criteria> m_PRICE;
    bool m_PRICEIsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_HOTEL_ID;
    bool m_HOTEL_IDIsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_BRAND;
    bool m_BRANDIsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_CUSTOM_LABEL_0;
    bool m_CUSTOM_LABEL_0IsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_CUSTOM_LABEL_1;
    bool m_CUSTOM_LABEL_1IsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_CUSTOM_LABEL_2;
    bool m_CUSTOM_LABEL_2IsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_CUSTOM_LABEL_3;
    bool m_CUSTOM_LABEL_3IsSet;
    std::shared_ptr<CatalogsProductGroupMultipleStringCriteria> m_CUSTOM_LABEL_4;
    bool m_CUSTOM_LABEL_4IsSet;
    std::shared_ptr<CatalogsProductGroupMultipleCountriesCriteria> m_COUNTRY;
    bool m_COUNTRYIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelProductGroupFilterKeys_H_ */
