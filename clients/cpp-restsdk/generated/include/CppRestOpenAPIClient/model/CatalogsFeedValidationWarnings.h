/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedValidationWarnings.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedValidationWarnings_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedValidationWarnings_H_


#include "CppRestOpenAPIClient/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  CatalogsFeedValidationWarnings
    : public ModelBase
{
public:
    CatalogsFeedValidationWarnings();
    virtual ~CatalogsFeedValidationWarnings();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsFeedValidationWarnings members

    /// <summary>
    /// Some items have ad links that are formatted incorrectly.
    /// </summary>
    int32_t getADLINKFORMATWARNING() const;
    bool aDLINKFORMATWARNINGIsSet() const;
    void unsetAD_LINK_FORMAT_WARNING();

    void setADLINKFORMATWARNING(int32_t value);

    /// <summary>
    /// Some items have ad link URLs that are duplicates of the link URLs for those items.
    /// </summary>
    int32_t getADLINKSAMEASLINK() const;
    bool aDLINKSAMEASLINKIsSet() const;
    void unsetAD_LINK_SAME_AS_LINK();

    void setADLINKSAMEASLINK(int32_t value);

    /// <summary>
    /// The title for some items were truncated because they contain too many characters.
    /// </summary>
    int32_t getTITLELENGTHTOOLONG() const;
    bool tITLELENGTHTOOLONGIsSet() const;
    void unsetTITLE_LENGTH_TOO_LONG();

    void setTITLELENGTHTOOLONG(int32_t value);

    /// <summary>
    /// The description for some items were truncated because they contain too many characters.
    /// </summary>
    int32_t getDESCRIPTIONLENGTHTOOLONG() const;
    bool dESCRIPTIONLENGTHTOOLONGIsSet() const;
    void unsetDESCRIPTION_LENGTH_TOO_LONG();

    void setDESCRIPTIONLENGTHTOOLONG(int32_t value);

    /// <summary>
    /// Some items have gender values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
    /// </summary>
    int32_t getGENDERINVALID() const;
    bool gENDERINVALIDIsSet() const;
    void unsetGENDER_INVALID();

    void setGENDERINVALID(int32_t value);

    /// <summary>
    /// Some items have age group values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
    /// </summary>
    int32_t getAGEGROUPINVALID() const;
    bool aGEGROUPINVALIDIsSet() const;
    void unsetAGE_GROUP_INVALID();

    void setAGEGROUPINVALID(int32_t value);

    /// <summary>
    /// Some items have size type values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
    /// </summary>
    int32_t getSIZETYPEINVALID() const;
    bool sIZETYPEINVALIDIsSet() const;
    void unsetSIZE_TYPE_INVALID();

    void setSIZETYPEINVALID(int32_t value);

    /// <summary>
    /// Some items have size system values which are not one of the supported size systems.
    /// </summary>
    int32_t getSIZESYSTEMINVALID() const;
    bool sIZESYSTEMINVALIDIsSet() const;
    void unsetSIZE_SYSTEM_INVALID();

    void setSIZESYSTEMINVALID(int32_t value);

    /// <summary>
    /// Some items have an invalid product link which contains invalid UTM tracking paramaters.
    /// </summary>
    int32_t getLINKFORMATWARNING() const;
    bool lINKFORMATWARNINGIsSet() const;
    void unsetLINK_FORMAT_WARNING();

    void setLINKFORMATWARNING(int32_t value);

    /// <summary>
    /// Some items have sale price values that are higher than the original price of the item.
    /// </summary>
    int32_t getSALESPRICEINVALID() const;
    bool sALESPRICEINVALIDIsSet() const;
    void unsetSALES_PRICE_INVALID();

    void setSALESPRICEINVALID(int32_t value);

    /// <summary>
    /// Some items only have 1 or 2 levels of google_product_category values, which may limit visibility in recommendations, search results and shopping experiences.
    /// </summary>
    int32_t getPRODUCTCATEGORYDEPTHWARNING() const;
    bool pRODUCTCATEGORYDEPTHWARNINGIsSet() const;
    void unsetPRODUCT_CATEGORY_DEPTH_WARNING();

    void setPRODUCTCATEGORYDEPTHWARNING(int32_t value);

    /// <summary>
    /// Some items have adwords_redirect links that are formatted incorrectly.
    /// </summary>
    int32_t getADWORDSFORMATWARNING() const;
    bool aDWORDSFORMATWARNINGIsSet() const;
    void unsetADWORDS_FORMAT_WARNING();

    void setADWORDSFORMATWARNING(int32_t value);

    /// <summary>
    /// Some items have adwords_redirect URLs that are duplicates of the link URLs for those items.
    /// </summary>
    int32_t getADWORDSSAMEASLINK() const;
    bool aDWORDSSAMEASLINKIsSet() const;
    void unsetADWORDS_SAME_AS_LINK();

    void setADWORDSSAMEASLINK(int32_t value);

    /// <summary>
    /// Your feed contains duplicate headers.
    /// </summary>
    int32_t getDUPLICATEHEADERS() const;
    bool dUPLICATEHEADERSIsSet() const;
    void unsetDUPLICATE_HEADERS();

    void setDUPLICATEHEADERS(int32_t value);

    /// <summary>
    /// Ingestion completed early because there are no changes to your feed since the last successful update.
    /// </summary>
    int32_t getFETCHSAMESIGNATURE() const;
    bool fETCHSAMESIGNATUREIsSet() const;
    void unsetFETCH_SAME_SIGNATURE();

    void setFETCHSAMESIGNATURE(int32_t value);

    /// <summary>
    /// Some items have additional_image_link URLs that contain too many characters, so those items will not be published.
    /// </summary>
    int32_t getADDITIONALIMAGELINKLENGTHTOOLONG() const;
    bool aDDITIONALIMAGELINKLENGTHTOOLONGIsSet() const;
    void unsetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG();

    void setADDITIONALIMAGELINKLENGTHTOOLONG(int32_t value);

    /// <summary>
    /// Some items have additional_image_link URLs that are formatted incorrectly and will not be published with your items.
    /// </summary>
    int32_t getADDITIONALIMAGELINKWARNING() const;
    bool aDDITIONALIMAGELINKWARNINGIsSet() const;
    void unsetADDITIONAL_IMAGE_LINK_WARNING();

    void setADDITIONALIMAGELINKWARNING(int32_t value);

    /// <summary>
    /// Some items have image_link URLs that are formatted incorrectly and will not be published with those items.
    /// </summary>
    int32_t getIMAGELINKWARNING() const;
    bool iMAGELINKWARNINGIsSet() const;
    void unsetIMAGE_LINK_WARNING();

    void setIMAGELINKWARNING(int32_t value);

    /// <summary>
    /// Some items have shipping values that are formatted incorrectly.
    /// </summary>
    int32_t getSHIPPINGINVALID() const;
    bool sHIPPINGINVALIDIsSet() const;
    void unsetSHIPPING_INVALID();

    void setSHIPPINGINVALID(int32_t value);

    /// <summary>
    /// Some items have tax values that are formatted incorrectly.
    /// </summary>
    int32_t getTAXINVALID() const;
    bool tAXINVALIDIsSet() const;
    void unsetTAX_INVALID();

    void setTAXINVALID(int32_t value);

    /// <summary>
    /// Some items have invalid shipping_weight values.
    /// </summary>
    int32_t getSHIPPINGWEIGHTINVALID() const;
    bool sHIPPINGWEIGHTINVALIDIsSet() const;
    void unsetSHIPPING_WEIGHT_INVALID();

    void setSHIPPINGWEIGHTINVALID(int32_t value);

    /// <summary>
    /// Some items have expiration_date values that are formatted incorrectly, those items will be published without an expiration date.
    /// </summary>
    int32_t getEXPIRATIONDATEINVALID() const;
    bool eXPIRATIONDATEINVALIDIsSet() const;
    void unsetEXPIRATION_DATE_INVALID();

    void setEXPIRATIONDATEINVALID(int32_t value);

    /// <summary>
    /// Some items have availability_date values that are formatted incorrectly, those items will be published without an availability date.
    /// </summary>
    int32_t getAVAILABILITYDATEINVALID() const;
    bool aVAILABILITYDATEINVALIDIsSet() const;
    void unsetAVAILABILITY_DATE_INVALID();

    void setAVAILABILITYDATEINVALID(int32_t value);

    /// <summary>
    /// Some items have sale_price_effective_date values that are formatted incorrectly, those items will be published without a sale date.
    /// </summary>
    int32_t getSALEDATEINVALID() const;
    bool sALEDATEINVALIDIsSet() const;
    void unsetSALE_DATE_INVALID();

    void setSALEDATEINVALID(int32_t value);

    /// <summary>
    /// Some items have weight_unit values that are formatted incorrectly, those items will be published without a weight unit.
    /// </summary>
    int32_t getWEIGHTUNITINVALID() const;
    bool wEIGHTUNITINVALIDIsSet() const;
    void unsetWEIGHT_UNIT_INVALID();

    void setWEIGHTUNITINVALID(int32_t value);

    /// <summary>
    /// Some items have is_bundle values that are formatted incorrectly, those items will be published without being bundled with other products.
    /// </summary>
    int32_t getISBUNDLEINVALID() const;
    bool iSBUNDLEINVALIDIsSet() const;
    void unsetIS_BUNDLE_INVALID();

    void setISBUNDLEINVALID(int32_t value);

    /// <summary>
    /// Some items have updated_time values thate are formatted incorrectly, those items will be published without an updated time.
    /// </summary>
    int32_t getUPDATEDTIMEINVALID() const;
    bool uPDATEDTIMEINVALIDIsSet() const;
    void unsetUPDATED_TIME_INVALID();

    void setUPDATEDTIMEINVALID(int32_t value);

    /// <summary>
    /// Some items have custom_label values that are too long, those items will be published without that custom label.
    /// </summary>
    int32_t getCUSTOMLABELLENGTHTOOLONG() const;
    bool cUSTOMLABELLENGTHTOOLONGIsSet() const;
    void unsetCUSTOM_LABEL_LENGTH_TOO_LONG();

    void setCUSTOMLABELLENGTHTOOLONG(int32_t value);

    /// <summary>
    /// Some items have product_type values that are too long, those items will be published without that product type.
    /// </summary>
    int32_t getPRODUCTTYPELENGTHTOOLONG() const;
    bool pRODUCTTYPELENGTHTOOLONGIsSet() const;
    void unsetPRODUCT_TYPE_LENGTH_TOO_LONG();

    void setPRODUCTTYPELENGTHTOOLONG(int32_t value);

    /// <summary>
    /// Some items have additional_image_link values that exceed the limit for additional images, those items will be published without some of your images.
    /// </summary>
    int32_t getTOOMANYADDITIONALIMAGELINKS() const;
    bool tOOMANYADDITIONALIMAGELINKSIsSet() const;
    void unsetTOO_MANY_ADDITIONAL_IMAGE_LINKS();

    void setTOOMANYADDITIONALIMAGELINKS(int32_t value);

    /// <summary>
    /// Some items have invalid multipack values.
    /// </summary>
    int32_t getMULTIPACKINVALID() const;
    bool mULTIPACKINVALIDIsSet() const;
    void unsetMULTIPACK_INVALID();

    void setMULTIPACKINVALID(int32_t value);

    /// <summary>
    /// The product count has increased or decreased significantly compared to the last successful ingestion.
    /// </summary>
    int32_t getINDEXEDPRODUCTCOUNTLARGEDELTA() const;
    bool iNDEXEDPRODUCTCOUNTLARGEDELTAIsSet() const;
    void unsetINDEXED_PRODUCT_COUNT_LARGE_DELTA();

    void setINDEXEDPRODUCTCOUNTLARGEDELTA(int32_t value);

    /// <summary>
    /// Some items include additional_image_links that can&#39;t be found.
    /// </summary>
    int32_t getITEMADDITIONALIMAGEDOWNLOADFAILURE() const;
    bool iTEMADDITIONALIMAGEDOWNLOADFAILUREIsSet() const;
    void unsetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE();

    void setITEMADDITIONALIMAGEDOWNLOADFAILURE(int32_t value);

    /// <summary>
    /// Some items are missing a google_product_category.
    /// </summary>
    int32_t getOPTIONALPRODUCTCATEGORYMISSING() const;
    bool oPTIONALPRODUCTCATEGORYMISSINGIsSet() const;
    void unsetOPTIONAL_PRODUCT_CATEGORY_MISSING();

    void setOPTIONALPRODUCTCATEGORYMISSING(int32_t value);

    /// <summary>
    /// Some items include google_product_category values that are not formatted correctly according to the GPC taxonomy.
    /// </summary>
    int32_t getOPTIONALPRODUCTCATEGORYINVALID() const;
    bool oPTIONALPRODUCTCATEGORYINVALIDIsSet() const;
    void unsetOPTIONAL_PRODUCT_CATEGORY_INVALID();

    void setOPTIONALPRODUCTCATEGORYINVALID(int32_t value);

    /// <summary>
    /// Some items are missing a condition value, which may limit visibility in recommendations, search results and shopping experiences.
    /// </summary>
    int32_t getOPTIONALCONDITIONMISSING() const;
    bool oPTIONALCONDITIONMISSINGIsSet() const;
    void unsetOPTIONAL_CONDITION_MISSING();

    void setOPTIONALCONDITIONMISSING(int32_t value);

    /// <summary>
    /// Some items include condition values that are formatted incorrectly, which may limit visibility in recommendations, search results and shopping experiences.
    /// </summary>
    int32_t getOPTIONALCONDITIONINVALID() const;
    bool oPTIONALCONDITIONINVALIDIsSet() const;
    void unsetOPTIONAL_CONDITION_INVALID();

    void setOPTIONALCONDITIONINVALID(int32_t value);

    /// <summary>
    /// Some items include invalid ios_deep_link values.
    /// </summary>
    int32_t getIOSDEEPLINKINVALID() const;
    bool iOSDEEPLINKINVALIDIsSet() const;
    void unsetIOS_DEEP_LINK_INVALID();

    void setIOSDEEPLINKINVALID(int32_t value);

    /// <summary>
    /// Some items include invalid android_deep_link.
    /// </summary>
    int32_t getANDROIDDEEPLINKINVALID() const;
    bool aNDROIDDEEPLINKINVALIDIsSet() const;
    void unsetANDROID_DEEP_LINK_INVALID();

    void setANDROIDDEEPLINKINVALID(int32_t value);

    /// <summary>
    /// Some items include utm_source values that are formatted incorrectly and have been automatically corrected.
    /// </summary>
    int32_t getUTMSOURCEAUTOCORRECTED() const;
    bool uTMSOURCEAUTOCORRECTEDIsSet() const;
    void unsetUTM_SOURCE_AUTO_CORRECTED();

    void setUTMSOURCEAUTOCORRECTED(int32_t value);

    /// <summary>
    /// Some items include a currency that doesn&#39;t match the usual currency for the location where that product is sold or shipped.
    /// </summary>
    int32_t getCOUNTRYDOESNOTMAPTOCURRENCY() const;
    bool cOUNTRYDOESNOTMAPTOCURRENCYIsSet() const;
    void unsetCOUNTRY_DOES_NOT_MAP_TO_CURRENCY();

    void setCOUNTRYDOESNOTMAPTOCURRENCY(int32_t value);

    /// <summary>
    /// Some items include min_ad_price values that are formatted incorrectly.
    /// </summary>
    int32_t getMINADPRICEINVALID() const;
    bool mINADPRICEINVALIDIsSet() const;
    void unsetMIN_AD_PRICE_INVALID();

    void setMINADPRICEINVALID(int32_t value);

    /// <summary>
    /// Some items include incorrectly formatted GTINs.
    /// </summary>
    int32_t getGTININVALID() const;
    bool gTININVALIDIsSet() const;
    void unsetGTIN_INVALID();

    void setGTININVALID(int32_t value);

    /// <summary>
    /// Some items include inconsistent currencies in price fields.
    /// </summary>
    int32_t getINCONSISTENTCURRENCYVALUES() const;
    bool iNCONSISTENTCURRENCYVALUESIsSet() const;
    void unsetINCONSISTENT_CURRENCY_VALUES();

    void setINCONSISTENTCURRENCYVALUES(int32_t value);

    /// <summary>
    /// Some items include sales price that is much lower than the list price.
    /// </summary>
    int32_t getSALESPRICETOOLOW() const;
    bool sALESPRICETOOLOWIsSet() const;
    void unsetSALES_PRICE_TOO_LOW();

    void setSALESPRICETOOLOW(int32_t value);

    /// <summary>
    /// Some items include incorrectly formatted shipping_width.
    /// </summary>
    int32_t getSHIPPINGWIDTHINVALID() const;
    bool sHIPPINGWIDTHINVALIDIsSet() const;
    void unsetSHIPPING_WIDTH_INVALID();

    void setSHIPPINGWIDTHINVALID(int32_t value);

    /// <summary>
    /// Some items include incorrectly formatted shipping_height.
    /// </summary>
    int32_t getSHIPPINGHEIGHTINVALID() const;
    bool sHIPPINGHEIGHTINVALIDIsSet() const;
    void unsetSHIPPING_HEIGHT_INVALID();

    void setSHIPPINGHEIGHTINVALID(int32_t value);

    /// <summary>
    /// Some items include a sales price that is higher than the list price. The sales price has been defaulted to the list price.
    /// </summary>
    int32_t getSALESPRICETOOHIGH() const;
    bool sALESPRICETOOHIGHIsSet() const;
    void unsetSALES_PRICE_TOO_HIGH();

    void setSALESPRICETOOHIGH(int32_t value);

    /// <summary>
    /// Some items include incorrectly formatted MPNs.
    /// </summary>
    int32_t getMPNINVALID() const;
    bool mPNINVALIDIsSet() const;
    void unsetMPN_INVALID();

    void setMPNINVALID(int32_t value);


protected:
    int32_t m_AD_LINK_FORMAT_WARNING;
    bool m_AD_LINK_FORMAT_WARNINGIsSet;
    int32_t m_AD_LINK_SAME_AS_LINK;
    bool m_AD_LINK_SAME_AS_LINKIsSet;
    int32_t m_TITLE_LENGTH_TOO_LONG;
    bool m_TITLE_LENGTH_TOO_LONGIsSet;
    int32_t m_DESCRIPTION_LENGTH_TOO_LONG;
    bool m_DESCRIPTION_LENGTH_TOO_LONGIsSet;
    int32_t m_GENDER_INVALID;
    bool m_GENDER_INVALIDIsSet;
    int32_t m_AGE_GROUP_INVALID;
    bool m_AGE_GROUP_INVALIDIsSet;
    int32_t m_SIZE_TYPE_INVALID;
    bool m_SIZE_TYPE_INVALIDIsSet;
    int32_t m_SIZE_SYSTEM_INVALID;
    bool m_SIZE_SYSTEM_INVALIDIsSet;
    int32_t m_LINK_FORMAT_WARNING;
    bool m_LINK_FORMAT_WARNINGIsSet;
    int32_t m_SALES_PRICE_INVALID;
    bool m_SALES_PRICE_INVALIDIsSet;
    int32_t m_PRODUCT_CATEGORY_DEPTH_WARNING;
    bool m_PRODUCT_CATEGORY_DEPTH_WARNINGIsSet;
    int32_t m_ADWORDS_FORMAT_WARNING;
    bool m_ADWORDS_FORMAT_WARNINGIsSet;
    int32_t m_ADWORDS_SAME_AS_LINK;
    bool m_ADWORDS_SAME_AS_LINKIsSet;
    int32_t m_DUPLICATE_HEADERS;
    bool m_DUPLICATE_HEADERSIsSet;
    int32_t m_FETCH_SAME_SIGNATURE;
    bool m_FETCH_SAME_SIGNATUREIsSet;
    int32_t m_ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG;
    bool m_ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONGIsSet;
    int32_t m_ADDITIONAL_IMAGE_LINK_WARNING;
    bool m_ADDITIONAL_IMAGE_LINK_WARNINGIsSet;
    int32_t m_IMAGE_LINK_WARNING;
    bool m_IMAGE_LINK_WARNINGIsSet;
    int32_t m_SHIPPING_INVALID;
    bool m_SHIPPING_INVALIDIsSet;
    int32_t m_TAX_INVALID;
    bool m_TAX_INVALIDIsSet;
    int32_t m_SHIPPING_WEIGHT_INVALID;
    bool m_SHIPPING_WEIGHT_INVALIDIsSet;
    int32_t m_EXPIRATION_DATE_INVALID;
    bool m_EXPIRATION_DATE_INVALIDIsSet;
    int32_t m_AVAILABILITY_DATE_INVALID;
    bool m_AVAILABILITY_DATE_INVALIDIsSet;
    int32_t m_SALE_DATE_INVALID;
    bool m_SALE_DATE_INVALIDIsSet;
    int32_t m_WEIGHT_UNIT_INVALID;
    bool m_WEIGHT_UNIT_INVALIDIsSet;
    int32_t m_IS_BUNDLE_INVALID;
    bool m_IS_BUNDLE_INVALIDIsSet;
    int32_t m_UPDATED_TIME_INVALID;
    bool m_UPDATED_TIME_INVALIDIsSet;
    int32_t m_CUSTOM_LABEL_LENGTH_TOO_LONG;
    bool m_CUSTOM_LABEL_LENGTH_TOO_LONGIsSet;
    int32_t m_PRODUCT_TYPE_LENGTH_TOO_LONG;
    bool m_PRODUCT_TYPE_LENGTH_TOO_LONGIsSet;
    int32_t m_TOO_MANY_ADDITIONAL_IMAGE_LINKS;
    bool m_TOO_MANY_ADDITIONAL_IMAGE_LINKSIsSet;
    int32_t m_MULTIPACK_INVALID;
    bool m_MULTIPACK_INVALIDIsSet;
    int32_t m_INDEXED_PRODUCT_COUNT_LARGE_DELTA;
    bool m_INDEXED_PRODUCT_COUNT_LARGE_DELTAIsSet;
    int32_t m_ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE;
    bool m_ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILUREIsSet;
    int32_t m_OPTIONAL_PRODUCT_CATEGORY_MISSING;
    bool m_OPTIONAL_PRODUCT_CATEGORY_MISSINGIsSet;
    int32_t m_OPTIONAL_PRODUCT_CATEGORY_INVALID;
    bool m_OPTIONAL_PRODUCT_CATEGORY_INVALIDIsSet;
    int32_t m_OPTIONAL_CONDITION_MISSING;
    bool m_OPTIONAL_CONDITION_MISSINGIsSet;
    int32_t m_OPTIONAL_CONDITION_INVALID;
    bool m_OPTIONAL_CONDITION_INVALIDIsSet;
    int32_t m_IOS_DEEP_LINK_INVALID;
    bool m_IOS_DEEP_LINK_INVALIDIsSet;
    int32_t m_ANDROID_DEEP_LINK_INVALID;
    bool m_ANDROID_DEEP_LINK_INVALIDIsSet;
    int32_t m_UTM_SOURCE_AUTO_CORRECTED;
    bool m_UTM_SOURCE_AUTO_CORRECTEDIsSet;
    int32_t m_COUNTRY_DOES_NOT_MAP_TO_CURRENCY;
    bool m_COUNTRY_DOES_NOT_MAP_TO_CURRENCYIsSet;
    int32_t m_MIN_AD_PRICE_INVALID;
    bool m_MIN_AD_PRICE_INVALIDIsSet;
    int32_t m_GTIN_INVALID;
    bool m_GTIN_INVALIDIsSet;
    int32_t m_INCONSISTENT_CURRENCY_VALUES;
    bool m_INCONSISTENT_CURRENCY_VALUESIsSet;
    int32_t m_SALES_PRICE_TOO_LOW;
    bool m_SALES_PRICE_TOO_LOWIsSet;
    int32_t m_SHIPPING_WIDTH_INVALID;
    bool m_SHIPPING_WIDTH_INVALIDIsSet;
    int32_t m_SHIPPING_HEIGHT_INVALID;
    bool m_SHIPPING_HEIGHT_INVALIDIsSet;
    int32_t m_SALES_PRICE_TOO_HIGH;
    bool m_SALES_PRICE_TOO_HIGHIsSet;
    int32_t m_MPN_INVALID;
    bool m_MPN_INVALIDIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedValidationWarnings_H_ */
