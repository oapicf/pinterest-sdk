/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdvancedAuctionItemsSubmitRequest.h
 *
 * Request containing operations to perform on bid prices and bid multipliers for a batch of retail catalog items
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AdvancedAuctionItemsSubmitRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AdvancedAuctionItemsSubmitRequest_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>
#include "CppRestOpenAPIClient/model/AdvancedAuctionItemsSubmitRecord.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class AdvancedAuctionItemsSubmitRecord;


/// <summary>
/// Request containing operations to perform on bid prices and bid multipliers for a batch of retail catalog items
/// </summary>
class  AdvancedAuctionItemsSubmitRequest
    : public ModelBase
{
public:
    AdvancedAuctionItemsSubmitRequest();
    virtual ~AdvancedAuctionItemsSubmitRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AdvancedAuctionItemsSubmitRequest members

    /// <summary>
    /// Catalog id pertaining to all items
    /// </summary>
    utility::string_t getCatalogId() const;
    bool catalogIdIsSet() const;
    void unsetCatalog_id();

    void setCatalogId(const utility::string_t& value);

    /// <summary>
    /// Array of item bid option operations
    /// </summary>
    std::vector<std::shared_ptr<AdvancedAuctionItemsSubmitRecord>>& getItems();
    bool itemsIsSet() const;
    void unsetItems();

    void setItems(const std::vector<std::shared_ptr<AdvancedAuctionItemsSubmitRecord>>& value);


protected:
    utility::string_t m_Catalog_id;
    bool m_Catalog_idIsSet;
    std::vector<std::shared_ptr<AdvancedAuctionItemsSubmitRecord>> m_Items;
    bool m_ItemsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AdvancedAuctionItemsSubmitRequest_H_ */
