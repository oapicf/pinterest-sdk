/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConversionTagCommon.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionTagCommon_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionTagCommon_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/ConversionTagConfigs.h"
#include "CppRestOpenAPIClient/model/EnhancedMatchStatusType.h"
#include "CppRestOpenAPIClient/model/EntityStatus.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ConversionTagConfigs;


/// <summary>
/// 
/// </summary>
class  ConversionTagCommon
    : public ModelBase
{
public:
    ConversionTagCommon();
    virtual ~ConversionTagCommon();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ConversionTagCommon members

    /// <summary>
    /// Ad account ID.
    /// </summary>
    utility::string_t getAdAccountId() const;
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();

    void setAdAccountId(const utility::string_t& value);

    /// <summary>
    /// Tag code snippet.
    /// </summary>
    utility::string_t getCodeSnippet() const;
    bool codeSnippetIsSet() const;
    void unsetCode_snippet();

    void setCodeSnippet(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<EnhancedMatchStatusType> getEnhancedMatchStatus() const;
    bool enhancedMatchStatusIsSet() const;
    void unsetEnhanced_match_status();

    void setEnhancedMatchStatus(const std::shared_ptr<EnhancedMatchStatusType>& value);

    /// <summary>
    /// Tag ID.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// Time for the last event fired.
    /// </summary>
    double getLastFiredTimeMs() const;
    bool lastFiredTimeMsIsSet() const;
    void unsetLast_fired_time_ms();

    void setLastFiredTimeMs(double value);

    /// <summary>
    /// Conversion tag name.
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<EntityStatus> getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const std::shared_ptr<EntityStatus>& value);

    /// <summary>
    /// Version number.
    /// </summary>
    utility::string_t getVersion() const;
    bool versionIsSet() const;
    void unsetVersion();

    void setVersion(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConversionTagConfigs> getConfigs() const;
    bool configsIsSet() const;
    void unsetConfigs();

    void setConfigs(const std::shared_ptr<ConversionTagConfigs>& value);


protected:
    utility::string_t m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    utility::string_t m_Code_snippet;
    bool m_Code_snippetIsSet;
    std::shared_ptr<EnhancedMatchStatusType> m_Enhanced_match_status;
    bool m_Enhanced_match_statusIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    double m_Last_fired_time_ms;
    bool m_Last_fired_time_msIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::shared_ptr<EntityStatus> m_Status;
    bool m_StatusIsSet;
    utility::string_t m_Version;
    bool m_VersionIsSet;
    std::shared_ptr<ConversionTagConfigs> m_Configs;
    bool m_ConfigsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionTagCommon_H_ */
