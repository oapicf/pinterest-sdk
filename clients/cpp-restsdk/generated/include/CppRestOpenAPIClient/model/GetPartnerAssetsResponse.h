/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetPartnerAssetsResponse.h
 *
 * An object containing the permissions a you/your business partner has on the asset.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetPartnerAssetsResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetPartnerAssetsResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/AssetGroupBinding.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class AssetGroupBinding;


/// <summary>
/// An object containing the permissions a you/your business partner has on the asset.
/// </summary>
class  GetPartnerAssetsResponse
    : public ModelBase
{
public:
    GetPartnerAssetsResponse();
    virtual ~GetPartnerAssetsResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetPartnerAssetsResponse members

    /// <summary>
    /// Unique identifier of a business asset.
    /// </summary>
    utility::string_t getAssetId() const;
    bool assetIdIsSet() const;
    void unsetAsset_id();

    void setAssetId(const utility::string_t& value);

    /// <summary>
    /// Type of asset. Currently we only support AD_ACCOUNT and PROFILE, and ASSET_GROUP.
    /// </summary>
    utility::string_t getAssetType() const;
    bool assetTypeIsSet() const;
    void unsetAsset_type();

    void setAssetType(const utility::string_t& value);

    /// <summary>
    /// The permissions you or your partner has on the asset. If partner_type&#x3D;INTERNAL, the permission levels are for the access the partner has to your business asset.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the permission levels are for the access you have to the partner&#39;s business asset.
    /// </summary>
    std::vector<utility::string_t>& getPermissions();
    bool permissionsIsSet() const;
    void unsetPermissions();

    void setPermissions(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AssetGroupBinding> getAssetGroupInfo() const;
    bool assetGroupInfoIsSet() const;
    void unsetAsset_group_info();

    void setAssetGroupInfo(const std::shared_ptr<AssetGroupBinding>& value);


protected:
    utility::string_t m_Asset_id;
    bool m_Asset_idIsSet;
    utility::string_t m_Asset_type;
    bool m_Asset_typeIsSet;
    std::vector<utility::string_t> m_Permissions;
    bool m_PermissionsIsSet;
    std::shared_ptr<AssetGroupBinding> m_Asset_group_info;
    bool m_Asset_group_infoIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetPartnerAssetsResponse_H_ */
