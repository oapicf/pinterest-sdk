/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OauthAccessTokenRequestCode.h
 *
 * A request to exchange an authorization code for an access token.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OauthAccessTokenRequestCode_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OauthAccessTokenRequestCode_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// A request to exchange an authorization code for an access token.
/// </summary>
class  OauthAccessTokenRequestCode
    : public ModelBase
{
public:
    OauthAccessTokenRequestCode();
    virtual ~OauthAccessTokenRequestCode();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OauthAccessTokenRequestCode members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getGrantType() const;
    bool grantTypeIsSet() const;
    void unsetGrant_type();

    void setGrantType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCode() const;
    bool codeIsSet() const;
    void unsetCode();

    void setCode(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRedirectUri() const;
    bool redirectUriIsSet() const;
    void unsetRedirect_uri();

    void setRedirectUri(const utility::string_t& value);


protected:
    utility::string_t m_Grant_type;
    bool m_Grant_typeIsSet;
    utility::string_t m_Code;
    bool m_CodeIsSet;
    utility::string_t m_Redirect_uri;
    bool m_Redirect_uriIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OauthAccessTokenRequestCode_H_ */
