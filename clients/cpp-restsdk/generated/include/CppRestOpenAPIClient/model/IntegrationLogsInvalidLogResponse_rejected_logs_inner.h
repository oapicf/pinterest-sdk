/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * IntegrationLogsInvalidLogResponse_rejected_logs_inner.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_IntegrationLogsInvalidLogResponse_rejected_logs_inner_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_IntegrationLogsInvalidLogResponse_rejected_logs_inner_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  IntegrationLogsInvalidLogResponse_rejected_logs_inner
    : public ModelBase
{
public:
    IntegrationLogsInvalidLogResponse_rejected_logs_inner();
    virtual ~IntegrationLogsInvalidLogResponse_rejected_logs_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IntegrationLogsInvalidLogResponse_rejected_logs_inner members

    /// <summary>
    /// Index of the log in the batch.
    /// </summary>
    int32_t getLogIndex() const;
    bool logIndexIsSet() const;
    void unsetLog_index();

    void setLogIndex(int32_t value);

    /// <summary>
    /// The field name containing an invalid value.
    /// </summary>
    utility::string_t getField() const;
    bool fieldIsSet() const;
    void unsetField();

    void setField(const utility::string_t& value);

    /// <summary>
    /// The value that is invalid.
    /// </summary>
    utility::string_t getValue() const;
    bool valueIsSet() const;
    void unsetValue();

    void setValue(const utility::string_t& value);

    /// <summary>
    /// The reason the value is invalid.
    /// </summary>
    utility::string_t getReason() const;
    bool reasonIsSet() const;
    void unsetReason();

    void setReason(const utility::string_t& value);


protected:
    int32_t m_Log_index;
    bool m_Log_indexIsSet;
    utility::string_t m_Field;
    bool m_FieldIsSet;
    utility::string_t m_Value;
    bool m_ValueIsSet;
    utility::string_t m_Reason;
    bool m_ReasonIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_IntegrationLogsInvalidLogResponse_rejected_logs_inner_H_ */
