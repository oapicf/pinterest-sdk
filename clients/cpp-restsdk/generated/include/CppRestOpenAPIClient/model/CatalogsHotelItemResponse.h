/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsHotelItemResponse.h
 *
 * Object describing a hotel record
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelItemResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelItemResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CatalogsHotelAttributes.h"
#include "CppRestOpenAPIClient/model/Pin.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/CatalogsType.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Pin;
class CatalogsHotelAttributes;


/// <summary>
/// Object describing a hotel record
/// </summary>
class  CatalogsHotelItemResponse
    : public ModelBase
{
public:
    CatalogsHotelItemResponse();
    virtual ~CatalogsHotelItemResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsHotelItemResponse members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsType> getCatalogType() const;
    bool catalogTypeIsSet() const;
    void unsetCatalog_type();

    void setCatalogType(const std::shared_ptr<CatalogsType>& value);

    /// <summary>
    /// The catalog hotel id in the merchant namespace
    /// </summary>
    utility::string_t getHotelId() const;
    bool hotelIdIsSet() const;
    void unsetHotel_id();

    void setHotelId(const utility::string_t& value);

    /// <summary>
    /// The pins mapped to the item
    /// </summary>
    std::vector<std::shared_ptr<Pin>>& getPins();
    bool pinsIsSet() const;
    void unsetPins();

    void setPins(const std::vector<std::shared_ptr<Pin>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsHotelAttributes> getAttributes() const;
    bool attributesIsSet() const;
    void unsetAttributes();

    void setAttributes(const std::shared_ptr<CatalogsHotelAttributes>& value);


protected:
    std::shared_ptr<CatalogsType> m_Catalog_type;
    bool m_Catalog_typeIsSet;
    utility::string_t m_Hotel_id;
    bool m_Hotel_idIsSet;
    std::vector<std::shared_ptr<Pin>> m_Pins;
    bool m_PinsIsSet;
    std::shared_ptr<CatalogsHotelAttributes> m_Attributes;
    bool m_AttributesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelItemResponse_H_ */
