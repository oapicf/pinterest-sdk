/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Account.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Account_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Account_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  Account
    : public ModelBase
{
public:
    Account();
    virtual ~Account();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Account members

    /// <summary>
    /// Type of account
    /// </summary>
    utility::string_t getAccountType() const;
    bool accountTypeIsSet() const;
    void unsetAccount_type();

    void setAccountType(const utility::string_t& value);

    /// <summary>
    /// User account ID.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProfileImage() const;
    bool profileImageIsSet() const;
    void unsetProfile_image();

    void setProfileImage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWebsiteUrl() const;
    bool websiteUrlIsSet() const;
    void unsetWebsite_url();

    void setWebsiteUrl(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUsername() const;
    bool usernameIsSet() const;
    void unsetUsername();

    void setUsername(const utility::string_t& value);

    /// <summary>
    /// Profile about description.
    /// </summary>
    utility::string_t getAbout() const;
    bool aboutIsSet() const;
    void unsetAbout();

    void setAbout(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBusinessName() const;
    bool businessNameIsSet() const;
    void unsetBusiness_name();

    void setBusinessName(const utility::string_t& value);

    /// <summary>
    /// User account board count.&lt;br/&gt;**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
    /// </summary>
    int32_t getBoardCount() const;
    bool boardCountIsSet() const;
    void unsetBoard_count();

    void setBoardCount(int32_t value);

    /// <summary>
    /// User account pin count. This includes both created and saved pins.
    /// </summary>
    int32_t getPinCount() const;
    bool pinCountIsSet() const;
    void unsetPin_count();

    void setPinCount(int32_t value);

    /// <summary>
    /// User account follower count.
    /// </summary>
    int32_t getFollowerCount() const;
    bool followerCountIsSet() const;
    void unsetFollower_count();

    void setFollowerCount(int32_t value);

    /// <summary>
    /// User account following count.
    /// </summary>
    int32_t getFollowingCount() const;
    bool followingCountIsSet() const;
    void unsetFollowing_count();

    void setFollowingCount(int32_t value);

    /// <summary>
    /// User account monthly views.
    /// </summary>
    int32_t getMonthlyViews() const;
    bool monthlyViewsIsSet() const;
    void unsetMonthly_views();

    void setMonthlyViews(int32_t value);


protected:
    utility::string_t m_Account_type;
    bool m_Account_typeIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Profile_image;
    bool m_Profile_imageIsSet;
    utility::string_t m_Website_url;
    bool m_Website_urlIsSet;
    utility::string_t m_Username;
    bool m_UsernameIsSet;
    utility::string_t m_About;
    bool m_AboutIsSet;
    utility::string_t m_Business_name;
    bool m_Business_nameIsSet;
    int32_t m_Board_count;
    bool m_Board_countIsSet;
    int32_t m_Pin_count;
    bool m_Pin_countIsSet;
    int32_t m_Follower_count;
    bool m_Follower_countIsSet;
    int32_t m_Following_count;
    bool m_Following_countIsSet;
    int32_t m_Monthly_views;
    bool m_Monthly_viewsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Account_H_ */
