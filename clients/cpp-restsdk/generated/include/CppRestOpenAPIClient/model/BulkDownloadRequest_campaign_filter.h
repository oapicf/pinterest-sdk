/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BulkDownloadRequest_campaign_filter.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BulkDownloadRequest_campaign_filter_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BulkDownloadRequest_campaign_filter_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CampaignSummaryStatus.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/ObjectiveType.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  BulkDownloadRequest_campaign_filter
    : public ModelBase
{
public:
    BulkDownloadRequest_campaign_filter();
    virtual ~BulkDownloadRequest_campaign_filter();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BulkDownloadRequest_campaign_filter members

    /// <summary>
    /// Unix UTC timestamp.
    /// </summary>
    utility::string_t getStartTime() const;
    bool startTimeIsSet() const;
    void unsetStart_time();

    void setStartTime(const utility::string_t& value);

    /// <summary>
    /// Unix UTC timestamp.
    /// </summary>
    utility::string_t getEndTime() const;
    bool endTimeIsSet() const;
    void unsetEnd_time();

    void setEndTime(const utility::string_t& value);

    /// <summary>
    /// Campaign name
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<CampaignSummaryStatus>>& getCampaignStatus();
    bool campaignStatusIsSet() const;
    void unsetCampaign_status();

    void setCampaignStatus(const std::vector<std::shared_ptr<CampaignSummaryStatus>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ObjectiveType>>& getObjectiveType();
    bool objectiveTypeIsSet() const;
    void unsetObjective_type();

    void setObjectiveType(const std::vector<std::shared_ptr<ObjectiveType>>& value);


protected:
    utility::string_t m_Start_time;
    bool m_Start_timeIsSet;
    utility::string_t m_End_time;
    bool m_End_timeIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::vector<std::shared_ptr<CampaignSummaryStatus>> m_Campaign_status;
    bool m_Campaign_statusIsSet;
    std::vector<std::shared_ptr<ObjectiveType>> m_Objective_type;
    bool m_Objective_typeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BulkDownloadRequest_campaign_filter_H_ */
