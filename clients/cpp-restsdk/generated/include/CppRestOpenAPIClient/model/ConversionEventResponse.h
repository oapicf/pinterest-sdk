/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConversionEventResponse.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionEventResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionEventResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/ConversionTagType.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  ConversionEventResponse
    : public ModelBase
{
public:
    ConversionEventResponse();
    virtual ~ConversionEventResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ConversionEventResponse members

    /// <summary>
    /// 
    /// </summary>
    ConversionTagType getConversionEvent() const;
    bool conversionEventIsSet() const;
    void unsetConversion_event();

    void setConversionEvent(const ConversionTagType& value);

    /// <summary>
    /// Id of the tag.
    /// </summary>
    utility::string_t getConversionTagId() const;
    bool conversionTagIdIsSet() const;
    void unsetConversion_tag_id();

    void setConversionTagId(const utility::string_t& value);

    /// <summary>
    /// Id of the ad account.
    /// </summary>
    utility::string_t getAdAccountId() const;
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();

    void setAdAccountId(const utility::string_t& value);

    /// <summary>
    /// Creation date in epoch format.
    /// </summary>
    int32_t getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetCreated_time();

    void setCreatedTime(int32_t value);


protected:
    ConversionTagType m_Conversion_event;
    bool m_Conversion_eventIsSet;
    utility::string_t m_Conversion_tag_id;
    bool m_Conversion_tag_idIsSet;
    utility::string_t m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionEventResponse_H_ */
