/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateMembershipOrPartnershipInvitesBody.h
 *
 * Body to be used on path to send Members or Partners Invite or Request
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CreateMembershipOrPartnershipInvitesBody_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CreateMembershipOrPartnershipInvitesBody_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/InviteType.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Body to be used on path to send Members or Partners Invite or Request
/// </summary>
class  CreateMembershipOrPartnershipInvitesBody
    : public ModelBase
{
public:
    CreateMembershipOrPartnershipInvitesBody();
    virtual ~CreateMembershipOrPartnershipInvitesBody();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateMembershipOrPartnershipInvitesBody members

    /// <summary>
    /// The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
    /// </summary>
    utility::string_t getBusinessRole() const;
    bool businessRoleIsSet() const;
    void unsetBusiness_role();

    void setBusinessRole(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<InviteType> getInviteType() const;
    bool inviteTypeIsSet() const;
    void unsetInvite_type();

    void setInviteType(const std::shared_ptr<InviteType>& value);

    /// <summary>
    /// A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE
    /// </summary>
    std::vector<utility::string_t>& getMembers();
    bool membersIsSet() const;
    void unsetMembers();

    void setMembers(const std::vector<utility::string_t>& value);

    /// <summary>
    /// A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST
    /// </summary>
    std::vector<utility::string_t>& getPartners();
    bool partnersIsSet() const;
    void unsetPartners();

    void setPartners(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_Business_role;
    bool m_Business_roleIsSet;
    std::shared_ptr<InviteType> m_Invite_type;
    bool m_Invite_typeIsSet;
    std::vector<utility::string_t> m_Members;
    bool m_MembersIsSet;
    std::vector<utility::string_t> m_Partners;
    bool m_PartnersIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CreateMembershipOrPartnershipInvitesBody_H_ */
