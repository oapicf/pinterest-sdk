/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConversionApiResponse.h
 *
 * Schema describing the object in the response, which contains information about the events that were received and processed.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionApiResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionApiResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/ConversionApiResponse_events_inner.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ConversionApiResponse_events_inner;


/// <summary>
/// Schema describing the object in the response, which contains information about the events that were received and processed.
/// </summary>
class  ConversionApiResponse
    : public ModelBase
{
public:
    ConversionApiResponse();
    virtual ~ConversionApiResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ConversionApiResponse members

    /// <summary>
    /// Total number of events received in the request.
    /// </summary>
    int32_t getNumEventsReceived() const;
    bool numEventsReceivedIsSet() const;
    void unsetNum_events_received();

    void setNumEventsReceived(int32_t value);

    /// <summary>
    /// Number of events that were successfully processed from the events.
    /// </summary>
    int32_t getNumEventsProcessed() const;
    bool numEventsProcessedIsSet() const;
    void unsetNum_events_processed();

    void setNumEventsProcessed(int32_t value);

    /// <summary>
    /// Specific messages for each event received. The order will match the order in which the events were received in the request.
    /// </summary>
    std::vector<std::shared_ptr<ConversionApiResponse_events_inner>>& getEvents();
    bool eventsIsSet() const;
    void unsetEvents();

    void setEvents(const std::vector<std::shared_ptr<ConversionApiResponse_events_inner>>& value);


protected:
    int32_t m_Num_events_received;
    bool m_Num_events_receivedIsSet;
    int32_t m_Num_events_processed;
    bool m_Num_events_processedIsSet;
    std::vector<std::shared_ptr<ConversionApiResponse_events_inner>> m_Events;
    bool m_EventsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ConversionApiResponse_H_ */
