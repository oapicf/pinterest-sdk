/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CampaignsAnalyticsResponse_inner.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CampaignsAnalyticsResponse_inner_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CampaignsAnalyticsResponse_inner_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include "CppRestOpenAPIClient/AnyType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  CampaignsAnalyticsResponse_inner
    : public ModelBase
{
public:
    CampaignsAnalyticsResponse_inner();
    virtual ~CampaignsAnalyticsResponse_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CampaignsAnalyticsResponse_inner members

    /// <summary>
    /// The ID of the campaing that this metrics belongs to.
    /// </summary>
    utility::string_t getCAMPAIGNID() const;
    bool cAMPAIGNIDIsSet() const;
    void unsetCAMPAIGN_ID();

    void setCAMPAIGNID(const utility::string_t& value);

    /// <summary>
    /// Current metrics date. Only returned when granularity is a time-based value (&#x60;DAY&#x60;, &#x60;HOUR&#x60;, &#x60;WEEK&#x60;, &#x60;MONTH&#x60;)
    /// </summary>
    utility::datetime getDATE() const;
    bool dATEIsSet() const;
    void unsetDATE();

    void setDATE(const utility::datetime& value);


protected:
    utility::string_t m_CAMPAIGN_ID;
    bool m_CAMPAIGN_IDIsSet;
    utility::datetime m_DATE;
    bool m_DATEIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CampaignsAnalyticsResponse_inner_H_ */
