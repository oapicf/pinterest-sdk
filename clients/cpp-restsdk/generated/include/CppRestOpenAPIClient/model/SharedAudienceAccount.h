/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SharedAudienceAccount.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SharedAudienceAccount_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SharedAudienceAccount_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  SharedAudienceAccount
    : public ModelBase
{
public:
    SharedAudienceAccount();
    virtual ~SharedAudienceAccount();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SharedAudienceAccount members

    /// <summary>
    /// Account ID (ad account or business ID).
    /// </summary>
    utility::string_t getAccountId() const;
    bool accountIdIsSet() const;
    void unsetAccount_id();

    void setAccountId(const utility::string_t& value);

    /// <summary>
    /// Account name.
    /// </summary>
    utility::string_t getAccountName() const;
    bool accountNameIsSet() const;
    void unsetAccount_name();

    void setAccountName(const utility::string_t& value);

    /// <summary>
    /// account type
    /// </summary>
    utility::string_t getAccountType() const;
    bool accountTypeIsSet() const;
    void unsetAccount_type();

    void setAccountType(const utility::string_t& value);

    /// <summary>
    /// Epoch timestamp in seconds for the shared audience event
    /// </summary>
    int32_t getSharedOnTimestamp() const;
    bool sharedOnTimestampIsSet() const;
    void unsetShared_on_timestamp();

    void setSharedOnTimestamp(int32_t value);


protected:
    utility::string_t m_Account_id;
    bool m_Account_idIsSet;
    utility::string_t m_Account_name;
    bool m_Account_nameIsSet;
    utility::string_t m_Account_type;
    bool m_Account_typeIsSet;
    int32_t m_Shared_on_timestamp;
    bool m_Shared_on_timestampIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SharedAudienceAccount_H_ */
