/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsCreativeAssetsProductGroupProductCounts.h
 *
 * Product counts for a Creative Assets CatalogsProductGroup
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsCreativeAssetsProductGroupProductCounts_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsCreativeAssetsProductGroupProductCounts_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Product counts for a Creative Assets CatalogsProductGroup
/// </summary>
class  CatalogsCreativeAssetsProductGroupProductCounts
    : public ModelBase
{
public:
    CatalogsCreativeAssetsProductGroupProductCounts();
    virtual ~CatalogsCreativeAssetsProductGroupProductCounts();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsCreativeAssetsProductGroupProductCounts members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCatalogType() const;
    bool catalogTypeIsSet() const;
    void unsetCatalog_type();

    void setCatalogType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getTotal() const;
    bool totalIsSet() const;
    void unsetTotal();

    void setTotal(double value);

    /// <summary>
    /// 
    /// </summary>
    double getVideos() const;
    bool videosIsSet() const;
    void unsetVideos();

    void setVideos(double value);


protected:
    utility::string_t m_Catalog_type;
    bool m_Catalog_typeIsSet;
    double m_Total;
    bool m_TotalIsSet;
    double m_Videos;
    bool m_VideosIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsCreativeAssetsProductGroupProductCounts_H_ */
