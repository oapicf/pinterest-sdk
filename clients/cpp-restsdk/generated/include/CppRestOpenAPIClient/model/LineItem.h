/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LineItem.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_LineItem_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_LineItem_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  LineItem
    : public ModelBase
{
public:
    LineItem();
    virtual ~LineItem();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LineItem members

    /// <summary>
    /// Product brand. For example, \&quot;Parker\&quot;.
    /// </summary>
    utility::string_t getProductBrand() const;
    bool productBrandIsSet() const;
    void unsetProduct_brand();

    void setProductBrand(const utility::string_t& value);

    /// <summary>
    /// Product category. For example, \&quot;Shoes\&quot;.
    /// </summary>
    utility::string_t getProductCategory() const;
    bool productCategoryIsSet() const;
    void unsetProduct_category();

    void setProductCategory(const utility::string_t& value);

    /// <summary>
    /// Product ID. For example, 1414.
    /// </summary>
    int32_t getProductId() const;
    bool productIdIsSet() const;
    void unsetProduct_id();

    void setProductId(int32_t value);

    /// <summary>
    /// Product name. For example, \&quot;Parker Boots\&quot;.
    /// </summary>
    utility::string_t getProductName() const;
    bool productNameIsSet() const;
    void unsetProduct_name();

    void setProductName(const utility::string_t& value);

    /// <summary>
    /// Product price. For example, \&quot;99.99\&quot;.
    /// </summary>
    utility::string_t getProductPrice() const;
    bool productPriceIsSet() const;
    void unsetProduct_price();

    void setProductPrice(const utility::string_t& value);

    /// <summary>
    /// Product quantity. For example, 2.
    /// </summary>
    int32_t getProductQuantity() const;
    bool productQuantityIsSet() const;
    void unsetProduct_quantity();

    void setProductQuantity(int32_t value);

    /// <summary>
    /// Product variant. For example, \&quot;Red\&quot;.
    /// </summary>
    utility::string_t getProductVariant() const;
    bool productVariantIsSet() const;
    void unsetProduct_variant();

    void setProductVariant(const utility::string_t& value);

    /// <summary>
    /// Product variant ID. For example, \&quot;1414-34832\&quot;.
    /// </summary>
    utility::string_t getProductVariantId() const;
    bool productVariantIdIsSet() const;
    void unsetProduct_variant_id();

    void setProductVariantId(const utility::string_t& value);


protected:
    utility::string_t m_Product_brand;
    bool m_Product_brandIsSet;
    utility::string_t m_Product_category;
    bool m_Product_categoryIsSet;
    int32_t m_Product_id;
    bool m_Product_idIsSet;
    utility::string_t m_Product_name;
    bool m_Product_nameIsSet;
    utility::string_t m_Product_price;
    bool m_Product_priceIsSet;
    int32_t m_Product_quantity;
    bool m_Product_quantityIsSet;
    utility::string_t m_Product_variant;
    bool m_Product_variantIsSet;
    utility::string_t m_Product_variant_id;
    bool m_Product_variant_idIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_LineItem_H_ */
