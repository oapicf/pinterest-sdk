/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AuthRespondInvitesBody_invites_inner_action.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AuthRespondInvitesBody_invites_inner_action_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AuthRespondInvitesBody_invites_inner_action_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Permissions.h"
#include <map>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  AuthRespondInvitesBody_invites_inner_action
    : public ModelBase
{
public:
    AuthRespondInvitesBody_invites_inner_action();
    virtual ~AuthRespondInvitesBody_invites_inner_action();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AuthRespondInvitesBody_invites_inner_action members

    /// <summary>
    /// Whether the invite/request is accepted.
    /// </summary>
    bool isAcceptInvite() const;
    bool acceptInviteIsSet() const;
    void unsetAccept_invite();

    void setAcceptInvite(bool value);

    /// <summary>
    /// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
    /// </summary>
    std::map<utility::string_t, std::vector<std::shared_ptr<Permissions>>>& getAssetIdToPermissions();
    bool assetIdToPermissionsIsSet() const;
    void unsetAsset_id_to_permissions();

    void setAssetIdToPermissions(const std::map<utility::string_t, std::vector<std::shared_ptr<Permissions>>>& value);


protected:
    bool m_Accept_invite;
    bool m_Accept_inviteIsSet;
    std::map<utility::string_t, std::vector<std::shared_ptr<Permissions>>> m_Asset_id_to_permissions;
    bool m_Asset_id_to_permissionsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AuthRespondInvitesBody_invites_inner_action_H_ */
