/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateAssetGroupBody.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CreateAssetGroupBody_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CreateAssetGroupBody_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/AssetGroupType.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  CreateAssetGroupBody
    : public ModelBase
{
public:
    CreateAssetGroupBody();
    virtual ~CreateAssetGroupBody();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateAssetGroupBody members

    /// <summary>
    /// Asset Group name
    /// </summary>
    utility::string_t getAssetGroupName() const;
    bool assetGroupNameIsSet() const;
    void unsetAsset_group_name();

    void setAssetGroupName(const utility::string_t& value);

    /// <summary>
    /// Asset group description
    /// </summary>
    utility::string_t getAssetGroupDescription() const;
    bool assetGroupDescriptionIsSet() const;
    void unsetAsset_group_description();

    void setAssetGroupDescription(const utility::string_t& value);

    /// <summary>
    /// Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
    /// </summary>
    std::vector<std::shared_ptr<AssetGroupType>>& getAssetGroupTypes();
    bool assetGroupTypesIsSet() const;
    void unsetAsset_group_types();

    void setAssetGroupTypes(const std::vector<std::shared_ptr<AssetGroupType>>& value);


protected:
    utility::string_t m_Asset_group_name;
    bool m_Asset_group_nameIsSet;
    utility::string_t m_Asset_group_description;
    bool m_Asset_group_descriptionIsSet;
    std::vector<std::shared_ptr<AssetGroupType>> m_Asset_group_types;
    bool m_Asset_group_typesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CreateAssetGroupBody_H_ */
