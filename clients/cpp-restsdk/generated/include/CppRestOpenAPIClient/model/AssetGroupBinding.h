/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AssetGroupBinding.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AssetGroupBinding_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AssetGroupBinding_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>
#include "CppRestOpenAPIClient/model/BusinessAccessUserSummary.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class BusinessAccessUserSummary;


/// <summary>
/// 
/// </summary>
class  AssetGroupBinding
    : public ModelBase
{
public:
    AssetGroupBinding();
    virtual ~AssetGroupBinding();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AssetGroupBinding members

    /// <summary>
    /// Asset Group ID.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// Asset Group name
    /// </summary>
    utility::string_t getAssetGroupName() const;
    bool assetGroupNameIsSet() const;
    void unsetAsset_group_name();

    void setAssetGroupName(const utility::string_t& value);

    /// <summary>
    /// Asset group description
    /// </summary>
    utility::string_t getAssetGroupDescription() const;
    bool assetGroupDescriptionIsSet() const;
    void unsetAsset_group_description();

    void setAssetGroupDescription(const utility::string_t& value);

    /// <summary>
    /// Asset group types
    /// </summary>
    std::vector<utility::string_t>& getAssetGroupTypes();
    bool assetGroupTypesIsSet() const;
    void unsetAsset_group_types();

    void setAssetGroupTypes(const std::vector<utility::string_t>& value);

    /// <summary>
    /// A list of ad account IDs under the asset group
    /// </summary>
    std::vector<utility::string_t>& getAdAccountsIds();
    bool adAccountsIdsIsSet() const;
    void unsetAd_accounts_ids();

    void setAdAccountsIds(const std::vector<utility::string_t>& value);

    /// <summary>
    /// A list of profile IDs under asset group
    /// </summary>
    std::vector<utility::string_t>& getProfilesIds();
    bool profilesIdsIsSet() const;
    void unsetProfiles_ids();

    void setProfilesIds(const std::vector<utility::string_t>& value);

    /// <summary>
    /// The creation time of the asset group
    /// </summary>
    int32_t getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetCreated_time();

    void setCreatedTime(int32_t value);

    /// <summary>
    /// The last update time of the asset group
    /// </summary>
    int32_t getUpdatedTime() const;
    bool updatedTimeIsSet() const;
    void unsetUpdated_time();

    void setUpdatedTime(int32_t value);

    /// <summary>
    /// The data of the business that owns the asset group.
    /// </summary>
    std::shared_ptr<BusinessAccessUserSummary> getOwner() const;
    bool ownerIsSet() const;
    void unsetOwner();

    void setOwner(const std::shared_ptr<BusinessAccessUserSummary>& value);

    /// <summary>
    /// The data of the user that created the asset group.
    /// </summary>
    std::shared_ptr<BusinessAccessUserSummary> getCreatedBy() const;
    bool createdByIsSet() const;
    void unsetCreated_by();

    void setCreatedBy(const std::shared_ptr<BusinessAccessUserSummary>& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Asset_group_name;
    bool m_Asset_group_nameIsSet;
    utility::string_t m_Asset_group_description;
    bool m_Asset_group_descriptionIsSet;
    std::vector<utility::string_t> m_Asset_group_types;
    bool m_Asset_group_typesIsSet;
    std::vector<utility::string_t> m_Ad_accounts_ids;
    bool m_Ad_accounts_idsIsSet;
    std::vector<utility::string_t> m_Profiles_ids;
    bool m_Profiles_idsIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
    int32_t m_Updated_time;
    bool m_Updated_timeIsSet;
    std::shared_ptr<BusinessAccessUserSummary> m_Owner;
    bool m_OwnerIsSet;
    std::shared_ptr<BusinessAccessUserSummary> m_Created_by;
    bool m_Created_byIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AssetGroupBinding_H_ */
