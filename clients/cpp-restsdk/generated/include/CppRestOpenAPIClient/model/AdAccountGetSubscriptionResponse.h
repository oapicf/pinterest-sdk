/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdAccountGetSubscriptionResponse.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AdAccountGetSubscriptionResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AdAccountGetSubscriptionResponse_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  AdAccountGetSubscriptionResponse
    : public ModelBase
{
public:
    AdAccountGetSubscriptionResponse();
    virtual ~AdAccountGetSubscriptionResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AdAccountGetSubscriptionResponse members

    /// <summary>
    /// Lead form ID.
    /// </summary>
    utility::string_t getLeadFormId() const;
    bool leadFormIdIsSet() const;
    void unsetLead_form_id();

    void setLeadFormId(const utility::string_t& value);

    /// <summary>
    /// Standard HTTPS webhook URL.
    /// </summary>
    utility::string_t getWebhookUrl() const;
    bool webhookUrlIsSet() const;
    void unsetWebhook_url();

    void setWebhookUrl(const utility::string_t& value);

    /// <summary>
    /// Subscription ID.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// User account used to subscribe lead data.
    /// </summary>
    utility::string_t getUserAccountId() const;
    bool userAccountIdIsSet() const;
    void unsetUser_account_id();

    void setUserAccountId(const utility::string_t& value);

    /// <summary>
    /// The Ad Account ID that this lead form belongs to.
    /// </summary>
    utility::string_t getAdAccountId() const;
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();

    void setAdAccountId(const utility::string_t& value);

    /// <summary>
    /// API version.
    /// </summary>
    utility::string_t getApiVersion() const;
    bool apiVersionIsSet() const;
    void unsetApi_version();

    void setApiVersion(const utility::string_t& value);

    /// <summary>
    /// Base64 encoded key for client to decrypt lead data.
    /// </summary>
    utility::string_t getCryptographicKey() const;
    bool cryptographicKeyIsSet() const;
    void unsetCryptographic_key();

    void setCryptographicKey(const utility::string_t& value);

    /// <summary>
    /// Lead data encryption algorithm.
    /// </summary>
    utility::string_t getCryptographicAlgorithm() const;
    bool cryptographicAlgorithmIsSet() const;
    void unsetCryptographic_algorithm();

    void setCryptographicAlgorithm(const utility::string_t& value);

    /// <summary>
    /// Lead form creation time. Unix timestamp in milliseconds.
    /// </summary>
    int32_t getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetCreated_time();

    void setCreatedTime(int32_t value);


protected:
    utility::string_t m_Lead_form_id;
    bool m_Lead_form_idIsSet;
    utility::string_t m_Webhook_url;
    bool m_Webhook_urlIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_User_account_id;
    bool m_User_account_idIsSet;
    utility::string_t m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    utility::string_t m_Api_version;
    bool m_Api_versionIsSet;
    utility::string_t m_Cryptographic_key;
    bool m_Cryptographic_keyIsSet;
    utility::string_t m_Cryptographic_algorithm;
    bool m_Cryptographic_algorithmIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AdAccountGetSubscriptionResponse_H_ */
