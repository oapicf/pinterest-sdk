/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AppTypeMultipliers.h
 *
 * This represents a mapping from app type targeting criteria to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified app type in &#x60;MAX_BID&#x60; ad groups in &#x60;CATALOG_SALES&#x60; campaigns. All app type multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AppTypeMultipliers_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AppTypeMultipliers_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <map>
#include "CppRestOpenAPIClient/model/TargetingSpecAppType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// This represents a mapping from app type targeting criteria to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified app type in &#x60;MAX_BID&#x60; ad groups in &#x60;CATALOG_SALES&#x60; campaigns. All app type multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
/// </summary>
class  AppTypeMultipliers
    : public ModelBase
{
public:
    AppTypeMultipliers();
    virtual ~AppTypeMultipliers();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AppTypeMultipliers members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TargetingSpecAppType> getAPPTYPE() const;
    bool aPPTYPEIsSet() const;
    void unsetAPP_TYPE();

    void setAPPTYPE(const std::shared_ptr<TargetingSpecAppType>& value);


protected:
    std::shared_ptr<TargetingSpecAppType> m_APP_TYPE;
    bool m_APP_TYPEIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AppTypeMultipliers_H_ */
