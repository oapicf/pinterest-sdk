/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserBusinessRoleBinding.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UserBusinessRoleBinding_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UserBusinessRoleBinding_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/BusinessMemberAssetsSummary.h"
#include <cpprest/details/basic_types.h>
#include <vector>
#include "CppRestOpenAPIClient/model/BusinessAccessUserSummary.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class BusinessMemberAssetsSummary;
class BusinessAccessUserSummary;


/// <summary>
/// 
/// </summary>
class  UserBusinessRoleBinding
    : public ModelBase
{
public:
    UserBusinessRoleBinding();
    virtual ~UserBusinessRoleBinding();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UserBusinessRoleBinding members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BusinessMemberAssetsSummary> getAssetsSummary() const;
    bool assetsSummaryIsSet() const;
    void unsetAssets_summary();

    void setAssetsSummary(const std::shared_ptr<BusinessMemberAssetsSummary>& value);

    /// <summary>
    /// The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getBusinessRoles();
    bool businessRolesIsSet() const;
    void unsetBusiness_roles();

    void setBusinessRoles(const std::vector<std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// Metadata for the business that created the business relationship.
    /// </summary>
    std::shared_ptr<BusinessAccessUserSummary> getCreatedByBusiness() const;
    bool createdByBusinessIsSet() const;
    void unsetCreated_by_business();

    void setCreatedByBusiness(const std::shared_ptr<BusinessAccessUserSummary>& value);

    /// <summary>
    /// Metadata for the user that created the business relationship.
    /// </summary>
    std::shared_ptr<BusinessAccessUserSummary> getCreatedByUser() const;
    bool createdByUserIsSet() const;
    void unsetCreated_by_user();

    void setCreatedByUser(const std::shared_ptr<BusinessAccessUserSummary>& value);

    /// <summary>
    /// The time the business relationship was created. Returned in milliseconds.
    /// </summary>
    int32_t getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetCreated_time();

    void setCreatedTime(int32_t value);

    /// <summary>
    /// Unique identifier of the business member/business partner/employer.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// This field is only relevant when business_role&#x3D;\&quot;PARTNER\&quot;. &lt;br&gt;If is_shared_partner&#x3D;FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. &lt;br&gt;If is_shared_partner&#x3D;TRUE, you can access the partner&#39;s business asset. If assets_summary is not empty, the assets listed are the partner&#39;s business assets you have access to.
    /// </summary>
    bool isIsSharedPartner() const;
    bool isSharedPartnerIsSet() const;
    void unsetIs_shared_partner();

    void setIsSharedPartner(bool value);

    /// <summary>
    /// Metadata for the business member/business partner/employer.
    /// </summary>
    std::shared_ptr<BusinessAccessUserSummary> getUser() const;
    bool userIsSet() const;
    void unsetUser();

    void setUser(const std::shared_ptr<BusinessAccessUserSummary>& value);


protected:
    std::shared_ptr<BusinessMemberAssetsSummary> m_Assets_summary;
    bool m_Assets_summaryIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_Business_roles;
    bool m_Business_rolesIsSet;
    std::shared_ptr<BusinessAccessUserSummary> m_Created_by_business;
    bool m_Created_by_businessIsSet;
    std::shared_ptr<BusinessAccessUserSummary> m_Created_by_user;
    bool m_Created_by_userIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    bool m_Is_shared_partner;
    bool m_Is_shared_partnerIsSet;
    std::shared_ptr<BusinessAccessUserSummary> m_User;
    bool m_UserIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UserBusinessRoleBinding_H_ */
