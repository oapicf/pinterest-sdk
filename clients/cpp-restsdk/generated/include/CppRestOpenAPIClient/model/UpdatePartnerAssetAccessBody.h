/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpdatePartnerAssetAccessBody.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UpdatePartnerAssetAccessBody_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UpdatePartnerAssetAccessBody_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/UpdatePartnerAssetAccessBody_accesses_inner.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class UpdatePartnerAssetAccessBody_accesses_inner;


/// <summary>
/// 
/// </summary>
class  UpdatePartnerAssetAccessBody
    : public ModelBase
{
public:
    UpdatePartnerAssetAccessBody();
    virtual ~UpdatePartnerAssetAccessBody();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UpdatePartnerAssetAccessBody members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<UpdatePartnerAssetAccessBody_accesses_inner>>& getAccesses();
    bool accessesIsSet() const;
    void unsetAccesses();

    void setAccesses(const std::vector<std::shared_ptr<UpdatePartnerAssetAccessBody_accesses_inner>>& value);


protected:
    std::vector<std::shared_ptr<UpdatePartnerAssetAccessBody_accesses_inner>> m_Accesses;
    bool m_AccessesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UpdatePartnerAssetAccessBody_H_ */
