/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsItemValidationWarnings.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsItemValidationWarnings_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsItemValidationWarnings_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CatalogsItemValidationDetails.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CatalogsItemValidationDetails;


/// <summary>
/// 
/// </summary>
class  CatalogsItemValidationWarnings
    : public ModelBase
{
public:
    CatalogsItemValidationWarnings();
    virtual ~CatalogsItemValidationWarnings();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsItemValidationWarnings members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getADLINKFORMATWARNING() const;
    bool aDLINKFORMATWARNINGIsSet() const;
    void unsetAD_LINK_FORMAT_WARNING();

    void setADLINKFORMATWARNING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getADLINKSAMEASLINK() const;
    bool aDLINKSAMEASLINKIsSet() const;
    void unsetAD_LINK_SAME_AS_LINK();

    void setADLINKSAMEASLINK(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getADDITIONALIMAGELINKLENGTHTOOLONG() const;
    bool aDDITIONALIMAGELINKLENGTHTOOLONGIsSet() const;
    void unsetADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG();

    void setADDITIONALIMAGELINKLENGTHTOOLONG(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getADDITIONALIMAGELINKWARNING() const;
    bool aDDITIONALIMAGELINKWARNINGIsSet() const;
    void unsetADDITIONAL_IMAGE_LINK_WARNING();

    void setADDITIONALIMAGELINKWARNING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getADWORDSFORMATWARNING() const;
    bool aDWORDSFORMATWARNINGIsSet() const;
    void unsetADWORDS_FORMAT_WARNING();

    void setADWORDSFORMATWARNING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getADWORDSSAMEASLINK() const;
    bool aDWORDSSAMEASLINKIsSet() const;
    void unsetADWORDS_SAME_AS_LINK();

    void setADWORDSSAMEASLINK(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getAGEGROUPINVALID() const;
    bool aGEGROUPINVALIDIsSet() const;
    void unsetAGE_GROUP_INVALID();

    void setAGEGROUPINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSIZESYSTEMINVALID() const;
    bool sIZESYSTEMINVALIDIsSet() const;
    void unsetSIZE_SYSTEM_INVALID();

    void setSIZESYSTEMINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getANDROIDDEEPLINKINVALID() const;
    bool aNDROIDDEEPLINKINVALIDIsSet() const;
    void unsetANDROID_DEEP_LINK_INVALID();

    void setANDROIDDEEPLINKINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getAVAILABILITYDATEINVALID() const;
    bool aVAILABILITYDATEINVALIDIsSet() const;
    void unsetAVAILABILITY_DATE_INVALID();

    void setAVAILABILITYDATEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getCOUNTRYDOESNOTMAPTOCURRENCY() const;
    bool cOUNTRYDOESNOTMAPTOCURRENCYIsSet() const;
    void unsetCOUNTRY_DOES_NOT_MAP_TO_CURRENCY();

    void setCOUNTRYDOESNOTMAPTOCURRENCY(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getCUSTOMLABELLENGTHTOOLONG() const;
    bool cUSTOMLABELLENGTHTOOLONGIsSet() const;
    void unsetCUSTOM_LABEL_LENGTH_TOO_LONG();

    void setCUSTOMLABELLENGTHTOOLONG(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getDESCRIPTIONLENGTHTOOLONG() const;
    bool dESCRIPTIONLENGTHTOOLONGIsSet() const;
    void unsetDESCRIPTION_LENGTH_TOO_LONG();

    void setDESCRIPTIONLENGTHTOOLONG(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getEXPIRATIONDATEINVALID() const;
    bool eXPIRATIONDATEINVALIDIsSet() const;
    void unsetEXPIRATION_DATE_INVALID();

    void setEXPIRATIONDATEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getGENDERINVALID() const;
    bool gENDERINVALIDIsSet() const;
    void unsetGENDER_INVALID();

    void setGENDERINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getGTININVALID() const;
    bool gTININVALIDIsSet() const;
    void unsetGTIN_INVALID();

    void setGTININVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getIMAGELINKWARNING() const;
    bool iMAGELINKWARNINGIsSet() const;
    void unsetIMAGE_LINK_WARNING();

    void setIMAGELINKWARNING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getIOSDEEPLINKINVALID() const;
    bool iOSDEEPLINKINVALIDIsSet() const;
    void unsetIOS_DEEP_LINK_INVALID();

    void setIOSDEEPLINKINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getISBUNDLEINVALID() const;
    bool iSBUNDLEINVALIDIsSet() const;
    void unsetIS_BUNDLE_INVALID();

    void setISBUNDLEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getITEMADDITIONALIMAGEDOWNLOADFAILURE() const;
    bool iTEMADDITIONALIMAGEDOWNLOADFAILUREIsSet() const;
    void unsetITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE();

    void setITEMADDITIONALIMAGEDOWNLOADFAILURE(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getLINKFORMATWARNING() const;
    bool lINKFORMATWARNINGIsSet() const;
    void unsetLINK_FORMAT_WARNING();

    void setLINKFORMATWARNING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getMINADPRICEINVALID() const;
    bool mINADPRICEINVALIDIsSet() const;
    void unsetMIN_AD_PRICE_INVALID();

    void setMINADPRICEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getMPNINVALID() const;
    bool mPNINVALIDIsSet() const;
    void unsetMPN_INVALID();

    void setMPNINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getMULTIPACKINVALID() const;
    bool mULTIPACKINVALIDIsSet() const;
    void unsetMULTIPACK_INVALID();

    void setMULTIPACKINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getOPTIONALCONDITIONINVALID() const;
    bool oPTIONALCONDITIONINVALIDIsSet() const;
    void unsetOPTIONAL_CONDITION_INVALID();

    void setOPTIONALCONDITIONINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getOPTIONALCONDITIONMISSING() const;
    bool oPTIONALCONDITIONMISSINGIsSet() const;
    void unsetOPTIONAL_CONDITION_MISSING();

    void setOPTIONALCONDITIONMISSING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getOPTIONALPRODUCTCATEGORYINVALID() const;
    bool oPTIONALPRODUCTCATEGORYINVALIDIsSet() const;
    void unsetOPTIONAL_PRODUCT_CATEGORY_INVALID();

    void setOPTIONALPRODUCTCATEGORYINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getOPTIONALPRODUCTCATEGORYMISSING() const;
    bool oPTIONALPRODUCTCATEGORYMISSINGIsSet() const;
    void unsetOPTIONAL_PRODUCT_CATEGORY_MISSING();

    void setOPTIONALPRODUCTCATEGORYMISSING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getPRODUCTCATEGORYDEPTHWARNING() const;
    bool pRODUCTCATEGORYDEPTHWARNINGIsSet() const;
    void unsetPRODUCT_CATEGORY_DEPTH_WARNING();

    void setPRODUCTCATEGORYDEPTHWARNING(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getPRODUCTTYPELENGTHTOOLONG() const;
    bool pRODUCTTYPELENGTHTOOLONGIsSet() const;
    void unsetPRODUCT_TYPE_LENGTH_TOO_LONG();

    void setPRODUCTTYPELENGTHTOOLONG(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSALESPRICEINVALID() const;
    bool sALESPRICEINVALIDIsSet() const;
    void unsetSALES_PRICE_INVALID();

    void setSALESPRICEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSALESPRICETOOLOW() const;
    bool sALESPRICETOOLOWIsSet() const;
    void unsetSALES_PRICE_TOO_LOW();

    void setSALESPRICETOOLOW(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSALESPRICETOOHIGH() const;
    bool sALESPRICETOOHIGHIsSet() const;
    void unsetSALES_PRICE_TOO_HIGH();

    void setSALESPRICETOOHIGH(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSALEDATEINVALID() const;
    bool sALEDATEINVALIDIsSet() const;
    void unsetSALE_DATE_INVALID();

    void setSALEDATEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSHIPPINGINVALID() const;
    bool sHIPPINGINVALIDIsSet() const;
    void unsetSHIPPING_INVALID();

    void setSHIPPINGINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSHIPPINGHEIGHTINVALID() const;
    bool sHIPPINGHEIGHTINVALIDIsSet() const;
    void unsetSHIPPING_HEIGHT_INVALID();

    void setSHIPPINGHEIGHTINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSHIPPINGWEIGHTINVALID() const;
    bool sHIPPINGWEIGHTINVALIDIsSet() const;
    void unsetSHIPPING_WEIGHT_INVALID();

    void setSHIPPINGWEIGHTINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSHIPPINGWIDTHINVALID() const;
    bool sHIPPINGWIDTHINVALIDIsSet() const;
    void unsetSHIPPING_WIDTH_INVALID();

    void setSHIPPINGWIDTHINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getSIZETYPEINVALID() const;
    bool sIZETYPEINVALIDIsSet() const;
    void unsetSIZE_TYPE_INVALID();

    void setSIZETYPEINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getTAXINVALID() const;
    bool tAXINVALIDIsSet() const;
    void unsetTAX_INVALID();

    void setTAXINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getTITLELENGTHTOOLONG() const;
    bool tITLELENGTHTOOLONGIsSet() const;
    void unsetTITLE_LENGTH_TOO_LONG();

    void setTITLELENGTHTOOLONG(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getTOOMANYADDITIONALIMAGELINKS() const;
    bool tOOMANYADDITIONALIMAGELINKSIsSet() const;
    void unsetTOO_MANY_ADDITIONAL_IMAGE_LINKS();

    void setTOOMANYADDITIONALIMAGELINKS(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getUTMSOURCEAUTOCORRECTED() const;
    bool uTMSOURCEAUTOCORRECTEDIsSet() const;
    void unsetUTM_SOURCE_AUTO_CORRECTED();

    void setUTMSOURCEAUTOCORRECTED(const std::shared_ptr<CatalogsItemValidationDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsItemValidationDetails> getWEIGHTUNITINVALID() const;
    bool wEIGHTUNITINVALIDIsSet() const;
    void unsetWEIGHT_UNIT_INVALID();

    void setWEIGHTUNITINVALID(const std::shared_ptr<CatalogsItemValidationDetails>& value);


protected:
    std::shared_ptr<CatalogsItemValidationDetails> m_AD_LINK_FORMAT_WARNING;
    bool m_AD_LINK_FORMAT_WARNINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_AD_LINK_SAME_AS_LINK;
    bool m_AD_LINK_SAME_AS_LINKIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG;
    bool m_ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_ADDITIONAL_IMAGE_LINK_WARNING;
    bool m_ADDITIONAL_IMAGE_LINK_WARNINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_ADWORDS_FORMAT_WARNING;
    bool m_ADWORDS_FORMAT_WARNINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_ADWORDS_SAME_AS_LINK;
    bool m_ADWORDS_SAME_AS_LINKIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_AGE_GROUP_INVALID;
    bool m_AGE_GROUP_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SIZE_SYSTEM_INVALID;
    bool m_SIZE_SYSTEM_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_ANDROID_DEEP_LINK_INVALID;
    bool m_ANDROID_DEEP_LINK_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_AVAILABILITY_DATE_INVALID;
    bool m_AVAILABILITY_DATE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_COUNTRY_DOES_NOT_MAP_TO_CURRENCY;
    bool m_COUNTRY_DOES_NOT_MAP_TO_CURRENCYIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_CUSTOM_LABEL_LENGTH_TOO_LONG;
    bool m_CUSTOM_LABEL_LENGTH_TOO_LONGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_DESCRIPTION_LENGTH_TOO_LONG;
    bool m_DESCRIPTION_LENGTH_TOO_LONGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_EXPIRATION_DATE_INVALID;
    bool m_EXPIRATION_DATE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_GENDER_INVALID;
    bool m_GENDER_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_GTIN_INVALID;
    bool m_GTIN_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_IMAGE_LINK_WARNING;
    bool m_IMAGE_LINK_WARNINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_IOS_DEEP_LINK_INVALID;
    bool m_IOS_DEEP_LINK_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_IS_BUNDLE_INVALID;
    bool m_IS_BUNDLE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE;
    bool m_ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILUREIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_LINK_FORMAT_WARNING;
    bool m_LINK_FORMAT_WARNINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_MIN_AD_PRICE_INVALID;
    bool m_MIN_AD_PRICE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_MPN_INVALID;
    bool m_MPN_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_MULTIPACK_INVALID;
    bool m_MULTIPACK_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_OPTIONAL_CONDITION_INVALID;
    bool m_OPTIONAL_CONDITION_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_OPTIONAL_CONDITION_MISSING;
    bool m_OPTIONAL_CONDITION_MISSINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_OPTIONAL_PRODUCT_CATEGORY_INVALID;
    bool m_OPTIONAL_PRODUCT_CATEGORY_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_OPTIONAL_PRODUCT_CATEGORY_MISSING;
    bool m_OPTIONAL_PRODUCT_CATEGORY_MISSINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_PRODUCT_CATEGORY_DEPTH_WARNING;
    bool m_PRODUCT_CATEGORY_DEPTH_WARNINGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_PRODUCT_TYPE_LENGTH_TOO_LONG;
    bool m_PRODUCT_TYPE_LENGTH_TOO_LONGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SALES_PRICE_INVALID;
    bool m_SALES_PRICE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SALES_PRICE_TOO_LOW;
    bool m_SALES_PRICE_TOO_LOWIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SALES_PRICE_TOO_HIGH;
    bool m_SALES_PRICE_TOO_HIGHIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SALE_DATE_INVALID;
    bool m_SALE_DATE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SHIPPING_INVALID;
    bool m_SHIPPING_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SHIPPING_HEIGHT_INVALID;
    bool m_SHIPPING_HEIGHT_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SHIPPING_WEIGHT_INVALID;
    bool m_SHIPPING_WEIGHT_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SHIPPING_WIDTH_INVALID;
    bool m_SHIPPING_WIDTH_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_SIZE_TYPE_INVALID;
    bool m_SIZE_TYPE_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_TAX_INVALID;
    bool m_TAX_INVALIDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_TITLE_LENGTH_TOO_LONG;
    bool m_TITLE_LENGTH_TOO_LONGIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_TOO_MANY_ADDITIONAL_IMAGE_LINKS;
    bool m_TOO_MANY_ADDITIONAL_IMAGE_LINKSIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_UTM_SOURCE_AUTO_CORRECTED;
    bool m_UTM_SOURCE_AUTO_CORRECTEDIsSet;
    std::shared_ptr<CatalogsItemValidationDetails> m_WEIGHT_UNIT_INVALID;
    bool m_WEIGHT_UNIT_INVALIDIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsItemValidationWarnings_H_ */
