/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BulkUpsertRequestCreate.h
 *
 * Request for creation of entities in bulk.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BulkUpsertRequestCreate_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BulkUpsertRequestCreate_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CampaignCreateRequest.h"
#include "CppRestOpenAPIClient/model/AdCreateRequest.h"
#include "CppRestOpenAPIClient/model/AdGroupCreateRequest.h"
#include "CppRestOpenAPIClient/model/KeywordsRequest.h"
#include <vector>
#include "CppRestOpenAPIClient/model/ProductGroupPromotionCreateRequest.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CampaignCreateRequest;
class AdGroupCreateRequest;
class AdCreateRequest;
class ProductGroupPromotionCreateRequest;
class KeywordsRequest;


/// <summary>
/// Request for creation of entities in bulk.
/// </summary>
class  BulkUpsertRequestCreate
    : public ModelBase
{
public:
    BulkUpsertRequestCreate();
    virtual ~BulkUpsertRequestCreate();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BulkUpsertRequestCreate members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<CampaignCreateRequest>>& getCampaigns();
    bool campaignsIsSet() const;
    void unsetCampaigns();

    void setCampaigns(const std::vector<std::shared_ptr<CampaignCreateRequest>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<AdGroupCreateRequest>>& getAdGroups();
    bool adGroupsIsSet() const;
    void unsetAd_groups();

    void setAdGroups(const std::vector<std::shared_ptr<AdGroupCreateRequest>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<AdCreateRequest>>& getAds();
    bool adsIsSet() const;
    void unsetAds();

    void setAds(const std::vector<std::shared_ptr<AdCreateRequest>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ProductGroupPromotionCreateRequest>>& getProductGroups();
    bool productGroupsIsSet() const;
    void unsetProduct_groups();

    void setProductGroups(const std::vector<std::shared_ptr<ProductGroupPromotionCreateRequest>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<KeywordsRequest>>& getKeywords();
    bool keywordsIsSet() const;
    void unsetKeywords();

    void setKeywords(const std::vector<std::shared_ptr<KeywordsRequest>>& value);


protected:
    std::vector<std::shared_ptr<CampaignCreateRequest>> m_Campaigns;
    bool m_CampaignsIsSet;
    std::vector<std::shared_ptr<AdGroupCreateRequest>> m_Ad_groups;
    bool m_Ad_groupsIsSet;
    std::vector<std::shared_ptr<AdCreateRequest>> m_Ads;
    bool m_AdsIsSet;
    std::vector<std::shared_ptr<ProductGroupPromotionCreateRequest>> m_Product_groups;
    bool m_Product_groupsIsSet;
    std::vector<std::shared_ptr<KeywordsRequest>> m_Keywords;
    bool m_KeywordsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BulkUpsertRequestCreate_H_ */
