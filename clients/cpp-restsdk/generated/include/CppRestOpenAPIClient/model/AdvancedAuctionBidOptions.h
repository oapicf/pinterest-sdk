/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdvancedAuctionBidOptions.h
 *
 * Object describing a retail catalog item&#39;s bid options (bid price and bid multipliers).
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AdvancedAuctionBidOptions_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AdvancedAuctionBidOptions_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/AppTypeMultipliers.h"
#include "CppRestOpenAPIClient/model/PlacementMultipliers.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Object describing a retail catalog item&#39;s bid options (bid price and bid multipliers).
/// </summary>
class  AdvancedAuctionBidOptions
    : public ModelBase
{
public:
    AdvancedAuctionBidOptions();
    virtual ~AdvancedAuctionBidOptions();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AdvancedAuctionBidOptions members

    /// <summary>
    /// Bid price in micro currency. A value of 0 will stop distribution for this item in &#x60;MAX_BID&#x60; ad groups in &#x60;CATALOG_SALES&#x60; campaigns. A value of &#x60;null&#x60; will fallback to the ad group&#39;s &#x60;bid_in_micro_currency&#x60;.
    /// </summary>
    int64_t getBidInMicroCurrency() const;
    bool bidInMicroCurrencyIsSet() const;
    void unsetBid_in_micro_currency();

    void setBidInMicroCurrency(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AppTypeMultipliers> getAppTypeMultipliers() const;
    bool appTypeMultipliersIsSet() const;
    void unsetApp_type_multipliers();

    void setAppTypeMultipliers(const std::shared_ptr<AppTypeMultipliers>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PlacementMultipliers> getPlacementMultipliers() const;
    bool placementMultipliersIsSet() const;
    void unsetPlacement_multipliers();

    void setPlacementMultipliers(const std::shared_ptr<PlacementMultipliers>& value);


protected:
    int64_t m_Bid_in_micro_currency;
    bool m_Bid_in_micro_currencyIsSet;
    std::shared_ptr<AppTypeMultipliers> m_App_type_multipliers;
    bool m_App_type_multipliersIsSet;
    std::shared_ptr<PlacementMultipliers> m_Placement_multipliers;
    bool m_Placement_multipliersIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AdvancedAuctionBidOptions_H_ */
