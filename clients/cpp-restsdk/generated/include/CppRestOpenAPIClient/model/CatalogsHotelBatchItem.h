/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsHotelBatchItem.h
 *
 * Hotel batch item
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelBatchItem_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelBatchItem_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CatalogsUpdateHotelItem.h"
#include "CppRestOpenAPIClient/model/CatalogsCreateHotelItem.h"
#include "CppRestOpenAPIClient/model/CatalogsUpdatableHotelAttributes.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/CatalogsUpsertHotelItem.h"
#include "CppRestOpenAPIClient/model/CatalogsDeleteHotelItem.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CatalogsUpdatableHotelAttributes;


/// <summary>
/// Hotel batch item
/// </summary>
class  CatalogsHotelBatchItem
    : public ModelBase
{
public:
    CatalogsHotelBatchItem();
    virtual ~CatalogsHotelBatchItem();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsHotelBatchItem members

    /// <summary>
    /// The catalog hotel id in the merchant namespace
    /// </summary>
    utility::string_t getHotelId() const;
    bool hotelIdIsSet() const;
    void unsetHotel_id();

    void setHotelId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOperation() const;
    bool operationIsSet() const;
    void unsetOperation();

    void setOperation(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsUpdatableHotelAttributes> getAttributes() const;
    bool attributesIsSet() const;
    void unsetAttributes();

    void setAttributes(const std::shared_ptr<CatalogsUpdatableHotelAttributes>& value);


protected:
    utility::string_t m_Hotel_id;
    bool m_Hotel_idIsSet;
    utility::string_t m_Operation;
    bool m_OperationIsSet;
    std::shared_ptr<CatalogsUpdatableHotelAttributes> m_Attributes;
    bool m_AttributesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsHotelBatchItem_H_ */
