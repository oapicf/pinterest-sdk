/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsReportFeedIngestionFilter.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsReportFeedIngestionFilter_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsReportFeedIngestionFilter_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  CatalogsReportFeedIngestionFilter
    : public ModelBase
{
public:
    CatalogsReportFeedIngestionFilter();
    virtual ~CatalogsReportFeedIngestionFilter();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsReportFeedIngestionFilter members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getReportType() const;
    bool reportTypeIsSet() const;
    void unsetReport_type();

    void setReportType(const utility::string_t& value);

    /// <summary>
    /// ID of the feed entity.
    /// </summary>
    utility::string_t getFeedId() const;
    bool feedIdIsSet() const;
    void unsetFeed_id();

    void setFeedId(const utility::string_t& value);

    /// <summary>
    /// Unique identifier of a feed processing result. It can be acquired from the \&quot;id\&quot; field of the \&quot;items\&quot; array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list). If not provided, default to most recent completed processing result.
    /// </summary>
    utility::string_t getProcessingResultId() const;
    bool processingResultIdIsSet() const;
    void unsetProcessing_result_id();

    void setProcessingResultId(const utility::string_t& value);


protected:
    utility::string_t m_Report_type;
    bool m_Report_typeIsSet;
    utility::string_t m_Feed_id;
    bool m_Feed_idIsSet;
    utility::string_t m_Processing_result_id;
    bool m_Processing_result_idIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsReportFeedIngestionFilter_H_ */
