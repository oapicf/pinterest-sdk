/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TargetingTemplateKeyword.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_TargetingTemplateKeyword_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_TargetingTemplateKeyword_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/MatchType.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  TargetingTemplateKeyword
    : public ModelBase
{
public:
    TargetingTemplateKeyword();
    virtual ~TargetingTemplateKeyword();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TargetingTemplateKeyword members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<MatchType> getMatchType() const;
    bool matchTypeIsSet() const;
    void unsetMatch_type();

    void setMatchType(const std::shared_ptr<MatchType>& value);

    /// <summary>
    /// The keyword targeting (120 chars max).
    /// </summary>
    utility::string_t getValue() const;
    bool valueIsSet() const;
    void unsetValue();

    void setValue(const utility::string_t& value);


protected:
    std::shared_ptr<MatchType> m_Match_type;
    bool m_Match_typeIsSet;
    utility::string_t m_Value;
    bool m_ValueIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_TargetingTemplateKeyword_H_ */
