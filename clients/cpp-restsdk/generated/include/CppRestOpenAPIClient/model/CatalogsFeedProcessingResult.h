/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedProcessingResult.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedProcessingResult_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedProcessingResult_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CatalogsFeedProcessingStatus.h"
#include "CppRestOpenAPIClient/model/CatalogsFeedProductCounts.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/CatalogsFeedValidationDetails.h"
#include "CppRestOpenAPIClient/model/CatalogsFeedIngestionDetails.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CatalogsFeedIngestionDetails;
class CatalogsFeedProductCounts;
class CatalogsFeedValidationDetails;


/// <summary>
/// 
/// </summary>
class  CatalogsFeedProcessingResult
    : public ModelBase
{
public:
    CatalogsFeedProcessingResult();
    virtual ~CatalogsFeedProcessingResult();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CatalogsFeedProcessingResult members

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();

    void setCreatedAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getUpdatedAt() const;
    bool updatedAtIsSet() const;
    void unsetUpdated_at();

    void setUpdatedAt(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsFeedIngestionDetails> getIngestionDetails() const;
    bool ingestionDetailsIsSet() const;
    void unsetIngestion_details();

    void setIngestionDetails(const std::shared_ptr<CatalogsFeedIngestionDetails>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsFeedProcessingStatus> getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const std::shared_ptr<CatalogsFeedProcessingStatus>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsFeedProductCounts> getProductCounts() const;
    bool productCountsIsSet() const;
    void unsetProduct_counts();

    void setProductCounts(const std::shared_ptr<CatalogsFeedProductCounts>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CatalogsFeedValidationDetails> getValidationDetails() const;
    bool validationDetailsIsSet() const;
    void unsetValidation_details();

    void setValidationDetails(const std::shared_ptr<CatalogsFeedValidationDetails>& value);


protected:
    utility::datetime m_Created_at;
    bool m_Created_atIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::datetime m_Updated_at;
    bool m_Updated_atIsSet;
    std::shared_ptr<CatalogsFeedIngestionDetails> m_Ingestion_details;
    bool m_Ingestion_detailsIsSet;
    std::shared_ptr<CatalogsFeedProcessingStatus> m_Status;
    bool m_StatusIsSet;
    std::shared_ptr<CatalogsFeedProductCounts> m_Product_counts;
    bool m_Product_countsIsSet;
    std::shared_ptr<CatalogsFeedValidationDetails> m_Validation_details;
    bool m_Validation_detailsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CatalogsFeedProcessingResult_H_ */
