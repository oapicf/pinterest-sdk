/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserWebsiteVerificationCode.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UserWebsiteVerificationCode_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UserWebsiteVerificationCode_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  UserWebsiteVerificationCode
    : public ModelBase
{
public:
    UserWebsiteVerificationCode();
    virtual ~UserWebsiteVerificationCode();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UserWebsiteVerificationCode members

    /// <summary>
    /// Code to check against the user claiming the website
    /// </summary>
    utility::string_t getVerificationCode() const;
    bool verificationCodeIsSet() const;
    void unsetVerification_code();

    void setVerificationCode(const utility::string_t& value);

    /// <summary>
    /// DNS TXT record to check against for the website to be claimed
    /// </summary>
    utility::string_t getDnsTxtRecord() const;
    bool dnsTxtRecordIsSet() const;
    void unsetDns_txt_record();

    void setDnsTxtRecord(const utility::string_t& value);

    /// <summary>
    /// Metatag the verification process searchs for the website to be claimed
    /// </summary>
    utility::string_t getMetatag() const;
    bool metatagIsSet() const;
    void unsetMetatag();

    void setMetatag(const utility::string_t& value);

    /// <summary>
    /// File expected to find on the website being claimed
    /// </summary>
    utility::string_t getFilename() const;
    bool filenameIsSet() const;
    void unsetFilename();

    void setFilename(const utility::string_t& value);

    /// <summary>
    /// A full html file to upload to the website in order for it to be claimed
    /// </summary>
    utility::string_t getFileContent() const;
    bool fileContentIsSet() const;
    void unsetFile_content();

    void setFileContent(const utility::string_t& value);


protected:
    utility::string_t m_Verification_code;
    bool m_Verification_codeIsSet;
    utility::string_t m_Dns_txt_record;
    bool m_Dns_txt_recordIsSet;
    utility::string_t m_Metatag;
    bool m_MetatagIsSet;
    utility::string_t m_Filename;
    bool m_FilenameIsSet;
    utility::string_t m_File_content;
    bool m_File_contentIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UserWebsiteVerificationCode_H_ */
