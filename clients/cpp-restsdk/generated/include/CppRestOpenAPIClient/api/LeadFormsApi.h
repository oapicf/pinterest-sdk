/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LeadFormsApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_LeadFormsApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_LeadFormsApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/Error.h"
#include "CppRestOpenAPIClient/model/LeadFormArrayResponse.h"
#include "CppRestOpenAPIClient/model/LeadFormCreateRequest.h"
#include "CppRestOpenAPIClient/model/LeadFormResponse.h"
#include "CppRestOpenAPIClient/model/LeadFormTestRequest.h"
#include "CppRestOpenAPIClient/model/LeadFormTestResponse.h"
#include "CppRestOpenAPIClient/model/LeadFormUpdateRequest.h"
#include "CppRestOpenAPIClient/model/Lead_forms_list_200_response.h"
#include <vector>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  LeadFormsApi 
{
public:

    explicit LeadFormsApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~LeadFormsApi();

    /// <summary>
    /// Create lead form test data
    /// </summary>
    /// <remarks>
    /// Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="leadFormId">Unique identifier of a lead form.</param>
    /// <param name="leadFormTestRequest">Subscription to create.</param>
    pplx::task<std::shared_ptr<LeadFormTestResponse>> leadFormTest_create(
        utility::string_t adAccountId,
        utility::string_t leadFormId,
        std::shared_ptr<LeadFormTestRequest> leadFormTestRequest
    ) const;
    /// <summary>
    /// Get lead form by id
    /// </summary>
    /// <remarks>
    /// &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Gets a lead form given it&#39;s ID. It must also be associated with the provided ad account ID.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="leadFormId">Unique identifier of a lead form.</param>
    pplx::task<std::shared_ptr<LeadFormResponse>> leadForm_get(
        utility::string_t adAccountId,
        utility::string_t leadFormId
    ) const;
    /// <summary>
    /// Create lead forms
    /// </summary>
    /// <remarks>
    /// &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Create lead forms. Lead forms are used in lead ads and allow you to control what text appears on the lead form’ s description, questions and confirmation sections.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="leadFormCreateRequest">List of lead forms to create, size limit [1, 30].</param>
    pplx::task<std::shared_ptr<LeadFormArrayResponse>> leadForms_create(
        utility::string_t adAccountId,
        std::vector<std::shared_ptr<LeadFormCreateRequest>> leadFormCreateRequest
    ) const;
    /// <summary>
    /// List lead forms
    /// </summary>
    /// <remarks>
    /// &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  List lead forms associated with an ad account ID.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 0)</param>
    /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<Lead_forms_list_200_response>> leadForms_list(
        utility::string_t adAccountId,
        boost::optional<int32_t> pageSize,
        boost::optional<utility::string_t> order,
        boost::optional<utility::string_t> bookmark
    ) const;
    /// <summary>
    /// Update lead forms
    /// </summary>
    /// <remarks>
    /// &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Update lead forms. Lead ads help you reach people who are actively looking for, and interested in, your goods and services. The lead form can be associated with an ad to allow people to fill out the form.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="leadFormUpdateRequest">List of lead forms to update, size limit [1, 30].</param>
    pplx::task<std::shared_ptr<LeadFormArrayResponse>> leadForms_update(
        utility::string_t adAccountId,
        std::vector<std::shared_ptr<LeadFormUpdateRequest>> leadFormUpdateRequest
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_LeadFormsApi_H_ */

