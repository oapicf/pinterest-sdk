/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConversionTagsApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ConversionTagsApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ConversionTagsApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/ConversionEventResponse.h"
#include "CppRestOpenAPIClient/model/ConversionTagCreate.h"
#include "CppRestOpenAPIClient/model/ConversionTagListResponse.h"
#include "CppRestOpenAPIClient/model/ConversionTagResponse.h"
#include "CppRestOpenAPIClient/model/Error.h"
#include "CppRestOpenAPIClient/model/Page_visit_conversion_tags_get_200_response.h"
#include <map>
#include <vector>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ConversionTagsApi 
{
public:

    explicit ConversionTagsApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ConversionTagsApi();

    /// <summary>
    /// Create conversion tag
    /// </summary>
    /// <remarks>
    /// Create a conversion tag, also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest tag&lt;/a&gt;, with the option to enable enhanced match.&lt;p/&gt; The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account&#39;s ad on Pinterest. The advertiser needs to customize this tag to track conversions.&lt;p/&gt; For more information, see:&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot;&gt;Set up the Pinterest tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/\&quot;&gt;Pinterest Tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/#enhanced-match\&quot;&gt;Enhanced match&lt;/a&gt;
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="conversionTagCreate">Conversion Tag to create</param>
    pplx::task<std::shared_ptr<ConversionTagResponse>> conversionTags_create(
        utility::string_t adAccountId,
        std::shared_ptr<ConversionTagCreate> conversionTagCreate
    ) const;
    /// <summary>
    /// Get conversion tag
    /// </summary>
    /// <remarks>
    /// Get information about an existing conversion tag.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="conversionTagId">Id of the conversion tag.</param>
    pplx::task<std::shared_ptr<ConversionTagResponse>> conversionTags_get(
        utility::string_t adAccountId,
        utility::string_t conversionTagId
    ) const;
    /// <summary>
    /// Get conversion tags
    /// </summary>
    /// <remarks>
    /// List conversion tags associated with an ad account.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="filterDeleted">Filter out deleted tags. (optional, default to false)</param>
    pplx::task<std::shared_ptr<ConversionTagListResponse>> conversionTags_list(
        utility::string_t adAccountId,
        boost::optional<bool> filterDeleted
    ) const;
    /// <summary>
    /// Get Ocpm eligible conversion tags
    /// </summary>
    /// <remarks>
    /// Get Ocpm eligible conversion tag events for an ad account.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    pplx::task<std::map<utility::string_t, std::vector<std::shared_ptr<ConversionEventResponse>>>> ocpmEligibleConversionTags_get(
        utility::string_t adAccountId
    ) const;
    /// <summary>
    /// Get page visit conversion tags
    /// </summary>
    /// <remarks>
    /// Get all page visit conversion tag events for an ad account.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 0)</param>
    /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<Page_visit_conversion_tags_get_200_response>> pageVisitConversionTags_get(
        utility::string_t adAccountId,
        boost::optional<int32_t> pageSize,
        boost::optional<utility::string_t> order,
        boost::optional<utility::string_t> bookmark
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_ConversionTagsApi_H_ */

