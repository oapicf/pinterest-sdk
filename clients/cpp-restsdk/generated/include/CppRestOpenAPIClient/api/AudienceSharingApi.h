/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AudienceSharingApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_AudienceSharingApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_AudienceSharingApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/Ad_accounts_audiences_shared_accounts_list_200_response.h"
#include "CppRestOpenAPIClient/model/AudienceAccountType.h"
#include "CppRestOpenAPIClient/model/Audiences_list_200_response.h"
#include "CppRestOpenAPIClient/model/BusinessSharedAudience.h"
#include "CppRestOpenAPIClient/model/BusinessSharedAudienceResponse.h"
#include "CppRestOpenAPIClient/model/Error.h"
#include "CppRestOpenAPIClient/model/SharedAudience.h"
#include "CppRestOpenAPIClient/model/SharedAudienceResponse.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  AudienceSharingApi 
{
public:

    explicit AudienceSharingApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~AudienceSharingApi();

    /// <summary>
    /// List accounts with access to an audience owned by an ad account
    /// </summary>
    /// <remarks>
    /// List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="audienceId">Unique identifier of the audience to use to filter the results.</param>
    /// <param name="accountType">Filter accounts by account type.</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 0)</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<Ad_accounts_audiences_shared_accounts_list_200_response>> adAccountsAudiencesSharedAccounts_list(
        utility::string_t adAccountId,
        utility::string_t audienceId,
        std::shared_ptr<AudienceAccountType> accountType,
        boost::optional<int32_t> pageSize,
        boost::optional<utility::string_t> bookmark
    ) const;
    /// <summary>
    /// List accounts with access to an audience owned by a business
    /// </summary>
    /// <remarks>
    /// List all ad accounts and/or businesses that have access to a specific audience. The audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business. If the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.
    /// </remarks>
    /// <param name="businessId">Unique identifier of the requesting business.</param>
    /// <param name="audienceId">Unique identifier of the audience to use to filter the results.</param>
    /// <param name="accountType">Filter accounts by account type.</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 0)</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<Ad_accounts_audiences_shared_accounts_list_200_response>> businessAccountAudiencesSharedAccounts_list(
        utility::string_t businessId,
        utility::string_t audienceId,
        std::shared_ptr<AudienceAccountType> accountType,
        boost::optional<int32_t> pageSize,
        boost::optional<utility::string_t> bookmark
    ) const;
    /// <summary>
    /// List received audiences for a business
    /// </summary>
    /// <remarks>
    /// Get a list of received audiences for the given business.
    /// </remarks>
    /// <param name="businessId">Unique identifier of the requesting business.</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="order">The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 0)</param>
    pplx::task<std::shared_ptr<Audiences_list_200_response>> sharedAudiencesForBusiness_list(
        utility::string_t businessId,
        boost::optional<utility::string_t> bookmark,
        boost::optional<utility::string_t> order,
        boost::optional<int32_t> pageSize
    ) const;
    /// <summary>
    /// Update audience sharing between ad accounts
    /// </summary>
    /// <remarks>
    /// From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/create-and-manage-accounts&#39;&gt;Pinterest Business Hierarchy&lt;/a&gt; as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="sharedAudience"></param>
    pplx::task<std::shared_ptr<SharedAudienceResponse>> updateAdAccountToAdAccountSharedAudience(
        utility::string_t adAccountId,
        std::shared_ptr<SharedAudience> sharedAudience
    ) const;
    /// <summary>
    /// Update audience sharing from an ad account to businesses
    /// </summary>
    /// <remarks>
    /// From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="businessSharedAudience"></param>
    pplx::task<std::shared_ptr<BusinessSharedAudienceResponse>> updateAdAccountToBusinessSharedAudience(
        utility::string_t adAccountId,
        std::shared_ptr<BusinessSharedAudience> businessSharedAudience
    ) const;
    /// <summary>
    /// Update audience sharing from a business to ad accounts
    /// </summary>
    /// <remarks>
    /// From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. &lt;ul&gt; &lt;li&gt;If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.&lt;/li&gt; &lt;li&gt;If the business is the recipient of the audience, it can share with any of its owned ad accounts.&lt;/li&gt; &lt;/ul&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
    /// </remarks>
    /// <param name="businessId">Unique identifier of the requesting business.</param>
    /// <param name="sharedAudience"></param>
    pplx::task<std::shared_ptr<SharedAudienceResponse>> updateBusinessToAdAccountSharedAudience(
        utility::string_t businessId,
        std::shared_ptr<SharedAudience> sharedAudience
    ) const;
    /// <summary>
    /// Update audience sharing between businesses
    /// </summary>
    /// <remarks>
    /// From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
    /// </remarks>
    /// <param name="businessId">Unique identifier of the requesting business.</param>
    /// <param name="businessSharedAudience"></param>
    pplx::task<std::shared_ptr<BusinessSharedAudienceResponse>> updateBusinessToBusinessSharedAudience(
        utility::string_t businessId,
        std::shared_ptr<BusinessSharedAudience> businessSharedAudience
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_AudienceSharingApi_H_ */

