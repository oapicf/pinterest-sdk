/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/PinMediaSourcePinURL.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



PinMediaSourcePinURL::PinMediaSourcePinURL()
{
    m_Source_type = utility::conversions::to_string_t("");
    m_Source_typeIsSet = false;
    m_Is_affiliate_link = false;
    m_Is_affiliate_linkIsSet = false;
}

PinMediaSourcePinURL::~PinMediaSourcePinURL()
{
}

void PinMediaSourcePinURL::validate()
{
    // TODO: implement validation
}

web::json::value PinMediaSourcePinURL::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_Source_typeIsSet)
    {
        val[utility::conversions::to_string_t(U("source_type"))] = ModelBase::toJson(m_Source_type);
    }
    if(m_Is_affiliate_linkIsSet)
    {
        val[utility::conversions::to_string_t(U("is_affiliate_link"))] = ModelBase::toJson(m_Is_affiliate_link);
    }

    return val;
}

bool PinMediaSourcePinURL::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("source_type"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("source_type")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSourceType;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSourceType);
            setSourceType(refVal_setSourceType);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("is_affiliate_link"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("is_affiliate_link")));
        if(!fieldValue.is_null())
        {
            bool refVal_setIsAffiliateLink;
            ok &= ModelBase::fromJson(fieldValue, refVal_setIsAffiliateLink);
            setIsAffiliateLink(refVal_setIsAffiliateLink);
        }
    }
    return ok;
}

void PinMediaSourcePinURL::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_Source_typeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("source_type")), m_Source_type));
    }
    if(m_Is_affiliate_linkIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("is_affiliate_link")), m_Is_affiliate_link));
    }
}

bool PinMediaSourcePinURL::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("source_type"))))
    {
        utility::string_t refVal_setSourceType;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("source_type"))), refVal_setSourceType );
        setSourceType(refVal_setSourceType);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("is_affiliate_link"))))
    {
        bool refVal_setIsAffiliateLink;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("is_affiliate_link"))), refVal_setIsAffiliateLink );
        setIsAffiliateLink(refVal_setIsAffiliateLink);
    }
    return ok;
}

utility::string_t PinMediaSourcePinURL::getSourceType() const
{
    return m_Source_type;
}

void PinMediaSourcePinURL::setSourceType(const utility::string_t& value)
{
    m_Source_type = value;
    m_Source_typeIsSet = true;
}

bool PinMediaSourcePinURL::sourceTypeIsSet() const
{
    return m_Source_typeIsSet;
}

void PinMediaSourcePinURL::unsetSource_type()
{
    m_Source_typeIsSet = false;
}
bool PinMediaSourcePinURL::isIsAffiliateLink() const
{
    return m_Is_affiliate_link;
}

void PinMediaSourcePinURL::setIsAffiliateLink(bool value)
{
    m_Is_affiliate_link = value;
    m_Is_affiliate_linkIsSet = true;
}

bool PinMediaSourcePinURL::isAffiliateLinkIsSet() const
{
    return m_Is_affiliate_linkIsSet;
}

void PinMediaSourcePinURL::unsetIs_affiliate_link()
{
    m_Is_affiliate_linkIsSet = false;
}
}
}
}
}


