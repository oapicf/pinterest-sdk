/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/SSIOCreateInsertionOrderRequest.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



SSIOCreateInsertionOrderRequest::SSIOCreateInsertionOrderRequest()
{
    m_Start_date = utility::conversions::to_string_t("");
    m_Start_dateIsSet = false;
    m_End_date = utility::conversions::to_string_t("");
    m_End_dateIsSet = false;
    m_Po_number = utility::conversions::to_string_t("");
    m_Po_numberIsSet = false;
    m_Budget_amount = 0.0;
    m_Budget_amountIsSet = false;
    m_Billing_contact_firstname = utility::conversions::to_string_t("");
    m_Billing_contact_firstnameIsSet = false;
    m_Billing_contact_lastname = utility::conversions::to_string_t("");
    m_Billing_contact_lastnameIsSet = false;
    m_Billing_contact_email = utility::conversions::to_string_t("");
    m_Billing_contact_emailIsSet = false;
    m_Media_contact_firstname = utility::conversions::to_string_t("");
    m_Media_contact_firstnameIsSet = false;
    m_Media_contact_lastname = utility::conversions::to_string_t("");
    m_Media_contact_lastnameIsSet = false;
    m_Media_contact_email = utility::conversions::to_string_t("");
    m_Media_contact_emailIsSet = false;
    m_Agency_link = utility::conversions::to_string_t("");
    m_Agency_linkIsSet = false;
    m_User_email = utility::conversions::to_string_t("");
    m_User_emailIsSet = false;
    m_Accepted_terms_time = 0;
    m_Accepted_terms_timeIsSet = false;
    m_Pmp_id = utility::conversions::to_string_t("");
    m_Pmp_idIsSet = false;
    m_Order_name = utility::conversions::to_string_t("");
    m_Order_nameIsSet = false;
    m_Order_line_type = utility::conversions::to_string_t("");
    m_Order_line_typeIsSet = false;
    m_Accepted_terms_id = utility::conversions::to_string_t("");
    m_Accepted_terms_idIsSet = false;
    m_Billto_company_id = utility::conversions::to_string_t("");
    m_Billto_company_idIsSet = false;
    m_Billto_business_address_id = utility::conversions::to_string_t("");
    m_Billto_business_address_idIsSet = false;
    m_Billto_billing_address_id = utility::conversions::to_string_t("");
    m_Billto_billing_address_idIsSet = false;
    m_Estimated_monthly_spend = 0.0;
    m_Estimated_monthly_spendIsSet = false;
    m_Currency_infoIsSet = false;
}

SSIOCreateInsertionOrderRequest::~SSIOCreateInsertionOrderRequest()
{
}

void SSIOCreateInsertionOrderRequest::validate()
{
    // TODO: implement validation
}

web::json::value SSIOCreateInsertionOrderRequest::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_Start_dateIsSet)
    {
        val[utility::conversions::to_string_t(U("start_date"))] = ModelBase::toJson(m_Start_date);
    }
    if(m_End_dateIsSet)
    {
        val[utility::conversions::to_string_t(U("end_date"))] = ModelBase::toJson(m_End_date);
    }
    if(m_Po_numberIsSet)
    {
        val[utility::conversions::to_string_t(U("po_number"))] = ModelBase::toJson(m_Po_number);
    }
    if(m_Budget_amountIsSet)
    {
        val[utility::conversions::to_string_t(U("budget_amount"))] = ModelBase::toJson(m_Budget_amount);
    }
    if(m_Billing_contact_firstnameIsSet)
    {
        val[utility::conversions::to_string_t(U("billing_contact_firstname"))] = ModelBase::toJson(m_Billing_contact_firstname);
    }
    if(m_Billing_contact_lastnameIsSet)
    {
        val[utility::conversions::to_string_t(U("billing_contact_lastname"))] = ModelBase::toJson(m_Billing_contact_lastname);
    }
    if(m_Billing_contact_emailIsSet)
    {
        val[utility::conversions::to_string_t(U("billing_contact_email"))] = ModelBase::toJson(m_Billing_contact_email);
    }
    if(m_Media_contact_firstnameIsSet)
    {
        val[utility::conversions::to_string_t(U("media_contact_firstname"))] = ModelBase::toJson(m_Media_contact_firstname);
    }
    if(m_Media_contact_lastnameIsSet)
    {
        val[utility::conversions::to_string_t(U("media_contact_lastname"))] = ModelBase::toJson(m_Media_contact_lastname);
    }
    if(m_Media_contact_emailIsSet)
    {
        val[utility::conversions::to_string_t(U("media_contact_email"))] = ModelBase::toJson(m_Media_contact_email);
    }
    if(m_Agency_linkIsSet)
    {
        val[utility::conversions::to_string_t(U("agency_link"))] = ModelBase::toJson(m_Agency_link);
    }
    if(m_User_emailIsSet)
    {
        val[utility::conversions::to_string_t(U("user_email"))] = ModelBase::toJson(m_User_email);
    }
    if(m_Accepted_terms_timeIsSet)
    {
        val[utility::conversions::to_string_t(U("accepted_terms_time"))] = ModelBase::toJson(m_Accepted_terms_time);
    }
    if(m_Pmp_idIsSet)
    {
        val[utility::conversions::to_string_t(U("pmp_id"))] = ModelBase::toJson(m_Pmp_id);
    }
    if(m_Order_nameIsSet)
    {
        val[utility::conversions::to_string_t(U("order_name"))] = ModelBase::toJson(m_Order_name);
    }
    if(m_Order_line_typeIsSet)
    {
        val[utility::conversions::to_string_t(U("order_line_type"))] = ModelBase::toJson(m_Order_line_type);
    }
    if(m_Accepted_terms_idIsSet)
    {
        val[utility::conversions::to_string_t(U("accepted_terms_id"))] = ModelBase::toJson(m_Accepted_terms_id);
    }
    if(m_Billto_company_idIsSet)
    {
        val[utility::conversions::to_string_t(U("billto_company_id"))] = ModelBase::toJson(m_Billto_company_id);
    }
    if(m_Billto_business_address_idIsSet)
    {
        val[utility::conversions::to_string_t(U("billto_business_address_id"))] = ModelBase::toJson(m_Billto_business_address_id);
    }
    if(m_Billto_billing_address_idIsSet)
    {
        val[utility::conversions::to_string_t(U("billto_billing_address_id"))] = ModelBase::toJson(m_Billto_billing_address_id);
    }
    if(m_Estimated_monthly_spendIsSet)
    {
        val[utility::conversions::to_string_t(U("estimated_monthly_spend"))] = ModelBase::toJson(m_Estimated_monthly_spend);
    }
    if(m_Currency_infoIsSet)
    {
        val[utility::conversions::to_string_t(U("currency_info"))] = ModelBase::toJson(m_Currency_info);
    }

    return val;
}

bool SSIOCreateInsertionOrderRequest::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("start_date"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("start_date")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setStartDate;
            ok &= ModelBase::fromJson(fieldValue, refVal_setStartDate);
            setStartDate(refVal_setStartDate);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("end_date"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("end_date")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setEndDate;
            ok &= ModelBase::fromJson(fieldValue, refVal_setEndDate);
            setEndDate(refVal_setEndDate);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("po_number"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("po_number")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setPoNumber;
            ok &= ModelBase::fromJson(fieldValue, refVal_setPoNumber);
            setPoNumber(refVal_setPoNumber);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("budget_amount"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("budget_amount")));
        if(!fieldValue.is_null())
        {
            double refVal_setBudgetAmount;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBudgetAmount);
            setBudgetAmount(refVal_setBudgetAmount);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("billing_contact_firstname"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("billing_contact_firstname")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBillingContactFirstname;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBillingContactFirstname);
            setBillingContactFirstname(refVal_setBillingContactFirstname);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("billing_contact_lastname"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("billing_contact_lastname")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBillingContactLastname;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBillingContactLastname);
            setBillingContactLastname(refVal_setBillingContactLastname);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("billing_contact_email"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("billing_contact_email")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBillingContactEmail;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBillingContactEmail);
            setBillingContactEmail(refVal_setBillingContactEmail);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("media_contact_firstname"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("media_contact_firstname")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setMediaContactFirstname;
            ok &= ModelBase::fromJson(fieldValue, refVal_setMediaContactFirstname);
            setMediaContactFirstname(refVal_setMediaContactFirstname);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("media_contact_lastname"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("media_contact_lastname")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setMediaContactLastname;
            ok &= ModelBase::fromJson(fieldValue, refVal_setMediaContactLastname);
            setMediaContactLastname(refVal_setMediaContactLastname);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("media_contact_email"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("media_contact_email")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setMediaContactEmail;
            ok &= ModelBase::fromJson(fieldValue, refVal_setMediaContactEmail);
            setMediaContactEmail(refVal_setMediaContactEmail);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("agency_link"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("agency_link")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setAgencyLink;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAgencyLink);
            setAgencyLink(refVal_setAgencyLink);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("user_email"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("user_email")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setUserEmail;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUserEmail);
            setUserEmail(refVal_setUserEmail);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("accepted_terms_time"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("accepted_terms_time")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setAcceptedTermsTime;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAcceptedTermsTime);
            setAcceptedTermsTime(refVal_setAcceptedTermsTime);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("pmp_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("pmp_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setPmpId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setPmpId);
            setPmpId(refVal_setPmpId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("order_name"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("order_name")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setOrderName;
            ok &= ModelBase::fromJson(fieldValue, refVal_setOrderName);
            setOrderName(refVal_setOrderName);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("order_line_type"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("order_line_type")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setOrderLineType;
            ok &= ModelBase::fromJson(fieldValue, refVal_setOrderLineType);
            setOrderLineType(refVal_setOrderLineType);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("accepted_terms_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("accepted_terms_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setAcceptedTermsId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAcceptedTermsId);
            setAcceptedTermsId(refVal_setAcceptedTermsId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("billto_company_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("billto_company_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBilltoCompanyId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBilltoCompanyId);
            setBilltoCompanyId(refVal_setBilltoCompanyId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("billto_business_address_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("billto_business_address_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBilltoBusinessAddressId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBilltoBusinessAddressId);
            setBilltoBusinessAddressId(refVal_setBilltoBusinessAddressId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("billto_billing_address_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("billto_billing_address_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBilltoBillingAddressId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBilltoBillingAddressId);
            setBilltoBillingAddressId(refVal_setBilltoBillingAddressId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("estimated_monthly_spend"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("estimated_monthly_spend")));
        if(!fieldValue.is_null())
        {
            double refVal_setEstimatedMonthlySpend;
            ok &= ModelBase::fromJson(fieldValue, refVal_setEstimatedMonthlySpend);
            setEstimatedMonthlySpend(refVal_setEstimatedMonthlySpend);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("currency_info"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("currency_info")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Currency> refVal_setCurrencyInfo;
            ok &= ModelBase::fromJson(fieldValue, refVal_setCurrencyInfo);
            setCurrencyInfo(refVal_setCurrencyInfo);
        }
    }
    return ok;
}

void SSIOCreateInsertionOrderRequest::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_Start_dateIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("start_date")), m_Start_date));
    }
    if(m_End_dateIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("end_date")), m_End_date));
    }
    if(m_Po_numberIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("po_number")), m_Po_number));
    }
    if(m_Budget_amountIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("budget_amount")), m_Budget_amount));
    }
    if(m_Billing_contact_firstnameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("billing_contact_firstname")), m_Billing_contact_firstname));
    }
    if(m_Billing_contact_lastnameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("billing_contact_lastname")), m_Billing_contact_lastname));
    }
    if(m_Billing_contact_emailIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("billing_contact_email")), m_Billing_contact_email));
    }
    if(m_Media_contact_firstnameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("media_contact_firstname")), m_Media_contact_firstname));
    }
    if(m_Media_contact_lastnameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("media_contact_lastname")), m_Media_contact_lastname));
    }
    if(m_Media_contact_emailIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("media_contact_email")), m_Media_contact_email));
    }
    if(m_Agency_linkIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("agency_link")), m_Agency_link));
    }
    if(m_User_emailIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("user_email")), m_User_email));
    }
    if(m_Accepted_terms_timeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("accepted_terms_time")), m_Accepted_terms_time));
    }
    if(m_Pmp_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("pmp_id")), m_Pmp_id));
    }
    if(m_Order_nameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("order_name")), m_Order_name));
    }
    if(m_Order_line_typeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("order_line_type")), m_Order_line_type));
    }
    if(m_Accepted_terms_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("accepted_terms_id")), m_Accepted_terms_id));
    }
    if(m_Billto_company_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("billto_company_id")), m_Billto_company_id));
    }
    if(m_Billto_business_address_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("billto_business_address_id")), m_Billto_business_address_id));
    }
    if(m_Billto_billing_address_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("billto_billing_address_id")), m_Billto_billing_address_id));
    }
    if(m_Estimated_monthly_spendIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("estimated_monthly_spend")), m_Estimated_monthly_spend));
    }
    if(m_Currency_infoIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("currency_info")), m_Currency_info));
    }
}

bool SSIOCreateInsertionOrderRequest::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("start_date"))))
    {
        utility::string_t refVal_setStartDate;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("start_date"))), refVal_setStartDate );
        setStartDate(refVal_setStartDate);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("end_date"))))
    {
        utility::string_t refVal_setEndDate;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("end_date"))), refVal_setEndDate );
        setEndDate(refVal_setEndDate);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("po_number"))))
    {
        utility::string_t refVal_setPoNumber;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("po_number"))), refVal_setPoNumber );
        setPoNumber(refVal_setPoNumber);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("budget_amount"))))
    {
        double refVal_setBudgetAmount;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("budget_amount"))), refVal_setBudgetAmount );
        setBudgetAmount(refVal_setBudgetAmount);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("billing_contact_firstname"))))
    {
        utility::string_t refVal_setBillingContactFirstname;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("billing_contact_firstname"))), refVal_setBillingContactFirstname );
        setBillingContactFirstname(refVal_setBillingContactFirstname);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("billing_contact_lastname"))))
    {
        utility::string_t refVal_setBillingContactLastname;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("billing_contact_lastname"))), refVal_setBillingContactLastname );
        setBillingContactLastname(refVal_setBillingContactLastname);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("billing_contact_email"))))
    {
        utility::string_t refVal_setBillingContactEmail;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("billing_contact_email"))), refVal_setBillingContactEmail );
        setBillingContactEmail(refVal_setBillingContactEmail);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("media_contact_firstname"))))
    {
        utility::string_t refVal_setMediaContactFirstname;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("media_contact_firstname"))), refVal_setMediaContactFirstname );
        setMediaContactFirstname(refVal_setMediaContactFirstname);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("media_contact_lastname"))))
    {
        utility::string_t refVal_setMediaContactLastname;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("media_contact_lastname"))), refVal_setMediaContactLastname );
        setMediaContactLastname(refVal_setMediaContactLastname);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("media_contact_email"))))
    {
        utility::string_t refVal_setMediaContactEmail;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("media_contact_email"))), refVal_setMediaContactEmail );
        setMediaContactEmail(refVal_setMediaContactEmail);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("agency_link"))))
    {
        utility::string_t refVal_setAgencyLink;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("agency_link"))), refVal_setAgencyLink );
        setAgencyLink(refVal_setAgencyLink);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("user_email"))))
    {
        utility::string_t refVal_setUserEmail;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("user_email"))), refVal_setUserEmail );
        setUserEmail(refVal_setUserEmail);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("accepted_terms_time"))))
    {
        int32_t refVal_setAcceptedTermsTime;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("accepted_terms_time"))), refVal_setAcceptedTermsTime );
        setAcceptedTermsTime(refVal_setAcceptedTermsTime);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("pmp_id"))))
    {
        utility::string_t refVal_setPmpId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("pmp_id"))), refVal_setPmpId );
        setPmpId(refVal_setPmpId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("order_name"))))
    {
        utility::string_t refVal_setOrderName;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("order_name"))), refVal_setOrderName );
        setOrderName(refVal_setOrderName);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("order_line_type"))))
    {
        utility::string_t refVal_setOrderLineType;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("order_line_type"))), refVal_setOrderLineType );
        setOrderLineType(refVal_setOrderLineType);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("accepted_terms_id"))))
    {
        utility::string_t refVal_setAcceptedTermsId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("accepted_terms_id"))), refVal_setAcceptedTermsId );
        setAcceptedTermsId(refVal_setAcceptedTermsId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("billto_company_id"))))
    {
        utility::string_t refVal_setBilltoCompanyId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("billto_company_id"))), refVal_setBilltoCompanyId );
        setBilltoCompanyId(refVal_setBilltoCompanyId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("billto_business_address_id"))))
    {
        utility::string_t refVal_setBilltoBusinessAddressId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("billto_business_address_id"))), refVal_setBilltoBusinessAddressId );
        setBilltoBusinessAddressId(refVal_setBilltoBusinessAddressId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("billto_billing_address_id"))))
    {
        utility::string_t refVal_setBilltoBillingAddressId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("billto_billing_address_id"))), refVal_setBilltoBillingAddressId );
        setBilltoBillingAddressId(refVal_setBilltoBillingAddressId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("estimated_monthly_spend"))))
    {
        double refVal_setEstimatedMonthlySpend;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("estimated_monthly_spend"))), refVal_setEstimatedMonthlySpend );
        setEstimatedMonthlySpend(refVal_setEstimatedMonthlySpend);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("currency_info"))))
    {
        std::shared_ptr<Currency> refVal_setCurrencyInfo;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("currency_info"))), refVal_setCurrencyInfo );
        setCurrencyInfo(refVal_setCurrencyInfo);
    }
    return ok;
}

utility::string_t SSIOCreateInsertionOrderRequest::getStartDate() const
{
    return m_Start_date;
}

void SSIOCreateInsertionOrderRequest::setStartDate(const utility::string_t& value)
{
    m_Start_date = value;
    m_Start_dateIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::startDateIsSet() const
{
    return m_Start_dateIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetStart_date()
{
    m_Start_dateIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getEndDate() const
{
    return m_End_date;
}

void SSIOCreateInsertionOrderRequest::setEndDate(const utility::string_t& value)
{
    m_End_date = value;
    m_End_dateIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::endDateIsSet() const
{
    return m_End_dateIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetEnd_date()
{
    m_End_dateIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getPoNumber() const
{
    return m_Po_number;
}

void SSIOCreateInsertionOrderRequest::setPoNumber(const utility::string_t& value)
{
    m_Po_number = value;
    m_Po_numberIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::poNumberIsSet() const
{
    return m_Po_numberIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetPo_number()
{
    m_Po_numberIsSet = false;
}
double SSIOCreateInsertionOrderRequest::getBudgetAmount() const
{
    return m_Budget_amount;
}

void SSIOCreateInsertionOrderRequest::setBudgetAmount(double value)
{
    m_Budget_amount = value;
    m_Budget_amountIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::budgetAmountIsSet() const
{
    return m_Budget_amountIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBudget_amount()
{
    m_Budget_amountIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getBillingContactFirstname() const
{
    return m_Billing_contact_firstname;
}

void SSIOCreateInsertionOrderRequest::setBillingContactFirstname(const utility::string_t& value)
{
    m_Billing_contact_firstname = value;
    m_Billing_contact_firstnameIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::billingContactFirstnameIsSet() const
{
    return m_Billing_contact_firstnameIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBilling_contact_firstname()
{
    m_Billing_contact_firstnameIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getBillingContactLastname() const
{
    return m_Billing_contact_lastname;
}

void SSIOCreateInsertionOrderRequest::setBillingContactLastname(const utility::string_t& value)
{
    m_Billing_contact_lastname = value;
    m_Billing_contact_lastnameIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::billingContactLastnameIsSet() const
{
    return m_Billing_contact_lastnameIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBilling_contact_lastname()
{
    m_Billing_contact_lastnameIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getBillingContactEmail() const
{
    return m_Billing_contact_email;
}

void SSIOCreateInsertionOrderRequest::setBillingContactEmail(const utility::string_t& value)
{
    m_Billing_contact_email = value;
    m_Billing_contact_emailIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::billingContactEmailIsSet() const
{
    return m_Billing_contact_emailIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBilling_contact_email()
{
    m_Billing_contact_emailIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getMediaContactFirstname() const
{
    return m_Media_contact_firstname;
}

void SSIOCreateInsertionOrderRequest::setMediaContactFirstname(const utility::string_t& value)
{
    m_Media_contact_firstname = value;
    m_Media_contact_firstnameIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::mediaContactFirstnameIsSet() const
{
    return m_Media_contact_firstnameIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetMedia_contact_firstname()
{
    m_Media_contact_firstnameIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getMediaContactLastname() const
{
    return m_Media_contact_lastname;
}

void SSIOCreateInsertionOrderRequest::setMediaContactLastname(const utility::string_t& value)
{
    m_Media_contact_lastname = value;
    m_Media_contact_lastnameIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::mediaContactLastnameIsSet() const
{
    return m_Media_contact_lastnameIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetMedia_contact_lastname()
{
    m_Media_contact_lastnameIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getMediaContactEmail() const
{
    return m_Media_contact_email;
}

void SSIOCreateInsertionOrderRequest::setMediaContactEmail(const utility::string_t& value)
{
    m_Media_contact_email = value;
    m_Media_contact_emailIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::mediaContactEmailIsSet() const
{
    return m_Media_contact_emailIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetMedia_contact_email()
{
    m_Media_contact_emailIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getAgencyLink() const
{
    return m_Agency_link;
}

void SSIOCreateInsertionOrderRequest::setAgencyLink(const utility::string_t& value)
{
    m_Agency_link = value;
    m_Agency_linkIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::agencyLinkIsSet() const
{
    return m_Agency_linkIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetAgency_link()
{
    m_Agency_linkIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getUserEmail() const
{
    return m_User_email;
}

void SSIOCreateInsertionOrderRequest::setUserEmail(const utility::string_t& value)
{
    m_User_email = value;
    m_User_emailIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::userEmailIsSet() const
{
    return m_User_emailIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetUser_email()
{
    m_User_emailIsSet = false;
}
int32_t SSIOCreateInsertionOrderRequest::getAcceptedTermsTime() const
{
    return m_Accepted_terms_time;
}

void SSIOCreateInsertionOrderRequest::setAcceptedTermsTime(int32_t value)
{
    m_Accepted_terms_time = value;
    m_Accepted_terms_timeIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::acceptedTermsTimeIsSet() const
{
    return m_Accepted_terms_timeIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetAccepted_terms_time()
{
    m_Accepted_terms_timeIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getPmpId() const
{
    return m_Pmp_id;
}

void SSIOCreateInsertionOrderRequest::setPmpId(const utility::string_t& value)
{
    m_Pmp_id = value;
    m_Pmp_idIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::pmpIdIsSet() const
{
    return m_Pmp_idIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetPmp_id()
{
    m_Pmp_idIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getOrderName() const
{
    return m_Order_name;
}

void SSIOCreateInsertionOrderRequest::setOrderName(const utility::string_t& value)
{
    m_Order_name = value;
    m_Order_nameIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::orderNameIsSet() const
{
    return m_Order_nameIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetOrder_name()
{
    m_Order_nameIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getOrderLineType() const
{
    return m_Order_line_type;
}

void SSIOCreateInsertionOrderRequest::setOrderLineType(const utility::string_t& value)
{
    m_Order_line_type = value;
    m_Order_line_typeIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::orderLineTypeIsSet() const
{
    return m_Order_line_typeIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetOrder_line_type()
{
    m_Order_line_typeIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getAcceptedTermsId() const
{
    return m_Accepted_terms_id;
}

void SSIOCreateInsertionOrderRequest::setAcceptedTermsId(const utility::string_t& value)
{
    m_Accepted_terms_id = value;
    m_Accepted_terms_idIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::acceptedTermsIdIsSet() const
{
    return m_Accepted_terms_idIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetAccepted_terms_id()
{
    m_Accepted_terms_idIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getBilltoCompanyId() const
{
    return m_Billto_company_id;
}

void SSIOCreateInsertionOrderRequest::setBilltoCompanyId(const utility::string_t& value)
{
    m_Billto_company_id = value;
    m_Billto_company_idIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::billtoCompanyIdIsSet() const
{
    return m_Billto_company_idIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBillto_company_id()
{
    m_Billto_company_idIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getBilltoBusinessAddressId() const
{
    return m_Billto_business_address_id;
}

void SSIOCreateInsertionOrderRequest::setBilltoBusinessAddressId(const utility::string_t& value)
{
    m_Billto_business_address_id = value;
    m_Billto_business_address_idIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::billtoBusinessAddressIdIsSet() const
{
    return m_Billto_business_address_idIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBillto_business_address_id()
{
    m_Billto_business_address_idIsSet = false;
}
utility::string_t SSIOCreateInsertionOrderRequest::getBilltoBillingAddressId() const
{
    return m_Billto_billing_address_id;
}

void SSIOCreateInsertionOrderRequest::setBilltoBillingAddressId(const utility::string_t& value)
{
    m_Billto_billing_address_id = value;
    m_Billto_billing_address_idIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::billtoBillingAddressIdIsSet() const
{
    return m_Billto_billing_address_idIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetBillto_billing_address_id()
{
    m_Billto_billing_address_idIsSet = false;
}
double SSIOCreateInsertionOrderRequest::getEstimatedMonthlySpend() const
{
    return m_Estimated_monthly_spend;
}

void SSIOCreateInsertionOrderRequest::setEstimatedMonthlySpend(double value)
{
    m_Estimated_monthly_spend = value;
    m_Estimated_monthly_spendIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::estimatedMonthlySpendIsSet() const
{
    return m_Estimated_monthly_spendIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetEstimated_monthly_spend()
{
    m_Estimated_monthly_spendIsSet = false;
}
std::shared_ptr<Currency> SSIOCreateInsertionOrderRequest::getCurrencyInfo() const
{
    return m_Currency_info;
}

void SSIOCreateInsertionOrderRequest::setCurrencyInfo(const std::shared_ptr<Currency>& value)
{
    m_Currency_info = value;
    m_Currency_infoIsSet = true;
}

bool SSIOCreateInsertionOrderRequest::currencyInfoIsSet() const
{
    return m_Currency_infoIsSet;
}

void SSIOCreateInsertionOrderRequest::unsetCurrency_info()
{
    m_Currency_infoIsSet = false;
}
}
}
}
}


