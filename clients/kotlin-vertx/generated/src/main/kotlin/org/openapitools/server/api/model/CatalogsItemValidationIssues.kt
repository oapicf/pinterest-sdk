/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.CatalogsItemValidationErrors
import org.openapitools.server.api.model.CatalogsItemValidationWarnings

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param itemNumber Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation.
 * @param itemId The merchant-created unique ID that represents the product.
 * @param errors 
 * @param warnings 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class CatalogsItemValidationIssues (
    /* Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation. */
    @SerializedName("itemNumber") private val _itemNumber: kotlin.Int?,
    /* The merchant-created unique ID that represents the product. */
    @SerializedName("itemId") private val _itemId: kotlin.String?,
    @SerializedName("errors") private val _errors: CatalogsItemValidationErrors?,
    @SerializedName("warnings") private val _warnings: CatalogsItemValidationWarnings?
) {

        val itemNumber get() = _itemNumber ?: throw IllegalArgumentException("itemNumber is required")
                    
        val itemId get() = _itemId ?: throw IllegalArgumentException("itemId is required")
                    
        val errors get() = _errors ?: throw IllegalArgumentException("errors is required")
                    
        val warnings get() = _warnings ?: throw IllegalArgumentException("warnings is required")
                    
}

