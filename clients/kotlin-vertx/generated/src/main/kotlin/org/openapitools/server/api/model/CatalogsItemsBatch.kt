/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.BatchOperationStatus
import org.openapitools.server.api.model.CatalogsCreativeAssetsItemsBatch
import org.openapitools.server.api.model.CatalogsHotelItemsBatch
import org.openapitools.server.api.model.CatalogsRetailItemsBatch
import org.openapitools.server.api.model.CatalogsType
import org.openapitools.server.api.model.CreativeAssetsProcessingRecord

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Object describing the catalogs items batch
 * @param catalogType 
 * @param batchId Id of the catalogs items batch
 * @param createdTime Date and time (UTC) of the batch creation: YYYY-MM-DD'T'hh:mm:ss
 * @param completedTime Date and time (UTC) of the batch completion: YYYY-MM-DD'T'hh:mm:ss
 * @param status 
 * @param items Array with the catalogs items processing records part of the catalogs items batch
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class CatalogsItemsBatch (
    @SerializedName("catalogType") private val _catalogType: CatalogsType?,
    /* Id of the catalogs items batch */
    val batchId: kotlin.String? = null,
    /* Date and time (UTC) of the batch creation: YYYY-MM-DD'T'hh:mm:ss */
    val createdTime: java.time.OffsetDateTime? = null,
    /* Date and time (UTC) of the batch completion: YYYY-MM-DD'T'hh:mm:ss */
    val completedTime: java.time.OffsetDateTime? = null,
    val status: BatchOperationStatus? = null,
    /* Array with the catalogs items processing records part of the catalogs items batch */
    val items: kotlin.Array<CreativeAssetsProcessingRecord>? = null
) {

        val catalogType get() = _catalogType ?: throw IllegalArgumentException("catalogType is required")
                    
}

