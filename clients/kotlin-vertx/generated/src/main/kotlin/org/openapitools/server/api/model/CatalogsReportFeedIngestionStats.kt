/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param reportType 
 * @param catalogId ID of the catalog entity.
 * @param code The event code that a diagnostics aggregated number references
 * @param codeLabel A human-friendly label for the event code (e.g, 'AVAILABILITY_INVALID')
 * @param message Title message describing the diagnostic issue
 * @param occurrences Number of occurrences of the issue
 * @param severity An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class CatalogsReportFeedIngestionStats (
    val reportType: CatalogsReportFeedIngestionStats.ReportType? = null,
    /* ID of the catalog entity. */
    val catalogId: kotlin.String? = null,
    /* The event code that a diagnostics aggregated number references */
    val code: kotlin.Int? = null,
    /* A human-friendly label for the event code (e.g, 'AVAILABILITY_INVALID') */
    val codeLabel: kotlin.String? = null,
    /* Title message describing the diagnostic issue */
    val message: kotlin.String? = null,
    /* Number of occurrences of the issue */
    val occurrences: kotlin.Int? = null,
    /* An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue */
    val severity: CatalogsReportFeedIngestionStats.Severity? = null
) {

    /**
    * 
    * Values: FEED_INGESTION_ISSUES
    */
    enum class ReportType(val value: kotlin.String){
    
        FEED_INGESTION_ISSUES("FEED_INGESTION_ISSUES");
    
    }

    /**
    * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
    * Values: WARN,ERROR
    */
    enum class Severity(val value: kotlin.String){
    
        WARN("WARN"),
    
        ERROR("ERROR");
    
    }

}

