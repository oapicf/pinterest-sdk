/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.CatalogsLocale
import org.openapitools.server.api.model.CatalogsProductGroupFilters
import org.openapitools.server.api.model.Country

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Request object to list products for a given retail catalog_id and product group filter.
 * @param catalogType Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
 * @param catalogId Catalog id pertaining to the retail product group.
 * @param filters 
 * @param country 
 * @param locale 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class CatalogsRetailListProductsByCatalogBasedFilterRequest (
    /* Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one. */
    @SerializedName("catalogType") private val _catalogType: CatalogsRetailListProductsByCatalogBasedFilterRequest.CatalogType?,
    /* Catalog id pertaining to the retail product group. */
    @SerializedName("catalogId") private val _catalogId: kotlin.String?,
    @SerializedName("filters") private val _filters: CatalogsProductGroupFilters?,
    @SerializedName("country") private val _country: Country?,
    @SerializedName("locale") private val _locale: CatalogsLocale?
) {

    /**
    * Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
    * Values: RETAIL
    */
    enum class CatalogType(val value: kotlin.String){
    
        RETAIL("RETAIL");
    
    }

        val catalogType get() = _catalogType ?: throw IllegalArgumentException("catalogType is required")
                    
        val catalogId get() = _catalogId ?: throw IllegalArgumentException("catalogId is required")
                    
        val filters get() = _filters ?: throw IllegalArgumentException("filters is required")
                    
        val country get() = _country ?: throw IllegalArgumentException("country is required")
                    
        val locale get() = _locale ?: throw IllegalArgumentException("locale is required")
                    
}

