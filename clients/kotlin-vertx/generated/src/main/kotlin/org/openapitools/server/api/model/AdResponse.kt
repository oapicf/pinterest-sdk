/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.CreativeType
import org.openapitools.server.api.model.EntityStatus
import org.openapitools.server.api.model.GridClickType
import org.openapitools.server.api.model.PinPromotionSummaryStatus
import org.openapitools.server.api.model.QuizPinData
import org.openapitools.server.api.model.TrackingUrls

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param adGroupId ID of the ad group that contains the ad.
 * @param androidDeepLink Deep link URL for Android devices.
 * @param carouselAndroidDeepLinks Comma-separated deep links for the carousel pin on Android.
 * @param carouselDestinationUrls Comma-separated destination URLs for the carousel pin to promote.
 * @param carouselIosDeepLinks Comma-separated deep links for the carousel pin on iOS.
 * @param clickTrackingUrl Tracking url for the ad clicks.
 * @param creativeType 
 * @param destinationUrl Destination URL.
 * @param iosDeepLink Deep link URL for iOS devices.
 * @param isPinDeleted Is original pin deleted?
 * @param isRemovable Is pin repinnable?
 * @param name Name of the ad - 255 chars max.
 * @param status 
 * @param trackingUrls 
 * @param viewTrackingUrl Tracking URL for ad impressions.
 * @param leadFormId Lead form ID for lead ad generation.
 * @param gridClickType 
 * @param customizableCtaType Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
 * @param quizPinData Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved.
 * @param pinId Pin ID.
 * @param adAccountId The ID of the advertiser that this ad belongs to.
 * @param campaignId ID of the ad campaign that contains this ad.
 * @param collectionItemsDestinationUrlTemplate Destination URL template for all items within a collections drawer.
 * @param createdTime Pin creation time. Unix timestamp in seconds.
 * @param id The ID of this ad.
 * @param rejectedReasons Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
 * @param rejectionLabels Text reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
 * @param reviewStatus Ad review status
 * @param type Always \"ad\".
 * @param updatedTime Last update time. Unix timestamp in seconds.
 * @param summaryStatus Ad summary status
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class AdResponse (
    /* ID of the ad group that contains the ad. */
    val adGroupId: kotlin.String? = null,
    /* Deep link URL for Android devices. */
    val androidDeepLink: kotlin.String? = null,
    /* Comma-separated deep links for the carousel pin on Android. */
    val carouselAndroidDeepLinks: kotlin.Array<kotlin.String>? = null,
    /* Comma-separated destination URLs for the carousel pin to promote. */
    val carouselDestinationUrls: kotlin.Array<kotlin.String>? = null,
    /* Comma-separated deep links for the carousel pin on iOS. */
    val carouselIosDeepLinks: kotlin.Array<kotlin.String>? = null,
    /* Tracking url for the ad clicks. */
    val clickTrackingUrl: kotlin.String? = null,
    val creativeType: CreativeType? = null,
    /* Destination URL. */
    val destinationUrl: kotlin.String? = null,
    /* Deep link URL for iOS devices. */
    val iosDeepLink: kotlin.String? = null,
    /* Is original pin deleted? */
    val isPinDeleted: kotlin.Boolean? = null,
    /* Is pin repinnable? */
    val isRemovable: kotlin.Boolean? = null,
    /* Name of the ad - 255 chars max. */
    val name: kotlin.String? = null,
    val status: EntityStatus? = null,
    val trackingUrls: TrackingUrls? = null,
    /* Tracking URL for ad impressions. */
    val viewTrackingUrl: kotlin.String? = null,
    /* Lead form ID for lead ad generation. */
    val leadFormId: kotlin.String? = null,
    val gridClickType: GridClickType? = null,
    /* Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only) */
    val customizableCtaType: AdResponse.CustomizableCtaType? = null,
    /* Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved. */
    val quizPinData: QuizPinData? = null,
    /* Pin ID. */
    val pinId: kotlin.String? = null,
    /* The ID of the advertiser that this ad belongs to. */
    val adAccountId: kotlin.String? = null,
    /* ID of the ad campaign that contains this ad. */
    val campaignId: kotlin.String? = null,
    /* Destination URL template for all items within a collections drawer. */
    val collectionItemsDestinationUrlTemplate: kotlin.String? = null,
    /* Pin creation time. Unix timestamp in seconds. */
    val createdTime: kotlin.Int? = null,
    /* The ID of this ad. */
    val id: kotlin.String? = null,
    /* Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\". */
    val rejectedReasons: AdResponse.RejectedReasons? = null,
    /* Text reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\". */
    val rejectionLabels: kotlin.Array<kotlin.String>? = null,
    /* Ad review status */
    val reviewStatus: AdResponse.ReviewStatus? = null,
    /* Always \"ad\". */
    val type: kotlin.String? = null,
    /* Last update time. Unix timestamp in seconds. */
    val updatedTime: kotlin.Int? = null,
    /* Ad summary status */
    val summaryStatus: PinPromotionSummaryStatus? = null
) {

    /**
    * Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only)
    * Values: GET_OFFER,LEARN_MORE,ORDER_NOW,SHOP_NOW,SIGN_UP,SUBSCRIBE,BUY_NOW,CONTACT_US,GET_QUOTE,VISIT_SITE,APPLY_NOW,BOOK_NOW,REQUEST_DEMO,REGISTER_NOW,FIND_A_DEALER,ADD_TO_CART,WATCH_NOW,READ_MORE
    */
    enum class CustomizableCtaType(val value: kotlin.String){
    
        GET_OFFER("GET_OFFER"),
    
        LEARN_MORE("LEARN_MORE"),
    
        ORDER_NOW("ORDER_NOW"),
    
        SHOP_NOW("SHOP_NOW"),
    
        SIGN_UP("SIGN_UP"),
    
        SUBSCRIBE("SUBSCRIBE"),
    
        BUY_NOW("BUY_NOW"),
    
        CONTACT_US("CONTACT_US"),
    
        GET_QUOTE("GET_QUOTE"),
    
        VISIT_SITE("VISIT_SITE"),
    
        APPLY_NOW("APPLY_NOW"),
    
        BOOK_NOW("BOOK_NOW"),
    
        REQUEST_DEMO("REQUEST_DEMO"),
    
        REGISTER_NOW("REGISTER_NOW"),
    
        FIND_A_DEALER("FIND_A_DEALER"),
    
        ADD_TO_CART("ADD_TO_CART"),
    
        WATCH_NOW("WATCH_NOW"),
    
        READ_MORE("READ_MORE");
    
    }

    /**
    * Enum reason why the pin was rejected. Returned if <code>review_status</code> is \"REJECTED\".
    * Values: HASHTAGS,PROMOTIONS_AND_PRICES,TARGETING,LANDING_PAGE,CAPS_AND_SYMBOLS,SHOCKING,WEIGHT_LOSS,PROHIBITED_PRODUCT,AUTHENTICITY,NUDITY,CONFUSING_DESIGN,URGENCY,RATINGS,APP,ALCOHOL,CONTESTS,POLITICAL,OTHER,IMAGE,NAR,INCONSISTENT,CLICKBAIT,NO_DESCRIPTION,LOW_QUALITY,EXAGGERATED_CLAIMS,PINTEREST_BRAND,ALCOHOL_NO_SALE,LANDING_PAGE_SPEED,LANDING_PAGE_HARDWALL,LANDING_PAGE_BROKEN,LANDING_PAGE_QUALITY,OUT_OF_STOCK,IMAGE_LOW_QUALITY,IMAGE_BUSY,IMAGE_POORLY_EDITED,IMAGE_BEFORE_AFTER,UGC,FAKE_BUTTONS,WEAPONS,SENSITIVE,UNACCEPTABLE_BUSINESS,SUSPICIOUS_CLAIMS,PHARMA,SUSPICIOUS_SUPPLEMENTS,ILLEGAL_RECREATIONAL_DRUG,LOW_QUALITY_LANDING_PAGE,RESTRICTED_HEALTHCARE,INCONSISTENT_LANG_FR
    */
    enum class RejectedReasons(val value: kotlin.Array&lt;kotlin.String&gt;){
    
        HASHTAGS("HASHTAGS"),
    
        PROMOTIONS_AND_PRICES("PROMOTIONS_AND_PRICES"),
    
        TARGETING("TARGETING"),
    
        LANDING_PAGE("LANDING_PAGE"),
    
        CAPS_AND_SYMBOLS("CAPS_AND_SYMBOLS"),
    
        SHOCKING("SHOCKING"),
    
        WEIGHT_LOSS("WEIGHT_LOSS"),
    
        PROHIBITED_PRODUCT("PROHIBITED_PRODUCT"),
    
        AUTHENTICITY("AUTHENTICITY"),
    
        NUDITY("NUDITY"),
    
        CONFUSING_DESIGN("CONFUSING_DESIGN"),
    
        URGENCY("URGENCY"),
    
        RATINGS("RATINGS"),
    
        APP("APP"),
    
        ALCOHOL("ALCOHOL"),
    
        CONTESTS("CONTESTS"),
    
        POLITICAL("POLITICAL"),
    
        OTHER("OTHER"),
    
        IMAGE("IMAGE"),
    
        NAR("NAR"),
    
        INCONSISTENT("INCONSISTENT"),
    
        CLICKBAIT("CLICKBAIT"),
    
        NO_DESCRIPTION("NO_DESCRIPTION"),
    
        LOW_QUALITY("LOW_QUALITY"),
    
        EXAGGERATED_CLAIMS("EXAGGERATED_CLAIMS"),
    
        PINTEREST_BRAND("PINTEREST_BRAND"),
    
        ALCOHOL_NO_SALE("ALCOHOL_NO_SALE"),
    
        LANDING_PAGE_SPEED("LANDING_PAGE_SPEED"),
    
        LANDING_PAGE_HARDWALL("LANDING_PAGE_HARDWALL"),
    
        LANDING_PAGE_BROKEN("LANDING_PAGE_BROKEN"),
    
        LANDING_PAGE_QUALITY("LANDING_PAGE_QUALITY"),
    
        OUT_OF_STOCK("OUT_OF_STOCK"),
    
        IMAGE_LOW_QUALITY("IMAGE_LOW_QUALITY"),
    
        IMAGE_BUSY("IMAGE_BUSY"),
    
        IMAGE_POORLY_EDITED("IMAGE_POORLY_EDITED"),
    
        IMAGE_BEFORE_AFTER("IMAGE_BEFORE_AFTER"),
    
        UGC("UGC"),
    
        FAKE_BUTTONS("FAKE_BUTTONS"),
    
        WEAPONS("WEAPONS"),
    
        SENSITIVE("SENSITIVE"),
    
        UNACCEPTABLE_BUSINESS("UNACCEPTABLE_BUSINESS"),
    
        SUSPICIOUS_CLAIMS("SUSPICIOUS_CLAIMS"),
    
        PHARMA("PHARMA"),
    
        SUSPICIOUS_SUPPLEMENTS("SUSPICIOUS_SUPPLEMENTS"),
    
        ILLEGAL_RECREATIONAL_DRUG("ILLEGAL_RECREATIONAL_DRUG"),
    
        LOW_QUALITY_LANDING_PAGE("LOW_QUALITY_LANDING_PAGE"),
    
        RESTRICTED_HEALTHCARE("RESTRICTED_HEALTHCARE"),
    
        INCONSISTENT_LANG_FR("INCONSISTENT_LANG_FR");
    
    }

    /**
    * Ad review status
    * Values: OTHER,PENDING,REJECTED,APPROVED
    */
    enum class ReviewStatus(val value: kotlin.String){
    
        OTHER("OTHER"),
    
        PENDING("PENDING"),
    
        REJECTED("REJECTED"),
    
        APPROVED("APPROVED");
    
    }

}

