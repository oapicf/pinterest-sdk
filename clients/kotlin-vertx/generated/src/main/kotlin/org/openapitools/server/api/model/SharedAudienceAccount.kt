/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param accountId Account ID (ad account or business ID).
 * @param accountName Account name.
 * @param accountType account type
 * @param sharedOnTimestamp Epoch timestamp in seconds for the shared audience event
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class SharedAudienceAccount (
    /* Account ID (ad account or business ID). */
    @SerializedName("accountId") private val _accountId: kotlin.String?,
    /* Account name. */
    @SerializedName("accountName") private val _accountName: kotlin.String?,
    /* account type */
    @SerializedName("accountType") private val _accountType: SharedAudienceAccount.AccountType?,
    /* Epoch timestamp in seconds for the shared audience event */
    @SerializedName("sharedOnTimestamp") private val _sharedOnTimestamp: kotlin.Int?
) {

    /**
    * account type
    * Values: AD_ACCOUNT,BUSINESS_ACCOUNT
    */
    enum class AccountType(val value: kotlin.String){
    
        AD_ACCOUNT("AD_ACCOUNT"),
    
        BUSINESS_ACCOUNT("BUSINESS_ACCOUNT");
    
    }

        val accountId get() = _accountId ?: throw IllegalArgumentException("accountId is required")
                    
        val accountName get() = _accountName ?: throw IllegalArgumentException("accountName is required")
                    
        val accountType get() = _accountType ?: throw IllegalArgumentException("accountType is required")
                    
        val sharedOnTimestamp get() = _sharedOnTimestamp ?: throw IllegalArgumentException("sharedOnTimestamp is required")
                    
}

