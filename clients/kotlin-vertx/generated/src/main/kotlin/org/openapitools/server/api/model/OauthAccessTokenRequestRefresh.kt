/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * A request to exchange a refresh token for a new access token.
 * @param grantType 
 * @param refreshToken 
 * @param scope 
 * @param refreshOn Setting this field to <code>true</code> will add a new refresh token to your 200 response, as well as the refresh_token_expires_in and refresh_token_expires_at fields. To see the structure of this payload, set the 200 response_type to \"everlasting_refresh\".
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class OauthAccessTokenRequestRefresh (
    @SerializedName("grantType") private val _grantType: OauthAccessTokenRequestRefresh.GrantType?,
    @SerializedName("refreshToken") private val _refreshToken: kotlin.String?,
    val scope: kotlin.String? = null,
    /* Setting this field to <code>true</code> will add a new refresh token to your 200 response, as well as the refresh_token_expires_in and refresh_token_expires_at fields. To see the structure of this payload, set the 200 response_type to \"everlasting_refresh\". */
    val refreshOn: kotlin.Boolean? = null
) {

    /**
    * 
    * Values: authorization_code,refresh_token,client_credentials
    */
    enum class GrantType(val value: kotlin.String){
    
        authorization_code("authorization_code"),
    
        refresh_token("refresh_token"),
    
        client_credentials("client_credentials");
    
    }

        val grantType get() = _grantType ?: throw IllegalArgumentException("grantType is required")
                    
        val refreshToken get() = _refreshToken ?: throw IllegalArgumentException("refreshToken is required")
                    
}

