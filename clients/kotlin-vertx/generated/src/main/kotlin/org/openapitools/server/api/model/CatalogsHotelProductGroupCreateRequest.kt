/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.CatalogsHotelProductGroupFilters

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Request object for creating a hotel product group.
 * @param catalogType 
 * @param name 
 * @param filters 
 * @param catalogId Catalog id pertaining to the hotel product group.
 * @param description 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class CatalogsHotelProductGroupCreateRequest (
    @SerializedName("catalogType") private val _catalogType: CatalogsHotelProductGroupCreateRequest.CatalogType?,
    @SerializedName("name") private val _name: kotlin.String?,
    @SerializedName("filters") private val _filters: CatalogsHotelProductGroupFilters?,
    /* Catalog id pertaining to the hotel product group. */
    @SerializedName("catalogId") private val _catalogId: kotlin.String?,
    val description: kotlin.String? = null
) {

    /**
    * 
    * Values: HOTEL
    */
    enum class CatalogType(val value: kotlin.String){
    
        HOTEL("HOTEL");
    
    }

        val catalogType get() = _catalogType ?: throw IllegalArgumentException("catalogType is required")
                    
        val name get() = _name ?: throw IllegalArgumentException("name is required")
                    
        val filters get() = _filters ?: throw IllegalArgumentException("filters is required")
                    
        val catalogId get() = _catalogId ?: throw IllegalArgumentException("catalogId is required")
                    
}

