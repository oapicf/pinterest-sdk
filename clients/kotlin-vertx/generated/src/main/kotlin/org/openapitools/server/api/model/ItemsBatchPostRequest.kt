/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.BatchOperation
import org.openapitools.server.api.model.CatalogsItemsBatchRequest
import org.openapitools.server.api.model.CatalogsItemsRequestLanguage
import org.openapitools.server.api.model.CatalogsVerticalBatchRequest
import org.openapitools.server.api.model.Country
import org.openapitools.server.api.model.ItemDeleteBatchRecord

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param country 
 * @param language 
 * @param operation 
 * @param items Array with catalogs items
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class ItemsBatchPostRequest (
    @SerializedName("country") private val _country: Country?,
    @SerializedName("language") private val _language: CatalogsItemsRequestLanguage?,
    @SerializedName("operation") private val _operation: BatchOperation?,
    /* Array with catalogs items */
    @SerializedName("items") private val _items: kotlin.Array<ItemDeleteBatchRecord>?,
    @SerializedName("catalogType") private val _catalogType: ItemsBatchPostRequest.CatalogType?,
    /* Catalog id pertaining to the creative assets item. If not provided, default to oldest creative assets catalog */
    val catalogId: kotlin.String? = null
) {

        val country get() = _country ?: throw IllegalArgumentException("country is required")
                    
        val language get() = _language ?: throw IllegalArgumentException("language is required")
                    
        val operation get() = _operation ?: throw IllegalArgumentException("operation is required")
                    
        val items get() = _items ?: throw IllegalArgumentException("items is required")
                    
        val catalogType get() = _catalogType ?: throw IllegalArgumentException("catalogType is required")
                    
}

