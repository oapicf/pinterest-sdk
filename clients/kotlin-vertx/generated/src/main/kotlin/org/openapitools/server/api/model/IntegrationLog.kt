/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.IntegrationLogClientError
import org.openapitools.server.api.model.IntegrationLogClientRequest

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Schema for log sent from an integration application.
 * @param clientTimestamp Timestamp in milliseconds of when the log was executed at the client.
 * @param eventType Log event type
 * @param logLevel Log level type
 * @param externalBusinessId 
 * @param advertiserId 
 * @param merchantId 
 * @param tagId 
 * @param feedProfileId 
 * @param message Explanation of the event that occured.
 * @param appVersionNumber Version number of the integration application.
 * @param platformVersionNumber Version number of the platform the integration application is running on.
 * @param error 
 * @param request 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class IntegrationLog (
    /* Timestamp in milliseconds of when the log was executed at the client. */
    @SerializedName("clientTimestamp") private val _clientTimestamp: kotlin.Int?,
    /* Log event type */
    @SerializedName("eventType") private val _eventType: IntegrationLog.EventType?,
    /* Log level type */
    @SerializedName("logLevel") private val _logLevel: IntegrationLog.LogLevel?,
    val externalBusinessId: kotlin.String? = null,
    val advertiserId: kotlin.String? = null,
    val merchantId: kotlin.String? = null,
    val tagId: kotlin.String? = null,
    val feedProfileId: kotlin.String? = null,
    /* Explanation of the event that occured. */
    val message: kotlin.String? = null,
    /* Version number of the integration application. */
    val appVersionNumber: kotlin.String? = null,
    /* Version number of the platform the integration application is running on. */
    val platformVersionNumber: kotlin.String? = null,
    val error: IntegrationLogClientError? = null,
    val request: IntegrationLogClientRequest? = null
) {

    /**
    * Log event type
    * Values: APP,API
    */
    enum class EventType(val value: kotlin.String){
    
        APP("APP"),
    
        API("API");
    
    }

    /**
    * Log level type
    * Values: INFO,WARN,ERROR
    */
    enum class LogLevel(val value: kotlin.String){
    
        INFO("INFO"),
    
        WARN("WARN"),
    
        ERROR("ERROR");
    
    }

        val clientTimestamp get() = _clientTimestamp ?: throw IllegalArgumentException("clientTimestamp is required")
                    
        val eventType get() = _eventType ?: throw IllegalArgumentException("eventType is required")
                    
        val logLevel get() = _logLevel ?: throw IllegalArgumentException("logLevel is required")
                    
}

