/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.api.model

import org.openapitools.server.api.model.LeadFormCommonPolicyLinksInner
import org.openapitools.server.api.model.LeadFormQuestion
import org.openapitools.server.api.model.LeadFormStatus

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * 
 * @param name Internal name of the lead form.
 * @param privacyPolicyLink A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language.
 * @param hasAcceptedTerms Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO
 * @param completionMessage A message for people who complete the form to let them know what happens next.
 * @param questions List of questions to be displayed on the lead form.
 * @param status 
 * @param disclosureLanguage Additional disclosure language to be included in the lead form.
 * @param policyLinks List of additional policy links to be displayed on the lead form.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class LeadFormCreateRequest (
    /* Internal name of the lead form. */
    @SerializedName("name") private val _name: kotlin.String?,
    /* A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language. */
    @SerializedName("privacyPolicyLink") private val _privacyPolicyLink: kotlin.String?,
    /* Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO */
    @SerializedName("hasAcceptedTerms") private val _hasAcceptedTerms: kotlin.Boolean?,
    /* A message for people who complete the form to let them know what happens next. */
    @SerializedName("completionMessage") private val _completionMessage: kotlin.String?,
    /* List of questions to be displayed on the lead form. */
    @SerializedName("questions") private val _questions: kotlin.Array<LeadFormQuestion>?,
    val status: LeadFormStatus? = null,
    /* Additional disclosure language to be included in the lead form. */
    val disclosureLanguage: kotlin.String? = null,
    /* List of additional policy links to be displayed on the lead form. */
    val policyLinks: kotlin.Array<LeadFormCommonPolicyLinksInner>? = null
) {

        val name get() = _name ?: throw IllegalArgumentException("name is required")
                    
        val privacyPolicyLink get() = _privacyPolicyLink ?: throw IllegalArgumentException("privacyPolicyLink is required")
                    
        val hasAcceptedTerms get() = _hasAcceptedTerms ?: throw IllegalArgumentException("hasAcceptedTerms is required")
                    
        val completionMessage get() = _completionMessage ?: throw IllegalArgumentException("completionMessage is required")
                    
        val questions get() = _questions ?: throw IllegalArgumentException("questions is required")
                    
}

