/*
  Pinterest REST API

  Pinterest's REST API

  The version of the OpenAPI document: 5.14.0

  Contact: blah+oapicf@cliffano.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.boardsservice;

import "google/protobuf/empty.proto";
import public "models/board.proto";
import public "models/board_section.proto";
import public "models/board_sections_list200_response.proto";
import public "models/board_update.proto";
import public "models/boards_list200_response.proto";
import public "models/boards_list_pins200_response.proto";
import public "models/error.proto";

service BoardsService {
  rpc BoardSectionsCreate (BoardSectionsCreateRequest) returns (BoardSection);

  rpc BoardSectionsDelete (BoardSectionsDeleteRequest) returns (google.protobuf.Empty);

  rpc BoardSectionsList (BoardSectionsListRequest) returns (BoardSectionsList200Response);

  rpc BoardSectionsListPins (BoardSectionsListPinsRequest) returns (BoardsListPins200Response);

  rpc BoardSectionsUpdate (BoardSectionsUpdateRequest) returns (BoardSection);

  rpc BoardsCreate (BoardsCreateRequest) returns (Board);

  rpc BoardsDelete (BoardsDeleteRequest) returns (google.protobuf.Empty);

  rpc BoardsGet (BoardsGetRequest) returns (Board);

  rpc BoardsList (BoardsListRequest) returns (BoardsList200Response);

  rpc BoardsListPins (BoardsListPinsRequest) returns (BoardsListPins200Response);

  rpc BoardsUpdate (BoardsUpdateRequest) returns (Board);

}

message BoardSectionsCreateRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Create a board section.
  BoardSection boardSection = 2;
  // Unique identifier of an ad account.
  string adAccountId = 3;

}

message BoardSectionsDeleteRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of a board section.
  string sectionId = 2;
  // Unique identifier of an ad account.
  string adAccountId = 3;

}

message BoardSectionsListRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of an ad account.
  string adAccountId = 2;
  // Cursor used to fetch the next page of items
  string bookmark = 3;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 4;

}

message BoardSectionsListPinsRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of a board section.
  string sectionId = 2;
  // Unique identifier of an ad account.
  string adAccountId = 3;
  // Cursor used to fetch the next page of items
  string bookmark = 4;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 5;

}

message BoardSectionsUpdateRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of a board section.
  string sectionId = 2;
  // Update a board section.
  BoardSection boardSection = 3;
  // Unique identifier of an ad account.
  string adAccountId = 4;

}

message BoardsCreateRequest {
  // Create a board using a single board json object.
  Board board = 1;
  // Unique identifier of an ad account.
  string adAccountId = 2;

}

message BoardsDeleteRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of an ad account.
  string adAccountId = 2;

}

message BoardsGetRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Unique identifier of an ad account.
  string adAccountId = 2;

}

message BoardsListRequest {
  // Unique identifier of an ad account.
  string adAccountId = 1;
  // Cursor used to fetch the next page of items
  string bookmark = 2;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 3;
  // Privacy setting for a board.
  string privacy = 4;

}

message BoardsListPinsRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Cursor used to fetch the next page of items
  string bookmark = 2;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 3;
  // Pin creative types filter. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.
  repeated string creativeTypes = 4;
  // Unique identifier of an ad account.
  string adAccountId = 5;
  // Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
  bool pinMetrics = 6;

}

message BoardsUpdateRequest {
  // Unique identifier of a board.
  string boardId = 1;
  // Update a board.
  BoardUpdate boardUpdate = 2;
  // Unique identifier of an ad account.
  string adAccountId = 3;

}

