/*
  Pinterest REST API

  Pinterest's REST API

  The version of the OpenAPI document: 5.14.0

  Contact: blah+oapicf@cliffano.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.businessaccessassetsservice;

import "google/protobuf/empty.proto";
import public "models/business_asset_members_get200_response.proto";
import public "models/business_asset_partners_get200_response.proto";
import public "models/business_assets_get200_response.proto";
import public "models/business_member_assets_get200_response.proto";
import public "models/business_members_asset_access_delete_request.proto";
import public "models/business_partner_asset_access_get200_response.proto";
import public "models/create_asset_group_body.proto";
import public "models/create_asset_group_response.proto";
import public "models/delete_asset_group_body.proto";
import public "models/delete_asset_group_response.proto";
import public "models/delete_member_access_results_response_array.proto";
import public "models/delete_partner_asset_access_body.proto";
import public "models/delete_partner_assets_results_response_array.proto";
import public "models/error.proto";
import public "models/partner_type.proto";
import public "models/permissions_with_owner.proto";
import public "models/update_asset_group_body.proto";
import public "models/update_asset_group_response.proto";
import public "models/update_member_asset_access_body.proto";
import public "models/update_member_assets_results_response_array.proto";
import public "models/update_partner_asset_access_body.proto";
import public "models/update_partner_assets_results_response_array.proto";

service BusinessAccessAssetsService {
  rpc AssetGroupCreate (AssetGroupCreateRequest) returns (CreateAssetGroupResponse);

  rpc AssetGroupDelete (AssetGroupDeleteRequest) returns (DeleteAssetGroupResponse);

  rpc AssetGroupUpdate (AssetGroupUpdateRequest) returns (UpdateAssetGroupResponse);

  rpc BusinessAssetMembersGet (BusinessAssetMembersGetRequest) returns (BusinessAssetMembersGet200Response);

  rpc BusinessAssetPartnersGet (BusinessAssetPartnersGetRequest) returns (BusinessAssetPartnersGet200Response);

  rpc BusinessAssetsGet (BusinessAssetsGetRequest) returns (BusinessAssetsGet200Response);

  rpc BusinessMemberAssetsGet (BusinessMemberAssetsGetRequest) returns (BusinessMemberAssetsGet200Response);

  rpc BusinessMembersAssetAccessDelete (BusinessMembersAssetAccessDeleteRequest) returns (DeleteMemberAccessResultsResponseArray);

  rpc BusinessMembersAssetAccessUpdate (BusinessMembersAssetAccessUpdateRequest) returns (UpdateMemberAssetsResultsResponseArray);

  rpc BusinessPartnerAssetAccessGet (BusinessPartnerAssetAccessGetRequest) returns (BusinessPartnerAssetAccessGet200Response);

  rpc DeletePartnerAssetAccessHandlerImpl (DeletePartnerAssetAccessHandlerImplRequest) returns (DeletePartnerAssetsResultsResponseArray);

  rpc UpdatePartnerAssetAccessHandlerImpl (UpdatePartnerAssetAccessHandlerImplRequest) returns (UpdatePartnerAssetsResultsResponseArray);

}

message AssetGroupCreateRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  CreateAssetGroupBody createAssetGroupBody = 2;

}

message AssetGroupDeleteRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  DeleteAssetGroupBody deleteAssetGroupBody = 2;

}

message AssetGroupUpdateRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  UpdateAssetGroupBody updateAssetGroupBody = 2;

}

message BusinessAssetMembersGetRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // Unique identifier of a business asset.
  string assetId = 2;
  // Cursor used to fetch the next page of items
  string bookmark = 3;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 4;
  // An index to start fetching the results from. Only the results starting from this index will be returned.
  int32 startIndex = 5;

}

message BusinessAssetPartnersGetRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // Unique identifier of a business asset.
  string assetId = 2;
  // An index to start fetching the results from. Only the results starting from this index will be returned.
  int32 startIndex = 3;
  // Cursor used to fetch the next page of items
  string bookmark = 4;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 5;

}

message BusinessAssetsGetRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned.
  repeated PermissionsWithOwner permissions = 2;
  // A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child.
  string childAssetId = 3;
  // An asset group unique identifier. Used to fetch assets contained within the specified asset group.
  string assetGroupId = 4;
  // A resource type to filter the assets by. Only assets of the specified type will be returned.
  string assetType = 5;
  // An index to start fetching the results from. Only the results starting from this index will be returned.
  int32 startIndex = 6;
  // Cursor used to fetch the next page of items
  string bookmark = 7;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 8;

}

message BusinessMemberAssetsGetRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // The member id to fetch assets for.
  string memberId = 2;
  // A resource type to filter the assets by. Only assets of the specified type will be returned.
  string assetType = 3;
  // An index to start fetching the results from. Only the results starting from this index will be returned.
  int32 startIndex = 4;
  // Cursor used to fetch the next page of items
  string bookmark = 5;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 6;

}

message BusinessMembersAssetAccessDeleteRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // List member assset permissions to delete.
  BusinessMembersAssetAccessDeleteRequest businessMembersAssetAccessDeleteRequest = 2;

}

message BusinessMembersAssetAccessUpdateRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // List of member asset permissions to create or update.
  UpdateMemberAssetAccessBody updateMemberAssetAccessBody = 2;

}

message BusinessPartnerAssetAccessGetRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // The partner id to be bound to the Business
  string partnerId = 2;
  // Specifies whether to fetch internal or external (shared) partners. If partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br> If partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset.
  PartnerType partnerType = 3;
  // A resource type to filter the assets by. Only assets of the specified type will be returned.
  string assetType = 4;
  // An index to start fetching the results from. Only the results starting from this index will be returned.
  int32 startIndex = 5;
  // Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  int32 pageSize = 6;
  // Cursor used to fetch the next page of items
  string bookmark = 7;

}

message DeletePartnerAssetAccessHandlerImplRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  DeletePartnerAssetAccessBody deletePartnerAssetAccessBody = 2;

}

message UpdatePartnerAssetAccessHandlerImplRequest {
  // Unique identifier of the requesting business.
  string businessId = 1;
  // A list of assets and permissions to assign to your partners.
  UpdatePartnerAssetAccessBody updatePartnerAssetAccessBody = 2;

}

