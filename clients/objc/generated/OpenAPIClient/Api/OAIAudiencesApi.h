#import <Foundation/Foundation.h>
#import "OAIAudience.h"
#import "OAIAudienceCreateCustomRequest.h"
#import "OAIAudienceCreateRequest.h"
#import "OAIAudienceUpdateRequest.h"
#import "OAIAudiencesList200Response.h"
#import "OAIError.h"
#import "OAIApi.h"

/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIAudiencesApi: NSObject <OAIApi>

extern NSString* kOAIAudiencesApiErrorDomain;
extern NSInteger kOAIAudiencesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create audience
/// Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with the ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude specific audience_ids when you create an ad group. <p/> For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a>.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param audienceCreateRequest List of ads to create, size limit [1, 30]
/// 
///  code:200 message:"Success",
///  code:0 message:"Unexpected error"
///
/// @return OAIAudience*
-(NSURLSessionTask*) audiencesCreateWithAdAccountId: (NSString*) adAccountId
    audienceCreateRequest: (OAIAudienceCreateRequest*) audienceCreateRequest
    completionHandler: (void (^)(OAIAudience* output, NSError* error)) handler;


/// Create custom audience
/// Create a custom audience and find the audiences you want your ads to reach.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param audienceCreateCustomRequest Custom audience to create.
/// 
///  code:200 message:"Success",
///  code:0 message:"Unexpected error"
///
/// @return OAIAudience*
-(NSURLSessionTask*) audiencesCreateCustomWithAdAccountId: (NSString*) adAccountId
    audienceCreateCustomRequest: (OAIAudienceCreateCustomRequest*) audienceCreateCustomRequest
    completionHandler: (void (^)(OAIAudience* output, NSError* error)) handler;


/// Get audience
/// Get a specific audience given the audience ID.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param audienceId Unique identifier of an audience
/// 
///  code:200 message:"Success",
///  code:404 message:"Audience not found.",
///  code:0 message:"Unexpected error."
///
/// @return OAIAudience*
-(NSURLSessionTask*) audiencesGetWithAdAccountId: (NSString*) adAccountId
    audienceId: (NSString*) audienceId
    completionHandler: (void (^)(OAIAudience* output, NSError* error)) handler;


/// List audiences
/// Get list of audiences for the ad account.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param bookmark Cursor used to fetch the next page of items (optional)
/// @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. For received audiences, it is sorted by sharing event time. Note that higher-value IDs are associated with more-recently added items. (optional)
/// @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional) (default to @25)
/// @param ownershipType Filter audiences by ownership type. (optional) (default to @"OWNED")
/// 
///  code:200 message:"Success",
///  code:400 message:"Invalid ad account audience parameters.",
///  code:0 message:"Unexpected error"
///
/// @return OAIAudiencesList200Response*
-(NSURLSessionTask*) audiencesListWithAdAccountId: (NSString*) adAccountId
    bookmark: (NSString*) bookmark
    order: (NSString*) order
    pageSize: (NSNumber*) pageSize
    ownershipType: (NSString*) ownershipType
    completionHandler: (void (^)(OAIAudiencesList200Response* output, NSError* error)) handler;


/// Update audience
/// Update (edit or remove) an existing targeting audience.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param audienceId Unique identifier of an audience
/// @param audienceUpdateRequest The audience to be updated. (optional)
/// 
///  code:200 message:"Success",
///  code:0 message:"Unexpected error"
///
/// @return OAIAudience*
-(NSURLSessionTask*) audiencesUpdateWithAdAccountId: (NSString*) adAccountId
    audienceId: (NSString*) audienceId
    audienceUpdateRequest: (OAIAudienceUpdateRequest*) audienceUpdateRequest
    completionHandler: (void (^)(OAIAudience* output, NSError* error)) handler;



@end
