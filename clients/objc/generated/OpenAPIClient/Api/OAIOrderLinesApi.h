#import <Foundation/Foundation.h>
#import "OAIError.h"
#import "OAIOrderLine.h"
#import "OAIOrderLinesList200Response.h"
#import "OAIApi.h"

/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIOrderLinesApi: NSObject <OAIApi>

extern NSString* kOAIOrderLinesApiErrorDomain;
extern NSInteger kOAIOrderLinesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get order line
/// Get a specific existing order line associated with an ad account.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param orderLineId Unique identifier of an order line.
/// 
///  code:200 message:"Success",
///  code:0 message:"Unexpected error"
///
/// @return OAIOrderLine*
-(NSURLSessionTask*) orderLinesGetWithAdAccountId: (NSString*) adAccountId
    orderLineId: (NSString*) orderLineId
    completionHandler: (void (^)(OAIOrderLine* output, NSError* error)) handler;


/// Get order lines
/// List existing order lines associated with an ad account.
///
/// @param adAccountId Unique identifier of an ad account.
/// @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional) (default to @25)
/// @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
/// @param bookmark Cursor used to fetch the next page of items (optional)
/// 
///  code:200 message:"Success",
///  code:0 message:"Unexpected error"
///
/// @return OAIOrderLinesList200Response*
-(NSURLSessionTask*) orderLinesListWithAdAccountId: (NSString*) adAccountId
    pageSize: (NSNumber*) pageSize
    order: (NSString*) order
    bookmark: (NSString*) bookmark
    completionHandler: (void (^)(OAIOrderLinesList200Response* output, NSError* error)) handler;



@end
