# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "uri"

module OpenAPIClient
  class BusinessAccessAssetsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new asset group.
    # Create a new asset group with the specified parameters. - An <a href=\"https://help.pinterest.com/en/business/article/asset-groups\">asset group</a> is a custom group of assets based on how you’d like to manage your accounts.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param create_asset_group_body [CreateAssetGroupBody] 
    # @return [CreateAssetGroupResponse]
    def asset_group_create(business_id : String, create_asset_group_body : CreateAssetGroupBody)
      data, _status_code, _headers = asset_group_create_with_http_info(business_id, create_asset_group_body)
      data
    end

    # Create a new asset group.
    # Create a new asset group with the specified parameters. - An &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/asset-groups\&quot;&gt;asset group&lt;/a&gt; is a custom group of assets based on how you’d like to manage your accounts.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param create_asset_group_body [CreateAssetGroupBody] 
    # @return [Array<(CreateAssetGroupResponse, Integer, Hash)>] CreateAssetGroupResponse data, response status code and response headers
    def asset_group_create_with_http_info(business_id : String, create_asset_group_body : CreateAssetGroupBody)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.asset_group_create ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.asset_group_create")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_create, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_create, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_create, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "create_asset_group_body" is set
      if @api_client.config.client_side_validation && create_asset_group_body.nil?
        raise ArgumentError.new("Missing the required parameter 'create_asset_group_body' when calling BusinessAccessAssetsApi.asset_group_create")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/asset_groups".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = create_asset_group_body.to_json

      # return_type
      return_type = "CreateAssetGroupResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.asset_group_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#asset_group_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CreateAssetGroupResponse.from_json(data), status_code, headers
    end

    # Delete asset groups.
    # Delete a batch of asset groups.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param delete_asset_group_body [DeleteAssetGroupBody] 
    # @return [DeleteAssetGroupResponse]
    def asset_group_delete(business_id : String, delete_asset_group_body : DeleteAssetGroupBody)
      data, _status_code, _headers = asset_group_delete_with_http_info(business_id, delete_asset_group_body)
      data
    end

    # Delete asset groups.
    # Delete a batch of asset groups.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param delete_asset_group_body [DeleteAssetGroupBody] 
    # @return [Array<(DeleteAssetGroupResponse, Integer, Hash)>] DeleteAssetGroupResponse data, response status code and response headers
    def asset_group_delete_with_http_info(business_id : String, delete_asset_group_body : DeleteAssetGroupBody)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.asset_group_delete ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.asset_group_delete")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_delete, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_delete, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_delete, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "delete_asset_group_body" is set
      if @api_client.config.client_side_validation && delete_asset_group_body.nil?
        raise ArgumentError.new("Missing the required parameter 'delete_asset_group_body' when calling BusinessAccessAssetsApi.asset_group_delete")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/asset_groups".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = delete_asset_group_body.to_json

      # return_type
      return_type = "DeleteAssetGroupResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.asset_group_delete",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#asset_group_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return DeleteAssetGroupResponse.from_json(data), status_code, headers
    end

    # Update asset groups.
    # Update a batch of asset groups with the specified parameters.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param update_asset_group_body [UpdateAssetGroupBody] 
    # @return [UpdateAssetGroupResponse]
    def asset_group_update(business_id : String, update_asset_group_body : UpdateAssetGroupBody)
      data, _status_code, _headers = asset_group_update_with_http_info(business_id, update_asset_group_body)
      data
    end

    # Update asset groups.
    # Update a batch of asset groups with the specified parameters.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param update_asset_group_body [UpdateAssetGroupBody] 
    # @return [Array<(UpdateAssetGroupResponse, Integer, Hash)>] UpdateAssetGroupResponse data, response status code and response headers
    def asset_group_update_with_http_info(business_id : String, update_asset_group_body : UpdateAssetGroupBody)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.asset_group_update ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.asset_group_update")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_update, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_update, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.asset_group_update, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "update_asset_group_body" is set
      if @api_client.config.client_side_validation && update_asset_group_body.nil?
        raise ArgumentError.new("Missing the required parameter 'update_asset_group_body' when calling BusinessAccessAssetsApi.asset_group_update")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/asset_groups".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = update_asset_group_body.to_json

      # return_type
      return_type = "UpdateAssetGroupResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.asset_group_update",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#asset_group_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return UpdateAssetGroupResponse.from_json(data), status_code, headers
    end

    # Get members with access to asset
    # Get all the members the requesting business has granted access to on the given asset.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param asset_id [String] Unique identifier of a business asset.
    # @return [BusinessAssetMembersGet200Response]
    def business_asset_members_get(business_id : String, asset_id : String, bookmark : String?, page_size : Int32?, start_index : Int32?)
      data, _status_code, _headers = business_asset_members_get_with_http_info(business_id, asset_id, bookmark, page_size, start_index)
      data
    end

    # Get members with access to asset
    # Get all the members the requesting business has granted access to on the given asset.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param asset_id [String] Unique identifier of a business asset.
    # @return [Array<(BusinessAssetMembersGet200Response, Integer, Hash)>] BusinessAssetMembersGet200Response data, response status code and response headers
    def business_asset_members_get_with_http_info(business_id : String, asset_id : String, bookmark : String?, page_size : Int32?, start_index : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_asset_members_get ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_asset_members_get")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_asset_members_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_asset_members_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_asset_members_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "asset_id" is set
      if @api_client.config.client_side_validation && asset_id.nil?
        raise ArgumentError.new("Missing the required parameter 'asset_id' when calling BusinessAccessAssetsApi.business_asset_members_get")
      end
      if @api_client.config.client_side_validation && asset_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"asset_id\" when calling BusinessAccessAssetsApi.business_asset_members_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && asset_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"asset_id\" when calling BusinessAccessAssetsApi.business_asset_members_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && asset_id !~ pattern
        raise ArgumentError.new("invalid value for \"asset_id\" when calling BusinessAccessAssetsApi.business_asset_members_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_asset_members_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_asset_members_get, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !start_index.nil? && start_index < 0
        raise ArgumentError.new("invalid value for \"start_index\" when calling BusinessAccessAssetsApi.business_asset_members_get, must be greater than or equal to 0.")
      end

      # resource path
      local_var_path = "/businesses/{business_id}/assets/{asset_id}/members".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s)).sub("{" + "asset_id" + "}", URI.encode_path(asset_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["start_index"] = start_index.to_s unless start_index.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "BusinessAssetMembersGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_asset_members_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_asset_members_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return BusinessAssetMembersGet200Response.from_json(data), status_code, headers
    end

    # Get partners with access to asset
    # Get all the partners the requesting business has granted access to on the given asset. Note: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with you cannot be shared with a different partner.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param asset_id [String] Unique identifier of a business asset.
    # @return [BusinessAssetPartnersGet200Response]
    def business_asset_partners_get(business_id : String, asset_id : String, start_index : Int32?, bookmark : String?, page_size : Int32?)
      data, _status_code, _headers = business_asset_partners_get_with_http_info(business_id, asset_id, start_index, bookmark, page_size)
      data
    end

    # Get partners with access to asset
    # Get all the partners the requesting business has granted access to on the given asset. Note: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with you cannot be shared with a different partner.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param asset_id [String] Unique identifier of a business asset.
    # @return [Array<(BusinessAssetPartnersGet200Response, Integer, Hash)>] BusinessAssetPartnersGet200Response data, response status code and response headers
    def business_asset_partners_get_with_http_info(business_id : String, asset_id : String, start_index : Int32?, bookmark : String?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_asset_partners_get ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_asset_partners_get")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_asset_partners_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_asset_partners_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_asset_partners_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "asset_id" is set
      if @api_client.config.client_side_validation && asset_id.nil?
        raise ArgumentError.new("Missing the required parameter 'asset_id' when calling BusinessAccessAssetsApi.business_asset_partners_get")
      end
      if @api_client.config.client_side_validation && asset_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"asset_id\" when calling BusinessAccessAssetsApi.business_asset_partners_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && asset_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"asset_id\" when calling BusinessAccessAssetsApi.business_asset_partners_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && asset_id !~ pattern
        raise ArgumentError.new("invalid value for \"asset_id\" when calling BusinessAccessAssetsApi.business_asset_partners_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !start_index.nil? && start_index < 0
        raise ArgumentError.new("invalid value for \"start_index\" when calling BusinessAccessAssetsApi.business_asset_partners_get, must be greater than or equal to 0.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_asset_partners_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_asset_partners_get, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/businesses/{business_id}/assets/{asset_id}/partners".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s)).sub("{" + "asset_id" + "}", URI.encode_path(asset_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["start_index"] = start_index.to_s unless start_index.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "BusinessAssetPartnersGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_asset_partners_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_asset_partners_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return BusinessAssetPartnersGet200Response.from_json(data), status_code, headers
    end

    # List business assets
    # Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
    # @param business_id [String] Unique identifier of the requesting business.
    # @return [BusinessAssetsGet200Response]
    def business_assets_get(business_id : String, permissions : Array(PermissionsWithOwner)?, child_asset_id : String?, asset_group_id : String?, asset_type : String?, start_index : Int32?, bookmark : String?, page_size : Int32?)
      data, _status_code, _headers = business_assets_get_with_http_info(business_id, permissions, child_asset_id, asset_group_id, asset_type, start_index, bookmark, page_size)
      data
    end

    # List business assets
    # Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
    # @param business_id [String] Unique identifier of the requesting business.
    # @return [Array<(BusinessAssetsGet200Response, Integer, Hash)>] BusinessAssetsGet200Response data, response status code and response headers
    def business_assets_get_with_http_info(business_id : String, permissions : Array(PermissionsWithOwner)?, child_asset_id : String?, asset_group_id : String?, asset_type : String?, start_index : Int32?, bookmark : String?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_assets_get ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_assets_get")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_assets_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_assets_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_assets_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !child_asset_id.nil? && child_asset_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"child_asset_id\" when calling BusinessAccessAssetsApi.business_assets_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && !child_asset_id.nil? && child_asset_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"child_asset_id\" when calling BusinessAccessAssetsApi.business_assets_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && child_asset_id.nil? && child_asset_id !~ pattern
        raise ArgumentError.new("invalid value for \"child_asset_id\" when calling BusinessAccessAssetsApi.business_assets_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !asset_group_id.nil? && asset_group_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"asset_group_id\" when calling BusinessAccessAssetsApi.business_assets_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && !asset_group_id.nil? && asset_group_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"asset_group_id\" when calling BusinessAccessAssetsApi.business_assets_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && asset_group_id.nil? && asset_group_id !~ pattern
        raise ArgumentError.new("invalid value for \"asset_group_id\" when calling BusinessAccessAssetsApi.business_assets_get, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["AD_ACCOUNT", "PROFILE", "ASSET_GROUP"]
      if @api_client.config.client_side_validation && asset_type && !allowable_values.includes?(asset_type)
        raise ArgumentError.new("invalid value for \"asset_type\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !start_index.nil? && start_index < 0
        raise ArgumentError.new("invalid value for \"start_index\" when calling BusinessAccessAssetsApi.business_assets_get, must be greater than or equal to 0.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_assets_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_assets_get, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/businesses/{business_id}/assets".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["permissions"] = @api_client.build_collection_param(permissions, :multi)
      query_params["child_asset_id"] = child_asset_id.to_s unless child_asset_id.nil?
      query_params["asset_group_id"] = asset_group_id.to_s unless asset_group_id.nil?
      query_params["asset_type"] = asset_type.to_s unless asset_type.nil?
      query_params["start_index"] = start_index.to_s unless start_index.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "BusinessAssetsGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_assets_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_assets_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return BusinessAssetsGet200Response.from_json(data), status_code, headers
    end

    # Get assets assigned to a member
    # Get assets on which you assigned asset permissions to the given member. Can be used to: - get all assets, regardless of asset type or - get assets of one asset type by using the asset_type query. The return response will include the permissions the member has to that asset and the asset type.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param member_id [String] The member id to fetch assets for.
    # @return [BusinessMemberAssetsGet200Response]
    def business_member_assets_get(business_id : String, member_id : String, asset_type : String?, start_index : Int32?, bookmark : String?, page_size : Int32?)
      data, _status_code, _headers = business_member_assets_get_with_http_info(business_id, member_id, asset_type, start_index, bookmark, page_size)
      data
    end

    # Get assets assigned to a member
    # Get assets on which you assigned asset permissions to the given member. Can be used to: - get all assets, regardless of asset type or - get assets of one asset type by using the asset_type query. The return response will include the permissions the member has to that asset and the asset type.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param member_id [String] The member id to fetch assets for.
    # @return [Array<(BusinessMemberAssetsGet200Response, Integer, Hash)>] BusinessMemberAssetsGet200Response data, response status code and response headers
    def business_member_assets_get_with_http_info(business_id : String, member_id : String, asset_type : String?, start_index : Int32?, bookmark : String?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_member_assets_get ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_member_assets_get")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_member_assets_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_member_assets_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_member_assets_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "member_id" is set
      if @api_client.config.client_side_validation && member_id.nil?
        raise ArgumentError.new("Missing the required parameter 'member_id' when calling BusinessAccessAssetsApi.business_member_assets_get")
      end
      if @api_client.config.client_side_validation && member_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"member_id\" when calling BusinessAccessAssetsApi.business_member_assets_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && member_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"member_id\" when calling BusinessAccessAssetsApi.business_member_assets_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && member_id !~ pattern
        raise ArgumentError.new("invalid value for \"member_id\" when calling BusinessAccessAssetsApi.business_member_assets_get, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["AD_ACCOUNT", "PROFILE", "ASSET_GROUP"]
      if @api_client.config.client_side_validation && asset_type && !allowable_values.includes?(asset_type)
        raise ArgumentError.new("invalid value for \"asset_type\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !start_index.nil? && start_index < 0
        raise ArgumentError.new("invalid value for \"start_index\" when calling BusinessAccessAssetsApi.business_member_assets_get, must be greater than or equal to 0.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_member_assets_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_member_assets_get, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/businesses/{business_id}/members/{member_id}/assets".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s)).sub("{" + "member_id" + "}", URI.encode_path(member_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["asset_type"] = asset_type.to_s unless asset_type.nil?
      query_params["start_index"] = start_index.to_s unless start_index.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "BusinessMemberAssetsGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_member_assets_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_member_assets_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return BusinessMemberAssetsGet200Response.from_json(data), status_code, headers
    end

    # Delete member access to asset
    # Terminate multiple members' access to an asset.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param business_members_asset_access_delete_request [BusinessMembersAssetAccessDeleteRequest] List member assset permissions to delete.
    # @return [DeleteMemberAccessResultsResponseArray]
    def business_members_asset_access_delete(business_id : String, business_members_asset_access_delete_request : BusinessMembersAssetAccessDeleteRequest)
      data, _status_code, _headers = business_members_asset_access_delete_with_http_info(business_id, business_members_asset_access_delete_request)
      data
    end

    # Delete member access to asset
    # Terminate multiple members&#39; access to an asset.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param business_members_asset_access_delete_request [BusinessMembersAssetAccessDeleteRequest] List member assset permissions to delete.
    # @return [Array<(DeleteMemberAccessResultsResponseArray, Integer, Hash)>] DeleteMemberAccessResultsResponseArray data, response status code and response headers
    def business_members_asset_access_delete_with_http_info(business_id : String, business_members_asset_access_delete_request : BusinessMembersAssetAccessDeleteRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_members_asset_access_delete ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_members_asset_access_delete")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_members_asset_access_delete, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_members_asset_access_delete, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_members_asset_access_delete, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "business_members_asset_access_delete_request" is set
      if @api_client.config.client_side_validation && business_members_asset_access_delete_request.nil?
        raise ArgumentError.new("Missing the required parameter 'business_members_asset_access_delete_request' when calling BusinessAccessAssetsApi.business_members_asset_access_delete")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/members/assets/access".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = business_members_asset_access_delete_request.to_json

      # return_type
      return_type = "DeleteMemberAccessResultsResponseArray"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_members_asset_access_delete",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_members_asset_access_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return DeleteMemberAccessResultsResponseArray.from_json(data), status_code, headers
    end

    # Assign/Update member asset permissions
    # Grant multiple members access to assets and/or update multiple member's exisiting permissions to an asset. Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE. 
    # @param business_id [String] Unique identifier of the requesting business.
    # @param update_member_asset_access_body [UpdateMemberAssetAccessBody] List of member asset permissions to create or update.
    # @return [UpdateMemberAssetsResultsResponseArray]
    def business_members_asset_access_update(business_id : String, update_member_asset_access_body : UpdateMemberAssetAccessBody)
      data, _status_code, _headers = business_members_asset_access_update_with_http_info(business_id, update_member_asset_access_body)
      data
    end

    # Assign/Update member asset permissions
    # Grant multiple members access to assets and/or update multiple member&#39;s exisiting permissions to an asset. Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE. 
    # @param business_id [String] Unique identifier of the requesting business.
    # @param update_member_asset_access_body [UpdateMemberAssetAccessBody] List of member asset permissions to create or update.
    # @return [Array<(UpdateMemberAssetsResultsResponseArray, Integer, Hash)>] UpdateMemberAssetsResultsResponseArray data, response status code and response headers
    def business_members_asset_access_update_with_http_info(business_id : String, update_member_asset_access_body : UpdateMemberAssetAccessBody)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_members_asset_access_update ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_members_asset_access_update")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_members_asset_access_update, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_members_asset_access_update, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_members_asset_access_update, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "update_member_asset_access_body" is set
      if @api_client.config.client_side_validation && update_member_asset_access_body.nil?
        raise ArgumentError.new("Missing the required parameter 'update_member_asset_access_body' when calling BusinessAccessAssetsApi.business_members_asset_access_update")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/members/assets/access".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = update_member_asset_access_body.to_json

      # return_type
      return_type = "UpdateMemberAssetsResultsResponseArray"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_members_asset_access_update",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_members_asset_access_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return UpdateMemberAssetsResultsResponseArray.from_json(data), status_code, headers
    end

    # Get assets assigned to a partner or assets assigned by a partner
    # Can be used to get the business assets your partner has granted you access to or the business assets you have granted your partner access to. If you specify: - partner_type=INTERNAL, you will retrieve your business assets that the partner has access to. - partner_type=EXTERNAL, you will retrieve the partner's business assets that the partner has granted you access to.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param partner_id [String] The partner id to be bound to the Business
    # @return [BusinessPartnerAssetAccessGet200Response]
    def business_partner_asset_access_get(business_id : String, partner_id : String, partner_type : PartnerType?, asset_type : String?, start_index : Int32?, page_size : Int32?, bookmark : String?)
      data, _status_code, _headers = business_partner_asset_access_get_with_http_info(business_id, partner_id, partner_type, asset_type, start_index, page_size, bookmark)
      data
    end

    # Get assets assigned to a partner or assets assigned by a partner
    # Can be used to get the business assets your partner has granted you access to or the business assets you have granted your partner access to. If you specify: - partner_type&#x3D;INTERNAL, you will retrieve your business assets that the partner has access to. - partner_type&#x3D;EXTERNAL, you will retrieve the partner&#39;s business assets that the partner has granted you access to.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param partner_id [String] The partner id to be bound to the Business
    # @return [Array<(BusinessPartnerAssetAccessGet200Response, Integer, Hash)>] BusinessPartnerAssetAccessGet200Response data, response status code and response headers
    def business_partner_asset_access_get_with_http_info(business_id : String, partner_id : String, partner_type : PartnerType?, asset_type : String?, start_index : Int32?, page_size : Int32?, bookmark : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.business_partner_asset_access_get ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.business_partner_asset_access_get")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "partner_id" is set
      if @api_client.config.client_side_validation && partner_id.nil?
        raise ArgumentError.new("Missing the required parameter 'partner_id' when calling BusinessAccessAssetsApi.business_partner_asset_access_get")
      end
      if @api_client.config.client_side_validation && partner_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"partner_id\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && partner_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"partner_id\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && partner_id !~ pattern
        raise ArgumentError.new("invalid value for \"partner_id\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, must conform to the pattern #{pattern}.")
      end

      allowable_values = ["AD_ACCOUNT", "PROFILE", "ASSET_GROUP"]
      if @api_client.config.client_side_validation && asset_type && !allowable_values.includes?(asset_type)
        raise ArgumentError.new("invalid value for \"asset_type\", must be one of #{allowable_values}")
      end
      if @api_client.config.client_side_validation && !start_index.nil? && start_index < 0
        raise ArgumentError.new("invalid value for \"start_index\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, must be greater than or equal to 0.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BusinessAccessAssetsApi.business_partner_asset_access_get, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/businesses/{business_id}/partners/{partner_id}/assets".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s)).sub("{" + "partner_id" + "}", URI.encode_path(partner_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["partner_type"] = partner_type.to_s unless partner_type.nil?
      query_params["asset_type"] = asset_type.to_s unless asset_type.nil?
      query_params["start_index"] = start_index.to_s unless start_index.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "BusinessPartnerAssetAccessGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.business_partner_asset_access_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#business_partner_asset_access_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return BusinessPartnerAssetAccessGet200Response.from_json(data), status_code, headers
    end

    # Delete partner access to asset
    # Terminate multiple partners' access to an asset. If - partner_type=INTERNAL: You will terminate a partner's asset access to your business assets. - partner_type=EXTERNAL: You will terminate your own access to your partner's business assets.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param delete_partner_asset_access_body [DeletePartnerAssetAccessBody] 
    # @return [DeletePartnerAssetsResultsResponseArray]
    def delete_partner_asset_access_handler_impl(business_id : String, delete_partner_asset_access_body : DeletePartnerAssetAccessBody)
      data, _status_code, _headers = delete_partner_asset_access_handler_impl_with_http_info(business_id, delete_partner_asset_access_body)
      data
    end

    # Delete partner access to asset
    # Terminate multiple partners&#39; access to an asset. If - partner_type&#x3D;INTERNAL: You will terminate a partner&#39;s asset access to your business assets. - partner_type&#x3D;EXTERNAL: You will terminate your own access to your partner&#39;s business assets.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param delete_partner_asset_access_body [DeletePartnerAssetAccessBody] 
    # @return [Array<(DeletePartnerAssetsResultsResponseArray, Integer, Hash)>] DeletePartnerAssetsResultsResponseArray data, response status code and response headers
    def delete_partner_asset_access_handler_impl_with_http_info(business_id : String, delete_partner_asset_access_body : DeletePartnerAssetAccessBody)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "delete_partner_asset_access_body" is set
      if @api_client.config.client_side_validation && delete_partner_asset_access_body.nil?
        raise ArgumentError.new("Missing the required parameter 'delete_partner_asset_access_body' when calling BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/partners/assets".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = delete_partner_asset_access_body.to_json

      # return_type
      return_type = "DeletePartnerAssetsResultsResponseArray"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.delete_partner_asset_access_handler_impl",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#delete_partner_asset_access_handler_impl\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return DeletePartnerAssetsResultsResponseArray.from_json(data), status_code, headers
    end

    # Assign/Update partner asset permissions
    # Grant multiple partners access to assets and/or update multiple partner's exisiting permissions to an asset. If your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them. To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview  Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param update_partner_asset_access_body [UpdatePartnerAssetAccessBody] A list of assets and permissions to assign to your partners.
    # @return [UpdatePartnerAssetsResultsResponseArray]
    def update_partner_asset_access_handler_impl(business_id : String, update_partner_asset_access_body : UpdatePartnerAssetAccessBody)
      data, _status_code, _headers = update_partner_asset_access_handler_impl_with_http_info(business_id, update_partner_asset_access_body)
      data
    end

    # Assign/Update partner asset permissions
    # Grant multiple partners access to assets and/or update multiple partner&#39;s exisiting permissions to an asset. If your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them. To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview  Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.
    # @param business_id [String] Unique identifier of the requesting business.
    # @param update_partner_asset_access_body [UpdatePartnerAssetAccessBody] A list of assets and permissions to assign to your partners.
    # @return [Array<(UpdatePartnerAssetsResultsResponseArray, Integer, Hash)>] UpdatePartnerAssetsResultsResponseArray data, response status code and response headers
    def update_partner_asset_access_handler_impl_with_http_info(business_id : String, update_partner_asset_access_body : UpdatePartnerAssetAccessBody)
      if @api_client.config.debugging
        Log.debug {"Calling API: BusinessAccessAssetsApi.update_partner_asset_access_handler_impl ..."}
      end
      # verify the required parameter "business_id" is set
      if @api_client.config.client_side_validation && business_id.nil?
        raise ArgumentError.new("Missing the required parameter 'business_id' when calling BusinessAccessAssetsApi.update_partner_asset_access_handler_impl")
      end
      if @api_client.config.client_side_validation && business_id.to_s.size > 20
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.update_partner_asset_access_handler_impl, the character length must be smaller than or equal to 20.")
      end

      if @api_client.config.client_side_validation && business_id.to_s.size < 1
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.update_partner_asset_access_handler_impl, the character length must be great than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && business_id !~ pattern
        raise ArgumentError.new("invalid value for \"business_id\" when calling BusinessAccessAssetsApi.update_partner_asset_access_handler_impl, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "update_partner_asset_access_body" is set
      if @api_client.config.client_side_validation && update_partner_asset_access_body.nil?
        raise ArgumentError.new("Missing the required parameter 'update_partner_asset_access_body' when calling BusinessAccessAssetsApi.update_partner_asset_access_handler_impl")
      end
      # resource path
      local_var_path = "/businesses/{business_id}/partners/assets".sub("{" + "business_id" + "}", URI.encode_path(business_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = update_partner_asset_access_body.to_json

      # return_type
      return_type = "UpdatePartnerAssetsResultsResponseArray"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"BusinessAccessAssetsApi.update_partner_asset_access_handler_impl",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BusinessAccessAssetsApi#update_partner_asset_access_handler_impl\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return UpdatePartnerAssetsResultsResponseArray.from_json(data), status_code, headers
    end
  end
end
