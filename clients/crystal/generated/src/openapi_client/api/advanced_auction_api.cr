# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "uri"

module OpenAPIClient
  class AdvancedAuctionApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get item bid options (POST)
    # Get the bid options for a batch of retail catalog items.  The catalog must be owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: `Owner`, `Admin`.  This endpoint is not available to all users.
    # @param advanced_auction_items_get_request [AdvancedAuctionItemsGetRequest] Request object used to get bid options values for a batch of retail catalog items
    # @return [AdvancedAuctionItems]
    def advanced_auction_items_get_post(advanced_auction_items_get_request : AdvancedAuctionItemsGetRequest, ad_account_id : String?)
      data, _status_code, _headers = advanced_auction_items_get_post_with_http_info(advanced_auction_items_get_request, ad_account_id)
      data
    end

    # Get item bid options (POST)
    # Get the bid options for a batch of retail catalog items.  The catalog must be owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: &#x60;Owner&#x60;, &#x60;Admin&#x60;.  This endpoint is not available to all users.
    # @param advanced_auction_items_get_request [AdvancedAuctionItemsGetRequest] Request object used to get bid options values for a batch of retail catalog items
    # @return [Array<(AdvancedAuctionItems, Integer, Hash)>] AdvancedAuctionItems data, response status code and response headers
    def advanced_auction_items_get_post_with_http_info(advanced_auction_items_get_request : AdvancedAuctionItemsGetRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: AdvancedAuctionApi.advanced_auction_items_get_post ..."}
      end
      # verify the required parameter "advanced_auction_items_get_request" is set
      if @api_client.config.client_side_validation && advanced_auction_items_get_request.nil?
        raise ArgumentError.new("Missing the required parameter 'advanced_auction_items_get_request' when calling AdvancedAuctionApi.advanced_auction_items_get_post")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling AdvancedAuctionApi.advanced_auction_items_get_post, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling AdvancedAuctionApi.advanced_auction_items_get_post, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/advanced_auction/items/get"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = advanced_auction_items_get_request.to_json

      # return_type
      return_type = "AdvancedAuctionItems"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"AdvancedAuctionApi.advanced_auction_items_get_post",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: AdvancedAuctionApi#advanced_auction_items_get_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdvancedAuctionItems.from_json(data), status_code, headers
    end

    # Operate on item level bid options
    # This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type `CATALOG_SALES` and ad groups using bid_strategy_type `MAX_BID`.  The catalog must be owned by the \"operation user_account\". <a href=\"/docs/api-features/modify-items-in-batch/\" target=\"_blank\">See detailed documentation here.</a> By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: `Owner`, `Admin`.  This endpoint is not available to all users.
    # @param advanced_auction_items_submit_request [AdvancedAuctionItemsSubmitRequest] Request object used to upsert or delete bid options for a batch of retail catalog items
    # @return [AdvancedAuctionProcessedItems]
    def advanced_auction_items_submit_post(advanced_auction_items_submit_request : AdvancedAuctionItemsSubmitRequest, ad_account_id : String?)
      data, _status_code, _headers = advanced_auction_items_submit_post_with_http_info(advanced_auction_items_submit_request, ad_account_id)
      data
    end

    # Operate on item level bid options
    # This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type &#x60;CATALOG_SALES&#x60; and ad groups using bid_strategy_type &#x60;MAX_BID&#x60;.  The catalog must be owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/modify-items-in-batch/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: &#x60;Owner&#x60;, &#x60;Admin&#x60;.  This endpoint is not available to all users.
    # @param advanced_auction_items_submit_request [AdvancedAuctionItemsSubmitRequest] Request object used to upsert or delete bid options for a batch of retail catalog items
    # @return [Array<(AdvancedAuctionProcessedItems, Integer, Hash)>] AdvancedAuctionProcessedItems data, response status code and response headers
    def advanced_auction_items_submit_post_with_http_info(advanced_auction_items_submit_request : AdvancedAuctionItemsSubmitRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: AdvancedAuctionApi.advanced_auction_items_submit_post ..."}
      end
      # verify the required parameter "advanced_auction_items_submit_request" is set
      if @api_client.config.client_side_validation && advanced_auction_items_submit_request.nil?
        raise ArgumentError.new("Missing the required parameter 'advanced_auction_items_submit_request' when calling AdvancedAuctionApi.advanced_auction_items_submit_post")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling AdvancedAuctionApi.advanced_auction_items_submit_post, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling AdvancedAuctionApi.advanced_auction_items_submit_post, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/advanced_auction/items/submit"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = advanced_auction_items_submit_request.to_json

      # return_type
      return_type = "AdvancedAuctionProcessedItems"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"AdvancedAuctionApi.advanced_auction_items_submit_post",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: AdvancedAuctionApi#advanced_auction_items_submit_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdvancedAuctionProcessedItems.from_json(data), status_code, headers
    end
  end
end
