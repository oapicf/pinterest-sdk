# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "uri"

module OpenAPIClient
  class BillingApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Redeem ad credits
    # Redeem ads credit on behalf of the ad account id and apply it towards billing.  <strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ads_credit_redeem_request [AdsCreditRedeemRequest] Redeem ad credits request.
    # @return [AdsCreditRedeemResponse]
    def ads_credit_redeem(ad_account_id : String, ads_credit_redeem_request : AdsCreditRedeemRequest)
      data, _status_code, _headers = ads_credit_redeem_with_http_info(ad_account_id, ads_credit_redeem_request)
      data
    end

    # Redeem ad credits
    # Redeem ads credit on behalf of the ad account id and apply it towards billing.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ads_credit_redeem_request [AdsCreditRedeemRequest] Redeem ad credits request.
    # @return [Array<(AdsCreditRedeemResponse, Integer, Hash)>] AdsCreditRedeemResponse data, response status code and response headers
    def ads_credit_redeem_with_http_info(ad_account_id : String, ads_credit_redeem_request : AdsCreditRedeemRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ads_credit_redeem ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ads_credit_redeem")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ads_credit_redeem, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ads_credit_redeem, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "ads_credit_redeem_request" is set
      if @api_client.config.client_side_validation && ads_credit_redeem_request.nil?
        raise ArgumentError.new("Missing the required parameter 'ads_credit_redeem_request' when calling BillingApi.ads_credit_redeem")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ads_credit/redeem".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = ads_credit_redeem_request.to_json

      # return_type
      return_type = "AdsCreditRedeemResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"BillingApi.ads_credit_redeem",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ads_credit_redeem\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdsCreditRedeemResponse.from_json(data), status_code, headers
    end

    # Get ads credit discounts
    # Returns the list of discounts applied to the account.  <strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [AdsCreditsDiscountsGet200Response]
    def ads_credits_discounts_get(ad_account_id : String, bookmark : String?, page_size : Int32?)
      data, _status_code, _headers = ads_credits_discounts_get_with_http_info(ad_account_id, bookmark, page_size)
      data
    end

    # Get ads credit discounts
    # Returns the list of discounts applied to the account.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(AdsCreditsDiscountsGet200Response, Integer, Hash)>] AdsCreditsDiscountsGet200Response data, response status code and response headers
    def ads_credits_discounts_get_with_http_info(ad_account_id : String, bookmark : String?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ads_credits_discounts_get ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ads_credits_discounts_get")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ads_credits_discounts_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ads_credits_discounts_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.ads_credits_discounts_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.ads_credits_discounts_get, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ads_credit/discounts".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "AdsCreditsDiscountsGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BillingApi.ads_credits_discounts_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ads_credits_discounts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdsCreditsDiscountsGet200Response.from_json(data), status_code, headers
    end

    # Get billing profiles
    # Get billing profiles in the advertiser account.  <strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param is_active [Bool] Return active billing profiles, if false return all billing profiles.
    # @return [BillingProfilesGet200Response]
    def billing_profiles_get(ad_account_id : String, is_active : Bool, bookmark : String?, page_size : Int32?)
      data, _status_code, _headers = billing_profiles_get_with_http_info(ad_account_id, is_active, bookmark, page_size)
      data
    end

    # Get billing profiles
    # Get billing profiles in the advertiser account.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param is_active [Bool] Return active billing profiles, if false return all billing profiles.
    # @return [Array<(BillingProfilesGet200Response, Integer, Hash)>] BillingProfilesGet200Response data, response status code and response headers
    def billing_profiles_get_with_http_info(ad_account_id : String, is_active : Bool, bookmark : String?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.billing_profiles_get ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.billing_profiles_get")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.billing_profiles_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.billing_profiles_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "is_active" is set
      if @api_client.config.client_side_validation && is_active.nil?
        raise ArgumentError.new("Missing the required parameter 'is_active' when calling BillingApi.billing_profiles_get")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.billing_profiles_get, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.billing_profiles_get, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/billing_profiles".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["is_active"] = is_active.to_s unless is_active.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "BillingProfilesGet200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BillingApi.billing_profiles_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#billing_profiles_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return BillingProfilesGet200Response.from_json(data), status_code, headers
    end

    # Get Salesforce account details including bill-to information.
    # Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [SSIOAccountResponse]
    def ssio_accounts_get(ad_account_id : String)
      data, _status_code, _headers = ssio_accounts_get_with_http_info(ad_account_id)
      data
    end

    # Get Salesforce account details including bill-to information.
    # Get Salesforce account details including bill-to information to be used in insertion orders process for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(SSIOAccountResponse, Integer, Hash)>] SSIOAccountResponse data, response status code and response headers
    def ssio_accounts_get_with_http_info(ad_account_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ssio_accounts_get ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ssio_accounts_get")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_accounts_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_accounts_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ssio/accounts".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "SSIOAccountResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BillingApi.ssio_accounts_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ssio_accounts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SSIOAccountResponse.from_json(data), status_code, headers
    end

    # Create insertion order through SSIO.
    # Create insertion order through SSIO for <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ssio_create_insertion_order_request [SSIOCreateInsertionOrderRequest] Order line to create.
    # @return [SSIOCreateInsertionOrderResponse]
    def ssio_insertion_order_create(ad_account_id : String, ssio_create_insertion_order_request : SSIOCreateInsertionOrderRequest)
      data, _status_code, _headers = ssio_insertion_order_create_with_http_info(ad_account_id, ssio_create_insertion_order_request)
      data
    end

    # Create insertion order through SSIO.
    # Create insertion order through SSIO for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ssio_create_insertion_order_request [SSIOCreateInsertionOrderRequest] Order line to create.
    # @return [Array<(SSIOCreateInsertionOrderResponse, Integer, Hash)>] SSIOCreateInsertionOrderResponse data, response status code and response headers
    def ssio_insertion_order_create_with_http_info(ad_account_id : String, ssio_create_insertion_order_request : SSIOCreateInsertionOrderRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ssio_insertion_order_create ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ssio_insertion_order_create")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_order_create, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_order_create, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "ssio_create_insertion_order_request" is set
      if @api_client.config.client_side_validation && ssio_create_insertion_order_request.nil?
        raise ArgumentError.new("Missing the required parameter 'ssio_create_insertion_order_request' when calling BillingApi.ssio_insertion_order_create")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ssio/insertion_orders".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = ssio_create_insertion_order_request.to_json

      # return_type
      return_type = "SSIOCreateInsertionOrderResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"BillingApi.ssio_insertion_order_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ssio_insertion_order_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SSIOCreateInsertionOrderResponse.from_json(data), status_code, headers
    end

    # Edit insertion order through SSIO.
    # Edit insertion order through SSIO for <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ssio_edit_insertion_order_request [SSIOEditInsertionOrderRequest] Order line to create.
    # @return [SSIOEditInsertionOrderResponse]
    def ssio_insertion_order_edit(ad_account_id : String, ssio_edit_insertion_order_request : SSIOEditInsertionOrderRequest)
      data, _status_code, _headers = ssio_insertion_order_edit_with_http_info(ad_account_id, ssio_edit_insertion_order_request)
      data
    end

    # Edit insertion order through SSIO.
    # Edit insertion order through SSIO for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ssio_edit_insertion_order_request [SSIOEditInsertionOrderRequest] Order line to create.
    # @return [Array<(SSIOEditInsertionOrderResponse, Integer, Hash)>] SSIOEditInsertionOrderResponse data, response status code and response headers
    def ssio_insertion_order_edit_with_http_info(ad_account_id : String, ssio_edit_insertion_order_request : SSIOEditInsertionOrderRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ssio_insertion_order_edit ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ssio_insertion_order_edit")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_order_edit, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_order_edit, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "ssio_edit_insertion_order_request" is set
      if @api_client.config.client_side_validation && ssio_edit_insertion_order_request.nil?
        raise ArgumentError.new("Missing the required parameter 'ssio_edit_insertion_order_request' when calling BillingApi.ssio_insertion_order_edit")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ssio/insertion_orders".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = ssio_edit_insertion_order_request.to_json

      # return_type
      return_type = "SSIOEditInsertionOrderResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"BillingApi.ssio_insertion_order_edit",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ssio_insertion_order_edit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SSIOEditInsertionOrderResponse.from_json(data), status_code, headers
    end

    # Get insertion order status by ad account id.
    # Get insertion order status for account id <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [SsioInsertionOrdersStatusGetByAdAccount200Response]
    def ssio_insertion_orders_status_get_by_ad_account(ad_account_id : String, bookmark : String?, page_size : Int32?)
      data, _status_code, _headers = ssio_insertion_orders_status_get_by_ad_account_with_http_info(ad_account_id, bookmark, page_size)
      data
    end

    # Get insertion order status by ad account id.
    # Get insertion order status for account id &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(SsioInsertionOrdersStatusGetByAdAccount200Response, Integer, Hash)>] SsioInsertionOrdersStatusGetByAdAccount200Response data, response status code and response headers
    def ssio_insertion_orders_status_get_by_ad_account_with_http_info(ad_account_id : String, bookmark : String?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ssio_insertion_orders_status_get_by_ad_account ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ssio_insertion_orders_status_get_by_ad_account")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_orders_status_get_by_ad_account, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_orders_status_get_by_ad_account, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.ssio_insertion_orders_status_get_by_ad_account, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.ssio_insertion_orders_status_get_by_ad_account, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ssio/insertion_orders/status".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "SsioInsertionOrdersStatusGetByAdAccount200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BillingApi.ssio_insertion_orders_status_get_by_ad_account",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ssio_insertion_orders_status_get_by_ad_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SsioInsertionOrdersStatusGetByAdAccount200Response.from_json(data), status_code, headers
    end

    # Get insertion order status by pin order id.
    # Get insertion order status for pin order id <code>pin_order_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param pin_order_id [String] The pin order id associated with the ssio insertion order
    # @return [SSIOInsertionOrderStatusResponse]
    def ssio_insertion_orders_status_get_by_pin_order_id(ad_account_id : String, pin_order_id : String)
      data, _status_code, _headers = ssio_insertion_orders_status_get_by_pin_order_id_with_http_info(ad_account_id, pin_order_id)
      data
    end

    # Get insertion order status by pin order id.
    # Get insertion order status for pin order id &lt;code&gt;pin_order_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param pin_order_id [String] The pin order id associated with the ssio insertion order
    # @return [Array<(SSIOInsertionOrderStatusResponse, Integer, Hash)>] SSIOInsertionOrderStatusResponse data, response status code and response headers
    def ssio_insertion_orders_status_get_by_pin_order_id_with_http_info(ad_account_id : String, pin_order_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ssio_insertion_orders_status_get_by_pin_order_id ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ssio_insertion_orders_status_get_by_pin_order_id")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_orders_status_get_by_pin_order_id, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_insertion_orders_status_get_by_pin_order_id, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "pin_order_id" is set
      if @api_client.config.client_side_validation && pin_order_id.nil?
        raise ArgumentError.new("Missing the required parameter 'pin_order_id' when calling BillingApi.ssio_insertion_orders_status_get_by_pin_order_id")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s)).sub("{" + "pin_order_id" + "}", URI.encode_path(pin_order_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "SSIOInsertionOrderStatusResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BillingApi.ssio_insertion_orders_status_get_by_pin_order_id",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ssio_insertion_orders_status_get_by_pin_order_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SSIOInsertionOrderStatusResponse.from_json(data), status_code, headers
    end

    # Get Salesforce order lines by ad account id.
    # Get Salesforce order lines for account id <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [SsioOrderLinesGetByAdAccount200Response]
    def ssio_order_lines_get_by_ad_account(ad_account_id : String, bookmark : String?, page_size : Int32?, pin_order_id : String?)
      data, _status_code, _headers = ssio_order_lines_get_by_ad_account_with_http_info(ad_account_id, bookmark, page_size, pin_order_id)
      data
    end

    # Get Salesforce order lines by ad account id.
    # Get Salesforce order lines for account id &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(SsioOrderLinesGetByAdAccount200Response, Integer, Hash)>] SsioOrderLinesGetByAdAccount200Response data, response status code and response headers
    def ssio_order_lines_get_by_ad_account_with_http_info(ad_account_id : String, bookmark : String?, page_size : Int32?, pin_order_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: BillingApi.ssio_order_lines_get_by_ad_account ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling BillingApi.ssio_order_lines_get_by_ad_account")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_order_lines_get_by_ad_account, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling BillingApi.ssio_order_lines_get_by_ad_account, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.ssio_order_lines_get_by_ad_account, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling BillingApi.ssio_order_lines_get_by_ad_account, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/ssio/order_lines".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["pin_order_id"] = pin_order_id.to_s unless pin_order_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "SsioOrderLinesGetByAdAccount200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"BillingApi.ssio_order_lines_get_by_ad_account",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: BillingApi#ssio_order_lines_get_by_ad_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SsioOrderLinesGetByAdAccount200Response.from_json(data), status_code, headers
    end
  end
end
