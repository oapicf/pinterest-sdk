# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "uri"

module OpenAPIClient
  class LeadAdsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete lead ads subscription
    # Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param subscription_id [String] Unique identifier of a subscription.
    # @return [nil]
    def ad_accounts_subscriptions_del_by_id(ad_account_id : String, subscription_id : String)
      ad_accounts_subscriptions_del_by_id_with_http_info(ad_account_id, subscription_id)
      nil
    end

    # Delete lead ads subscription
    # Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param subscription_id [String] Unique identifier of a subscription.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def ad_accounts_subscriptions_del_by_id_with_http_info(ad_account_id : String, subscription_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadAdsApi.ad_accounts_subscriptions_del_by_id ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadAdsApi.ad_accounts_subscriptions_del_by_id")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_del_by_id, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_del_by_id, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "subscription_id" is set
      if @api_client.config.client_side_validation && subscription_id.nil?
        raise ArgumentError.new("Missing the required parameter 'subscription_id' when calling LeadAdsApi.ad_accounts_subscriptions_del_by_id")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && subscription_id !~ pattern
        raise ArgumentError.new("invalid value for \"subscription_id\" when calling LeadAdsApi.ad_accounts_subscriptions_del_by_id, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s)).sub("{" + "subscription_id" + "}", URI.encode_path(subscription_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = nil

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"LeadAdsApi.ad_accounts_subscriptions_del_by_id",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadAdsApi#ad_accounts_subscriptions_del_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return nil, status_code, headers
    end

    # Get lead ads subscription
    # Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param subscription_id [String] Unique identifier of a subscription.
    # @return [AdAccountGetSubscriptionResponse]
    def ad_accounts_subscriptions_get_by_id(ad_account_id : String, subscription_id : String)
      data, _status_code, _headers = ad_accounts_subscriptions_get_by_id_with_http_info(ad_account_id, subscription_id)
      data
    end

    # Get lead ads subscription
    # Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param subscription_id [String] Unique identifier of a subscription.
    # @return [Array<(AdAccountGetSubscriptionResponse, Integer, Hash)>] AdAccountGetSubscriptionResponse data, response status code and response headers
    def ad_accounts_subscriptions_get_by_id_with_http_info(ad_account_id : String, subscription_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadAdsApi.ad_accounts_subscriptions_get_by_id ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadAdsApi.ad_accounts_subscriptions_get_by_id")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_get_by_id, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_get_by_id, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "subscription_id" is set
      if @api_client.config.client_side_validation && subscription_id.nil?
        raise ArgumentError.new("Missing the required parameter 'subscription_id' when calling LeadAdsApi.ad_accounts_subscriptions_get_by_id")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && subscription_id !~ pattern
        raise ArgumentError.new("invalid value for \"subscription_id\" when calling LeadAdsApi.ad_accounts_subscriptions_get_by_id, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s)).sub("{" + "subscription_id" + "}", URI.encode_path(subscription_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "AdAccountGetSubscriptionResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"LeadAdsApi.ad_accounts_subscriptions_get_by_id",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadAdsApi#ad_accounts_subscriptions_get_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdAccountGetSubscriptionResponse.from_json(data), status_code, headers
    end

    # Get lead ads subscriptions
    # Get the advertiser's list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [AdAccountsSubscriptionsGetList200Response]
    def ad_accounts_subscriptions_get_list(ad_account_id : String, page_size : Int32?, bookmark : String?)
      data, _status_code, _headers = ad_accounts_subscriptions_get_list_with_http_info(ad_account_id, page_size, bookmark)
      data
    end

    # Get lead ads subscriptions
    # Get the advertiser&#39;s list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(AdAccountsSubscriptionsGetList200Response, Integer, Hash)>] AdAccountsSubscriptionsGetList200Response data, response status code and response headers
    def ad_accounts_subscriptions_get_list_with_http_info(ad_account_id : String, page_size : Int32?, bookmark : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadAdsApi.ad_accounts_subscriptions_get_list ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadAdsApi.ad_accounts_subscriptions_get_list")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_get_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_get_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling LeadAdsApi.ad_accounts_subscriptions_get_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling LeadAdsApi.ad_accounts_subscriptions_get_list, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/leads/subscriptions".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "AdAccountsSubscriptionsGetList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"LeadAdsApi.ad_accounts_subscriptions_get_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadAdsApi#ad_accounts_subscriptions_get_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdAccountsSubscriptionsGetList200Response.from_json(data), status_code, headers
    end

    # Create lead ads subscription
    # Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ad_account_create_subscription_request [AdAccountCreateSubscriptionRequest] Subscription to create.
    # @return [AdAccountCreateSubscriptionResponse]
    def ad_accounts_subscriptions_post(ad_account_id : String, ad_account_create_subscription_request : AdAccountCreateSubscriptionRequest)
      data, _status_code, _headers = ad_accounts_subscriptions_post_with_http_info(ad_account_id, ad_account_create_subscription_request)
      data
    end

    # Create lead ads subscription
    # Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param ad_account_create_subscription_request [AdAccountCreateSubscriptionRequest] Subscription to create.
    # @return [Array<(AdAccountCreateSubscriptionResponse, Integer, Hash)>] AdAccountCreateSubscriptionResponse data, response status code and response headers
    def ad_accounts_subscriptions_post_with_http_info(ad_account_id : String, ad_account_create_subscription_request : AdAccountCreateSubscriptionRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: LeadAdsApi.ad_accounts_subscriptions_post ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling LeadAdsApi.ad_accounts_subscriptions_post")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_post, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling LeadAdsApi.ad_accounts_subscriptions_post, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "ad_account_create_subscription_request" is set
      if @api_client.config.client_side_validation && ad_account_create_subscription_request.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_create_subscription_request' when calling LeadAdsApi.ad_accounts_subscriptions_post")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/leads/subscriptions".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = ad_account_create_subscription_request.to_json

      # return_type
      return_type = "AdAccountCreateSubscriptionResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"LeadAdsApi.ad_accounts_subscriptions_post",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: LeadAdsApi#ad_accounts_subscriptions_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return AdAccountCreateSubscriptionResponse.from_json(data), status_code, headers
    end
  end
end
