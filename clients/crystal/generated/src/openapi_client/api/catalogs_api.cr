# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "uri"

module OpenAPIClient
  class CatalogsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create catalog
    # Create a new catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: this API only supports the catalog type of HOTEL for now.
    # @param catalogs_create_request [CatalogsCreateRequest] Request object used to created a feed.
    # @return [Catalog]
    def catalogs_create(catalogs_create_request : CatalogsCreateRequest, ad_account_id : String?)
      data, _status_code, _headers = catalogs_create_with_http_info(catalogs_create_request, ad_account_id)
      data
    end

    # Create catalog
    # Create a new catalog owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: this API only supports the catalog type of HOTEL for now.
    # @param catalogs_create_request [CatalogsCreateRequest] Request object used to created a feed.
    # @return [Array<(Catalog, Integer, Hash)>] Catalog data, response status code and response headers
    def catalogs_create_with_http_info(catalogs_create_request : CatalogsCreateRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_create ..."}
      end
      # verify the required parameter "catalogs_create_request" is set
      if @api_client.config.client_side_validation && catalogs_create_request.nil?
        raise ArgumentError.new("Missing the required parameter 'catalogs_create_request' when calling CatalogsApi.catalogs_create")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_create, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_create, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = catalogs_create_request.to_json

      # return_type
      return_type = "Catalog"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return Catalog.from_json(data), status_code, headers
    end

    # List catalogs
    # Fetch catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @return [CatalogsList200Response]
    def catalogs_list(bookmark : String?, page_size : Int32?, ad_account_id : String?)
      data, _status_code, _headers = catalogs_list_with_http_info(bookmark, page_size, ad_account_id)
      data
    end

    # List catalogs
    # Fetch catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @return [Array<(CatalogsList200Response, Integer, Hash)>] CatalogsList200Response data, response status code and response headers
    def catalogs_list_with_http_info(bookmark : String?, page_size : Int32?, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_list ..."}
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.catalogs_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.catalogs_list, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs"

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsList200Response.from_json(data), status_code, headers
    end

    # List products by product group
    # Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param product_group_id [String] Unique identifier of a product group
    # @return [CatalogsProductGroupPinsList200Response]
    def catalogs_product_group_pins_list(product_group_id : String, bookmark : String?, page_size : Int32?, ad_account_id : String?, pin_metrics : Bool?)
      data, _status_code, _headers = catalogs_product_group_pins_list_with_http_info(product_group_id, bookmark, page_size, ad_account_id, pin_metrics)
      data
    end

    # List products by product group
    # Get a list of product pins for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param product_group_id [String] Unique identifier of a product group
    # @return [Array<(CatalogsProductGroupPinsList200Response, Integer, Hash)>] CatalogsProductGroupPinsList200Response data, response status code and response headers
    def catalogs_product_group_pins_list_with_http_info(product_group_id : String, bookmark : String?, page_size : Int32?, ad_account_id : String?, pin_metrics : Bool?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_group_pins_list ..."}
      end
      # verify the required parameter "product_group_id" is set
      if @api_client.config.client_side_validation && product_group_id.nil?
        raise ArgumentError.new("Missing the required parameter 'product_group_id' when calling CatalogsApi.catalogs_product_group_pins_list")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && product_group_id !~ pattern
        raise ArgumentError.new("invalid value for \"product_group_id\" when calling CatalogsApi.catalogs_product_group_pins_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.catalogs_product_group_pins_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.catalogs_product_group_pins_list, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_group_pins_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_group_pins_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/{product_group_id}/products".sub("{" + "product_group_id" + "}", URI.encode_path(product_group_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?
      query_params["pin_metrics"] = pin_metrics.to_s unless pin_metrics.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsProductGroupPinsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_group_pins_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_group_pins_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsProductGroupPinsList200Response.from_json(data), status_code, headers
    end

    # Create product group
    # Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param multiple_product_groups_inner [MultipleProductGroupsInner] Request object used to create a single catalogs product groups.
    # @return [CatalogsVerticalProductGroup]
    def catalogs_product_groups_create(multiple_product_groups_inner : MultipleProductGroupsInner, ad_account_id : String?)
      data, _status_code, _headers = catalogs_product_groups_create_with_http_info(multiple_product_groups_inner, ad_account_id)
      data
    end

    # Create product group
    # Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param multiple_product_groups_inner [MultipleProductGroupsInner] Request object used to create a single catalogs product groups.
    # @return [Array<(CatalogsVerticalProductGroup, Integer, Hash)>] CatalogsVerticalProductGroup data, response status code and response headers
    def catalogs_product_groups_create_with_http_info(multiple_product_groups_inner : MultipleProductGroupsInner, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_create ..."}
      end
      # verify the required parameter "multiple_product_groups_inner" is set
      if @api_client.config.client_side_validation && multiple_product_groups_inner.nil?
        raise ArgumentError.new("Missing the required parameter 'multiple_product_groups_inner' when calling CatalogsApi.catalogs_product_groups_create")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_create, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_create, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = multiple_product_groups_inner.to_json

      # return_type
      return_type = "CatalogsVerticalProductGroup"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsVerticalProductGroup.from_json(data), status_code, headers
    end

    # Create product groups
    # Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param multiple_product_groups_inner [Array(MultipleProductGroupsInner)] Request object used to create one or more catalogs product groups.
    # @return [Array(String)]
    def catalogs_product_groups_create_many(multiple_product_groups_inner : Array(MultipleProductGroupsInner), ad_account_id : String?)
      data, _status_code, _headers = catalogs_product_groups_create_many_with_http_info(multiple_product_groups_inner, ad_account_id)
      data
    end

    # Create product groups
    # Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param multiple_product_groups_inner [Array(MultipleProductGroupsInner)] Request object used to create one or more catalogs product groups.
    # @return [Array<(Array(String), Integer, Hash)>] Array(String) data, response status code and response headers
    def catalogs_product_groups_create_many_with_http_info(multiple_product_groups_inner : Array(MultipleProductGroupsInner), ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_create_many ..."}
      end
      # verify the required parameter "multiple_product_groups_inner" is set
      if @api_client.config.client_side_validation && multiple_product_groups_inner.nil?
        raise ArgumentError.new("Missing the required parameter 'multiple_product_groups_inner' when calling CatalogsApi.catalogs_product_groups_create_many")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_create_many, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_create_many, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/multiple"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = multiple_product_groups_inner.to_json

      # return_type
      return_type = "Array(String)"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_create_many",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_create_many\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return Array(String).from_json(data), status_code, headers
    end

    # Delete product group
    # Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param product_group_id [String] Unique identifier of a product group
    # @return [nil]
    def catalogs_product_groups_delete(product_group_id : String, ad_account_id : String?)
      catalogs_product_groups_delete_with_http_info(product_group_id, ad_account_id)
      nil
    end

    # Delete product group
    # Delete a product group owned by the \&quot;operation user_account\&quot; from being in use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param product_group_id [String] Unique identifier of a product group
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def catalogs_product_groups_delete_with_http_info(product_group_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_delete ..."}
      end
      # verify the required parameter "product_group_id" is set
      if @api_client.config.client_side_validation && product_group_id.nil?
        raise ArgumentError.new("Missing the required parameter 'product_group_id' when calling CatalogsApi.catalogs_product_groups_delete")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && product_group_id !~ pattern
        raise ArgumentError.new("invalid value for \"product_group_id\" when calling CatalogsApi.catalogs_product_groups_delete, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_delete, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_delete, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/{product_group_id}".sub("{" + "product_group_id" + "}", URI.encode_path(product_group_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = nil

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_delete",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return nil, status_code, headers
    end

    # Delete product groups
    # Delete product groups owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param id [Array(Int32)] Comma-separated list of product group ids
    # @return [nil]
    def catalogs_product_groups_delete_many(id : Array(Int32), ad_account_id : String?)
      catalogs_product_groups_delete_many_with_http_info(id, ad_account_id)
      nil
    end

    # Delete product groups
    # Delete product groups owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param id [Array(Int32)] Comma-separated list of product group ids
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def catalogs_product_groups_delete_many_with_http_info(id : Array(Int32), ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_delete_many ..."}
      end
      # verify the required parameter "id" is set
      if @api_client.config.client_side_validation && id.nil?
        raise ArgumentError.new("Missing the required parameter 'id' when calling CatalogsApi.catalogs_product_groups_delete_many")
      end
      if @api_client.config.client_side_validation && id.size > 1000
        raise ArgumentError.new("invalid value for \"id\" when calling CatalogsApi.catalogs_product_groups_delete_many, number of items must be less than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && id.size < 1
        raise ArgumentError.new("invalid value for \"id\" when calling CatalogsApi.catalogs_product_groups_delete_many, number of items must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_delete_many, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_delete_many, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/multiple"

      # query parameters
      query_params = Hash(String, String).new
      query_params["id"] = @api_client.build_collection_param(id, :csv)
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = nil

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_delete_many",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_delete_many\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return nil, status_code, headers
    end

    # Get product group
    # Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param product_group_id [String] Unique identifier of a product group
    # @return [CatalogsVerticalProductGroup]
    def catalogs_product_groups_get(product_group_id : String, ad_account_id : String?)
      data, _status_code, _headers = catalogs_product_groups_get_with_http_info(product_group_id, ad_account_id)
      data
    end

    # Get product group
    # Get a singe product group for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param product_group_id [String] Unique identifier of a product group
    # @return [Array<(CatalogsVerticalProductGroup, Integer, Hash)>] CatalogsVerticalProductGroup data, response status code and response headers
    def catalogs_product_groups_get_with_http_info(product_group_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_get ..."}
      end
      # verify the required parameter "product_group_id" is set
      if @api_client.config.client_side_validation && product_group_id.nil?
        raise ArgumentError.new("Missing the required parameter 'product_group_id' when calling CatalogsApi.catalogs_product_groups_get")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && product_group_id !~ pattern
        raise ArgumentError.new("invalid value for \"product_group_id\" when calling CatalogsApi.catalogs_product_groups_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/{product_group_id}".sub("{" + "product_group_id" + "}", URI.encode_path(product_group_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsVerticalProductGroup"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsVerticalProductGroup.from_json(data), status_code, headers
    end

    # List product groups
    # Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @return [CatalogsProductGroupsList200Response]
    def catalogs_product_groups_list(id : Array(Int32)?, feed_id : String?, catalog_id : String?, bookmark : String?, page_size : Int32?, ad_account_id : String?)
      data, _status_code, _headers = catalogs_product_groups_list_with_http_info(id, feed_id, catalog_id, bookmark, page_size, ad_account_id)
      data
    end

    # List product groups
    # Get a list of product groups for a given Catalogs Feed Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @return [Array<(CatalogsProductGroupsList200Response, Integer, Hash)>] CatalogsProductGroupsList200Response data, response status code and response headers
    def catalogs_product_groups_list_with_http_info(id : Array(Int32)?, feed_id : String?, catalog_id : String?, bookmark : String?, page_size : Int32?, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_list ..."}
      end
      if @api_client.config.client_side_validation && id.nil? && id.size > 1000
        raise ArgumentError.new("invalid value for \"id\" when calling CatalogsApi.catalogs_product_groups_list, number of items must be less than or equal to 1000.")
      end

      if @api_client.config.client_side_validation && id.nil? && id.size < 1
        raise ArgumentError.new("invalid value for \"id\" when calling CatalogsApi.catalogs_product_groups_list, number of items must be greater than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && feed_id.nil? && feed_id !~ pattern
        raise ArgumentError.new("invalid value for \"feed_id\" when calling CatalogsApi.catalogs_product_groups_list, must conform to the pattern #{pattern}.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && catalog_id.nil? && catalog_id !~ pattern
        raise ArgumentError.new("invalid value for \"catalog_id\" when calling CatalogsApi.catalogs_product_groups_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.catalogs_product_groups_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.catalogs_product_groups_list, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups"

      # query parameters
      query_params = Hash(String, String).new
      query_params["id"] = @api_client.build_collection_param(id, :csv)
      query_params["feed_id"] = feed_id.to_s unless feed_id.nil?
      query_params["catalog_id"] = catalog_id.to_s unless catalog_id.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsProductGroupsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsProductGroupsList200Response.from_json(data), status_code, headers
    end

    # Get product counts
    # Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param product_group_id [String] Unique identifier of a product group
    # @return [CatalogsProductGroupProductCountsVertical]
    def catalogs_product_groups_product_counts_get(product_group_id : String, ad_account_id : String?)
      data, _status_code, _headers = catalogs_product_groups_product_counts_get_with_http_info(product_group_id, ad_account_id)
      data
    end

    # Get product counts
    # Get a product counts for a given Catalogs Product Group owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param product_group_id [String] Unique identifier of a product group
    # @return [Array<(CatalogsProductGroupProductCountsVertical, Integer, Hash)>] CatalogsProductGroupProductCountsVertical data, response status code and response headers
    def catalogs_product_groups_product_counts_get_with_http_info(product_group_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_product_counts_get ..."}
      end
      # verify the required parameter "product_group_id" is set
      if @api_client.config.client_side_validation && product_group_id.nil?
        raise ArgumentError.new("Missing the required parameter 'product_group_id' when calling CatalogsApi.catalogs_product_groups_product_counts_get")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && product_group_id !~ pattern
        raise ArgumentError.new("invalid value for \"product_group_id\" when calling CatalogsApi.catalogs_product_groups_product_counts_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_product_counts_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_product_counts_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/{product_group_id}/product_counts".sub("{" + "product_group_id" + "}", URI.encode_path(product_group_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsProductGroupProductCountsVertical"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_product_counts_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_product_counts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsProductGroupProductCountsVertical.from_json(data), status_code, headers
    end

    # Update single product group
    # Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param product_group_id [String] Unique identifier of a product group
    # @param catalogs_product_groups_update_request [CatalogsProductGroupsUpdateRequest] Request object used to Update a catalogs product group.
    # @return [CatalogsVerticalProductGroup]
    def catalogs_product_groups_update(product_group_id : String, catalogs_product_groups_update_request : CatalogsProductGroupsUpdateRequest, ad_account_id : String?)
      data, _status_code, _headers = catalogs_product_groups_update_with_http_info(product_group_id, catalogs_product_groups_update_request, ad_account_id)
      data
    end

    # Update single product group
    # Update product group owned by the \&quot;operation user_account\&quot; to use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param product_group_id [String] Unique identifier of a product group
    # @param catalogs_product_groups_update_request [CatalogsProductGroupsUpdateRequest] Request object used to Update a catalogs product group.
    # @return [Array<(CatalogsVerticalProductGroup, Integer, Hash)>] CatalogsVerticalProductGroup data, response status code and response headers
    def catalogs_product_groups_update_with_http_info(product_group_id : String, catalogs_product_groups_update_request : CatalogsProductGroupsUpdateRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.catalogs_product_groups_update ..."}
      end
      # verify the required parameter "product_group_id" is set
      if @api_client.config.client_side_validation && product_group_id.nil?
        raise ArgumentError.new("Missing the required parameter 'product_group_id' when calling CatalogsApi.catalogs_product_groups_update")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && product_group_id !~ pattern
        raise ArgumentError.new("invalid value for \"product_group_id\" when calling CatalogsApi.catalogs_product_groups_update, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "catalogs_product_groups_update_request" is set
      if @api_client.config.client_side_validation && catalogs_product_groups_update_request.nil?
        raise ArgumentError.new("Missing the required parameter 'catalogs_product_groups_update_request' when calling CatalogsApi.catalogs_product_groups_update")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_update, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.catalogs_product_groups_update, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/product_groups/{product_group_id}".sub("{" + "product_group_id" + "}", URI.encode_path(product_group_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = catalogs_product_groups_update_request.to_json

      # return_type
      return_type = "CatalogsVerticalProductGroup"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"CatalogsApi.catalogs_product_groups_update",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#catalogs_product_groups_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsVerticalProductGroup.from_json(data), status_code, headers
    end

    # List feed processing results
    # Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param feed_id [String] Unique identifier of a feed
    # @return [FeedProcessingResultsList200Response]
    def feed_processing_results_list(feed_id : String, bookmark : String?, page_size : Int32?, ad_account_id : String?)
      data, _status_code, _headers = feed_processing_results_list_with_http_info(feed_id, bookmark, page_size, ad_account_id)
      data
    end

    # List feed processing results
    # Fetch a feed processing results owned by the \&quot;operation user_account\&quot;. Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param feed_id [String] Unique identifier of a feed
    # @return [Array<(FeedProcessingResultsList200Response, Integer, Hash)>] FeedProcessingResultsList200Response data, response status code and response headers
    def feed_processing_results_list_with_http_info(feed_id : String, bookmark : String?, page_size : Int32?, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feed_processing_results_list ..."}
      end
      # verify the required parameter "feed_id" is set
      if @api_client.config.client_side_validation && feed_id.nil?
        raise ArgumentError.new("Missing the required parameter 'feed_id' when calling CatalogsApi.feed_processing_results_list")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && feed_id !~ pattern
        raise ArgumentError.new("invalid value for \"feed_id\" when calling CatalogsApi.feed_processing_results_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.feed_processing_results_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.feed_processing_results_list, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feed_processing_results_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feed_processing_results_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds/{feed_id}/processing_results".sub("{" + "feed_id" + "}", URI.encode_path(feed_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "FeedProcessingResultsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.feed_processing_results_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feed_processing_results_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return FeedProcessingResultsList200Response.from_json(data), status_code, headers
    end

    # Create feed
    # Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param feeds_create_request [FeedsCreateRequest] Request object used to created a feed.
    # @return [CatalogsFeed]
    def feeds_create(feeds_create_request : FeedsCreateRequest, ad_account_id : String?)
      data, _status_code, _headers = feeds_create_with_http_info(feeds_create_request, ad_account_id)
      data
    end

    # Create feed
    # Create a new feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Please, be aware that \&quot;default_country\&quot; and \&quot;default_locale\&quot; are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param feeds_create_request [FeedsCreateRequest] Request object used to created a feed.
    # @return [Array<(CatalogsFeed, Integer, Hash)>] CatalogsFeed data, response status code and response headers
    def feeds_create_with_http_info(feeds_create_request : FeedsCreateRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feeds_create ..."}
      end
      # verify the required parameter "feeds_create_request" is set
      if @api_client.config.client_side_validation && feeds_create_request.nil?
        raise ArgumentError.new("Missing the required parameter 'feeds_create_request' when calling CatalogsApi.feeds_create")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_create, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_create, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = feeds_create_request.to_json

      # return_type
      return_type = "CatalogsFeed"

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.feeds_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feeds_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsFeed.from_json(data), status_code, headers
    end

    # Delete feed
    # Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.
    # @param feed_id [String] Unique identifier of a feed
    # @return [nil]
    def feeds_delete(feed_id : String, ad_account_id : String?)
      feeds_delete_with_http_info(feed_id, ad_account_id)
      nil
    end

    # Delete feed
    # Delete a feed owned by the \&quot;operating user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
    # @param feed_id [String] Unique identifier of a feed
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def feeds_delete_with_http_info(feed_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feeds_delete ..."}
      end
      # verify the required parameter "feed_id" is set
      if @api_client.config.client_side_validation && feed_id.nil?
        raise ArgumentError.new("Missing the required parameter 'feed_id' when calling CatalogsApi.feeds_delete")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && feed_id !~ pattern
        raise ArgumentError.new("invalid value for \"feed_id\" when calling CatalogsApi.feeds_delete, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_delete, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_delete, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds/{feed_id}".sub("{" + "feed_id" + "}", URI.encode_path(feed_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = nil

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"CatalogsApi.feeds_delete",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feeds_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return nil, status_code, headers
    end

    # Get feed
    # Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.
    # @param feed_id [String] Unique identifier of a feed
    # @return [CatalogsFeed]
    def feeds_get(feed_id : String, ad_account_id : String?)
      data, _status_code, _headers = feeds_get_with_http_info(feed_id, ad_account_id)
      data
    end

    # Get feed
    # Get a single feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
    # @param feed_id [String] Unique identifier of a feed
    # @return [Array<(CatalogsFeed, Integer, Hash)>] CatalogsFeed data, response status code and response headers
    def feeds_get_with_http_info(feed_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feeds_get ..."}
      end
      # verify the required parameter "feed_id" is set
      if @api_client.config.client_side_validation && feed_id.nil?
        raise ArgumentError.new("Missing the required parameter 'feed_id' when calling CatalogsApi.feeds_get")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && feed_id !~ pattern
        raise ArgumentError.new("invalid value for \"feed_id\" when calling CatalogsApi.feeds_get, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds/{feed_id}".sub("{" + "feed_id" + "}", URI.encode_path(feed_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsFeed"

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.feeds_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feeds_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsFeed.from_json(data), status_code, headers
    end

    # Ingest feed items
    # Ingest items for a given feed owned by the \"operation user_account\".  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param feed_id [String] Unique identifier of a feed
    # @return [CatalogsFeedIngestion]
    def feeds_ingest(feed_id : String, ad_account_id : String?)
      data, _status_code, _headers = feeds_ingest_with_http_info(feed_id, ad_account_id)
      data
    end

    # Ingest feed items
    # Ingest items for a given feed owned by the \&quot;operation user_account\&quot;.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param feed_id [String] Unique identifier of a feed
    # @return [Array<(CatalogsFeedIngestion, Integer, Hash)>] CatalogsFeedIngestion data, response status code and response headers
    def feeds_ingest_with_http_info(feed_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feeds_ingest ..."}
      end
      # verify the required parameter "feed_id" is set
      if @api_client.config.client_side_validation && feed_id.nil?
        raise ArgumentError.new("Missing the required parameter 'feed_id' when calling CatalogsApi.feeds_ingest")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && feed_id !~ pattern
        raise ArgumentError.new("invalid value for \"feed_id\" when calling CatalogsApi.feeds_ingest, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_ingest, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_ingest, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds/{feed_id}/ingest".sub("{" + "feed_id" + "}", URI.encode_path(feed_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsFeedIngestion"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.feeds_ingest",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feeds_ingest\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsFeedIngestion.from_json(data), status_code, headers
    end

    # List feeds
    # Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.
    # @return [FeedsList200Response]
    def feeds_list(bookmark : String?, page_size : Int32?, catalog_id : String?, ad_account_id : String?)
      data, _status_code, _headers = feeds_list_with_http_info(bookmark, page_size, catalog_id, ad_account_id)
      data
    end

    # List feeds
    # Fetch feeds owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
    # @return [Array<(FeedsList200Response, Integer, Hash)>] FeedsList200Response data, response status code and response headers
    def feeds_list_with_http_info(bookmark : String?, page_size : Int32?, catalog_id : String?, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feeds_list ..."}
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.feeds_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.feeds_list, must be greater than or equal to 1.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && catalog_id.nil? && catalog_id !~ pattern
        raise ArgumentError.new("invalid value for \"catalog_id\" when calling CatalogsApi.feeds_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds"

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["catalog_id"] = catalog_id.to_s unless catalog_id.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "FeedsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.feeds_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feeds_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return FeedsList200Response.from_json(data), status_code, headers
    end

    # Update feed
    # Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param feed_id [String] Unique identifier of a feed
    # @param feeds_update_request [FeedsUpdateRequest] Request object used to update a feed.
    # @return [CatalogsFeed]
    def feeds_update(feed_id : String, feeds_update_request : FeedsUpdateRequest, ad_account_id : String?)
      data, _status_code, _headers = feeds_update_with_http_info(feed_id, feeds_update_request, ad_account_id)
      data
    end

    # Update feed
    # Update a feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param feed_id [String] Unique identifier of a feed
    # @param feeds_update_request [FeedsUpdateRequest] Request object used to update a feed.
    # @return [Array<(CatalogsFeed, Integer, Hash)>] CatalogsFeed data, response status code and response headers
    def feeds_update_with_http_info(feed_id : String, feeds_update_request : FeedsUpdateRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.feeds_update ..."}
      end
      # verify the required parameter "feed_id" is set
      if @api_client.config.client_side_validation && feed_id.nil?
        raise ArgumentError.new("Missing the required parameter 'feed_id' when calling CatalogsApi.feeds_update")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && feed_id !~ pattern
        raise ArgumentError.new("invalid value for \"feed_id\" when calling CatalogsApi.feeds_update, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "feeds_update_request" is set
      if @api_client.config.client_side_validation && feeds_update_request.nil?
        raise ArgumentError.new("Missing the required parameter 'feeds_update_request' when calling CatalogsApi.feeds_update")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_update, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.feeds_update, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/feeds/{feed_id}".sub("{" + "feed_id" + "}", URI.encode_path(feed_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = feeds_update_request.to_json

      # return_type
      return_type = "CatalogsFeed"

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:PATCH,
                                                        local_var_path,
                                                        :"CatalogsApi.feeds_update",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#feeds_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsFeed.from_json(data), status_code, headers
    end

    # Get item batch status
    # Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param batch_id [String] Id of a catalogs items batch to fetch
    # @return [CatalogsItemsBatch]
    def items_batch_get(batch_id : String, ad_account_id : String?)
      data, _status_code, _headers = items_batch_get_with_http_info(batch_id, ad_account_id)
      data
    end

    # Get item batch status
    # Get a single catalogs items batch owned by the \&quot;operating user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param batch_id [String] Id of a catalogs items batch to fetch
    # @return [Array<(CatalogsItemsBatch, Integer, Hash)>] CatalogsItemsBatch data, response status code and response headers
    def items_batch_get_with_http_info(batch_id : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.items_batch_get ..."}
      end
      # verify the required parameter "batch_id" is set
      if @api_client.config.client_side_validation && batch_id.nil?
        raise ArgumentError.new("Missing the required parameter 'batch_id' when calling CatalogsApi.items_batch_get")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_batch_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_batch_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/items/batch/{batch_id}".sub("{" + "batch_id" + "}", URI.encode_path(batch_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsItemsBatch"

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.items_batch_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#items_batch_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsItemsBatch.from_json(data), status_code, headers
    end

    # Operate on item batch
    # This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
    # @param items_batch_post_request [ItemsBatchPostRequest] Request object used to create catalogs items in a batch
    # @return [CatalogsItemsBatch]
    def items_batch_post(items_batch_post_request : ItemsBatchPostRequest, ad_account_id : String?)
      data, _status_code, _headers = items_batch_post_with_http_info(items_batch_post_request, ad_account_id)
      data
    end

    # Operate on item batch
    # This endpoint supports multiple operations on a set of one or more catalog items owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
    # @param items_batch_post_request [ItemsBatchPostRequest] Request object used to create catalogs items in a batch
    # @return [Array<(CatalogsItemsBatch, Integer, Hash)>] CatalogsItemsBatch data, response status code and response headers
    def items_batch_post_with_http_info(items_batch_post_request : ItemsBatchPostRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.items_batch_post ..."}
      end
      # verify the required parameter "items_batch_post_request" is set
      if @api_client.config.client_side_validation && items_batch_post_request.nil?
        raise ArgumentError.new("Missing the required parameter 'items_batch_post_request' when calling CatalogsApi.items_batch_post")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_batch_post, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_batch_post, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/items/batch"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = items_batch_post_request.to_json

      # return_type
      return_type = "CatalogsItemsBatch"

      # auth_names
      auth_names = ["pinterest_oauth2", "client_credentials"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.items_batch_post",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#items_batch_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsItemsBatch.from_json(data), status_code, headers
    end

    # Get catalogs items
    # Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use <a href='/docs/api/v5/#operation/items/post'>Get catalogs items (POST)</a> instead.
    # @param country [String] Country for the Catalogs Items
    # @param language [String] Language for the Catalogs Items
    # @return [CatalogsItems]
    def items_get(country : String, language : String, ad_account_id : String?, item_ids : Array(String)?, filters : CatalogsItemsFilters?)
      data, _status_code, _headers = items_get_with_http_info(country, language, ad_account_id, item_ids, filters)
      data
    end

    # Get catalogs items
    # Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use &lt;a href&#x3D;&#39;/docs/api/v5/#operation/items/post&#39;&gt;Get catalogs items (POST)&lt;/a&gt; instead.
    # @param country [String] Country for the Catalogs Items
    # @param language [String] Language for the Catalogs Items
    # @return [Array<(CatalogsItems, Integer, Hash)>] CatalogsItems data, response status code and response headers
    def items_get_with_http_info(country : String, language : String, ad_account_id : String?, item_ids : Array(String)?, filters : CatalogsItemsFilters?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.items_get ..."}
      end
      # verify the required parameter "country" is set
      if @api_client.config.client_side_validation && country.nil?
        raise ArgumentError.new("Missing the required parameter 'country' when calling CatalogsApi.items_get")
      end
      # verify the required parameter "language" is set
      if @api_client.config.client_side_validation && language.nil?
        raise ArgumentError.new("Missing the required parameter 'language' when calling CatalogsApi.items_get")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/items"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?
      query_params["country"] = country.to_s unless country.nil?
      query_params["language"] = language.to_s unless language.nil?
      query_params["item_ids"] = @api_client.build_collection_param(item_ids, :multi)
      query_params["filters"] = filters.to_s unless filters.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsItems"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.items_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#items_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsItems.from_json(data), status_code, headers
    end

    # List item issues
    # List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters 'item_numbers' and 'item_validation_issue' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to <a href='/docs/api/v5/#operation/reports/create'>Build catalogs report</a> and <a href='/docs/api/v5/#operation/reports/get'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param processing_result_id [String] Unique identifier of a feed processing result. It can be acquired from the \&quot;id\&quot; field of the \&quot;items\&quot; array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list).
    # @return [ItemsIssuesList200Response]
    def items_issues_list(processing_result_id : String, bookmark : String?, page_size : Int32?, item_numbers : Array(Int32)?, item_validation_issue : CatalogsItemValidationIssue?, ad_account_id : String?)
      data, _status_code, _headers = items_issues_list_with_http_info(processing_result_id, bookmark, page_size, item_numbers, item_validation_issue, ad_account_id)
      data
    end

    # List item issues
    # List item validation issues for a given feed processing result owned by the \&quot;operation user_account\&quot;. Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters &#39;item_numbers&#39; and &#39;item_validation_issue&#39; cannot be used simultaneously until it is implemented in some release in the future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to &lt;a href&#x3D;&#39;/docs/api/v5/#operation/reports/create&#39;&gt;Build catalogs report&lt;/a&gt; and &lt;a href&#x3D;&#39;/docs/api/v5/#operation/reports/get&#39;&gt;Get catalogs report&lt;/a&gt; endpoints. Moreover, they support multiple types of catalogs.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param processing_result_id [String] Unique identifier of a feed processing result. It can be acquired from the \&quot;id\&quot; field of the \&quot;items\&quot; array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list).
    # @return [Array<(ItemsIssuesList200Response, Integer, Hash)>] ItemsIssuesList200Response data, response status code and response headers
    def items_issues_list_with_http_info(processing_result_id : String, bookmark : String?, page_size : Int32?, item_numbers : Array(Int32)?, item_validation_issue : CatalogsItemValidationIssue?, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.items_issues_list ..."}
      end
      # verify the required parameter "processing_result_id" is set
      if @api_client.config.client_side_validation && processing_result_id.nil?
        raise ArgumentError.new("Missing the required parameter 'processing_result_id' when calling CatalogsApi.items_issues_list")
      end
      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && processing_result_id !~ pattern
        raise ArgumentError.new("invalid value for \"processing_result_id\" when calling CatalogsApi.items_issues_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.items_issues_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.items_issues_list, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_issues_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_issues_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/processing_results/{processing_result_id}/item_issues".sub("{" + "processing_result_id" + "}", URI.encode_path(processing_result_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["item_numbers"] = @api_client.build_collection_param(item_numbers, :multi)
      query_params["item_validation_issue"] = item_validation_issue.to_s unless item_validation_issue.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "ItemsIssuesList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.items_issues_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#items_issues_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ItemsIssuesList200Response.from_json(data), status_code, headers
    end

    # Get catalogs items (POST)
    # Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param catalogs_items_request [CatalogsItemsRequest] Request object used to get catalogs items
    # @return [CatalogsItems]
    def items_post(catalogs_items_request : CatalogsItemsRequest, ad_account_id : String?)
      data, _status_code, _headers = items_post_with_http_info(catalogs_items_request, ad_account_id)
      data
    end

    # Get catalogs items (POST)
    # Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    # @param catalogs_items_request [CatalogsItemsRequest] Request object used to get catalogs items
    # @return [Array<(CatalogsItems, Integer, Hash)>] CatalogsItems data, response status code and response headers
    def items_post_with_http_info(catalogs_items_request : CatalogsItemsRequest, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.items_post ..."}
      end
      # verify the required parameter "catalogs_items_request" is set
      if @api_client.config.client_side_validation && catalogs_items_request.nil?
        raise ArgumentError.new("Missing the required parameter 'catalogs_items_request' when calling CatalogsApi.items_post")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_post, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.items_post, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/items"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = catalogs_items_request.to_json

      # return_type
      return_type = "CatalogsItems"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.items_post",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#items_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsItems.from_json(data), status_code, headers
    end

    # List products by filter
    # List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
    # @param catalogs_list_products_by_filter_request [CatalogsListProductsByFilterRequest] Object holding a group of filters for a catalog product group
    # @return [CatalogsProductGroupPinsList200Response]
    def products_by_product_group_filter_list(catalogs_list_products_by_filter_request : CatalogsListProductsByFilterRequest, bookmark : String?, page_size : Int32?, ad_account_id : String?, pin_metrics : Bool?)
      data, _status_code, _headers = products_by_product_group_filter_list_with_http_info(catalogs_list_products_by_filter_request, bookmark, page_size, ad_account_id, pin_metrics)
      data
    end

    # List products by filter
    # List products Pins owned by the \&quot;operation user_account\&quot; that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    # @param catalogs_list_products_by_filter_request [CatalogsListProductsByFilterRequest] Object holding a group of filters for a catalog product group
    # @return [Array<(CatalogsProductGroupPinsList200Response, Integer, Hash)>] CatalogsProductGroupPinsList200Response data, response status code and response headers
    def products_by_product_group_filter_list_with_http_info(catalogs_list_products_by_filter_request : CatalogsListProductsByFilterRequest, bookmark : String?, page_size : Int32?, ad_account_id : String?, pin_metrics : Bool?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.products_by_product_group_filter_list ..."}
      end
      # verify the required parameter "catalogs_list_products_by_filter_request" is set
      if @api_client.config.client_side_validation && catalogs_list_products_by_filter_request.nil?
        raise ArgumentError.new("Missing the required parameter 'catalogs_list_products_by_filter_request' when calling CatalogsApi.products_by_product_group_filter_list")
      end
      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.products_by_product_group_filter_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.products_by_product_group_filter_list, must be greater than or equal to 1.")
      end

      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.products_by_product_group_filter_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.products_by_product_group_filter_list, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/products/get_by_product_group_filters"

      # query parameters
      query_params = Hash(String, String).new
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?
      query_params["pin_metrics"] = pin_metrics.to_s unless pin_metrics.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = catalogs_list_products_by_filter_request.to_json

      # return_type
      return_type = "CatalogsProductGroupPinsList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.products_by_product_group_filter_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#products_by_product_group_filter_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsProductGroupPinsList200Response.from_json(data), status_code, headers
    end

    # Build catalogs report
    # Async request to create a report of the catalog owned by the \"operation user_account\". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param catalogs_report_parameters [CatalogsReportParameters] Request object to asynchronously create a report.
    # @return [CatalogsCreateReportResponse]
    def reports_create(catalogs_report_parameters : CatalogsReportParameters, ad_account_id : String?)
      data, _status_code, _headers = reports_create_with_http_info(catalogs_report_parameters, ad_account_id)
      data
    end

    # Build catalogs report
    # Async request to create a report of the catalog owned by the \&quot;operation user_account\&quot;. This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param catalogs_report_parameters [CatalogsReportParameters] Request object to asynchronously create a report.
    # @return [Array<(CatalogsCreateReportResponse, Integer, Hash)>] CatalogsCreateReportResponse data, response status code and response headers
    def reports_create_with_http_info(catalogs_report_parameters : CatalogsReportParameters, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.reports_create ..."}
      end
      # verify the required parameter "catalogs_report_parameters" is set
      if @api_client.config.client_side_validation && catalogs_report_parameters.nil?
        raise ArgumentError.new("Missing the required parameter 'catalogs_report_parameters' when calling CatalogsApi.reports_create")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.reports_create, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.reports_create, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/reports"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = catalogs_report_parameters.to_json

      # return_type
      return_type = "CatalogsCreateReportResponse"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"CatalogsApi.reports_create",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#reports_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsCreateReportResponse.from_json(data), status_code, headers
    end

    # Get catalogs report
    # This returns a URL to a report given a token returned from <a href='/docs/api/v5/#operation/reports/create'>Build catalogs report</a>. You can use the URL to download the report. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param token [String] Token returned from async build report call
    # @return [CatalogsReport]
    def reports_get(token : String, ad_account_id : String?)
      data, _status_code, _headers = reports_get_with_http_info(token, ad_account_id)
      data
    end

    # Get catalogs report
    # This returns a URL to a report given a token returned from &lt;a href&#x3D;&#39;/docs/api/v5/#operation/reports/create&#39;&gt;Build catalogs report&lt;/a&gt;. You can use the URL to download the report. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param token [String] Token returned from async build report call
    # @return [Array<(CatalogsReport, Integer, Hash)>] CatalogsReport data, response status code and response headers
    def reports_get_with_http_info(token : String, ad_account_id : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.reports_get ..."}
      end
      # verify the required parameter "token" is set
      if @api_client.config.client_side_validation && token.nil?
        raise ArgumentError.new("Missing the required parameter 'token' when calling CatalogsApi.reports_get")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.reports_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.reports_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/catalogs/reports"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?
      query_params["token"] = token.to_s unless token.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "CatalogsReport"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.reports_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#reports_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CatalogsReport.from_json(data), status_code, headers
    end

    # List report stats
    # List aggregated numbers of issues for a catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param parameters [CatalogsReportParameters] Contains the parameters for report identification.
    # @return [ReportsStats200Response]
    def reports_stats(parameters : CatalogsReportParameters, ad_account_id : String?, page_size : Int32?, bookmark : String?)
      data, _status_code, _headers = reports_stats_with_http_info(parameters, ad_account_id, page_size, bookmark)
      data
    end

    # List report stats
    # List aggregated numbers of issues for a catalog owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    # @param parameters [CatalogsReportParameters] Contains the parameters for report identification.
    # @return [Array<(ReportsStats200Response, Integer, Hash)>] ReportsStats200Response data, response status code and response headers
    def reports_stats_with_http_info(parameters : CatalogsReportParameters, ad_account_id : String?, page_size : Int32?, bookmark : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: CatalogsApi.reports_stats ..."}
      end
      # verify the required parameter "parameters" is set
      if @api_client.config.client_side_validation && parameters.nil?
        raise ArgumentError.new("Missing the required parameter 'parameters' when calling CatalogsApi.reports_stats")
      end
      if @api_client.config.client_side_validation && !ad_account_id.nil? && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.reports_stats, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id.nil? && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling CatalogsApi.reports_stats, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.reports_stats, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling CatalogsApi.reports_stats, must be greater than or equal to 1.")
      end

      # resource path
      local_var_path = "/catalogs/reports/stats"

      # query parameters
      query_params = Hash(String, String).new
      query_params["ad_account_id"] = ad_account_id.to_s unless ad_account_id.nil?
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?
      query_params["parameters"] = parameters.to_s unless parameters.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "ReportsStats200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"CatalogsApi.reports_stats",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: CatalogsApi#reports_stats\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ReportsStats200Response.from_json(data), status_code, headers
    end
  end
end
