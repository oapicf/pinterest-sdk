# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "uri"

module OpenAPIClient
  class OrderLinesApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get order line
    # Get a specific existing order line associated with an ad account.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param order_line_id [String] Unique identifier of an order line.
    # @return [OrderLine]
    def order_lines_get(ad_account_id : String, order_line_id : String)
      data, _status_code, _headers = order_lines_get_with_http_info(ad_account_id, order_line_id)
      data
    end

    # Get order line
    # Get a specific existing order line associated with an ad account.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @param order_line_id [String] Unique identifier of an order line.
    # @return [Array<(OrderLine, Integer, Hash)>] OrderLine data, response status code and response headers
    def order_lines_get_with_http_info(ad_account_id : String, order_line_id : String)
      if @api_client.config.debugging
        Log.debug {"Calling API: OrderLinesApi.order_lines_get ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling OrderLinesApi.order_lines_get")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling OrderLinesApi.order_lines_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling OrderLinesApi.order_lines_get, must conform to the pattern #{pattern}.")
      end

      # verify the required parameter "order_line_id" is set
      if @api_client.config.client_side_validation && order_line_id.nil?
        raise ArgumentError.new("Missing the required parameter 'order_line_id' when calling OrderLinesApi.order_lines_get")
      end
      if @api_client.config.client_side_validation && order_line_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"order_line_id\" when calling OrderLinesApi.order_lines_get, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && order_line_id !~ pattern
        raise ArgumentError.new("invalid value for \"order_line_id\" when calling OrderLinesApi.order_lines_get, must conform to the pattern #{pattern}.")
      end

      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/order_lines/{order_line_id}".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s)).sub("{" + "order_line_id" + "}", URI.encode_path(order_line_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "OrderLine"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OrderLinesApi.order_lines_get",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OrderLinesApi#order_lines_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return OrderLine.from_json(data), status_code, headers
    end

    # Get order lines
    # List existing order lines associated with an ad account.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [OrderLinesList200Response]
    def order_lines_list(ad_account_id : String, page_size : Int32?, order : String?, bookmark : String?)
      data, _status_code, _headers = order_lines_list_with_http_info(ad_account_id, page_size, order, bookmark)
      data
    end

    # Get order lines
    # List existing order lines associated with an ad account.
    # @param ad_account_id [String] Unique identifier of an ad account.
    # @return [Array<(OrderLinesList200Response, Integer, Hash)>] OrderLinesList200Response data, response status code and response headers
    def order_lines_list_with_http_info(ad_account_id : String, page_size : Int32?, order : String?, bookmark : String?)
      if @api_client.config.debugging
        Log.debug {"Calling API: OrderLinesApi.order_lines_list ..."}
      end
      # verify the required parameter "ad_account_id" is set
      if @api_client.config.client_side_validation && ad_account_id.nil?
        raise ArgumentError.new("Missing the required parameter 'ad_account_id' when calling OrderLinesApi.order_lines_list")
      end
      if @api_client.config.client_side_validation && ad_account_id.to_s.size > 18
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling OrderLinesApi.order_lines_list, the character length must be smaller than or equal to 18.")
      end

      pattern = Regexp.new(/^\d+$/)
      if @api_client.config.client_side_validation && ad_account_id !~ pattern
        raise ArgumentError.new("invalid value for \"ad_account_id\" when calling OrderLinesApi.order_lines_list, must conform to the pattern #{pattern}.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size > 250
        raise ArgumentError.new("invalid value for \"page_size\" when calling OrderLinesApi.order_lines_list, must be smaller than or equal to 250.")
      end

      if @api_client.config.client_side_validation && !page_size.nil? && page_size < 1
        raise ArgumentError.new("invalid value for \"page_size\" when calling OrderLinesApi.order_lines_list, must be greater than or equal to 1.")
      end

      allowable_values = ["ASCENDING", "DESCENDING"]
      if @api_client.config.client_side_validation && order && !allowable_values.includes?(order)
        raise ArgumentError.new("invalid value for \"order\", must be one of #{allowable_values}")
      end
      # resource path
      local_var_path = "/ad_accounts/{ad_account_id}/order_lines".sub("{" + "ad_account_id" + "}", URI.encode_path(ad_account_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["page_size"] = page_size.to_s unless page_size.nil?
      query_params["order"] = order.to_s unless order.nil?
      query_params["bookmark"] = bookmark.to_s unless bookmark.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "OrderLinesList200Response"

      # auth_names
      auth_names = ["pinterest_oauth2"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OrderLinesApi.order_lines_list",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OrderLinesApi#order_lines_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return OrderLinesList200Response.from_json(data), status_code, headers
    end
  end
end
