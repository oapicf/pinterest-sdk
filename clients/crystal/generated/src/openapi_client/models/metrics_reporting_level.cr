# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "big"
require "json"
require "time"

module OpenAPIClient
  class MetricsReportingLevel
    ADVERTISER = "ADVERTISER"
  
    ADVERTISER_TARGETING = "ADVERTISER_TARGETING"
  
    CAMPAIGN = "CAMPAIGN"
  
    CAMPAIGN_TARGETING = "CAMPAIGN_TARGETING"
  
    AD_GROUP = "AD_GROUP"
  
    AD_GROUP_TARGETING = "AD_GROUP_TARGETING"
  
    PIN_PROMOTION = "PIN_PROMOTION"
  
    PIN_PROMOTION_TARGETING = "PIN_PROMOTION_TARGETING"
  
    KEYWORD = "KEYWORD"
  
    PRODUCT_GROUP = "PRODUCT_GROUP"
  
    PRODUCT_GROUP_TARGETING = "PRODUCT_GROUP_TARGETING"
  
    PRODUCT_ITEM = "PRODUCT_ITEM"
  
    PRODUCT_ITEM_TARGETING = "PRODUCT_ITEM_TARGETING"
   
    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      case value
      when "ADVERTISER"
        ADVERTISER
      when "ADVERTISER_TARGETING"
        ADVERTISER_TARGETING
      when "CAMPAIGN"
        CAMPAIGN
      when "CAMPAIGN_TARGETING"
        CAMPAIGN_TARGETING
      when "AD_GROUP"
        AD_GROUP
      when "AD_GROUP_TARGETING"
        AD_GROUP_TARGETING
      when "PIN_PROMOTION"
        PIN_PROMOTION
      when "PIN_PROMOTION_TARGETING"
        PIN_PROMOTION_TARGETING
      when "KEYWORD"
        KEYWORD
      when "PRODUCT_GROUP"
        PRODUCT_GROUP
      when "PRODUCT_GROUP_TARGETING"
        PRODUCT_GROUP_TARGETING
      when "PRODUCT_ITEM"
        PRODUCT_ITEM
      when "PRODUCT_ITEM_TARGETING"
        PRODUCT_ITEM_TARGETING
      else
        raise "Invalid ENUM value #{value} for class #MetricsReportingLevel"
      end
    end
  end
end
