# #Pinterest REST API
#
##Pinterest's REST API
#
#The version of the OpenAPI document: 5.14.0
#Contact: blah+oapicf@cliffano.com
#Generated by: https://openapi-generator.tech
#Generator version: 7.9.0
#

require "big"
require "json"
require "time"

module OpenAPIClient
  class SSIOOrderLine
    include JSON::Serializable

    # Optional properties
    # OrderLineId in SFDC
    @[JSON::Field(key: "salesforce_order_line_id", type: String?, nillable: true, emit_null: false)]
    property salesforce_order_line_id : String?

    # Ads manager OrderLineId
    @[JSON::Field(key: "ads_manager_order_line_id", type: String?, nillable: true, emit_null: false)]
    property ads_manager_order_line_id : String?

    # The pin order id associated with the order line in SFDC
    @[JSON::Field(key: "pin_order_id", type: String?, nillable: true, emit_null: false)]
    property pin_order_id : String?

    # Last modified date.
    @[JSON::Field(key: "last_modified_date_time", type: String?, nillable: true, emit_null: false)]
    property last_modified_date_time : String?

    # Start date of the order line.
    @[JSON::Field(key: "start_date", type: Time?, nillable: true, emit_null: false)]
    property start_date : Time?

    # End date of the order line.
    @[JSON::Field(key: "end_date", type: Time?, nillable: true, emit_null: false)]
    property end_date : Time?

    # Bill To Company name
    @[JSON::Field(key: "bill_to_company_name", type: String?, nillable: true, emit_null: false)]
    property bill_to_company_name : String?

    # Billing contact first name
    @[JSON::Field(key: "billing_contact_firstname", type: String?, nillable: true, emit_null: false)]
    property billing_contact_firstname : String?

    # Billing contact last name
    @[JSON::Field(key: "billing_contact_lastname", type: String?, nillable: true, emit_null: false)]
    property billing_contact_lastname : String?

    # Billing contact email
    @[JSON::Field(key: "billing_contact_email", type: String?, nillable: true, emit_null: false)]
    property billing_contact_email : String?

    # Billing media email
    @[JSON::Field(key: "media_contact_email", type: String?, nillable: true, emit_null: false)]
    property media_contact_email : String?

    # Billing contact first name
    @[JSON::Field(key: "media_contact_firstname", type: String?, nillable: true, emit_null: false)]
    property media_contact_firstname : String?

    # Billing contact first name
    @[JSON::Field(key: "media_contact_lastname", type: String?, nillable: true, emit_null: false)]
    property media_contact_lastname : String?

    @[JSON::Field(key: "currency_info", type: Currency?, nillable: true, emit_null: false)]
    property currency_info : Currency?

    # Agency link
    @[JSON::Field(key: "agency_link", type: String?, nillable: true, emit_null: false)]
    property agency_link : String?

    # The po number
    @[JSON::Field(key: "po_number", type: String?, nillable: true, emit_null: false)]
    property po_number : String?

    # The order name
    @[JSON::Field(key: "order_name", type: String?, nillable: true, emit_null: false)]
    property order_name : String?

    # The Pinterest marketing partner name
    @[JSON::Field(key: "pmp_name", type: String?, nillable: true, emit_null: false)]
    property pmp_name : String?

    # The SFDC id for the terms
    @[JSON::Field(key: "accepted_terms_id", type: String?, nillable: true, emit_null: false)]
    property accepted_terms_id : String?

    # The UTC timestamp (to the nearest sec) of when terms were accepted
    @[JSON::Field(key: "accepted_terms_time", type: String?, nillable: true, emit_null: false)]
    property accepted_terms_time : String?

    # If Budget order line, the budget amount.
    @[JSON::Field(key: "budget_amount", type: Float64?, nillable: true, emit_null: false)]
    property budget_amount : Float64?

    # If Ongoing (perpetual) order line, the estimated monthly spend
    @[JSON::Field(key: "estimated_monthly_spend", type: Float64?, nillable: true, emit_null: false)]
    property estimated_monthly_spend : Float64?

    class EnumAttributeValidator
      getter datatype : String
      getter allowable_values : Array(String)

      def initialize(datatype, allowable_values)
        @datatype = datatype
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          else
            value
          end
        end
      end

      def valid?(value)
        !value || allowable_values.includes?(value)
      end
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(@salesforce_order_line_id : String?, @ads_manager_order_line_id : String?, @pin_order_id : String?, @last_modified_date_time : String?, @start_date : Time?, @end_date : Time?, @bill_to_company_name : String?, @billing_contact_firstname : String?, @billing_contact_lastname : String?, @billing_contact_email : String?, @media_contact_email : String?, @media_contact_firstname : String?, @media_contact_lastname : String?, @currency_info : Currency?, @agency_link : String?, @po_number : String?, @order_name : String?, @pmp_name : String?, @accepted_terms_id : String?, @accepted_terms_time : String?, @budget_amount : Float64?, @estimated_monthly_spend : Float64?)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      pattern = Regexp.new(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/)
      if !@last_modified_date_time.nil? && @last_modified_date_time !~ pattern
        invalid_properties.push("invalid value for \"last_modified_date_time\", must conform to the pattern #{pattern}.")
      end

      pattern = Regexp.new(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/)
      if !@accepted_terms_time.nil? && @accepted_terms_time !~ pattern
        invalid_properties.push("invalid value for \"accepted_terms_time\", must conform to the pattern #{pattern}.")
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if !@last_modified_date_time.nil? && @last_modified_date_time !~ Regexp.new(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/)
      return false if !@accepted_terms_time.nil? && @accepted_terms_time !~ Regexp.new(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/)
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] last_modified_date_time Value to be assigned
    def last_modified_date_time=(last_modified_date_time)
      pattern = Regexp.new(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/)
      if !last_modified_date_time.nil? && last_modified_date_time !~ pattern
        raise ArgumentError.new("invalid value for \"last_modified_date_time\", must conform to the pattern #{pattern}.")
      end

      @last_modified_date_time = last_modified_date_time
    end

    # Custom attribute writer method with validation
    # @param [Object] accepted_terms_time Value to be assigned
    def accepted_terms_time=(accepted_terms_time)
      pattern = Regexp.new(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/)
      if !accepted_terms_time.nil? && accepted_terms_time !~ pattern
        raise ArgumentError.new("invalid value for \"accepted_terms_time\", must conform to the pattern #{pattern}.")
      end

      @accepted_terms_time = accepted_terms_time
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
          salesforce_order_line_id == o.salesforce_order_line_id &&
          ads_manager_order_line_id == o.ads_manager_order_line_id &&
          pin_order_id == o.pin_order_id &&
          last_modified_date_time == o.last_modified_date_time &&
          start_date == o.start_date &&
          end_date == o.end_date &&
          bill_to_company_name == o.bill_to_company_name &&
          billing_contact_firstname == o.billing_contact_firstname &&
          billing_contact_lastname == o.billing_contact_lastname &&
          billing_contact_email == o.billing_contact_email &&
          media_contact_email == o.media_contact_email &&
          media_contact_firstname == o.media_contact_firstname &&
          media_contact_lastname == o.media_contact_lastname &&
          currency_info == o.currency_info &&
          agency_link == o.agency_link &&
          po_number == o.po_number &&
          order_name == o.order_name &&
          pmp_name == o.pmp_name &&
          accepted_terms_id == o.accepted_terms_id &&
          accepted_terms_time == o.accepted_terms_time &&
          budget_amount == o.budget_amount &&
          estimated_monthly_spend == o.estimated_monthly_spend
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [salesforce_order_line_id, ads_manager_order_line_id, pin_order_id, last_modified_date_time, start_date, end_date, bill_to_company_name, billing_contact_firstname, billing_contact_lastname, billing_contact_email, media_contact_email, media_contact_firstname, media_contact_lastname, currency_info, agency_link, po_number, order_name, pmp_name, accepted_terms_id, accepted_terms_time, budget_amount, estimated_monthly_spend].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if !attributes[self.class.attribute_map[key]]? && self.class.openapi_nullable.includes?(key)
          self.send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        ({} of Symbol => String).tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = OpenAPIClient.const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {} of Symbol => String
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.includes?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        ({} of Symbol => String).tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
