/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CatalogsProductGroupFilters } from '../models/CatalogsProductGroupFilters';
import { CatalogsProductGroupStatus } from '../models/CatalogsProductGroupStatus';
import { CatalogsProductGroupType } from '../models/CatalogsProductGroupType';
import { HttpFile } from '../http/http';

export class CatalogsRetailProductGroup {
    'catalogType': CatalogsRetailProductGroupCatalogTypeEnum;
    /**
    * ID of the catalog product group.
    */
    'id': string;
    /**
    * Name of catalog product group
    */
    'name'?: string;
    'description'?: string | null;
    'filters': CatalogsProductGroupFilters;
    /**
    * boolean indicator of whether the product group is being featured or not
    */
    'isFeatured'?: boolean;
    'type'?: CatalogsProductGroupType;
    'status'?: CatalogsProductGroupStatus;
    /**
    * Unix timestamp in seconds of when catalog product group was created.
    */
    'createdAt'?: number;
    /**
    * Unix timestamp in seconds of last time catalog product group was updated.
    */
    'updatedAt'?: number;
    /**
    * Catalog id pertaining to the retail product group.
    */
    'catalogId': string;
    /**
    * id of the catalogs feed belonging to this catalog product group
    */
    'feedId': string | null;
    'country'?: string | null;
    'locale'?: string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "catalogType",
            "baseName": "catalog_type",
            "type": "CatalogsRetailProductGroupCatalogTypeEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "CatalogsProductGroupFilters",
            "format": ""
        },
        {
            "name": "isFeatured",
            "baseName": "is_featured",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "CatalogsProductGroupType",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CatalogsProductGroupStatus",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "number",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "number",
            "format": ""
        },
        {
            "name": "catalogId",
            "baseName": "catalog_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "feedId",
            "baseName": "feed_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string",
            "format": ""
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CatalogsRetailProductGroup.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum CatalogsRetailProductGroupCatalogTypeEnum {
    Retail = 'RETAIL'
}

