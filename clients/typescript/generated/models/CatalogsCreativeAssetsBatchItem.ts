/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CatalogsCreateCreativeAssetsItem } from '../models/CatalogsCreateCreativeAssetsItem';
import { CatalogsDeleteCreativeAssetsItem } from '../models/CatalogsDeleteCreativeAssetsItem';
import { CatalogsUpdatableCreativeAssetsAttributes } from '../models/CatalogsUpdatableCreativeAssetsAttributes';
import { CatalogsUpdateCreativeAssetsItem } from '../models/CatalogsUpdateCreativeAssetsItem';
import { CatalogsUpsertCreativeAssetsItem } from '../models/CatalogsUpsertCreativeAssetsItem';
import { HttpFile } from '../http/http';

/**
* Creative assets batch item
*/
export class CatalogsCreativeAssetsBatchItem {
    /**
    * The catalog creative assets id in the merchant namespace
    */
    'creativeAssetsId': string;
    'operation': CatalogsCreativeAssetsBatchItemOperationEnum;
    'attributes': CatalogsUpdatableCreativeAssetsAttributes;

    static readonly discriminator: string | undefined = "operation";

    static readonly mapping: {[index: string]: string} | undefined = {
        "CREATE": "CatalogsCreateCreativeAssetsItem",
        "DELETE": "CatalogsDeleteCreativeAssetsItem",
        "UPDATE": "CatalogsUpdateCreativeAssetsItem",
        "UPSERT": "CatalogsUpsertCreativeAssetsItem",
    };

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "creativeAssetsId",
            "baseName": "creative_assets_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "operation",
            "baseName": "operation",
            "type": "CatalogsCreativeAssetsBatchItemOperationEnum",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "CatalogsUpdatableCreativeAssetsAttributes",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CatalogsCreativeAssetsBatchItem.attributeTypeMap;
    }

    public constructor() {
        this.operation = "CatalogsCreativeAssetsBatchItem";
    }
}

export enum CatalogsCreativeAssetsBatchItemOperationEnum {
    Delete = 'DELETE'
}

