/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.CatalogsType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Catalog entity
 **/
@ApiModel(description = "Catalog entity")
public class Catalog {
  
  @SerializedName("created_at")
  private Date createdAt = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("updated_at")
  private Date updatedAt = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("catalog_type")
  private CatalogsType catalogType = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * ID of the catalog entity.
   **/
  @ApiModelProperty(required = true, value = "ID of the catalog entity.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  /**
   * A human-friendly name associated to a catalog entity.
   **/
  @ApiModelProperty(required = true, value = "A human-friendly name associated to a catalog entity.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public CatalogsType getCatalogType() {
    return catalogType;
  }
  public void setCatalogType(CatalogsType catalogType) {
    this.catalogType = catalogType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Catalog catalog = (Catalog) o;
    return (this.createdAt == null ? catalog.createdAt == null : this.createdAt.equals(catalog.createdAt)) &&
        (this.id == null ? catalog.id == null : this.id.equals(catalog.id)) &&
        (this.updatedAt == null ? catalog.updatedAt == null : this.updatedAt.equals(catalog.updatedAt)) &&
        (this.name == null ? catalog.name == null : this.name.equals(catalog.name)) &&
        (this.catalogType == null ? catalog.catalogType == null : this.catalogType.equals(catalog.catalogType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.catalogType == null ? 0: this.catalogType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Catalog {\n");
    
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  catalogType: ").append(catalogType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
