/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.PinUpdateCarouselSlotsInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Pin fields for updates
 **/
@ApiModel(description = "Pin fields for updates")
public class PinUpdate {
  
  @SerializedName("alt_text")
  private String altText = null;
  @SerializedName("board_id")
  private String boardId = null;
  @SerializedName("board_section_id")
  private String boardSectionId = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("link")
  private String link = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("carousel_slots")
  private List<PinUpdateCarouselSlotsInner> carouselSlots = null;
  @SerializedName("note")
  private String note = null;

  /**
   * Pin's alternative text.
   **/
  @ApiModelProperty(value = "Pin's alternative text.")
  public String getAltText() {
    return altText;
  }
  public void setAltText(String altText) {
    this.altText = altText;
  }

  /**
   * The id of the board to move the Pin onto.
   **/
  @ApiModelProperty(value = "The id of the board to move the Pin onto.")
  public String getBoardId() {
    return boardId;
  }
  public void setBoardId(String boardId) {
    this.boardId = boardId;
  }

  /**
   * <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID.
   **/
  @ApiModelProperty(value = "<a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID.")
  public String getBoardSectionId() {
    return boardSectionId;
  }
  public void setBoardSectionId(String boardSectionId) {
    this.boardSectionId = boardSectionId;
  }

  /**
   * Pin description - 800 characters maximum.
   **/
  @ApiModelProperty(value = "Pin description - 800 characters maximum.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * URL viewer is taken to when they click pin.
   **/
  @ApiModelProperty(value = "URL viewer is taken to when they click pin.")
  public String getLink() {
    return link;
  }
  public void setLink(String link) {
    this.link = link;
  }

  /**
   * The native pin title that creators explicitly prefer to display.
   **/
  @ApiModelProperty(value = "The native pin title that creators explicitly prefer to display.")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   * Carousel Pin slots data.
   **/
  @ApiModelProperty(value = "Carousel Pin slots data.")
  public List<PinUpdateCarouselSlotsInner> getCarouselSlots() {
    return carouselSlots;
  }
  public void setCarouselSlots(List<PinUpdateCarouselSlotsInner> carouselSlots) {
    this.carouselSlots = carouselSlots;
  }

  /**
   * Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
   **/
  @ApiModelProperty(value = "Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.")
  public String getNote() {
    return note;
  }
  public void setNote(String note) {
    this.note = note;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PinUpdate pinUpdate = (PinUpdate) o;
    return (this.altText == null ? pinUpdate.altText == null : this.altText.equals(pinUpdate.altText)) &&
        (this.boardId == null ? pinUpdate.boardId == null : this.boardId.equals(pinUpdate.boardId)) &&
        (this.boardSectionId == null ? pinUpdate.boardSectionId == null : this.boardSectionId.equals(pinUpdate.boardSectionId)) &&
        (this.description == null ? pinUpdate.description == null : this.description.equals(pinUpdate.description)) &&
        (this.link == null ? pinUpdate.link == null : this.link.equals(pinUpdate.link)) &&
        (this.title == null ? pinUpdate.title == null : this.title.equals(pinUpdate.title)) &&
        (this.carouselSlots == null ? pinUpdate.carouselSlots == null : this.carouselSlots.equals(pinUpdate.carouselSlots)) &&
        (this.note == null ? pinUpdate.note == null : this.note.equals(pinUpdate.note));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.altText == null ? 0: this.altText.hashCode());
    result = 31 * result + (this.boardId == null ? 0: this.boardId.hashCode());
    result = 31 * result + (this.boardSectionId == null ? 0: this.boardSectionId.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.link == null ? 0: this.link.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.carouselSlots == null ? 0: this.carouselSlots.hashCode());
    result = 31 * result + (this.note == null ? 0: this.note.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PinUpdate {\n");
    
    sb.append("  altText: ").append(altText).append("\n");
    sb.append("  boardId: ").append(boardId).append("\n");
    sb.append("  boardSectionId: ").append(boardSectionId).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  link: ").append(link).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  carouselSlots: ").append(carouselSlots).append("\n");
    sb.append("  note: ").append(note).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
