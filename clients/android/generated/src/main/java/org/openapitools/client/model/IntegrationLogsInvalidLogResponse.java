/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.IntegrationLogsInvalidLogResponseRejectedLogsInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Schema describing the response when a log has invalid fields.
 **/
@ApiModel(description = "Schema describing the response when a log has invalid fields.")
public class IntegrationLogsInvalidLogResponse {
  
  @SerializedName("rejected_logs")
  private List<IntegrationLogsInvalidLogResponseRejectedLogsInner> rejectedLogs = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<IntegrationLogsInvalidLogResponseRejectedLogsInner> getRejectedLogs() {
    return rejectedLogs;
  }
  public void setRejectedLogs(List<IntegrationLogsInvalidLogResponseRejectedLogsInner> rejectedLogs) {
    this.rejectedLogs = rejectedLogs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationLogsInvalidLogResponse integrationLogsInvalidLogResponse = (IntegrationLogsInvalidLogResponse) o;
    return (this.rejectedLogs == null ? integrationLogsInvalidLogResponse.rejectedLogs == null : this.rejectedLogs.equals(integrationLogsInvalidLogResponse.rejectedLogs));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.rejectedLogs == null ? 0: this.rejectedLogs.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationLogsInvalidLogResponse {\n");
    
    sb.append("  rejectedLogs: ").append(rejectedLogs).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
