/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Keyword;
import org.openapitools.client.model.KeywordError;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class KeywordsResponse {
  
  @SerializedName("errors")
  private List<KeywordError> errors = null;
  @SerializedName("keywords")
  private List<Keyword> keywords = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<KeywordError> getErrors() {
    return errors;
  }
  public void setErrors(List<KeywordError> errors) {
    this.errors = errors;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Keyword> getKeywords() {
    return keywords;
  }
  public void setKeywords(List<Keyword> keywords) {
    this.keywords = keywords;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeywordsResponse keywordsResponse = (KeywordsResponse) o;
    return (this.errors == null ? keywordsResponse.errors == null : this.errors.equals(keywordsResponse.errors)) &&
        (this.keywords == null ? keywordsResponse.keywords == null : this.keywords.equals(keywordsResponse.keywords));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.errors == null ? 0: this.errors.hashCode());
    result = 31 * result + (this.keywords == null ? 0: this.keywords.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeywordsResponse {\n");
    
    sb.append("  errors: ").append(errors).append("\n");
    sb.append("  keywords: ").append(keywords).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
