/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Metadata for the invite/request.
 **/
@ApiModel(description = "Metadata for the invite/request.")
public class BaseInviteDataResponseInviteData {
  
  @SerializedName("invite_expiration")
  private Integer inviteExpiration = null;
  @SerializedName("invite_status")
  private String inviteStatus = null;
  @SerializedName("invite_type")
  private String inviteType = null;
  @SerializedName("last_updated_time")
  private Integer lastUpdatedTime = null;
  @SerializedName("sent_at")
  private Integer sentAt = null;

  /**
   * The date and time when the invite/request will expire. Returned in milliseconds.
   **/
  @ApiModelProperty(value = "The date and time when the invite/request will expire. Returned in milliseconds.")
  public Integer getInviteExpiration() {
    return inviteExpiration;
  }
  public void setInviteExpiration(Integer inviteExpiration) {
    this.inviteExpiration = inviteExpiration;
  }

  /**
   * The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
   **/
  @ApiModelProperty(value = "The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.")
  public String getInviteStatus() {
    return inviteStatus;
  }
  public void setInviteStatus(String inviteStatus) {
    this.inviteStatus = inviteStatus;
  }

  /**
   * The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
   **/
  @ApiModelProperty(value = "The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.")
  public String getInviteType() {
    return inviteType;
  }
  public void setInviteType(String inviteType) {
    this.inviteType = inviteType;
  }

  /**
   * The date and time the invite/request was last updated. Returned in milliseconds.
   **/
  @ApiModelProperty(value = "The date and time the invite/request was last updated. Returned in milliseconds.")
  public Integer getLastUpdatedTime() {
    return lastUpdatedTime;
  }
  public void setLastUpdatedTime(Integer lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }

  /**
   * The date and time the invite/request was sent/created. Returned in milliseconds.
   **/
  @ApiModelProperty(value = "The date and time the invite/request was sent/created. Returned in milliseconds.")
  public Integer getSentAt() {
    return sentAt;
  }
  public void setSentAt(Integer sentAt) {
    this.sentAt = sentAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseInviteDataResponseInviteData baseInviteDataResponseInviteData = (BaseInviteDataResponseInviteData) o;
    return (this.inviteExpiration == null ? baseInviteDataResponseInviteData.inviteExpiration == null : this.inviteExpiration.equals(baseInviteDataResponseInviteData.inviteExpiration)) &&
        (this.inviteStatus == null ? baseInviteDataResponseInviteData.inviteStatus == null : this.inviteStatus.equals(baseInviteDataResponseInviteData.inviteStatus)) &&
        (this.inviteType == null ? baseInviteDataResponseInviteData.inviteType == null : this.inviteType.equals(baseInviteDataResponseInviteData.inviteType)) &&
        (this.lastUpdatedTime == null ? baseInviteDataResponseInviteData.lastUpdatedTime == null : this.lastUpdatedTime.equals(baseInviteDataResponseInviteData.lastUpdatedTime)) &&
        (this.sentAt == null ? baseInviteDataResponseInviteData.sentAt == null : this.sentAt.equals(baseInviteDataResponseInviteData.sentAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.inviteExpiration == null ? 0: this.inviteExpiration.hashCode());
    result = 31 * result + (this.inviteStatus == null ? 0: this.inviteStatus.hashCode());
    result = 31 * result + (this.inviteType == null ? 0: this.inviteType.hashCode());
    result = 31 * result + (this.lastUpdatedTime == null ? 0: this.lastUpdatedTime.hashCode());
    result = 31 * result + (this.sentAt == null ? 0: this.sentAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseInviteDataResponseInviteData {\n");
    
    sb.append("  inviteExpiration: ").append(inviteExpiration).append("\n");
    sb.append("  inviteStatus: ").append(inviteStatus).append("\n");
    sb.append("  inviteType: ").append(inviteType).append("\n");
    sb.append("  lastUpdatedTime: ").append(lastUpdatedTime).append("\n");
    sb.append("  sentAt: ").append(sentAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
