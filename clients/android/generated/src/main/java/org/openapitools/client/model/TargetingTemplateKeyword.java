/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.MatchType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TargetingTemplateKeyword {
  
  @SerializedName("match_type")
  private MatchType matchType = null;
  @SerializedName("value")
  private String value = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public MatchType getMatchType() {
    return matchType;
  }
  public void setMatchType(MatchType matchType) {
    this.matchType = matchType;
  }

  /**
   * The keyword targeting (120 chars max).
   **/
  @ApiModelProperty(value = "The keyword targeting (120 chars max).")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetingTemplateKeyword targetingTemplateKeyword = (TargetingTemplateKeyword) o;
    return (this.matchType == null ? targetingTemplateKeyword.matchType == null : this.matchType.equals(targetingTemplateKeyword.matchType)) &&
        (this.value == null ? targetingTemplateKeyword.value == null : this.value.equals(targetingTemplateKeyword.value));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.matchType == null ? 0: this.matchType.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetingTemplateKeyword {\n");
    
    sb.append("  matchType: ").append(matchType).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
