/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.BoardOwner;
import org.openapitools.client.model.PinMedia;
import org.openapitools.client.model.PinMediaSource;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Pin
 **/
@ApiModel(description = "Pin")
public class PinCreate {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("created_at")
  private Date createdAt = null;
  @SerializedName("link")
  private String link = null;
  @SerializedName("title")
  private String title = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("dominant_color")
  private String dominantColor = null;
  @SerializedName("alt_text")
  private String altText = null;
  @SerializedName("board_id")
  private String boardId = null;
  @SerializedName("board_section_id")
  private String boardSectionId = null;
  @SerializedName("board_owner")
  private BoardOwner boardOwner = null;
  @SerializedName("media")
  private PinMedia media = null;
  @SerializedName("media_source")
  private PinMediaSource mediaSource = null;
  @SerializedName("parent_pin_id")
  private String parentPinId = null;
  @SerializedName("note")
  private String note = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLink() {
    return link;
  }
  public void setLink(String link) {
    this.link = link;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Dominant pin color. Hex number, e.g. \\\"#6E7874\\\".
   **/
  @ApiModelProperty(value = "Dominant pin color. Hex number, e.g. \\\"#6E7874\\\".")
  public String getDominantColor() {
    return dominantColor;
  }
  public void setDominantColor(String dominantColor) {
    this.dominantColor = dominantColor;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAltText() {
    return altText;
  }
  public void setAltText(String altText) {
    this.altText = altText;
  }

  /**
   * The board to which this Pin belongs.
   **/
  @ApiModelProperty(value = "The board to which this Pin belongs.")
  public String getBoardId() {
    return boardId;
  }
  public void setBoardId(String boardId) {
    this.boardId = boardId;
  }

  /**
   * The board section to which this Pin belongs.
   **/
  @ApiModelProperty(value = "The board section to which this Pin belongs.")
  public String getBoardSectionId() {
    return boardSectionId;
  }
  public void setBoardSectionId(String boardSectionId) {
    this.boardSectionId = boardSectionId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BoardOwner getBoardOwner() {
    return boardOwner;
  }
  public void setBoardOwner(BoardOwner boardOwner) {
    this.boardOwner = boardOwner;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PinMedia getMedia() {
    return media;
  }
  public void setMedia(PinMedia media) {
    this.media = media;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PinMediaSource getMediaSource() {
    return mediaSource;
  }
  public void setMediaSource(PinMediaSource mediaSource) {
    this.mediaSource = mediaSource;
  }

  /**
   * The source pin id if this pin was saved from another pin. <a href=\"https://help.pinterest.com/article/save-pins-on-pinterest\">Learn more</a>.
   **/
  @ApiModelProperty(value = "The source pin id if this pin was saved from another pin. <a href=\"https://help.pinterest.com/article/save-pins-on-pinterest\">Learn more</a>.")
  public String getParentPinId() {
    return parentPinId;
  }
  public void setParentPinId(String parentPinId) {
    this.parentPinId = parentPinId;
  }

  /**
   * Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
   **/
  @ApiModelProperty(value = "Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.")
  public String getNote() {
    return note;
  }
  public void setNote(String note) {
    this.note = note;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PinCreate pinCreate = (PinCreate) o;
    return (this.id == null ? pinCreate.id == null : this.id.equals(pinCreate.id)) &&
        (this.createdAt == null ? pinCreate.createdAt == null : this.createdAt.equals(pinCreate.createdAt)) &&
        (this.link == null ? pinCreate.link == null : this.link.equals(pinCreate.link)) &&
        (this.title == null ? pinCreate.title == null : this.title.equals(pinCreate.title)) &&
        (this.description == null ? pinCreate.description == null : this.description.equals(pinCreate.description)) &&
        (this.dominantColor == null ? pinCreate.dominantColor == null : this.dominantColor.equals(pinCreate.dominantColor)) &&
        (this.altText == null ? pinCreate.altText == null : this.altText.equals(pinCreate.altText)) &&
        (this.boardId == null ? pinCreate.boardId == null : this.boardId.equals(pinCreate.boardId)) &&
        (this.boardSectionId == null ? pinCreate.boardSectionId == null : this.boardSectionId.equals(pinCreate.boardSectionId)) &&
        (this.boardOwner == null ? pinCreate.boardOwner == null : this.boardOwner.equals(pinCreate.boardOwner)) &&
        (this.media == null ? pinCreate.media == null : this.media.equals(pinCreate.media)) &&
        (this.mediaSource == null ? pinCreate.mediaSource == null : this.mediaSource.equals(pinCreate.mediaSource)) &&
        (this.parentPinId == null ? pinCreate.parentPinId == null : this.parentPinId.equals(pinCreate.parentPinId)) &&
        (this.note == null ? pinCreate.note == null : this.note.equals(pinCreate.note));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.link == null ? 0: this.link.hashCode());
    result = 31 * result + (this.title == null ? 0: this.title.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.dominantColor == null ? 0: this.dominantColor.hashCode());
    result = 31 * result + (this.altText == null ? 0: this.altText.hashCode());
    result = 31 * result + (this.boardId == null ? 0: this.boardId.hashCode());
    result = 31 * result + (this.boardSectionId == null ? 0: this.boardSectionId.hashCode());
    result = 31 * result + (this.boardOwner == null ? 0: this.boardOwner.hashCode());
    result = 31 * result + (this.media == null ? 0: this.media.hashCode());
    result = 31 * result + (this.mediaSource == null ? 0: this.mediaSource.hashCode());
    result = 31 * result + (this.parentPinId == null ? 0: this.parentPinId.hashCode());
    result = 31 * result + (this.note == null ? 0: this.note.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PinCreate {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  link: ").append(link).append("\n");
    sb.append("  title: ").append(title).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  dominantColor: ").append(dominantColor).append("\n");
    sb.append("  altText: ").append(altText).append("\n");
    sb.append("  boardId: ").append(boardId).append("\n");
    sb.append("  boardSectionId: ").append(boardSectionId).append("\n");
    sb.append("  boardOwner: ").append(boardOwner).append("\n");
    sb.append("  media: ").append(media).append("\n");
    sb.append("  mediaSource: ").append(mediaSource).append("\n");
    sb.append("  parentPinId: ").append(parentPinId).append("\n");
    sb.append("  note: ").append(note).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
