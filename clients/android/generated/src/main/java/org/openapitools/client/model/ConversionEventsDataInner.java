/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConversionEventsDataInnerCustomData;
import org.openapitools.client.model.ConversionEventsUserData;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ConversionEventsDataInner {
  
  @SerializedName("event_name")
  private String eventName = null;
  @SerializedName("action_source")
  private String actionSource = null;
  @SerializedName("event_time")
  private Long eventTime = null;
  @SerializedName("event_id")
  private String eventId = null;
  @SerializedName("event_source_url")
  private String eventSourceUrl = null;
  @SerializedName("opt_out")
  private Boolean optOut = null;
  @SerializedName("partner_name")
  private String partnerName = null;
  @SerializedName("user_data")
  private ConversionEventsUserData userData = null;
  @SerializedName("custom_data")
  private ConversionEventsDataInnerCustomData customData = null;
  @SerializedName("app_id")
  private String appId = null;
  @SerializedName("app_name")
  private String appName = null;
  @SerializedName("app_version")
  private String appVersion = null;
  @SerializedName("device_brand")
  private String deviceBrand = null;
  @SerializedName("device_carrier")
  private String deviceCarrier = null;
  @SerializedName("device_model")
  private String deviceModel = null;
  @SerializedName("device_type")
  private String deviceType = null;
  @SerializedName("os_version")
  private String osVersion = null;
  @SerializedName("wifi")
  private Boolean wifi = null;
  @SerializedName("language")
  private String language = null;

  /**
   * <p>The type of the user event. Please use the right event_name otherwise the event won't be accepted and show up correctly in reports.   <ul>   <li><code>add_to_cart</code></li>   <li><code>checkout</code></li>   <li><code>custom</code></li>   <li><code>lead</code></li>   <li><code>page_visit</code></li>   <li><code>search</code></li>   <li><code>signup</code></li>   <li><code>view_category</code></li>   <li><code>watch_video</code></li>   </ul> </p> 
   **/
  @ApiModelProperty(required = true, value = "<p>The type of the user event. Please use the right event_name otherwise the event won't be accepted and show up correctly in reports.   <ul>   <li><code>add_to_cart</code></li>   <li><code>checkout</code></li>   <li><code>custom</code></li>   <li><code>lead</code></li>   <li><code>page_visit</code></li>   <li><code>search</code></li>   <li><code>signup</code></li>   <li><code>view_category</code></li>   <li><code>watch_video</code></li>   </ul> </p> ")
  public String getEventName() {
    return eventName;
  }
  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  /**
   * <p>   The source indicating where the conversion event occurred.   <ul>     <li><code>app_android</code></li>     <li><code>app_ios</code></li>     <li><code>web</code></li>     <li><code>offline</code></li>   </ul> </p> 
   **/
  @ApiModelProperty(required = true, value = "<p>   The source indicating where the conversion event occurred.   <ul>     <li><code>app_android</code></li>     <li><code>app_ios</code></li>     <li><code>web</code></li>     <li><code>offline</code></li>   </ul> </p> ")
  public String getActionSource() {
    return actionSource;
  }
  public void setActionSource(String actionSource) {
    this.actionSource = actionSource;
  }

  /**
   * The time when the event happened. Unix timestamp in seconds.
   **/
  @ApiModelProperty(required = true, value = "The time when the event happened. Unix timestamp in seconds.")
  public Long getEventTime() {
    return eventTime;
  }
  public void setEventTime(Long eventTime) {
    this.eventTime = eventTime;
  }

  /**
   * A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking. Without this, event's data is likely to be double counted and will cause report metric inflation. Third-party vendors make sure this field is updated on both Pinterest tag and Conversions API side before rolling out template for Conversions API.
   **/
  @ApiModelProperty(required = true, value = "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking. Without this, event's data is likely to be double counted and will cause report metric inflation. Third-party vendors make sure this field is updated on both Pinterest tag and Conversions API side before rolling out template for Conversions API.")
  public String getEventId() {
    return eventId;
  }
  public void setEventId(String eventId) {
    this.eventId = eventId;
  }

  /**
   * URL of the web conversion event.
   **/
  @ApiModelProperty(value = "URL of the web conversion event.")
  public String getEventSourceUrl() {
    return eventSourceUrl;
  }
  public void setEventSourceUrl(String eventSourceUrl) {
    this.eventSourceUrl = eventSourceUrl;
  }

  /**
   * When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.
   **/
  @ApiModelProperty(value = "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.")
  public Boolean getOptOut() {
    return optOut;
  }
  public void setOptOut(Boolean optOut) {
    this.optOut = optOut;
  }

  /**
   * The third party partner name responsible to send the event to Conversions API on behalf of the advertiser. The naming convention is \"ss-partnername\" lowercase. E.g ‘ss-shopify’
   **/
  @ApiModelProperty(value = "The third party partner name responsible to send the event to Conversions API on behalf of the advertiser. The naming convention is \"ss-partnername\" lowercase. E.g ‘ss-shopify’")
  public String getPartnerName() {
    return partnerName;
  }
  public void setPartnerName(String partnerName) {
    this.partnerName = partnerName;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ConversionEventsUserData getUserData() {
    return userData;
  }
  public void setUserData(ConversionEventsUserData userData) {
    this.userData = userData;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConversionEventsDataInnerCustomData getCustomData() {
    return customData;
  }
  public void setCustomData(ConversionEventsDataInnerCustomData customData) {
    this.customData = customData;
  }

  /**
   * The app store app ID.
   **/
  @ApiModelProperty(value = "The app store app ID.")
  public String getAppId() {
    return appId;
  }
  public void setAppId(String appId) {
    this.appId = appId;
  }

  /**
   * Name of the app.
   **/
  @ApiModelProperty(value = "Name of the app.")
  public String getAppName() {
    return appName;
  }
  public void setAppName(String appName) {
    this.appName = appName;
  }

  /**
   * Version of the app.
   **/
  @ApiModelProperty(value = "Version of the app.")
  public String getAppVersion() {
    return appVersion;
  }
  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }

  /**
   * Brand of the user device.
   **/
  @ApiModelProperty(value = "Brand of the user device.")
  public String getDeviceBrand() {
    return deviceBrand;
  }
  public void setDeviceBrand(String deviceBrand) {
    this.deviceBrand = deviceBrand;
  }

  /**
   * User device's mobile carrier.
   **/
  @ApiModelProperty(value = "User device's mobile carrier.")
  public String getDeviceCarrier() {
    return deviceCarrier;
  }
  public void setDeviceCarrier(String deviceCarrier) {
    this.deviceCarrier = deviceCarrier;
  }

  /**
   * Model of the user device.
   **/
  @ApiModelProperty(value = "Model of the user device.")
  public String getDeviceModel() {
    return deviceModel;
  }
  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }

  /**
   * Type of the user device.
   **/
  @ApiModelProperty(value = "Type of the user device.")
  public String getDeviceType() {
    return deviceType;
  }
  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  /**
   * Version of the device operating system.
   **/
  @ApiModelProperty(value = "Version of the device operating system.")
  public String getOsVersion() {
    return osVersion;
  }
  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }

  /**
   * Whether the event occurred when the user device was connected to wifi.
   **/
  @ApiModelProperty(value = "Whether the event occurred when the user device was connected to wifi.")
  public Boolean getWifi() {
    return wifi;
  }
  public void setWifi(Boolean wifi) {
    this.wifi = wifi;
  }

  /**
   * Two-character ISO-639-1 language code indicating the user's language.
   **/
  @ApiModelProperty(value = "Two-character ISO-639-1 language code indicating the user's language.")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversionEventsDataInner conversionEventsDataInner = (ConversionEventsDataInner) o;
    return (this.eventName == null ? conversionEventsDataInner.eventName == null : this.eventName.equals(conversionEventsDataInner.eventName)) &&
        (this.actionSource == null ? conversionEventsDataInner.actionSource == null : this.actionSource.equals(conversionEventsDataInner.actionSource)) &&
        (this.eventTime == null ? conversionEventsDataInner.eventTime == null : this.eventTime.equals(conversionEventsDataInner.eventTime)) &&
        (this.eventId == null ? conversionEventsDataInner.eventId == null : this.eventId.equals(conversionEventsDataInner.eventId)) &&
        (this.eventSourceUrl == null ? conversionEventsDataInner.eventSourceUrl == null : this.eventSourceUrl.equals(conversionEventsDataInner.eventSourceUrl)) &&
        (this.optOut == null ? conversionEventsDataInner.optOut == null : this.optOut.equals(conversionEventsDataInner.optOut)) &&
        (this.partnerName == null ? conversionEventsDataInner.partnerName == null : this.partnerName.equals(conversionEventsDataInner.partnerName)) &&
        (this.userData == null ? conversionEventsDataInner.userData == null : this.userData.equals(conversionEventsDataInner.userData)) &&
        (this.customData == null ? conversionEventsDataInner.customData == null : this.customData.equals(conversionEventsDataInner.customData)) &&
        (this.appId == null ? conversionEventsDataInner.appId == null : this.appId.equals(conversionEventsDataInner.appId)) &&
        (this.appName == null ? conversionEventsDataInner.appName == null : this.appName.equals(conversionEventsDataInner.appName)) &&
        (this.appVersion == null ? conversionEventsDataInner.appVersion == null : this.appVersion.equals(conversionEventsDataInner.appVersion)) &&
        (this.deviceBrand == null ? conversionEventsDataInner.deviceBrand == null : this.deviceBrand.equals(conversionEventsDataInner.deviceBrand)) &&
        (this.deviceCarrier == null ? conversionEventsDataInner.deviceCarrier == null : this.deviceCarrier.equals(conversionEventsDataInner.deviceCarrier)) &&
        (this.deviceModel == null ? conversionEventsDataInner.deviceModel == null : this.deviceModel.equals(conversionEventsDataInner.deviceModel)) &&
        (this.deviceType == null ? conversionEventsDataInner.deviceType == null : this.deviceType.equals(conversionEventsDataInner.deviceType)) &&
        (this.osVersion == null ? conversionEventsDataInner.osVersion == null : this.osVersion.equals(conversionEventsDataInner.osVersion)) &&
        (this.wifi == null ? conversionEventsDataInner.wifi == null : this.wifi.equals(conversionEventsDataInner.wifi)) &&
        (this.language == null ? conversionEventsDataInner.language == null : this.language.equals(conversionEventsDataInner.language));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.eventName == null ? 0: this.eventName.hashCode());
    result = 31 * result + (this.actionSource == null ? 0: this.actionSource.hashCode());
    result = 31 * result + (this.eventTime == null ? 0: this.eventTime.hashCode());
    result = 31 * result + (this.eventId == null ? 0: this.eventId.hashCode());
    result = 31 * result + (this.eventSourceUrl == null ? 0: this.eventSourceUrl.hashCode());
    result = 31 * result + (this.optOut == null ? 0: this.optOut.hashCode());
    result = 31 * result + (this.partnerName == null ? 0: this.partnerName.hashCode());
    result = 31 * result + (this.userData == null ? 0: this.userData.hashCode());
    result = 31 * result + (this.customData == null ? 0: this.customData.hashCode());
    result = 31 * result + (this.appId == null ? 0: this.appId.hashCode());
    result = 31 * result + (this.appName == null ? 0: this.appName.hashCode());
    result = 31 * result + (this.appVersion == null ? 0: this.appVersion.hashCode());
    result = 31 * result + (this.deviceBrand == null ? 0: this.deviceBrand.hashCode());
    result = 31 * result + (this.deviceCarrier == null ? 0: this.deviceCarrier.hashCode());
    result = 31 * result + (this.deviceModel == null ? 0: this.deviceModel.hashCode());
    result = 31 * result + (this.deviceType == null ? 0: this.deviceType.hashCode());
    result = 31 * result + (this.osVersion == null ? 0: this.osVersion.hashCode());
    result = 31 * result + (this.wifi == null ? 0: this.wifi.hashCode());
    result = 31 * result + (this.language == null ? 0: this.language.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversionEventsDataInner {\n");
    
    sb.append("  eventName: ").append(eventName).append("\n");
    sb.append("  actionSource: ").append(actionSource).append("\n");
    sb.append("  eventTime: ").append(eventTime).append("\n");
    sb.append("  eventId: ").append(eventId).append("\n");
    sb.append("  eventSourceUrl: ").append(eventSourceUrl).append("\n");
    sb.append("  optOut: ").append(optOut).append("\n");
    sb.append("  partnerName: ").append(partnerName).append("\n");
    sb.append("  userData: ").append(userData).append("\n");
    sb.append("  customData: ").append(customData).append("\n");
    sb.append("  appId: ").append(appId).append("\n");
    sb.append("  appName: ").append(appName).append("\n");
    sb.append("  appVersion: ").append(appVersion).append("\n");
    sb.append("  deviceBrand: ").append(deviceBrand).append("\n");
    sb.append("  deviceCarrier: ").append(deviceCarrier).append("\n");
    sb.append("  deviceModel: ").append(deviceModel).append("\n");
    sb.append("  deviceType: ").append(deviceType).append("\n");
    sb.append("  osVersion: ").append(osVersion).append("\n");
    sb.append("  wifi: ").append(wifi).append("\n");
    sb.append("  language: ").append(language).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
