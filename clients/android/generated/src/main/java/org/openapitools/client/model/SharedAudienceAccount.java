/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SharedAudienceAccount {
  
  @SerializedName("account_id")
  private String accountId = null;
  @SerializedName("account_name")
  private String accountName = null;
  public enum AccountTypeEnum {
     AD_ACCOUNT,  BUSINESS_ACCOUNT, 
  };
  @SerializedName("account_type")
  private AccountTypeEnum accountType = null;
  @SerializedName("shared_on_timestamp")
  private Integer sharedOnTimestamp = null;

  /**
   * Account ID (ad account or business ID).
   **/
  @ApiModelProperty(required = true, value = "Account ID (ad account or business ID).")
  public String getAccountId() {
    return accountId;
  }
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  /**
   * Account name.
   **/
  @ApiModelProperty(required = true, value = "Account name.")
  public String getAccountName() {
    return accountName;
  }
  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  /**
   * account type
   **/
  @ApiModelProperty(required = true, value = "account type")
  public AccountTypeEnum getAccountType() {
    return accountType;
  }
  public void setAccountType(AccountTypeEnum accountType) {
    this.accountType = accountType;
  }

  /**
   * Epoch timestamp in seconds for the shared audience event
   **/
  @ApiModelProperty(required = true, value = "Epoch timestamp in seconds for the shared audience event")
  public Integer getSharedOnTimestamp() {
    return sharedOnTimestamp;
  }
  public void setSharedOnTimestamp(Integer sharedOnTimestamp) {
    this.sharedOnTimestamp = sharedOnTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SharedAudienceAccount sharedAudienceAccount = (SharedAudienceAccount) o;
    return (this.accountId == null ? sharedAudienceAccount.accountId == null : this.accountId.equals(sharedAudienceAccount.accountId)) &&
        (this.accountName == null ? sharedAudienceAccount.accountName == null : this.accountName.equals(sharedAudienceAccount.accountName)) &&
        (this.accountType == null ? sharedAudienceAccount.accountType == null : this.accountType.equals(sharedAudienceAccount.accountType)) &&
        (this.sharedOnTimestamp == null ? sharedAudienceAccount.sharedOnTimestamp == null : this.sharedOnTimestamp.equals(sharedAudienceAccount.sharedOnTimestamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accountId == null ? 0: this.accountId.hashCode());
    result = 31 * result + (this.accountName == null ? 0: this.accountName.hashCode());
    result = 31 * result + (this.accountType == null ? 0: this.accountType.hashCode());
    result = 31 * result + (this.sharedOnTimestamp == null ? 0: this.sharedOnTimestamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SharedAudienceAccount {\n");
    
    sb.append("  accountId: ").append(accountId).append("\n");
    sb.append("  accountName: ").append(accountName).append("\n");
    sb.append("  accountType: ").append(accountType).append("\n");
    sb.append("  sharedOnTimestamp: ").append(sharedOnTimestamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
