/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CatalogsHotelAddress {
  
  @SerializedName("addr1")
  private String addr1 = null;
  @SerializedName("city")
  private String city = null;
  @SerializedName("region")
  private String region = null;
  @SerializedName("country")
  private String country = null;
  @SerializedName("postal_code")
  private String postalCode = null;

  /**
   * Primary street address of hotel.
   **/
  @ApiModelProperty(value = "Primary street address of hotel.")
  public String getAddr1() {
    return addr1;
  }
  public void setAddr1(String addr1) {
    this.addr1 = addr1;
  }

  /**
   * City where the hotel is located.
   **/
  @ApiModelProperty(value = "City where the hotel is located.")
  public String getCity() {
    return city;
  }
  public void setCity(String city) {
    this.city = city;
  }

  /**
   * State, county, province, where the hotel is located.
   **/
  @ApiModelProperty(value = "State, county, province, where the hotel is located.")
  public String getRegion() {
    return region;
  }
  public void setRegion(String region) {
    this.region = region;
  }

  /**
   * Country where the hotel is located.
   **/
  @ApiModelProperty(value = "Country where the hotel is located.")
  public String getCountry() {
    return country;
  }
  public void setCountry(String country) {
    this.country = country;
  }

  /**
   * Required for countries with a postal code system. Postal or zip code of the hotel.
   **/
  @ApiModelProperty(value = "Required for countries with a postal code system. Postal or zip code of the hotel.")
  public String getPostalCode() {
    return postalCode;
  }
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogsHotelAddress catalogsHotelAddress = (CatalogsHotelAddress) o;
    return (this.addr1 == null ? catalogsHotelAddress.addr1 == null : this.addr1.equals(catalogsHotelAddress.addr1)) &&
        (this.city == null ? catalogsHotelAddress.city == null : this.city.equals(catalogsHotelAddress.city)) &&
        (this.region == null ? catalogsHotelAddress.region == null : this.region.equals(catalogsHotelAddress.region)) &&
        (this.country == null ? catalogsHotelAddress.country == null : this.country.equals(catalogsHotelAddress.country)) &&
        (this.postalCode == null ? catalogsHotelAddress.postalCode == null : this.postalCode.equals(catalogsHotelAddress.postalCode));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.addr1 == null ? 0: this.addr1.hashCode());
    result = 31 * result + (this.city == null ? 0: this.city.hashCode());
    result = 31 * result + (this.region == null ? 0: this.region.hashCode());
    result = 31 * result + (this.country == null ? 0: this.country.hashCode());
    result = 31 * result + (this.postalCode == null ? 0: this.postalCode.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogsHotelAddress {\n");
    
    sb.append("  addr1: ").append(addr1).append("\n");
    sb.append("  city: ").append(city).append("\n");
    sb.append("  region: ").append(region).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("  postalCode: ").append(postalCode).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
