/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.CatalogsCreativeAssetsProductGroupFilters;
import org.openapitools.client.model.CatalogsLocale;
import org.openapitools.client.model.CatalogsProductGroupUpdateRequest;
import org.openapitools.client.model.CatalogsVerticalProductGroupUpdateRequest;
import org.openapitools.client.model.Country;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CatalogsProductGroupsUpdateRequest {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("is_featured")
  private Boolean isFeatured = null;
  @SerializedName("filters")
  private CatalogsCreativeAssetsProductGroupFilters filters = null;
  public enum CatalogTypeEnum {
     CREATIVE_ASSETS, 
  };
  @SerializedName("catalog_type")
  private CatalogTypeEnum catalogType = null;
  @SerializedName("country")
  private Country country = null;
  @SerializedName("locale")
  private CatalogsLocale locale = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * boolean indicator of whether the product group is being featured or not
   **/
  @ApiModelProperty(value = "boolean indicator of whether the product group is being featured or not")
  public Boolean getIsFeatured() {
    return isFeatured;
  }
  public void setIsFeatured(Boolean isFeatured) {
    this.isFeatured = isFeatured;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CatalogsCreativeAssetsProductGroupFilters getFilters() {
    return filters;
  }
  public void setFilters(CatalogsCreativeAssetsProductGroupFilters filters) {
    this.filters = filters;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CatalogTypeEnum getCatalogType() {
    return catalogType;
  }
  public void setCatalogType(CatalogTypeEnum catalogType) {
    this.catalogType = catalogType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Country getCountry() {
    return country;
  }
  public void setCountry(Country country) {
    this.country = country;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CatalogsLocale getLocale() {
    return locale;
  }
  public void setLocale(CatalogsLocale locale) {
    this.locale = locale;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogsProductGroupsUpdateRequest catalogsProductGroupsUpdateRequest = (CatalogsProductGroupsUpdateRequest) o;
    return (this.name == null ? catalogsProductGroupsUpdateRequest.name == null : this.name.equals(catalogsProductGroupsUpdateRequest.name)) &&
        (this.description == null ? catalogsProductGroupsUpdateRequest.description == null : this.description.equals(catalogsProductGroupsUpdateRequest.description)) &&
        (this.isFeatured == null ? catalogsProductGroupsUpdateRequest.isFeatured == null : this.isFeatured.equals(catalogsProductGroupsUpdateRequest.isFeatured)) &&
        (this.filters == null ? catalogsProductGroupsUpdateRequest.filters == null : this.filters.equals(catalogsProductGroupsUpdateRequest.filters)) &&
        (this.catalogType == null ? catalogsProductGroupsUpdateRequest.catalogType == null : this.catalogType.equals(catalogsProductGroupsUpdateRequest.catalogType)) &&
        (this.country == null ? catalogsProductGroupsUpdateRequest.country == null : this.country.equals(catalogsProductGroupsUpdateRequest.country)) &&
        (this.locale == null ? catalogsProductGroupsUpdateRequest.locale == null : this.locale.equals(catalogsProductGroupsUpdateRequest.locale));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.isFeatured == null ? 0: this.isFeatured.hashCode());
    result = 31 * result + (this.filters == null ? 0: this.filters.hashCode());
    result = 31 * result + (this.catalogType == null ? 0: this.catalogType.hashCode());
    result = 31 * result + (this.country == null ? 0: this.country.hashCode());
    result = 31 * result + (this.locale == null ? 0: this.locale.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogsProductGroupsUpdateRequest {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  isFeatured: ").append(isFeatured).append("\n");
    sb.append("  filters: ").append(filters).append("\n");
    sb.append("  catalogType: ").append(catalogType).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("  locale: ").append(locale).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
