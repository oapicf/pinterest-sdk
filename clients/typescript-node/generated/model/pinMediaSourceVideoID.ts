/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Video ID-based media source
*/
export class PinMediaSourceVideoID {
    'sourceType': PinMediaSourceVideoID.SourceTypeEnum;
    /**
    * Cover image url.
    */
    'coverImageUrl'?: string;
    /**
    * Content type for cover image Base64.
    */
    'coverImageContentType'?: PinMediaSourceVideoID.CoverImageContentTypeEnum;
    /**
    * Cover image Base64.
    */
    'coverImageData'?: string;
    'mediaId': string;
    /**
    * Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
    */
    'isStandard'?: boolean = true;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "sourceType",
            "baseName": "source_type",
            "type": "PinMediaSourceVideoID.SourceTypeEnum"
        },
        {
            "name": "coverImageUrl",
            "baseName": "cover_image_url",
            "type": "string"
        },
        {
            "name": "coverImageContentType",
            "baseName": "cover_image_content_type",
            "type": "PinMediaSourceVideoID.CoverImageContentTypeEnum"
        },
        {
            "name": "coverImageData",
            "baseName": "cover_image_data",
            "type": "string"
        },
        {
            "name": "mediaId",
            "baseName": "media_id",
            "type": "string"
        },
        {
            "name": "isStandard",
            "baseName": "is_standard",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return PinMediaSourceVideoID.attributeTypeMap;
    }
}

export namespace PinMediaSourceVideoID {
    export enum SourceTypeEnum {
        VideoId = <any> 'video_id'
    }
    export enum CoverImageContentTypeEnum {
        Jpeg = <any> 'image/jpeg',
        Png = <any> 'image/png'
    }
}
