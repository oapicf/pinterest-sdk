#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_ads_credit_redeem_request
import ../models/model_ads_credit_redeem_response
import ../models/model_error
import ../models/model_ssio_account_response
import ../models/model_ssio_create_insertion_order_request
import ../models/model_ssio_create_insertion_order_response
import ../models/model_ssio_edit_insertion_order_request
import ../models/model_ssio_edit_insertion_order_response
import ../models/model_ssio_insertion_order_status_response
import ../models/model_ads_credits_discounts_get_200_response
import ../models/model_billing_profiles_get_200_response
import ../models/model_ssio_insertion_orders_status_get_by_ad_account_200_response
import ../models/model_ssio_order_lines_get_by_ad_account_200_response

const basepath = "https://api.pinterest.com/v5"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc adsCreditRedeem*(httpClient: HttpClient, adAccountId: string, adsCreditRedeemRequest: AdsCreditRedeemRequest): (Option[AdsCreditRedeemResponse], Response) =
  ## Redeem ad credits
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/ads_credit/redeem", $(%adsCreditRedeemRequest))
  constructResult[AdsCreditRedeemResponse](response)


proc adsCreditsDiscountsGet*(httpClient: HttpClient, adAccountId: string, bookmark: string, pageSize: int): (Option[ads_credits_discounts_get_200_response], Response) =
  ## Get ads credit discounts
  let query_for_api_call = encodeQuery([
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ads_credit/discounts" & "?" & query_for_api_call)
  constructResult[ads_credits_discounts_get_200_response](response)


proc billingProfilesGet*(httpClient: HttpClient, adAccountId: string, isActive: bool, bookmark: string, pageSize: int): (Option[billing_profiles_get_200_response], Response) =
  ## Get billing profiles
  let query_for_api_call = encodeQuery([
    ("is_active", $isActive), # Return active billing profiles, if false return all billing profiles.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/billing_profiles" & "?" & query_for_api_call)
  constructResult[billing_profiles_get_200_response](response)


proc ssioAccountsGet*(httpClient: HttpClient, adAccountId: string): (Option[SSIOAccountResponse], Response) =
  ## Get Salesforce account details including bill-to information.

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ssio/accounts")
  constructResult[SSIOAccountResponse](response)


proc ssioInsertionOrderCreate*(httpClient: HttpClient, adAccountId: string, sSIOCreateInsertionOrderRequest: SSIOCreateInsertionOrderRequest): (Option[SSIOCreateInsertionOrderResponse], Response) =
  ## Create insertion order through SSIO.
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/ssio/insertion_orders", $(%sSIOCreateInsertionOrderRequest))
  constructResult[SSIOCreateInsertionOrderResponse](response)


proc ssioInsertionOrderEdit*(httpClient: HttpClient, adAccountId: string, sSIOEditInsertionOrderRequest: SSIOEditInsertionOrderRequest): (Option[SSIOEditInsertionOrderResponse], Response) =
  ## Edit insertion order through SSIO.
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.patch(basepath & fmt"/ad_accounts/{ad_account_id}/ssio/insertion_orders", $(%sSIOEditInsertionOrderRequest))
  constructResult[SSIOEditInsertionOrderResponse](response)


proc ssioInsertionOrdersStatusGetByAdAccount*(httpClient: HttpClient, adAccountId: string, bookmark: string, pageSize: int): (Option[ssio_insertion_orders_status_get_by_ad_account_200_response], Response) =
  ## Get insertion order status by ad account id.
  let query_for_api_call = encodeQuery([
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ssio/insertion_orders/status" & "?" & query_for_api_call)
  constructResult[ssio_insertion_orders_status_get_by_ad_account_200_response](response)


proc ssioInsertionOrdersStatusGetByPinOrderId*(httpClient: HttpClient, adAccountId: string, pinOrderId: string): (Option[SSIOInsertionOrderStatusResponse], Response) =
  ## Get insertion order status by pin order id.

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status")
  constructResult[SSIOInsertionOrderStatusResponse](response)


proc ssioOrderLinesGetByAdAccount*(httpClient: HttpClient, adAccountId: string, bookmark: string, pageSize: int, pinOrderId: string): (Option[ssio_order_lines_get_by_ad_account_200_response], Response) =
  ## Get Salesforce order lines by ad account id.
  let query_for_api_call = encodeQuery([
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
    ("pin_order_id", $pinOrderId), # The pin order id associated with the ssio insertino order
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ssio/order_lines" & "?" & query_for_api_call)
  constructResult[ssio_order_lines_get_by_ad_account_200_response](response)

