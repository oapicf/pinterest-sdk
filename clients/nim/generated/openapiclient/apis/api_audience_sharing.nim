#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_audience_account_type
import ../models/model_business_shared_audience
import ../models/model_business_shared_audience_response
import ../models/model_error
import ../models/model_shared_audience
import ../models/model_shared_audience_response
import ../models/model_ad_accounts_audiences_shared_accounts_list_200_response
import ../models/model_audiences_list_200_response

const basepath = "https://api.pinterest.com/v5"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc adAccountsAudiencesSharedAccountsList*(httpClient: HttpClient, adAccountId: string, audienceId: string, accountType: AudienceAccountType, pageSize: int, bookmark: string): (Option[ad_accounts_audiences_shared_accounts_list_200_response], Response) =
  ## List accounts with access to an audience owned by an ad account
  let query_for_api_call = encodeQuery([
    ("audience_id", $audienceId), # Unique identifier of the audience to use to filter the results.
    ("account_type", $accountType), # Filter accounts by account type.
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/audiences/shared/accounts" & "?" & query_for_api_call)
  constructResult[ad_accounts_audiences_shared_accounts_list_200_response](response)


proc businessAccountAudiencesSharedAccountsList*(httpClient: HttpClient, businessId: string, audienceId: string, accountType: AudienceAccountType, pageSize: int, bookmark: string): (Option[ad_accounts_audiences_shared_accounts_list_200_response], Response) =
  ## List accounts with access to an audience owned by a business
  let query_for_api_call = encodeQuery([
    ("audience_id", $audienceId), # Unique identifier of the audience to use to filter the results.
    ("account_type", $accountType), # Filter accounts by account type.
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
  ])

  let response = httpClient.get(basepath & fmt"/businesses/{business_id}/audiences/shared/accounts" & "?" & query_for_api_call)
  constructResult[ad_accounts_audiences_shared_accounts_list_200_response](response)


proc sharedAudiencesForBusinessList*(httpClient: HttpClient, businessId: string, bookmark: string, order: string, pageSize: int): (Option[audiences_list_200_response], Response) =
  ## List received audiences for a business
  let query_for_api_call = encodeQuery([
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("order", $order), # The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
  ])

  let response = httpClient.get(basepath & fmt"/businesses/{business_id}/audiences" & "?" & query_for_api_call)
  constructResult[audiences_list_200_response](response)


proc updateAdAccountToAdAccountSharedAudience*(httpClient: HttpClient, adAccountId: string, sharedAudience: SharedAudience): (Option[SharedAudienceResponse], Response) =
  ## Update audience sharing between ad accounts
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.patch(basepath & fmt"/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared", $(%sharedAudience))
  constructResult[SharedAudienceResponse](response)


proc updateAdAccountToBusinessSharedAudience*(httpClient: HttpClient, adAccountId: string, businessSharedAudience: BusinessSharedAudience): (Option[BusinessSharedAudienceResponse], Response) =
  ## Update audience sharing from an ad account to businesses
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.patch(basepath & fmt"/ad_accounts/{ad_account_id}/audiences/businesses/shared", $(%businessSharedAudience))
  constructResult[BusinessSharedAudienceResponse](response)


proc updateBusinessToAdAccountSharedAudience*(httpClient: HttpClient, businessId: string, sharedAudience: SharedAudience): (Option[SharedAudienceResponse], Response) =
  ## Update audience sharing from a business to ad accounts
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.patch(basepath & fmt"/businesses/{business_id}/audiences/ad_accounts/shared", $(%sharedAudience))
  constructResult[SharedAudienceResponse](response)


proc updateBusinessToBusinessSharedAudience*(httpClient: HttpClient, businessId: string, businessSharedAudience: BusinessSharedAudience): (Option[BusinessSharedAudienceResponse], Response) =
  ## Update audience sharing between businesses
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.patch(basepath & fmt"/businesses/{business_id}/audiences/businesses/shared", $(%businessSharedAudience))
  constructResult[BusinessSharedAudienceResponse](response)

