#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_ad_group_array_response
import ../models/model_ad_group_audience_sizing_request
import ../models/model_ad_group_audience_sizing_response
import ../models/model_ad_group_create_request
import ../models/model_ad_group_response
import ../models/model_ad_group_update_request
import ../models/model_ad_groups_analytics_response_inner
import ../models/model_ads_analytics_targeting_type
import ../models/model_bid_floor
import ../models/model_bid_floor_request
import ../models/model_conversion_report_attribution_type
import ../models/model_error
import ../models/model_granularity
import ../models/model_metrics_response
import ../models/model_ad_groups_list_200_response

const basepath = "https://api.pinterest.com/v5"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc adGroupsAnalytics*(httpClient: HttpClient, adAccountId: string, startDate: string, endDate: string, adGroupIds: seq[string], columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string): (Option[seq[AdGroupsAnalyticsResponse_inner]], Response) =
  ## Get ad group analytics
  let query_for_api_call = encodeQuery([
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
    ("ad_group_ids", $adGroupIds.join(",")), # List of Ad group Ids to use to filter the results.
    ("columns", $columns.join(",")), # Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups/analytics" & "?" & query_for_api_call)
  constructResult[seq[AdGroupsAnalyticsResponse_inner]](response)


proc adGroupsAudienceSizing*(httpClient: HttpClient, adAccountId: string, adGroupAudienceSizingRequest: AdGroupAudienceSizingRequest): (Option[AdGroupAudienceSizingResponse], Response) =
  ## Get audience sizing
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups/audience_sizing", $(%adGroupAudienceSizingRequest))
  constructResult[AdGroupAudienceSizingResponse](response)


proc adGroupsBidFloorGet*(httpClient: HttpClient, adAccountId: string, bidFloorRequest: BidFloorRequest): (Option[BidFloor], Response) =
  ## Get bid floors
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/bid_floor", $(%bidFloorRequest))
  constructResult[BidFloor](response)


proc adGroupsCreate*(httpClient: HttpClient, adAccountId: string, adGroupCreateRequest: seq[AdGroupCreateRequest]): (Option[AdGroupArrayResponse], Response) =
  ## Create ad groups
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups", $(%adGroupCreateRequest))
  constructResult[AdGroupArrayResponse](response)


proc adGroupsGet*(httpClient: HttpClient, adAccountId: string, adGroupId: string): (Option[AdGroupResponse], Response) =
  ## Get ad group

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups/{ad_group_id}")
  constructResult[AdGroupResponse](response)


proc adGroupsList*(httpClient: HttpClient, adAccountId: string, campaignIds: seq[string], adGroupIds: seq[string], entityStatuses: seq[EntityStatuses], pageSize: int, order: string, bookmark: string, translateInterestsToNames: bool): (Option[ad_groups_list_200_response], Response) =
  ## List ad groups
  let query_for_api_call = encodeQuery([
    ("campaign_ids", $campaignIds.join(",")), # List of Campaign Ids to use to filter the results.
    ("ad_group_ids", $adGroupIds.join(",")), # List of Ad group Ids to use to filter the results.
    ("entity_statuses", $entityStatuses.join(",")), # Entity status
    ("page_size", $pageSize), # Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
    ("order", $order), # The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
    ("bookmark", $bookmark), # Cursor used to fetch the next page of items
    ("translate_interests_to_names", $translateInterestsToNames), # Return interests as text names (if value is true) rather than topic IDs.
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups" & "?" & query_for_api_call)
  constructResult[ad_groups_list_200_response](response)


proc adGroupsTargetingAnalyticsGet*(httpClient: HttpClient, adAccountId: string, adGroupIds: seq[string], startDate: string, endDate: string, targetingTypes: seq[AdsAnalyticsTargetingType], columns: seq[Columns], granularity: Granularity, clickWindowDays: ClickWindowDays, engagementWindowDays: EngagementWindowDays, viewWindowDays: ViewWindowDays, conversionReportTime: string, attributionTypes: ConversionReportAttributionType): (Option[MetricsResponse], Response) =
  ## Get targeting analytics for ad groups
  let query_for_api_call = encodeQuery([
    ("ad_group_ids", $adGroupIds.join(",")), # List of Ad group Ids to use to filter the results.
    ("start_date", $startDate), # Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
    ("end_date", $endDate), # Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
    ("targeting_types", $targetingTypes.join(",")), # Targeting type breakdowns for the report. The reporting per targeting type <br> is independent from each other. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.
    ("columns", $columns.join(",")), # Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
    ("granularity", $granularity), # TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
    ("click_window_days", $clickWindowDays), # Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("engagement_window_days", $engagementWindowDays), # Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
    ("view_window_days", $viewWindowDays), # Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
    ("conversion_report_time", $conversionReportTime), # The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
    ("attribution_types", $attributionTypes), # List of types of attribution for the conversion report
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups/targeting_analytics" & "?" & query_for_api_call)
  constructResult[MetricsResponse](response)


proc adGroupsUpdate*(httpClient: HttpClient, adAccountId: string, adGroupUpdateRequest: seq[AdGroupUpdateRequest]): (Option[AdGroupArrayResponse], Response) =
  ## Update ad groups
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.patch(basepath & fmt"/ad_accounts/{ad_account_id}/ad_groups", $(%adGroupUpdateRequest))
  constructResult[AdGroupArrayResponse](response)

