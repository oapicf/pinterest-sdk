#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_error
import ../models/model_leads_export_create_request
import ../models/model_leads_export_create_response
import ../models/model_leads_export_response_data

const basepath = "https://api.pinterest.com/v5"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc leadsExportCreate*(httpClient: HttpClient, adAccountId: string, leadsExportCreateRequest: LeadsExportCreateRequest): (Option[LeadsExportCreateResponse], Response) =
  ## Create a request to export leads collected from a lead ad
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/leads_export", $(%leadsExportCreateRequest))
  constructResult[LeadsExportCreateResponse](response)


proc leadsExportGet*(httpClient: HttpClient, adAccountId: string, leadsExportId: string): (Option[LeadsExportResponseData], Response) =
  ## Get the lead export from the lead export create call

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/leads_export/{leads_export_id}")
  constructResult[LeadsExportResponseData](response)

