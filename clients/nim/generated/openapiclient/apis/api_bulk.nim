#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_bulk_download_request
import ../models/model_bulk_download_response
import ../models/model_bulk_upsert_request
import ../models/model_bulk_upsert_response
import ../models/model_bulk_upsert_status_response
import ../models/model_error

const basepath = "https://api.pinterest.com/v5"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc bulkDownloadCreate*(httpClient: HttpClient, adAccountId: string, bulkDownloadRequest: BulkDownloadRequest): (Option[BulkDownloadResponse], Response) =
  ## Get advertiser entities in bulk
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/bulk/download", $(%bulkDownloadRequest))
  constructResult[BulkDownloadResponse](response)


proc bulkRequestGet*(httpClient: HttpClient, adAccountId: string, bulkRequestId: string, includeDetails: bool): (Option[BulkUpsertStatusResponse], Response) =
  ## Download advertiser entities in bulk
  let query_for_api_call = encodeQuery([
    ("include_details", $includeDetails), # if set to True then attach the errors/details to all the requests
  ])

  let response = httpClient.get(basepath & fmt"/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}" & "?" & query_for_api_call)
  constructResult[BulkUpsertStatusResponse](response)


proc bulkUpsertCreate*(httpClient: HttpClient, adAccountId: string, bulkUpsertRequest: BulkUpsertRequest): (Option[BulkUpsertResponse], Response) =
  ## Create/update ad entities in bulk
  httpClient.headers["Content-Type"] = "application/json"

  let response = httpClient.post(basepath & fmt"/ad_accounts/{ad_account_id}/bulk/upsert", $(%bulkUpsertRequest))
  constructResult[BulkUpsertResponse](response)

