#
# Pinterest REST API
# 
# Pinterest's REST API
# The version of the OpenAPI document: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by: https://openapi-generator.tech
#

import json
import tables

import model_pin_media_source_image_base64
import model_pin_media_source_image_url
import model_pin_media_source_images_base64
import model_pin_media_source_images_url
import model_pin_media_source_images_url_items_inner
import model_pin_media_source_pin_url
import model_pin_media_source_video_id

type SourceType* {.pure.} = enum
  PinUrl

type ContentType* {.pure.} = enum
  Jpeg
  Png

type CoverImageContentType* {.pure.} = enum
  Jpeg
  Png

type PinMediaSource* = object
  ## Pin media source.
  sourceType*: SourceType
  contentType*: ContentType
  data*: string
  isStandard*: bool ## Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
  url*: string
  coverImageUrl*: string ## Cover image url.
  coverImageContentType*: CoverImageContentType ## Content type for cover image Base64.
  coverImageData*: string ## Cover image Base64.
  mediaId*: string
  items*: seq[PinMediaSourceImagesURL_items_inner] ## Array with image objects.
  index*: int
  isAffiliateLink*: bool ## This is an affiliate link or sponsored product. The FTC requires disclosure for paid partnerships and affiliate products.

func `%`*(v: SourceType): JsonNode =
  let str = case v:
    of SourceType.PinUrl: "pin_url"

  JsonNode(kind: JString, str: str)

func `$`*(v: SourceType): string =
  result = case v:
    of SourceType.PinUrl: "pin_url"

func `%`*(v: ContentType): JsonNode =
  let str = case v:
    of ContentType.Jpeg: "image/jpeg"
    of ContentType.Png: "image/png"

  JsonNode(kind: JString, str: str)

func `$`*(v: ContentType): string =
  result = case v:
    of ContentType.Jpeg: "image/jpeg"
    of ContentType.Png: "image/png"

func `%`*(v: CoverImageContentType): JsonNode =
  let str = case v:
    of CoverImageContentType.Jpeg: "image/jpeg"
    of CoverImageContentType.Png: "image/png"

  JsonNode(kind: JString, str: str)

func `$`*(v: CoverImageContentType): string =
  result = case v:
    of CoverImageContentType.Jpeg: "image/jpeg"
    of CoverImageContentType.Png: "image/png"
