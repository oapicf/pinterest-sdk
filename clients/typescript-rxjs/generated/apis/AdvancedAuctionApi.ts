// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    AdvancedAuctionItems,
    AdvancedAuctionItemsGetRequest,
    AdvancedAuctionItemsSubmitRequest,
    AdvancedAuctionProcessedItems,
} from '../models';

export interface AdvancedAuctionItemsGetPostRequest {
    advancedAuctionItemsGetRequest: AdvancedAuctionItemsGetRequest;
    adAccountId?: string;
}

export interface AdvancedAuctionItemsSubmitPostRequest {
    advancedAuctionItemsSubmitRequest: AdvancedAuctionItemsSubmitRequest;
    adAccountId?: string;
}

/**
 * no description
 */
export class AdvancedAuctionApi extends BaseAPI {

    /**
     * Get the bid options for a batch of retail catalog items.  The catalog must be owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: `Owner`, `Admin`.  This endpoint is not available to all users.
     * Get item bid options (POST)
     */
    advancedAuctionItemsGetPost({ advancedAuctionItemsGetRequest, adAccountId }: AdvancedAuctionItemsGetPostRequest): Observable<AdvancedAuctionItems>
    advancedAuctionItemsGetPost({ advancedAuctionItemsGetRequest, adAccountId }: AdvancedAuctionItemsGetPostRequest, opts?: OperationOpts): Observable<AjaxResponse<AdvancedAuctionItems>>
    advancedAuctionItemsGetPost({ advancedAuctionItemsGetRequest, adAccountId }: AdvancedAuctionItemsGetPostRequest, opts?: OperationOpts): Observable<AdvancedAuctionItems | AjaxResponse<AdvancedAuctionItems>> {
        throwIfNullOrUndefined(advancedAuctionItemsGetRequest, 'advancedAuctionItemsGetRequest', 'advancedAuctionItemsGetPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read', 'catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<AdvancedAuctionItems>({
            url: '/advanced_auction/items/get',
            method: 'POST',
            headers,
            query,
            body: advancedAuctionItemsGetRequest,
        }, opts?.responseOpts);
    };

    /**
     * This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type `CATALOG_SALES` and ad groups using bid_strategy_type `MAX_BID`.  The catalog must be owned by the \"operation user_account\". <a href=\"/docs/api-features/modify-items-in-batch/\" target=\"_blank\">See detailed documentation here.</a> By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: `Owner`, `Admin`.  This endpoint is not available to all users.
     * Operate on item level bid options
     */
    advancedAuctionItemsSubmitPost({ advancedAuctionItemsSubmitRequest, adAccountId }: AdvancedAuctionItemsSubmitPostRequest): Observable<AdvancedAuctionProcessedItems>
    advancedAuctionItemsSubmitPost({ advancedAuctionItemsSubmitRequest, adAccountId }: AdvancedAuctionItemsSubmitPostRequest, opts?: OperationOpts): Observable<AjaxResponse<AdvancedAuctionProcessedItems>>
    advancedAuctionItemsSubmitPost({ advancedAuctionItemsSubmitRequest, adAccountId }: AdvancedAuctionItemsSubmitPostRequest, opts?: OperationOpts): Observable<AdvancedAuctionProcessedItems | AjaxResponse<AdvancedAuctionProcessedItems>> {
        throwIfNullOrUndefined(advancedAuctionItemsSubmitRequest, 'advancedAuctionItemsSubmitRequest', 'advancedAuctionItemsSubmitPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write', 'catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<AdvancedAuctionProcessedItems>({
            url: '/advanced_auction/items/submit',
            method: 'POST',
            headers,
            query,
            body: advancedAuctionItemsSubmitRequest,
        }, opts?.responseOpts);
    };

}
