// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    AdAccountCreateSubscriptionRequest,
    AdAccountCreateSubscriptionResponse,
    AdAccountGetSubscriptionResponse,
    AdAccountsSubscriptionsGetList200Response,
} from '../models';

export interface AdAccountsSubscriptionsDelByIdRequest {
    adAccountId: string;
    subscriptionId: string;
}

export interface AdAccountsSubscriptionsGetByIdRequest {
    adAccountId: string;
    subscriptionId: string;
}

export interface AdAccountsSubscriptionsGetListRequest {
    adAccountId: string;
    pageSize?: number;
    bookmark?: string;
}

export interface AdAccountsSubscriptionsPostRequest {
    adAccountId: string;
    adAccountCreateSubscriptionRequest: AdAccountCreateSubscriptionRequest;
}

/**
 * no description
 */
export class LeadAdsApi extends BaseAPI {

    /**
     * Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Delete lead ads subscription
     */
    adAccountsSubscriptionsDelById({ adAccountId, subscriptionId }: AdAccountsSubscriptionsDelByIdRequest): Observable<void>
    adAccountsSubscriptionsDelById({ adAccountId, subscriptionId }: AdAccountsSubscriptionsDelByIdRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    adAccountsSubscriptionsDelById({ adAccountId, subscriptionId }: AdAccountsSubscriptionsDelByIdRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'adAccountsSubscriptionsDelById');
        throwIfNullOrUndefined(subscriptionId, 'subscriptionId', 'adAccountsSubscriptionsDelById');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<void>({
            url: '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}'.replace('{ad_account_id}', encodeURI(adAccountId)).replace('{subscription_id}', encodeURI(subscriptionId)),
            method: 'DELETE',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get lead ads subscription
     */
    adAccountsSubscriptionsGetById({ adAccountId, subscriptionId }: AdAccountsSubscriptionsGetByIdRequest): Observable<AdAccountGetSubscriptionResponse>
    adAccountsSubscriptionsGetById({ adAccountId, subscriptionId }: AdAccountsSubscriptionsGetByIdRequest, opts?: OperationOpts): Observable<AjaxResponse<AdAccountGetSubscriptionResponse>>
    adAccountsSubscriptionsGetById({ adAccountId, subscriptionId }: AdAccountsSubscriptionsGetByIdRequest, opts?: OperationOpts): Observable<AdAccountGetSubscriptionResponse | AjaxResponse<AdAccountGetSubscriptionResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'adAccountsSubscriptionsGetById');
        throwIfNullOrUndefined(subscriptionId, 'subscriptionId', 'adAccountsSubscriptionsGetById');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<AdAccountGetSubscriptionResponse>({
            url: '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}'.replace('{ad_account_id}', encodeURI(adAccountId)).replace('{subscription_id}', encodeURI(subscriptionId)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get the advertiser\'s list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get lead ads subscriptions
     */
    adAccountsSubscriptionsGetList({ adAccountId, pageSize, bookmark }: AdAccountsSubscriptionsGetListRequest): Observable<AdAccountsSubscriptionsGetList200Response>
    adAccountsSubscriptionsGetList({ adAccountId, pageSize, bookmark }: AdAccountsSubscriptionsGetListRequest, opts?: OperationOpts): Observable<AjaxResponse<AdAccountsSubscriptionsGetList200Response>>
    adAccountsSubscriptionsGetList({ adAccountId, pageSize, bookmark }: AdAccountsSubscriptionsGetListRequest, opts?: OperationOpts): Observable<AdAccountsSubscriptionsGetList200Response | AjaxResponse<AdAccountsSubscriptionsGetList200Response>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'adAccountsSubscriptionsGetList');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (pageSize != null) { query['page_size'] = pageSize; }
        if (bookmark != null) { query['bookmark'] = bookmark; }

        return this.request<AdAccountsSubscriptionsGetList200Response>({
            url: '/ad_accounts/{ad_account_id}/leads/subscriptions'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  <strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Create lead ads subscription
     */
    adAccountsSubscriptionsPost({ adAccountId, adAccountCreateSubscriptionRequest }: AdAccountsSubscriptionsPostRequest): Observable<AdAccountCreateSubscriptionResponse>
    adAccountsSubscriptionsPost({ adAccountId, adAccountCreateSubscriptionRequest }: AdAccountsSubscriptionsPostRequest, opts?: OperationOpts): Observable<AjaxResponse<AdAccountCreateSubscriptionResponse>>
    adAccountsSubscriptionsPost({ adAccountId, adAccountCreateSubscriptionRequest }: AdAccountsSubscriptionsPostRequest, opts?: OperationOpts): Observable<AdAccountCreateSubscriptionResponse | AjaxResponse<AdAccountCreateSubscriptionResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'adAccountsSubscriptionsPost');
        throwIfNullOrUndefined(adAccountCreateSubscriptionRequest, 'adAccountCreateSubscriptionRequest', 'adAccountsSubscriptionsPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<AdAccountCreateSubscriptionResponse>({
            url: '/ad_accounts/{ad_account_id}/leads/subscriptions'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'POST',
            headers,
            body: adAccountCreateSubscriptionRequest,
        }, opts?.responseOpts);
    };

}
