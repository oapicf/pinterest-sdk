// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    BulkDownloadRequest,
    BulkDownloadResponse,
    BulkUpsertRequest,
    BulkUpsertResponse,
    BulkUpsertStatusResponse,
} from '../models';

export interface BulkDownloadCreateRequest {
    adAccountId: string;
    bulkDownloadRequest: BulkDownloadRequest;
}

export interface BulkRequestGetRequest {
    adAccountId: string;
    bulkRequestId: string;
    includeDetails?: boolean;
}

export interface BulkUpsertCreateRequest {
    adAccountId: string;
    bulkUpsertRequest: BulkUpsertRequest;
}

/**
 * no description
 */
export class BulkApi extends BaseAPI {

    /**
     * Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.
     * Get advertiser entities in bulk
     */
    bulkDownloadCreate({ adAccountId, bulkDownloadRequest }: BulkDownloadCreateRequest): Observable<BulkDownloadResponse>
    bulkDownloadCreate({ adAccountId, bulkDownloadRequest }: BulkDownloadCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<BulkDownloadResponse>>
    bulkDownloadCreate({ adAccountId, bulkDownloadRequest }: BulkDownloadCreateRequest, opts?: OperationOpts): Observable<BulkDownloadResponse | AjaxResponse<BulkDownloadResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'bulkDownloadCreate');
        throwIfNullOrUndefined(bulkDownloadRequest, 'bulkDownloadRequest', 'bulkDownloadCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<BulkDownloadResponse>({
            url: '/ad_accounts/{ad_account_id}/bulk/download'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'POST',
            headers,
            body: bulkDownloadRequest,
        }, opts?.responseOpts);
    };

    /**
     * Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).
     * Download advertiser entities in bulk
     */
    bulkRequestGet({ adAccountId, bulkRequestId, includeDetails }: BulkRequestGetRequest): Observable<BulkUpsertStatusResponse>
    bulkRequestGet({ adAccountId, bulkRequestId, includeDetails }: BulkRequestGetRequest, opts?: OperationOpts): Observable<AjaxResponse<BulkUpsertStatusResponse>>
    bulkRequestGet({ adAccountId, bulkRequestId, includeDetails }: BulkRequestGetRequest, opts?: OperationOpts): Observable<BulkUpsertStatusResponse | AjaxResponse<BulkUpsertStatusResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'bulkRequestGet');
        throwIfNullOrUndefined(bulkRequestId, 'bulkRequestId', 'bulkRequestGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (includeDetails != null) { query['include_details'] = includeDetails; }

        return this.request<BulkUpsertStatusResponse>({
            url: '/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}'.replace('{ad_account_id}', encodeURI(adAccountId)).replace('{bulk_request_id}', encodeURI(bulkRequestId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a <code>request_id</code> that can be used to obtain the status of the request.
     * Create/update ad entities in bulk
     */
    bulkUpsertCreate({ adAccountId, bulkUpsertRequest }: BulkUpsertCreateRequest): Observable<BulkUpsertResponse>
    bulkUpsertCreate({ adAccountId, bulkUpsertRequest }: BulkUpsertCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<BulkUpsertResponse>>
    bulkUpsertCreate({ adAccountId, bulkUpsertRequest }: BulkUpsertCreateRequest, opts?: OperationOpts): Observable<BulkUpsertResponse | AjaxResponse<BulkUpsertResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'bulkUpsertCreate');
        throwIfNullOrUndefined(bulkUpsertRequest, 'bulkUpsertRequest', 'bulkUpsertCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<BulkUpsertResponse>({
            url: '/ad_accounts/{ad_account_id}/bulk/upsert'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'POST',
            headers,
            body: bulkUpsertRequest,
        }, opts?.responseOpts);
    };

}
