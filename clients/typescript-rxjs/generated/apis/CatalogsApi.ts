// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI, COLLECTION_FORMATS } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    Catalog,
    CatalogsCreateReportResponse,
    CatalogsCreateRequest,
    CatalogsFeed,
    CatalogsFeedIngestion,
    CatalogsItemValidationIssue,
    CatalogsItems,
    CatalogsItemsBatch,
    CatalogsItemsFilters,
    CatalogsItemsRequest,
    CatalogsList200Response,
    CatalogsListProductsByFilterRequest,
    CatalogsProductGroupPinsList200Response,
    CatalogsProductGroupProductCountsVertical,
    CatalogsProductGroupsList200Response,
    CatalogsProductGroupsUpdateRequest,
    CatalogsReport,
    CatalogsReportParameters,
    CatalogsVerticalProductGroup,
    FeedProcessingResultsList200Response,
    FeedsCreateRequest,
    FeedsList200Response,
    FeedsUpdateRequest,
    ItemsBatchPostRequest,
    ItemsIssuesList200Response,
    MultipleProductGroupsInner,
    ReportsStats200Response,
} from '../models';

export interface CatalogsCreateRequest {
    catalogsCreateRequest: CatalogsCreateRequest;
    adAccountId?: string;
}

export interface CatalogsListRequest {
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface CatalogsProductGroupPinsListRequest {
    productGroupId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
    pinMetrics?: boolean;
}

export interface CatalogsProductGroupsCreateRequest {
    multipleProductGroupsInner: MultipleProductGroupsInner;
    adAccountId?: string;
}

export interface CatalogsProductGroupsCreateManyRequest {
    multipleProductGroupsInner: Array<MultipleProductGroupsInner>;
    adAccountId?: string;
}

export interface CatalogsProductGroupsDeleteRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsDeleteManyRequest {
    id: Array<number>;
    adAccountId?: string;
}

export interface CatalogsProductGroupsGetRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsListRequest {
    id?: Array<number>;
    feedId?: string;
    catalogId?: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface CatalogsProductGroupsProductCountsGetRequest {
    productGroupId: string;
    adAccountId?: string;
}

export interface CatalogsProductGroupsUpdateRequest {
    productGroupId: string;
    catalogsProductGroupsUpdateRequest: CatalogsProductGroupsUpdateRequest;
    adAccountId?: string;
}

export interface FeedProcessingResultsListRequest {
    feedId: string;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
}

export interface FeedsCreateRequest {
    feedsCreateRequest: FeedsCreateRequest;
    adAccountId?: string;
}

export interface FeedsDeleteRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsGetRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsIngestRequest {
    feedId: string;
    adAccountId?: string;
}

export interface FeedsListRequest {
    bookmark?: string;
    pageSize?: number;
    catalogId?: string;
    adAccountId?: string;
}

export interface FeedsUpdateRequest {
    feedId: string;
    feedsUpdateRequest: FeedsUpdateRequest;
    adAccountId?: string;
}

export interface ItemsBatchGetRequest {
    batchId: string;
    adAccountId?: string;
}

export interface ItemsBatchPostRequest {
    itemsBatchPostRequest: ItemsBatchPostRequest;
    adAccountId?: string;
}

export interface ItemsGetRequest {
    country: string;
    language: string;
    adAccountId?: string;
    itemIds?: Array<string>;
    filters?: CatalogsItemsFilters;
}

export interface ItemsIssuesListRequest {
    processingResultId: string;
    bookmark?: string;
    pageSize?: number;
    itemNumbers?: Array<number>;
    itemValidationIssue?: CatalogsItemValidationIssue;
    adAccountId?: string;
}

export interface ItemsPostRequest {
    catalogsItemsRequest: CatalogsItemsRequest;
    adAccountId?: string;
}

export interface ProductsByProductGroupFilterListRequest {
    catalogsListProductsByFilterRequest: CatalogsListProductsByFilterRequest;
    bookmark?: string;
    pageSize?: number;
    adAccountId?: string;
    pinMetrics?: boolean;
}

export interface ReportsCreateRequest {
    catalogsReportParameters: CatalogsReportParameters;
    adAccountId?: string;
}

export interface ReportsGetRequest {
    token: string;
    adAccountId?: string;
}

export interface ReportsStatsRequest {
    parameters: CatalogsReportParameters;
    adAccountId?: string;
    pageSize?: number;
    bookmark?: string;
}

/**
 * no description
 */
export class CatalogsApi extends BaseAPI {

    /**
     * Create a new catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: this API only supports the catalog type of HOTEL for now.
     * Create catalog
     */
    catalogsCreate({ catalogsCreateRequest, adAccountId }: CatalogsCreateRequest): Observable<Catalog>
    catalogsCreate({ catalogsCreateRequest, adAccountId }: CatalogsCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<Catalog>>
    catalogsCreate({ catalogsCreateRequest, adAccountId }: CatalogsCreateRequest, opts?: OperationOpts): Observable<Catalog | AjaxResponse<Catalog>> {
        throwIfNullOrUndefined(catalogsCreateRequest, 'catalogsCreateRequest', 'catalogsCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<Catalog>({
            url: '/catalogs',
            method: 'POST',
            headers,
            query,
            body: catalogsCreateRequest,
        }, opts?.responseOpts);
    };

    /**
     * Fetch catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * List catalogs
     */
    catalogsList({ bookmark, pageSize, adAccountId }: CatalogsListRequest): Observable<CatalogsList200Response>
    catalogsList({ bookmark, pageSize, adAccountId }: CatalogsListRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsList200Response>>
    catalogsList({ bookmark, pageSize, adAccountId }: CatalogsListRequest, opts?: OperationOpts): Observable<CatalogsList200Response | AjaxResponse<CatalogsList200Response>> {

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsList200Response>({
            url: '/catalogs',
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * List products by product group
     */
    catalogsProductGroupPinsList({ productGroupId, bookmark, pageSize, adAccountId, pinMetrics }: CatalogsProductGroupPinsListRequest): Observable<CatalogsProductGroupPinsList200Response>
    catalogsProductGroupPinsList({ productGroupId, bookmark, pageSize, adAccountId, pinMetrics }: CatalogsProductGroupPinsListRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsProductGroupPinsList200Response>>
    catalogsProductGroupPinsList({ productGroupId, bookmark, pageSize, adAccountId, pinMetrics }: CatalogsProductGroupPinsListRequest, opts?: OperationOpts): Observable<CatalogsProductGroupPinsList200Response | AjaxResponse<CatalogsProductGroupPinsList200Response>> {
        throwIfNullOrUndefined(productGroupId, 'productGroupId', 'catalogsProductGroupPinsList');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['boards:read', 'catalogs:read', 'pins:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }
        if (pinMetrics != null) { query['pin_metrics'] = pinMetrics; }

        return this.request<CatalogsProductGroupPinsList200Response>({
            url: '/catalogs/product_groups/{product_group_id}/products'.replace('{product_group_id}', encodeURI(productGroupId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Create product group
     */
    catalogsProductGroupsCreate({ multipleProductGroupsInner, adAccountId }: CatalogsProductGroupsCreateRequest): Observable<CatalogsVerticalProductGroup>
    catalogsProductGroupsCreate({ multipleProductGroupsInner, adAccountId }: CatalogsProductGroupsCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsVerticalProductGroup>>
    catalogsProductGroupsCreate({ multipleProductGroupsInner, adAccountId }: CatalogsProductGroupsCreateRequest, opts?: OperationOpts): Observable<CatalogsVerticalProductGroup | AjaxResponse<CatalogsVerticalProductGroup>> {
        throwIfNullOrUndefined(multipleProductGroupsInner, 'multipleProductGroupsInner', 'catalogsProductGroupsCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsVerticalProductGroup>({
            url: '/catalogs/product_groups',
            method: 'POST',
            headers,
            query,
            body: multipleProductGroupsInner,
        }, opts?.responseOpts);
    };

    /**
     * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Create product groups
     */
    catalogsProductGroupsCreateMany({ multipleProductGroupsInner, adAccountId }: CatalogsProductGroupsCreateManyRequest): Observable<Array<string>>
    catalogsProductGroupsCreateMany({ multipleProductGroupsInner, adAccountId }: CatalogsProductGroupsCreateManyRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<string>>>
    catalogsProductGroupsCreateMany({ multipleProductGroupsInner, adAccountId }: CatalogsProductGroupsCreateManyRequest, opts?: OperationOpts): Observable<Array<string> | AjaxResponse<Array<string>>> {
        throwIfNullOrUndefined(multipleProductGroupsInner, 'multipleProductGroupsInner', 'catalogsProductGroupsCreateMany');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<Array<string>>({
            url: '/catalogs/product_groups/multiple',
            method: 'POST',
            headers,
            query,
            body: multipleProductGroupsInner,
        }, opts?.responseOpts);
    };

    /**
     * Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * Delete product group
     */
    catalogsProductGroupsDelete({ productGroupId, adAccountId }: CatalogsProductGroupsDeleteRequest): Observable<void>
    catalogsProductGroupsDelete({ productGroupId, adAccountId }: CatalogsProductGroupsDeleteRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    catalogsProductGroupsDelete({ productGroupId, adAccountId }: CatalogsProductGroupsDeleteRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(productGroupId, 'productGroupId', 'catalogsProductGroupsDelete');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<void>({
            url: '/catalogs/product_groups/{product_group_id}'.replace('{product_group_id}', encodeURI(productGroupId)),
            method: 'DELETE',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Delete product groups owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * Delete product groups
     */
    catalogsProductGroupsDeleteMany({ id, adAccountId }: CatalogsProductGroupsDeleteManyRequest): Observable<void>
    catalogsProductGroupsDeleteMany({ id, adAccountId }: CatalogsProductGroupsDeleteManyRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    catalogsProductGroupsDeleteMany({ id, adAccountId }: CatalogsProductGroupsDeleteManyRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'catalogsProductGroupsDeleteMany');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'id': id.join(COLLECTION_FORMATS['csv']),
        };

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<void>({
            url: '/catalogs/product_groups/multiple',
            method: 'DELETE',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * Get product group
     */
    catalogsProductGroupsGet({ productGroupId, adAccountId }: CatalogsProductGroupsGetRequest): Observable<CatalogsVerticalProductGroup>
    catalogsProductGroupsGet({ productGroupId, adAccountId }: CatalogsProductGroupsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsVerticalProductGroup>>
    catalogsProductGroupsGet({ productGroupId, adAccountId }: CatalogsProductGroupsGetRequest, opts?: OperationOpts): Observable<CatalogsVerticalProductGroup | AjaxResponse<CatalogsVerticalProductGroup>> {
        throwIfNullOrUndefined(productGroupId, 'productGroupId', 'catalogsProductGroupsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsVerticalProductGroup>({
            url: '/catalogs/product_groups/{product_group_id}'.replace('{product_group_id}', encodeURI(productGroupId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * List product groups
     */
    catalogsProductGroupsList({ id, feedId, catalogId, bookmark, pageSize, adAccountId }: CatalogsProductGroupsListRequest): Observable<CatalogsProductGroupsList200Response>
    catalogsProductGroupsList({ id, feedId, catalogId, bookmark, pageSize, adAccountId }: CatalogsProductGroupsListRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsProductGroupsList200Response>>
    catalogsProductGroupsList({ id, feedId, catalogId, bookmark, pageSize, adAccountId }: CatalogsProductGroupsListRequest, opts?: OperationOpts): Observable<CatalogsProductGroupsList200Response | AjaxResponse<CatalogsProductGroupsList200Response>> {

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id.join(COLLECTION_FORMATS['csv']); }
        if (feedId != null) { query['feed_id'] = feedId; }
        if (catalogId != null) { query['catalog_id'] = catalogId; }
        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsProductGroupsList200Response>({
            url: '/catalogs/product_groups',
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * Get product counts
     */
    catalogsProductGroupsProductCountsGet({ productGroupId, adAccountId }: CatalogsProductGroupsProductCountsGetRequest): Observable<CatalogsProductGroupProductCountsVertical>
    catalogsProductGroupsProductCountsGet({ productGroupId, adAccountId }: CatalogsProductGroupsProductCountsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsProductGroupProductCountsVertical>>
    catalogsProductGroupsProductCountsGet({ productGroupId, adAccountId }: CatalogsProductGroupsProductCountsGetRequest, opts?: OperationOpts): Observable<CatalogsProductGroupProductCountsVertical | AjaxResponse<CatalogsProductGroupProductCountsVertical>> {
        throwIfNullOrUndefined(productGroupId, 'productGroupId', 'catalogsProductGroupsProductCountsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsProductGroupProductCountsVertical>({
            url: '/catalogs/product_groups/{product_group_id}/product_counts'.replace('{product_group_id}', encodeURI(productGroupId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Update single product group
     */
    catalogsProductGroupsUpdate({ productGroupId, catalogsProductGroupsUpdateRequest, adAccountId }: CatalogsProductGroupsUpdateRequest): Observable<CatalogsVerticalProductGroup>
    catalogsProductGroupsUpdate({ productGroupId, catalogsProductGroupsUpdateRequest, adAccountId }: CatalogsProductGroupsUpdateRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsVerticalProductGroup>>
    catalogsProductGroupsUpdate({ productGroupId, catalogsProductGroupsUpdateRequest, adAccountId }: CatalogsProductGroupsUpdateRequest, opts?: OperationOpts): Observable<CatalogsVerticalProductGroup | AjaxResponse<CatalogsVerticalProductGroup>> {
        throwIfNullOrUndefined(productGroupId, 'productGroupId', 'catalogsProductGroupsUpdate');
        throwIfNullOrUndefined(catalogsProductGroupsUpdateRequest, 'catalogsProductGroupsUpdateRequest', 'catalogsProductGroupsUpdate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsVerticalProductGroup>({
            url: '/catalogs/product_groups/{product_group_id}'.replace('{product_group_id}', encodeURI(productGroupId)),
            method: 'PATCH',
            headers,
            query,
            body: catalogsProductGroupsUpdateRequest,
        }, opts?.responseOpts);
    };

    /**
     * Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * List feed processing results
     */
    feedProcessingResultsList({ feedId, bookmark, pageSize, adAccountId }: FeedProcessingResultsListRequest): Observable<FeedProcessingResultsList200Response>
    feedProcessingResultsList({ feedId, bookmark, pageSize, adAccountId }: FeedProcessingResultsListRequest, opts?: OperationOpts): Observable<AjaxResponse<FeedProcessingResultsList200Response>>
    feedProcessingResultsList({ feedId, bookmark, pageSize, adAccountId }: FeedProcessingResultsListRequest, opts?: OperationOpts): Observable<FeedProcessingResultsList200Response | AjaxResponse<FeedProcessingResultsList200Response>> {
        throwIfNullOrUndefined(feedId, 'feedId', 'feedProcessingResultsList');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<FeedProcessingResultsList200Response>({
            url: '/catalogs/feeds/{feed_id}/processing_results'.replace('{feed_id}', encodeURI(feedId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Create feed
     */
    feedsCreate({ feedsCreateRequest, adAccountId }: FeedsCreateRequest): Observable<CatalogsFeed>
    feedsCreate({ feedsCreateRequest, adAccountId }: FeedsCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsFeed>>
    feedsCreate({ feedsCreateRequest, adAccountId }: FeedsCreateRequest, opts?: OperationOpts): Observable<CatalogsFeed | AjaxResponse<CatalogsFeed>> {
        throwIfNullOrUndefined(feedsCreateRequest, 'feedsCreateRequest', 'feedsCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsFeed>({
            url: '/catalogs/feeds',
            method: 'POST',
            headers,
            query,
            body: feedsCreateRequest,
        }, opts?.responseOpts);
    };

    /**
     * Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
     * Delete feed
     */
    feedsDelete({ feedId, adAccountId }: FeedsDeleteRequest): Observable<void>
    feedsDelete({ feedId, adAccountId }: FeedsDeleteRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    feedsDelete({ feedId, adAccountId }: FeedsDeleteRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(feedId, 'feedId', 'feedsDelete');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<void>({
            url: '/catalogs/feeds/{feed_id}'.replace('{feed_id}', encodeURI(feedId)),
            method: 'DELETE',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
     * Get feed
     */
    feedsGet({ feedId, adAccountId }: FeedsGetRequest): Observable<CatalogsFeed>
    feedsGet({ feedId, adAccountId }: FeedsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsFeed>>
    feedsGet({ feedId, adAccountId }: FeedsGetRequest, opts?: OperationOpts): Observable<CatalogsFeed | AjaxResponse<CatalogsFeed>> {
        throwIfNullOrUndefined(feedId, 'feedId', 'feedsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsFeed>({
            url: '/catalogs/feeds/{feed_id}'.replace('{feed_id}', encodeURI(feedId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Ingest items for a given feed owned by the \"operation user_account\".  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Ingest feed items
     */
    feedsIngest({ feedId, adAccountId }: FeedsIngestRequest): Observable<CatalogsFeedIngestion>
    feedsIngest({ feedId, adAccountId }: FeedsIngestRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsFeedIngestion>>
    feedsIngest({ feedId, adAccountId }: FeedsIngestRequest, opts?: OperationOpts): Observable<CatalogsFeedIngestion | AjaxResponse<CatalogsFeedIngestion>> {
        throwIfNullOrUndefined(feedId, 'feedId', 'feedsIngest');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsFeedIngestion>({
            url: '/catalogs/feeds/{feed_id}/ingest'.replace('{feed_id}', encodeURI(feedId)),
            method: 'POST',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.
     * List feeds
     */
    feedsList({ bookmark, pageSize, catalogId, adAccountId }: FeedsListRequest): Observable<FeedsList200Response>
    feedsList({ bookmark, pageSize, catalogId, adAccountId }: FeedsListRequest, opts?: OperationOpts): Observable<AjaxResponse<FeedsList200Response>>
    feedsList({ bookmark, pageSize, catalogId, adAccountId }: FeedsListRequest, opts?: OperationOpts): Observable<FeedsList200Response | AjaxResponse<FeedsList200Response>> {

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (catalogId != null) { query['catalog_id'] = catalogId; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<FeedsList200Response>({
            url: '/catalogs/feeds',
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Update feed
     */
    feedsUpdate({ feedId, feedsUpdateRequest, adAccountId }: FeedsUpdateRequest): Observable<CatalogsFeed>
    feedsUpdate({ feedId, feedsUpdateRequest, adAccountId }: FeedsUpdateRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsFeed>>
    feedsUpdate({ feedId, feedsUpdateRequest, adAccountId }: FeedsUpdateRequest, opts?: OperationOpts): Observable<CatalogsFeed | AjaxResponse<CatalogsFeed>> {
        throwIfNullOrUndefined(feedId, 'feedId', 'feedsUpdate');
        throwIfNullOrUndefined(feedsUpdateRequest, 'feedsUpdateRequest', 'feedsUpdate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsFeed>({
            url: '/catalogs/feeds/{feed_id}'.replace('{feed_id}', encodeURI(feedId)),
            method: 'PATCH',
            headers,
            query,
            body: feedsUpdateRequest,
        }, opts?.responseOpts);
    };

    /**
     * Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Get item batch status
     */
    itemsBatchGet({ batchId, adAccountId }: ItemsBatchGetRequest): Observable<CatalogsItemsBatch>
    itemsBatchGet({ batchId, adAccountId }: ItemsBatchGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsItemsBatch>>
    itemsBatchGet({ batchId, adAccountId }: ItemsBatchGetRequest, opts?: OperationOpts): Observable<CatalogsItemsBatch | AjaxResponse<CatalogsItemsBatch>> {
        throwIfNullOrUndefined(batchId, 'batchId', 'itemsBatchGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsItemsBatch>({
            url: '/catalogs/items/batch/{batch_id}'.replace('{batch_id}', encodeURI(batchId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
     * Operate on item batch
     */
    itemsBatchPost({ itemsBatchPostRequest, adAccountId }: ItemsBatchPostRequest): Observable<CatalogsItemsBatch>
    itemsBatchPost({ itemsBatchPostRequest, adAccountId }: ItemsBatchPostRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsItemsBatch>>
    itemsBatchPost({ itemsBatchPostRequest, adAccountId }: ItemsBatchPostRequest, opts?: OperationOpts): Observable<CatalogsItemsBatch | AjaxResponse<CatalogsItemsBatch>> {
        throwIfNullOrUndefined(itemsBatchPostRequest, 'itemsBatchPostRequest', 'itemsBatchPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('client_credentials', ['catalogs:read', 'catalogs:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsItemsBatch>({
            url: '/catalogs/items/batch',
            method: 'POST',
            headers,
            query,
            body: itemsBatchPostRequest,
        }, opts?.responseOpts);
    };

    /**
     * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use <a href=\'/docs/api/v5/#operation/items/post\'>Get catalogs items (POST)</a> instead.
     * Get catalogs items
     */
    itemsGet({ country, language, adAccountId, itemIds, filters }: ItemsGetRequest): Observable<CatalogsItems>
    itemsGet({ country, language, adAccountId, itemIds, filters }: ItemsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsItems>>
    itemsGet({ country, language, adAccountId, itemIds, filters }: ItemsGetRequest, opts?: OperationOpts): Observable<CatalogsItems | AjaxResponse<CatalogsItems>> {
        throwIfNullOrUndefined(country, 'country', 'itemsGet');
        throwIfNullOrUndefined(language, 'language', 'itemsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'country': country,
            'language': language,
        };

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }
        if (itemIds != null) { query['item_ids'] = itemIds; }
        if (filters != null) { query['filters'] = filters; }

        return this.request<CatalogsItems>({
            url: '/catalogs/items',
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters \'item_numbers\' and \'item_validation_issue\' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a> and <a href=\'/docs/api/v5/#operation/reports/get\'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * List item issues
     */
    itemsIssuesList({ processingResultId, bookmark, pageSize, itemNumbers, itemValidationIssue, adAccountId }: ItemsIssuesListRequest): Observable<ItemsIssuesList200Response>
    itemsIssuesList({ processingResultId, bookmark, pageSize, itemNumbers, itemValidationIssue, adAccountId }: ItemsIssuesListRequest, opts?: OperationOpts): Observable<AjaxResponse<ItemsIssuesList200Response>>
    itemsIssuesList({ processingResultId, bookmark, pageSize, itemNumbers, itemValidationIssue, adAccountId }: ItemsIssuesListRequest, opts?: OperationOpts): Observable<ItemsIssuesList200Response | AjaxResponse<ItemsIssuesList200Response>> {
        throwIfNullOrUndefined(processingResultId, 'processingResultId', 'itemsIssuesList');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (itemNumbers != null) { query['item_numbers'] = itemNumbers; }
        if (itemValidationIssue != null) { query['item_validation_issue'] = itemValidationIssue; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<ItemsIssuesList200Response>({
            url: '/catalogs/processing_results/{processing_result_id}/item_issues'.replace('{processing_result_id}', encodeURI(processingResultId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * Get catalogs items (POST)
     */
    itemsPost({ catalogsItemsRequest, adAccountId }: ItemsPostRequest): Observable<CatalogsItems>
    itemsPost({ catalogsItemsRequest, adAccountId }: ItemsPostRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsItems>>
    itemsPost({ catalogsItemsRequest, adAccountId }: ItemsPostRequest, opts?: OperationOpts): Observable<CatalogsItems | AjaxResponse<CatalogsItems>> {
        throwIfNullOrUndefined(catalogsItemsRequest, 'catalogsItemsRequest', 'itemsPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsItems>({
            url: '/catalogs/items',
            method: 'POST',
            headers,
            query,
            body: catalogsItemsRequest,
        }, opts?.responseOpts);
    };

    /**
     * List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  <a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>
     * List products by filter
     */
    productsByProductGroupFilterList({ catalogsListProductsByFilterRequest, bookmark, pageSize, adAccountId, pinMetrics }: ProductsByProductGroupFilterListRequest): Observable<CatalogsProductGroupPinsList200Response>
    productsByProductGroupFilterList({ catalogsListProductsByFilterRequest, bookmark, pageSize, adAccountId, pinMetrics }: ProductsByProductGroupFilterListRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsProductGroupPinsList200Response>>
    productsByProductGroupFilterList({ catalogsListProductsByFilterRequest, bookmark, pageSize, adAccountId, pinMetrics }: ProductsByProductGroupFilterListRequest, opts?: OperationOpts): Observable<CatalogsProductGroupPinsList200Response | AjaxResponse<CatalogsProductGroupPinsList200Response>> {
        throwIfNullOrUndefined(catalogsListProductsByFilterRequest, 'catalogsListProductsByFilterRequest', 'productsByProductGroupFilterList');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['boards:read', 'catalogs:read', 'pins:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }
        if (pinMetrics != null) { query['pin_metrics'] = pinMetrics; }

        return this.request<CatalogsProductGroupPinsList200Response>({
            url: '/catalogs/products/get_by_product_group_filters',
            method: 'POST',
            headers,
            query,
            body: catalogsListProductsByFilterRequest,
        }, opts?.responseOpts);
    };

    /**
     * Async request to create a report of the catalog owned by the \"operation user_account\". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Build catalogs report
     */
    reportsCreate({ catalogsReportParameters, adAccountId }: ReportsCreateRequest): Observable<CatalogsCreateReportResponse>
    reportsCreate({ catalogsReportParameters, adAccountId }: ReportsCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsCreateReportResponse>>
    reportsCreate({ catalogsReportParameters, adAccountId }: ReportsCreateRequest, opts?: OperationOpts): Observable<CatalogsCreateReportResponse | AjaxResponse<CatalogsCreateReportResponse>> {
        throwIfNullOrUndefined(catalogsReportParameters, 'catalogsReportParameters', 'reportsCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsCreateReportResponse>({
            url: '/catalogs/reports',
            method: 'POST',
            headers,
            query,
            body: catalogsReportParameters,
        }, opts?.responseOpts);
    };

    /**
     * This returns a URL to a report given a token returned from <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a>. You can use the URL to download the report. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * Get catalogs report
     */
    reportsGet({ token, adAccountId }: ReportsGetRequest): Observable<CatalogsReport>
    reportsGet({ token, adAccountId }: ReportsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<CatalogsReport>>
    reportsGet({ token, adAccountId }: ReportsGetRequest, opts?: OperationOpts): Observable<CatalogsReport | AjaxResponse<CatalogsReport>> {
        throwIfNullOrUndefined(token, 'token', 'reportsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'token': token,
        };

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }

        return this.request<CatalogsReport>({
            url: '/catalogs/reports',
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * List aggregated numbers of issues for a catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * List report stats
     */
    reportsStats({ parameters, adAccountId, pageSize, bookmark }: ReportsStatsRequest): Observable<ReportsStats200Response>
    reportsStats({ parameters, adAccountId, pageSize, bookmark }: ReportsStatsRequest, opts?: OperationOpts): Observable<AjaxResponse<ReportsStats200Response>>
    reportsStats({ parameters, adAccountId, pageSize, bookmark }: ReportsStatsRequest, opts?: OperationOpts): Observable<ReportsStats200Response | AjaxResponse<ReportsStats200Response>> {
        throwIfNullOrUndefined(parameters, 'parameters', 'reportsStats');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['catalogs:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'parameters': parameters,
        };

        if (adAccountId != null) { query['ad_account_id'] = adAccountId; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (bookmark != null) { query['bookmark'] = bookmark; }

        return this.request<ReportsStats200Response>({
            url: '/catalogs/reports/stats',
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

}
