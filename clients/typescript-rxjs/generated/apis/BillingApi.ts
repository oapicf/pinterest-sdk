// tslint:disable
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    AdsCreditRedeemRequest,
    AdsCreditRedeemResponse,
    AdsCreditsDiscountsGet200Response,
    BillingProfilesGet200Response,
    SSIOAccountResponse,
    SSIOCreateInsertionOrderRequest,
    SSIOCreateInsertionOrderResponse,
    SSIOEditInsertionOrderRequest,
    SSIOEditInsertionOrderResponse,
    SSIOInsertionOrderStatusResponse,
    SsioInsertionOrdersStatusGetByAdAccount200Response,
    SsioOrderLinesGetByAdAccount200Response,
} from '../models';

export interface AdsCreditRedeemRequest {
    adAccountId: string;
    adsCreditRedeemRequest: AdsCreditRedeemRequest;
}

export interface AdsCreditsDiscountsGetRequest {
    adAccountId: string;
    bookmark?: string;
    pageSize?: number;
}

export interface BillingProfilesGetRequest {
    adAccountId: string;
    isActive: boolean;
    bookmark?: string;
    pageSize?: number;
}

export interface SsioAccountsGetRequest {
    adAccountId: string;
}

export interface SsioInsertionOrderCreateRequest {
    adAccountId: string;
    sSIOCreateInsertionOrderRequest: SSIOCreateInsertionOrderRequest;
}

export interface SsioInsertionOrderEditRequest {
    adAccountId: string;
    sSIOEditInsertionOrderRequest: SSIOEditInsertionOrderRequest;
}

export interface SsioInsertionOrdersStatusGetByAdAccountRequest {
    adAccountId: string;
    bookmark?: string;
    pageSize?: number;
}

export interface SsioInsertionOrdersStatusGetByPinOrderIdRequest {
    adAccountId: string;
    pinOrderId: string;
}

export interface SsioOrderLinesGetByAdAccountRequest {
    adAccountId: string;
    bookmark?: string;
    pageSize?: number;
    pinOrderId?: string;
}

/**
 * no description
 */
export class BillingApi extends BaseAPI {

    /**
     * Redeem ads credit on behalf of the ad account id and apply it towards billing.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Redeem ad credits
     */
    adsCreditRedeem({ adAccountId, adsCreditRedeemRequest }: AdsCreditRedeemRequest): Observable<AdsCreditRedeemResponse>
    adsCreditRedeem({ adAccountId, adsCreditRedeemRequest }: AdsCreditRedeemRequest, opts?: OperationOpts): Observable<AjaxResponse<AdsCreditRedeemResponse>>
    adsCreditRedeem({ adAccountId, adsCreditRedeemRequest }: AdsCreditRedeemRequest, opts?: OperationOpts): Observable<AdsCreditRedeemResponse | AjaxResponse<AdsCreditRedeemResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'adsCreditRedeem');
        throwIfNullOrUndefined(adsCreditRedeemRequest, 'adsCreditRedeemRequest', 'adsCreditRedeem');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write', 'billing:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<AdsCreditRedeemResponse>({
            url: '/ad_accounts/{ad_account_id}/ads_credit/redeem'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'POST',
            headers,
            body: adsCreditRedeemRequest,
        }, opts?.responseOpts);
    };

    /**
     * Returns the list of discounts applied to the account.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get ads credit discounts
     */
    adsCreditsDiscountsGet({ adAccountId, bookmark, pageSize }: AdsCreditsDiscountsGetRequest): Observable<AdsCreditsDiscountsGet200Response>
    adsCreditsDiscountsGet({ adAccountId, bookmark, pageSize }: AdsCreditsDiscountsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<AdsCreditsDiscountsGet200Response>>
    adsCreditsDiscountsGet({ adAccountId, bookmark, pageSize }: AdsCreditsDiscountsGetRequest, opts?: OperationOpts): Observable<AdsCreditsDiscountsGet200Response | AjaxResponse<AdsCreditsDiscountsGet200Response>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'adsCreditsDiscountsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read', 'billing:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }

        return this.request<AdsCreditsDiscountsGet200Response>({
            url: '/ad_accounts/{ad_account_id}/ads_credit/discounts'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get billing profiles in the advertiser account.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get billing profiles
     */
    billingProfilesGet({ adAccountId, isActive, bookmark, pageSize }: BillingProfilesGetRequest): Observable<BillingProfilesGet200Response>
    billingProfilesGet({ adAccountId, isActive, bookmark, pageSize }: BillingProfilesGetRequest, opts?: OperationOpts): Observable<AjaxResponse<BillingProfilesGet200Response>>
    billingProfilesGet({ adAccountId, isActive, bookmark, pageSize }: BillingProfilesGetRequest, opts?: OperationOpts): Observable<BillingProfilesGet200Response | AjaxResponse<BillingProfilesGet200Response>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'billingProfilesGet');
        throwIfNullOrUndefined(isActive, 'isActive', 'billingProfilesGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read', 'billing:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'is_active': isActive,
        };

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }

        return this.request<BillingProfilesGet200Response>({
            url: '/ad_accounts/{ad_account_id}/billing_profiles'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get Salesforce account details including bill-to information.
     */
    ssioAccountsGet({ adAccountId }: SsioAccountsGetRequest): Observable<SSIOAccountResponse>
    ssioAccountsGet({ adAccountId }: SsioAccountsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<SSIOAccountResponse>>
    ssioAccountsGet({ adAccountId }: SsioAccountsGetRequest, opts?: OperationOpts): Observable<SSIOAccountResponse | AjaxResponse<SSIOAccountResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'ssioAccountsGet');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<SSIOAccountResponse>({
            url: '/ad_accounts/{ad_account_id}/ssio/accounts'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Create insertion order through SSIO for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Create insertion order through SSIO.
     */
    ssioInsertionOrderCreate({ adAccountId, sSIOCreateInsertionOrderRequest }: SsioInsertionOrderCreateRequest): Observable<SSIOCreateInsertionOrderResponse>
    ssioInsertionOrderCreate({ adAccountId, sSIOCreateInsertionOrderRequest }: SsioInsertionOrderCreateRequest, opts?: OperationOpts): Observable<AjaxResponse<SSIOCreateInsertionOrderResponse>>
    ssioInsertionOrderCreate({ adAccountId, sSIOCreateInsertionOrderRequest }: SsioInsertionOrderCreateRequest, opts?: OperationOpts): Observable<SSIOCreateInsertionOrderResponse | AjaxResponse<SSIOCreateInsertionOrderResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'ssioInsertionOrderCreate');
        throwIfNullOrUndefined(sSIOCreateInsertionOrderRequest, 'sSIOCreateInsertionOrderRequest', 'ssioInsertionOrderCreate');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<SSIOCreateInsertionOrderResponse>({
            url: '/ad_accounts/{ad_account_id}/ssio/insertion_orders'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'POST',
            headers,
            body: sSIOCreateInsertionOrderRequest,
        }, opts?.responseOpts);
    };

    /**
     * Edit insertion order through SSIO for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Edit insertion order through SSIO.
     */
    ssioInsertionOrderEdit({ adAccountId, sSIOEditInsertionOrderRequest }: SsioInsertionOrderEditRequest): Observable<SSIOEditInsertionOrderResponse>
    ssioInsertionOrderEdit({ adAccountId, sSIOEditInsertionOrderRequest }: SsioInsertionOrderEditRequest, opts?: OperationOpts): Observable<AjaxResponse<SSIOEditInsertionOrderResponse>>
    ssioInsertionOrderEdit({ adAccountId, sSIOEditInsertionOrderRequest }: SsioInsertionOrderEditRequest, opts?: OperationOpts): Observable<SSIOEditInsertionOrderResponse | AjaxResponse<SSIOEditInsertionOrderResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'ssioInsertionOrderEdit');
        throwIfNullOrUndefined(sSIOEditInsertionOrderRequest, 'sSIOEditInsertionOrderRequest', 'ssioInsertionOrderEdit');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:write'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<SSIOEditInsertionOrderResponse>({
            url: '/ad_accounts/{ad_account_id}/ssio/insertion_orders'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'PATCH',
            headers,
            body: sSIOEditInsertionOrderRequest,
        }, opts?.responseOpts);
    };

    /**
     * Get insertion order status for account id <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get insertion order status by ad account id.
     */
    ssioInsertionOrdersStatusGetByAdAccount({ adAccountId, bookmark, pageSize }: SsioInsertionOrdersStatusGetByAdAccountRequest): Observable<SsioInsertionOrdersStatusGetByAdAccount200Response>
    ssioInsertionOrdersStatusGetByAdAccount({ adAccountId, bookmark, pageSize }: SsioInsertionOrdersStatusGetByAdAccountRequest, opts?: OperationOpts): Observable<AjaxResponse<SsioInsertionOrdersStatusGetByAdAccount200Response>>
    ssioInsertionOrdersStatusGetByAdAccount({ adAccountId, bookmark, pageSize }: SsioInsertionOrdersStatusGetByAdAccountRequest, opts?: OperationOpts): Observable<SsioInsertionOrdersStatusGetByAdAccount200Response | AjaxResponse<SsioInsertionOrdersStatusGetByAdAccount200Response>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'ssioInsertionOrdersStatusGetByAdAccount');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }

        return this.request<SsioInsertionOrdersStatusGetByAdAccount200Response>({
            url: '/ad_accounts/{ad_account_id}/ssio/insertion_orders/status'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Get insertion order status for pin order id <code>pin_order_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get insertion order status by pin order id.
     */
    ssioInsertionOrdersStatusGetByPinOrderId({ adAccountId, pinOrderId }: SsioInsertionOrdersStatusGetByPinOrderIdRequest): Observable<SSIOInsertionOrderStatusResponse>
    ssioInsertionOrdersStatusGetByPinOrderId({ adAccountId, pinOrderId }: SsioInsertionOrdersStatusGetByPinOrderIdRequest, opts?: OperationOpts): Observable<AjaxResponse<SSIOInsertionOrderStatusResponse>>
    ssioInsertionOrdersStatusGetByPinOrderId({ adAccountId, pinOrderId }: SsioInsertionOrdersStatusGetByPinOrderIdRequest, opts?: OperationOpts): Observable<SSIOInsertionOrderStatusResponse | AjaxResponse<SSIOInsertionOrderStatusResponse>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'ssioInsertionOrdersStatusGetByPinOrderId');
        throwIfNullOrUndefined(pinOrderId, 'pinOrderId', 'ssioInsertionOrdersStatusGetByPinOrderId');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<SSIOInsertionOrderStatusResponse>({
            url: '/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status'.replace('{ad_account_id}', encodeURI(adAccountId)).replace('{pin_order_id}', encodeURI(pinOrderId)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Get Salesforce order lines for account id <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get Salesforce order lines by ad account id.
     */
    ssioOrderLinesGetByAdAccount({ adAccountId, bookmark, pageSize, pinOrderId }: SsioOrderLinesGetByAdAccountRequest): Observable<SsioOrderLinesGetByAdAccount200Response>
    ssioOrderLinesGetByAdAccount({ adAccountId, bookmark, pageSize, pinOrderId }: SsioOrderLinesGetByAdAccountRequest, opts?: OperationOpts): Observable<AjaxResponse<SsioOrderLinesGetByAdAccount200Response>>
    ssioOrderLinesGetByAdAccount({ adAccountId, bookmark, pageSize, pinOrderId }: SsioOrderLinesGetByAdAccountRequest, opts?: OperationOpts): Observable<SsioOrderLinesGetByAdAccount200Response | AjaxResponse<SsioOrderLinesGetByAdAccount200Response>> {
        throwIfNullOrUndefined(adAccountId, 'adAccountId', 'ssioOrderLinesGetByAdAccount');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('pinterest_oauth2', ['ads:read'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (bookmark != null) { query['bookmark'] = bookmark; }
        if (pageSize != null) { query['page_size'] = pageSize; }
        if (pinOrderId != null) { query['pin_order_id'] = pinOrderId; }

        return this.request<SsioOrderLinesGetByAdAccount200Response>({
            url: '/ad_accounts/{ad_account_id}/ssio/order_lines'.replace('{ad_account_id}', encodeURI(adAccountId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

}
