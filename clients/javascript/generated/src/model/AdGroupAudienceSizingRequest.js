/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdGroupAudienceSizingRequestKeywordsInner from './AdGroupAudienceSizingRequestKeywordsInner';
import PlacementGroupType from './PlacementGroupType';
import TargetingSpec from './TargetingSpec';

/**
 * The AdGroupAudienceSizingRequest model module.
 * @module model/AdGroupAudienceSizingRequest
 * @version 1.1.1-pre.0
 */
class AdGroupAudienceSizingRequest {
    /**
     * Constructs a new <code>AdGroupAudienceSizingRequest</code>.
     * @alias module:model/AdGroupAudienceSizingRequest
     */
    constructor() { 
        
        AdGroupAudienceSizingRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['auto_targeting_enabled'] = true;
        obj['placement_group'] = 'ALL';
    }

    /**
     * Constructs a <code>AdGroupAudienceSizingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdGroupAudienceSizingRequest} obj Optional instance to populate.
     * @return {module:model/AdGroupAudienceSizingRequest} The populated <code>AdGroupAudienceSizingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdGroupAudienceSizingRequest();

            if (data.hasOwnProperty('auto_targeting_enabled')) {
                obj['auto_targeting_enabled'] = ApiClient.convertToType(data['auto_targeting_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('placement_group')) {
                obj['placement_group'] = ApiClient.convertToType(data['placement_group'], PlacementGroupType);
            }
            if (data.hasOwnProperty('creative_types')) {
                obj['creative_types'] = ApiClient.convertToType(data['creative_types'], ['String']);
            }
            if (data.hasOwnProperty('targeting_spec')) {
                obj['targeting_spec'] = TargetingSpec.constructFromObject(data['targeting_spec']);
            }
            if (data.hasOwnProperty('product_group_ids')) {
                obj['product_group_ids'] = ApiClient.convertToType(data['product_group_ids'], ['String']);
            }
            if (data.hasOwnProperty('keywords')) {
                obj['keywords'] = ApiClient.convertToType(data['keywords'], [AdGroupAudienceSizingRequestKeywordsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdGroupAudienceSizingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdGroupAudienceSizingRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['creative_types'])) {
            throw new Error("Expected the field `creative_types` to be an array in the JSON data but got " + data['creative_types']);
        }
        // validate the optional field `targeting_spec`
        if (data['targeting_spec']) { // data not null
          TargetingSpec.validateJSON(data['targeting_spec']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['product_group_ids'])) {
            throw new Error("Expected the field `product_group_ids` to be an array in the JSON data but got " + data['product_group_ids']);
        }
        if (data['keywords']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['keywords'])) {
                throw new Error("Expected the field `keywords` to be an array in the JSON data but got " + data['keywords']);
            }
            // validate the optional field `keywords` (array)
            for (const item of data['keywords']) {
                AdGroupAudienceSizingRequestKeywordsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
 * @member {Boolean} auto_targeting_enabled
 * @default true
 */
AdGroupAudienceSizingRequest.prototype['auto_targeting_enabled'] = true;

/**
 * <a href=\"/docs/redoc/#section/Placement-group\">Placement group</a>.
 * @member {module:model/PlacementGroupType} placement_group
 * @default 'ALL'
 */
AdGroupAudienceSizingRequest.prototype['placement_group'] = 'ALL';

/**
 * Pin creative types filter. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.
 * @member {Array.<module:model/AdGroupAudienceSizingRequest.CreativeTypesEnum>} creative_types
 */
AdGroupAudienceSizingRequest.prototype['creative_types'] = undefined;

/**
 * @member {module:model/TargetingSpec} targeting_spec
 */
AdGroupAudienceSizingRequest.prototype['targeting_spec'] = undefined;

/**
 * Targeted product group IDs. </p><strong>Note:</strong> This can only be combined with shopping/catalog sales campaigns. For more information, <a href=\"https://help.pinterest.com/en/business/article/shopping-ads#section-14571\" target=\"_blank\">click here</a>. SHOPPING_RETARGETING must be included in targeting_spec object or this field will be ignored.
 * @member {Array.<String>} product_group_ids
 */
AdGroupAudienceSizingRequest.prototype['product_group_ids'] = undefined;

/**
 * Array of keyword objects. If the keywords field is missing, all keywords will be targeted.
 * @member {Array.<module:model/AdGroupAudienceSizingRequestKeywordsInner>} keywords
 */
AdGroupAudienceSizingRequest.prototype['keywords'] = undefined;





/**
 * Allowed values for the <code>creativeTypes</code> property.
 * @enum {String}
 * @readonly
 */
AdGroupAudienceSizingRequest['CreativeTypesEnum'] = {

    /**
     * value: "REGULAR"
     * @const
     */
    "REGULAR": "REGULAR",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "SHOPPING"
     * @const
     */
    "SHOPPING": "SHOPPING",

    /**
     * value: "CAROUSEL"
     * @const
     */
    "CAROUSEL": "CAROUSEL",

    /**
     * value: "MAX_VIDEO"
     * @const
     */
    "MAX_VIDEO": "MAX_VIDEO",

    /**
     * value: "SHOP_THE_PIN"
     * @const
     */
    "SHOP_THE_PIN": "SHOP_THE_PIN",

    /**
     * value: "COLLECTION"
     * @const
     */
    "COLLECTION": "COLLECTION",

    /**
     * value: "IDEA"
     * @const
     */
    "IDEA": "IDEA"
};



export default AdGroupAudienceSizingRequest;

