/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudienceSubcategory model module.
 * @module model/AudienceSubcategory
 * @version 1.1.1-pre.0
 */
class AudienceSubcategory {
    /**
     * Constructs a new <code>AudienceSubcategory</code>.
     * @alias module:model/AudienceSubcategory
     */
    constructor() { 
        
        AudienceSubcategory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudienceSubcategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudienceSubcategory} obj Optional instance to populate.
     * @return {module:model/AudienceSubcategory} The populated <code>AudienceSubcategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudienceSubcategory();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ratio')) {
                obj['ratio'] = ApiClient.convertToType(data['ratio'], 'Number');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudienceSubcategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudienceSubcategory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * Interest unique key (same as ID).
 * @member {String} key
 */
AudienceSubcategory.prototype['key'] = undefined;

/**
 * Subinterest name.
 * @member {String} name
 */
AudienceSubcategory.prototype['name'] = undefined;

/**
 * Subinterest's percent of category's total audience.
 * @member {Number} ratio
 */
AudienceSubcategory.prototype['ratio'] = undefined;

/**
 * Subinterest affinity index.
 * @member {Number} index
 */
AudienceSubcategory.prototype['index'] = undefined;

/**
 * Subinterest ID.
 * @member {String} id
 */
AudienceSubcategory.prototype['id'] = undefined;






export default AudienceSubcategory;

