/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConversionEventsDataInnerCustomDataContentsInner model module.
 * @module model/ConversionEventsDataInnerCustomDataContentsInner
 * @version 1.1.1-pre.0
 */
class ConversionEventsDataInnerCustomDataContentsInner {
    /**
     * Constructs a new <code>ConversionEventsDataInnerCustomDataContentsInner</code>.
     * @alias module:model/ConversionEventsDataInnerCustomDataContentsInner
     */
    constructor() { 
        
        ConversionEventsDataInnerCustomDataContentsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversionEventsDataInnerCustomDataContentsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversionEventsDataInnerCustomDataContentsInner} obj Optional instance to populate.
     * @return {module:model/ConversionEventsDataInnerCustomDataContentsInner} The populated <code>ConversionEventsDataInnerCustomDataContentsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversionEventsDataInnerCustomDataContentsInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('item_price')) {
                obj['item_price'] = ApiClient.convertToType(data['item_price'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('item_name')) {
                obj['item_name'] = ApiClient.convertToType(data['item_name'], 'String');
            }
            if (data.hasOwnProperty('item_category')) {
                obj['item_category'] = ApiClient.convertToType(data['item_category'], 'String');
            }
            if (data.hasOwnProperty('item_brand')) {
                obj['item_brand'] = ApiClient.convertToType(data['item_brand'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversionEventsDataInnerCustomDataContentsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversionEventsDataInnerCustomDataContentsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['item_price'] && !(typeof data['item_price'] === 'string' || data['item_price'] instanceof String)) {
            throw new Error("Expected the field `item_price` to be a primitive type in the JSON string but got " + data['item_price']);
        }
        // ensure the json data is a string
        if (data['item_name'] && !(typeof data['item_name'] === 'string' || data['item_name'] instanceof String)) {
            throw new Error("Expected the field `item_name` to be a primitive type in the JSON string but got " + data['item_name']);
        }
        // ensure the json data is a string
        if (data['item_category'] && !(typeof data['item_category'] === 'string' || data['item_category'] instanceof String)) {
            throw new Error("Expected the field `item_category` to be a primitive type in the JSON string but got " + data['item_category']);
        }
        // ensure the json data is a string
        if (data['item_brand'] && !(typeof data['item_brand'] === 'string' || data['item_brand'] instanceof String)) {
            throw new Error("Expected the field `item_brand` to be a primitive type in the JSON string but got " + data['item_brand']);
        }

        return true;
    }


}



/**
 * The id of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
 * @member {String} id
 */
ConversionEventsDataInnerCustomDataContentsInner.prototype['id'] = undefined;

/**
 * The price of a product. Accepted as a string in the request; it will be parsed into a double. This is the original item value before any discount. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
 * @member {String} item_price
 */
ConversionEventsDataInnerCustomDataContentsInner.prototype['item_price'] = undefined;

/**
 * The amount of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
 * @member {Number} quantity
 */
ConversionEventsDataInnerCustomDataContentsInner.prototype['quantity'] = undefined;

/**
 * The name of a product.
 * @member {String} item_name
 */
ConversionEventsDataInnerCustomDataContentsInner.prototype['item_name'] = undefined;

/**
 * The category of a product.
 * @member {String} item_category
 */
ConversionEventsDataInnerCustomDataContentsInner.prototype['item_category'] = undefined;

/**
 * The brand of a product.
 * @member {String} item_brand
 */
ConversionEventsDataInnerCustomDataContentsInner.prototype['item_brand'] = undefined;






export default ConversionEventsDataInnerCustomDataContentsInner;

