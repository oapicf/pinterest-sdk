/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsCreativeAssetsAttributes from './CatalogsCreativeAssetsAttributes';
import CatalogsCreativeAssetsItemResponse from './CatalogsCreativeAssetsItemResponse';
import CatalogsHotelItemResponse from './CatalogsHotelItemResponse';
import CatalogsRetailItemResponse from './CatalogsRetailItemResponse';
import CatalogsType from './CatalogsType';
import Pin from './Pin';

/**
 * The ItemResponseAnyOf model module.
 * @module model/ItemResponseAnyOf
 * @version 1.1.1-pre.0
 */
class ItemResponseAnyOf {
    /**
     * Constructs a new <code>ItemResponseAnyOf</code>.
     * @alias module:model/ItemResponseAnyOf
     * @param {(module:model/CatalogsCreativeAssetsItemResponse|module:model/CatalogsHotelItemResponse|module:model/CatalogsRetailItemResponse)} instance The actual instance to initialize ItemResponseAnyOf.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailItemResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailItemResponse.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailItemResponse from JS object
                this.actualInstance = CatalogsRetailItemResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailItemResponse
            errorMessages.push("Failed to construct CatalogsRetailItemResponse: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelItemResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelItemResponse.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelItemResponse from JS object
                this.actualInstance = CatalogsHotelItemResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelItemResponse
            errorMessages.push("Failed to construct CatalogsHotelItemResponse: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsItemResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsItemResponse.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsItemResponse from JS object
                this.actualInstance = CatalogsCreativeAssetsItemResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsItemResponse
            errorMessages.push("Failed to construct CatalogsCreativeAssetsItemResponse: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ItemResponseAnyOf` with oneOf schemas CatalogsCreativeAssetsItemResponse, CatalogsHotelItemResponse, CatalogsRetailItemResponse. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ItemResponseAnyOf` with oneOf schemas CatalogsCreativeAssetsItemResponse, CatalogsHotelItemResponse, CatalogsRetailItemResponse. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ItemResponseAnyOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemResponseAnyOf} obj Optional instance to populate.
     * @return {module:model/ItemResponseAnyOf} The populated <code>ItemResponseAnyOf</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ItemResponseAnyOf(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsItemResponse</code>, <code>CatalogsHotelItemResponse</code>, <code>CatalogsRetailItemResponse</code>.
     * @return {(module:model/CatalogsCreativeAssetsItemResponse|module:model/CatalogsHotelItemResponse|module:model/CatalogsRetailItemResponse)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsItemResponse</code>, <code>CatalogsHotelItemResponse</code>, <code>CatalogsRetailItemResponse</code>.
     * @param {(module:model/CatalogsCreativeAssetsItemResponse|module:model/CatalogsHotelItemResponse|module:model/CatalogsRetailItemResponse)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ItemResponseAnyOf.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ItemResponseAnyOf from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ItemResponseAnyOf} An instance of ItemResponseAnyOf.
     */
    static fromJSON = function(json_string){
        return ItemResponseAnyOf.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsType} catalog_type
 */
ItemResponseAnyOf.prototype['catalog_type'] = undefined;

/**
 * The catalog retail item id in the merchant namespace
 * @member {String} item_id
 */
ItemResponseAnyOf.prototype['item_id'] = undefined;

/**
 * The pins mapped to the item
 * @member {Array.<module:model/Pin>} pins
 */
ItemResponseAnyOf.prototype['pins'] = undefined;

/**
 * @member {module:model/CatalogsCreativeAssetsAttributes} attributes
 */
ItemResponseAnyOf.prototype['attributes'] = undefined;

/**
 * The catalog hotel id in the merchant namespace
 * @member {String} hotel_id
 */
ItemResponseAnyOf.prototype['hotel_id'] = undefined;

/**
 * The catalog creative assets id in the merchant namespace
 * @member {String} creative_assets_id
 */
ItemResponseAnyOf.prototype['creative_assets_id'] = undefined;


ItemResponseAnyOf.OneOf = ["CatalogsCreativeAssetsItemResponse", "CatalogsHotelItemResponse", "CatalogsRetailItemResponse"];

export default ItemResponseAnyOf;

