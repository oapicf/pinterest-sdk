/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdAccountOwner from './AdAccountOwner';
import BusinessAccessRole from './BusinessAccessRole';
import Country from './Country';
import Currency from './Currency';

/**
 * The AdAccount model module.
 * @module model/AdAccount
 * @version 1.1.1-pre.0
 */
class AdAccount {
    /**
     * Constructs a new <code>AdAccount</code>.
     * @alias module:model/AdAccount
     */
    constructor() { 
        
        AdAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdAccount} obj Optional instance to populate.
     * @return {module:model/AdAccount} The populated <code>AdAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdAccount();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = AdAccountOwner.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = Country.constructFromObject(data['country']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [BusinessAccessRole]);
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Number');
            }
            if (data.hasOwnProperty('updated_time')) {
                obj['updated_time'] = ApiClient.convertToType(data['updated_time'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdAccount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          AdAccountOwner.validateJSON(data['owner']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
AdAccount.prototype['id'] = undefined;

/**
 * @member {String} name
 */
AdAccount.prototype['name'] = undefined;

/**
 * @member {module:model/AdAccountOwner} owner
 */
AdAccount.prototype['owner'] = undefined;

/**
 * @member {module:model/Country} country
 */
AdAccount.prototype['country'] = undefined;

/**
 * @member {module:model/Currency} currency
 */
AdAccount.prototype['currency'] = undefined;

/**
 * @member {Array.<module:model/BusinessAccessRole>} permissions
 */
AdAccount.prototype['permissions'] = undefined;

/**
 * Creation time. Unix timestamp in seconds.
 * @member {Number} created_time
 */
AdAccount.prototype['created_time'] = undefined;

/**
 * Last update time. Unix timestamp in seconds.
 * @member {Number} updated_time
 */
AdAccount.prototype['updated_time'] = undefined;






export default AdAccount;

