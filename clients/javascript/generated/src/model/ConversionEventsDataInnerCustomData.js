/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConversionEventsDataInnerCustomDataContentsInner from './ConversionEventsDataInnerCustomDataContentsInner';

/**
 * The ConversionEventsDataInnerCustomData model module.
 * @module model/ConversionEventsDataInnerCustomData
 * @version 1.1.1-pre.0
 */
class ConversionEventsDataInnerCustomData {
    /**
     * Constructs a new <code>ConversionEventsDataInnerCustomData</code>.
     * Object containing other custom data.
     * @alias module:model/ConversionEventsDataInnerCustomData
     */
    constructor() { 
        
        ConversionEventsDataInnerCustomData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversionEventsDataInnerCustomData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversionEventsDataInnerCustomData} obj Optional instance to populate.
     * @return {module:model/ConversionEventsDataInnerCustomData} The populated <code>ConversionEventsDataInnerCustomData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversionEventsDataInnerCustomData();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('content_ids')) {
                obj['content_ids'] = ApiClient.convertToType(data['content_ids'], ['String']);
            }
            if (data.hasOwnProperty('content_name')) {
                obj['content_name'] = ApiClient.convertToType(data['content_name'], 'String');
            }
            if (data.hasOwnProperty('content_category')) {
                obj['content_category'] = ApiClient.convertToType(data['content_category'], 'String');
            }
            if (data.hasOwnProperty('content_brand')) {
                obj['content_brand'] = ApiClient.convertToType(data['content_brand'], 'String');
            }
            if (data.hasOwnProperty('contents')) {
                obj['contents'] = ApiClient.convertToType(data['contents'], [ConversionEventsDataInnerCustomDataContentsInner]);
            }
            if (data.hasOwnProperty('num_items')) {
                obj['num_items'] = ApiClient.convertToType(data['num_items'], 'Number');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('search_string')) {
                obj['search_string'] = ApiClient.convertToType(data['search_string'], 'String');
            }
            if (data.hasOwnProperty('opt_out_type')) {
                obj['opt_out_type'] = ApiClient.convertToType(data['opt_out_type'], 'String');
            }
            if (data.hasOwnProperty('np')) {
                obj['np'] = ApiClient.convertToType(data['np'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversionEventsDataInnerCustomData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversionEventsDataInnerCustomData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['content_ids'])) {
            throw new Error("Expected the field `content_ids` to be an array in the JSON data but got " + data['content_ids']);
        }
        // ensure the json data is a string
        if (data['content_name'] && !(typeof data['content_name'] === 'string' || data['content_name'] instanceof String)) {
            throw new Error("Expected the field `content_name` to be a primitive type in the JSON string but got " + data['content_name']);
        }
        // ensure the json data is a string
        if (data['content_category'] && !(typeof data['content_category'] === 'string' || data['content_category'] instanceof String)) {
            throw new Error("Expected the field `content_category` to be a primitive type in the JSON string but got " + data['content_category']);
        }
        // ensure the json data is a string
        if (data['content_brand'] && !(typeof data['content_brand'] === 'string' || data['content_brand'] instanceof String)) {
            throw new Error("Expected the field `content_brand` to be a primitive type in the JSON string but got " + data['content_brand']);
        }
        if (data['contents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['contents'])) {
                throw new Error("Expected the field `contents` to be an array in the JSON data but got " + data['contents']);
            }
            // validate the optional field `contents` (array)
            for (const item of data['contents']) {
                ConversionEventsDataInnerCustomDataContentsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['search_string'] && !(typeof data['search_string'] === 'string' || data['search_string'] instanceof String)) {
            throw new Error("Expected the field `search_string` to be a primitive type in the JSON string but got " + data['search_string']);
        }
        // ensure the json data is a string
        if (data['opt_out_type'] && !(typeof data['opt_out_type'] === 'string' || data['opt_out_type'] instanceof String)) {
            throw new Error("Expected the field `opt_out_type` to be a primitive type in the JSON string but got " + data['opt_out_type']);
        }
        // ensure the json data is a string
        if (data['np'] && !(typeof data['np'] === 'string' || data['np'] instanceof String)) {
            throw new Error("Expected the field `np` to be a primitive type in the JSON string but got " + data['np']);
        }

        return true;
    }


}



/**
 * The ISO-4217 currency code. If not provided, we will default to the advertiser's currency set during account creation. Your campaign performance needs this field to report right ROAS/CPA.
 * @member {String} currency
 */
ConversionEventsDataInnerCustomData.prototype['currency'] = undefined;

/**
 * Total value of the event. Accepted as a string in the request; it will be parsed into a double. For example, if there are two items in a checkout event, the value should be the total price. We recommend to use pre-tax, pre-shipping final value.
 * @member {String} value
 */
ConversionEventsDataInnerCustomData.prototype['value'] = undefined;

/**
 * List of products IDs. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
 * @member {Array.<String>} content_ids
 */
ConversionEventsDataInnerCustomData.prototype['content_ids'] = undefined;

/**
 * The name of the page or product associated with the event.
 * @member {String} content_name
 */
ConversionEventsDataInnerCustomData.prototype['content_name'] = undefined;

/**
 * The category of the content associated with the event.
 * @member {String} content_category
 */
ConversionEventsDataInnerCustomData.prototype['content_category'] = undefined;

/**
 * The brand of the content associated with the event.
 * @member {String} content_brand
 */
ConversionEventsDataInnerCustomData.prototype['content_brand'] = undefined;

/**
 * A list of objects containing information about products, such as price and quantity. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
 * @member {Array.<module:model/ConversionEventsDataInnerCustomDataContentsInner>} contents
 */
ConversionEventsDataInnerCustomData.prototype['contents'] = undefined;

/**
 * Total number of products of the event. For example, the total number of items purchased in a checkout event. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
 * @member {Number} num_items
 */
ConversionEventsDataInnerCustomData.prototype['num_items'] = undefined;

/**
 * The order ID. We recommend sending order_id to help us deduplicate events when necessary. This also helps to run other measurement products at Pinterest.
 * @member {String} order_id
 */
ConversionEventsDataInnerCustomData.prototype['order_id'] = undefined;

/**
 * The search string related to the user conversion event.
 * @member {String} search_string
 */
ConversionEventsDataInnerCustomData.prototype['search_string'] = undefined;

/**
 * Flags for different privacy rights laws to opt out users of sharing personal information. Values should be comma separated. Please follow the <a href=\"https://help.pinterest.com/en/business/article/limited-data-processing\" target=\"_blank\">Help Center</a> and <a href=\"/docs/api-features/conversion-overview/\" target=\"_blank\">dev site</a> for specific opt_out_type set up.
 * @member {String} opt_out_type
 */
ConversionEventsDataInnerCustomData.prototype['opt_out_type'] = undefined;

/**
 * Named partner. Not required, this is for Pinterest internal use only. Please do not use this unless specifically guided.
 * @member {String} np
 */
ConversionEventsDataInnerCustomData.prototype['np'] = undefined;






export default ConversionEventsDataInnerCustomData;

