/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LeadFormCommon from './LeadFormCommon';
import LeadFormCommonPolicyLinksInner from './LeadFormCommonPolicyLinksInner';
import LeadFormQuestion from './LeadFormQuestion';
import LeadFormStatus from './LeadFormStatus';

/**
 * The LeadFormResponse model module.
 * @module model/LeadFormResponse
 * @version 1.1.1-pre.0
 */
class LeadFormResponse {
    /**
     * Constructs a new <code>LeadFormResponse</code>.
     * @alias module:model/LeadFormResponse
     * @implements module:model/LeadFormCommon
     */
    constructor() { 
        LeadFormCommon.initialize(this);
        LeadFormResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LeadFormResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeadFormResponse} obj Optional instance to populate.
     * @return {module:model/LeadFormResponse} The populated <code>LeadFormResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeadFormResponse();
            LeadFormCommon.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('privacy_policy_link')) {
                obj['privacy_policy_link'] = ApiClient.convertToType(data['privacy_policy_link'], 'String');
            }
            if (data.hasOwnProperty('has_accepted_terms')) {
                obj['has_accepted_terms'] = ApiClient.convertToType(data['has_accepted_terms'], 'Boolean');
            }
            if (data.hasOwnProperty('completion_message')) {
                obj['completion_message'] = ApiClient.convertToType(data['completion_message'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = LeadFormStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('disclosure_language')) {
                obj['disclosure_language'] = ApiClient.convertToType(data['disclosure_language'], 'String');
            }
            if (data.hasOwnProperty('questions')) {
                obj['questions'] = ApiClient.convertToType(data['questions'], [LeadFormQuestion]);
            }
            if (data.hasOwnProperty('policy_links')) {
                obj['policy_links'] = ApiClient.convertToType(data['policy_links'], [LeadFormCommonPolicyLinksInner]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ad_account_id')) {
                obj['ad_account_id'] = ApiClient.convertToType(data['ad_account_id'], 'String');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Number');
            }
            if (data.hasOwnProperty('updated_time')) {
                obj['updated_time'] = ApiClient.convertToType(data['updated_time'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LeadFormResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LeadFormResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['privacy_policy_link'] && !(typeof data['privacy_policy_link'] === 'string' || data['privacy_policy_link'] instanceof String)) {
            throw new Error("Expected the field `privacy_policy_link` to be a primitive type in the JSON string but got " + data['privacy_policy_link']);
        }
        // ensure the json data is a string
        if (data['completion_message'] && !(typeof data['completion_message'] === 'string' || data['completion_message'] instanceof String)) {
            throw new Error("Expected the field `completion_message` to be a primitive type in the JSON string but got " + data['completion_message']);
        }
        // ensure the json data is a string
        if (data['disclosure_language'] && !(typeof data['disclosure_language'] === 'string' || data['disclosure_language'] instanceof String)) {
            throw new Error("Expected the field `disclosure_language` to be a primitive type in the JSON string but got " + data['disclosure_language']);
        }
        if (data['questions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['questions'])) {
                throw new Error("Expected the field `questions` to be an array in the JSON data but got " + data['questions']);
            }
            // validate the optional field `questions` (array)
            for (const item of data['questions']) {
                LeadFormQuestion.validateJSON(item);
            };
        }
        if (data['policy_links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['policy_links'])) {
                throw new Error("Expected the field `policy_links` to be an array in the JSON data but got " + data['policy_links']);
            }
            // validate the optional field `policy_links` (array)
            for (const item of data['policy_links']) {
                LeadFormCommonPolicyLinksInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['ad_account_id'] && !(typeof data['ad_account_id'] === 'string' || data['ad_account_id'] instanceof String)) {
            throw new Error("Expected the field `ad_account_id` to be a primitive type in the JSON string but got " + data['ad_account_id']);
        }

        return true;
    }


}



/**
 * Internal name of the lead form.
 * @member {String} name
 */
LeadFormResponse.prototype['name'] = undefined;

/**
 * A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language.
 * @member {String} privacy_policy_link
 */
LeadFormResponse.prototype['privacy_policy_link'] = undefined;

/**
 * Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO
 * @member {Boolean} has_accepted_terms
 */
LeadFormResponse.prototype['has_accepted_terms'] = undefined;

/**
 * A message for people who complete the form to let them know what happens next.
 * @member {String} completion_message
 */
LeadFormResponse.prototype['completion_message'] = undefined;

/**
 * @member {module:model/LeadFormStatus} status
 */
LeadFormResponse.prototype['status'] = undefined;

/**
 * Additional disclosure language to be included in the lead form.
 * @member {String} disclosure_language
 */
LeadFormResponse.prototype['disclosure_language'] = undefined;

/**
 * List of questions to be displayed on the lead form.
 * @member {Array.<module:model/LeadFormQuestion>} questions
 */
LeadFormResponse.prototype['questions'] = undefined;

/**
 * List of additional policy links to be displayed on the lead form.
 * @member {Array.<module:model/LeadFormCommonPolicyLinksInner>} policy_links
 */
LeadFormResponse.prototype['policy_links'] = undefined;

/**
 * The ID of this lead form
 * @member {String} id
 */
LeadFormResponse.prototype['id'] = undefined;

/**
 * The Ad Account ID that this lead form belongs to.
 * @member {String} ad_account_id
 */
LeadFormResponse.prototype['ad_account_id'] = undefined;

/**
 * Lead form creation time. Unix timestamp in seconds.
 * @member {Number} created_time
 */
LeadFormResponse.prototype['created_time'] = undefined;

/**
 * Last update time. Unix timestamp in seconds.
 * @member {Number} updated_time
 */
LeadFormResponse.prototype['updated_time'] = undefined;


// Implement LeadFormCommon interface:
/**
 * Internal name of the lead form.
 * @member {String} name
 */
LeadFormCommon.prototype['name'] = undefined;
/**
 * A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language.
 * @member {String} privacy_policy_link
 */
LeadFormCommon.prototype['privacy_policy_link'] = undefined;
/**
 * Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO
 * @member {Boolean} has_accepted_terms
 */
LeadFormCommon.prototype['has_accepted_terms'] = undefined;
/**
 * A message for people who complete the form to let them know what happens next.
 * @member {String} completion_message
 */
LeadFormCommon.prototype['completion_message'] = undefined;
/**
 * @member {module:model/LeadFormStatus} status
 */
LeadFormCommon.prototype['status'] = undefined;
/**
 * Additional disclosure language to be included in the lead form.
 * @member {String} disclosure_language
 */
LeadFormCommon.prototype['disclosure_language'] = undefined;
/**
 * List of questions to be displayed on the lead form.
 * @member {Array.<module:model/LeadFormQuestion>} questions
 */
LeadFormCommon.prototype['questions'] = undefined;
/**
 * List of additional policy links to be displayed on the lead form.
 * @member {Array.<module:model/LeadFormCommonPolicyLinksInner>} policy_links
 */
LeadFormCommon.prototype['policy_links'] = undefined;




export default LeadFormResponse;

