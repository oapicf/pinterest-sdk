/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogsReportDistributionIssueFilter model module.
 * @module model/CatalogsReportDistributionIssueFilter
 * @version 1.1.1-pre.0
 */
class CatalogsReportDistributionIssueFilter {
    /**
     * Constructs a new <code>CatalogsReportDistributionIssueFilter</code>.
     * @alias module:model/CatalogsReportDistributionIssueFilter
     * @param reportType {module:model/CatalogsReportDistributionIssueFilter.ReportTypeEnum} 
     */
    constructor(reportType) { 
        
        CatalogsReportDistributionIssueFilter.initialize(this, reportType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reportType) { 
        obj['report_type'] = reportType;
    }

    /**
     * Constructs a <code>CatalogsReportDistributionIssueFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsReportDistributionIssueFilter} obj Optional instance to populate.
     * @return {module:model/CatalogsReportDistributionIssueFilter} The populated <code>CatalogsReportDistributionIssueFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsReportDistributionIssueFilter();

            if (data.hasOwnProperty('report_type')) {
                obj['report_type'] = ApiClient.convertToType(data['report_type'], 'String');
            }
            if (data.hasOwnProperty('catalog_id')) {
                obj['catalog_id'] = ApiClient.convertToType(data['catalog_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogsReportDistributionIssueFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogsReportDistributionIssueFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogsReportDistributionIssueFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['report_type'] && !(typeof data['report_type'] === 'string' || data['report_type'] instanceof String)) {
            throw new Error("Expected the field `report_type` to be a primitive type in the JSON string but got " + data['report_type']);
        }
        // ensure the json data is a string
        if (data['catalog_id'] && !(typeof data['catalog_id'] === 'string' || data['catalog_id'] instanceof String)) {
            throw new Error("Expected the field `catalog_id` to be a primitive type in the JSON string but got " + data['catalog_id']);
        }

        return true;
    }


}

CatalogsReportDistributionIssueFilter.RequiredProperties = ["report_type"];

/**
 * @member {module:model/CatalogsReportDistributionIssueFilter.ReportTypeEnum} report_type
 */
CatalogsReportDistributionIssueFilter.prototype['report_type'] = undefined;

/**
 * Unique identifier of a catalog. If not given, oldest catalog will be used
 * @member {String} catalog_id
 */
CatalogsReportDistributionIssueFilter.prototype['catalog_id'] = undefined;





/**
 * Allowed values for the <code>report_type</code> property.
 * @enum {String}
 * @readonly
 */
CatalogsReportDistributionIssueFilter['ReportTypeEnum'] = {

    /**
     * value: "DISTRIBUTION_ISSUES"
     * @const
     */
    "DISTRIBUTION_ISSUES": "DISTRIBUTION_ISSUES"
};



export default CatalogsReportDistributionIssueFilter;

