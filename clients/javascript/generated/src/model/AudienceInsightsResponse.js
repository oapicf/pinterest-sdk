/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudienceCategory from './AudienceCategory';
import AudienceDemographics from './AudienceDemographics';
import AudienceInsightType from './AudienceInsightType';

/**
 * The AudienceInsightsResponse model module.
 * @module model/AudienceInsightsResponse
 * @version 1.1.1-pre.0
 */
class AudienceInsightsResponse {
    /**
     * Constructs a new <code>AudienceInsightsResponse</code>.
     * Audience interests and demographics.
     * @alias module:model/AudienceInsightsResponse
     */
    constructor() { 
        
        AudienceInsightsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudienceInsightsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudienceInsightsResponse} obj Optional instance to populate.
     * @return {module:model/AudienceInsightsResponse} The populated <code>AudienceInsightsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudienceInsightsResponse();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [AudienceCategory]);
            }
            if (data.hasOwnProperty('demographics')) {
                obj['demographics'] = AudienceDemographics.constructFromObject(data['demographics']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = AudienceInsightType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('size_is_upper_bound')) {
                obj['size_is_upper_bound'] = ApiClient.convertToType(data['size_is_upper_bound'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudienceInsightsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudienceInsightsResponse</code>.
     */
    static validateJSON(data) {
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                AudienceCategory.validateJSON(item);
            };
        }
        // validate the optional field `demographics`
        if (data['demographics']) { // data not null
          AudienceDemographics.validateJSON(data['demographics']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }

        return true;
    }


}



/**
 * Category interest distribution
 * @member {Array.<module:model/AudienceCategory>} categories
 */
AudienceInsightsResponse.prototype['categories'] = undefined;

/**
 * @member {module:model/AudienceDemographics} demographics
 */
AudienceInsightsResponse.prototype['demographics'] = undefined;

/**
 * @member {module:model/AudienceInsightType} type
 */
AudienceInsightsResponse.prototype['type'] = undefined;

/**
 * Generation date
 * @member {String} date
 */
AudienceInsightsResponse.prototype['date'] = undefined;

/**
 * Population count.
 * @member {Number} size
 */
AudienceInsightsResponse.prototype['size'] = undefined;

/**
 * Indicates whether the audience size has been rounded up to the next highest upper boundary.
 * @member {Boolean} size_is_upper_bound
 */
AudienceInsightsResponse.prototype['size_is_upper_bound'] = undefined;






export default AudienceInsightsResponse;

