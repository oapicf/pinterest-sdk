/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetGroupType from './AssetGroupType';

/**
 * The CreateAssetGroupBody model module.
 * @module model/CreateAssetGroupBody
 * @version 1.1.1-pre.0
 */
class CreateAssetGroupBody {
    /**
     * Constructs a new <code>CreateAssetGroupBody</code>.
     * @alias module:model/CreateAssetGroupBody
     * @param assetGroupName {String} Asset Group name
     * @param assetGroupDescription {String} Asset group description
     * @param assetGroupTypes {Array.<module:model/AssetGroupType>} Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
     */
    constructor(assetGroupName, assetGroupDescription, assetGroupTypes) { 
        
        CreateAssetGroupBody.initialize(this, assetGroupName, assetGroupDescription, assetGroupTypes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetGroupName, assetGroupDescription, assetGroupTypes) { 
        obj['asset_group_name'] = assetGroupName;
        obj['asset_group_description'] = assetGroupDescription;
        obj['asset_group_types'] = assetGroupTypes;
    }

    /**
     * Constructs a <code>CreateAssetGroupBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAssetGroupBody} obj Optional instance to populate.
     * @return {module:model/CreateAssetGroupBody} The populated <code>CreateAssetGroupBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAssetGroupBody();

            if (data.hasOwnProperty('asset_group_name')) {
                obj['asset_group_name'] = ApiClient.convertToType(data['asset_group_name'], 'String');
            }
            if (data.hasOwnProperty('asset_group_description')) {
                obj['asset_group_description'] = ApiClient.convertToType(data['asset_group_description'], 'String');
            }
            if (data.hasOwnProperty('asset_group_types')) {
                obj['asset_group_types'] = ApiClient.convertToType(data['asset_group_types'], [AssetGroupType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAssetGroupBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAssetGroupBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAssetGroupBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['asset_group_name'] && !(typeof data['asset_group_name'] === 'string' || data['asset_group_name'] instanceof String)) {
            throw new Error("Expected the field `asset_group_name` to be a primitive type in the JSON string but got " + data['asset_group_name']);
        }
        // ensure the json data is a string
        if (data['asset_group_description'] && !(typeof data['asset_group_description'] === 'string' || data['asset_group_description'] instanceof String)) {
            throw new Error("Expected the field `asset_group_description` to be a primitive type in the JSON string but got " + data['asset_group_description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['asset_group_types'])) {
            throw new Error("Expected the field `asset_group_types` to be an array in the JSON data but got " + data['asset_group_types']);
        }

        return true;
    }


}

CreateAssetGroupBody.RequiredProperties = ["asset_group_name", "asset_group_description", "asset_group_types"];

/**
 * Asset Group name
 * @member {String} asset_group_name
 */
CreateAssetGroupBody.prototype['asset_group_name'] = undefined;

/**
 * Asset group description
 * @member {String} asset_group_description
 */
CreateAssetGroupBody.prototype['asset_group_description'] = undefined;

/**
 * Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
 * @member {Array.<module:model/AssetGroupType>} asset_group_types
 */
CreateAssetGroupBody.prototype['asset_group_types'] = undefined;






export default CreateAssetGroupBody;

