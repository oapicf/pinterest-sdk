/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlacementGroupType from './PlacementGroupType';
import TargetingSpec from './TargetingSpec';
import TargetingTemplateAudienceSizing from './TargetingTemplateAudienceSizing';
import TargetingTemplateKeyword from './TargetingTemplateKeyword';
import TargetingTemplateResponseData from './TargetingTemplateResponseData';
import TrackingUrls from './TrackingUrls';

/**
 * The TargetingTemplateGetResponseData model module.
 * @module model/TargetingTemplateGetResponseData
 * @version 1.1.1-pre.0
 */
class TargetingTemplateGetResponseData {
    /**
     * Constructs a new <code>TargetingTemplateGetResponseData</code>.
     * @alias module:model/TargetingTemplateGetResponseData
     * @implements module:model/TargetingTemplateResponseData
     */
    constructor() { 
        TargetingTemplateResponseData.initialize(this);
        TargetingTemplateGetResponseData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['auto_targeting_enabled'] = true;
        obj['status'] = 'ACTIVE';
    }

    /**
     * Constructs a <code>TargetingTemplateGetResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TargetingTemplateGetResponseData} obj Optional instance to populate.
     * @return {module:model/TargetingTemplateGetResponseData} The populated <code>TargetingTemplateGetResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TargetingTemplateGetResponseData();
            TargetingTemplateResponseData.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('auto_targeting_enabled')) {
                obj['auto_targeting_enabled'] = ApiClient.convertToType(data['auto_targeting_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('targeting_attributes')) {
                obj['targeting_attributes'] = TargetingSpec.constructFromObject(data['targeting_attributes']);
            }
            if (data.hasOwnProperty('placement_group')) {
                obj['placement_group'] = PlacementGroupType.constructFromObject(data['placement_group']);
            }
            if (data.hasOwnProperty('keywords')) {
                obj['keywords'] = ApiClient.convertToType(data['keywords'], [TargetingTemplateKeyword]);
            }
            if (data.hasOwnProperty('tracking_urls')) {
                obj['tracking_urls'] = TrackingUrls.constructFromObject(data['tracking_urls']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Number');
            }
            if (data.hasOwnProperty('updated_time')) {
                obj['updated_time'] = ApiClient.convertToType(data['updated_time'], 'Number');
            }
            if (data.hasOwnProperty('ad_account_id')) {
                obj['ad_account_id'] = ApiClient.convertToType(data['ad_account_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('sizing')) {
                obj['sizing'] = TargetingTemplateAudienceSizing.constructFromObject(data['sizing']);
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TargetingTemplateGetResponseData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TargetingTemplateGetResponseData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `targeting_attributes`
        if (data['targeting_attributes']) { // data not null
          TargetingSpec.validateJSON(data['targeting_attributes']);
        }
        if (data['keywords']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['keywords'])) {
                throw new Error("Expected the field `keywords` to be an array in the JSON data but got " + data['keywords']);
            }
            // validate the optional field `keywords` (array)
            for (const item of data['keywords']) {
                TargetingTemplateKeyword.validateJSON(item);
            };
        }
        // validate the optional field `tracking_urls`
        if (data['tracking_urls']) { // data not null
          TrackingUrls.validateJSON(data['tracking_urls']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['ad_account_id'] && !(typeof data['ad_account_id'] === 'string' || data['ad_account_id'] instanceof String)) {
            throw new Error("Expected the field `ad_account_id` to be a primitive type in the JSON string but got " + data['ad_account_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `sizing`
        if (data['sizing']) { // data not null
          TargetingTemplateAudienceSizing.validateJSON(data['sizing']);
        }

        return true;
    }


}



/**
 * targeting template name
 * @member {String} name
 */
TargetingTemplateGetResponseData.prototype['name'] = undefined;

/**
 * Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
 * @member {Boolean} auto_targeting_enabled
 * @default true
 */
TargetingTemplateGetResponseData.prototype['auto_targeting_enabled'] = true;

/**
 * @member {module:model/TargetingSpec} targeting_attributes
 */
TargetingTemplateGetResponseData.prototype['targeting_attributes'] = undefined;

/**
 * @member {module:model/PlacementGroupType} placement_group
 */
TargetingTemplateGetResponseData.prototype['placement_group'] = undefined;

/**
 * @member {Array.<module:model/TargetingTemplateKeyword>} keywords
 */
TargetingTemplateGetResponseData.prototype['keywords'] = undefined;

/**
 * @member {module:model/TrackingUrls} tracking_urls
 */
TargetingTemplateGetResponseData.prototype['tracking_urls'] = undefined;

/**
 * Targeting template ID.
 * @member {String} id
 */
TargetingTemplateGetResponseData.prototype['id'] = undefined;

/**
 * Targeting template created time. Unix timestamp in seconds.
 * @member {Number} created_time
 */
TargetingTemplateGetResponseData.prototype['created_time'] = undefined;

/**
 * Targeting template updated time.Unix timestamp in seconds.
 * @member {Number} updated_time
 */
TargetingTemplateGetResponseData.prototype['updated_time'] = undefined;

/**
 * The ID of the advertiser that this targeting template belongs to.
 * @member {String} ad_account_id
 */
TargetingTemplateGetResponseData.prototype['ad_account_id'] = undefined;

/**
 * Indicate targeting template is active or Deleted
 * @member {module:model/TargetingTemplateGetResponseData.StatusEnum} status
 * @default 'ACTIVE'
 */
TargetingTemplateGetResponseData.prototype['status'] = 'ACTIVE';

/**
 * @member {module:model/TargetingTemplateAudienceSizing} sizing
 */
TargetingTemplateGetResponseData.prototype['sizing'] = undefined;

/**
 * Inform if the targeting template is valid (ex. would be false if has revoked audience)
 * @member {Boolean} valid
 */
TargetingTemplateGetResponseData.prototype['valid'] = undefined;


// Implement TargetingTemplateResponseData interface:
/**
 * targeting template name
 * @member {String} name
 */
TargetingTemplateResponseData.prototype['name'] = undefined;
/**
 * Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
 * @member {Boolean} auto_targeting_enabled
 * @default true
 */
TargetingTemplateResponseData.prototype['auto_targeting_enabled'] = true;
/**
 * @member {module:model/TargetingSpec} targeting_attributes
 */
TargetingTemplateResponseData.prototype['targeting_attributes'] = undefined;
/**
 * @member {module:model/PlacementGroupType} placement_group
 */
TargetingTemplateResponseData.prototype['placement_group'] = undefined;
/**
 * @member {Array.<module:model/TargetingTemplateKeyword>} keywords
 */
TargetingTemplateResponseData.prototype['keywords'] = undefined;
/**
 * @member {module:model/TrackingUrls} tracking_urls
 */
TargetingTemplateResponseData.prototype['tracking_urls'] = undefined;
/**
 * Targeting template ID.
 * @member {String} id
 */
TargetingTemplateResponseData.prototype['id'] = undefined;
/**
 * Targeting template created time. Unix timestamp in seconds.
 * @member {Number} created_time
 */
TargetingTemplateResponseData.prototype['created_time'] = undefined;
/**
 * Targeting template updated time.Unix timestamp in seconds.
 * @member {Number} updated_time
 */
TargetingTemplateResponseData.prototype['updated_time'] = undefined;
/**
 * The ID of the advertiser that this targeting template belongs to.
 * @member {String} ad_account_id
 */
TargetingTemplateResponseData.prototype['ad_account_id'] = undefined;
/**
 * Indicate targeting template is active or Deleted
 * @member {module:model/TargetingTemplateResponseData.StatusEnum} status
 * @default 'ACTIVE'
 */
TargetingTemplateResponseData.prototype['status'] = 'ACTIVE';
/**
 * @member {module:model/TargetingTemplateAudienceSizing} sizing
 */
TargetingTemplateResponseData.prototype['sizing'] = undefined;



/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TargetingTemplateGetResponseData['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED"
};



export default TargetingTemplateGetResponseData;

