/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsCreativeAssetsFeedsUpdateRequest from './CatalogsCreativeAssetsFeedsUpdateRequest';
import CatalogsFeedCredentials from './CatalogsFeedCredentials';
import CatalogsFeedProcessingSchedule from './CatalogsFeedProcessingSchedule';
import CatalogsFormat from './CatalogsFormat';
import CatalogsHotelFeedsUpdateRequest from './CatalogsHotelFeedsUpdateRequest';
import CatalogsRetailFeedsUpdateRequest from './CatalogsRetailFeedsUpdateRequest';
import CatalogsStatus from './CatalogsStatus';
import CatalogsType from './CatalogsType';
import NullableCurrency from './NullableCurrency';
import ProductAvailabilityType from './ProductAvailabilityType';

/**
 * The CatalogsVerticalFeedsUpdateRequest model module.
 * @module model/CatalogsVerticalFeedsUpdateRequest
 * @version 1.1.1-pre.0
 */
class CatalogsVerticalFeedsUpdateRequest {
    /**
     * Constructs a new <code>CatalogsVerticalFeedsUpdateRequest</code>.
     * Request object for updating a feed.
     * @alias module:model/CatalogsVerticalFeedsUpdateRequest
     * @param {(module:model/CatalogsCreativeAssetsFeedsUpdateRequest|module:model/CatalogsHotelFeedsUpdateRequest|module:model/CatalogsRetailFeedsUpdateRequest)} instance The actual instance to initialize CatalogsVerticalFeedsUpdateRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailFeedsUpdateRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailFeedsUpdateRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailFeedsUpdateRequest from JS object
                this.actualInstance = CatalogsRetailFeedsUpdateRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailFeedsUpdateRequest
            errorMessages.push("Failed to construct CatalogsRetailFeedsUpdateRequest: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelFeedsUpdateRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelFeedsUpdateRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelFeedsUpdateRequest from JS object
                this.actualInstance = CatalogsHotelFeedsUpdateRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelFeedsUpdateRequest
            errorMessages.push("Failed to construct CatalogsHotelFeedsUpdateRequest: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsFeedsUpdateRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsFeedsUpdateRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsFeedsUpdateRequest from JS object
                this.actualInstance = CatalogsCreativeAssetsFeedsUpdateRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsFeedsUpdateRequest
            errorMessages.push("Failed to construct CatalogsCreativeAssetsFeedsUpdateRequest: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsVerticalFeedsUpdateRequest` with oneOf schemas CatalogsCreativeAssetsFeedsUpdateRequest, CatalogsHotelFeedsUpdateRequest, CatalogsRetailFeedsUpdateRequest. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsVerticalFeedsUpdateRequest` with oneOf schemas CatalogsCreativeAssetsFeedsUpdateRequest, CatalogsHotelFeedsUpdateRequest, CatalogsRetailFeedsUpdateRequest. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsVerticalFeedsUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsVerticalFeedsUpdateRequest} obj Optional instance to populate.
     * @return {module:model/CatalogsVerticalFeedsUpdateRequest} The populated <code>CatalogsVerticalFeedsUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsVerticalFeedsUpdateRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsFeedsUpdateRequest</code>, <code>CatalogsHotelFeedsUpdateRequest</code>, <code>CatalogsRetailFeedsUpdateRequest</code>.
     * @return {(module:model/CatalogsCreativeAssetsFeedsUpdateRequest|module:model/CatalogsHotelFeedsUpdateRequest|module:model/CatalogsRetailFeedsUpdateRequest)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsFeedsUpdateRequest</code>, <code>CatalogsHotelFeedsUpdateRequest</code>, <code>CatalogsRetailFeedsUpdateRequest</code>.
     * @param {(module:model/CatalogsCreativeAssetsFeedsUpdateRequest|module:model/CatalogsHotelFeedsUpdateRequest|module:model/CatalogsRetailFeedsUpdateRequest)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsVerticalFeedsUpdateRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsVerticalFeedsUpdateRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsVerticalFeedsUpdateRequest} An instance of CatalogsVerticalFeedsUpdateRequest.
     */
    static fromJSON = function(json_string){
        return CatalogsVerticalFeedsUpdateRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/NullableCurrency} default_currency
 */
CatalogsVerticalFeedsUpdateRequest.prototype['default_currency'] = undefined;

/**
 * A human-friendly name associated to a given feed.
 * @member {String} name
 */
CatalogsVerticalFeedsUpdateRequest.prototype['name'] = undefined;

/**
 * @member {module:model/CatalogsFormat} format
 */
CatalogsVerticalFeedsUpdateRequest.prototype['format'] = undefined;

/**
 * @member {module:model/CatalogsFeedCredentials} credentials
 */
CatalogsVerticalFeedsUpdateRequest.prototype['credentials'] = undefined;

/**
 * The URL where a feed is available for download. This URL is what Pinterest will use to download a feed for processing.
 * @member {String} location
 */
CatalogsVerticalFeedsUpdateRequest.prototype['location'] = undefined;

/**
 * @member {module:model/CatalogsFeedProcessingSchedule} preferred_processing_schedule
 */
CatalogsVerticalFeedsUpdateRequest.prototype['preferred_processing_schedule'] = undefined;

/**
 * @member {module:model/CatalogsStatus} status
 */
CatalogsVerticalFeedsUpdateRequest.prototype['status'] = undefined;

/**
 * @member {module:model/CatalogsType} catalog_type
 */
CatalogsVerticalFeedsUpdateRequest.prototype['catalog_type'] = undefined;

/**
 * @member {module:model/ProductAvailabilityType} default_availability
 */
CatalogsVerticalFeedsUpdateRequest.prototype['default_availability'] = undefined;


CatalogsVerticalFeedsUpdateRequest.OneOf = ["CatalogsCreativeAssetsFeedsUpdateRequest", "CatalogsHotelFeedsUpdateRequest", "CatalogsRetailFeedsUpdateRequest"];

export default CatalogsVerticalFeedsUpdateRequest;

