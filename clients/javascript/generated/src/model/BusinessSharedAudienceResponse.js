/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Role from './Role';
import SharedAudienceResponseCommon from './SharedAudienceResponseCommon';

/**
 * The BusinessSharedAudienceResponse model module.
 * @module model/BusinessSharedAudienceResponse
 * @version 1.1.1-pre.0
 */
class BusinessSharedAudienceResponse {
    /**
     * Constructs a new <code>BusinessSharedAudienceResponse</code>.
     * @alias module:model/BusinessSharedAudienceResponse
     * @implements module:model/SharedAudienceResponseCommon
     */
    constructor() { 
        SharedAudienceResponseCommon.initialize(this);
        BusinessSharedAudienceResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BusinessSharedAudienceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BusinessSharedAudienceResponse} obj Optional instance to populate.
     * @return {module:model/BusinessSharedAudienceResponse} The populated <code>BusinessSharedAudienceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BusinessSharedAudienceResponse();
            SharedAudienceResponseCommon.constructFromObject(data, obj);

            if (data.hasOwnProperty('audience_id')) {
                obj['audience_id'] = ApiClient.convertToType(data['audience_id'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [Role]);
            }
            if (data.hasOwnProperty('recipient_business_ids')) {
                obj['recipient_business_ids'] = ApiClient.convertToType(data['recipient_business_ids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BusinessSharedAudienceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BusinessSharedAudienceResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['audience_id'] && !(typeof data['audience_id'] === 'string' || data['audience_id'] instanceof String)) {
            throw new Error("Expected the field `audience_id` to be a primitive type in the JSON string but got " + data['audience_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['recipient_business_ids'])) {
            throw new Error("Expected the field `recipient_business_ids` to be an array in the JSON data but got " + data['recipient_business_ids']);
        }

        return true;
    }


}



/**
 * Audience ID that was shared
 * @member {String} audience_id
 */
BusinessSharedAudienceResponse.prototype['audience_id'] = undefined;

/**
 * @member {Array.<module:model/Role>} permissions
 */
BusinessSharedAudienceResponse.prototype['permissions'] = undefined;

/**
 * Business IDs that received the audience
 * @member {Array.<String>} recipient_business_ids
 */
BusinessSharedAudienceResponse.prototype['recipient_business_ids'] = undefined;


// Implement SharedAudienceResponseCommon interface:
/**
 * Audience ID that was shared
 * @member {String} audience_id
 */
SharedAudienceResponseCommon.prototype['audience_id'] = undefined;
/**
 * @member {Array.<module:model/Role>} permissions
 */
SharedAudienceResponseCommon.prototype['permissions'] = undefined;




export default BusinessSharedAudienceResponse;

