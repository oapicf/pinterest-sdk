/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConversionApiResponseEventsInner model module.
 * @module model/ConversionApiResponseEventsInner
 * @version 1.1.1-pre.0
 */
class ConversionApiResponseEventsInner {
    /**
     * Constructs a new <code>ConversionApiResponseEventsInner</code>.
     * @alias module:model/ConversionApiResponseEventsInner
     * @param status {module:model/ConversionApiResponseEventsInner.StatusEnum} Whether the event was processed successfully.
     */
    constructor(status) { 
        
        ConversionApiResponseEventsInner.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ConversionApiResponseEventsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversionApiResponseEventsInner} obj Optional instance to populate.
     * @return {module:model/ConversionApiResponseEventsInner} The populated <code>ConversionApiResponseEventsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversionApiResponseEventsInner();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('error_message')) {
                obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
            }
            if (data.hasOwnProperty('warning_message')) {
                obj['warning_message'] = ApiClient.convertToType(data['warning_message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversionApiResponseEventsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversionApiResponseEventsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConversionApiResponseEventsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['error_message'] && !(typeof data['error_message'] === 'string' || data['error_message'] instanceof String)) {
            throw new Error("Expected the field `error_message` to be a primitive type in the JSON string but got " + data['error_message']);
        }
        // ensure the json data is a string
        if (data['warning_message'] && !(typeof data['warning_message'] === 'string' || data['warning_message'] instanceof String)) {
            throw new Error("Expected the field `warning_message` to be a primitive type in the JSON string but got " + data['warning_message']);
        }

        return true;
    }


}

ConversionApiResponseEventsInner.RequiredProperties = ["status"];

/**
 * Whether the event was processed successfully.
 * @member {module:model/ConversionApiResponseEventsInner.StatusEnum} status
 */
ConversionApiResponseEventsInner.prototype['status'] = undefined;

/**
 * Error message containing more information about why the event failed to be processed.
 * @member {String} error_message
 */
ConversionApiResponseEventsInner.prototype['error_message'] = undefined;

/**
 * Warning messages about any fields in the event which are not standard. These are not critical to event processing.
 * @member {String} warning_message
 */
ConversionApiResponseEventsInner.prototype['warning_message'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ConversionApiResponseEventsInner['StatusEnum'] = {

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "processed"
     * @const
     */
    "processed": "processed"
};



export default ConversionApiResponseEventsInner;

