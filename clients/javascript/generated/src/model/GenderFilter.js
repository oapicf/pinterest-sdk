/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsProductGroupMultipleGenderCriteria from './CatalogsProductGroupMultipleGenderCriteria';

/**
 * The GenderFilter model module.
 * @module model/GenderFilter
 * @version 1.1.1-pre.0
 */
class GenderFilter {
    /**
     * Constructs a new <code>GenderFilter</code>.
     * @alias module:model/GenderFilter
     * @param GENDER {module:model/CatalogsProductGroupMultipleGenderCriteria} 
     */
    constructor(GENDER) { 
        
        GenderFilter.initialize(this, GENDER);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, GENDER) { 
        obj['GENDER'] = GENDER;
    }

    /**
     * Constructs a <code>GenderFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenderFilter} obj Optional instance to populate.
     * @return {module:model/GenderFilter} The populated <code>GenderFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenderFilter();

            if (data.hasOwnProperty('GENDER')) {
                obj['GENDER'] = CatalogsProductGroupMultipleGenderCriteria.constructFromObject(data['GENDER']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenderFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenderFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GenderFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

GenderFilter.RequiredProperties = ["GENDER"];

/**
 * @member {module:model/CatalogsProductGroupMultipleGenderCriteria} GENDER
 */
GenderFilter.prototype['GENDER'] = undefined;






export default GenderFilter;

