/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MMMReportingColumn from './MMMReportingColumn';
import MMMReportingTargetingType from './MMMReportingTargetingType';
import TargetingAdvertiserCountry from './TargetingAdvertiserCountry';

/**
 * The CreateMMMReportRequest model module.
 * @module model/CreateMMMReportRequest
 * @version 1.1.1-pre.0
 */
class CreateMMMReportRequest {
    /**
     * Constructs a new <code>CreateMMMReportRequest</code>.
     * @alias module:model/CreateMMMReportRequest
     */
    constructor() { 
        
        CreateMMMReportRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['report_name'] = reportName;
        obj['start_date'] = startDate;
        obj['end_date'] = endDate;
        obj['granularity'] = granularity;
        obj['level'] = level;
        obj['targeting_types'] = targetingTypes;
        obj['columns'] = columns;
    }

    /**
     * Constructs a <code>CreateMMMReportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMMMReportRequest} obj Optional instance to populate.
     * @return {module:model/CreateMMMReportRequest} The populated <code>CreateMMMReportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMMMReportRequest();

            if (data.hasOwnProperty('report_name')) {
                obj['report_name'] = ApiClient.convertToType(data['report_name'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('granularity')) {
                obj['granularity'] = ApiClient.convertToType(data['granularity'], 'String');
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'String');
            }
            if (data.hasOwnProperty('targeting_types')) {
                obj['targeting_types'] = ApiClient.convertToType(data['targeting_types'], [MMMReportingTargetingType]);
            }
            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], [MMMReportingColumn]);
            }
            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], [TargetingAdvertiserCountry]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMMMReportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMMMReportRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMMMReportRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['report_name'] && !(typeof data['report_name'] === 'string' || data['report_name'] instanceof String)) {
            throw new Error("Expected the field `report_name` to be a primitive type in the JSON string but got " + data['report_name']);
        }
        // ensure the json data is a string
        if (data['start_date'] && !(typeof data['start_date'] === 'string' || data['start_date'] instanceof String)) {
            throw new Error("Expected the field `start_date` to be a primitive type in the JSON string but got " + data['start_date']);
        }
        // ensure the json data is a string
        if (data['end_date'] && !(typeof data['end_date'] === 'string' || data['end_date'] instanceof String)) {
            throw new Error("Expected the field `end_date` to be a primitive type in the JSON string but got " + data['end_date']);
        }
        // ensure the json data is a string
        if (data['granularity'] && !(typeof data['granularity'] === 'string' || data['granularity'] instanceof String)) {
            throw new Error("Expected the field `granularity` to be a primitive type in the JSON string but got " + data['granularity']);
        }
        // ensure the json data is a string
        if (data['level'] && !(typeof data['level'] === 'string' || data['level'] instanceof String)) {
            throw new Error("Expected the field `level` to be a primitive type in the JSON string but got " + data['level']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targeting_types'])) {
            throw new Error("Expected the field `targeting_types` to be an array in the JSON data but got " + data['targeting_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['columns'])) {
            throw new Error("Expected the field `columns` to be an array in the JSON data but got " + data['columns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['countries'])) {
            throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
        }

        return true;
    }


}

CreateMMMReportRequest.RequiredProperties = ["report_name", "start_date", "end_date", "granularity", "level", "targeting_types", "columns"];

/**
 * Name of the Marketing Mix Modeling (MMM) report
 * @member {String} report_name
 */
CreateMMMReportRequest.prototype['report_name'] = undefined;

/**
 * Metric report start date (UTC). Format: YYYY-MM-DD
 * @member {String} start_date
 */
CreateMMMReportRequest.prototype['start_date'] = undefined;

/**
 * Metric report end date (UTC). Format: YYYY-MM-DD
 * @member {String} end_date
 */
CreateMMMReportRequest.prototype['end_date'] = undefined;

/**
 * DAY - metrics are broken down daily.<br> WEEK - metrics are broken down weekly.
 * @member {module:model/CreateMMMReportRequest.GranularityEnum} granularity
 */
CreateMMMReportRequest.prototype['granularity'] = undefined;

/**
 * Level of the report
 * @member {module:model/CreateMMMReportRequest.LevelEnum} level
 */
CreateMMMReportRequest.prototype['level'] = undefined;

/**
 * List of targeting types
 * @member {Array.<module:model/MMMReportingTargetingType>} targeting_types
 */
CreateMMMReportRequest.prototype['targeting_types'] = undefined;

/**
 * Metric and entity columns
 * @member {Array.<module:model/MMMReportingColumn>} columns
 */
CreateMMMReportRequest.prototype['columns'] = undefined;

/**
 * A List of countries for filtering
 * @member {Array.<module:model/TargetingAdvertiserCountry>} countries
 */
CreateMMMReportRequest.prototype['countries'] = undefined;





/**
 * Allowed values for the <code>granularity</code> property.
 * @enum {String}
 * @readonly
 */
CreateMMMReportRequest['GranularityEnum'] = {

    /**
     * value: "DAY"
     * @const
     */
    "DAY": "DAY",

    /**
     * value: "WEEK"
     * @const
     */
    "WEEK": "WEEK"
};


/**
 * Allowed values for the <code>level</code> property.
 * @enum {String}
 * @readonly
 */
CreateMMMReportRequest['LevelEnum'] = {

    /**
     * value: "CAMPAIGN_TARGETING"
     * @const
     */
    "CAMPAIGN_TARGETING": "CAMPAIGN_TARGETING",

    /**
     * value: "AD_GROUP_TARGETING"
     * @const
     */
    "AD_GROUP_TARGETING": "AD_GROUP_TARGETING"
};



export default CreateMMMReportRequest;

