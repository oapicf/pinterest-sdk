/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsItemValidationDetails from './CatalogsItemValidationDetails';

/**
 * The CatalogsItemValidationErrors model module.
 * @module model/CatalogsItemValidationErrors
 * @version 1.1.1-pre.0
 */
class CatalogsItemValidationErrors {
    /**
     * Constructs a new <code>CatalogsItemValidationErrors</code>.
     * @alias module:model/CatalogsItemValidationErrors
     */
    constructor() { 
        
        CatalogsItemValidationErrors.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogsItemValidationErrors</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsItemValidationErrors} obj Optional instance to populate.
     * @return {module:model/CatalogsItemValidationErrors} The populated <code>CatalogsItemValidationErrors</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsItemValidationErrors();

            if (data.hasOwnProperty('ADULT_INVALID')) {
                obj['ADULT_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['ADULT_INVALID']);
            }
            if (data.hasOwnProperty('ADWORDS_FORMAT_INVALID')) {
                obj['ADWORDS_FORMAT_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['ADWORDS_FORMAT_INVALID']);
            }
            if (data.hasOwnProperty('AVAILABILITY_INVALID')) {
                obj['AVAILABILITY_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['AVAILABILITY_INVALID']);
            }
            if (data.hasOwnProperty('BLOCKLISTED_IMAGE_SIGNATURE')) {
                obj['BLOCKLISTED_IMAGE_SIGNATURE'] = CatalogsItemValidationDetails.constructFromObject(data['BLOCKLISTED_IMAGE_SIGNATURE']);
            }
            if (data.hasOwnProperty('DESCRIPTION_MISSING')) {
                obj['DESCRIPTION_MISSING'] = CatalogsItemValidationDetails.constructFromObject(data['DESCRIPTION_MISSING']);
            }
            if (data.hasOwnProperty('DUPLICATE_PRODUCTS')) {
                obj['DUPLICATE_PRODUCTS'] = CatalogsItemValidationDetails.constructFromObject(data['DUPLICATE_PRODUCTS']);
            }
            if (data.hasOwnProperty('IMAGE_LINK_INVALID')) {
                obj['IMAGE_LINK_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['IMAGE_LINK_INVALID']);
            }
            if (data.hasOwnProperty('IMAGE_LINK_LENGTH_TOO_LONG')) {
                obj['IMAGE_LINK_LENGTH_TOO_LONG'] = CatalogsItemValidationDetails.constructFromObject(data['IMAGE_LINK_LENGTH_TOO_LONG']);
            }
            if (data.hasOwnProperty('IMAGE_LINK_MISSING')) {
                obj['IMAGE_LINK_MISSING'] = CatalogsItemValidationDetails.constructFromObject(data['IMAGE_LINK_MISSING']);
            }
            if (data.hasOwnProperty('INVALID_DOMAIN')) {
                obj['INVALID_DOMAIN'] = CatalogsItemValidationDetails.constructFromObject(data['INVALID_DOMAIN']);
            }
            if (data.hasOwnProperty('ITEMID_MISSING')) {
                obj['ITEMID_MISSING'] = CatalogsItemValidationDetails.constructFromObject(data['ITEMID_MISSING']);
            }
            if (data.hasOwnProperty('ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE')) {
                obj['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE'] = CatalogsItemValidationDetails.constructFromObject(data['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE']);
            }
            if (data.hasOwnProperty('LINK_FORMAT_INVALID')) {
                obj['LINK_FORMAT_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['LINK_FORMAT_INVALID']);
            }
            if (data.hasOwnProperty('LINK_LENGTH_TOO_LONG')) {
                obj['LINK_LENGTH_TOO_LONG'] = CatalogsItemValidationDetails.constructFromObject(data['LINK_LENGTH_TOO_LONG']);
            }
            if (data.hasOwnProperty('LIST_PRICE_INVALID')) {
                obj['LIST_PRICE_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['LIST_PRICE_INVALID']);
            }
            if (data.hasOwnProperty('MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED')) {
                obj['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED'] = CatalogsItemValidationDetails.constructFromObject(data['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED']);
            }
            if (data.hasOwnProperty('PARSE_LINE_ERROR')) {
                obj['PARSE_LINE_ERROR'] = CatalogsItemValidationDetails.constructFromObject(data['PARSE_LINE_ERROR']);
            }
            if (data.hasOwnProperty('PINJOIN_CONTENT_UNSAFE')) {
                obj['PINJOIN_CONTENT_UNSAFE'] = CatalogsItemValidationDetails.constructFromObject(data['PINJOIN_CONTENT_UNSAFE']);
            }
            if (data.hasOwnProperty('PRICE_CANNOT_BE_DETERMINED')) {
                obj['PRICE_CANNOT_BE_DETERMINED'] = CatalogsItemValidationDetails.constructFromObject(data['PRICE_CANNOT_BE_DETERMINED']);
            }
            if (data.hasOwnProperty('PRICE_MISSING')) {
                obj['PRICE_MISSING'] = CatalogsItemValidationDetails.constructFromObject(data['PRICE_MISSING']);
            }
            if (data.hasOwnProperty('PRODUCT_LINK_MISSING')) {
                obj['PRODUCT_LINK_MISSING'] = CatalogsItemValidationDetails.constructFromObject(data['PRODUCT_LINK_MISSING']);
            }
            if (data.hasOwnProperty('PRODUCT_PRICE_INVALID')) {
                obj['PRODUCT_PRICE_INVALID'] = CatalogsItemValidationDetails.constructFromObject(data['PRODUCT_PRICE_INVALID']);
            }
            if (data.hasOwnProperty('TITLE_MISSING')) {
                obj['TITLE_MISSING'] = CatalogsItemValidationDetails.constructFromObject(data['TITLE_MISSING']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogsItemValidationErrors</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogsItemValidationErrors</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ADULT_INVALID`
        if (data['ADULT_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['ADULT_INVALID']);
        }
        // validate the optional field `ADWORDS_FORMAT_INVALID`
        if (data['ADWORDS_FORMAT_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['ADWORDS_FORMAT_INVALID']);
        }
        // validate the optional field `AVAILABILITY_INVALID`
        if (data['AVAILABILITY_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['AVAILABILITY_INVALID']);
        }
        // validate the optional field `BLOCKLISTED_IMAGE_SIGNATURE`
        if (data['BLOCKLISTED_IMAGE_SIGNATURE']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['BLOCKLISTED_IMAGE_SIGNATURE']);
        }
        // validate the optional field `DESCRIPTION_MISSING`
        if (data['DESCRIPTION_MISSING']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['DESCRIPTION_MISSING']);
        }
        // validate the optional field `DUPLICATE_PRODUCTS`
        if (data['DUPLICATE_PRODUCTS']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['DUPLICATE_PRODUCTS']);
        }
        // validate the optional field `IMAGE_LINK_INVALID`
        if (data['IMAGE_LINK_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['IMAGE_LINK_INVALID']);
        }
        // validate the optional field `IMAGE_LINK_LENGTH_TOO_LONG`
        if (data['IMAGE_LINK_LENGTH_TOO_LONG']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['IMAGE_LINK_LENGTH_TOO_LONG']);
        }
        // validate the optional field `IMAGE_LINK_MISSING`
        if (data['IMAGE_LINK_MISSING']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['IMAGE_LINK_MISSING']);
        }
        // validate the optional field `INVALID_DOMAIN`
        if (data['INVALID_DOMAIN']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['INVALID_DOMAIN']);
        }
        // validate the optional field `ITEMID_MISSING`
        if (data['ITEMID_MISSING']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['ITEMID_MISSING']);
        }
        // validate the optional field `ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE`
        if (data['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE']);
        }
        // validate the optional field `LINK_FORMAT_INVALID`
        if (data['LINK_FORMAT_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['LINK_FORMAT_INVALID']);
        }
        // validate the optional field `LINK_LENGTH_TOO_LONG`
        if (data['LINK_LENGTH_TOO_LONG']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['LINK_LENGTH_TOO_LONG']);
        }
        // validate the optional field `LIST_PRICE_INVALID`
        if (data['LIST_PRICE_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['LIST_PRICE_INVALID']);
        }
        // validate the optional field `MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED`
        if (data['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED']);
        }
        // validate the optional field `PARSE_LINE_ERROR`
        if (data['PARSE_LINE_ERROR']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['PARSE_LINE_ERROR']);
        }
        // validate the optional field `PINJOIN_CONTENT_UNSAFE`
        if (data['PINJOIN_CONTENT_UNSAFE']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['PINJOIN_CONTENT_UNSAFE']);
        }
        // validate the optional field `PRICE_CANNOT_BE_DETERMINED`
        if (data['PRICE_CANNOT_BE_DETERMINED']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['PRICE_CANNOT_BE_DETERMINED']);
        }
        // validate the optional field `PRICE_MISSING`
        if (data['PRICE_MISSING']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['PRICE_MISSING']);
        }
        // validate the optional field `PRODUCT_LINK_MISSING`
        if (data['PRODUCT_LINK_MISSING']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['PRODUCT_LINK_MISSING']);
        }
        // validate the optional field `PRODUCT_PRICE_INVALID`
        if (data['PRODUCT_PRICE_INVALID']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['PRODUCT_PRICE_INVALID']);
        }
        // validate the optional field `TITLE_MISSING`
        if (data['TITLE_MISSING']) { // data not null
          CatalogsItemValidationDetails.validateJSON(data['TITLE_MISSING']);
        }

        return true;
    }


}



/**
 * @member {module:model/CatalogsItemValidationDetails} ADULT_INVALID
 */
CatalogsItemValidationErrors.prototype['ADULT_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} ADWORDS_FORMAT_INVALID
 */
CatalogsItemValidationErrors.prototype['ADWORDS_FORMAT_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} AVAILABILITY_INVALID
 */
CatalogsItemValidationErrors.prototype['AVAILABILITY_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} BLOCKLISTED_IMAGE_SIGNATURE
 */
CatalogsItemValidationErrors.prototype['BLOCKLISTED_IMAGE_SIGNATURE'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} DESCRIPTION_MISSING
 */
CatalogsItemValidationErrors.prototype['DESCRIPTION_MISSING'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} DUPLICATE_PRODUCTS
 */
CatalogsItemValidationErrors.prototype['DUPLICATE_PRODUCTS'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} IMAGE_LINK_INVALID
 */
CatalogsItemValidationErrors.prototype['IMAGE_LINK_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} IMAGE_LINK_LENGTH_TOO_LONG
 */
CatalogsItemValidationErrors.prototype['IMAGE_LINK_LENGTH_TOO_LONG'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} IMAGE_LINK_MISSING
 */
CatalogsItemValidationErrors.prototype['IMAGE_LINK_MISSING'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} INVALID_DOMAIN
 */
CatalogsItemValidationErrors.prototype['INVALID_DOMAIN'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} ITEMID_MISSING
 */
CatalogsItemValidationErrors.prototype['ITEMID_MISSING'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE
 */
CatalogsItemValidationErrors.prototype['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} LINK_FORMAT_INVALID
 */
CatalogsItemValidationErrors.prototype['LINK_FORMAT_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} LINK_LENGTH_TOO_LONG
 */
CatalogsItemValidationErrors.prototype['LINK_LENGTH_TOO_LONG'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} LIST_PRICE_INVALID
 */
CatalogsItemValidationErrors.prototype['LIST_PRICE_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED
 */
CatalogsItemValidationErrors.prototype['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} PARSE_LINE_ERROR
 */
CatalogsItemValidationErrors.prototype['PARSE_LINE_ERROR'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} PINJOIN_CONTENT_UNSAFE
 */
CatalogsItemValidationErrors.prototype['PINJOIN_CONTENT_UNSAFE'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} PRICE_CANNOT_BE_DETERMINED
 */
CatalogsItemValidationErrors.prototype['PRICE_CANNOT_BE_DETERMINED'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} PRICE_MISSING
 */
CatalogsItemValidationErrors.prototype['PRICE_MISSING'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} PRODUCT_LINK_MISSING
 */
CatalogsItemValidationErrors.prototype['PRODUCT_LINK_MISSING'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} PRODUCT_PRICE_INVALID
 */
CatalogsItemValidationErrors.prototype['PRODUCT_PRICE_INVALID'] = undefined;

/**
 * @member {module:model/CatalogsItemValidationDetails} TITLE_MISSING
 */
CatalogsItemValidationErrors.prototype['TITLE_MISSING'] = undefined;






export default CatalogsItemValidationErrors;

