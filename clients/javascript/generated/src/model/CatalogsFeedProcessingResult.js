/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsDbItem from './CatalogsDbItem';
import CatalogsFeedIngestionDetails from './CatalogsFeedIngestionDetails';
import CatalogsFeedProcessingStatus from './CatalogsFeedProcessingStatus';
import CatalogsFeedProductCounts from './CatalogsFeedProductCounts';
import CatalogsFeedValidationDetails from './CatalogsFeedValidationDetails';

/**
 * The CatalogsFeedProcessingResult model module.
 * @module model/CatalogsFeedProcessingResult
 * @version 1.1.1-pre.0
 */
class CatalogsFeedProcessingResult {
    /**
     * Constructs a new <code>CatalogsFeedProcessingResult</code>.
     * @alias module:model/CatalogsFeedProcessingResult
     * @implements module:model/CatalogsDbItem
     * @param createdAt {Date} 
     * @param id {String} 
     * @param updatedAt {Date} 
     * @param ingestionDetails {module:model/CatalogsFeedIngestionDetails} 
     * @param status {module:model/CatalogsFeedProcessingStatus} 
     * @param productCounts {module:model/CatalogsFeedProductCounts} 
     * @param validationDetails {module:model/CatalogsFeedValidationDetails} 
     */
    constructor(createdAt, id, updatedAt, ingestionDetails, status, productCounts, validationDetails) { 
        CatalogsDbItem.initialize(this, createdAt, id, updatedAt);
        CatalogsFeedProcessingResult.initialize(this, createdAt, id, updatedAt, ingestionDetails, status, productCounts, validationDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, id, updatedAt, ingestionDetails, status, productCounts, validationDetails) { 
        obj['created_at'] = createdAt;
        obj['id'] = id;
        obj['updated_at'] = updatedAt;
        obj['ingestion_details'] = ingestionDetails;
        obj['status'] = status;
        obj['product_counts'] = productCounts;
        obj['validation_details'] = validationDetails;
    }

    /**
     * Constructs a <code>CatalogsFeedProcessingResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsFeedProcessingResult} obj Optional instance to populate.
     * @return {module:model/CatalogsFeedProcessingResult} The populated <code>CatalogsFeedProcessingResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsFeedProcessingResult();
            CatalogsDbItem.constructFromObject(data, obj);

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('ingestion_details')) {
                obj['ingestion_details'] = CatalogsFeedIngestionDetails.constructFromObject(data['ingestion_details']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = CatalogsFeedProcessingStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('product_counts')) {
                obj['product_counts'] = CatalogsFeedProductCounts.constructFromObject(data['product_counts']);
            }
            if (data.hasOwnProperty('validation_details')) {
                obj['validation_details'] = CatalogsFeedValidationDetails.constructFromObject(data['validation_details']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogsFeedProcessingResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogsFeedProcessingResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogsFeedProcessingResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `ingestion_details`
        if (data['ingestion_details']) { // data not null
          CatalogsFeedIngestionDetails.validateJSON(data['ingestion_details']);
        }
        // validate the optional field `product_counts`
        if (data['product_counts']) { // data not null
          CatalogsFeedProductCounts.validateJSON(data['product_counts']);
        }
        // validate the optional field `validation_details`
        if (data['validation_details']) { // data not null
          CatalogsFeedValidationDetails.validateJSON(data['validation_details']);
        }

        return true;
    }


}

CatalogsFeedProcessingResult.RequiredProperties = ["created_at", "id", "updated_at", "ingestion_details", "status", "product_counts", "validation_details"];

/**
 * @member {Date} created_at
 */
CatalogsFeedProcessingResult.prototype['created_at'] = undefined;

/**
 * @member {String} id
 */
CatalogsFeedProcessingResult.prototype['id'] = undefined;

/**
 * @member {Date} updated_at
 */
CatalogsFeedProcessingResult.prototype['updated_at'] = undefined;

/**
 * @member {module:model/CatalogsFeedIngestionDetails} ingestion_details
 */
CatalogsFeedProcessingResult.prototype['ingestion_details'] = undefined;

/**
 * @member {module:model/CatalogsFeedProcessingStatus} status
 */
CatalogsFeedProcessingResult.prototype['status'] = undefined;

/**
 * @member {module:model/CatalogsFeedProductCounts} product_counts
 */
CatalogsFeedProcessingResult.prototype['product_counts'] = undefined;

/**
 * @member {module:model/CatalogsFeedValidationDetails} validation_details
 */
CatalogsFeedProcessingResult.prototype['validation_details'] = undefined;


// Implement CatalogsDbItem interface:
/**
 * @member {Date} created_at
 */
CatalogsDbItem.prototype['created_at'] = undefined;
/**
 * @member {String} id
 */
CatalogsDbItem.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
CatalogsDbItem.prototype['updated_at'] = undefined;




export default CatalogsFeedProcessingResult;

