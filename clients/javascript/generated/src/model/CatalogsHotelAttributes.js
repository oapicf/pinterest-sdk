/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsHotelAddress from './CatalogsHotelAddress';
import CatalogsHotelAttributesAllOfMainImage from './CatalogsHotelAttributesAllOfMainImage';
import CatalogsHotelGuestRatings from './CatalogsHotelGuestRatings';
import CatalogsUpdatableHotelAttributes from './CatalogsUpdatableHotelAttributes';

/**
 * The CatalogsHotelAttributes model module.
 * @module model/CatalogsHotelAttributes
 * @version 1.1.1-pre.0
 */
class CatalogsHotelAttributes {
    /**
     * Constructs a new <code>CatalogsHotelAttributes</code>.
     * @alias module:model/CatalogsHotelAttributes
     * @implements module:model/CatalogsUpdatableHotelAttributes
     */
    constructor() { 
        CatalogsUpdatableHotelAttributes.initialize(this);
        CatalogsHotelAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogsHotelAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsHotelAttributes} obj Optional instance to populate.
     * @return {module:model/CatalogsHotelAttributes} The populated <code>CatalogsHotelAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsHotelAttributes();
            CatalogsUpdatableHotelAttributes.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('neighborhood')) {
                obj['neighborhood'] = ApiClient.convertToType(data['neighborhood'], ['String']);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = CatalogsHotelAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('custom_label_0')) {
                obj['custom_label_0'] = ApiClient.convertToType(data['custom_label_0'], 'String');
            }
            if (data.hasOwnProperty('custom_label_1')) {
                obj['custom_label_1'] = ApiClient.convertToType(data['custom_label_1'], 'String');
            }
            if (data.hasOwnProperty('custom_label_2')) {
                obj['custom_label_2'] = ApiClient.convertToType(data['custom_label_2'], 'String');
            }
            if (data.hasOwnProperty('custom_label_3')) {
                obj['custom_label_3'] = ApiClient.convertToType(data['custom_label_3'], 'String');
            }
            if (data.hasOwnProperty('custom_label_4')) {
                obj['custom_label_4'] = ApiClient.convertToType(data['custom_label_4'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('base_price')) {
                obj['base_price'] = ApiClient.convertToType(data['base_price'], 'String');
            }
            if (data.hasOwnProperty('sale_price')) {
                obj['sale_price'] = ApiClient.convertToType(data['sale_price'], 'String');
            }
            if (data.hasOwnProperty('guest_ratings')) {
                obj['guest_ratings'] = CatalogsHotelGuestRatings.constructFromObject(data['guest_ratings']);
            }
            if (data.hasOwnProperty('main_image')) {
                obj['main_image'] = CatalogsHotelAttributesAllOfMainImage.constructFromObject(data['main_image']);
            }
            if (data.hasOwnProperty('additional_image_link')) {
                obj['additional_image_link'] = ApiClient.convertToType(data['additional_image_link'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogsHotelAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogsHotelAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['brand'] && !(typeof data['brand'] === 'string' || data['brand'] instanceof String)) {
            throw new Error("Expected the field `brand` to be a primitive type in the JSON string but got " + data['brand']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['neighborhood'])) {
            throw new Error("Expected the field `neighborhood` to be an array in the JSON data but got " + data['neighborhood']);
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          CatalogsHotelAddress.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['custom_label_0'] && !(typeof data['custom_label_0'] === 'string' || data['custom_label_0'] instanceof String)) {
            throw new Error("Expected the field `custom_label_0` to be a primitive type in the JSON string but got " + data['custom_label_0']);
        }
        // ensure the json data is a string
        if (data['custom_label_1'] && !(typeof data['custom_label_1'] === 'string' || data['custom_label_1'] instanceof String)) {
            throw new Error("Expected the field `custom_label_1` to be a primitive type in the JSON string but got " + data['custom_label_1']);
        }
        // ensure the json data is a string
        if (data['custom_label_2'] && !(typeof data['custom_label_2'] === 'string' || data['custom_label_2'] instanceof String)) {
            throw new Error("Expected the field `custom_label_2` to be a primitive type in the JSON string but got " + data['custom_label_2']);
        }
        // ensure the json data is a string
        if (data['custom_label_3'] && !(typeof data['custom_label_3'] === 'string' || data['custom_label_3'] instanceof String)) {
            throw new Error("Expected the field `custom_label_3` to be a primitive type in the JSON string but got " + data['custom_label_3']);
        }
        // ensure the json data is a string
        if (data['custom_label_4'] && !(typeof data['custom_label_4'] === 'string' || data['custom_label_4'] instanceof String)) {
            throw new Error("Expected the field `custom_label_4` to be a primitive type in the JSON string but got " + data['custom_label_4']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['base_price'] && !(typeof data['base_price'] === 'string' || data['base_price'] instanceof String)) {
            throw new Error("Expected the field `base_price` to be a primitive type in the JSON string but got " + data['base_price']);
        }
        // ensure the json data is a string
        if (data['sale_price'] && !(typeof data['sale_price'] === 'string' || data['sale_price'] instanceof String)) {
            throw new Error("Expected the field `sale_price` to be a primitive type in the JSON string but got " + data['sale_price']);
        }
        // validate the optional field `guest_ratings`
        if (data['guest_ratings']) { // data not null
          CatalogsHotelGuestRatings.validateJSON(data['guest_ratings']);
        }
        // validate the optional field `main_image`
        if (data['main_image']) { // data not null
          CatalogsHotelAttributesAllOfMainImage.validateJSON(data['main_image']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['additional_image_link'])) {
            throw new Error("Expected the field `additional_image_link` to be an array in the JSON data but got " + data['additional_image_link']);
        }

        return true;
    }


}



/**
 * The hotel's name.
 * @member {String} name
 */
CatalogsHotelAttributes.prototype['name'] = undefined;

/**
 * Link to the product page
 * @member {String} link
 */
CatalogsHotelAttributes.prototype['link'] = undefined;

/**
 * Brief description of the hotel.
 * @member {String} description
 */
CatalogsHotelAttributes.prototype['description'] = undefined;

/**
 * The brand to which this hotel belongs to.
 * @member {String} brand
 */
CatalogsHotelAttributes.prototype['brand'] = undefined;

/**
 * Latitude of the hotel.
 * @member {Number} latitude
 */
CatalogsHotelAttributes.prototype['latitude'] = undefined;

/**
 * Longitude of the hotel.
 * @member {Number} longitude
 */
CatalogsHotelAttributes.prototype['longitude'] = undefined;

/**
 * A list of neighborhoods where the hotel is located
 * @member {Array.<String>} neighborhood
 */
CatalogsHotelAttributes.prototype['neighborhood'] = undefined;

/**
 * @member {module:model/CatalogsHotelAddress} address
 */
CatalogsHotelAttributes.prototype['address'] = undefined;

/**
 * Custom grouping of hotels
 * @member {String} custom_label_0
 */
CatalogsHotelAttributes.prototype['custom_label_0'] = undefined;

/**
 * Custom grouping of hotels
 * @member {String} custom_label_1
 */
CatalogsHotelAttributes.prototype['custom_label_1'] = undefined;

/**
 * Custom grouping of hotels
 * @member {String} custom_label_2
 */
CatalogsHotelAttributes.prototype['custom_label_2'] = undefined;

/**
 * Custom grouping of hotels
 * @member {String} custom_label_3
 */
CatalogsHotelAttributes.prototype['custom_label_3'] = undefined;

/**
 * Custom grouping of hotels
 * @member {String} custom_label_4
 */
CatalogsHotelAttributes.prototype['custom_label_4'] = undefined;

/**
 * The type of property. The category can be any type of internal description desired.
 * @member {String} category
 */
CatalogsHotelAttributes.prototype['category'] = undefined;

/**
 * Base price of the hotel room per night followed by the ISO currency code
 * @member {String} base_price
 */
CatalogsHotelAttributes.prototype['base_price'] = undefined;

/**
 * Sale price of a hotel room per night. Used to advertise discounts off the regular price of the hotel.
 * @member {String} sale_price
 */
CatalogsHotelAttributes.prototype['sale_price'] = undefined;

/**
 * @member {module:model/CatalogsHotelGuestRatings} guest_ratings
 */
CatalogsHotelAttributes.prototype['guest_ratings'] = undefined;

/**
 * @member {module:model/CatalogsHotelAttributesAllOfMainImage} main_image
 */
CatalogsHotelAttributes.prototype['main_image'] = undefined;

/**
 * <p><= 2000 characters</p> <p>The links to additional images for your hotel. Up to ten additional images can be used to show a hotel from different angles. Must begin with http:// or https://.</p>
 * @member {Array.<String>} additional_image_link
 */
CatalogsHotelAttributes.prototype['additional_image_link'] = undefined;


// Implement CatalogsUpdatableHotelAttributes interface:
/**
 * The hotel's name.
 * @member {String} name
 */
CatalogsUpdatableHotelAttributes.prototype['name'] = undefined;
/**
 * Link to the product page
 * @member {String} link
 */
CatalogsUpdatableHotelAttributes.prototype['link'] = undefined;
/**
 * Brief description of the hotel.
 * @member {String} description
 */
CatalogsUpdatableHotelAttributes.prototype['description'] = undefined;
/**
 * The brand to which this hotel belongs to.
 * @member {String} brand
 */
CatalogsUpdatableHotelAttributes.prototype['brand'] = undefined;
/**
 * Latitude of the hotel.
 * @member {Number} latitude
 */
CatalogsUpdatableHotelAttributes.prototype['latitude'] = undefined;
/**
 * Longitude of the hotel.
 * @member {Number} longitude
 */
CatalogsUpdatableHotelAttributes.prototype['longitude'] = undefined;
/**
 * A list of neighborhoods where the hotel is located
 * @member {Array.<String>} neighborhood
 */
CatalogsUpdatableHotelAttributes.prototype['neighborhood'] = undefined;
/**
 * @member {module:model/CatalogsHotelAddress} address
 */
CatalogsUpdatableHotelAttributes.prototype['address'] = undefined;
/**
 * Custom grouping of hotels
 * @member {String} custom_label_0
 */
CatalogsUpdatableHotelAttributes.prototype['custom_label_0'] = undefined;
/**
 * Custom grouping of hotels
 * @member {String} custom_label_1
 */
CatalogsUpdatableHotelAttributes.prototype['custom_label_1'] = undefined;
/**
 * Custom grouping of hotels
 * @member {String} custom_label_2
 */
CatalogsUpdatableHotelAttributes.prototype['custom_label_2'] = undefined;
/**
 * Custom grouping of hotels
 * @member {String} custom_label_3
 */
CatalogsUpdatableHotelAttributes.prototype['custom_label_3'] = undefined;
/**
 * Custom grouping of hotels
 * @member {String} custom_label_4
 */
CatalogsUpdatableHotelAttributes.prototype['custom_label_4'] = undefined;
/**
 * The type of property. The category can be any type of internal description desired.
 * @member {String} category
 */
CatalogsUpdatableHotelAttributes.prototype['category'] = undefined;
/**
 * Base price of the hotel room per night followed by the ISO currency code
 * @member {String} base_price
 */
CatalogsUpdatableHotelAttributes.prototype['base_price'] = undefined;
/**
 * Sale price of a hotel room per night. Used to advertise discounts off the regular price of the hotel.
 * @member {String} sale_price
 */
CatalogsUpdatableHotelAttributes.prototype['sale_price'] = undefined;
/**
 * @member {module:model/CatalogsHotelGuestRatings} guest_ratings
 */
CatalogsUpdatableHotelAttributes.prototype['guest_ratings'] = undefined;




export default CatalogsHotelAttributes;

