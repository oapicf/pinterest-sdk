/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsCreativeAssetsItemsFilter from './CatalogsCreativeAssetsItemsFilter';
import CatalogsHotelItemsFilter from './CatalogsHotelItemsFilter';
import CatalogsRetailItemsFilter from './CatalogsRetailItemsFilter';
import CatalogsType from './CatalogsType';

/**
 * The CatalogsItemsFilters model module.
 * @module model/CatalogsItemsFilters
 * @version 1.1.1-pre.0
 */
class CatalogsItemsFilters {
    /**
     * Constructs a new <code>CatalogsItemsFilters</code>.
     * @alias module:model/CatalogsItemsFilters
     * @param {(module:model/CatalogsCreativeAssetsItemsFilter|module:model/CatalogsHotelItemsFilter|module:model/CatalogsRetailItemsFilter)} instance The actual instance to initialize CatalogsItemsFilters.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailItemsFilter") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailItemsFilter.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailItemsFilter from JS object
                this.actualInstance = CatalogsRetailItemsFilter.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailItemsFilter
            errorMessages.push("Failed to construct CatalogsRetailItemsFilter: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelItemsFilter") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelItemsFilter.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelItemsFilter from JS object
                this.actualInstance = CatalogsHotelItemsFilter.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelItemsFilter
            errorMessages.push("Failed to construct CatalogsHotelItemsFilter: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsItemsFilter") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsItemsFilter.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsItemsFilter from JS object
                this.actualInstance = CatalogsCreativeAssetsItemsFilter.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsItemsFilter
            errorMessages.push("Failed to construct CatalogsCreativeAssetsItemsFilter: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsItemsFilters` with oneOf schemas CatalogsCreativeAssetsItemsFilter, CatalogsHotelItemsFilter, CatalogsRetailItemsFilter. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsItemsFilters` with oneOf schemas CatalogsCreativeAssetsItemsFilter, CatalogsHotelItemsFilter, CatalogsRetailItemsFilter. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsItemsFilters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsItemsFilters} obj Optional instance to populate.
     * @return {module:model/CatalogsItemsFilters} The populated <code>CatalogsItemsFilters</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsItemsFilters(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsItemsFilter</code>, <code>CatalogsHotelItemsFilter</code>, <code>CatalogsRetailItemsFilter</code>.
     * @return {(module:model/CatalogsCreativeAssetsItemsFilter|module:model/CatalogsHotelItemsFilter|module:model/CatalogsRetailItemsFilter)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsItemsFilter</code>, <code>CatalogsHotelItemsFilter</code>, <code>CatalogsRetailItemsFilter</code>.
     * @param {(module:model/CatalogsCreativeAssetsItemsFilter|module:model/CatalogsHotelItemsFilter|module:model/CatalogsRetailItemsFilter)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsItemsFilters.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsItemsFilters from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsItemsFilters} An instance of CatalogsItemsFilters.
     */
    static fromJSON = function(json_string){
        return CatalogsItemsFilters.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsType} catalog_type
 */
CatalogsItemsFilters.prototype['catalog_type'] = undefined;

/**
 * @member {Array.<String>} item_ids
 */
CatalogsItemsFilters.prototype['item_ids'] = undefined;

/**
 * Catalog id pertaining to the creative assets item. If not provided, default to oldest creative assets catalog
 * @member {String} catalog_id
 */
CatalogsItemsFilters.prototype['catalog_id'] = undefined;

/**
 * @member {Array.<String>} hotel_ids
 */
CatalogsItemsFilters.prototype['hotel_ids'] = undefined;

/**
 * @member {Array.<String>} creative_assets_ids
 */
CatalogsItemsFilters.prototype['creative_assets_ids'] = undefined;


CatalogsItemsFilters.OneOf = ["CatalogsCreativeAssetsItemsFilter", "CatalogsHotelItemsFilter", "CatalogsRetailItemsFilter"];

export default CatalogsItemsFilters;

