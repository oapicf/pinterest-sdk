/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BaseInviteDataResponseInviteData model module.
 * @module model/BaseInviteDataResponseInviteData
 * @version 1.1.1-pre.0
 */
class BaseInviteDataResponseInviteData {
    /**
     * Constructs a new <code>BaseInviteDataResponseInviteData</code>.
     * Metadata for the invite/request.
     * @alias module:model/BaseInviteDataResponseInviteData
     */
    constructor() { 
        
        BaseInviteDataResponseInviteData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseInviteDataResponseInviteData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseInviteDataResponseInviteData} obj Optional instance to populate.
     * @return {module:model/BaseInviteDataResponseInviteData} The populated <code>BaseInviteDataResponseInviteData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseInviteDataResponseInviteData();

            if (data.hasOwnProperty('invite_expiration')) {
                obj['invite_expiration'] = ApiClient.convertToType(data['invite_expiration'], 'Number');
            }
            if (data.hasOwnProperty('invite_status')) {
                obj['invite_status'] = ApiClient.convertToType(data['invite_status'], 'String');
            }
            if (data.hasOwnProperty('invite_type')) {
                obj['invite_type'] = ApiClient.convertToType(data['invite_type'], 'String');
            }
            if (data.hasOwnProperty('last_updated_time')) {
                obj['last_updated_time'] = ApiClient.convertToType(data['last_updated_time'], 'Number');
            }
            if (data.hasOwnProperty('sent_at')) {
                obj['sent_at'] = ApiClient.convertToType(data['sent_at'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BaseInviteDataResponseInviteData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BaseInviteDataResponseInviteData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['invite_status'] && !(typeof data['invite_status'] === 'string' || data['invite_status'] instanceof String)) {
            throw new Error("Expected the field `invite_status` to be a primitive type in the JSON string but got " + data['invite_status']);
        }
        // ensure the json data is a string
        if (data['invite_type'] && !(typeof data['invite_type'] === 'string' || data['invite_type'] instanceof String)) {
            throw new Error("Expected the field `invite_type` to be a primitive type in the JSON string but got " + data['invite_type']);
        }

        return true;
    }


}



/**
 * The date and time when the invite/request will expire. Returned in milliseconds.
 * @member {Number} invite_expiration
 */
BaseInviteDataResponseInviteData.prototype['invite_expiration'] = undefined;

/**
 * The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
 * @member {String} invite_status
 */
BaseInviteDataResponseInviteData.prototype['invite_status'] = undefined;

/**
 * The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
 * @member {String} invite_type
 */
BaseInviteDataResponseInviteData.prototype['invite_type'] = undefined;

/**
 * The date and time the invite/request was last updated. Returned in milliseconds.
 * @member {Number} last_updated_time
 */
BaseInviteDataResponseInviteData.prototype['last_updated_time'] = undefined;

/**
 * The date and time the invite/request was sent/created. Returned in milliseconds.
 * @member {Number} sent_at
 */
BaseInviteDataResponseInviteData.prototype['sent_at'] = undefined;






export default BaseInviteDataResponseInviteData;

