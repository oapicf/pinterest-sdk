/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchOperationStatus from './BatchOperationStatus';
import CatalogsCreativeAssetsItemsBatch from './CatalogsCreativeAssetsItemsBatch';
import CatalogsHotelItemsBatch from './CatalogsHotelItemsBatch';
import CatalogsRetailItemsBatch from './CatalogsRetailItemsBatch';
import CatalogsType from './CatalogsType';
import CreativeAssetsProcessingRecord from './CreativeAssetsProcessingRecord';

/**
 * The CatalogsItemsBatch model module.
 * @module model/CatalogsItemsBatch
 * @version 1.1.1-pre.0
 */
class CatalogsItemsBatch {
    /**
     * Constructs a new <code>CatalogsItemsBatch</code>.
     * Object describing the catalogs items batch
     * @alias module:model/CatalogsItemsBatch
     * @param {(module:model/CatalogsCreativeAssetsItemsBatch|module:model/CatalogsHotelItemsBatch|module:model/CatalogsRetailItemsBatch)} instance The actual instance to initialize CatalogsItemsBatch.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailItemsBatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailItemsBatch.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailItemsBatch from JS object
                this.actualInstance = CatalogsRetailItemsBatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailItemsBatch
            errorMessages.push("Failed to construct CatalogsRetailItemsBatch: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelItemsBatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelItemsBatch.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelItemsBatch from JS object
                this.actualInstance = CatalogsHotelItemsBatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelItemsBatch
            errorMessages.push("Failed to construct CatalogsHotelItemsBatch: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsItemsBatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsItemsBatch.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsItemsBatch from JS object
                this.actualInstance = CatalogsCreativeAssetsItemsBatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsItemsBatch
            errorMessages.push("Failed to construct CatalogsCreativeAssetsItemsBatch: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsItemsBatch` with oneOf schemas CatalogsCreativeAssetsItemsBatch, CatalogsHotelItemsBatch, CatalogsRetailItemsBatch. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsItemsBatch` with oneOf schemas CatalogsCreativeAssetsItemsBatch, CatalogsHotelItemsBatch, CatalogsRetailItemsBatch. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsItemsBatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsItemsBatch} obj Optional instance to populate.
     * @return {module:model/CatalogsItemsBatch} The populated <code>CatalogsItemsBatch</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsItemsBatch(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsItemsBatch</code>, <code>CatalogsHotelItemsBatch</code>, <code>CatalogsRetailItemsBatch</code>.
     * @return {(module:model/CatalogsCreativeAssetsItemsBatch|module:model/CatalogsHotelItemsBatch|module:model/CatalogsRetailItemsBatch)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsItemsBatch</code>, <code>CatalogsHotelItemsBatch</code>, <code>CatalogsRetailItemsBatch</code>.
     * @param {(module:model/CatalogsCreativeAssetsItemsBatch|module:model/CatalogsHotelItemsBatch|module:model/CatalogsRetailItemsBatch)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsItemsBatch.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsItemsBatch from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsItemsBatch} An instance of CatalogsItemsBatch.
     */
    static fromJSON = function(json_string){
        return CatalogsItemsBatch.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsType} catalog_type
 */
CatalogsItemsBatch.prototype['catalog_type'] = undefined;

/**
 * Id of the catalogs items batch
 * @member {String} batch_id
 */
CatalogsItemsBatch.prototype['batch_id'] = undefined;

/**
 * Date and time (UTC) of the batch creation: YYYY-MM-DD'T'hh:mm:ss
 * @member {Date} created_time
 */
CatalogsItemsBatch.prototype['created_time'] = undefined;

/**
 * Date and time (UTC) of the batch completion: YYYY-MM-DD'T'hh:mm:ss
 * @member {Date} completed_time
 */
CatalogsItemsBatch.prototype['completed_time'] = undefined;

/**
 * @member {module:model/BatchOperationStatus} status
 */
CatalogsItemsBatch.prototype['status'] = undefined;

/**
 * Array with the catalogs items processing records part of the catalogs items batch
 * @member {Array.<module:model/CreativeAssetsProcessingRecord>} items
 */
CatalogsItemsBatch.prototype['items'] = undefined;


CatalogsItemsBatch.OneOf = ["CatalogsCreativeAssetsItemsBatch", "CatalogsHotelItemsBatch", "CatalogsRetailItemsBatch"];

export default CatalogsItemsBatch;

