/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest from './CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest';
import CatalogsCreativeAssetsProductGroupFilters from './CatalogsCreativeAssetsProductGroupFilters';
import CatalogsHotelListProductsByCatalogBasedFilterRequest from './CatalogsHotelListProductsByCatalogBasedFilterRequest';
import CatalogsLocale from './CatalogsLocale';
import CatalogsRetailListProductsByCatalogBasedFilterRequest from './CatalogsRetailListProductsByCatalogBasedFilterRequest';
import Country from './Country';

/**
 * The CatalogsVerticalsListProductsByCatalogBasedFilterRequest model module.
 * @module model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest
 * @version 1.1.1-pre.0
 */
class CatalogsVerticalsListProductsByCatalogBasedFilterRequest {
    /**
     * Constructs a new <code>CatalogsVerticalsListProductsByCatalogBasedFilterRequest</code>.
     * Request object to list products for a given catalog_id and product group filter.
     * @alias module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest
     * @param {(module:model/CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest|module:model/CatalogsHotelListProductsByCatalogBasedFilterRequest|module:model/CatalogsRetailListProductsByCatalogBasedFilterRequest)} instance The actual instance to initialize CatalogsVerticalsListProductsByCatalogBasedFilterRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailListProductsByCatalogBasedFilterRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailListProductsByCatalogBasedFilterRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailListProductsByCatalogBasedFilterRequest from JS object
                this.actualInstance = CatalogsRetailListProductsByCatalogBasedFilterRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailListProductsByCatalogBasedFilterRequest
            errorMessages.push("Failed to construct CatalogsRetailListProductsByCatalogBasedFilterRequest: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelListProductsByCatalogBasedFilterRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelListProductsByCatalogBasedFilterRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelListProductsByCatalogBasedFilterRequest from JS object
                this.actualInstance = CatalogsHotelListProductsByCatalogBasedFilterRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelListProductsByCatalogBasedFilterRequest
            errorMessages.push("Failed to construct CatalogsHotelListProductsByCatalogBasedFilterRequest: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest from JS object
                this.actualInstance = CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest
            errorMessages.push("Failed to construct CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsVerticalsListProductsByCatalogBasedFilterRequest` with oneOf schemas CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest, CatalogsHotelListProductsByCatalogBasedFilterRequest, CatalogsRetailListProductsByCatalogBasedFilterRequest. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsVerticalsListProductsByCatalogBasedFilterRequest` with oneOf schemas CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest, CatalogsHotelListProductsByCatalogBasedFilterRequest, CatalogsRetailListProductsByCatalogBasedFilterRequest. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsVerticalsListProductsByCatalogBasedFilterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest} obj Optional instance to populate.
     * @return {module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest} The populated <code>CatalogsVerticalsListProductsByCatalogBasedFilterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsVerticalsListProductsByCatalogBasedFilterRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest</code>, <code>CatalogsHotelListProductsByCatalogBasedFilterRequest</code>, <code>CatalogsRetailListProductsByCatalogBasedFilterRequest</code>.
     * @return {(module:model/CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest|module:model/CatalogsHotelListProductsByCatalogBasedFilterRequest|module:model/CatalogsRetailListProductsByCatalogBasedFilterRequest)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest</code>, <code>CatalogsHotelListProductsByCatalogBasedFilterRequest</code>, <code>CatalogsRetailListProductsByCatalogBasedFilterRequest</code>.
     * @param {(module:model/CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest|module:model/CatalogsHotelListProductsByCatalogBasedFilterRequest|module:model/CatalogsRetailListProductsByCatalogBasedFilterRequest)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsVerticalsListProductsByCatalogBasedFilterRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsVerticalsListProductsByCatalogBasedFilterRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest} An instance of CatalogsVerticalsListProductsByCatalogBasedFilterRequest.
     */
    static fromJSON = function(json_string){
        return CatalogsVerticalsListProductsByCatalogBasedFilterRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest.CatalogTypeEnum} catalog_type
 */
CatalogsVerticalsListProductsByCatalogBasedFilterRequest.prototype['catalog_type'] = undefined;

/**
 * Catalog id pertaining to the creative assets product group.
 * @member {String} catalog_id
 */
CatalogsVerticalsListProductsByCatalogBasedFilterRequest.prototype['catalog_id'] = undefined;

/**
 * @member {module:model/CatalogsCreativeAssetsProductGroupFilters} filters
 */
CatalogsVerticalsListProductsByCatalogBasedFilterRequest.prototype['filters'] = undefined;

/**
 * @member {module:model/Country} country
 */
CatalogsVerticalsListProductsByCatalogBasedFilterRequest.prototype['country'] = undefined;

/**
 * @member {module:model/CatalogsLocale} locale
 */
CatalogsVerticalsListProductsByCatalogBasedFilterRequest.prototype['locale'] = undefined;


CatalogsVerticalsListProductsByCatalogBasedFilterRequest.OneOf = ["CatalogsCreativeAssetsListProductsByCatalogBasedFilterRequest", "CatalogsHotelListProductsByCatalogBasedFilterRequest", "CatalogsRetailListProductsByCatalogBasedFilterRequest"];

export default CatalogsVerticalsListProductsByCatalogBasedFilterRequest;

