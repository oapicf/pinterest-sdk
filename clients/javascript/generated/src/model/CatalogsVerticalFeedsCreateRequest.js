/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsCreativeAssetsFeedsCreateRequest from './CatalogsCreativeAssetsFeedsCreateRequest';
import CatalogsFeedCredentials from './CatalogsFeedCredentials';
import CatalogsFeedProcessingSchedule from './CatalogsFeedProcessingSchedule';
import CatalogsFeedsCreateRequestDefaultLocale from './CatalogsFeedsCreateRequestDefaultLocale';
import CatalogsFormat from './CatalogsFormat';
import CatalogsHotelFeedsCreateRequest from './CatalogsHotelFeedsCreateRequest';
import CatalogsRetailFeedsCreateRequest from './CatalogsRetailFeedsCreateRequest';
import CatalogsStatus from './CatalogsStatus';
import CatalogsType from './CatalogsType';
import Country from './Country';
import NullableCurrency from './NullableCurrency';
import ProductAvailabilityType from './ProductAvailabilityType';

/**
 * The CatalogsVerticalFeedsCreateRequest model module.
 * @module model/CatalogsVerticalFeedsCreateRequest
 * @version 1.1.1-pre.0
 */
class CatalogsVerticalFeedsCreateRequest {
    /**
     * Constructs a new <code>CatalogsVerticalFeedsCreateRequest</code>.
     * Request object for creating a feed.
     * @alias module:model/CatalogsVerticalFeedsCreateRequest
     * @param {(module:model/CatalogsCreativeAssetsFeedsCreateRequest|module:model/CatalogsHotelFeedsCreateRequest|module:model/CatalogsRetailFeedsCreateRequest)} instance The actual instance to initialize CatalogsVerticalFeedsCreateRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailFeedsCreateRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailFeedsCreateRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailFeedsCreateRequest from JS object
                this.actualInstance = CatalogsRetailFeedsCreateRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailFeedsCreateRequest
            errorMessages.push("Failed to construct CatalogsRetailFeedsCreateRequest: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelFeedsCreateRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelFeedsCreateRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelFeedsCreateRequest from JS object
                this.actualInstance = CatalogsHotelFeedsCreateRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelFeedsCreateRequest
            errorMessages.push("Failed to construct CatalogsHotelFeedsCreateRequest: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsFeedsCreateRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsFeedsCreateRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsFeedsCreateRequest from JS object
                this.actualInstance = CatalogsCreativeAssetsFeedsCreateRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsFeedsCreateRequest
            errorMessages.push("Failed to construct CatalogsCreativeAssetsFeedsCreateRequest: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsVerticalFeedsCreateRequest` with oneOf schemas CatalogsCreativeAssetsFeedsCreateRequest, CatalogsHotelFeedsCreateRequest, CatalogsRetailFeedsCreateRequest. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsVerticalFeedsCreateRequest` with oneOf schemas CatalogsCreativeAssetsFeedsCreateRequest, CatalogsHotelFeedsCreateRequest, CatalogsRetailFeedsCreateRequest. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsVerticalFeedsCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsVerticalFeedsCreateRequest} obj Optional instance to populate.
     * @return {module:model/CatalogsVerticalFeedsCreateRequest} The populated <code>CatalogsVerticalFeedsCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsVerticalFeedsCreateRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsFeedsCreateRequest</code>, <code>CatalogsHotelFeedsCreateRequest</code>, <code>CatalogsRetailFeedsCreateRequest</code>.
     * @return {(module:model/CatalogsCreativeAssetsFeedsCreateRequest|module:model/CatalogsHotelFeedsCreateRequest|module:model/CatalogsRetailFeedsCreateRequest)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsFeedsCreateRequest</code>, <code>CatalogsHotelFeedsCreateRequest</code>, <code>CatalogsRetailFeedsCreateRequest</code>.
     * @param {(module:model/CatalogsCreativeAssetsFeedsCreateRequest|module:model/CatalogsHotelFeedsCreateRequest|module:model/CatalogsRetailFeedsCreateRequest)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsVerticalFeedsCreateRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsVerticalFeedsCreateRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsVerticalFeedsCreateRequest} An instance of CatalogsVerticalFeedsCreateRequest.
     */
    static fromJSON = function(json_string){
        return CatalogsVerticalFeedsCreateRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/NullableCurrency} default_currency
 */
CatalogsVerticalFeedsCreateRequest.prototype['default_currency'] = undefined;

/**
 * A human-friendly name associated to a given feed.
 * @member {String} name
 */
CatalogsVerticalFeedsCreateRequest.prototype['name'] = undefined;

/**
 * @member {module:model/CatalogsFormat} format
 */
CatalogsVerticalFeedsCreateRequest.prototype['format'] = undefined;

/**
 * @member {module:model/CatalogsFeedsCreateRequestDefaultLocale} default_locale
 */
CatalogsVerticalFeedsCreateRequest.prototype['default_locale'] = undefined;

/**
 * @member {module:model/CatalogsFeedCredentials} credentials
 */
CatalogsVerticalFeedsCreateRequest.prototype['credentials'] = undefined;

/**
 * The URL where a feed is available for download. This URL is what Pinterest will use to download a feed for processing.
 * @member {String} location
 */
CatalogsVerticalFeedsCreateRequest.prototype['location'] = undefined;

/**
 * @member {module:model/CatalogsFeedProcessingSchedule} preferred_processing_schedule
 */
CatalogsVerticalFeedsCreateRequest.prototype['preferred_processing_schedule'] = undefined;

/**
 * @member {module:model/CatalogsType} catalog_type
 */
CatalogsVerticalFeedsCreateRequest.prototype['catalog_type'] = undefined;

/**
 * @member {module:model/Country} default_country
 */
CatalogsVerticalFeedsCreateRequest.prototype['default_country'] = undefined;

/**
 * @member {module:model/ProductAvailabilityType} default_availability
 */
CatalogsVerticalFeedsCreateRequest.prototype['default_availability'] = undefined;

/**
 * @member {module:model/CatalogsStatus} status
 */
CatalogsVerticalFeedsCreateRequest.prototype['status'] = undefined;

/**
 * Catalog id pertaining to the feed. If not provided, feed will use a default catalog based on type. At the moment a catalog can not have multiple creative assets feeds but this will change in the future.
 * @member {String} catalog_id
 */
CatalogsVerticalFeedsCreateRequest.prototype['catalog_id'] = undefined;


CatalogsVerticalFeedsCreateRequest.OneOf = ["CatalogsCreativeAssetsFeedsCreateRequest", "CatalogsHotelFeedsCreateRequest", "CatalogsRetailFeedsCreateRequest"];

export default CatalogsVerticalFeedsCreateRequest;

