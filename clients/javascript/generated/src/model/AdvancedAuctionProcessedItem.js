/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvancedAuctionBidOptions from './AdvancedAuctionBidOptions';
import AdvancedAuctionItemsSubmitRecord from './AdvancedAuctionItemsSubmitRecord';
import AdvancedAuctionOperation from './AdvancedAuctionOperation';
import AdvancedAuctionOperationError from './AdvancedAuctionOperationError';
import Country from './Country';
import Language from './Language';
import UpdateMaskBidOptionField from './UpdateMaskBidOptionField';

/**
 * The AdvancedAuctionProcessedItem model module.
 * @module model/AdvancedAuctionProcessedItem
 * @version 1.1.1-pre.0
 */
class AdvancedAuctionProcessedItem {
    /**
     * Constructs a new <code>AdvancedAuctionProcessedItem</code>.
     * Object describing the result of an operation on an item bid option
     * @alias module:model/AdvancedAuctionProcessedItem
     * @extends module:model/AdvancedAuctionItemsSubmitRecord
     * @implements module:model/AdvancedAuctionItemsSubmitRecord
     * @param operation {module:model/AdvancedAuctionOperation} 
     * @param itemId {String} The catalog retail item id in the merchant namespace
     * @param country {module:model/Country} 
     * @param language {module:model/Language} 
     * @param bidOptions {module:model/AdvancedAuctionBidOptions} 
     * @param updateMask {Array.<module:model/UpdateMaskBidOptionField>} The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
     */
    constructor(operation, itemId, country, language, bidOptions, updateMask) { 
        AdvancedAuctionItemsSubmitRecord.initialize(this, itemId, country, language, bidOptions, updateMask);
        AdvancedAuctionProcessedItem.initialize(this, operation, itemId, country, language, bidOptions, updateMask);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, operation, itemId, country, language, bidOptions, updateMask) { 
    }

    /**
     * Constructs a <code>AdvancedAuctionProcessedItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdvancedAuctionProcessedItem} obj Optional instance to populate.
     * @return {module:model/AdvancedAuctionProcessedItem} The populated <code>AdvancedAuctionProcessedItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdvancedAuctionProcessedItem();
            AdvancedAuctionItemsSubmitRecord.constructFromObject(data, obj);
            AdvancedAuctionItemsSubmitRecord.constructFromObject(data, obj);

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [AdvancedAuctionOperationError]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdvancedAuctionProcessedItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdvancedAuctionProcessedItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdvancedAuctionProcessedItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                AdvancedAuctionOperationError.validateJSON(item);
            };
        }

        return true;
    }


}

AdvancedAuctionProcessedItem.RequiredProperties = ["operation", "item_id", "country", "language", "bid_options", "update_mask"];

/**
 * Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
 * @member {Array.<module:model/AdvancedAuctionOperationError>} errors
 */
AdvancedAuctionProcessedItem.prototype['errors'] = undefined;


// Implement AdvancedAuctionItemsSubmitRecord interface:
/**
 * The catalog retail item id in the merchant namespace
 * @member {String} item_id
 */
AdvancedAuctionItemsSubmitRecord.prototype['item_id'] = undefined;
/**
 * @member {module:model/Country} country
 */
AdvancedAuctionItemsSubmitRecord.prototype['country'] = undefined;
/**
 * @member {module:model/Language} language
 */
AdvancedAuctionItemsSubmitRecord.prototype['language'] = undefined;
/**
 * @member {module:model/AdvancedAuctionBidOptions} bid_options
 */
AdvancedAuctionItemsSubmitRecord.prototype['bid_options'] = undefined;
/**
 * The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
 * @member {Array.<module:model/UpdateMaskBidOptionField>} update_mask
 */
AdvancedAuctionItemsSubmitRecord.prototype['update_mask'] = undefined;




export default AdvancedAuctionProcessedItem;

