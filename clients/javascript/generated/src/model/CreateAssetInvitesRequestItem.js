/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InviteType from './InviteType';
import Permissions from './Permissions';

/**
 * The CreateAssetInvitesRequestItem model module.
 * @module model/CreateAssetInvitesRequestItem
 * @version 1.1.1-pre.0
 */
class CreateAssetInvitesRequestItem {
    /**
     * Constructs a new <code>CreateAssetInvitesRequestItem</code>.
     * Object declaring an asset role update to an invite.
     * @alias module:model/CreateAssetInvitesRequestItem
     * @param inviteId {String} Unique identifier of an invite.
     * @param inviteType {module:model/InviteType} 
     * @param assetIdToPermissions {Object.<String, Array.<module:model/Permissions>>} An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
     */
    constructor(inviteId, inviteType, assetIdToPermissions) { 
        
        CreateAssetInvitesRequestItem.initialize(this, inviteId, inviteType, assetIdToPermissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inviteId, inviteType, assetIdToPermissions) { 
        obj['invite_id'] = inviteId;
        obj['invite_type'] = inviteType;
        obj['asset_id_to_permissions'] = assetIdToPermissions;
    }

    /**
     * Constructs a <code>CreateAssetInvitesRequestItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAssetInvitesRequestItem} obj Optional instance to populate.
     * @return {module:model/CreateAssetInvitesRequestItem} The populated <code>CreateAssetInvitesRequestItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAssetInvitesRequestItem();

            if (data.hasOwnProperty('invite_id')) {
                obj['invite_id'] = ApiClient.convertToType(data['invite_id'], 'String');
            }
            if (data.hasOwnProperty('invite_type')) {
                obj['invite_type'] = InviteType.constructFromObject(data['invite_type']);
            }
            if (data.hasOwnProperty('asset_id_to_permissions')) {
                obj['asset_id_to_permissions'] = ApiClient.convertToType(data['asset_id_to_permissions'], {'String': [Permissions]});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAssetInvitesRequestItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAssetInvitesRequestItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAssetInvitesRequestItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['invite_id'] && !(typeof data['invite_id'] === 'string' || data['invite_id'] instanceof String)) {
            throw new Error("Expected the field `invite_id` to be a primitive type in the JSON string but got " + data['invite_id']);
        }

        return true;
    }


}

CreateAssetInvitesRequestItem.RequiredProperties = ["invite_id", "invite_type", "asset_id_to_permissions"];

/**
 * Unique identifier of an invite.
 * @member {String} invite_id
 */
CreateAssetInvitesRequestItem.prototype['invite_id'] = undefined;

/**
 * @member {module:model/InviteType} invite_type
 */
CreateAssetInvitesRequestItem.prototype['invite_type'] = undefined;

/**
 * An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
 * @member {Object.<String, Array.<module:model/Permissions>>} asset_id_to_permissions
 */
CreateAssetInvitesRequestItem.prototype['asset_id_to_permissions'] = undefined;






export default CreateAssetInvitesRequestItem;

