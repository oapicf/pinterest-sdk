/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConversionApiResponseEventsInner from './ConversionApiResponseEventsInner';

/**
 * The ConversionApiResponse model module.
 * @module model/ConversionApiResponse
 * @version 1.1.1-pre.0
 */
class ConversionApiResponse {
    /**
     * Constructs a new <code>ConversionApiResponse</code>.
     * Schema describing the object in the response, which contains information about the events that were received and processed.
     * @alias module:model/ConversionApiResponse
     * @param numEventsReceived {Number} Total number of events received in the request.
     * @param numEventsProcessed {Number} Number of events that were successfully processed from the events.
     * @param events {Array.<module:model/ConversionApiResponseEventsInner>} Specific messages for each event received. The order will match the order in which the events were received in the request.
     */
    constructor(numEventsReceived, numEventsProcessed, events) { 
        
        ConversionApiResponse.initialize(this, numEventsReceived, numEventsProcessed, events);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, numEventsReceived, numEventsProcessed, events) { 
        obj['num_events_received'] = numEventsReceived;
        obj['num_events_processed'] = numEventsProcessed;
        obj['events'] = events;
    }

    /**
     * Constructs a <code>ConversionApiResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversionApiResponse} obj Optional instance to populate.
     * @return {module:model/ConversionApiResponse} The populated <code>ConversionApiResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversionApiResponse();

            if (data.hasOwnProperty('num_events_received')) {
                obj['num_events_received'] = ApiClient.convertToType(data['num_events_received'], 'Number');
            }
            if (data.hasOwnProperty('num_events_processed')) {
                obj['num_events_processed'] = ApiClient.convertToType(data['num_events_processed'], 'Number');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [ConversionApiResponseEventsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversionApiResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversionApiResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConversionApiResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['events'])) {
                throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
            }
            // validate the optional field `events` (array)
            for (const item of data['events']) {
                ConversionApiResponseEventsInner.validateJSON(item);
            };
        }

        return true;
    }


}

ConversionApiResponse.RequiredProperties = ["num_events_received", "num_events_processed", "events"];

/**
 * Total number of events received in the request.
 * @member {Number} num_events_received
 */
ConversionApiResponse.prototype['num_events_received'] = undefined;

/**
 * Number of events that were successfully processed from the events.
 * @member {Number} num_events_processed
 */
ConversionApiResponse.prototype['num_events_processed'] = undefined;

/**
 * Specific messages for each event received. The order will match the order in which the events were received in the request.
 * @member {Array.<module:model/ConversionApiResponseEventsInner>} events
 */
ConversionApiResponse.prototype['events'] = undefined;






export default ConversionApiResponse;

