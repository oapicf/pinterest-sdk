/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsCreativeAssetsProductGroup from './CatalogsCreativeAssetsProductGroup';
import CatalogsCreativeAssetsProductGroupFilters from './CatalogsCreativeAssetsProductGroupFilters';
import CatalogsHotelProductGroup from './CatalogsHotelProductGroup';
import CatalogsProductGroupStatus from './CatalogsProductGroupStatus';
import CatalogsProductGroupType from './CatalogsProductGroupType';
import CatalogsRetailProductGroup from './CatalogsRetailProductGroup';

/**
 * The CatalogsVerticalProductGroup model module.
 * @module model/CatalogsVerticalProductGroup
 * @version 1.1.1-pre.0
 */
class CatalogsVerticalProductGroup {
    /**
     * Constructs a new <code>CatalogsVerticalProductGroup</code>.
     * @alias module:model/CatalogsVerticalProductGroup
     * @param {(module:model/CatalogsCreativeAssetsProductGroup|module:model/CatalogsHotelProductGroup|module:model/CatalogsRetailProductGroup)} instance The actual instance to initialize CatalogsVerticalProductGroup.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsRetailProductGroup") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsRetailProductGroup.validateJSON(instance); // throw an exception if no match
                // create CatalogsRetailProductGroup from JS object
                this.actualInstance = CatalogsRetailProductGroup.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsRetailProductGroup
            errorMessages.push("Failed to construct CatalogsRetailProductGroup: " + err)
        }

        try {
            if (typeof instance === "CatalogsHotelProductGroup") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsHotelProductGroup.validateJSON(instance); // throw an exception if no match
                // create CatalogsHotelProductGroup from JS object
                this.actualInstance = CatalogsHotelProductGroup.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsHotelProductGroup
            errorMessages.push("Failed to construct CatalogsHotelProductGroup: " + err)
        }

        try {
            if (typeof instance === "CatalogsCreativeAssetsProductGroup") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsCreativeAssetsProductGroup.validateJSON(instance); // throw an exception if no match
                // create CatalogsCreativeAssetsProductGroup from JS object
                this.actualInstance = CatalogsCreativeAssetsProductGroup.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsCreativeAssetsProductGroup
            errorMessages.push("Failed to construct CatalogsCreativeAssetsProductGroup: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsVerticalProductGroup` with oneOf schemas CatalogsCreativeAssetsProductGroup, CatalogsHotelProductGroup, CatalogsRetailProductGroup. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsVerticalProductGroup` with oneOf schemas CatalogsCreativeAssetsProductGroup, CatalogsHotelProductGroup, CatalogsRetailProductGroup. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsVerticalProductGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsVerticalProductGroup} obj Optional instance to populate.
     * @return {module:model/CatalogsVerticalProductGroup} The populated <code>CatalogsVerticalProductGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsVerticalProductGroup(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsCreativeAssetsProductGroup</code>, <code>CatalogsHotelProductGroup</code>, <code>CatalogsRetailProductGroup</code>.
     * @return {(module:model/CatalogsCreativeAssetsProductGroup|module:model/CatalogsHotelProductGroup|module:model/CatalogsRetailProductGroup)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsCreativeAssetsProductGroup</code>, <code>CatalogsHotelProductGroup</code>, <code>CatalogsRetailProductGroup</code>.
     * @param {(module:model/CatalogsCreativeAssetsProductGroup|module:model/CatalogsHotelProductGroup|module:model/CatalogsRetailProductGroup)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsVerticalProductGroup.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsVerticalProductGroup from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsVerticalProductGroup} An instance of CatalogsVerticalProductGroup.
     */
    static fromJSON = function(json_string){
        return CatalogsVerticalProductGroup.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsVerticalProductGroup.CatalogTypeEnum} catalog_type
 */
CatalogsVerticalProductGroup.prototype['catalog_type'] = undefined;

/**
 * ID of the creative assets product group.
 * @member {String} id
 */
CatalogsVerticalProductGroup.prototype['id'] = undefined;

/**
 * Name of creative assets product group
 * @member {String} name
 */
CatalogsVerticalProductGroup.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CatalogsVerticalProductGroup.prototype['description'] = undefined;

/**
 * @member {module:model/CatalogsCreativeAssetsProductGroupFilters} filters
 */
CatalogsVerticalProductGroup.prototype['filters'] = undefined;

/**
 * boolean indicator of whether the product group is being featured or not
 * @member {Boolean} is_featured
 */
CatalogsVerticalProductGroup.prototype['is_featured'] = undefined;

/**
 * @member {module:model/CatalogsProductGroupType} type
 */
CatalogsVerticalProductGroup.prototype['type'] = undefined;

/**
 * @member {module:model/CatalogsProductGroupStatus} status
 */
CatalogsVerticalProductGroup.prototype['status'] = undefined;

/**
 * Unix timestamp in seconds of when catalog product group was created.
 * @member {Number} created_at
 */
CatalogsVerticalProductGroup.prototype['created_at'] = undefined;

/**
 * Unix timestamp in seconds of last time catalog product group was updated.
 * @member {Number} updated_at
 */
CatalogsVerticalProductGroup.prototype['updated_at'] = undefined;

/**
 * Catalog id pertaining to the creative assets product group.
 * @member {String} catalog_id
 */
CatalogsVerticalProductGroup.prototype['catalog_id'] = undefined;

/**
 * id of the catalogs feed belonging to this catalog product group
 * @member {String} feed_id
 */
CatalogsVerticalProductGroup.prototype['feed_id'] = undefined;

/**
 * @member {String} country
 */
CatalogsVerticalProductGroup.prototype['country'] = undefined;

/**
 * @member {String} locale
 */
CatalogsVerticalProductGroup.prototype['locale'] = undefined;


CatalogsVerticalProductGroup.OneOf = ["CatalogsCreativeAssetsProductGroup", "CatalogsHotelProductGroup", "CatalogsRetailProductGroup"];

export default CatalogsVerticalProductGroup;

