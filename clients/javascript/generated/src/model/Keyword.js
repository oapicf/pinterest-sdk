/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeywordsCommon from './KeywordsCommon';
import MatchTypeResponse from './MatchTypeResponse';

/**
 * The Keyword model module.
 * @module model/Keyword
 * @version 1.1.1-pre.0
 */
class Keyword {
    /**
     * Constructs a new <code>Keyword</code>.
     * @alias module:model/Keyword
     * @implements module:model/KeywordsCommon
     * @param matchType {module:model/MatchTypeResponse} 
     * @param value {String} Keyword value (120 chars max).
     */
    constructor(matchType, value) { 
        KeywordsCommon.initialize(this, matchType, value);
        Keyword.initialize(this, matchType, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, matchType, value) { 
        obj['match_type'] = matchType;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>Keyword</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Keyword} obj Optional instance to populate.
     * @return {module:model/Keyword} The populated <code>Keyword</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Keyword();
            KeywordsCommon.constructFromObject(data, obj);

            if (data.hasOwnProperty('bid')) {
                obj['bid'] = ApiClient.convertToType(data['bid'], 'Number');
            }
            if (data.hasOwnProperty('match_type')) {
                obj['match_type'] = MatchTypeResponse.constructFromObject(data['match_type']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'String');
            }
            if (data.hasOwnProperty('parent_type')) {
                obj['parent_type'] = ApiClient.convertToType(data['parent_type'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Keyword</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Keyword</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Keyword.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['parent_id'] && !(typeof data['parent_id'] === 'string' || data['parent_id'] instanceof String)) {
            throw new Error("Expected the field `parent_id` to be a primitive type in the JSON string but got " + data['parent_id']);
        }
        // ensure the json data is a string
        if (data['parent_type'] && !(typeof data['parent_type'] === 'string' || data['parent_type'] instanceof String)) {
            throw new Error("Expected the field `parent_type` to be a primitive type in the JSON string but got " + data['parent_type']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

Keyword.RequiredProperties = ["match_type", "value"];

/**
 * </p><strong>Note:</strong> bid field has been deprecated. Input will not be set and field will return null. Keyword custom bid in microcurrency - null if inherited from parent ad group.
 * @member {Number} bid
 */
Keyword.prototype['bid'] = undefined;

/**
 * @member {module:model/MatchTypeResponse} match_type
 */
Keyword.prototype['match_type'] = undefined;

/**
 * Keyword value (120 chars max).
 * @member {String} value
 */
Keyword.prototype['value'] = undefined;

/**
 * @member {Boolean} archived
 */
Keyword.prototype['archived'] = undefined;

/**
 * Keyword ID .
 * @member {String} id
 */
Keyword.prototype['id'] = undefined;

/**
 * Keyword parent entity ID (advertiser, campaign, ad group).
 * @member {String} parent_id
 */
Keyword.prototype['parent_id'] = undefined;

/**
 * Parent entity type
 * @member {String} parent_type
 */
Keyword.prototype['parent_type'] = undefined;

/**
 * Always keyword
 * @member {String} type
 */
Keyword.prototype['type'] = undefined;


// Implement KeywordsCommon interface:
/**
 * </p><strong>Note:</strong> bid field has been deprecated. Input will not be set and field will return null. Keyword custom bid in microcurrency - null if inherited from parent ad group.
 * @member {Number} bid
 */
KeywordsCommon.prototype['bid'] = undefined;
/**
 * @member {module:model/MatchTypeResponse} match_type
 */
KeywordsCommon.prototype['match_type'] = undefined;
/**
 * Keyword value (120 chars max).
 * @member {String} value
 */
KeywordsCommon.prototype['value'] = undefined;




export default Keyword;

