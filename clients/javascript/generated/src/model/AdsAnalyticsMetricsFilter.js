/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdsAnalyticsFilterColumn from './AdsAnalyticsFilterColumn';
import AdsAnalyticsFilterOperator from './AdsAnalyticsFilterOperator';

/**
 * The AdsAnalyticsMetricsFilter model module.
 * @module model/AdsAnalyticsMetricsFilter
 * @version 1.1.1-pre.0
 */
class AdsAnalyticsMetricsFilter {
    /**
     * Constructs a new <code>AdsAnalyticsMetricsFilter</code>.
     * @alias module:model/AdsAnalyticsMetricsFilter
     * @param field {module:model/AdsAnalyticsFilterColumn} 
     * @param operator {module:model/AdsAnalyticsFilterOperator} 
     * @param values {Array.<Number>} List of values for filtering
     */
    constructor(field, operator, values) { 
        
        AdsAnalyticsMetricsFilter.initialize(this, field, operator, values);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, field, operator, values) { 
        obj['field'] = field;
        obj['operator'] = operator;
        obj['values'] = values;
    }

    /**
     * Constructs a <code>AdsAnalyticsMetricsFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdsAnalyticsMetricsFilter} obj Optional instance to populate.
     * @return {module:model/AdsAnalyticsMetricsFilter} The populated <code>AdsAnalyticsMetricsFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdsAnalyticsMetricsFilter();

            if (data.hasOwnProperty('field')) {
                obj['field'] = AdsAnalyticsFilterColumn.constructFromObject(data['field']);
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = AdsAnalyticsFilterOperator.constructFromObject(data['operator']);
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdsAnalyticsMetricsFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdsAnalyticsMetricsFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdsAnalyticsMetricsFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}

AdsAnalyticsMetricsFilter.RequiredProperties = ["field", "operator", "values"];

/**
 * @member {module:model/AdsAnalyticsFilterColumn} field
 */
AdsAnalyticsMetricsFilter.prototype['field'] = undefined;

/**
 * @member {module:model/AdsAnalyticsFilterOperator} operator
 */
AdsAnalyticsMetricsFilter.prototype['operator'] = undefined;

/**
 * List of values for filtering
 * @member {Array.<Number>} values
 */
AdsAnalyticsMetricsFilter.prototype['values'] = undefined;






export default AdsAnalyticsMetricsFilter;

