/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsReportDistributionIssueFilter from './CatalogsReportDistributionIssueFilter';
import CatalogsReportFeedIngestionFilter from './CatalogsReportFeedIngestionFilter';

/**
 * The CatalogsHotelReportParametersReport model module.
 * @module model/CatalogsHotelReportParametersReport
 * @version 1.1.1-pre.0
 */
class CatalogsHotelReportParametersReport {
    /**
     * Constructs a new <code>CatalogsHotelReportParametersReport</code>.
     * @alias module:model/CatalogsHotelReportParametersReport
     * @param {(module:model/CatalogsReportDistributionIssueFilter|module:model/CatalogsReportFeedIngestionFilter)} instance The actual instance to initialize CatalogsHotelReportParametersReport.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsReportFeedIngestionFilter") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsReportFeedIngestionFilter.validateJSON(instance); // throw an exception if no match
                // create CatalogsReportFeedIngestionFilter from JS object
                this.actualInstance = CatalogsReportFeedIngestionFilter.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsReportFeedIngestionFilter
            errorMessages.push("Failed to construct CatalogsReportFeedIngestionFilter: " + err)
        }

        try {
            if (typeof instance === "CatalogsReportDistributionIssueFilter") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsReportDistributionIssueFilter.validateJSON(instance); // throw an exception if no match
                // create CatalogsReportDistributionIssueFilter from JS object
                this.actualInstance = CatalogsReportDistributionIssueFilter.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsReportDistributionIssueFilter
            errorMessages.push("Failed to construct CatalogsReportDistributionIssueFilter: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsHotelReportParametersReport` with oneOf schemas CatalogsReportDistributionIssueFilter, CatalogsReportFeedIngestionFilter. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsHotelReportParametersReport` with oneOf schemas CatalogsReportDistributionIssueFilter, CatalogsReportFeedIngestionFilter. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsHotelReportParametersReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsHotelReportParametersReport} obj Optional instance to populate.
     * @return {module:model/CatalogsHotelReportParametersReport} The populated <code>CatalogsHotelReportParametersReport</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsHotelReportParametersReport(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsReportDistributionIssueFilter</code>, <code>CatalogsReportFeedIngestionFilter</code>.
     * @return {(module:model/CatalogsReportDistributionIssueFilter|module:model/CatalogsReportFeedIngestionFilter)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsReportDistributionIssueFilter</code>, <code>CatalogsReportFeedIngestionFilter</code>.
     * @param {(module:model/CatalogsReportDistributionIssueFilter|module:model/CatalogsReportFeedIngestionFilter)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsHotelReportParametersReport.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsHotelReportParametersReport from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsHotelReportParametersReport} An instance of CatalogsHotelReportParametersReport.
     */
    static fromJSON = function(json_string){
        return CatalogsHotelReportParametersReport.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsHotelReportParametersReport.ReportTypeEnum} report_type
 */
CatalogsHotelReportParametersReport.prototype['report_type'] = undefined;

/**
 * ID of the feed entity.
 * @member {String} feed_id
 */
CatalogsHotelReportParametersReport.prototype['feed_id'] = undefined;

/**
 * Unique identifier of a feed processing result. It can be acquired from the \"id\" field of the \"items\" array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list). If not provided, default to most recent completed processing result.
 * @member {String} processing_result_id
 */
CatalogsHotelReportParametersReport.prototype['processing_result_id'] = undefined;

/**
 * Unique identifier of a catalog. If not given, oldest catalog will be used
 * @member {String} catalog_id
 */
CatalogsHotelReportParametersReport.prototype['catalog_id'] = undefined;


CatalogsHotelReportParametersReport.OneOf = ["CatalogsReportDistributionIssueFilter", "CatalogsReportFeedIngestionFilter"];

export default CatalogsHotelReportParametersReport;

