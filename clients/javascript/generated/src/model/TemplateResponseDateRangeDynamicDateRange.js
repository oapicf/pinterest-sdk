/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TemplateResponseDateRangeDynamicDateRange model module.
 * @module model/TemplateResponseDateRangeDynamicDateRange
 * @version 1.1.1-pre.0
 */
class TemplateResponseDateRangeDynamicDateRange {
    /**
     * Constructs a new <code>TemplateResponseDateRangeDynamicDateRange</code>.
     * The dynamic date range of the template
     * @alias module:model/TemplateResponseDateRangeDynamicDateRange
     */
    constructor() { 
        
        TemplateResponseDateRangeDynamicDateRange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplateResponseDateRangeDynamicDateRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateResponseDateRangeDynamicDateRange} obj Optional instance to populate.
     * @return {module:model/TemplateResponseDateRangeDynamicDateRange} The populated <code>TemplateResponseDateRangeDynamicDateRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateResponseDateRangeDynamicDateRange();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = ApiClient.convertToType(data['range'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateResponseDateRangeDynamicDateRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateResponseDateRangeDynamicDateRange</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['range'] && !(typeof data['range'] === 'string' || data['range'] instanceof String)) {
            throw new Error("Expected the field `range` to be a primitive type in the JSON string but got " + data['range']);
        }

        return true;
    }


}



/**
 * The date range type
 * @member {String} type
 */
TemplateResponseDateRangeDynamicDateRange.prototype['type'] = undefined;

/**
 * The dynamic range type
 * @member {module:model/TemplateResponseDateRangeDynamicDateRange.RangeEnum} range
 */
TemplateResponseDateRangeDynamicDateRange.prototype['range'] = undefined;





/**
 * Allowed values for the <code>range</code> property.
 * @enum {String}
 * @readonly
 */
TemplateResponseDateRangeDynamicDateRange['RangeEnum'] = {

    /**
     * value: "YEAR_TO_DATE"
     * @const
     */
    "YEAR_TO_DATE": "YEAR_TO_DATE",

    /**
     * value: "QUARTER_TO_DATE"
     * @const
     */
    "QUARTER_TO_DATE": "QUARTER_TO_DATE",

    /**
     * value: "MONTH_TO_DATE"
     * @const
     */
    "MONTH_TO_DATE": "MONTH_TO_DATE",

    /**
     * value: "LAST_MONTH"
     * @const
     */
    "LAST_MONTH": "LAST_MONTH"
};



export default TemplateResponseDateRangeDynamicDateRange;

