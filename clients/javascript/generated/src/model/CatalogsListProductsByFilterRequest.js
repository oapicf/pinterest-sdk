/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsListProductsByFeedBasedFilter from './CatalogsListProductsByFeedBasedFilter';
import CatalogsLocale from './CatalogsLocale';
import CatalogsProductGroupFilters from './CatalogsProductGroupFilters';
import CatalogsVerticalsListProductsByCatalogBasedFilterRequest from './CatalogsVerticalsListProductsByCatalogBasedFilterRequest';
import Country from './Country';

/**
 * The CatalogsListProductsByFilterRequest model module.
 * @module model/CatalogsListProductsByFilterRequest
 * @version 1.1.1-pre.0
 */
class CatalogsListProductsByFilterRequest {
    /**
     * Constructs a new <code>CatalogsListProductsByFilterRequest</code>.
     * Request object to list products for a given product group filter.
     * @alias module:model/CatalogsListProductsByFilterRequest
     * @param {(module:model/CatalogsListProductsByFeedBasedFilter|module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest)} instance The actual instance to initialize CatalogsListProductsByFilterRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsListProductsByFeedBasedFilter") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsListProductsByFeedBasedFilter.validateJSON(instance); // throw an exception if no match
                // create CatalogsListProductsByFeedBasedFilter from JS object
                this.actualInstance = CatalogsListProductsByFeedBasedFilter.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsListProductsByFeedBasedFilter
            errorMessages.push("Failed to construct CatalogsListProductsByFeedBasedFilter: " + err)
        }

        try {
            if (typeof instance === "CatalogsVerticalsListProductsByCatalogBasedFilterRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsVerticalsListProductsByCatalogBasedFilterRequest.validateJSON(instance); // throw an exception if no match
                // create CatalogsVerticalsListProductsByCatalogBasedFilterRequest from JS object
                this.actualInstance = CatalogsVerticalsListProductsByCatalogBasedFilterRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsVerticalsListProductsByCatalogBasedFilterRequest
            errorMessages.push("Failed to construct CatalogsVerticalsListProductsByCatalogBasedFilterRequest: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsListProductsByFilterRequest` with oneOf schemas CatalogsListProductsByFeedBasedFilter, CatalogsVerticalsListProductsByCatalogBasedFilterRequest. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsListProductsByFilterRequest` with oneOf schemas CatalogsListProductsByFeedBasedFilter, CatalogsVerticalsListProductsByCatalogBasedFilterRequest. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsListProductsByFilterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsListProductsByFilterRequest} obj Optional instance to populate.
     * @return {module:model/CatalogsListProductsByFilterRequest} The populated <code>CatalogsListProductsByFilterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsListProductsByFilterRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsListProductsByFeedBasedFilter</code>, <code>CatalogsVerticalsListProductsByCatalogBasedFilterRequest</code>.
     * @return {(module:model/CatalogsListProductsByFeedBasedFilter|module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsListProductsByFeedBasedFilter</code>, <code>CatalogsVerticalsListProductsByCatalogBasedFilterRequest</code>.
     * @param {(module:model/CatalogsListProductsByFeedBasedFilter|module:model/CatalogsVerticalsListProductsByCatalogBasedFilterRequest)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsListProductsByFilterRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsListProductsByFilterRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsListProductsByFilterRequest} An instance of CatalogsListProductsByFilterRequest.
     */
    static fromJSON = function(json_string){
        return CatalogsListProductsByFilterRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Catalog Feed id pertaining to the catalog product group filter.
 * @member {String} feed_id
 */
CatalogsListProductsByFilterRequest.prototype['feed_id'] = undefined;

/**
 * @member {module:model/CatalogsProductGroupFilters} filters
 */
CatalogsListProductsByFilterRequest.prototype['filters'] = undefined;


CatalogsListProductsByFilterRequest.OneOf = ["CatalogsListProductsByFeedBasedFilter", "CatalogsVerticalsListProductsByCatalogBasedFilterRequest"];

export default CatalogsListProductsByFilterRequest;

