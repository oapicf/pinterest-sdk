/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BusinessAccessUserSummary from './BusinessAccessUserSummary';
import BusinessMemberAssetsSummary from './BusinessMemberAssetsSummary';

/**
 * The UserBusinessRoleBinding model module.
 * @module model/UserBusinessRoleBinding
 * @version 1.1.1-pre.0
 */
class UserBusinessRoleBinding {
    /**
     * Constructs a new <code>UserBusinessRoleBinding</code>.
     * @alias module:model/UserBusinessRoleBinding
     */
    constructor() { 
        
        UserBusinessRoleBinding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserBusinessRoleBinding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserBusinessRoleBinding} obj Optional instance to populate.
     * @return {module:model/UserBusinessRoleBinding} The populated <code>UserBusinessRoleBinding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserBusinessRoleBinding();

            if (data.hasOwnProperty('assets_summary')) {
                obj['assets_summary'] = ApiClient.convertToType(data['assets_summary'], BusinessMemberAssetsSummary);
            }
            if (data.hasOwnProperty('business_roles')) {
                obj['business_roles'] = ApiClient.convertToType(data['business_roles'], ['String']);
            }
            if (data.hasOwnProperty('created_by_business')) {
                obj['created_by_business'] = ApiClient.convertToType(data['created_by_business'], BusinessAccessUserSummary);
            }
            if (data.hasOwnProperty('created_by_user')) {
                obj['created_by_user'] = ApiClient.convertToType(data['created_by_user'], BusinessAccessUserSummary);
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_shared_partner')) {
                obj['is_shared_partner'] = ApiClient.convertToType(data['is_shared_partner'], 'Boolean');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], BusinessAccessUserSummary);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserBusinessRoleBinding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserBusinessRoleBinding</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assets_summary`
        if (data['assets_summary']) { // data not null
          BusinessMemberAssetsSummary.validateJSON(data['assets_summary']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['business_roles'])) {
            throw new Error("Expected the field `business_roles` to be an array in the JSON data but got " + data['business_roles']);
        }
        // validate the optional field `created_by_business`
        if (data['created_by_business']) { // data not null
          BusinessAccessUserSummary.validateJSON(data['created_by_business']);
        }
        // validate the optional field `created_by_user`
        if (data['created_by_user']) { // data not null
          BusinessAccessUserSummary.validateJSON(data['created_by_user']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          BusinessAccessUserSummary.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {module:model/BusinessMemberAssetsSummary} assets_summary
 */
UserBusinessRoleBinding.prototype['assets_summary'] = undefined;

/**
 * The access level a user has on the business. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.
 * @member {Array.<String>} business_roles
 */
UserBusinessRoleBinding.prototype['business_roles'] = undefined;

/**
 * Metadata for the business that created the business relationship.
 * @member {module:model/BusinessAccessUserSummary} created_by_business
 */
UserBusinessRoleBinding.prototype['created_by_business'] = undefined;

/**
 * Metadata for the user that created the business relationship.
 * @member {module:model/BusinessAccessUserSummary} created_by_user
 */
UserBusinessRoleBinding.prototype['created_by_user'] = undefined;

/**
 * The time the business relationship was created. Returned in milliseconds.
 * @member {Number} created_time
 */
UserBusinessRoleBinding.prototype['created_time'] = undefined;

/**
 * Unique identifier of the business member/business partner/employer.
 * @member {String} id
 */
UserBusinessRoleBinding.prototype['id'] = undefined;

/**
 * This field is only relevant when business_role=\"PARTNER\". <br>If is_shared_partner=FALSE, the partner can access your business assets. If assets_summary is not empty, the assets listed are your business assets the partner has access to. <br>If is_shared_partner=TRUE, you can access the partner's business asset. If assets_summary is not empty, the assets listed are the partner's business assets you have access to.
 * @member {Boolean} is_shared_partner
 */
UserBusinessRoleBinding.prototype['is_shared_partner'] = undefined;

/**
 * Metadata for the business member/business partner/employer.
 * @member {module:model/BusinessAccessUserSummary} user
 */
UserBusinessRoleBinding.prototype['user'] = undefined;






export default UserBusinessRoleBinding;

