/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsReportDistributionStats from './CatalogsReportDistributionStats';
import CatalogsReportFeedIngestionStats from './CatalogsReportFeedIngestionStats';

/**
 * The CatalogsReportStats model module.
 * @module model/CatalogsReportStats
 * @version 1.1.1-pre.0
 */
class CatalogsReportStats {
    /**
     * Constructs a new <code>CatalogsReportStats</code>.
     * Diagnostics aggregated numbers
     * @alias module:model/CatalogsReportStats
     * @param {(module:model/CatalogsReportDistributionStats|module:model/CatalogsReportFeedIngestionStats)} instance The actual instance to initialize CatalogsReportStats.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CatalogsReportFeedIngestionStats") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsReportFeedIngestionStats.validateJSON(instance); // throw an exception if no match
                // create CatalogsReportFeedIngestionStats from JS object
                this.actualInstance = CatalogsReportFeedIngestionStats.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsReportFeedIngestionStats
            errorMessages.push("Failed to construct CatalogsReportFeedIngestionStats: " + err)
        }

        try {
            if (typeof instance === "CatalogsReportDistributionStats") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CatalogsReportDistributionStats.validateJSON(instance); // throw an exception if no match
                // create CatalogsReportDistributionStats from JS object
                this.actualInstance = CatalogsReportDistributionStats.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CatalogsReportDistributionStats
            errorMessages.push("Failed to construct CatalogsReportDistributionStats: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CatalogsReportStats` with oneOf schemas CatalogsReportDistributionStats, CatalogsReportFeedIngestionStats. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CatalogsReportStats` with oneOf schemas CatalogsReportDistributionStats, CatalogsReportFeedIngestionStats. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CatalogsReportStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsReportStats} obj Optional instance to populate.
     * @return {module:model/CatalogsReportStats} The populated <code>CatalogsReportStats</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CatalogsReportStats(data);
    }

    /**
     * Gets the actual instance, which can be <code>CatalogsReportDistributionStats</code>, <code>CatalogsReportFeedIngestionStats</code>.
     * @return {(module:model/CatalogsReportDistributionStats|module:model/CatalogsReportFeedIngestionStats)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CatalogsReportDistributionStats</code>, <code>CatalogsReportFeedIngestionStats</code>.
     * @param {(module:model/CatalogsReportDistributionStats|module:model/CatalogsReportFeedIngestionStats)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CatalogsReportStats.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CatalogsReportStats from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CatalogsReportStats} An instance of CatalogsReportStats.
     */
    static fromJSON = function(json_string){
        return CatalogsReportStats.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/CatalogsReportStats.ReportTypeEnum} report_type
 */
CatalogsReportStats.prototype['report_type'] = undefined;

/**
 * ID of the catalog entity.
 * @member {String} catalog_id
 */
CatalogsReportStats.prototype['catalog_id'] = undefined;

/**
 * The event code that a diagnostics aggregated number references
 * @member {Number} code
 */
CatalogsReportStats.prototype['code'] = undefined;

/**
 * A human-friendly label for the event code (e.g, 'SPAM')
 * @member {String} code_label
 */
CatalogsReportStats.prototype['code_label'] = undefined;

/**
 * Title message describing the diagnostic issue
 * @member {String} message
 */
CatalogsReportStats.prototype['message'] = undefined;

/**
 * Number of occurrences of the issue
 * @member {Number} occurrences
 */
CatalogsReportStats.prototype['occurrences'] = undefined;

/**
 * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
 * @member {module:model/CatalogsReportStats.SeverityEnum} severity
 */
CatalogsReportStats.prototype['severity'] = undefined;

/**
 * Indicates if issue makes items ineligible for ads distribution
 * @member {Boolean} ineligible_for_ads
 */
CatalogsReportStats.prototype['ineligible_for_ads'] = undefined;

/**
 * Indicates if issue makes items ineligible for organic distribution
 * @member {Boolean} ineligible_for_organic
 */
CatalogsReportStats.prototype['ineligible_for_organic'] = undefined;


CatalogsReportStats.OneOf = ["CatalogsReportDistributionStats", "CatalogsReportFeedIngestionStats"];

export default CatalogsReportStats;

