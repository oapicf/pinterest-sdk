/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeywordUpdate from './KeywordUpdate';

/**
 * The KeywordUpdateBody model module.
 * @module model/KeywordUpdateBody
 * @version 1.1.1-pre.0
 */
class KeywordUpdateBody {
    /**
     * Constructs a new <code>KeywordUpdateBody</code>.
     * @alias module:model/KeywordUpdateBody
     * @param keywords {Array.<module:model/KeywordUpdate>} Keywords to update. Object array. Each object has 2 possible fields:<br>1. \"id\": (required) keyword ID<br>2. \"archived\": boolean. Should keyword be archived?<br>For example: [{\"id\":\"2886610576653\", \"archived\": false}, {\"id\":\"2886610576654\",  \"archived\": true}, ...]
     */
    constructor(keywords) { 
        
        KeywordUpdateBody.initialize(this, keywords);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keywords) { 
        obj['keywords'] = keywords;
    }

    /**
     * Constructs a <code>KeywordUpdateBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeywordUpdateBody} obj Optional instance to populate.
     * @return {module:model/KeywordUpdateBody} The populated <code>KeywordUpdateBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeywordUpdateBody();

            if (data.hasOwnProperty('keywords')) {
                obj['keywords'] = ApiClient.convertToType(data['keywords'], [KeywordUpdate]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeywordUpdateBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeywordUpdateBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KeywordUpdateBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['keywords']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['keywords'])) {
                throw new Error("Expected the field `keywords` to be an array in the JSON data but got " + data['keywords']);
            }
            // validate the optional field `keywords` (array)
            for (const item of data['keywords']) {
                KeywordUpdate.validateJSON(item);
            };
        }

        return true;
    }


}

KeywordUpdateBody.RequiredProperties = ["keywords"];

/**
 * Keywords to update. Object array. Each object has 2 possible fields:<br>1. \"id\": (required) keyword ID<br>2. \"archived\": boolean. Should keyword be archived?<br>For example: [{\"id\":\"2886610576653\", \"archived\": false}, {\"id\":\"2886610576654\",  \"archived\": true}, ...]
 * @member {Array.<module:model/KeywordUpdate>} keywords
 */
KeywordUpdateBody.prototype['keywords'] = undefined;






export default KeywordUpdateBody;

