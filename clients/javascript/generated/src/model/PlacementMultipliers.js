/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlacementMultipliers model module.
 * @module model/PlacementMultipliers
 * @version 1.1.1-pre.0
 */
class PlacementMultipliers {
    /**
     * Constructs a new <code>PlacementMultipliers</code>.
     * This represents a mapping from placement to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified placement in &#x60;MAX_BID&#x60; ad groups in &#x60;CATALOG_SALES&#x60; campaigns. All placement multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
     * @alias module:model/PlacementMultipliers
     * @extends Object
     */
    constructor() { 
        
        PlacementMultipliers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlacementMultipliers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlacementMultipliers} obj Optional instance to populate.
     * @return {module:model/PlacementMultipliers} The populated <code>PlacementMultipliers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlacementMultipliers();

            ApiClient.constructFromObject(data, obj, 'Number');
            

            if (data.hasOwnProperty('PLACEMENT')) {
                obj['PLACEMENT'] = ApiClient.convertToType(data['PLACEMENT'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlacementMultipliers</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlacementMultipliers</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['PLACEMENT'] && !(typeof data['PLACEMENT'] === 'string' || data['PLACEMENT'] instanceof String)) {
            throw new Error("Expected the field `PLACEMENT` to be a primitive type in the JSON string but got " + data['PLACEMENT']);
        }

        return true;
    }


}



/**
 * @member {module:model/PlacementMultipliers.PLACEMENTEnum} PLACEMENT
 */
PlacementMultipliers.prototype['PLACEMENT'] = undefined;





/**
 * Allowed values for the <code>PLACEMENT</code> property.
 * @enum {String}
 * @readonly
 */
PlacementMultipliers['PLACEMENTEnum'] = {

    /**
     * value: "SEARCH"
     * @const
     */
    "SEARCH": "SEARCH",

    /**
     * value: "BROWSE"
     * @const
     */
    "BROWSE": "BROWSE"
};



export default PlacementMultipliers;

