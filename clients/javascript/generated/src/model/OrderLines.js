/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderLinePaidType from './OrderLinePaidType';
import OrderLineStatus from './OrderLineStatus';

/**
 * The OrderLines model module.
 * @module model/OrderLines
 * @version 1.1.1-pre.0
 */
class OrderLines {
    /**
     * Constructs a new <code>OrderLines</code>.
     * Order Line
     * @alias module:model/OrderLines
     */
    constructor() { 
        
        OrderLines.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderLines</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderLines} obj Optional instance to populate.
     * @return {module:model/OrderLines} The populated <code>OrderLines</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderLines();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('ad_account_id')) {
                obj['ad_account_id'] = ApiClient.convertToType(data['ad_account_id'], 'String');
            }
            if (data.hasOwnProperty('purchase_order_id')) {
                obj['purchase_order_id'] = ApiClient.convertToType(data['purchase_order_id'], 'String');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Number');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'Number');
            }
            if (data.hasOwnProperty('budget')) {
                obj['budget'] = ApiClient.convertToType(data['budget'], 'Number');
            }
            if (data.hasOwnProperty('paid_budget')) {
                obj['paid_budget'] = ApiClient.convertToType(data['paid_budget'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], OrderLineStatus);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('paid_type')) {
                obj['paid_type'] = ApiClient.convertToType(data['paid_type'], OrderLinePaidType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderLines</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderLines</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['ad_account_id'] && !(typeof data['ad_account_id'] === 'string' || data['ad_account_id'] instanceof String)) {
            throw new Error("Expected the field `ad_account_id` to be a primitive type in the JSON string but got " + data['ad_account_id']);
        }
        // ensure the json data is a string
        if (data['purchase_order_id'] && !(typeof data['purchase_order_id'] === 'string' || data['purchase_order_id'] instanceof String)) {
            throw new Error("Expected the field `purchase_order_id` to be a primitive type in the JSON string but got " + data['purchase_order_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Order line ID.
 * @member {String} id
 */
OrderLines.prototype['id'] = undefined;

/**
 * Always \"orderline\".
 * @member {String} type
 */
OrderLines.prototype['type'] = undefined;

/**
 * Ad account ID.
 * @member {String} ad_account_id
 */
OrderLines.prototype['ad_account_id'] = undefined;

/**
 * Purchase order ID.
 * @member {String} purchase_order_id
 */
OrderLines.prototype['purchase_order_id'] = undefined;

/**
 * Start time. Unix timestamp.
 * @member {Number} start_time
 */
OrderLines.prototype['start_time'] = undefined;

/**
 * End time. Unix timestamp.
 * @member {Number} end_time
 */
OrderLines.prototype['end_time'] = undefined;

/**
 * Order line budget in micro currency.
 * @member {Number} budget
 */
OrderLines.prototype['budget'] = undefined;

/**
 * Order line paid budget in micro currency.
 * @member {Number} paid_budget
 */
OrderLines.prototype['paid_budget'] = undefined;

/**
 * Order line status.
 * @member {module:model/OrderLineStatus} status
 */
OrderLines.prototype['status'] = undefined;

/**
 * Order line name.
 * @member {String} name
 */
OrderLines.prototype['name'] = undefined;

/**
 * Order line paid type.
 * @member {module:model/OrderLinePaidType} paid_type
 */
OrderLines.prototype['paid_type'] = undefined;






export default OrderLines;

