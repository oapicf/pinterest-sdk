/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetGroupType from './AssetGroupType';

/**
 * The UpdateAssetGroupBodyAssetGroupsToUpdateInner model module.
 * @module model/UpdateAssetGroupBodyAssetGroupsToUpdateInner
 * @version 1.1.1-pre.0
 */
class UpdateAssetGroupBodyAssetGroupsToUpdateInner {
    /**
     * Constructs a new <code>UpdateAssetGroupBodyAssetGroupsToUpdateInner</code>.
     * @alias module:model/UpdateAssetGroupBodyAssetGroupsToUpdateInner
     * @param assetGroupId {String} Unique identifier of the asset group to update.
     */
    constructor(assetGroupId) { 
        
        UpdateAssetGroupBodyAssetGroupsToUpdateInner.initialize(this, assetGroupId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetGroupId) { 
        obj['asset_group_id'] = assetGroupId;
    }

    /**
     * Constructs a <code>UpdateAssetGroupBodyAssetGroupsToUpdateInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateAssetGroupBodyAssetGroupsToUpdateInner} obj Optional instance to populate.
     * @return {module:model/UpdateAssetGroupBodyAssetGroupsToUpdateInner} The populated <code>UpdateAssetGroupBodyAssetGroupsToUpdateInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateAssetGroupBodyAssetGroupsToUpdateInner();

            if (data.hasOwnProperty('asset_group_id')) {
                obj['asset_group_id'] = ApiClient.convertToType(data['asset_group_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('asset_group_types')) {
                obj['asset_group_types'] = ApiClient.convertToType(data['asset_group_types'], [AssetGroupType]);
            }
            if (data.hasOwnProperty('assets_to_add')) {
                obj['assets_to_add'] = ApiClient.convertToType(data['assets_to_add'], ['String']);
            }
            if (data.hasOwnProperty('assets_to_remove')) {
                obj['assets_to_remove'] = ApiClient.convertToType(data['assets_to_remove'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateAssetGroupBodyAssetGroupsToUpdateInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateAssetGroupBodyAssetGroupsToUpdateInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateAssetGroupBodyAssetGroupsToUpdateInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['asset_group_id'] && !(typeof data['asset_group_id'] === 'string' || data['asset_group_id'] instanceof String)) {
            throw new Error("Expected the field `asset_group_id` to be a primitive type in the JSON string but got " + data['asset_group_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['asset_group_types'])) {
            throw new Error("Expected the field `asset_group_types` to be an array in the JSON data but got " + data['asset_group_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['assets_to_add'])) {
            throw new Error("Expected the field `assets_to_add` to be an array in the JSON data but got " + data['assets_to_add']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['assets_to_remove'])) {
            throw new Error("Expected the field `assets_to_remove` to be an array in the JSON data but got " + data['assets_to_remove']);
        }

        return true;
    }


}

UpdateAssetGroupBodyAssetGroupsToUpdateInner.RequiredProperties = ["asset_group_id"];

/**
 * Unique identifier of the asset group to update.
 * @member {String} asset_group_id
 */
UpdateAssetGroupBodyAssetGroupsToUpdateInner.prototype['asset_group_id'] = undefined;

/**
 * Asset Group name
 * @member {String} name
 */
UpdateAssetGroupBodyAssetGroupsToUpdateInner.prototype['name'] = undefined;

/**
 * Asset group description
 * @member {String} description
 */
UpdateAssetGroupBodyAssetGroupsToUpdateInner.prototype['description'] = undefined;

/**
 * Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
 * @member {Array.<module:model/AssetGroupType>} asset_group_types
 */
UpdateAssetGroupBodyAssetGroupsToUpdateInner.prototype['asset_group_types'] = undefined;

/**
 * A list of asset ids to add to the asset group.
 * @member {Array.<String>} assets_to_add
 */
UpdateAssetGroupBodyAssetGroupsToUpdateInner.prototype['assets_to_add'] = undefined;

/**
 * A list of asset ids to remove from the asset group.
 * @member {Array.<String>} assets_to_remove
 */
UpdateAssetGroupBodyAssetGroupsToUpdateInner.prototype['assets_to_remove'] = undefined;






export default UpdateAssetGroupBodyAssetGroupsToUpdateInner;

