/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogsFeedIngestionErrors from './CatalogsFeedIngestionErrors';
import CatalogsFeedIngestionInfo from './CatalogsFeedIngestionInfo';
import CatalogsFeedIngestionWarnings from './CatalogsFeedIngestionWarnings';

/**
 * The CatalogsFeedIngestionDetails model module.
 * @module model/CatalogsFeedIngestionDetails
 * @version 1.1.1-pre.0
 */
class CatalogsFeedIngestionDetails {
    /**
     * Constructs a new <code>CatalogsFeedIngestionDetails</code>.
     * @alias module:model/CatalogsFeedIngestionDetails
     * @param errors {module:model/CatalogsFeedIngestionErrors} 
     * @param info {module:model/CatalogsFeedIngestionInfo} 
     * @param warnings {module:model/CatalogsFeedIngestionWarnings} 
     */
    constructor(errors, info, warnings) { 
        
        CatalogsFeedIngestionDetails.initialize(this, errors, info, warnings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, errors, info, warnings) { 
        obj['errors'] = errors;
        obj['info'] = info;
        obj['warnings'] = warnings;
    }

    /**
     * Constructs a <code>CatalogsFeedIngestionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogsFeedIngestionDetails} obj Optional instance to populate.
     * @return {module:model/CatalogsFeedIngestionDetails} The populated <code>CatalogsFeedIngestionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogsFeedIngestionDetails();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = CatalogsFeedIngestionErrors.constructFromObject(data['errors']);
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = CatalogsFeedIngestionInfo.constructFromObject(data['info']);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = CatalogsFeedIngestionWarnings.constructFromObject(data['warnings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogsFeedIngestionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogsFeedIngestionDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogsFeedIngestionDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `errors`
        if (data['errors']) { // data not null
          CatalogsFeedIngestionErrors.validateJSON(data['errors']);
        }
        // validate the optional field `info`
        if (data['info']) { // data not null
          CatalogsFeedIngestionInfo.validateJSON(data['info']);
        }
        // validate the optional field `warnings`
        if (data['warnings']) { // data not null
          CatalogsFeedIngestionWarnings.validateJSON(data['warnings']);
        }

        return true;
    }


}

CatalogsFeedIngestionDetails.RequiredProperties = ["errors", "info", "warnings"];

/**
 * @member {module:model/CatalogsFeedIngestionErrors} errors
 */
CatalogsFeedIngestionDetails.prototype['errors'] = undefined;

/**
 * @member {module:model/CatalogsFeedIngestionInfo} info
 */
CatalogsFeedIngestionDetails.prototype['info'] = undefined;

/**
 * @member {module:model/CatalogsFeedIngestionWarnings} warnings
 */
CatalogsFeedIngestionDetails.prototype['warnings'] = undefined;






export default CatalogsFeedIngestionDetails;

