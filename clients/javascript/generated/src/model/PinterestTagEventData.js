/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';
import LineItem from './LineItem';

/**
 * The PinterestTagEventData model module.
 * @module model/PinterestTagEventData
 * @version 1.1.1-pre.0
 */
class PinterestTagEventData {
    /**
     * Constructs a new <code>PinterestTagEventData</code>.
     * Optional for VISITOR &#x60;audience_type&#x60;. With the Pinterest tag, you can use event data to capture event details from your website. This object lists all the available predefined event data fields in the Pinterest tag. You can include these event data fields as part of a VISITOR audience’ s &#x60;rule&#x60;; however, you **must** specify an &#x60;event&#x60; for the &#x60;event_data&#x60; fields to be evaluated. Besides what’s listed, you can also create your own set of &#x60;event_data&#x60; fields and define their usages or purposes according to your website needs. However, the benefit of using the predefined event data fields is that we can provide various metrics based on those fields&#39; data.&lt;br&gt;Examples per &#x60;event&#x60; type:&lt;br&gt;&#x60;pagevisit&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;page_name\&quot;: \&quot;My online store 123 | view items | shoe\&quot; }&lt;br&gt;&#x60;signup&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;lead_type\&quot;: \&quot;New release promotion\&quot; }&lt;br&gt;&#x60;checkout&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;value\&quot;: 116, \&quot;order_quantity\&quot;: 2, \&quot;currency\&quot;: \&quot;USD\&quot;, \&quot;line_items\&quot;: [ { \&quot;product_name\&quot;: \&quot;Pillows (Set of 2)\&quot;, \&quot;product_id\&quot;: \&quot;11\&quot;, \&quot;product_price\&quot;: 48, \&quot;product_quantity\&quot;: 1 }, { \&quot;product_name\&quot;: \&quot;Pillows, Large (Set of 2)\&quot;, \&quot;product_id\&quot;: \&quot;15\&quot;, \&quot;product_price\&quot;: 68, \&quot;product_quantity\&quot;: 1 } ] }&lt;br&gt;&#x60;addtocart&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;value\&quot;: 499, \&quot;order_quantity\&quot;: 1, \&quot;currency\&quot;: \&quot;USD\&quot;, \&quot;line_items\&quot;: [ { \&quot;product_name\&quot;: \&quot;Red leather boots\&quot;, \&quot;product_id\&quot;: \&quot;3486\&quot;, \&quot;product_category\&quot;: \&quot;shoe\&quot;, \&quot;product_variant_id\&quot;: \&quot;JB11103000\&quot;, \&quot;product_price\&quot;: 499, \&quot;product_quantity\&quot;: \&quot;1\&quot; , \&quot;product_brand\&quot;: \&quot;My brand\&quot; }]}&lt;br&gt;&#x60;watchvideo&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;video_title\&quot;: \&quot;My Product Video 01\&quot; }&lt;br&gt;&#x60;lead&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;lead_type\&quot;: \&quot;Newsletter\&quot; }
     * @alias module:model/PinterestTagEventData
     */
    constructor() { 
        
        PinterestTagEventData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PinterestTagEventData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PinterestTagEventData} obj Optional instance to populate.
     * @return {module:model/PinterestTagEventData} The populated <code>PinterestTagEventData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PinterestTagEventData();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('lead_type')) {
                obj['lead_type'] = ApiClient.convertToType(data['lead_type'], 'String');
            }
            if (data.hasOwnProperty('line_items')) {
                obj['line_items'] = LineItem.constructFromObject(data['line_items']);
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('order_quantity')) {
                obj['order_quantity'] = ApiClient.convertToType(data['order_quantity'], 'Number');
            }
            if (data.hasOwnProperty('page_name')) {
                obj['page_name'] = ApiClient.convertToType(data['page_name'], 'String');
            }
            if (data.hasOwnProperty('promo_code')) {
                obj['promo_code'] = ApiClient.convertToType(data['promo_code'], 'String');
            }
            if (data.hasOwnProperty('property')) {
                obj['property'] = ApiClient.convertToType(data['property'], 'String');
            }
            if (data.hasOwnProperty('search_query')) {
                obj['search_query'] = ApiClient.convertToType(data['search_query'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('video_title')) {
                obj['video_title'] = ApiClient.convertToType(data['video_title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PinterestTagEventData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PinterestTagEventData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lead_type'] && !(typeof data['lead_type'] === 'string' || data['lead_type'] instanceof String)) {
            throw new Error("Expected the field `lead_type` to be a primitive type in the JSON string but got " + data['lead_type']);
        }
        // validate the optional field `line_items`
        if (data['line_items']) { // data not null
          LineItem.validateJSON(data['line_items']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['page_name'] && !(typeof data['page_name'] === 'string' || data['page_name'] instanceof String)) {
            throw new Error("Expected the field `page_name` to be a primitive type in the JSON string but got " + data['page_name']);
        }
        // ensure the json data is a string
        if (data['promo_code'] && !(typeof data['promo_code'] === 'string' || data['promo_code'] instanceof String)) {
            throw new Error("Expected the field `promo_code` to be a primitive type in the JSON string but got " + data['promo_code']);
        }
        // ensure the json data is a string
        if (data['property'] && !(typeof data['property'] === 'string' || data['property'] instanceof String)) {
            throw new Error("Expected the field `property` to be a primitive type in the JSON string but got " + data['property']);
        }
        // ensure the json data is a string
        if (data['search_query'] && !(typeof data['search_query'] === 'string' || data['search_query'] instanceof String)) {
            throw new Error("Expected the field `search_query` to be a primitive type in the JSON string but got " + data['search_query']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['video_title'] && !(typeof data['video_title'] === 'string' || data['video_title'] instanceof String)) {
            throw new Error("Expected the field `video_title` to be a primitive type in the JSON string but got " + data['video_title']);
        }

        return true;
    }


}



/**
 * @member {module:model/Currency} currency
 */
PinterestTagEventData.prototype['currency'] = undefined;

/**
 * Promotion code. For example, \"Newsletter\".
 * @member {String} lead_type
 */
PinterestTagEventData.prototype['lead_type'] = undefined;

/**
 * @member {module:model/LineItem} line_items
 */
PinterestTagEventData.prototype['line_items'] = undefined;

/**
 * Order ID. For example, \"X-151481\".
 * @member {String} order_id
 */
PinterestTagEventData.prototype['order_id'] = undefined;

/**
 * Order quantity. For example, 1.
 * @member {Number} order_quantity
 */
PinterestTagEventData.prototype['order_quantity'] = undefined;

/**
 * Page name. For example, \"Our Favorite Pins on Pinterest\".
 * @member {String} page_name
 */
PinterestTagEventData.prototype['page_name'] = undefined;

/**
 * Promotion code. For example, \"WINTER10\".
 * @member {String} promo_code
 */
PinterestTagEventData.prototype['promo_code'] = undefined;

/**
 * Property. For example, \"Athleta\".
 * @member {String} property
 */
PinterestTagEventData.prototype['property'] = undefined;

/**
 * Search query string. For example, \"boots\".
 * @member {String} search_query
 */
PinterestTagEventData.prototype['search_query'] = undefined;

/**
 * Product value. For example, \"199.98\"
 * @member {String} value
 */
PinterestTagEventData.prototype['value'] = undefined;

/**
 * Video title. For example, \"How to style your Parker Boots\".
 * @member {String} video_title
 */
PinterestTagEventData.prototype['video_title'] = undefined;






export default PinterestTagEventData;

