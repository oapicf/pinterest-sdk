/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InviteType from './InviteType';

/**
 * The CreateMembershipOrPartnershipInvitesBody model module.
 * @module model/CreateMembershipOrPartnershipInvitesBody
 * @version 1.1.1-pre.0
 */
class CreateMembershipOrPartnershipInvitesBody {
    /**
     * Constructs a new <code>CreateMembershipOrPartnershipInvitesBody</code>.
     * Body to be used on path to send Members or Partners Invite or Request
     * @alias module:model/CreateMembershipOrPartnershipInvitesBody
     * @param businessRole {module:model/CreateMembershipOrPartnershipInvitesBody.BusinessRoleEnum} The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
     * @param inviteType {module:model/InviteType} 
     */
    constructor(businessRole, inviteType) { 
        
        CreateMembershipOrPartnershipInvitesBody.initialize(this, businessRole, inviteType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, businessRole, inviteType) { 
        obj['business_role'] = businessRole;
        obj['invite_type'] = inviteType;
    }

    /**
     * Constructs a <code>CreateMembershipOrPartnershipInvitesBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMembershipOrPartnershipInvitesBody} obj Optional instance to populate.
     * @return {module:model/CreateMembershipOrPartnershipInvitesBody} The populated <code>CreateMembershipOrPartnershipInvitesBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMembershipOrPartnershipInvitesBody();

            if (data.hasOwnProperty('business_role')) {
                obj['business_role'] = ApiClient.convertToType(data['business_role'], 'String');
            }
            if (data.hasOwnProperty('invite_type')) {
                obj['invite_type'] = InviteType.constructFromObject(data['invite_type']);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], ['String']);
            }
            if (data.hasOwnProperty('partners')) {
                obj['partners'] = ApiClient.convertToType(data['partners'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMembershipOrPartnershipInvitesBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMembershipOrPartnershipInvitesBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMembershipOrPartnershipInvitesBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['business_role'] && !(typeof data['business_role'] === 'string' || data['business_role'] instanceof String)) {
            throw new Error("Expected the field `business_role` to be a primitive type in the JSON string but got " + data['business_role']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['members'])) {
            throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['partners'])) {
            throw new Error("Expected the field `partners` to be an array in the JSON data but got " + data['partners']);
        }

        return true;
    }


}

CreateMembershipOrPartnershipInvitesBody.RequiredProperties = ["business_role", "invite_type"];

/**
 * The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
 * @member {module:model/CreateMembershipOrPartnershipInvitesBody.BusinessRoleEnum} business_role
 */
CreateMembershipOrPartnershipInvitesBody.prototype['business_role'] = undefined;

/**
 * @member {module:model/InviteType} invite_type
 */
CreateMembershipOrPartnershipInvitesBody.prototype['invite_type'] = undefined;

/**
 * A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE
 * @member {Array.<String>} members
 */
CreateMembershipOrPartnershipInvitesBody.prototype['members'] = undefined;

/**
 * A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST
 * @member {Array.<String>} partners
 */
CreateMembershipOrPartnershipInvitesBody.prototype['partners'] = undefined;





/**
 * Allowed values for the <code>business_role</code> property.
 * @enum {String}
 * @readonly
 */
CreateMembershipOrPartnershipInvitesBody['BusinessRoleEnum'] = {

    /**
     * value: "EMPLOYEE"
     * @const
     */
    "EMPLOYEE": "EMPLOYEE",

    /**
     * value: "BIZ_ADMIN"
     * @const
     */
    "BIZ_ADMIN": "BIZ_ADMIN",

    /**
     * value: "PARTNER"
     * @const
     */
    "PARTNER": "PARTNER"
};



export default CreateMembershipOrPartnershipInvitesBody;

