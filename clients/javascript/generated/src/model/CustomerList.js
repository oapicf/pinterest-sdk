/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomerList model module.
 * @module model/CustomerList
 * @version 1.1.1-pre.0
 */
class CustomerList {
    /**
     * Constructs a new <code>CustomerList</code>.
     * @alias module:model/CustomerList
     */
    constructor() { 
        
        CustomerList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerList} obj Optional instance to populate.
     * @return {module:model/CustomerList} The populated <code>CustomerList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerList();

            if (data.hasOwnProperty('ad_account_id')) {
                obj['ad_account_id'] = ApiClient.convertToType(data['ad_account_id'], 'String');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('num_batches')) {
                obj['num_batches'] = ApiClient.convertToType(data['num_batches'], 'Number');
            }
            if (data.hasOwnProperty('num_removed_user_records')) {
                obj['num_removed_user_records'] = ApiClient.convertToType(data['num_removed_user_records'], 'Number');
            }
            if (data.hasOwnProperty('num_uploaded_user_records')) {
                obj['num_uploaded_user_records'] = ApiClient.convertToType(data['num_uploaded_user_records'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updated_time')) {
                obj['updated_time'] = ApiClient.convertToType(data['updated_time'], 'Number');
            }
            if (data.hasOwnProperty('exceptions')) {
                obj['exceptions'] = ApiClient.convertToType(data['exceptions'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ad_account_id'] && !(typeof data['ad_account_id'] === 'string' || data['ad_account_id'] instanceof String)) {
            throw new Error("Expected the field `ad_account_id` to be a primitive type in the JSON string but got " + data['ad_account_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Associated ad account ID.
 * @member {String} ad_account_id
 */
CustomerList.prototype['ad_account_id'] = undefined;

/**
 * Creation time. Unix timestamp in seconds.
 * @member {Number} created_time
 */
CustomerList.prototype['created_time'] = undefined;

/**
 * Customer list ID.
 * @member {String} id
 */
CustomerList.prototype['id'] = undefined;

/**
 * Customer list name.
 * @member {String} name
 */
CustomerList.prototype['name'] = undefined;

/**
 * Total number of list updates.  List creation counts as one batch. Each <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append</a> or <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
 * @member {Number} num_batches
 */
CustomerList.prototype['num_batches'] = undefined;

/**
 * Number of removed user records. In a <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call, this counter increases even if the user is not found in the list.
 * @member {Number} num_removed_user_records
 */
CustomerList.prototype['num_removed_user_records'] = undefined;

/**
 * Number of uploaded user records. In an <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append API</a> call, this counter increases even if the uploaded user is already in the list.
 * @member {Number} num_uploaded_user_records
 */
CustomerList.prototype['num_uploaded_user_records'] = undefined;

/**
 * Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
 * @member {module:model/CustomerList.StatusEnum} status
 */
CustomerList.prototype['status'] = undefined;

/**
 * Always \"customerlist\".
 * @member {String} type
 */
CustomerList.prototype['type'] = undefined;

/**
 * Last update time. Unix timestamp in seconds.
 * @member {Number} updated_time
 */
CustomerList.prototype['updated_time'] = undefined;

/**
 * Customer list errors
 * @member {Object} exceptions
 */
CustomerList.prototype['exceptions'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CustomerList['StatusEnum'] = {

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "READY"
     * @const
     */
    "READY": "READY",

    /**
     * value: "TOO_SMALL"
     * @const
     */
    "TOO_SMALL": "TOO_SMALL",

    /**
     * value: "UPLOADING"
     * @const
     */
    "UPLOADING": "UPLOADING"
};



export default CustomerList;

