/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdAccountsAudiencesSharedAccountsList200Response from '../model/AdAccountsAudiencesSharedAccountsList200Response';
import AudienceAccountType from '../model/AudienceAccountType';
import AudiencesList200Response from '../model/AudiencesList200Response';
import BusinessSharedAudience from '../model/BusinessSharedAudience';
import BusinessSharedAudienceResponse from '../model/BusinessSharedAudienceResponse';
import Error from '../model/Error';
import SharedAudience from '../model/SharedAudience';
import SharedAudienceResponse from '../model/SharedAudienceResponse';

/**
* AudienceSharing service.
* @module api/AudienceSharingApi
* @version 1.1.1-pre.0
*/
export default class AudienceSharingApi {

    /**
    * Constructs a new AudienceSharingApi. 
    * @alias module:api/AudienceSharingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adAccountsAudiencesSharedAccountsList operation.
     * @callback module:api/AudienceSharingApi~adAccountsAudiencesSharedAccountsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountsAudiencesSharedAccountsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List accounts with access to an audience owned by an ad account
     * List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} audienceId Unique identifier of the audience to use to filter the results.
     * @param {module:model/AudienceAccountType} accountType Filter accounts by account type.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/AudienceSharingApi~adAccountsAudiencesSharedAccountsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountsAudiencesSharedAccountsList200Response}
     */
    adAccountsAudiencesSharedAccountsList(adAccountId, audienceId, accountType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountsAudiencesSharedAccountsList");
      }
      // verify the required parameter 'audienceId' is set
      if (audienceId === undefined || audienceId === null) {
        throw new Error("Missing the required parameter 'audienceId' when calling adAccountsAudiencesSharedAccountsList");
      }
      // verify the required parameter 'accountType' is set
      if (accountType === undefined || accountType === null) {
        throw new Error("Missing the required parameter 'accountType' when calling adAccountsAudiencesSharedAccountsList");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'audience_id': audienceId,
        'account_type': accountType,
        'page_size': opts['pageSize'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccountsAudiencesSharedAccountsList200Response;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/audiences/shared/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessAccountAudiencesSharedAccountsList operation.
     * @callback module:api/AudienceSharingApi~businessAccountAudiencesSharedAccountsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountsAudiencesSharedAccountsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List accounts with access to an audience owned by a business
     * List all ad accounts and/or businesses that have access to a specific audience. The audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business. If the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {String} audienceId Unique identifier of the audience to use to filter the results.
     * @param {module:model/AudienceAccountType} accountType Filter accounts by account type.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/AudienceSharingApi~businessAccountAudiencesSharedAccountsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountsAudiencesSharedAccountsList200Response}
     */
    businessAccountAudiencesSharedAccountsList(businessId, audienceId, accountType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessAccountAudiencesSharedAccountsList");
      }
      // verify the required parameter 'audienceId' is set
      if (audienceId === undefined || audienceId === null) {
        throw new Error("Missing the required parameter 'audienceId' when calling businessAccountAudiencesSharedAccountsList");
      }
      // verify the required parameter 'accountType' is set
      if (accountType === undefined || accountType === null) {
        throw new Error("Missing the required parameter 'accountType' when calling businessAccountAudiencesSharedAccountsList");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
        'audience_id': audienceId,
        'account_type': accountType,
        'page_size': opts['pageSize'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccountsAudiencesSharedAccountsList200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/audiences/shared/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sharedAudiencesForBusinessList operation.
     * @callback module:api/AudienceSharingApi~sharedAudiencesForBusinessListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AudiencesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List received audiences for a business
     * Get a list of received audiences for the given business.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:model/String} [order] The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:api/AudienceSharingApi~sharedAudiencesForBusinessListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AudiencesList200Response}
     */
    sharedAudiencesForBusinessList(businessId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling sharedAudiencesForBusinessList");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'order': opts['order'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AudiencesList200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/audiences', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAdAccountToAdAccountSharedAudience operation.
     * @callback module:api/AudienceSharingApi~updateAdAccountToAdAccountSharedAudienceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharedAudienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update audience sharing between ad accounts
     * From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same <a href='https://help.pinterest.com/en/business/article/create-and-manage-accounts'>Pinterest Business Hierarchy</a> as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/SharedAudience} sharedAudience 
     * @param {module:api/AudienceSharingApi~updateAdAccountToAdAccountSharedAudienceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharedAudienceResponse}
     */
    updateAdAccountToAdAccountSharedAudience(adAccountId, sharedAudience, callback) {
      let postBody = sharedAudience;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling updateAdAccountToAdAccountSharedAudience");
      }
      // verify the required parameter 'sharedAudience' is set
      if (sharedAudience === undefined || sharedAudience === null) {
        throw new Error("Missing the required parameter 'sharedAudience' when calling updateAdAccountToAdAccountSharedAudience");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SharedAudienceResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAdAccountToBusinessSharedAudience operation.
     * @callback module:api/AudienceSharingApi~updateAdAccountToBusinessSharedAudienceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessSharedAudienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update audience sharing from an ad account to businesses
     * From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/BusinessSharedAudience} businessSharedAudience 
     * @param {module:api/AudienceSharingApi~updateAdAccountToBusinessSharedAudienceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessSharedAudienceResponse}
     */
    updateAdAccountToBusinessSharedAudience(adAccountId, businessSharedAudience, callback) {
      let postBody = businessSharedAudience;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling updateAdAccountToBusinessSharedAudience");
      }
      // verify the required parameter 'businessSharedAudience' is set
      if (businessSharedAudience === undefined || businessSharedAudience === null) {
        throw new Error("Missing the required parameter 'businessSharedAudience' when calling updateAdAccountToBusinessSharedAudience");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BusinessSharedAudienceResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/audiences/businesses/shared', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBusinessToAdAccountSharedAudience operation.
     * @callback module:api/AudienceSharingApi~updateBusinessToAdAccountSharedAudienceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharedAudienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update audience sharing from a business to ad accounts
     * From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. <ul> <li>If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.</li> <li>If the business is the recipient of the audience, it can share with any of its owned ad accounts.</li> </ul> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/SharedAudience} sharedAudience 
     * @param {module:api/AudienceSharingApi~updateBusinessToAdAccountSharedAudienceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharedAudienceResponse}
     */
    updateBusinessToAdAccountSharedAudience(businessId, sharedAudience, callback) {
      let postBody = sharedAudience;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling updateBusinessToAdAccountSharedAudience");
      }
      // verify the required parameter 'sharedAudience' is set
      if (sharedAudience === undefined || sharedAudience === null) {
        throw new Error("Missing the required parameter 'sharedAudience' when calling updateBusinessToAdAccountSharedAudience");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SharedAudienceResponse;
      return this.apiClient.callApi(
        '/businesses/{business_id}/audiences/ad_accounts/shared', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBusinessToBusinessSharedAudience operation.
     * @callback module:api/AudienceSharingApi~updateBusinessToBusinessSharedAudienceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessSharedAudienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update audience sharing between businesses
     * From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/BusinessSharedAudience} businessSharedAudience 
     * @param {module:api/AudienceSharingApi~updateBusinessToBusinessSharedAudienceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessSharedAudienceResponse}
     */
    updateBusinessToBusinessSharedAudience(businessId, businessSharedAudience, callback) {
      let postBody = businessSharedAudience;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling updateBusinessToBusinessSharedAudience");
      }
      // verify the required parameter 'businessSharedAudience' is set
      if (businessSharedAudience === undefined || businessSharedAudience === null) {
        throw new Error("Missing the required parameter 'businessSharedAudience' when calling updateBusinessToBusinessSharedAudience");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BusinessSharedAudienceResponse;
      return this.apiClient.callApi(
        '/businesses/{business_id}/audiences/businesses/shared', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
