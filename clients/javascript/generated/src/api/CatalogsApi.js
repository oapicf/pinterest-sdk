/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Catalog from '../model/Catalog';
import CatalogsCreateReportResponse from '../model/CatalogsCreateReportResponse';
import CatalogsCreateRequest from '../model/CatalogsCreateRequest';
import CatalogsFeed from '../model/CatalogsFeed';
import CatalogsFeedIngestion from '../model/CatalogsFeedIngestion';
import CatalogsItemValidationIssue from '../model/CatalogsItemValidationIssue';
import CatalogsItems from '../model/CatalogsItems';
import CatalogsItemsBatch from '../model/CatalogsItemsBatch';
import CatalogsItemsFilters from '../model/CatalogsItemsFilters';
import CatalogsItemsRequest from '../model/CatalogsItemsRequest';
import CatalogsList200Response from '../model/CatalogsList200Response';
import CatalogsListProductsByFilterRequest from '../model/CatalogsListProductsByFilterRequest';
import CatalogsProductGroupPinsList200Response from '../model/CatalogsProductGroupPinsList200Response';
import CatalogsProductGroupProductCountsVertical from '../model/CatalogsProductGroupProductCountsVertical';
import CatalogsProductGroupsList200Response from '../model/CatalogsProductGroupsList200Response';
import CatalogsProductGroupsUpdateRequest from '../model/CatalogsProductGroupsUpdateRequest';
import CatalogsReport from '../model/CatalogsReport';
import CatalogsReportParameters from '../model/CatalogsReportParameters';
import CatalogsVerticalProductGroup from '../model/CatalogsVerticalProductGroup';
import Error from '../model/Error';
import FeedProcessingResultsList200Response from '../model/FeedProcessingResultsList200Response';
import FeedsCreateRequest from '../model/FeedsCreateRequest';
import FeedsList200Response from '../model/FeedsList200Response';
import FeedsUpdateRequest from '../model/FeedsUpdateRequest';
import ItemsBatchPostRequest from '../model/ItemsBatchPostRequest';
import ItemsIssuesList200Response from '../model/ItemsIssuesList200Response';
import MultipleProductGroupsInner from '../model/MultipleProductGroupsInner';
import ReportsStats200Response from '../model/ReportsStats200Response';

/**
* Catalogs service.
* @module api/CatalogsApi
* @version 1.1.1-pre.0
*/
export default class CatalogsApi {

    /**
    * Constructs a new CatalogsApi. 
    * @alias module:api/CatalogsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the catalogsCreate operation.
     * @callback module:api/CatalogsApi~catalogsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Catalog} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create catalog
     * Create a new catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: this API only supports the catalog type of HOTEL for now.
     * @param {module:model/CatalogsCreateRequest} catalogsCreateRequest Request object used to created a feed.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Catalog}
     */
    catalogsCreate(catalogsCreateRequest, opts, callback) {
      opts = opts || {};
      let postBody = catalogsCreateRequest;
      // verify the required parameter 'catalogsCreateRequest' is set
      if (catalogsCreateRequest === undefined || catalogsCreateRequest === null) {
        throw new Error("Missing the required parameter 'catalogsCreateRequest' when calling catalogsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Catalog;
      return this.apiClient.callApi(
        '/catalogs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsList operation.
     * @callback module:api/CatalogsApi~catalogsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List catalogs
     * Fetch catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsList200Response}
     */
    catalogsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsList200Response;
      return this.apiClient.callApi(
        '/catalogs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupPinsList operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupPinsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsProductGroupPinsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List products by product group
     * Get a list of product pins for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {String} productGroupId Unique identifier of a product group
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {Boolean} [pinMetrics = false)] Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
     * @param {module:api/CatalogsApi~catalogsProductGroupPinsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsProductGroupPinsList200Response}
     */
    catalogsProductGroupPinsList(productGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'productGroupId' is set
      if (productGroupId === undefined || productGroupId === null) {
        throw new Error("Missing the required parameter 'productGroupId' when calling catalogsProductGroupPinsList");
      }

      let pathParams = {
        'product_group_id': productGroupId
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'ad_account_id': opts['adAccountId'],
        'pin_metrics': opts['pinMetrics']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsProductGroupPinsList200Response;
      return this.apiClient.callApi(
        '/catalogs/product_groups/{product_group_id}/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsCreate operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsVerticalProductGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create product group
     * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {module:model/MultipleProductGroupsInner} multipleProductGroupsInner Request object used to create a single catalogs product groups.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsVerticalProductGroup}
     */
    catalogsProductGroupsCreate(multipleProductGroupsInner, opts, callback) {
      opts = opts || {};
      let postBody = multipleProductGroupsInner;
      // verify the required parameter 'multipleProductGroupsInner' is set
      if (multipleProductGroupsInner === undefined || multipleProductGroupsInner === null) {
        throw new Error("Missing the required parameter 'multipleProductGroupsInner' when calling catalogsProductGroupsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsVerticalProductGroup;
      return this.apiClient.callApi(
        '/catalogs/product_groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsCreateMany operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsCreateManyCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create product groups
     * Create product group to use in Catalogs owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {Array.<module:model/MultipleProductGroupsInner>} multipleProductGroupsInner Request object used to create one or more catalogs product groups.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsCreateManyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    catalogsProductGroupsCreateMany(multipleProductGroupsInner, opts, callback) {
      opts = opts || {};
      let postBody = multipleProductGroupsInner;
      // verify the required parameter 'multipleProductGroupsInner' is set
      if (multipleProductGroupsInner === undefined || multipleProductGroupsInner === null) {
        throw new Error("Missing the required parameter 'multipleProductGroupsInner' when calling catalogsProductGroupsCreateMany");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/catalogs/product_groups/multiple', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsDelete operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete product group
     * Delete a product group owned by the \"operation user_account\" from being in use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {String} productGroupId Unique identifier of a product group
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    catalogsProductGroupsDelete(productGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'productGroupId' is set
      if (productGroupId === undefined || productGroupId === null) {
        throw new Error("Missing the required parameter 'productGroupId' when calling catalogsProductGroupsDelete");
      }

      let pathParams = {
        'product_group_id': productGroupId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/catalogs/product_groups/{product_group_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsDeleteMany operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsDeleteManyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete product groups
     * Delete product groups owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {Array.<Number>} id Comma-separated list of product group ids
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsDeleteManyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    catalogsProductGroupsDeleteMany(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling catalogsProductGroupsDeleteMany");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': this.apiClient.buildCollectionParam(id, 'csv'),
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/catalogs/product_groups/multiple', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsGet operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsVerticalProductGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get product group
     * Get a singe product group for a given Catalogs Product Group Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {String} productGroupId Unique identifier of a product group
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsVerticalProductGroup}
     */
    catalogsProductGroupsGet(productGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'productGroupId' is set
      if (productGroupId === undefined || productGroupId === null) {
        throw new Error("Missing the required parameter 'productGroupId' when calling catalogsProductGroupsGet");
      }

      let pathParams = {
        'product_group_id': productGroupId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsVerticalProductGroup;
      return this.apiClient.callApi(
        '/catalogs/product_groups/{product_group_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsList operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsProductGroupsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List product groups
     * Get a list of product groups for a given Catalogs Feed Id owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} [id] Comma-separated list of product group ids
     * @param {String} [feedId] Filter entities for a given feed_id. If not given, all feeds are considered.
     * @param {String} [catalogId] Filter entities for a given catalog_id. If not given, all catalogs are considered.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsProductGroupsList200Response}
     */
    catalogsProductGroupsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': this.apiClient.buildCollectionParam(opts['id'], 'csv'),
        'feed_id': opts['feedId'],
        'catalog_id': opts['catalogId'],
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsProductGroupsList200Response;
      return this.apiClient.callApi(
        '/catalogs/product_groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsProductCountsGet operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsProductCountsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsProductGroupProductCountsVertical} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get product counts
     * Get a product counts for a given Catalogs Product Group owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {String} productGroupId Unique identifier of a product group
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsProductCountsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsProductGroupProductCountsVertical}
     */
    catalogsProductGroupsProductCountsGet(productGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'productGroupId' is set
      if (productGroupId === undefined || productGroupId === null) {
        throw new Error("Missing the required parameter 'productGroupId' when calling catalogsProductGroupsProductCountsGet");
      }

      let pathParams = {
        'product_group_id': productGroupId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsProductGroupProductCountsVertical;
      return this.apiClient.callApi(
        '/catalogs/product_groups/{product_group_id}/product_counts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogsProductGroupsUpdate operation.
     * @callback module:api/CatalogsApi~catalogsProductGroupsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsVerticalProductGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update single product group
     * Update product group owned by the \"operation user_account\" to use in Catalogs. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {String} productGroupId Unique identifier of a product group
     * @param {module:model/CatalogsProductGroupsUpdateRequest} catalogsProductGroupsUpdateRequest Request object used to Update a catalogs product group.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~catalogsProductGroupsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsVerticalProductGroup}
     */
    catalogsProductGroupsUpdate(productGroupId, catalogsProductGroupsUpdateRequest, opts, callback) {
      opts = opts || {};
      let postBody = catalogsProductGroupsUpdateRequest;
      // verify the required parameter 'productGroupId' is set
      if (productGroupId === undefined || productGroupId === null) {
        throw new Error("Missing the required parameter 'productGroupId' when calling catalogsProductGroupsUpdate");
      }
      // verify the required parameter 'catalogsProductGroupsUpdateRequest' is set
      if (catalogsProductGroupsUpdateRequest === undefined || catalogsProductGroupsUpdateRequest === null) {
        throw new Error("Missing the required parameter 'catalogsProductGroupsUpdateRequest' when calling catalogsProductGroupsUpdate");
      }

      let pathParams = {
        'product_group_id': productGroupId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsVerticalProductGroup;
      return this.apiClient.callApi(
        '/catalogs/product_groups/{product_group_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedProcessingResultsList operation.
     * @callback module:api/CatalogsApi~feedProcessingResultsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FeedProcessingResultsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List feed processing results
     * Fetch a feed processing results owned by the \"operation user_account\". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {String} feedId Unique identifier of a feed
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedProcessingResultsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FeedProcessingResultsList200Response}
     */
    feedProcessingResultsList(feedId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'feedId' is set
      if (feedId === undefined || feedId === null) {
        throw new Error("Missing the required parameter 'feedId' when calling feedProcessingResultsList");
      }

      let pathParams = {
        'feed_id': feedId
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FeedProcessingResultsList200Response;
      return this.apiClient.callApi(
        '/catalogs/feeds/{feed_id}/processing_results', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedsCreate operation.
     * @callback module:api/CatalogsApi~feedsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsFeed} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create feed
     * Create a new feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Please, be aware that \"default_country\" and \"default_locale\" are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {module:model/FeedsCreateRequest} feedsCreateRequest Request object used to created a feed.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsFeed}
     */
    feedsCreate(feedsCreateRequest, opts, callback) {
      opts = opts || {};
      let postBody = feedsCreateRequest;
      // verify the required parameter 'feedsCreateRequest' is set
      if (feedsCreateRequest === undefined || feedsCreateRequest === null) {
        throw new Error("Missing the required parameter 'feedsCreateRequest' when calling feedsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsFeed;
      return this.apiClient.callApi(
        '/catalogs/feeds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedsDelete operation.
     * @callback module:api/CatalogsApi~feedsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete feed
     * Delete a feed owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.
     * @param {String} feedId Unique identifier of a feed
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    feedsDelete(feedId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'feedId' is set
      if (feedId === undefined || feedId === null) {
        throw new Error("Missing the required parameter 'feedId' when calling feedsDelete");
      }

      let pathParams = {
        'feed_id': feedId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/catalogs/feeds/{feed_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedsGet operation.
     * @callback module:api/CatalogsApi~feedsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsFeed} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get feed
     * Get a single feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.
     * @param {String} feedId Unique identifier of a feed
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsFeed}
     */
    feedsGet(feedId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'feedId' is set
      if (feedId === undefined || feedId === null) {
        throw new Error("Missing the required parameter 'feedId' when calling feedsGet");
      }

      let pathParams = {
        'feed_id': feedId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsFeed;
      return this.apiClient.callApi(
        '/catalogs/feeds/{feed_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedsIngest operation.
     * @callback module:api/CatalogsApi~feedsIngestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsFeedIngestion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Ingest feed items
     * Ingest items for a given feed owned by the \"operation user_account\".  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {String} feedId Unique identifier of a feed
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedsIngestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsFeedIngestion}
     */
    feedsIngest(feedId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'feedId' is set
      if (feedId === undefined || feedId === null) {
        throw new Error("Missing the required parameter 'feedId' when calling feedsIngest");
      }

      let pathParams = {
        'feed_id': feedId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsFeedIngestion;
      return this.apiClient.callApi(
        '/catalogs/feeds/{feed_id}/ingest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedsList operation.
     * @callback module:api/CatalogsApi~feedsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FeedsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List feeds
     * Fetch feeds owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [catalogId] Filter entities for a given catalog_id. If not given, all catalogs are considered.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FeedsList200Response}
     */
    feedsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'catalog_id': opts['catalogId'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FeedsList200Response;
      return this.apiClient.callApi(
        '/catalogs/feeds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the feedsUpdate operation.
     * @callback module:api/CatalogsApi~feedsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsFeed} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update feed
     * Update a feed owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to <a href='https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href='/docs/api-features/shopping-overview/'>Pinterest API for shopping</a>.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {String} feedId Unique identifier of a feed
     * @param {module:model/FeedsUpdateRequest} feedsUpdateRequest Request object used to update a feed.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~feedsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsFeed}
     */
    feedsUpdate(feedId, feedsUpdateRequest, opts, callback) {
      opts = opts || {};
      let postBody = feedsUpdateRequest;
      // verify the required parameter 'feedId' is set
      if (feedId === undefined || feedId === null) {
        throw new Error("Missing the required parameter 'feedId' when calling feedsUpdate");
      }
      // verify the required parameter 'feedsUpdateRequest' is set
      if (feedsUpdateRequest === undefined || feedsUpdateRequest === null) {
        throw new Error("Missing the required parameter 'feedsUpdateRequest' when calling feedsUpdate");
      }

      let pathParams = {
        'feed_id': feedId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsFeed;
      return this.apiClient.callApi(
        '/catalogs/feeds/{feed_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the itemsBatchGet operation.
     * @callback module:api/CatalogsApi~itemsBatchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsItemsBatch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get item batch status
     * Get a single catalogs items batch owned by the \"operating user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param {String} batchId Id of a catalogs items batch to fetch
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~itemsBatchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsItemsBatch}
     */
    itemsBatchGet(batchId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'batchId' is set
      if (batchId === undefined || batchId === null) {
        throw new Error("Missing the required parameter 'batchId' when calling itemsBatchGet");
      }

      let pathParams = {
        'batch_id': batchId
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsItemsBatch;
      return this.apiClient.callApi(
        '/catalogs/items/batch/{batch_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the itemsBatchPost operation.
     * @callback module:api/CatalogsApi~itemsBatchPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsItemsBatch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Operate on item batch
     * This endpoint supports multiple operations on a set of one or more catalog items owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
     * @param {module:model/ItemsBatchPostRequest} itemsBatchPostRequest Request object used to create catalogs items in a batch
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~itemsBatchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsItemsBatch}
     */
    itemsBatchPost(itemsBatchPostRequest, opts, callback) {
      opts = opts || {};
      let postBody = itemsBatchPostRequest;
      // verify the required parameter 'itemsBatchPostRequest' is set
      if (itemsBatchPostRequest === undefined || itemsBatchPostRequest === null) {
        throw new Error("Missing the required parameter 'itemsBatchPostRequest' when calling itemsBatchPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2', 'client_credentials'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsItemsBatch;
      return this.apiClient.callApi(
        '/catalogs/items/batch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the itemsGet operation.
     * @callback module:api/CatalogsApi~itemsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsItems} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get catalogs items
     * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use <a href='/docs/api/v5/#operation/items/post'>Get catalogs items (POST)</a> instead.
     * @param {String} country Country for the Catalogs Items
     * @param {String} language Language for the Catalogs Items
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {Array.<String>} [itemIds] This parameter is deprecated. Use filters instead.
     * @param {module:model/CatalogsItemsFilters} [filters] Identifies items to be retrieved. This is a required parameter.
     * @param {module:api/CatalogsApi~itemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsItems}
     */
    itemsGet(country, language, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling itemsGet");
      }
      // verify the required parameter 'language' is set
      if (language === undefined || language === null) {
        throw new Error("Missing the required parameter 'language' when calling itemsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId'],
        'country': country,
        'language': language,
        'item_ids': this.apiClient.buildCollectionParam(opts['itemIds'], 'multi'),
        'filters': opts['filters']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsItems;
      return this.apiClient.callApi(
        '/catalogs/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the itemsIssuesList operation.
     * @callback module:api/CatalogsApi~itemsIssuesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsIssuesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List item issues
     * List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters 'item_numbers' and 'item_validation_issue' cannot be used simultaneously until it is implemented in some release in the future. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to <a href='/docs/api/v5/#operation/reports/create'>Build catalogs report</a> and <a href='/docs/api/v5/#operation/reports/get'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {String} processingResultId Unique identifier of a feed processing result. It can be acquired from the \"id\" field of the \"items\" array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list).
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {Array.<Number>} [itemNumbers] Item number based on order of appearance in the Catalogs Feed. For example, '0' refers to first item found in a feed that was downloaded from a 'location' specified during feed creation.
     * @param {module:model/CatalogsItemValidationIssue} [itemValidationIssue] Filter item validation issues that have a given type of item validation issue.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~itemsIssuesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsIssuesList200Response}
     */
    itemsIssuesList(processingResultId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'processingResultId' is set
      if (processingResultId === undefined || processingResultId === null) {
        throw new Error("Missing the required parameter 'processingResultId' when calling itemsIssuesList");
      }

      let pathParams = {
        'processing_result_id': processingResultId
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'item_numbers': this.apiClient.buildCollectionParam(opts['itemNumbers'], 'multi'),
        'item_validation_issue': opts['itemValidationIssue'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemsIssuesList200Response;
      return this.apiClient.callApi(
        '/catalogs/processing_results/{processing_result_id}/item_issues', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the itemsPost operation.
     * @callback module:api/CatalogsApi~itemsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsItems} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get catalogs items (POST)
     * Get the items of the catalog owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
     * @param {module:model/CatalogsItemsRequest} catalogsItemsRequest Request object used to get catalogs items
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~itemsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsItems}
     */
    itemsPost(catalogsItemsRequest, opts, callback) {
      opts = opts || {};
      let postBody = catalogsItemsRequest;
      // verify the required parameter 'catalogsItemsRequest' is set
      if (catalogsItemsRequest === undefined || catalogsItemsRequest === null) {
        throw new Error("Missing the required parameter 'catalogsItemsRequest' when calling itemsPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsItems;
      return this.apiClient.callApi(
        '/catalogs/items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productsByProductGroupFilterList operation.
     * @callback module:api/CatalogsApi~productsByProductGroupFilterListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsProductGroupPinsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List products by filter
     * List products Pins owned by the \"operation user_account\" that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  <a href='/docs/api-features/shopping-overview/'>Learn more</a>
     * @param {module:model/CatalogsListProductsByFilterRequest} catalogsListProductsByFilterRequest Object holding a group of filters for a catalog product group
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {Boolean} [pinMetrics = false)] Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
     * @param {module:api/CatalogsApi~productsByProductGroupFilterListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsProductGroupPinsList200Response}
     */
    productsByProductGroupFilterList(catalogsListProductsByFilterRequest, opts, callback) {
      opts = opts || {};
      let postBody = catalogsListProductsByFilterRequest;
      // verify the required parameter 'catalogsListProductsByFilterRequest' is set
      if (catalogsListProductsByFilterRequest === undefined || catalogsListProductsByFilterRequest === null) {
        throw new Error("Missing the required parameter 'catalogsListProductsByFilterRequest' when calling productsByProductGroupFilterList");
      }

      let pathParams = {
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'ad_account_id': opts['adAccountId'],
        'pin_metrics': opts['pinMetrics']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsProductGroupPinsList200Response;
      return this.apiClient.callApi(
        '/catalogs/products/get_by_product_group_filters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsCreate operation.
     * @callback module:api/CatalogsApi~reportsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsCreateReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Build catalogs report
     * Async request to create a report of the catalog owned by the \"operation user_account\". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param {module:model/CatalogsReportParameters} catalogsReportParameters Request object to asynchronously create a report.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~reportsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsCreateReportResponse}
     */
    reportsCreate(catalogsReportParameters, opts, callback) {
      opts = opts || {};
      let postBody = catalogsReportParameters;
      // verify the required parameter 'catalogsReportParameters' is set
      if (catalogsReportParameters === undefined || catalogsReportParameters === null) {
        throw new Error("Missing the required parameter 'catalogsReportParameters' when calling reportsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CatalogsCreateReportResponse;
      return this.apiClient.callApi(
        '/catalogs/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsGet operation.
     * @callback module:api/CatalogsApi~reportsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CatalogsReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get catalogs report
     * This returns a URL to a report given a token returned from <a href='/docs/api/v5/#operation/reports/create'>Build catalogs report</a>. You can use the URL to download the report. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param {String} token Token returned from async build report call
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/CatalogsApi~reportsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CatalogsReport}
     */
    reportsGet(token, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling reportsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId'],
        'token': token
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CatalogsReport;
      return this.apiClient.callApi(
        '/catalogs/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reportsStats operation.
     * @callback module:api/CatalogsApi~reportsStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportsStats200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List report stats
     * List aggregated numbers of issues for a catalog owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.
     * @param {module:model/CatalogsReportParameters} parameters Contains the parameters for report identification.
     * @param {Object} opts Optional parameters
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/CatalogsApi~reportsStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportsStats200Response}
     */
    reportsStats(parameters, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parameters' is set
      if (parameters === undefined || parameters === null) {
        throw new Error("Missing the required parameter 'parameters' when calling reportsStats");
      }

      let pathParams = {
      };
      let queryParams = {
        'ad_account_id': opts['adAccountId'],
        'page_size': opts['pageSize'],
        'bookmark': opts['bookmark'],
        'parameters': parameters
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReportsStats200Response;
      return this.apiClient.callApi(
        '/catalogs/reports/stats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
