/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdAccountCreateSubscriptionRequest from '../model/AdAccountCreateSubscriptionRequest';
import AdAccountCreateSubscriptionResponse from '../model/AdAccountCreateSubscriptionResponse';
import AdAccountGetSubscriptionResponse from '../model/AdAccountGetSubscriptionResponse';
import AdAccountsSubscriptionsGetList200Response from '../model/AdAccountsSubscriptionsGetList200Response';
import Error from '../model/Error';

/**
* LeadAds service.
* @module api/LeadAdsApi
* @version 1.1.1-pre.0
*/
export default class LeadAdsApi {

    /**
    * Constructs a new LeadAdsApi. 
    * @alias module:api/LeadAdsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adAccountsSubscriptionsDelById operation.
     * @callback module:api/LeadAdsApi~adAccountsSubscriptionsDelByIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete lead ads subscription
     * Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} subscriptionId Unique identifier of a subscription.
     * @param {module:api/LeadAdsApi~adAccountsSubscriptionsDelByIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    adAccountsSubscriptionsDelById(adAccountId, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountsSubscriptionsDelById");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling adAccountsSubscriptionsDelById");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'subscription_id': subscriptionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountsSubscriptionsGetById operation.
     * @callback module:api/LeadAdsApi~adAccountsSubscriptionsGetByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountGetSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get lead ads subscription
     * Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} subscriptionId Unique identifier of a subscription.
     * @param {module:api/LeadAdsApi~adAccountsSubscriptionsGetByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountGetSubscriptionResponse}
     */
    adAccountsSubscriptionsGetById(adAccountId, subscriptionId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountsSubscriptionsGetById");
      }
      // verify the required parameter 'subscriptionId' is set
      if (subscriptionId === undefined || subscriptionId === null) {
        throw new Error("Missing the required parameter 'subscriptionId' when calling adAccountsSubscriptionsGetById");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'subscription_id': subscriptionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccountGetSubscriptionResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountsSubscriptionsGetList operation.
     * @callback module:api/LeadAdsApi~adAccountsSubscriptionsGetListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountsSubscriptionsGetList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get lead ads subscriptions
     * Get the advertiser's list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/LeadAdsApi~adAccountsSubscriptionsGetListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountsSubscriptionsGetList200Response}
     */
    adAccountsSubscriptionsGetList(adAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountsSubscriptionsGetList");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'page_size': opts['pageSize'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccountsSubscriptionsGetList200Response;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/leads/subscriptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountsSubscriptionsPost operation.
     * @callback module:api/LeadAdsApi~adAccountsSubscriptionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountCreateSubscriptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create lead ads subscription
     * Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/AdAccountCreateSubscriptionRequest} adAccountCreateSubscriptionRequest Subscription to create.
     * @param {module:api/LeadAdsApi~adAccountsSubscriptionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountCreateSubscriptionResponse}
     */
    adAccountsSubscriptionsPost(adAccountId, adAccountCreateSubscriptionRequest, callback) {
      let postBody = adAccountCreateSubscriptionRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountsSubscriptionsPost");
      }
      // verify the required parameter 'adAccountCreateSubscriptionRequest' is set
      if (adAccountCreateSubscriptionRequest === undefined || adAccountCreateSubscriptionRequest === null) {
        throw new Error("Missing the required parameter 'adAccountCreateSubscriptionRequest' when calling adAccountsSubscriptionsPost");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdAccountCreateSubscriptionResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/leads/subscriptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
