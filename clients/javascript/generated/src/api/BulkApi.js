/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BulkDownloadRequest from '../model/BulkDownloadRequest';
import BulkDownloadResponse from '../model/BulkDownloadResponse';
import BulkUpsertRequest from '../model/BulkUpsertRequest';
import BulkUpsertResponse from '../model/BulkUpsertResponse';
import BulkUpsertStatusResponse from '../model/BulkUpsertStatusResponse';
import Error from '../model/Error';

/**
* Bulk service.
* @module api/BulkApi
* @version 1.1.1-pre.0
*/
export default class BulkApi {

    /**
    * Constructs a new BulkApi. 
    * @alias module:api/BulkApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bulkDownloadCreate operation.
     * @callback module:api/BulkApi~bulkDownloadCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkDownloadResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get advertiser entities in bulk
     * Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/BulkDownloadRequest} bulkDownloadRequest Parameters to get ad entities in bulk
     * @param {module:api/BulkApi~bulkDownloadCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkDownloadResponse}
     */
    bulkDownloadCreate(adAccountId, bulkDownloadRequest, callback) {
      let postBody = bulkDownloadRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling bulkDownloadCreate");
      }
      // verify the required parameter 'bulkDownloadRequest' is set
      if (bulkDownloadRequest === undefined || bulkDownloadRequest === null) {
        throw new Error("Missing the required parameter 'bulkDownloadRequest' when calling bulkDownloadCreate");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkDownloadResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/bulk/download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkRequestGet operation.
     * @callback module:api/BulkApi~bulkRequestGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkUpsertStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download advertiser entities in bulk
     * Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} bulkRequestId Unique identifier of a bulk upsert request.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includeDetails = false)] if set to True then attach the errors/details to all the requests
     * @param {module:api/BulkApi~bulkRequestGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkUpsertStatusResponse}
     */
    bulkRequestGet(adAccountId, bulkRequestId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling bulkRequestGet");
      }
      // verify the required parameter 'bulkRequestId' is set
      if (bulkRequestId === undefined || bulkRequestId === null) {
        throw new Error("Missing the required parameter 'bulkRequestId' when calling bulkRequestGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'bulk_request_id': bulkRequestId
      };
      let queryParams = {
        'include_details': opts['includeDetails']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BulkUpsertStatusResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bulkUpsertCreate operation.
     * @callback module:api/BulkApi~bulkUpsertCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkUpsertResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create/update ad entities in bulk
     * Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a <code>request_id</code> that can be used to obtain the status of the request.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/BulkUpsertRequest} bulkUpsertRequest Parameters to get create/update ad entities in bulk
     * @param {module:api/BulkApi~bulkUpsertCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkUpsertResponse}
     */
    bulkUpsertCreate(adAccountId, bulkUpsertRequest, callback) {
      let postBody = bulkUpsertRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling bulkUpsertCreate");
      }
      // verify the required parameter 'bulkUpsertRequest' is set
      if (bulkUpsertRequest === undefined || bulkUpsertRequest === null) {
        throw new Error("Missing the required parameter 'bulkUpsertRequest' when calling bulkUpsertCreate");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkUpsertResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/bulk/upsert', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
