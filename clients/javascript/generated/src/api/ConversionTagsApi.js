/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConversionEventResponse from '../model/ConversionEventResponse';
import ConversionTagCreate from '../model/ConversionTagCreate';
import ConversionTagListResponse from '../model/ConversionTagListResponse';
import ConversionTagResponse from '../model/ConversionTagResponse';
import Error from '../model/Error';
import PageVisitConversionTagsGet200Response from '../model/PageVisitConversionTagsGet200Response';

/**
* ConversionTags service.
* @module api/ConversionTagsApi
* @version 1.1.1-pre.0
*/
export default class ConversionTagsApi {

    /**
    * Constructs a new ConversionTagsApi. 
    * @alias module:api/ConversionTagsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the conversionTagsCreate operation.
     * @callback module:api/ConversionTagsApi~conversionTagsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConversionTagResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create conversion tag
     * Create a conversion tag, also known as <a href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\" target=\"_blank\">Pinterest tag</a>, with the option to enable enhanced match.<p/> The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account's ad on Pinterest. The advertiser needs to customize this tag to track conversions.<p/> For more information, see:<p/> <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\">Set up the Pinterest tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/\">Pinterest Tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/#enhanced-match\">Enhanced match</a>
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/ConversionTagCreate} conversionTagCreate Conversion Tag to create
     * @param {module:api/ConversionTagsApi~conversionTagsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConversionTagResponse}
     */
    conversionTagsCreate(adAccountId, conversionTagCreate, callback) {
      let postBody = conversionTagCreate;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling conversionTagsCreate");
      }
      // verify the required parameter 'conversionTagCreate' is set
      if (conversionTagCreate === undefined || conversionTagCreate === null) {
        throw new Error("Missing the required parameter 'conversionTagCreate' when calling conversionTagsCreate");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConversionTagResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/conversion_tags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the conversionTagsGet operation.
     * @callback module:api/ConversionTagsApi~conversionTagsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConversionTagResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get conversion tag
     * Get information about an existing conversion tag.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} conversionTagId Id of the conversion tag.
     * @param {module:api/ConversionTagsApi~conversionTagsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConversionTagResponse}
     */
    conversionTagsGet(adAccountId, conversionTagId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling conversionTagsGet");
      }
      // verify the required parameter 'conversionTagId' is set
      if (conversionTagId === undefined || conversionTagId === null) {
        throw new Error("Missing the required parameter 'conversionTagId' when calling conversionTagsGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'conversion_tag_id': conversionTagId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConversionTagResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the conversionTagsList operation.
     * @callback module:api/ConversionTagsApi~conversionTagsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConversionTagListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get conversion tags
     * List conversion tags associated with an ad account.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [filterDeleted = false)] Filter out deleted tags.
     * @param {module:api/ConversionTagsApi~conversionTagsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConversionTagListResponse}
     */
    conversionTagsList(adAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling conversionTagsList");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'filter_deleted': opts['filterDeleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConversionTagListResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/conversion_tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ocpmEligibleConversionTagsGet operation.
     * @callback module:api/ConversionTagsApi~ocpmEligibleConversionTagsGetCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: [ConversionEventResponse]}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Ocpm eligible conversion tags
     * Get Ocpm eligible conversion tag events for an ad account.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:api/ConversionTagsApi~ocpmEligibleConversionTagsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: [ConversionEventResponse]}>}
     */
    ocpmEligibleConversionTagsGet(adAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling ocpmEligibleConversionTagsGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': [ConversionEventResponse]};
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pageVisitConversionTagsGet operation.
     * @callback module:api/ConversionTagsApi~pageVisitConversionTagsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageVisitConversionTagsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get page visit conversion tags
     * Get all page visit conversion tag events for an ad account.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:model/String} [order] The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/ConversionTagsApi~pageVisitConversionTagsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageVisitConversionTagsGet200Response}
     */
    pageVisitConversionTagsGet(adAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling pageVisitConversionTagsGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'page_size': opts['pageSize'],
        'order': opts['order'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageVisitConversionTagsGet200Response;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/conversion_tags/page_visit', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
