/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdAccount from '../model/AdAccount';
import AdAccountAnalyticsResponseInner from '../model/AdAccountAnalyticsResponseInner';
import AdAccountCreateRequest from '../model/AdAccountCreateRequest';
import AdAccountsList200Response from '../model/AdAccountsList200Response';
import AdsAnalyticsCreateAsyncRequest from '../model/AdsAnalyticsCreateAsyncRequest';
import AdsAnalyticsCreateAsyncResponse from '../model/AdsAnalyticsCreateAsyncResponse';
import AdsAnalyticsGetAsyncResponse from '../model/AdsAnalyticsGetAsyncResponse';
import AdsAnalyticsTargetingType from '../model/AdsAnalyticsTargetingType';
import ConversionReportAttributionType from '../model/ConversionReportAttributionType';
import CreateMMMReportRequest from '../model/CreateMMMReportRequest';
import CreateMMMReportResponse from '../model/CreateMMMReportResponse';
import Error from '../model/Error';
import GetMMMReportResponse from '../model/GetMMMReportResponse';
import Granularity from '../model/Granularity';
import MetricsResponse from '../model/MetricsResponse';
import TemplatesList200Response from '../model/TemplatesList200Response';

/**
* AdAccounts service.
* @module api/AdAccountsApi
* @version 1.1.1-pre.0
*/
export default class AdAccountsApi {

    /**
    * Constructs a new AdAccountsApi. 
    * @alias module:api/AdAccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adAccountAnalytics operation.
     * @callback module:api/AdAccountsApi~adAccountAnalyticsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AdAccountAnalyticsResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ad account analytics
     * Get analytics for the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Date} startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
     * @param {Date} endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
     * @param {Array.<module:model/String>} columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
     * @param {module:model/Granularity} granularity TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     * @param {Object} opts Optional parameters
     * @param {module:model/Number} [clickWindowDays = 30)] Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @param {module:model/Number} [engagementWindowDays = 30)] Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @param {module:model/Number} [viewWindowDays = 1)] Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
     * @param {module:model/String} [conversionReportTime = 'TIME_OF_AD_ACTION')] The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
     * @param {module:api/AdAccountsApi~adAccountAnalyticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AdAccountAnalyticsResponseInner>}
     */
    adAccountAnalytics(adAccountId, startDate, endDate, columns, granularity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountAnalytics");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling adAccountAnalytics");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling adAccountAnalytics");
      }
      // verify the required parameter 'columns' is set
      if (columns === undefined || columns === null) {
        throw new Error("Missing the required parameter 'columns' when calling adAccountAnalytics");
      }
      // verify the required parameter 'granularity' is set
      if (granularity === undefined || granularity === null) {
        throw new Error("Missing the required parameter 'granularity' when calling adAccountAnalytics");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'start_date': startDate,
        'end_date': endDate,
        'columns': this.apiClient.buildCollectionParam(columns, 'csv'),
        'granularity': granularity,
        'click_window_days': opts['clickWindowDays'],
        'engagement_window_days': opts['engagementWindowDays'],
        'view_window_days': opts['viewWindowDays'],
        'conversion_report_time': opts['conversionReportTime']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [AdAccountAnalyticsResponseInner];
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/analytics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountTargetingAnalyticsGet operation.
     * @callback module:api/AdAccountsApi~adAccountTargetingAnalyticsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MetricsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get targeting analytics for an ad account
     * Get targeting analytics for an ad account. For the requested account and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \"age_bucket\") for applicable values (e.g. \"45-49\"). <p/> - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Date} startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
     * @param {Date} endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
     * @param {Array.<module:model/AdsAnalyticsTargetingType>} targetingTypes Targeting type breakdowns for the report. The reporting per targeting type <br> is independent from each other. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.
     * @param {Array.<module:model/String>} columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
     * @param {module:model/Granularity} granularity TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     * @param {Object} opts Optional parameters
     * @param {module:model/Number} [clickWindowDays = 30)] Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @param {module:model/Number} [engagementWindowDays = 30)] Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @param {module:model/Number} [viewWindowDays = 1)] Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
     * @param {module:model/String} [conversionReportTime = 'TIME_OF_AD_ACTION')] The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
     * @param {module:model/ConversionReportAttributionType} [attributionTypes] List of types of attribution for the conversion report
     * @param {module:api/AdAccountsApi~adAccountTargetingAnalyticsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MetricsResponse}
     */
    adAccountTargetingAnalyticsGet(adAccountId, startDate, endDate, targetingTypes, columns, granularity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountTargetingAnalyticsGet");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling adAccountTargetingAnalyticsGet");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling adAccountTargetingAnalyticsGet");
      }
      // verify the required parameter 'targetingTypes' is set
      if (targetingTypes === undefined || targetingTypes === null) {
        throw new Error("Missing the required parameter 'targetingTypes' when calling adAccountTargetingAnalyticsGet");
      }
      // verify the required parameter 'columns' is set
      if (columns === undefined || columns === null) {
        throw new Error("Missing the required parameter 'columns' when calling adAccountTargetingAnalyticsGet");
      }
      // verify the required parameter 'granularity' is set
      if (granularity === undefined || granularity === null) {
        throw new Error("Missing the required parameter 'granularity' when calling adAccountTargetingAnalyticsGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'start_date': startDate,
        'end_date': endDate,
        'targeting_types': this.apiClient.buildCollectionParam(targetingTypes, 'csv'),
        'columns': this.apiClient.buildCollectionParam(columns, 'csv'),
        'granularity': granularity,
        'click_window_days': opts['clickWindowDays'],
        'engagement_window_days': opts['engagementWindowDays'],
        'view_window_days': opts['viewWindowDays'],
        'conversion_report_time': opts['conversionReportTime'],
        'attribution_types': opts['attributionTypes']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MetricsResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/targeting_analytics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountsCreate operation.
     * @callback module:api/AdAccountsApi~adAccountsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create ad account
     * Create a new ad account. Different ad accounts can support different currencies, payment methods, etc. An ad account is needed to create campaigns, ad groups, and ads; other accounts (your employees or partners) can be assigned business access and appropriate roles to access an ad account. <p/> You can set up up to 50 ad accounts per user. (The user must have a business account to create an ad account.) <p/> For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/create-an-advertiser-account\">Create an advertiser account</a>.
     * @param {module:model/AdAccountCreateRequest} adAccountCreateRequest Ad account to create.
     * @param {module:api/AdAccountsApi~adAccountsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccount}
     */
    adAccountsCreate(adAccountCreateRequest, callback) {
      let postBody = adAccountCreateRequest;
      // verify the required parameter 'adAccountCreateRequest' is set
      if (adAccountCreateRequest === undefined || adAccountCreateRequest === null) {
        throw new Error("Missing the required parameter 'adAccountCreateRequest' when calling adAccountsCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdAccount;
      return this.apiClient.callApi(
        '/ad_accounts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountsGet operation.
     * @callback module:api/AdAccountsApi~adAccountsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ad account
     * Get an ad account
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:api/AdAccountsApi~adAccountsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccount}
     */
    adAccountsGet(adAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling adAccountsGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccount;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adAccountsList operation.
     * @callback module:api/AdAccountsApi~adAccountsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List ad accounts
     * Get a list of the ad_accounts that the \"operation user_account\" has access to. - This includes ad_accounts they own and ad_accounts that are owned by others who have granted them <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>.
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {Boolean} [includeSharedAccounts = true)] Include shared ad accounts
     * @param {module:api/AdAccountsApi~adAccountsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountsList200Response}
     */
    adAccountsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'include_shared_accounts': opts['includeSharedAccounts']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccountsList200Response;
      return this.apiClient.callApi(
        '/ad_accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsCreateMmmReport operation.
     * @callback module:api/AdAccountsApi~analyticsCreateMmmReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMMMReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a request for a Marketing Mix Modeling (MMM) report
     * This creates an asynchronous mmm report based on the given request. It returns a token that you can use to download the report when it is ready. NOTE: An additional limit of 5 queries per minute per advertiser applies to this endpoint while it's in beta release.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/CreateMMMReportRequest} createMMMReportRequest 
     * @param {module:api/AdAccountsApi~analyticsCreateMmmReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMMMReportResponse}
     */
    analyticsCreateMmmReport(adAccountId, createMMMReportRequest, callback) {
      let postBody = createMMMReportRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling analyticsCreateMmmReport");
      }
      // verify the required parameter 'createMMMReportRequest' is set
      if (createMMMReportRequest === undefined || createMMMReportRequest === null) {
        throw new Error("Missing the required parameter 'createMMMReportRequest' when calling analyticsCreateMmmReport");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMMMReportResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/mmm_reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsCreateReport operation.
     * @callback module:api/AdAccountsApi~analyticsCreateReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdsAnalyticsCreateAsyncResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create async request for an account analytics report
     * This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 914 days before the current date in UTC time and the max time range supported is 186 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days. - If level is PRODUCT_ITEM, the furthest back you can are allowed to pull data is 92 days before the current date in UTC time and the max time range supported is 31 days. - If level is PRODUCT_ITEM, ad_ids and ad_statuses parameters are not allowed. Any columns related to pin promotion and ad is not allowed either.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/AdsAnalyticsCreateAsyncRequest} adsAnalyticsCreateAsyncRequest 
     * @param {module:api/AdAccountsApi~analyticsCreateReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdsAnalyticsCreateAsyncResponse}
     */
    analyticsCreateReport(adAccountId, adsAnalyticsCreateAsyncRequest, callback) {
      let postBody = adsAnalyticsCreateAsyncRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling analyticsCreateReport");
      }
      // verify the required parameter 'adsAnalyticsCreateAsyncRequest' is set
      if (adsAnalyticsCreateAsyncRequest === undefined || adsAnalyticsCreateAsyncRequest === null) {
        throw new Error("Missing the required parameter 'adsAnalyticsCreateAsyncRequest' when calling analyticsCreateReport");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdsAnalyticsCreateAsyncResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsCreateTemplateReport operation.
     * @callback module:api/AdAccountsApi~analyticsCreateTemplateReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdsAnalyticsCreateAsyncResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create async request for an analytics report using a template
     * This takes a template ID and an optional custom timeframe and constructs an asynchronous report based on the template. It returns a token that you can use to download the report when it is ready.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} templateId Unique identifier of a template.
     * @param {Object} opts Optional parameters
     * @param {Date} [startDate] Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 2.5 years back from today.
     * @param {Date} [endDate] Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 2.5 years past start date.
     * @param {module:model/Granularity} [granularity] TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     * @param {module:api/AdAccountsApi~analyticsCreateTemplateReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdsAnalyticsCreateAsyncResponse}
     */
    analyticsCreateTemplateReport(adAccountId, templateId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling analyticsCreateTemplateReport");
      }
      // verify the required parameter 'templateId' is set
      if (templateId === undefined || templateId === null) {
        throw new Error("Missing the required parameter 'templateId' when calling analyticsCreateTemplateReport");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'template_id': templateId
      };
      let queryParams = {
        'start_date': opts['startDate'],
        'end_date': opts['endDate'],
        'granularity': opts['granularity']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdsAnalyticsCreateAsyncResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/templates/{template_id}/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsGetMmmReport operation.
     * @callback module:api/AdAccountsApi~analyticsGetMmmReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMMMReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get advertiser Marketing Mix Modeling (MMM) report.
     * Get an mmm report for an ad account. This returns a URL to an mmm metrics report given a token returned from the create mmm report endpoint.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} token Token returned from the post request creation call
     * @param {module:api/AdAccountsApi~analyticsGetMmmReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMMMReportResponse}
     */
    analyticsGetMmmReport(adAccountId, token, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling analyticsGetMmmReport");
      }
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling analyticsGetMmmReport");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'token': token
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMMMReportResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/mmm_reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsGetReport operation.
     * @callback module:api/AdAccountsApi~analyticsGetReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdsAnalyticsGetAsyncResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the account analytics report created by the async call
     * This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report. The link is valid for five minutes and the report is valid for one hour. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} token Token returned from the post request creation call
     * @param {module:api/AdAccountsApi~analyticsGetReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdsAnalyticsGetAsyncResponse}
     */
    analyticsGetReport(adAccountId, token, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling analyticsGetReport");
      }
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling analyticsGetReport");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'token': token
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdsAnalyticsGetAsyncResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sandboxDelete operation.
     * @callback module:api/AdAccountsApi~sandboxDeleteCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete ads data for ad account in API Sandbox
     * Delete an ad account and all the ads data associated with that account. A string message is returned indicating the status of the delete operation.  Note: This endpoint is only allowed in the Pinterest API Sandbox (https://api-sandbox.pinterest.com/v5). Go to /docs/developer-tools/sandbox/ for more information.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:api/AdAccountsApi~sandboxDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    sandboxDelete(adAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling sandboxDelete");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/sandbox', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the templatesList operation.
     * @callback module:api/AdAccountsApi~templatesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TemplatesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List templates
     * Gets all Templates associated with an ad account ID.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:model/String} [order] The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/AdAccountsApi~templatesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TemplatesList200Response}
     */
    templatesList(adAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling templatesList");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'page_size': opts['pageSize'],
        'order': opts['order'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TemplatesList200Response;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/templates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
