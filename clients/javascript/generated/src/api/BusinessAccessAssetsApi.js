/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BusinessAssetMembersGet200Response from '../model/BusinessAssetMembersGet200Response';
import BusinessAssetPartnersGet200Response from '../model/BusinessAssetPartnersGet200Response';
import BusinessAssetsGet200Response from '../model/BusinessAssetsGet200Response';
import BusinessMemberAssetsGet200Response from '../model/BusinessMemberAssetsGet200Response';
import BusinessMembersAssetAccessDeleteRequest from '../model/BusinessMembersAssetAccessDeleteRequest';
import BusinessPartnerAssetAccessGet200Response from '../model/BusinessPartnerAssetAccessGet200Response';
import CreateAssetGroupBody from '../model/CreateAssetGroupBody';
import CreateAssetGroupResponse from '../model/CreateAssetGroupResponse';
import DeleteAssetGroupBody from '../model/DeleteAssetGroupBody';
import DeleteAssetGroupResponse from '../model/DeleteAssetGroupResponse';
import DeleteMemberAccessResultsResponseArray from '../model/DeleteMemberAccessResultsResponseArray';
import DeletePartnerAssetAccessBody from '../model/DeletePartnerAssetAccessBody';
import DeletePartnerAssetsResultsResponseArray from '../model/DeletePartnerAssetsResultsResponseArray';
import Error from '../model/Error';
import PartnerType from '../model/PartnerType';
import PermissionsWithOwner from '../model/PermissionsWithOwner';
import UpdateAssetGroupBody from '../model/UpdateAssetGroupBody';
import UpdateAssetGroupResponse from '../model/UpdateAssetGroupResponse';
import UpdateMemberAssetAccessBody from '../model/UpdateMemberAssetAccessBody';
import UpdateMemberAssetsResultsResponseArray from '../model/UpdateMemberAssetsResultsResponseArray';
import UpdatePartnerAssetAccessBody from '../model/UpdatePartnerAssetAccessBody';
import UpdatePartnerAssetsResultsResponseArray from '../model/UpdatePartnerAssetsResultsResponseArray';

/**
* BusinessAccessAssets service.
* @module api/BusinessAccessAssetsApi
* @version 1.1.1-pre.0
*/
export default class BusinessAccessAssetsApi {

    /**
    * Constructs a new BusinessAccessAssetsApi. 
    * @alias module:api/BusinessAccessAssetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the assetGroupCreate operation.
     * @callback module:api/BusinessAccessAssetsApi~assetGroupCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAssetGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new asset group.
     * Create a new asset group with the specified parameters. - An <a href=\"https://help.pinterest.com/en/business/article/asset-groups\">asset group</a> is a custom group of assets based on how youâ€™d like to manage your accounts.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/CreateAssetGroupBody} createAssetGroupBody 
     * @param {module:api/BusinessAccessAssetsApi~assetGroupCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAssetGroupResponse}
     */
    assetGroupCreate(businessId, createAssetGroupBody, callback) {
      let postBody = createAssetGroupBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling assetGroupCreate");
      }
      // verify the required parameter 'createAssetGroupBody' is set
      if (createAssetGroupBody === undefined || createAssetGroupBody === null) {
        throw new Error("Missing the required parameter 'createAssetGroupBody' when calling assetGroupCreate");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAssetGroupResponse;
      return this.apiClient.callApi(
        '/businesses/{business_id}/asset_groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assetGroupDelete operation.
     * @callback module:api/BusinessAccessAssetsApi~assetGroupDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAssetGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete asset groups.
     * Delete a batch of asset groups.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/DeleteAssetGroupBody} deleteAssetGroupBody 
     * @param {module:api/BusinessAccessAssetsApi~assetGroupDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAssetGroupResponse}
     */
    assetGroupDelete(businessId, deleteAssetGroupBody, callback) {
      let postBody = deleteAssetGroupBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling assetGroupDelete");
      }
      // verify the required parameter 'deleteAssetGroupBody' is set
      if (deleteAssetGroupBody === undefined || deleteAssetGroupBody === null) {
        throw new Error("Missing the required parameter 'deleteAssetGroupBody' when calling assetGroupDelete");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteAssetGroupResponse;
      return this.apiClient.callApi(
        '/businesses/{business_id}/asset_groups', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the assetGroupUpdate operation.
     * @callback module:api/BusinessAccessAssetsApi~assetGroupUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAssetGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update asset groups.
     * Update a batch of asset groups with the specified parameters.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/UpdateAssetGroupBody} updateAssetGroupBody 
     * @param {module:api/BusinessAccessAssetsApi~assetGroupUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAssetGroupResponse}
     */
    assetGroupUpdate(businessId, updateAssetGroupBody, callback) {
      let postBody = updateAssetGroupBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling assetGroupUpdate");
      }
      // verify the required parameter 'updateAssetGroupBody' is set
      if (updateAssetGroupBody === undefined || updateAssetGroupBody === null) {
        throw new Error("Missing the required parameter 'updateAssetGroupBody' when calling assetGroupUpdate");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAssetGroupResponse;
      return this.apiClient.callApi(
        '/businesses/{business_id}/asset_groups', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessAssetMembersGet operation.
     * @callback module:api/BusinessAccessAssetsApi~businessAssetMembersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessAssetMembersGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get members with access to asset
     * Get all the members the requesting business has granted access to on the given asset.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {String} assetId Unique identifier of a business asset.
     * @param {Object} opts Optional parameters
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {Number} [startIndex = 0)] An index to start fetching the results from. Only the results starting from this index will be returned.
     * @param {module:api/BusinessAccessAssetsApi~businessAssetMembersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessAssetMembersGet200Response}
     */
    businessAssetMembersGet(businessId, assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessAssetMembersGet");
      }
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling businessAssetMembersGet");
      }

      let pathParams = {
        'business_id': businessId,
        'asset_id': assetId
      };
      let queryParams = {
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize'],
        'start_index': opts['startIndex']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessAssetMembersGet200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/assets/{asset_id}/members', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessAssetPartnersGet operation.
     * @callback module:api/BusinessAccessAssetsApi~businessAssetPartnersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessAssetPartnersGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get partners with access to asset
     * Get all the partners the requesting business has granted access to on the given asset. Note: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with you cannot be shared with a different partner.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {String} assetId Unique identifier of a business asset.
     * @param {Object} opts Optional parameters
     * @param {Number} [startIndex = 0)] An index to start fetching the results from. Only the results starting from this index will be returned.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:api/BusinessAccessAssetsApi~businessAssetPartnersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessAssetPartnersGet200Response}
     */
    businessAssetPartnersGet(businessId, assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessAssetPartnersGet");
      }
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling businessAssetPartnersGet");
      }

      let pathParams = {
        'business_id': businessId,
        'asset_id': assetId
      };
      let queryParams = {
        'start_index': opts['startIndex'],
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessAssetPartnersGet200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/assets/{asset_id}/partners', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessAssetsGet operation.
     * @callback module:api/BusinessAccessAssetsApi~businessAssetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessAssetsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List business assets
     * Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/PermissionsWithOwner>} [permissions] A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned.
     * @param {String} [childAssetId] A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child.
     * @param {String} [assetGroupId] An asset group unique identifier. Used to fetch assets contained within the specified asset group.
     * @param {module:model/String} [assetType = 'AD_ACCOUNT')] A resource type to filter the assets by. Only assets of the specified type will be returned.
     * @param {Number} [startIndex = 0)] An index to start fetching the results from. Only the results starting from this index will be returned.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:api/BusinessAccessAssetsApi~businessAssetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessAssetsGet200Response}
     */
    businessAssetsGet(businessId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessAssetsGet");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
        'permissions': this.apiClient.buildCollectionParam(opts['permissions'], 'multi'),
        'child_asset_id': opts['childAssetId'],
        'asset_group_id': opts['assetGroupId'],
        'asset_type': opts['assetType'],
        'start_index': opts['startIndex'],
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessAssetsGet200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/assets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessMemberAssetsGet operation.
     * @callback module:api/BusinessAccessAssetsApi~businessMemberAssetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessMemberAssetsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get assets assigned to a member
     * Get assets on which you assigned asset permissions to the given member. Can be used to: - get all assets, regardless of asset type or - get assets of one asset type by using the asset_type query. The return response will include the permissions the member has to that asset and the asset type.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {String} memberId The member id to fetch assets for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [assetType = 'AD_ACCOUNT')] A resource type to filter the assets by. Only assets of the specified type will be returned.
     * @param {Number} [startIndex = 0)] An index to start fetching the results from. Only the results starting from this index will be returned.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:api/BusinessAccessAssetsApi~businessMemberAssetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessMemberAssetsGet200Response}
     */
    businessMemberAssetsGet(businessId, memberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessMemberAssetsGet");
      }
      // verify the required parameter 'memberId' is set
      if (memberId === undefined || memberId === null) {
        throw new Error("Missing the required parameter 'memberId' when calling businessMemberAssetsGet");
      }

      let pathParams = {
        'business_id': businessId,
        'member_id': memberId
      };
      let queryParams = {
        'asset_type': opts['assetType'],
        'start_index': opts['startIndex'],
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessMemberAssetsGet200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/members/{member_id}/assets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessMembersAssetAccessDelete operation.
     * @callback module:api/BusinessAccessAssetsApi~businessMembersAssetAccessDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteMemberAccessResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete member access to asset
     * Terminate multiple members' access to an asset.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/BusinessMembersAssetAccessDeleteRequest} businessMembersAssetAccessDeleteRequest List member assset permissions to delete.
     * @param {module:api/BusinessAccessAssetsApi~businessMembersAssetAccessDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteMemberAccessResultsResponseArray}
     */
    businessMembersAssetAccessDelete(businessId, businessMembersAssetAccessDeleteRequest, callback) {
      let postBody = businessMembersAssetAccessDeleteRequest;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessMembersAssetAccessDelete");
      }
      // verify the required parameter 'businessMembersAssetAccessDeleteRequest' is set
      if (businessMembersAssetAccessDeleteRequest === undefined || businessMembersAssetAccessDeleteRequest === null) {
        throw new Error("Missing the required parameter 'businessMembersAssetAccessDeleteRequest' when calling businessMembersAssetAccessDelete");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteMemberAccessResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/members/assets/access', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessMembersAssetAccessUpdate operation.
     * @callback module:api/BusinessAccessAssetsApi~businessMembersAssetAccessUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateMemberAssetsResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign/Update member asset permissions
     * Grant multiple members access to assets and/or update multiple member's exisiting permissions to an asset. Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE. 
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/UpdateMemberAssetAccessBody} updateMemberAssetAccessBody List of member asset permissions to create or update.
     * @param {module:api/BusinessAccessAssetsApi~businessMembersAssetAccessUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateMemberAssetsResultsResponseArray}
     */
    businessMembersAssetAccessUpdate(businessId, updateMemberAssetAccessBody, callback) {
      let postBody = updateMemberAssetAccessBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessMembersAssetAccessUpdate");
      }
      // verify the required parameter 'updateMemberAssetAccessBody' is set
      if (updateMemberAssetAccessBody === undefined || updateMemberAssetAccessBody === null) {
        throw new Error("Missing the required parameter 'updateMemberAssetAccessBody' when calling businessMembersAssetAccessUpdate");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateMemberAssetsResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/members/assets/access', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the businessPartnerAssetAccessGet operation.
     * @callback module:api/BusinessAccessAssetsApi~businessPartnerAssetAccessGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessPartnerAssetAccessGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get assets assigned to a partner or assets assigned by a partner
     * Can be used to get the business assets your partner has granted you access to or the business assets you have granted your partner access to. If you specify: - partner_type=INTERNAL, you will retrieve your business assets that the partner has access to. - partner_type=EXTERNAL, you will retrieve the partner's business assets that the partner has granted you access to.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {String} partnerId The partner id to be bound to the Business
     * @param {Object} opts Optional parameters
     * @param {module:model/PartnerType} [partnerType] Specifies whether to fetch internal or external (shared) partners. If partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br> If partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset.
     * @param {module:model/String} [assetType = 'AD_ACCOUNT')] A resource type to filter the assets by. Only assets of the specified type will be returned.
     * @param {Number} [startIndex = 0)] An index to start fetching the results from. Only the results starting from this index will be returned.
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/BusinessAccessAssetsApi~businessPartnerAssetAccessGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessPartnerAssetAccessGet200Response}
     */
    businessPartnerAssetAccessGet(businessId, partnerId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling businessPartnerAssetAccessGet");
      }
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling businessPartnerAssetAccessGet");
      }

      let pathParams = {
        'business_id': businessId,
        'partner_id': partnerId
      };
      let queryParams = {
        'partner_type': opts['partnerType'],
        'asset_type': opts['assetType'],
        'start_index': opts['startIndex'],
        'page_size': opts['pageSize'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BusinessPartnerAssetAccessGet200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/partners/{partner_id}/assets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePartnerAssetAccessHandlerImpl operation.
     * @callback module:api/BusinessAccessAssetsApi~deletePartnerAssetAccessHandlerImplCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletePartnerAssetsResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete partner access to asset
     * Terminate multiple partners' access to an asset. If - partner_type=INTERNAL: You will terminate a partner's asset access to your business assets. - partner_type=EXTERNAL: You will terminate your own access to your partner's business assets.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/DeletePartnerAssetAccessBody} deletePartnerAssetAccessBody 
     * @param {module:api/BusinessAccessAssetsApi~deletePartnerAssetAccessHandlerImplCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletePartnerAssetsResultsResponseArray}
     */
    deletePartnerAssetAccessHandlerImpl(businessId, deletePartnerAssetAccessBody, callback) {
      let postBody = deletePartnerAssetAccessBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling deletePartnerAssetAccessHandlerImpl");
      }
      // verify the required parameter 'deletePartnerAssetAccessBody' is set
      if (deletePartnerAssetAccessBody === undefined || deletePartnerAssetAccessBody === null) {
        throw new Error("Missing the required parameter 'deletePartnerAssetAccessBody' when calling deletePartnerAssetAccessHandlerImpl");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeletePartnerAssetsResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/partners/assets', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePartnerAssetAccessHandlerImpl operation.
     * @callback module:api/BusinessAccessAssetsApi~updatePartnerAssetAccessHandlerImplCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdatePartnerAssetsResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign/Update partner asset permissions
     * Grant multiple partners access to assets and/or update multiple partner's exisiting permissions to an asset. If your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them. To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview  Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/UpdatePartnerAssetAccessBody} updatePartnerAssetAccessBody A list of assets and permissions to assign to your partners.
     * @param {module:api/BusinessAccessAssetsApi~updatePartnerAssetAccessHandlerImplCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdatePartnerAssetsResultsResponseArray}
     */
    updatePartnerAssetAccessHandlerImpl(businessId, updatePartnerAssetAccessBody, callback) {
      let postBody = updatePartnerAssetAccessBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling updatePartnerAssetAccessHandlerImpl");
      }
      // verify the required parameter 'updatePartnerAssetAccessBody' is set
      if (updatePartnerAssetAccessBody === undefined || updatePartnerAssetAccessBody === null) {
        throw new Error("Missing the required parameter 'updatePartnerAssetAccessBody' when calling updatePartnerAssetAccessHandlerImpl");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdatePartnerAssetsResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/partners/assets', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
