/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import OrderLine from '../model/OrderLine';
import OrderLinesList200Response from '../model/OrderLinesList200Response';

/**
* OrderLines service.
* @module api/OrderLinesApi
* @version 1.1.1-pre.0
*/
export default class OrderLinesApi {

    /**
    * Constructs a new OrderLinesApi. 
    * @alias module:api/OrderLinesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the orderLinesGet operation.
     * @callback module:api/OrderLinesApi~orderLinesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderLine} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get order line
     * Get a specific existing order line associated with an ad account.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} orderLineId Unique identifier of an order line.
     * @param {module:api/OrderLinesApi~orderLinesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderLine}
     */
    orderLinesGet(adAccountId, orderLineId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling orderLinesGet");
      }
      // verify the required parameter 'orderLineId' is set
      if (orderLineId === undefined || orderLineId === null) {
        throw new Error("Missing the required parameter 'orderLineId' when calling orderLinesGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'order_line_id': orderLineId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OrderLine;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/order_lines/{order_line_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderLinesList operation.
     * @callback module:api/OrderLinesApi~orderLinesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderLinesList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get order lines
     * List existing order lines associated with an ad account.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:model/String} [order] The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/OrderLinesApi~orderLinesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderLinesList200Response}
     */
    orderLinesList(adAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling orderLinesList");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'page_size': opts['pageSize'],
        'order': opts['order'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OrderLinesList200Response;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/order_lines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
