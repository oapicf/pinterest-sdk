/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthRespondInvitesBody from '../model/AuthRespondInvitesBody';
import CancelInvitesBody from '../model/CancelInvitesBody';
import CreateAssetAccessRequestBody from '../model/CreateAssetAccessRequestBody';
import CreateAssetAccessRequestResponse from '../model/CreateAssetAccessRequestResponse';
import CreateAssetInvitesRequest from '../model/CreateAssetInvitesRequest';
import CreateInvitesResultsResponseArray from '../model/CreateInvitesResultsResponseArray';
import CreateMembershipOrPartnershipInvitesBody from '../model/CreateMembershipOrPartnershipInvitesBody';
import DeleteInvitesResultsResponseArray from '../model/DeleteInvitesResultsResponseArray';
import Error from '../model/Error';
import GetInvites200Response from '../model/GetInvites200Response';
import InviteType from '../model/InviteType';
import RespondToInvitesResponseArray from '../model/RespondToInvitesResponseArray';
import UpdateInvitesResultsResponseArray from '../model/UpdateInvitesResultsResponseArray';

/**
* BusinessAccessInvite service.
* @module api/BusinessAccessInviteApi
* @version 1.1.1-pre.0
*/
export default class BusinessAccessInviteApi {

    /**
    * Constructs a new BusinessAccessInviteApi. 
    * @alias module:api/BusinessAccessInviteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the assetAccessRequestsCreate operation.
     * @callback module:api/BusinessAccessInviteApi~assetAccessRequestsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAssetAccessRequestResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a request to access an existing partner's assets.
     * Create a request to access an existing partner's assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/CreateAssetAccessRequestBody} createAssetAccessRequestBody 
     * @param {module:api/BusinessAccessInviteApi~assetAccessRequestsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAssetAccessRequestResponse}
     */
    assetAccessRequestsCreate(businessId, createAssetAccessRequestBody, callback) {
      let postBody = createAssetAccessRequestBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling assetAccessRequestsCreate");
      }
      // verify the required parameter 'createAssetAccessRequestBody' is set
      if (createAssetAccessRequestBody === undefined || createAssetAccessRequestBody === null) {
        throw new Error("Missing the required parameter 'createAssetAccessRequestBody' when calling assetAccessRequestsCreate");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAssetAccessRequestResponse;
      return this.apiClient.callApi(
        '/businesses/{business_id}/requests/assets/access', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cancelInvitesOrRequests operation.
     * @callback module:api/BusinessAccessInviteApi~cancelInvitesOrRequestsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteInvitesResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel invites/requests
     * Cancel membership/partnership invites and/or requests.
     * @param {String} businessId Business id
     * @param {module:model/CancelInvitesBody} cancelInvitesBody A list with invite ids
     * @param {module:api/BusinessAccessInviteApi~cancelInvitesOrRequestsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteInvitesResultsResponseArray}
     */
    cancelInvitesOrRequests(businessId, cancelInvitesBody, callback) {
      let postBody = cancelInvitesBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling cancelInvitesOrRequests");
      }
      // verify the required parameter 'cancelInvitesBody' is set
      if (cancelInvitesBody === undefined || cancelInvitesBody === null) {
        throw new Error("Missing the required parameter 'cancelInvitesBody' when calling cancelInvitesOrRequests");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteInvitesResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/invites', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAssetInvites operation.
     * @callback module:api/BusinessAccessInviteApi~createAssetInvitesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateInvitesResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update invite/request with an asset permission
     * Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner's asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \"Create a request to access an existing partner's assets\" to request access to your   partner's assets.     - invite_type=\"PARTNER_REQUEST\" - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \"Assign/Update partner asset permissions\" to assign a partner access to   new assets.     - invite_type=\"PARTNER_INVITE\" - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \"Assign/Update member asset permissions\" to assign a member access to new   assets.     - invite_type=\"MEMBER_INVITE\"  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {module:model/CreateAssetInvitesRequest} createAssetInvitesRequest A list of invites/requests together with the asset permissions to be assigned to the invite/request. 
     * @param {module:api/BusinessAccessInviteApi~createAssetInvitesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateInvitesResultsResponseArray}
     */
    createAssetInvites(businessId, createAssetInvitesRequest, callback) {
      let postBody = createAssetInvitesRequest;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling createAssetInvites");
      }
      // verify the required parameter 'createAssetInvitesRequest' is set
      if (createAssetInvitesRequest === undefined || createAssetInvitesRequest === null) {
        throw new Error("Missing the required parameter 'createAssetInvitesRequest' when calling createAssetInvites");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateInvitesResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/invites/assets/access', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMembershipOrPartnershipInvites operation.
     * @callback module:api/BusinessAccessInviteApi~createMembershipOrPartnershipInvitesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateInvitesResultsResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create invites or requests
     * Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type=\"MEMBER_INVITE\"     - business_role=\"EMPLOYEE\" OR business_role=\"BIZ_ADMIN\" (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type=\"PARTNER_INVITE\"     - business_role=\"PARTNER\"     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type=\"PARTNER_REQUEST\"     - business_role=\"PARTNER\"     - partners
     * @param {String} businessId Business id
     * @param {module:model/CreateMembershipOrPartnershipInvitesBody} createMembershipOrPartnershipInvitesBody An object with the properties: invite_type, partners, members, business_role
     * @param {module:api/BusinessAccessInviteApi~createMembershipOrPartnershipInvitesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateInvitesResultsResponseArray}
     */
    createMembershipOrPartnershipInvites(businessId, createMembershipOrPartnershipInvitesBody, callback) {
      let postBody = createMembershipOrPartnershipInvitesBody;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling createMembershipOrPartnershipInvites");
      }
      // verify the required parameter 'createMembershipOrPartnershipInvitesBody' is set
      if (createMembershipOrPartnershipInvitesBody === undefined || createMembershipOrPartnershipInvitesBody === null) {
        throw new Error("Missing the required parameter 'createMembershipOrPartnershipInvitesBody' when calling createMembershipOrPartnershipInvites");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateInvitesResultsResponseArray;
      return this.apiClient.callApi(
        '/businesses/{business_id}/invites', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvites operation.
     * @callback module:api/BusinessAccessInviteApi~getInvitesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetInvites200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get invites/requests
     * Get the membership/partnership invites and/or requests for the authorized user.
     * @param {String} businessId Unique identifier of the requesting business.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [isMember = true)] A boolean field to indicate whether the invite is to create a partnership or a membership.
     * @param {Array.<module:model/String>} [inviteStatus] A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned.
     * @param {module:model/InviteType} [inviteType] Invite type to filter invites by. Only invites of the specified type will be returned.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:api/BusinessAccessInviteApi~getInvitesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetInvites200Response}
     */
    getInvites(businessId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getInvites");
      }

      let pathParams = {
        'business_id': businessId
      };
      let queryParams = {
        'is_member': opts['isMember'],
        'invite_status': this.apiClient.buildCollectionParam(opts['inviteStatus'], 'multi'),
        'invite_type': opts['inviteType'],
        'bookmark': opts['bookmark'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetInvites200Response;
      return this.apiClient.callApi(
        '/businesses/{business_id}/invites', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the respondBusinessAccessInvites operation.
     * @callback module:api/BusinessAccessInviteApi~respondBusinessAccessInvitesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RespondToInvitesResponseArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accept or decline an invite/request
     * Accept or decline invites or requests.
     * @param {module:model/AuthRespondInvitesBody} authRespondInvitesBody 
     * @param {module:api/BusinessAccessInviteApi~respondBusinessAccessInvitesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RespondToInvitesResponseArray}
     */
    respondBusinessAccessInvites(authRespondInvitesBody, callback) {
      let postBody = authRespondInvitesBody;
      // verify the required parameter 'authRespondInvitesBody' is set
      if (authRespondInvitesBody === undefined || authRespondInvitesBody === null) {
        throw new Error("Missing the required parameter 'authRespondInvitesBody' when calling respondBusinessAccessInvites");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RespondToInvitesResponseArray;
      return this.apiClient.callApi(
        '/businesses/invites', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
