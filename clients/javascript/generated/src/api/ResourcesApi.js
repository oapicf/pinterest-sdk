/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdAccountsCountryResponse from '../model/AdAccountsCountryResponse';
import BookClosedResponse from '../model/BookClosedResponse';
import DeliveryMetricsResponse from '../model/DeliveryMetricsResponse';
import Error from '../model/Error';
import SingleInterestTargetingOptionResponse from '../model/SingleInterestTargetingOptionResponse';

/**
* Resources service.
* @module api/ResourcesApi
* @version 1.1.1-pre.0
*/
export default class ResourcesApi {

    /**
    * Constructs a new ResourcesApi. 
    * @alias module:api/ResourcesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adAccountCountriesGet operation.
     * @callback module:api/ResourcesApi~adAccountCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdAccountsCountryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ad accounts countries
     * Get Ad Accounts countries
     * @param {module:api/ResourcesApi~adAccountCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdAccountsCountryResponse}
     */
    adAccountCountriesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AdAccountsCountryResponse;
      return this.apiClient.callApi(
        '/resources/ad_account_countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deliveryMetricsGet operation.
     * @callback module:api/ResourcesApi~deliveryMetricsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeliveryMetricsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get available metrics' definitions
     * Get the definitions for ads and organic metrics available across both synchronous and asynchronous report endpoints. The `display_name` attribute will match how the metric is named in our native tools like Ads Manager. See <a href='/docs/api-features/analytics-overview/'>Organic Analytics</a> and <a href='/docs/api-features/ads-reporting/'>Ads Analytics</a> for more information.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [reportType] Report type.
     * @param {module:api/ResourcesApi~deliveryMetricsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeliveryMetricsResponse}
     */
    deliveryMetricsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'report_type': opts['reportType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeliveryMetricsResponse;
      return this.apiClient.callApi(
        '/resources/delivery_metrics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the interestTargetingOptionsGet operation.
     * @callback module:api/ResourcesApi~interestTargetingOptionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SingleInterestTargetingOptionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get interest details
     * <p>Get details of a specific interest given interest ID.</p> <p>Click <a href=\"https://docs.google.com/spreadsheets/d/1HxL-0Z3p2fgxis9YBP2HWC3tvPrs1hAuHDRtH-NJTIM/edit#gid=118370875\" target=\"_blank\">here</a> for a spreadsheet listing interests and their IDs.</p>
     * @param {String} interestId Unique identifier of an interest.
     * @param {module:api/ResourcesApi~interestTargetingOptionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SingleInterestTargetingOptionResponse}
     */
    interestTargetingOptionsGet(interestId, callback) {
      let postBody = null;
      // verify the required parameter 'interestId' is set
      if (interestId === undefined || interestId === null) {
        throw new Error("Missing the required parameter 'interestId' when calling interestTargetingOptionsGet");
      }

      let pathParams = {
        'interest_id': interestId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SingleInterestTargetingOptionResponse;
      return this.apiClient.callApi(
        '/resources/targeting/interests/{interest_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the leadFormQuestionsGet operation.
     * @callback module:api/ResourcesApi~leadFormQuestionsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get lead form questions
     * Get a list of all lead form question type names. Some questions might not be used.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
     * @param {module:api/ResourcesApi~leadFormQuestionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    leadFormQuestionsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/resources/lead_form_questions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the metricsReadyStateGet operation.
     * @callback module:api/ResourcesApi~metricsReadyStateGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BookClosedResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metrics ready state
     * Learn whether conversion or non-conversion metrics are finalized and ready to query.
     * @param {String} date Analytics reports request date (UTC). Format: YYYY-MM-DD
     * @param {module:api/ResourcesApi~metricsReadyStateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BookClosedResponse}
     */
    metricsReadyStateGet(date, callback) {
      let postBody = null;
      // verify the required parameter 'date' is set
      if (date === undefined || date === null) {
        throw new Error("Missing the required parameter 'date' when calling metricsReadyStateGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'date': date
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BookClosedResponse;
      return this.apiClient.callApi(
        '/resources/metrics_ready_state', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the targetingOptionsGet operation.
     * @callback module:api/ResourcesApi~targetingOptionsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get targeting options
     * <p>You can use targeting values in ads placement to define your intended audience. </p> <p>Targeting metrics are organized around targeting specifications.</p> <p>For more information on ads targeting, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a>.</p> <p><b>Sample return:</b></p> <pre class=\"literal-block\"> [{&quot;36313&quot;: &quot;Australia: Moreton Bay - North&quot;, &quot;124735&quot;: &quot;Canada: North Battleford&quot;, &quot;36109&quot;: &quot;Australia: Murray&quot;, &quot;36108&quot;: &quot;Australia: Mid North Coast&quot;, &quot;36101&quot;: &quot;Australia: Capital Region&quot;, &quot;811&quot;: &quot;U.S.: Reno&quot;, &quot;36103&quot;: &quot;Australia: Central West&quot;, &quot;36102&quot;: &quot;Australia: Central Coast&quot;, &quot;36105&quot;: &quot;Australia: Far West and Orana&quot;, &quot;36104&quot;: &quot;Australia: Coffs Harbour - Grafton&quot;, &quot;36107&quot;: &quot;Australia: Illawarra&quot;, &quot;36106&quot;: &quot;Australia: Hunter Valley Exc Newcastle&quot;, &quot;554017&quot;: &quot;New Zealand: Wanganui&quot;, &quot;554016&quot;: &quot;New Zealand: Marlborough&quot;, &quot;554015&quot;: &quot;New Zealand: Gisborne&quot;, &quot;554014&quot;: &quot;New Zealand: Tararua&quot;, &quot;554013&quot;: &quot;New Zealand: Invercargill&quot;, &quot;GR&quot;: &quot;Greece&quot;, &quot;554011&quot;: &quot;New Zealand: Whangarei&quot;, &quot;554010&quot;: &quot;New Zealand: Far North&quot;, &quot;717&quot;: &quot;U.S.: Quincy-Hannibal-Keokuk&quot;, &quot;716&quot;: &quot;U.S.: Baton Rouge&quot;,...}] </pre>
     * @param {module:model/String} targetingType Public targeting type.
     * @param {Object} opts Optional parameters
     * @param {String} [clientId] Client ID.
     * @param {String} [oauthSignature] Oauth signature
     * @param {String} [timestamp] Timestamp
     * @param {String} [adAccountId] Unique identifier of an ad account.
     * @param {module:api/ResourcesApi~targetingOptionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    targetingOptionsGet(targetingType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'targetingType' is set
      if (targetingType === undefined || targetingType === null) {
        throw new Error("Missing the required parameter 'targetingType' when calling targetingOptionsGet");
      }

      let pathParams = {
        'targeting_type': targetingType
      };
      let queryParams = {
        'client_id': opts['clientId'],
        'oauth_signature': opts['oauthSignature'],
        'timestamp': opts['timestamp'],
        'ad_account_id': opts['adAccountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/resources/targeting/{targeting_type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
