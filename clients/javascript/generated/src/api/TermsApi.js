/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import RelatedTerms from '../model/RelatedTerms';

/**
* Terms service.
* @module api/TermsApi
* @version 1.1.1-pre.0
*/
export default class TermsApi {

    /**
    * Constructs a new TermsApi. 
    * @alias module:api/TermsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the termsRelatedList operation.
     * @callback module:api/TermsApi~termsRelatedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RelatedTerms} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List related terms
     * Get a list of terms logically related to each input term. <p/> Example: the term 'workout' would list related terms like 'one song workout', 'yoga workout', 'workout motivation', etc.
     * @param {Array.<String>} terms List of input terms.
     * @param {module:api/TermsApi~termsRelatedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RelatedTerms}
     */
    termsRelatedList(terms, callback) {
      let postBody = null;
      // verify the required parameter 'terms' is set
      if (terms === undefined || terms === null) {
        throw new Error("Missing the required parameter 'terms' when calling termsRelatedList");
      }

      let pathParams = {
      };
      let queryParams = {
        'terms': this.apiClient.buildCollectionParam(terms, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RelatedTerms;
      return this.apiClient.callApi(
        '/terms/related', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the termsSuggestedList operation.
     * @callback module:api/TermsApi~termsSuggestedListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List suggested terms
     * Get popular search terms that begin with your input term. <p/> Example: 'sport' would return popular terms like 'sports bar' and 'sportswear', but not 'motor sports' since the phrase does not begin with the given term.
     * @param {String} term Input term.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 4)] Max suggested terms to return.
     * @param {module:api/TermsApi~termsSuggestedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    termsSuggestedList(term, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'term' is set
      if (term === undefined || term === null) {
        throw new Error("Missing the required parameter 'term' when calling termsSuggestedList");
      }

      let pathParams = {
      };
      let queryParams = {
        'term': term,
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/terms/suggested', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
