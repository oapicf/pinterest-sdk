/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Granularity from '../model/Granularity';
import ProductGroupAnalyticsResponseInner from '../model/ProductGroupAnalyticsResponseInner';
import ProductGroupPromotionCreateRequest from '../model/ProductGroupPromotionCreateRequest';
import ProductGroupPromotionResponse from '../model/ProductGroupPromotionResponse';
import ProductGroupPromotionUpdateRequest from '../model/ProductGroupPromotionUpdateRequest';
import ProductGroupPromotionsList200Response from '../model/ProductGroupPromotionsList200Response';

/**
* ProductGroupPromotions service.
* @module api/ProductGroupPromotionsApi
* @version 1.1.1-pre.0
*/
export default class ProductGroupPromotionsApi {

    /**
    * Constructs a new ProductGroupPromotionsApi. 
    * @alias module:api/ProductGroupPromotionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the productGroupPromotionsCreate operation.
     * @callback module:api/ProductGroupPromotionsApi~productGroupPromotionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductGroupPromotionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create product group promotions
     * Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a 'product group promotion.')
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/ProductGroupPromotionCreateRequest} productGroupPromotionCreateRequest List of Product Group Promotions to create, size limit [1, 30].
     * @param {module:api/ProductGroupPromotionsApi~productGroupPromotionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductGroupPromotionResponse}
     */
    productGroupPromotionsCreate(adAccountId, productGroupPromotionCreateRequest, callback) {
      let postBody = productGroupPromotionCreateRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling productGroupPromotionsCreate");
      }
      // verify the required parameter 'productGroupPromotionCreateRequest' is set
      if (productGroupPromotionCreateRequest === undefined || productGroupPromotionCreateRequest === null) {
        throw new Error("Missing the required parameter 'productGroupPromotionCreateRequest' when calling productGroupPromotionsCreate");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProductGroupPromotionResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/product_group_promotions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productGroupPromotionsGet operation.
     * @callback module:api/ProductGroupPromotionsApi~productGroupPromotionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductGroupPromotionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a product group promotion by id
     * Get a product group promotion by id
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {String} productGroupPromotionId Unique identifier of a product group promotion
     * @param {module:api/ProductGroupPromotionsApi~productGroupPromotionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductGroupPromotionResponse}
     */
    productGroupPromotionsGet(adAccountId, productGroupPromotionId, callback) {
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling productGroupPromotionsGet");
      }
      // verify the required parameter 'productGroupPromotionId' is set
      if (productGroupPromotionId === undefined || productGroupPromotionId === null) {
        throw new Error("Missing the required parameter 'productGroupPromotionId' when calling productGroupPromotionsGet");
      }

      let pathParams = {
        'ad_account_id': adAccountId,
        'product_group_promotion_id': productGroupPromotionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductGroupPromotionResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productGroupPromotionsList operation.
     * @callback module:api/ProductGroupPromotionsApi~productGroupPromotionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductGroupPromotionsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get product group promotions
     * List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  <b>Note:</b> ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [productGroupPromotionIds] List of Product group promotion Ids.
     * @param {Array.<module:model/String>} [entityStatuses] Entity status
     * @param {String} [adGroupId] Ad group Id.
     * @param {Number} [pageSize = 25)] Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.
     * @param {module:model/String} [order] The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
     * @param {String} [bookmark] Cursor used to fetch the next page of items
     * @param {module:api/ProductGroupPromotionsApi~productGroupPromotionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductGroupPromotionsList200Response}
     */
    productGroupPromotionsList(adAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling productGroupPromotionsList");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'product_group_promotion_ids': this.apiClient.buildCollectionParam(opts['productGroupPromotionIds'], 'multi'),
        'entity_statuses': this.apiClient.buildCollectionParam(opts['entityStatuses'], 'multi'),
        'ad_group_id': opts['adGroupId'],
        'page_size': opts['pageSize'],
        'order': opts['order'],
        'bookmark': opts['bookmark']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductGroupPromotionsList200Response;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/product_group_promotions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productGroupPromotionsUpdate operation.
     * @callback module:api/ProductGroupPromotionsApi~productGroupPromotionsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductGroupPromotionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update product group promotions
     * Update multiple existing Product Group Promotions (by product_group_id)
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {module:model/ProductGroupPromotionUpdateRequest} productGroupPromotionUpdateRequest Parameters to update Product group promotions
     * @param {module:api/ProductGroupPromotionsApi~productGroupPromotionsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductGroupPromotionResponse}
     */
    productGroupPromotionsUpdate(adAccountId, productGroupPromotionUpdateRequest, callback) {
      let postBody = productGroupPromotionUpdateRequest;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling productGroupPromotionsUpdate");
      }
      // verify the required parameter 'productGroupPromotionUpdateRequest' is set
      if (productGroupPromotionUpdateRequest === undefined || productGroupPromotionUpdateRequest === null) {
        throw new Error("Missing the required parameter 'productGroupPromotionUpdateRequest' when calling productGroupPromotionsUpdate");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProductGroupPromotionResponse;
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/product_group_promotions', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the productGroupsAnalytics operation.
     * @callback module:api/ProductGroupPromotionsApi~productGroupsAnalyticsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ProductGroupAnalyticsResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get product group analytics
     * Get analytics for the specified product groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     * @param {String} adAccountId Unique identifier of an ad account.
     * @param {Date} startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.
     * @param {Date} endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.
     * @param {Array.<String>} productGroupIds List of Product group Ids to use to filter the results.
     * @param {Array.<module:model/String>} columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned
     * @param {module:model/Granularity} granularity TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly
     * @param {Object} opts Optional parameters
     * @param {module:model/Number} [clickWindowDays = 30)] Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @param {module:model/Number} [engagementWindowDays = 30)] Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.
     * @param {module:model/Number} [viewWindowDays = 1)] Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.
     * @param {module:model/String} [conversionReportTime = 'TIME_OF_AD_ACTION')] The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.
     * @param {module:api/ProductGroupPromotionsApi~productGroupsAnalyticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ProductGroupAnalyticsResponseInner>}
     */
    productGroupsAnalytics(adAccountId, startDate, endDate, productGroupIds, columns, granularity, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adAccountId' is set
      if (adAccountId === undefined || adAccountId === null) {
        throw new Error("Missing the required parameter 'adAccountId' when calling productGroupsAnalytics");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling productGroupsAnalytics");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling productGroupsAnalytics");
      }
      // verify the required parameter 'productGroupIds' is set
      if (productGroupIds === undefined || productGroupIds === null) {
        throw new Error("Missing the required parameter 'productGroupIds' when calling productGroupsAnalytics");
      }
      // verify the required parameter 'columns' is set
      if (columns === undefined || columns === null) {
        throw new Error("Missing the required parameter 'columns' when calling productGroupsAnalytics");
      }
      // verify the required parameter 'granularity' is set
      if (granularity === undefined || granularity === null) {
        throw new Error("Missing the required parameter 'granularity' when calling productGroupsAnalytics");
      }

      let pathParams = {
        'ad_account_id': adAccountId
      };
      let queryParams = {
        'start_date': startDate,
        'end_date': endDate,
        'product_group_ids': this.apiClient.buildCollectionParam(productGroupIds, 'multi'),
        'columns': this.apiClient.buildCollectionParam(columns, 'csv'),
        'granularity': granularity,
        'click_window_days': opts['clickWindowDays'],
        'engagement_window_days': opts['engagementWindowDays'],
        'view_window_days': opts['viewWindowDays'],
        'conversion_report_time': opts['conversionReportTime']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['pinterest_oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ProductGroupAnalyticsResponseInner];
      return this.apiClient.callApi(
        '/ad_accounts/{ad_account_id}/product_groups/analytics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
