/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PinterestSdk);
  }
}(this, function(expect, PinterestSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PinterestSdk.BusinessAccessAssetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BusinessAccessAssetsApi', function() {
    describe('assetGroupCreate', function() {
      it('should call assetGroupCreate successfully', function(done) {
        //uncomment below and update the code to test assetGroupCreate
        //instance.assetGroupCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('assetGroupDelete', function() {
      it('should call assetGroupDelete successfully', function(done) {
        //uncomment below and update the code to test assetGroupDelete
        //instance.assetGroupDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('assetGroupUpdate', function() {
      it('should call assetGroupUpdate successfully', function(done) {
        //uncomment below and update the code to test assetGroupUpdate
        //instance.assetGroupUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessAssetMembersGet', function() {
      it('should call businessAssetMembersGet successfully', function(done) {
        //uncomment below and update the code to test businessAssetMembersGet
        //instance.businessAssetMembersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessAssetPartnersGet', function() {
      it('should call businessAssetPartnersGet successfully', function(done) {
        //uncomment below and update the code to test businessAssetPartnersGet
        //instance.businessAssetPartnersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessAssetsGet', function() {
      it('should call businessAssetsGet successfully', function(done) {
        //uncomment below and update the code to test businessAssetsGet
        //instance.businessAssetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessMemberAssetsGet', function() {
      it('should call businessMemberAssetsGet successfully', function(done) {
        //uncomment below and update the code to test businessMemberAssetsGet
        //instance.businessMemberAssetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessMembersAssetAccessDelete', function() {
      it('should call businessMembersAssetAccessDelete successfully', function(done) {
        //uncomment below and update the code to test businessMembersAssetAccessDelete
        //instance.businessMembersAssetAccessDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessMembersAssetAccessUpdate', function() {
      it('should call businessMembersAssetAccessUpdate successfully', function(done) {
        //uncomment below and update the code to test businessMembersAssetAccessUpdate
        //instance.businessMembersAssetAccessUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('businessPartnerAssetAccessGet', function() {
      it('should call businessPartnerAssetAccessGet successfully', function(done) {
        //uncomment below and update the code to test businessPartnerAssetAccessGet
        //instance.businessPartnerAssetAccessGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePartnerAssetAccessHandlerImpl', function() {
      it('should call deletePartnerAssetAccessHandlerImpl successfully', function(done) {
        //uncomment below and update the code to test deletePartnerAssetAccessHandlerImpl
        //instance.deletePartnerAssetAccessHandlerImpl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePartnerAssetAccessHandlerImpl', function() {
      it('should call updatePartnerAssetAccessHandlerImpl successfully', function(done) {
        //uncomment below and update the code to test updatePartnerAssetAccessHandlerImpl
        //instance.updatePartnerAssetAccessHandlerImpl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
