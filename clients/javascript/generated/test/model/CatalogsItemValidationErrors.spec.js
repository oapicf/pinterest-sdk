/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PinterestSdk);
  }
}(this, function(expect, PinterestSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PinterestSdk.CatalogsItemValidationErrors();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogsItemValidationErrors', function() {
    it('should create an instance of CatalogsItemValidationErrors', function() {
      // uncomment below and update the code to test CatalogsItemValidationErrors
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be.a(PinterestSdk.CatalogsItemValidationErrors);
    });

    it('should have the property ADULT_INVALID (base name: "ADULT_INVALID")', function() {
      // uncomment below and update the code to test the property ADULT_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property ADWORDS_FORMAT_INVALID (base name: "ADWORDS_FORMAT_INVALID")', function() {
      // uncomment below and update the code to test the property ADWORDS_FORMAT_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property AVAILABILITY_INVALID (base name: "AVAILABILITY_INVALID")', function() {
      // uncomment below and update the code to test the property AVAILABILITY_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property BLOCKLISTED_IMAGE_SIGNATURE (base name: "BLOCKLISTED_IMAGE_SIGNATURE")', function() {
      // uncomment below and update the code to test the property BLOCKLISTED_IMAGE_SIGNATURE
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property DESCRIPTION_MISSING (base name: "DESCRIPTION_MISSING")', function() {
      // uncomment below and update the code to test the property DESCRIPTION_MISSING
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property DUPLICATE_PRODUCTS (base name: "DUPLICATE_PRODUCTS")', function() {
      // uncomment below and update the code to test the property DUPLICATE_PRODUCTS
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property IMAGE_LINK_INVALID (base name: "IMAGE_LINK_INVALID")', function() {
      // uncomment below and update the code to test the property IMAGE_LINK_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property IMAGE_LINK_LENGTH_TOO_LONG (base name: "IMAGE_LINK_LENGTH_TOO_LONG")', function() {
      // uncomment below and update the code to test the property IMAGE_LINK_LENGTH_TOO_LONG
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property IMAGE_LINK_MISSING (base name: "IMAGE_LINK_MISSING")', function() {
      // uncomment below and update the code to test the property IMAGE_LINK_MISSING
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property INVALID_DOMAIN (base name: "INVALID_DOMAIN")', function() {
      // uncomment below and update the code to test the property INVALID_DOMAIN
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property ITEMID_MISSING (base name: "ITEMID_MISSING")', function() {
      // uncomment below and update the code to test the property ITEMID_MISSING
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE (base name: "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE")', function() {
      // uncomment below and update the code to test the property ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property LINK_FORMAT_INVALID (base name: "LINK_FORMAT_INVALID")', function() {
      // uncomment below and update the code to test the property LINK_FORMAT_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property LINK_LENGTH_TOO_LONG (base name: "LINK_LENGTH_TOO_LONG")', function() {
      // uncomment below and update the code to test the property LINK_LENGTH_TOO_LONG
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property LIST_PRICE_INVALID (base name: "LIST_PRICE_INVALID")', function() {
      // uncomment below and update the code to test the property LIST_PRICE_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED (base name: "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED")', function() {
      // uncomment below and update the code to test the property MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property PARSE_LINE_ERROR (base name: "PARSE_LINE_ERROR")', function() {
      // uncomment below and update the code to test the property PARSE_LINE_ERROR
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property PINJOIN_CONTENT_UNSAFE (base name: "PINJOIN_CONTENT_UNSAFE")', function() {
      // uncomment below and update the code to test the property PINJOIN_CONTENT_UNSAFE
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property PRICE_CANNOT_BE_DETERMINED (base name: "PRICE_CANNOT_BE_DETERMINED")', function() {
      // uncomment below and update the code to test the property PRICE_CANNOT_BE_DETERMINED
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property PRICE_MISSING (base name: "PRICE_MISSING")', function() {
      // uncomment below and update the code to test the property PRICE_MISSING
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property PRODUCT_LINK_MISSING (base name: "PRODUCT_LINK_MISSING")', function() {
      // uncomment below and update the code to test the property PRODUCT_LINK_MISSING
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property PRODUCT_PRICE_INVALID (base name: "PRODUCT_PRICE_INVALID")', function() {
      // uncomment below and update the code to test the property PRODUCT_PRICE_INVALID
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

    it('should have the property TITLE_MISSING (base name: "TITLE_MISSING")', function() {
      // uncomment below and update the code to test the property TITLE_MISSING
      //var instance = new PinterestSdk.CatalogsItemValidationErrors();
      //expect(instance).to.be();
    });

  });

}));
