/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PinterestSdk);
  }
}(this, function(expect, PinterestSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PinterestSdk.AudienceRule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AudienceRule', function() {
    it('should create an instance of AudienceRule', function() {
      // uncomment below and update the code to test AudienceRule
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be.a(PinterestSdk.AudienceRule);
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property customerListId (base name: "customer_list_id")', function() {
      // uncomment below and update the code to test the property customerListId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property engagementDomain (base name: "engagement_domain")', function() {
      // uncomment below and update the code to test the property engagementDomain
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property engagementType (base name: "engagement_type")', function() {
      // uncomment below and update the code to test the property engagementType
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property event (base name: "event")', function() {
      // uncomment below and update the code to test the property event
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property eventData (base name: "event_data")', function() {
      // uncomment below and update the code to test the property eventData
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property percentage (base name: "percentage")', function() {
      // uncomment below and update the code to test the property percentage
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property pinId (base name: "pin_id")', function() {
      // uncomment below and update the code to test the property pinId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property prefill (base name: "prefill")', function() {
      // uncomment below and update the code to test the property prefill
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property retentionDays (base name: "retention_days")', function() {
      // uncomment below and update the code to test the property retentionDays
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property seedId (base name: "seed_id")', function() {
      // uncomment below and update the code to test the property seedId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property visitorSourceId (base name: "visitor_source_id")', function() {
      // uncomment below and update the code to test the property visitorSourceId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property eventSource (base name: "event_source")', function() {
      // uncomment below and update the code to test the property eventSource
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property ingestionSource (base name: "ingestion_source")', function() {
      // uncomment below and update the code to test the property ingestionSource
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property engagerType (base name: "engager_type")', function() {
      // uncomment below and update the code to test the property engagerType
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property campaignId (base name: "campaign_id")', function() {
      // uncomment below and update the code to test the property campaignId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property adId (base name: "ad_id")', function() {
      // uncomment below and update the code to test the property adId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property objectiveType (base name: "objective_type")', function() {
      // uncomment below and update the code to test the property objectiveType
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

    it('should have the property adAccountId (base name: "ad_account_id")', function() {
      // uncomment below and update the code to test the property adAccountId
      //var instance = new PinterestSdk.AudienceRule();
      //expect(instance).to.be();
    });

  });

}));
