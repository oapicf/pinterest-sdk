/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Creative assets product metadata entity
 * @param creativeAssetsId The user-created unique ID that represents the creative assets item.
 * @param visibility 
 */
object CatalogsCreativeAssetsProductMetadatas : BaseTable<CatalogsCreativeAssetsProductMetadata>("CatalogsCreativeAssetsProductMetadata") {
    val creativeAssetsId = text("creative_assets_id") /* The user-created unique ID that represents the creative assets item. */
    val visibility = long("visibility")

    /**
     * Create an entity of type CatalogsCreativeAssetsProductMetadata from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsCreativeAssetsProductMetadata(
        creativeAssetsId = row[creativeAssetsId] ?: "" /* kotlin.String */ /* The user-created unique ID that represents the creative assets item. */,
        visibility = CreativeAssetsVisibilityTypes.createEntity(row, withReferences) /* CreativeAssetsVisibilityType */
    )

    /**
    * Assign all the columns from the entity of type CatalogsCreativeAssetsProductMetadata to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsCreativeAssetsProductMetadata()
    * database.update(CatalogsCreativeAssetsProductMetadatas, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsCreativeAssetsProductMetadata) {
        this.apply {
            set(CatalogsCreativeAssetsProductMetadatas.creativeAssetsId, entity.creativeAssetsId)
            set(CatalogsCreativeAssetsProductMetadatas.visibility, entity.visibility)
        }
    }

}


