/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param memberId Unique identifier of the member
 * @param businessRole 
 */
object MembersToDeleteBodyMembersInners : BaseTable<MembersToDeleteBodyMembersInner>("MembersToDeleteBody_members_inner") {
    val memberId = text("member_id") /* Unique identifier of the member */
    val businessRole = long("business_role")

    /**
     * Create an entity of type MembersToDeleteBodyMembersInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = MembersToDeleteBodyMembersInner(
        memberId = row[memberId] ?: "" /* kotlin.String */ /* Unique identifier of the member */,
        businessRole = BusinessRoleForMemberss.createEntity(row, withReferences) /* BusinessRoleForMembers */
    )

    /**
    * Assign all the columns from the entity of type MembersToDeleteBodyMembersInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = MembersToDeleteBodyMembersInner()
    * database.update(MembersToDeleteBodyMembersInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: MembersToDeleteBodyMembersInner) {
        this.apply {
            set(MembersToDeleteBodyMembersInners.memberId, entity.memberId)
            set(MembersToDeleteBodyMembersInners.businessRole, entity.businessRole)
        }
    }

}


