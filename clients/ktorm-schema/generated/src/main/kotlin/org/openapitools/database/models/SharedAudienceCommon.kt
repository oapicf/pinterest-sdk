/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param audienceId Unique identifier of an audience
 * @param operationType 
 */
object SharedAudienceCommons : BaseTable<SharedAudienceCommon>("SharedAudienceCommon") {
    val audienceId = text("audience_id") /* null */ /* Unique identifier of an audience */
    val operationType = long("operation_type") /* null */

    /**
     * Create an entity of type SharedAudienceCommon from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = SharedAudienceCommon(
        audienceId = row[audienceId]  /* kotlin.String? */ /* Unique identifier of an audience */,
        operationType = OperationTypes.createEntity(row, withReferences) /* OperationType? */
    )

    /**
    * Assign all the columns from the entity of type SharedAudienceCommon to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = SharedAudienceCommon()
    * database.update(SharedAudienceCommons, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: SharedAudienceCommon) {
        this.apply {
            set(SharedAudienceCommons.audienceId, entity.audienceId)
            set(SharedAudienceCommons.operationType, entity.operationType)
        }
    }

}


