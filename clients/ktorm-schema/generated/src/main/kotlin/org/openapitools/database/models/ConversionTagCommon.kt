/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param adAccountId Ad account ID.
 * @param codeSnippet Tag code snippet.
 * @param enhancedMatchStatus 
 * @param id Tag ID.
 * @param lastFiredTimeMs Time for the last event fired.
 * @param name Conversion tag name.
 * @param status 
 * @param version Version number.
 * @param configs 
 */
object ConversionTagCommons : BaseTable<ConversionTagCommon>("ConversionTagCommon") {
    val adAccountId = text("ad_account_id") /* null */ /* Ad account ID. */
    val codeSnippet = text("code_snippet") /* null */ /* Tag code snippet. */
    val enhancedMatchStatus = long("enhanced_match_status") /* null */
    val id = text("id") /* null */ /* Tag ID. */
    val lastFiredTimeMs = decimal("last_fired_time_ms") /* null */ /* Time for the last event fired. */
    val name = text("name") /* null */ /* Conversion tag name. */
    val status = long("status") /* null */
    val version = text("version") /* null */ /* Version number. */
    val configs = long("configs") /* null */

    /**
     * Create an entity of type ConversionTagCommon from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ConversionTagCommon(
        adAccountId = row[adAccountId]  /* kotlin.String? */ /* Ad account ID. */,
        codeSnippet = row[codeSnippet]  /* kotlin.String? */ /* Tag code snippet. */,
        enhancedMatchStatus = EnhancedMatchStatusTypes.createEntity(row, withReferences) /* EnhancedMatchStatusType? */,
        id = row[id]  /* kotlin.String? */ /* Tag ID. */,
        lastFiredTimeMs = row[lastFiredTimeMs]  /* java.math.BigDecimal? */ /* Time for the last event fired. */,
        name = row[name]  /* kotlin.String? */ /* Conversion tag name. */,
        status = EntityStatuss.createEntity(row, withReferences) /* EntityStatus? */,
        version = row[version]  /* kotlin.String? */ /* Version number. */,
        configs = ConversionTagConfigss.createEntity(row, withReferences) /* ConversionTagConfigs? */
    )

    /**
    * Assign all the columns from the entity of type ConversionTagCommon to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ConversionTagCommon()
    * database.update(ConversionTagCommons, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ConversionTagCommon) {
        this.apply {
            set(ConversionTagCommons.adAccountId, entity.adAccountId)
            set(ConversionTagCommons.codeSnippet, entity.codeSnippet)
            set(ConversionTagCommons.enhancedMatchStatus, entity.enhancedMatchStatus)
            set(ConversionTagCommons.id, entity.id)
            set(ConversionTagCommons.lastFiredTimeMs, entity.lastFiredTimeMs)
            set(ConversionTagCommons.name, entity.name)
            set(ConversionTagCommons.status, entity.status)
            set(ConversionTagCommons.version, entity.version)
            set(ConversionTagCommons.configs, entity.configs)
        }
    }

}


