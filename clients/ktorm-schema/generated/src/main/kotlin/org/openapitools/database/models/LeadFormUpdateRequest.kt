/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param id The ID of this lead form to be updated
 * @param name Internal name of the lead form.
 * @param privacyPolicyLink A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language.
 * @param hasAcceptedTerms Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO
 * @param completionMessage A message for people who complete the form to let them know what happens next.
 * @param status 
 * @param disclosureLanguage Additional disclosure language to be included in the lead form.
 * @param questions List of questions to be displayed on the lead form.
 * @param policyLinks List of additional policy links to be displayed on the lead form.
 */
object LeadFormUpdateRequests : BaseTable<LeadFormUpdateRequest>("LeadFormUpdateRequest") {
    val id = text("id") /* The ID of this lead form to be updated */
    val name = text("name") /* null */ /* Internal name of the lead form. */
    val privacyPolicyLink = text("privacy_policy_link") /* null */ /* A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language. */
    val hasAcceptedTerms = boolean("has_accepted_terms") /* null */ /* Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO */
    val completionMessage = text("completion_message") /* null */ /* A message for people who complete the form to let them know what happens next. */
    val status = long("status") /* null */
    val disclosureLanguage = text("disclosure_language") /* null */ /* Additional disclosure language to be included in the lead form. */

    /**
     * Create an entity of type LeadFormUpdateRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = LeadFormUpdateRequest(
        id = row[id] ?: "" /* kotlin.String */ /* The ID of this lead form to be updated */,
        name = row[name]  /* kotlin.String? */ /* Internal name of the lead form. */,
        privacyPolicyLink = row[privacyPolicyLink]  /* kotlin.String? */ /* A link to the advertiser's privacy policy. This will be included in the lead form's disclosure language. */,
        hasAcceptedTerms = row[hasAcceptedTerms]  /* kotlin.Boolean? */ /* Whether the advertiser has accepted Pinterest's terms of service for creating a lead ad.  By sending us TRUE for this parameter, you agree that (i) you will use any personal information received in compliance with the privacy policy you share with Pinterest, and (ii) you will comply with Pinterest's <a href=\"https://policy.pinterest.com/en/lead-ad-terms\">Lead Ad Terms</a>. As a reminder, all advertising on Pinterest is subject to the <a href=\"https://business.pinterest.com/en/pinterest-advertising-services-agreement/\">Pinterest Advertising Services Agreement</a> or an equivalent agreement as set forth on an IO */,
        completionMessage = row[completionMessage]  /* kotlin.String? */ /* A message for people who complete the form to let them know what happens next. */,
        status = LeadFormStatuss.createEntity(row, withReferences) /* LeadFormStatus? */,
        disclosureLanguage = row[disclosureLanguage]  /* kotlin.String? */ /* Additional disclosure language to be included in the lead form. */,
        questions = emptyList() /* kotlin.Array<LeadFormQuestion>? */ /* List of questions to be displayed on the lead form. */,
        policyLinks = emptyList() /* kotlin.Array<LeadFormCommonPolicyLinksInner>? */ /* List of additional policy links to be displayed on the lead form. */
    )

    /**
    * Assign all the columns from the entity of type LeadFormUpdateRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = LeadFormUpdateRequest()
    * database.update(LeadFormUpdateRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: LeadFormUpdateRequest) {
        this.apply {
            set(LeadFormUpdateRequests.id, entity.id)
            set(LeadFormUpdateRequests.name, entity.name)
            set(LeadFormUpdateRequests.privacyPolicyLink, entity.privacyPolicyLink)
            set(LeadFormUpdateRequests.hasAcceptedTerms, entity.hasAcceptedTerms)
            set(LeadFormUpdateRequests.completionMessage, entity.completionMessage)
            set(LeadFormUpdateRequests.status, entity.status)
            set(LeadFormUpdateRequests.disclosureLanguage, entity.disclosureLanguage)
        }
    }

}


object LeadFormUpdateRequestLeadFormQuestion : BaseTable<Pair<kotlin.Long, kotlin.Long>>("LeadFormUpdateRequestLeadFormQuestion") {
    val leadFormUpdateRequest = long("leadFormUpdateRequest")
    val leadFormQuestion = long("leadFormQuestion")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[leadFormUpdateRequest] ?: 0, row[leadFormQuestion] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(LeadFormUpdateRequestLeadFormQuestion.leadFormUpdateRequest, entity.first)
            set(LeadFormUpdateRequestLeadFormQuestion.leadFormQuestion, entity.second)
        }
    }

}

object LeadFormUpdateRequestLeadFormCommonPolicyLinksInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("LeadFormUpdateRequestLeadFormCommonPolicyLinksInner") {
    val leadFormUpdateRequest = long("leadFormUpdateRequest")
    val leadFormCommonPolicyLinksInner = long("leadFormCommonPolicyLinksInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[leadFormUpdateRequest] ?: 0, row[leadFormCommonPolicyLinksInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(LeadFormUpdateRequestLeadFormCommonPolicyLinksInner.leadFormUpdateRequest, entity.first)
            set(LeadFormUpdateRequestLeadFormCommonPolicyLinksInner.leadFormCommonPolicyLinksInner, entity.second)
        }
    }

}

