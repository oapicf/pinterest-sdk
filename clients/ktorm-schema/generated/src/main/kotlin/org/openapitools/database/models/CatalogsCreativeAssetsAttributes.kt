/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param title The name of the creative assets.
 * @param description Brief description of the creative assets.
 * @param link Link to the creative assets page.
 * @param iosDeepLink IOS deep link to the creative assets page.
 * @param androidDeepLink Link to the creative assets page.
 * @param googleProductCategory The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
 * @param customLabel0 Custom grouping of creative assets.
 * @param customLabel1 Custom grouping of creative assets.
 * @param customLabel2 Custom grouping of creative assets.
 * @param customLabel3 Custom grouping of creative assets.
 * @param customLabel4 Custom grouping of creative assets.
 * @param visibility Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.
 * @param imageLink The creative assets image.
 * @param videoLink The creative assets video.
 */
object CatalogsCreativeAssetsAttributess : BaseTable<CatalogsCreativeAssetsAttributes>("CatalogsCreativeAssetsAttributes") {
    val title = text("title") /* null */ /* The name of the creative assets. */
    val description = text("description") /* null */ /* Brief description of the creative assets. */
    val link = text("link") /* null */ /* Link to the creative assets page. */
    val iosDeepLink = text("ios_deep_link") /* null */ /* IOS deep link to the creative assets page. */
    val androidDeepLink = text("android_deep_link") /* null */ /* Link to the creative assets page. */
    val googleProductCategory = text("google_product_category") /* null */ /* The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted. */
    val customLabel0 = text("custom_label_0") /* null */ /* Custom grouping of creative assets. */
    val customLabel1 = text("custom_label_1") /* null */ /* Custom grouping of creative assets. */
    val customLabel2 = text("custom_label_2") /* null */ /* Custom grouping of creative assets. */
    val customLabel3 = text("custom_label_3") /* null */ /* Custom grouping of creative assets. */
    val customLabel4 = text("custom_label_4") /* null */ /* Custom grouping of creative assets. */
    val visibility = text("visibility") /* null */ /* Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’. */
    val imageLink = text("image_link") /* null */ /* The creative assets image. */
    val videoLink = text("video_link") /* null */ /* The creative assets video. */

    /**
     * Create an entity of type CatalogsCreativeAssetsAttributes from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsCreativeAssetsAttributes(
        title = row[title]  /* kotlin.String? */ /* The name of the creative assets. */,
        description = row[description]  /* kotlin.String? */ /* Brief description of the creative assets. */,
        link = row[link]  /* kotlin.String? */ /* Link to the creative assets page. */,
        iosDeepLink = row[iosDeepLink]  /* kotlin.String? */ /* IOS deep link to the creative assets page. */,
        androidDeepLink = row[androidDeepLink]  /* kotlin.String? */ /* Link to the creative assets page. */,
        googleProductCategory = row[googleProductCategory]  /* kotlin.String? */ /* The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted. */,
        customLabel0 = row[customLabel0]  /* kotlin.String? */ /* Custom grouping of creative assets. */,
        customLabel1 = row[customLabel1]  /* kotlin.String? */ /* Custom grouping of creative assets. */,
        customLabel2 = row[customLabel2]  /* kotlin.String? */ /* Custom grouping of creative assets. */,
        customLabel3 = row[customLabel3]  /* kotlin.String? */ /* Custom grouping of creative assets. */,
        customLabel4 = row[customLabel4]  /* kotlin.String? */ /* Custom grouping of creative assets. */,
        visibility = row[visibility]  /* kotlin.String? */ /* Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’. */,
        imageLink = row[imageLink]  /* kotlin.String? */ /* The creative assets image. */,
        videoLink = row[videoLink]  /* kotlin.String? */ /* The creative assets video. */
    )

    /**
    * Assign all the columns from the entity of type CatalogsCreativeAssetsAttributes to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsCreativeAssetsAttributes()
    * database.update(CatalogsCreativeAssetsAttributess, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsCreativeAssetsAttributes) {
        this.apply {
            set(CatalogsCreativeAssetsAttributess.title, entity.title)
            set(CatalogsCreativeAssetsAttributess.description, entity.description)
            set(CatalogsCreativeAssetsAttributess.link, entity.link)
            set(CatalogsCreativeAssetsAttributess.iosDeepLink, entity.iosDeepLink)
            set(CatalogsCreativeAssetsAttributess.androidDeepLink, entity.androidDeepLink)
            set(CatalogsCreativeAssetsAttributess.googleProductCategory, entity.googleProductCategory)
            set(CatalogsCreativeAssetsAttributess.customLabel0, entity.customLabel0)
            set(CatalogsCreativeAssetsAttributess.customLabel1, entity.customLabel1)
            set(CatalogsCreativeAssetsAttributess.customLabel2, entity.customLabel2)
            set(CatalogsCreativeAssetsAttributess.customLabel3, entity.customLabel3)
            set(CatalogsCreativeAssetsAttributess.customLabel4, entity.customLabel4)
            set(CatalogsCreativeAssetsAttributess.visibility, entity.visibility)
            set(CatalogsCreativeAssetsAttributess.imageLink, entity.imageLink)
            set(CatalogsCreativeAssetsAttributess.videoLink, entity.videoLink)
        }
    }

}


