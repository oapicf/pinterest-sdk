/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param eligible Advertiser eligible to create order lines
 * @param canEdit Advertiser eligible to update order lines
 * @param billtoInfos An array of Salesforce account information that includes address, io terms, etc.
 * @param currency 
 * @param pmpNames 
 * @param error Error indicator from Salesforce which could be \"No Error\"
 */
object SSIOAccountResponses : BaseTable<SSIOAccountResponse>("SSIOAccountResponse") {
    val eligible = boolean("eligible") /* null */ /* Advertiser eligible to create order lines */
    val canEdit = boolean("can_edit") /* null */ /* Advertiser eligible to update order lines */
    val currency = text("currency") /* null */
    val error = text("error") /* null */ /* Error indicator from Salesforce which could be \"No Error\" */

    /**
     * Create an entity of type SSIOAccountResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = SSIOAccountResponse(
        eligible = row[eligible]  /* kotlin.Boolean? */ /* Advertiser eligible to create order lines */,
        canEdit = row[canEdit]  /* kotlin.Boolean? */ /* Advertiser eligible to update order lines */,
        billtoInfos = emptyList() /* kotlin.Array<SSIOAccountItem>? */ /* An array of Salesforce account information that includes address, io terms, etc. */,
        currency = row[currency]  /* kotlin.String? */,
        pmpNames = emptyList() /* kotlin.Array<SSIOAccountPMPName>? */,
        error = row[error]  /* kotlin.String? */ /* Error indicator from Salesforce which could be \"No Error\" */
    )

    /**
    * Assign all the columns from the entity of type SSIOAccountResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = SSIOAccountResponse()
    * database.update(SSIOAccountResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: SSIOAccountResponse) {
        this.apply {
            set(SSIOAccountResponses.eligible, entity.eligible)
            set(SSIOAccountResponses.canEdit, entity.canEdit)
            set(SSIOAccountResponses.currency, entity.currency)
            set(SSIOAccountResponses.error, entity.error)
        }
    }

}


object SSIOAccountResponseSSIOAccountItem : BaseTable<Pair<kotlin.Long, kotlin.Long>>("SSIOAccountResponseSSIOAccountItem") {
    val sSIOAccountResponse = long("sSIOAccountResponse")
    val sSIOAccountItem = long("sSIOAccountItem")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[sSIOAccountResponse] ?: 0, row[sSIOAccountItem] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(SSIOAccountResponseSSIOAccountItem.sSIOAccountResponse, entity.first)
            set(SSIOAccountResponseSSIOAccountItem.sSIOAccountItem, entity.second)
        }
    }

}

object SSIOAccountResponseSSIOAccountPMPName : BaseTable<Pair<kotlin.Long, kotlin.Long>>("SSIOAccountResponseSSIOAccountPMPName") {
    val sSIOAccountResponse = long("sSIOAccountResponse")
    val sSIOAccountPMPName = long("sSIOAccountPMPName")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[sSIOAccountResponse] ?: 0, row[sSIOAccountPMPName] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(SSIOAccountResponseSSIOAccountPMPName.sSIOAccountResponse, entity.first)
            set(SSIOAccountResponseSSIOAccountPMPName.sSIOAccountPMPName, entity.second)
        }
    }

}

