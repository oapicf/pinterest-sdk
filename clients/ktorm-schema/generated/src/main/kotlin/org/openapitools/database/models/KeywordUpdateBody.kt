/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param keywords Keywords to update. Object array. Each object has 2 possible fields:<br>1. \"id\": (required) keyword ID<br>2. \"archived\": boolean. Should keyword be archived?<br>For example: [{\"id\":\"2886610576653\", \"archived\": false}, {\"id\":\"2886610576654\",  \"archived\": true}, ...]
 */
object KeywordUpdateBodys : BaseTable<KeywordUpdateBody>("KeywordUpdateBody") {

    /**
     * Create an entity of type KeywordUpdateBody from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = KeywordUpdateBody(
        keywords = emptyList() /* kotlin.Array<KeywordUpdate> */ /* Keywords to update. Object array. Each object has 2 possible fields:<br>1. \"id\": (required) keyword ID<br>2. \"archived\": boolean. Should keyword be archived?<br>For example: [{\"id\":\"2886610576653\", \"archived\": false}, {\"id\":\"2886610576654\",  \"archived\": true}, ...] */
    )

    /**
    * Assign all the columns from the entity of type KeywordUpdateBody to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = KeywordUpdateBody()
    * database.update(KeywordUpdateBodys, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: KeywordUpdateBody) {
        this.apply {
        }
    }

}


object KeywordUpdateBodyKeywordUpdate : BaseTable<Pair<kotlin.Long, kotlin.Long>>("KeywordUpdateBodyKeywordUpdate") {
    val keywordUpdateBody = long("keywordUpdateBody")
    val keywordUpdate = long("keywordUpdate")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[keywordUpdateBody] ?: 0, row[keywordUpdate] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(KeywordUpdateBodyKeywordUpdate.keywordUpdateBody, entity.first)
            set(KeywordUpdateBodyKeywordUpdate.keywordUpdate, entity.second)
        }
    }

}

