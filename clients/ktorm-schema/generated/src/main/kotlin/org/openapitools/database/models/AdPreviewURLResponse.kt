/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param url 'Preview URL, expires in 7 days. Can be used in an iframe. For example: https://ads.pinterest.com/ad-preview/74667c814dd2b19/ The preview object ID/key is the last param - 74667c814dd2b19'
 */
object AdPreviewURLResponses : BaseTable<AdPreviewURLResponse>("AdPreviewURLResponse") {
    val url = text("url") /* null */ /* 'Preview URL, expires in 7 days. Can be used in an iframe. For example: https://ads.pinterest.com/ad-preview/74667c814dd2b19/ The preview object ID/key is the last param - 74667c814dd2b19' */

    /**
     * Create an entity of type AdPreviewURLResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdPreviewURLResponse(
        url = row[url]  /* kotlin.String? */ /* 'Preview URL, expires in 7 days. Can be used in an iframe. For example: https://ads.pinterest.com/ad-preview/74667c814dd2b19/ The preview object ID/key is the last param - 74667c814dd2b19' */
    )

    /**
    * Assign all the columns from the entity of type AdPreviewURLResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdPreviewURLResponse()
    * database.update(AdPreviewURLResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdPreviewURLResponse) {
        this.apply {
            set(AdPreviewURLResponses.url, entity.url)
        }
    }

}


