/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param itemType 
 * @param title 
 * @param description 
 * @param link 
 * @param images 
 * @param coverImageUrl 
 * @param videoUrl Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
 * @param duration Duration (in milliseconds)
 * @param height Height (in pixels)
 * @param width Width (in pixels)
 */
object PinMediaMetadatas : BaseTable<PinMediaMetadata>("PinMediaMetadata") {
    val itemType = text("item_type") /* null */
    val title = text("title") /* null */
    val description = text("description") /* null */
    val link = text("link") /* null */
    val images = long("images") /* null */
    val coverImageUrl = text("cover_image_url") /* null */
    val videoUrl = text("video_url") /* null */ /* Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps. */
    val duration = decimal("duration") /* null */ /* Duration (in milliseconds) */
    val height = int("height") /* null */ /* Height (in pixels) */
    val width = int("width") /* null */ /* Width (in pixels) */

    /**
     * Create an entity of type PinMediaMetadata from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinMediaMetadata(
        itemType = row[itemType]  /* kotlin.String? */,
        title = row[title]  /* kotlin.String? */,
        description = row[description]  /* kotlin.String? */,
        link = row[link]  /* kotlin.String? */,
        images = ImageMetadataImagess.createEntity(row, withReferences) /* ImageMetadataImages? */,
        coverImageUrl = row[coverImageUrl]  /* kotlin.String? */,
        videoUrl = row[videoUrl]  /* kotlin.String? */ /* Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps. */,
        duration = row[duration]  /* java.math.BigDecimal? */ /* Duration (in milliseconds) */,
        height = row[height]  /* kotlin.Int? */ /* Height (in pixels) */,
        width = row[width]  /* kotlin.Int? */ /* Width (in pixels) */
    )

    /**
    * Assign all the columns from the entity of type PinMediaMetadata to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinMediaMetadata()
    * database.update(PinMediaMetadatas, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinMediaMetadata) {
        this.apply {
            set(PinMediaMetadatas.itemType, entity.itemType)
            set(PinMediaMetadatas.title, entity.title)
            set(PinMediaMetadatas.description, entity.description)
            set(PinMediaMetadatas.link, entity.link)
            set(PinMediaMetadatas.images, entity.images)
            set(PinMediaMetadatas.coverImageUrl, entity.coverImageUrl)
            set(PinMediaMetadatas.videoUrl, entity.videoUrl)
            set(PinMediaMetadatas.duration, entity.duration)
            set(PinMediaMetadatas.height, entity.height)
            set(PinMediaMetadatas.width, entity.width)
        }
    }

}


