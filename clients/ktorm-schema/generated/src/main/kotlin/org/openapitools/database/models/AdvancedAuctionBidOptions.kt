/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Object describing a retail catalog item's bid options (bid price and bid multipliers).
 * @param bidInMicroCurrency Bid price in micro currency. A value of 0 will stop distribution for this item in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. A value of `null` will fallback to the ad group's `bid_in_micro_currency`.
 * @param appTypeMultipliers 
 * @param placementMultipliers 
 */
object AdvancedAuctionBidOptionss : BaseTable<AdvancedAuctionBidOptions>("AdvancedAuctionBidOptions") {
    val bidInMicroCurrency = long("bid_in_micro_currency") /* null */ /* Bid price in micro currency. A value of 0 will stop distribution for this item in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. A value of `null` will fallback to the ad group's `bid_in_micro_currency`. */
    val appTypeMultipliers = long("app_type_multipliers") /* null */
    val placementMultipliers = long("placement_multipliers") /* null */

    /**
     * Create an entity of type AdvancedAuctionBidOptions from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdvancedAuctionBidOptions(
        bidInMicroCurrency = row[bidInMicroCurrency]  /* kotlin.Long? */ /* Bid price in micro currency. A value of 0 will stop distribution for this item in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. A value of `null` will fallback to the ad group's `bid_in_micro_currency`. */,
        appTypeMultipliers = AppTypeMultiplierss.createEntity(row, withReferences) /* AppTypeMultipliers? */,
        placementMultipliers = PlacementMultiplierss.createEntity(row, withReferences) /* PlacementMultipliers? */
    )

    /**
    * Assign all the columns from the entity of type AdvancedAuctionBidOptions to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdvancedAuctionBidOptions()
    * database.update(AdvancedAuctionBidOptionss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdvancedAuctionBidOptions) {
        this.apply {
            set(AdvancedAuctionBidOptionss.bidInMicroCurrency, entity.bidInMicroCurrency)
            set(AdvancedAuctionBidOptionss.appTypeMultipliers, entity.appTypeMultipliers)
            set(AdvancedAuctionBidOptionss.placementMultipliers, entity.placementMultipliers)
        }
    }

}


