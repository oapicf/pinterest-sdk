/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param field The field name containing an invalid value.
 * @param value The value that is invalid.
 * @param reason The reason the value is invalid.
 * @param logIndex Index of the log in the batch.
 */
object IntegrationLogsInvalidLogResponseRejectedLogsInners : BaseTable<IntegrationLogsInvalidLogResponseRejectedLogsInner>("IntegrationLogsInvalidLogResponse_rejected_logs_inner") {
    val field = text("field") /* The field name containing an invalid value. */
    val value = text("value") /* The value that is invalid. */
    val reason = text("reason") /* The reason the value is invalid. */
    val logIndex = int("log_index") /* null */ /* Index of the log in the batch. */

    /**
     * Create an entity of type IntegrationLogsInvalidLogResponseRejectedLogsInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = IntegrationLogsInvalidLogResponseRejectedLogsInner(
        field = row[field] ?: "" /* kotlin.String */ /* The field name containing an invalid value. */,
        value = row[value] ?: "" /* kotlin.String */ /* The value that is invalid. */,
        reason = row[reason] ?: "" /* kotlin.String */ /* The reason the value is invalid. */,
        logIndex = row[logIndex]  /* kotlin.Int? */ /* Index of the log in the batch. */
    )

    /**
    * Assign all the columns from the entity of type IntegrationLogsInvalidLogResponseRejectedLogsInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = IntegrationLogsInvalidLogResponseRejectedLogsInner()
    * database.update(IntegrationLogsInvalidLogResponseRejectedLogsInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: IntegrationLogsInvalidLogResponseRejectedLogsInner) {
        this.apply {
            set(IntegrationLogsInvalidLogResponseRejectedLogsInners.field, entity.field)
            set(IntegrationLogsInvalidLogResponseRejectedLogsInners.value, entity.value)
            set(IntegrationLogsInvalidLogResponseRejectedLogsInners.reason, entity.reason)
            set(IntegrationLogsInvalidLogResponseRejectedLogsInners.logIndex, entity.logIndex)
        }
    }

}


