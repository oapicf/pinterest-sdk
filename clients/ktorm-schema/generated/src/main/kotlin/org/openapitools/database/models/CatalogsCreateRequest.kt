/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Request object for creating a catalog.
 * @param catalogType Type of the catalog entity.
 * @param name A human-friendly name associated to a given catalog.
 */
object CatalogsCreateRequests : BaseTable<CatalogsCreateRequest>("CatalogsCreateRequest") {
    val catalogType = text("catalog_type").transform({ CatalogsCreateRequest.CatalogType.valueOf(it) }, { it.value }) /* Type of the catalog entity. */
    val name = text("name") /* A human-friendly name associated to a given catalog. */

    /**
     * Create an entity of type CatalogsCreateRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsCreateRequest(
        catalogType = row[catalogType] ?: CatalogsCreateRequest.CatalogType.valueOf("") /* kotlin.String */ /* Type of the catalog entity. */,
        name = row[name] ?: "" /* kotlin.String */ /* A human-friendly name associated to a given catalog. */
    )

    /**
    * Assign all the columns from the entity of type CatalogsCreateRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsCreateRequest()
    * database.update(CatalogsCreateRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsCreateRequest) {
        this.apply {
            set(CatalogsCreateRequests.catalogType, entity.catalogType)
            set(CatalogsCreateRequests.name, entity.name)
        }
    }

}


