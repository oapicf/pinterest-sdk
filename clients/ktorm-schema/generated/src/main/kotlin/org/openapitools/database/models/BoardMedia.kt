/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Board media.
 * @param imageCoverUrl Board cover image.
 * @param pinThumbnailUrls Board pin thumbnail urls.
 */
object BoardMedias : BaseTable<BoardMedia>("Board_media") {
    val imageCoverUrl = text("image_cover_url") /* null */ /* Board cover image. */

    /**
     * Create an entity of type BoardMedia from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = BoardMedia(
        imageCoverUrl = row[imageCoverUrl]  /* kotlin.String? */ /* Board cover image. */,
        pinThumbnailUrls = emptyList() /* kotlin.Array<kotlin.String>? */ /* Board pin thumbnail urls. */
    )

    /**
    * Assign all the columns from the entity of type BoardMedia to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = BoardMedia()
    * database.update(BoardMedias, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: BoardMedia) {
        this.apply {
            set(BoardMedias.imageCoverUrl, entity.imageCoverUrl)
        }
    }

}


object BoardMediaPinThumbnailUrls : BaseTable<Pair<kotlin.Long, kotlin.String>>("BoardMediaPinThumbnailUrls") {
    val boardMedia = long("boardMedia")
    val pinThumbnailUrls = text("pinThumbnailUrls")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[boardMedia] ?: 0, row[pinThumbnailUrls] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(BoardMediaPinThumbnailUrls.boardMedia, entity.first)
            set(BoardMediaPinThumbnailUrls.pinThumbnailUrls, entity.second)
        }
    }

}

