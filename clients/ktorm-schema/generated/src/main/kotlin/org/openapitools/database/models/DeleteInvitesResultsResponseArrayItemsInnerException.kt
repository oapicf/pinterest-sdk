/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * An exception object if there is an error performing the cancellation. It will only be provided if there is an error.
 * @param inviteId Unique identifier of an invite.
 * @param message Error message associated with the error in performing the action on the invite/request.
 */
object DeleteInvitesResultsResponseArrayItemsInnerExceptions : BaseTable<DeleteInvitesResultsResponseArrayItemsInnerException>("DeleteInvitesResultsResponseArray_items_inner_exception") {
    val inviteId = text("invite_id") /* null */ /* Unique identifier of an invite. */
    val message = text("message") /* null */ /* Error message associated with the error in performing the action on the invite/request. */

    /**
     * Create an entity of type DeleteInvitesResultsResponseArrayItemsInnerException from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = DeleteInvitesResultsResponseArrayItemsInnerException(
        inviteId = row[inviteId]  /* kotlin.String? */ /* Unique identifier of an invite. */,
        message = row[message]  /* kotlin.String? */ /* Error message associated with the error in performing the action on the invite/request. */
    )

    /**
    * Assign all the columns from the entity of type DeleteInvitesResultsResponseArrayItemsInnerException to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = DeleteInvitesResultsResponseArrayItemsInnerException()
    * database.update(DeleteInvitesResultsResponseArrayItemsInnerExceptions, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: DeleteInvitesResultsResponseArrayItemsInnerException) {
        this.apply {
            set(DeleteInvitesResultsResponseArrayItemsInnerExceptions.inviteId, entity.inviteId)
            set(DeleteInvitesResultsResponseArrayItemsInnerExceptions.message, entity.message)
        }
    }

}


