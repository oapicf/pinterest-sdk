/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * An object with a list of partners that were deleted.
 * @param deletedPartners List of partners whose business partnership have been terminated.
 */
object DeletePartnersResponses : BaseTable<DeletePartnersResponse>("DeletePartnersResponse") {

    /**
     * Create an entity of type DeletePartnersResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = DeletePartnersResponse(
        deletedPartners = emptyList() /* kotlin.Array<kotlin.String>? */ /* List of partners whose business partnership have been terminated. */
    )

    /**
    * Assign all the columns from the entity of type DeletePartnersResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = DeletePartnersResponse()
    * database.update(DeletePartnersResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: DeletePartnersResponse) {
        this.apply {
        }
    }

}


object DeletePartnersResponseDeletedPartners : BaseTable<Pair<kotlin.Long, kotlin.String>>("DeletePartnersResponseDeletedPartners") {
    val deletePartnersResponse = long("deletePartnersResponse")
    val deletedPartners = text("deletedPartners")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[deletePartnersResponse] ?: 0, row[deletedPartners] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(DeletePartnersResponseDeletedPartners.deletePartnersResponse, entity.first)
            set(DeletePartnersResponseDeletedPartners.deletedPartners, entity.second)
        }
    }

}

