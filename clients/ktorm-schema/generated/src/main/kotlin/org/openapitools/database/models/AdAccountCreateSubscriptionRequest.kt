/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param webhookUrl Standard HTTPS webhook URL.
 * @param leadFormId Lead form ID.
 * @param partnerAccessToken Partner access token. Only for clients that requires authentication. We recommend to avoid this param.
 * @param partnerRefreshToken Partner refresh token. Only for clients that requires authentication. We recommend to avoid this param.
 * @param partnerMetadata 
 */
object AdAccountCreateSubscriptionRequests : BaseTable<AdAccountCreateSubscriptionRequest>("AdAccountCreateSubscriptionRequest") {
    val webhookUrl = text("webhook_url") /* Standard HTTPS webhook URL. */
    val leadFormId = text("lead_form_id") /* null */ /* Lead form ID. */
    val partnerAccessToken = text("partner_access_token") /* null */ /* Partner access token. Only for clients that requires authentication. We recommend to avoid this param. */
    val partnerRefreshToken = text("partner_refresh_token") /* null */ /* Partner refresh token. Only for clients that requires authentication. We recommend to avoid this param. */
    val partnerMetadata = long("partner_metadata") /* null */

    /**
     * Create an entity of type AdAccountCreateSubscriptionRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdAccountCreateSubscriptionRequest(
        webhookUrl = row[webhookUrl] ?: "" /* kotlin.String */ /* Standard HTTPS webhook URL. */,
        leadFormId = row[leadFormId]  /* kotlin.String? */ /* Lead form ID. */,
        partnerAccessToken = row[partnerAccessToken]  /* kotlin.String? */ /* Partner access token. Only for clients that requires authentication. We recommend to avoid this param. */,
        partnerRefreshToken = row[partnerRefreshToken]  /* kotlin.String? */ /* Partner refresh token. Only for clients that requires authentication. We recommend to avoid this param. */,
        partnerMetadata = AdAccountCreateSubscriptionRequestPartnerMetadatas.createEntity(row, withReferences) /* AdAccountCreateSubscriptionRequestPartnerMetadata? */
    )

    /**
    * Assign all the columns from the entity of type AdAccountCreateSubscriptionRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdAccountCreateSubscriptionRequest()
    * database.update(AdAccountCreateSubscriptionRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdAccountCreateSubscriptionRequest) {
        this.apply {
            set(AdAccountCreateSubscriptionRequests.webhookUrl, entity.webhookUrl)
            set(AdAccountCreateSubscriptionRequests.leadFormId, entity.leadFormId)
            set(AdAccountCreateSubscriptionRequests.partnerAccessToken, entity.partnerAccessToken)
            set(AdAccountCreateSubscriptionRequests.partnerRefreshToken, entity.partnerRefreshToken)
            set(AdAccountCreateSubscriptionRequests.partnerMetadata, entity.partnerMetadata)
        }
    }

}


