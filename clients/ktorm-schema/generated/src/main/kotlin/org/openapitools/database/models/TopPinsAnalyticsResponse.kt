/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param dateAvailability 
 * @param pins 
 * @param sortBy 
 */
object TopPinsAnalyticsResponses : BaseTable<TopPinsAnalyticsResponse>("TopPinsAnalyticsResponse") {
    val dateAvailability = long("date_availability") /* null */
    val sortBy = text("sort_by").transform({ TopPinsAnalyticsResponse.SortBy.valueOf(it ?: "ENGAGEMENT") }, { it.value }) /* null */


    /**
     * Create an entity of type TopPinsAnalyticsResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TopPinsAnalyticsResponse(
        dateAvailability = TopPinsAnalyticsResponseDateAvailabilitys.createEntity(row, withReferences) /* TopPinsAnalyticsResponseDateAvailability? */,
        pins = emptyList() /* kotlin.Array<TopPinsAnalyticsResponsePinsInner>? */,
        sortBy = row[sortBy]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type TopPinsAnalyticsResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TopPinsAnalyticsResponse()
    * database.update(TopPinsAnalyticsResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TopPinsAnalyticsResponse) {
        this.apply {
            set(TopPinsAnalyticsResponses.dateAvailability, entity.dateAvailability)
            set(TopPinsAnalyticsResponses.sortBy, entity.sortBy)
        }
    }

}


object TopPinsAnalyticsResponseTopPinsAnalyticsResponsePinsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("TopPinsAnalyticsResponseTopPinsAnalyticsResponsePinsInner") {
    val topPinsAnalyticsResponse = long("topPinsAnalyticsResponse")
    val topPinsAnalyticsResponsePinsInner = long("topPinsAnalyticsResponsePinsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[topPinsAnalyticsResponse] ?: 0, row[topPinsAnalyticsResponsePinsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(TopPinsAnalyticsResponseTopPinsAnalyticsResponsePinsInner.topPinsAnalyticsResponse, entity.first)
            set(TopPinsAnalyticsResponseTopPinsAnalyticsResponsePinsInner.topPinsAnalyticsResponsePinsInner, entity.second)
        }
    }

}

