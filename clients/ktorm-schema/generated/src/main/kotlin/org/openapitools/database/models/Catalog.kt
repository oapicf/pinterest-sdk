/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Catalog entity
 * @param createdAt 
 * @param id ID of the catalog entity.
 * @param updatedAt 
 * @param name A human-friendly name associated to a catalog entity.
 * @param catalogType 
 */
object Catalogs : BaseTable<Catalog>("Catalog") {
    val createdAt = datetime("created_at")
    val id = text("id") /* ID of the catalog entity. */
    val updatedAt = datetime("updated_at")
    val name = text("name") /* A human-friendly name associated to a catalog entity. */
    val catalogType = long("catalog_type")

    /**
     * Create an entity of type Catalog from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = Catalog(
        createdAt = row[createdAt] /* java.time.LocalDateTime */,
        id = row[id] ?: "" /* kotlin.String */ /* ID of the catalog entity. */,
        updatedAt = row[updatedAt] /* java.time.LocalDateTime */,
        name = row[name] ?: "" /* kotlin.String */ /* A human-friendly name associated to a catalog entity. */,
        catalogType = CatalogsTypes.createEntity(row, withReferences) /* CatalogsType */
    )

    /**
    * Assign all the columns from the entity of type Catalog to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = Catalog()
    * database.update(Catalogs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: Catalog) {
        this.apply {
            set(Catalogs.createdAt, entity.createdAt)
            set(Catalogs.id, entity.id)
            set(Catalogs.updatedAt, entity.updatedAt)
            set(Catalogs.name, entity.name)
            set(Catalogs.catalogType, entity.catalogType)
        }
    }

}


