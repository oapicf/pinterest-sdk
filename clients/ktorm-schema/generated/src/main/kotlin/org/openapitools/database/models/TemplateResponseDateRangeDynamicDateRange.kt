/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * The dynamic date range of the template
 * @param type The date range type
 * @param range The dynamic range type
 */
object TemplateResponseDateRangeDynamicDateRanges : BaseTable<TemplateResponseDateRangeDynamicDateRange>("TemplateResponse_date_range_dynamic_date_range") {
    val type = text("type") /* null */ /* The date range type */
    val range = text("range").transform({ TemplateResponseDateRangeDynamicDateRange.Range.valueOf(it ?: "YEAR_TO_DATE") }, { it.value }) /* null */ /* The dynamic range type */


    /**
     * Create an entity of type TemplateResponseDateRangeDynamicDateRange from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TemplateResponseDateRangeDynamicDateRange(
        type = row[type]  /* kotlin.String? */ /* The date range type */,
        range = row[range]  /* kotlin.String? */ /* The dynamic range type */
    )

    /**
    * Assign all the columns from the entity of type TemplateResponseDateRangeDynamicDateRange to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TemplateResponseDateRangeDynamicDateRange()
    * database.update(TemplateResponseDateRangeDynamicDateRanges, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TemplateResponseDateRangeDynamicDateRange) {
        this.apply {
            set(TemplateResponseDateRangeDynamicDateRanges.type, entity.type)
            set(TemplateResponseDateRangeDynamicDateRanges.range, entity.range)
        }
    }

}


