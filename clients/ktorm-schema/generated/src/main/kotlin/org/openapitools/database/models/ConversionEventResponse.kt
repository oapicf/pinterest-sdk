/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param conversionEvent 
 * @param conversionTagId Id of the tag.
 * @param adAccountId Id of the ad account.
 * @param createdTime Creation date in epoch format.
 */
object ConversionEventResponses : BaseTable<ConversionEventResponse>("ConversionEventResponse") {
    val conversionEvent = long("conversion_event") /* null */
    val conversionTagId = text("conversion_tag_id") /* null */ /* Id of the tag. */
    val adAccountId = text("ad_account_id") /* null */ /* Id of the ad account. */
    val createdTime = int("created_time") /* null */ /* Creation date in epoch format. */

    /**
     * Create an entity of type ConversionEventResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ConversionEventResponse(
        conversionEvent = ConversionTagTypes.createEntity(row, withReferences) /* ConversionTagType? */,
        conversionTagId = row[conversionTagId]  /* kotlin.String? */ /* Id of the tag. */,
        adAccountId = row[adAccountId]  /* kotlin.String? */ /* Id of the ad account. */,
        createdTime = row[createdTime]  /* kotlin.Int? */ /* Creation date in epoch format. */
    )

    /**
    * Assign all the columns from the entity of type ConversionEventResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ConversionEventResponse()
    * database.update(ConversionEventResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ConversionEventResponse) {
        this.apply {
            set(ConversionEventResponses.conversionEvent, entity.conversionEvent)
            set(ConversionEventResponses.conversionTagId, entity.conversionTagId)
            set(ConversionEventResponses.adAccountId, entity.adAccountId)
            set(ConversionEventResponses.createdTime, entity.createdTime)
        }
    }

}


