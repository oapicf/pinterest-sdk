/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param items 
 * @param bookmark 
 */
object CatalogsProductGroupsList200Responses : BaseTable<CatalogsProductGroupsList200Response>("catalogs_product_groups_list_200_response") {
    val bookmark = text("bookmark") /* null */

    /**
     * Create an entity of type CatalogsProductGroupsList200Response from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsProductGroupsList200Response(
        items = emptyList() /* kotlin.Array<CatalogsVerticalProductGroup> */,
        bookmark = row[bookmark]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type CatalogsProductGroupsList200Response to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsProductGroupsList200Response()
    * database.update(CatalogsProductGroupsList200Responses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsProductGroupsList200Response) {
        this.apply {
            set(CatalogsProductGroupsList200Responses.bookmark, entity.bookmark)
        }
    }

}


object CatalogsProductGroupsList200ResponseCatalogsVerticalProductGroup : BaseTable<Pair<kotlin.Long, kotlin.Long>>("CatalogsProductGroupsList200ResponseCatalogsVerticalProductGroup") {
    val catalogsProductGroupsList200Response = long("catalogsProductGroupsList200Response")
    val catalogsVerticalProductGroup = long("catalogsVerticalProductGroup")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[catalogsProductGroupsList200Response] ?: 0, row[catalogsVerticalProductGroup] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(CatalogsProductGroupsList200ResponseCatalogsVerticalProductGroup.catalogsProductGroupsList200Response, entity.first)
            set(CatalogsProductGroupsList200ResponseCatalogsVerticalProductGroup.catalogsVerticalProductGroup, entity.second)
        }
    }

}

