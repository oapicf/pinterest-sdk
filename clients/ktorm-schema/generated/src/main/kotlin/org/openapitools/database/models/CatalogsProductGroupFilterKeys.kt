/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param MIN_PRICE 
 * @param MAX_PRICE 
 * @param CURRENCY 
 * @param ITEM_ID 
 * @param AVAILABILITY 
 * @param BRAND 
 * @param CONDITION 
 * @param CUSTOM_LABEL_0 
 * @param CUSTOM_LABEL_1 
 * @param CUSTOM_LABEL_2 
 * @param CUSTOM_LABEL_3 
 * @param CUSTOM_LABEL_4 
 * @param ITEM_GROUP_ID 
 * @param GENDER 
 * @param MEDIA_TYPE 
 * @param PRODUCT_TYPE_4 
 * @param PRODUCT_TYPE_3 
 * @param PRODUCT_TYPE_2 
 * @param PRODUCT_TYPE_1 
 * @param PRODUCT_TYPE_0 
 * @param GOOGLE_PRODUCT_CATEGORY_6 
 * @param GOOGLE_PRODUCT_CATEGORY_5 
 * @param GOOGLE_PRODUCT_CATEGORY_4 
 * @param GOOGLE_PRODUCT_CATEGORY_3 
 * @param GOOGLE_PRODUCT_CATEGORY_2 
 * @param GOOGLE_PRODUCT_CATEGORY_1 
 * @param GOOGLE_PRODUCT_CATEGORY_0 
 * @param PRODUCT_GROUP 
 */
object CatalogsProductGroupFilterKeyss : BaseTable<CatalogsProductGroupFilterKeys>("CatalogsProductGroupFilterKeys") {
    val MIN_PRICE = long("MIN_PRICE")
    val MAX_PRICE = long("MAX_PRICE")
    val CURRENCY = long("CURRENCY")
    val ITEM_ID = long("ITEM_ID")
    val AVAILABILITY = long("AVAILABILITY")
    val BRAND = long("BRAND")
    val CONDITION = long("CONDITION")
    val CUSTOM_LABEL_0 = long("CUSTOM_LABEL_0")
    val CUSTOM_LABEL_1 = long("CUSTOM_LABEL_1")
    val CUSTOM_LABEL_2 = long("CUSTOM_LABEL_2")
    val CUSTOM_LABEL_3 = long("CUSTOM_LABEL_3")
    val CUSTOM_LABEL_4 = long("CUSTOM_LABEL_4")
    val ITEM_GROUP_ID = long("ITEM_GROUP_ID")
    val GENDER = long("GENDER")
    val MEDIA_TYPE = long("MEDIA_TYPE")
    val PRODUCT_TYPE_4 = long("PRODUCT_TYPE_4")
    val PRODUCT_TYPE_3 = long("PRODUCT_TYPE_3")
    val PRODUCT_TYPE_2 = long("PRODUCT_TYPE_2")
    val PRODUCT_TYPE_1 = long("PRODUCT_TYPE_1")
    val PRODUCT_TYPE_0 = long("PRODUCT_TYPE_0")
    val GOOGLE_PRODUCT_CATEGORY_6 = long("GOOGLE_PRODUCT_CATEGORY_6")
    val GOOGLE_PRODUCT_CATEGORY_5 = long("GOOGLE_PRODUCT_CATEGORY_5")
    val GOOGLE_PRODUCT_CATEGORY_4 = long("GOOGLE_PRODUCT_CATEGORY_4")
    val GOOGLE_PRODUCT_CATEGORY_3 = long("GOOGLE_PRODUCT_CATEGORY_3")
    val GOOGLE_PRODUCT_CATEGORY_2 = long("GOOGLE_PRODUCT_CATEGORY_2")
    val GOOGLE_PRODUCT_CATEGORY_1 = long("GOOGLE_PRODUCT_CATEGORY_1")
    val GOOGLE_PRODUCT_CATEGORY_0 = long("GOOGLE_PRODUCT_CATEGORY_0")
    val PRODUCT_GROUP = long("PRODUCT_GROUP")

    /**
     * Create an entity of type CatalogsProductGroupFilterKeys from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsProductGroupFilterKeys(
        MIN_PRICE = CatalogsProductGroupPricingCriterias.createEntity(row, withReferences) /* CatalogsProductGroupPricingCriteria */,
        MAX_PRICE = CatalogsProductGroupPricingCriterias.createEntity(row, withReferences) /* CatalogsProductGroupPricingCriteria */,
        CURRENCY = CatalogsProductGroupCurrencyCriterias.createEntity(row, withReferences) /* CatalogsProductGroupCurrencyCriteria */,
        ITEM_ID = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        AVAILABILITY = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        BRAND = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        CONDITION = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        CUSTOM_LABEL_0 = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        CUSTOM_LABEL_1 = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        CUSTOM_LABEL_2 = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        CUSTOM_LABEL_3 = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        CUSTOM_LABEL_4 = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        ITEM_GROUP_ID = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */,
        GENDER = CatalogsProductGroupMultipleGenderCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleGenderCriteria */,
        MEDIA_TYPE = CatalogsProductGroupMultipleMediaTypesCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleMediaTypesCriteria */,
        PRODUCT_TYPE_4 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        PRODUCT_TYPE_3 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        PRODUCT_TYPE_2 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        PRODUCT_TYPE_1 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        PRODUCT_TYPE_0 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_6 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_5 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_4 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_3 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_2 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_1 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        GOOGLE_PRODUCT_CATEGORY_0 = CatalogsProductGroupMultipleStringListCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringListCriteria */,
        PRODUCT_GROUP = CatalogsProductGroupMultipleStringCriterias.createEntity(row, withReferences) /* CatalogsProductGroupMultipleStringCriteria */
    )

    /**
    * Assign all the columns from the entity of type CatalogsProductGroupFilterKeys to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsProductGroupFilterKeys()
    * database.update(CatalogsProductGroupFilterKeyss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsProductGroupFilterKeys) {
        this.apply {
            set(CatalogsProductGroupFilterKeyss.MIN_PRICE, entity.MIN_PRICE)
            set(CatalogsProductGroupFilterKeyss.MAX_PRICE, entity.MAX_PRICE)
            set(CatalogsProductGroupFilterKeyss.CURRENCY, entity.CURRENCY)
            set(CatalogsProductGroupFilterKeyss.ITEM_ID, entity.ITEM_ID)
            set(CatalogsProductGroupFilterKeyss.AVAILABILITY, entity.AVAILABILITY)
            set(CatalogsProductGroupFilterKeyss.BRAND, entity.BRAND)
            set(CatalogsProductGroupFilterKeyss.CONDITION, entity.CONDITION)
            set(CatalogsProductGroupFilterKeyss.CUSTOM_LABEL_0, entity.CUSTOM_LABEL_0)
            set(CatalogsProductGroupFilterKeyss.CUSTOM_LABEL_1, entity.CUSTOM_LABEL_1)
            set(CatalogsProductGroupFilterKeyss.CUSTOM_LABEL_2, entity.CUSTOM_LABEL_2)
            set(CatalogsProductGroupFilterKeyss.CUSTOM_LABEL_3, entity.CUSTOM_LABEL_3)
            set(CatalogsProductGroupFilterKeyss.CUSTOM_LABEL_4, entity.CUSTOM_LABEL_4)
            set(CatalogsProductGroupFilterKeyss.ITEM_GROUP_ID, entity.ITEM_GROUP_ID)
            set(CatalogsProductGroupFilterKeyss.GENDER, entity.GENDER)
            set(CatalogsProductGroupFilterKeyss.MEDIA_TYPE, entity.MEDIA_TYPE)
            set(CatalogsProductGroupFilterKeyss.PRODUCT_TYPE_4, entity.PRODUCT_TYPE_4)
            set(CatalogsProductGroupFilterKeyss.PRODUCT_TYPE_3, entity.PRODUCT_TYPE_3)
            set(CatalogsProductGroupFilterKeyss.PRODUCT_TYPE_2, entity.PRODUCT_TYPE_2)
            set(CatalogsProductGroupFilterKeyss.PRODUCT_TYPE_1, entity.PRODUCT_TYPE_1)
            set(CatalogsProductGroupFilterKeyss.PRODUCT_TYPE_0, entity.PRODUCT_TYPE_0)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_6, entity.GOOGLE_PRODUCT_CATEGORY_6)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_5, entity.GOOGLE_PRODUCT_CATEGORY_5)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_4, entity.GOOGLE_PRODUCT_CATEGORY_4)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_3, entity.GOOGLE_PRODUCT_CATEGORY_3)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_2, entity.GOOGLE_PRODUCT_CATEGORY_2)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_1, entity.GOOGLE_PRODUCT_CATEGORY_1)
            set(CatalogsProductGroupFilterKeyss.GOOGLE_PRODUCT_CATEGORY_0, entity.GOOGLE_PRODUCT_CATEGORY_0)
            set(CatalogsProductGroupFilterKeyss.PRODUCT_GROUP, entity.PRODUCT_GROUP)
        }
    }

}


