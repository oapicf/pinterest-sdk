/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param status Whether the event was processed successfully.
 * @param errorMessage Error message containing more information about why the event failed to be processed.
 * @param warningMessage Warning messages about any fields in the event which are not standard. These are not critical to event processing.
 */
object ConversionApiResponseEventsInners : BaseTable<ConversionApiResponseEventsInner>("ConversionApiResponse_events_inner") {
    val status = text("status").transform({ ConversionApiResponseEventsInner.Status.valueOf(it) }, { it.value }) /* Whether the event was processed successfully. */
    val errorMessage = text("error_message") /* null */ /* Error message containing more information about why the event failed to be processed. */
    val warningMessage = text("warning_message") /* null */ /* Warning messages about any fields in the event which are not standard. These are not critical to event processing. */

    /**
     * Create an entity of type ConversionApiResponseEventsInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ConversionApiResponseEventsInner(
        status = row[status] ?: ConversionApiResponseEventsInner.Status.valueOf("") /* kotlin.String */ /* Whether the event was processed successfully. */,
        errorMessage = row[errorMessage]  /* kotlin.String? */ /* Error message containing more information about why the event failed to be processed. */,
        warningMessage = row[warningMessage]  /* kotlin.String? */ /* Warning messages about any fields in the event which are not standard. These are not critical to event processing. */
    )

    /**
    * Assign all the columns from the entity of type ConversionApiResponseEventsInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ConversionApiResponseEventsInner()
    * database.update(ConversionApiResponseEventsInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ConversionApiResponseEventsInner) {
        this.apply {
            set(ConversionApiResponseEventsInners.status, entity.status)
            set(ConversionApiResponseEventsInners.errorMessage, entity.errorMessage)
            set(ConversionApiResponseEventsInners.warningMessage, entity.warningMessage)
        }
    }

}


