/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Request for creation of entities in bulk.
 * @param campaigns 
 * @param adGroups 
 * @param ads 
 * @param productGroups 
 * @param keywords 
 */
object BulkUpsertRequestCreates : BaseTable<BulkUpsertRequestCreate>("BulkUpsertRequestCreate") {

    /**
     * Create an entity of type BulkUpsertRequestCreate from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = BulkUpsertRequestCreate(
        campaigns = emptyList() /* kotlin.Array<CampaignCreateRequest>? */,
        adGroups = emptyList() /* kotlin.Array<AdGroupCreateRequest>? */,
        ads = emptyList() /* kotlin.Array<AdCreateRequest>? */,
        productGroups = emptyList() /* kotlin.Array<ProductGroupPromotionCreateRequest>? */,
        keywords = emptyList() /* kotlin.Array<KeywordsRequest>? */
    )

    /**
    * Assign all the columns from the entity of type BulkUpsertRequestCreate to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = BulkUpsertRequestCreate()
    * database.update(BulkUpsertRequestCreates, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: BulkUpsertRequestCreate) {
        this.apply {
        }
    }

}


object BulkUpsertRequestCreateCampaignCreateRequest : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkUpsertRequestCreateCampaignCreateRequest") {
    val bulkUpsertRequestCreate = long("bulkUpsertRequestCreate")
    val campaignCreateRequest = long("campaignCreateRequest")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkUpsertRequestCreate] ?: 0, row[campaignCreateRequest] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkUpsertRequestCreateCampaignCreateRequest.bulkUpsertRequestCreate, entity.first)
            set(BulkUpsertRequestCreateCampaignCreateRequest.campaignCreateRequest, entity.second)
        }
    }

}

object BulkUpsertRequestCreateAdGroupCreateRequest : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkUpsertRequestCreateAdGroupCreateRequest") {
    val bulkUpsertRequestCreate = long("bulkUpsertRequestCreate")
    val adGroupCreateRequest = long("adGroupCreateRequest")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkUpsertRequestCreate] ?: 0, row[adGroupCreateRequest] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkUpsertRequestCreateAdGroupCreateRequest.bulkUpsertRequestCreate, entity.first)
            set(BulkUpsertRequestCreateAdGroupCreateRequest.adGroupCreateRequest, entity.second)
        }
    }

}

object BulkUpsertRequestCreateAdCreateRequest : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkUpsertRequestCreateAdCreateRequest") {
    val bulkUpsertRequestCreate = long("bulkUpsertRequestCreate")
    val adCreateRequest = long("adCreateRequest")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkUpsertRequestCreate] ?: 0, row[adCreateRequest] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkUpsertRequestCreateAdCreateRequest.bulkUpsertRequestCreate, entity.first)
            set(BulkUpsertRequestCreateAdCreateRequest.adCreateRequest, entity.second)
        }
    }

}

object BulkUpsertRequestCreateProductGroupPromotionCreateRequest : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkUpsertRequestCreateProductGroupPromotionCreateRequest") {
    val bulkUpsertRequestCreate = long("bulkUpsertRequestCreate")
    val productGroupPromotionCreateRequest = long("productGroupPromotionCreateRequest")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkUpsertRequestCreate] ?: 0, row[productGroupPromotionCreateRequest] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkUpsertRequestCreateProductGroupPromotionCreateRequest.bulkUpsertRequestCreate, entity.first)
            set(BulkUpsertRequestCreateProductGroupPromotionCreateRequest.productGroupPromotionCreateRequest, entity.second)
        }
    }

}

object BulkUpsertRequestCreateKeywordsRequest : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkUpsertRequestCreateKeywordsRequest") {
    val bulkUpsertRequestCreate = long("bulkUpsertRequestCreate")
    val keywordsRequest = long("keywordsRequest")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkUpsertRequestCreate] ?: 0, row[keywordsRequest] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkUpsertRequestCreateKeywordsRequest.bulkUpsertRequestCreate, entity.first)
            set(BulkUpsertRequestCreateKeywordsRequest.keywordsRequest, entity.second)
        }
    }

}

