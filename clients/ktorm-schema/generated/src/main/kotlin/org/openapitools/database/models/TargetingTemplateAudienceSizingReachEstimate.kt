/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param estimate 
 * @param lowerBound 
 * @param upperBound 
 */
object TargetingTemplateAudienceSizingReachEstimates : BaseTable<TargetingTemplateAudienceSizingReachEstimate>("TargetingTemplateAudienceSizing_reach_estimate") {
    val estimate = long("estimate") /* null */
    val lowerBound = long("lower_bound") /* null */
    val upperBound = long("upper_bound") /* null */

    /**
     * Create an entity of type TargetingTemplateAudienceSizingReachEstimate from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TargetingTemplateAudienceSizingReachEstimate(
        estimate = row[estimate]  /* kotlin.Long? */,
        lowerBound = row[lowerBound]  /* kotlin.Long? */,
        upperBound = row[upperBound]  /* kotlin.Long? */
    )

    /**
    * Assign all the columns from the entity of type TargetingTemplateAudienceSizingReachEstimate to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TargetingTemplateAudienceSizingReachEstimate()
    * database.update(TargetingTemplateAudienceSizingReachEstimates, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TargetingTemplateAudienceSizingReachEstimate) {
        this.apply {
            set(TargetingTemplateAudienceSizingReachEstimates.estimate, entity.estimate)
            set(TargetingTemplateAudienceSizingReachEstimates.lowerBound, entity.lowerBound)
            set(TargetingTemplateAudienceSizingReachEstimates.upperBound, entity.upperBound)
        }
    }

}


