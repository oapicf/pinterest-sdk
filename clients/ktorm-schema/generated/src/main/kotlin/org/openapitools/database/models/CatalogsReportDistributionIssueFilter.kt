/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param reportType 
 * @param catalogId Unique identifier of a catalog. If not given, oldest catalog will be used
 */
object CatalogsReportDistributionIssueFilters : BaseTable<CatalogsReportDistributionIssueFilter>("CatalogsReportDistributionIssueFilter") {
    val reportType = text("report_type").transform({ CatalogsReportDistributionIssueFilter.ReportType.valueOf(it) }, { it.value })
    val catalogId = text("catalog_id") /* null */ /* Unique identifier of a catalog. If not given, oldest catalog will be used */

    /**
     * Create an entity of type CatalogsReportDistributionIssueFilter from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsReportDistributionIssueFilter(
        reportType = row[reportType] ?: CatalogsReportDistributionIssueFilter.ReportType.valueOf("") /* kotlin.String */,
        catalogId = row[catalogId]  /* kotlin.String? */ /* Unique identifier of a catalog. If not given, oldest catalog will be used */
    )

    /**
    * Assign all the columns from the entity of type CatalogsReportDistributionIssueFilter to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsReportDistributionIssueFilter()
    * database.update(CatalogsReportDistributionIssueFilters, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsReportDistributionIssueFilter) {
        this.apply {
            set(CatalogsReportDistributionIssueFilters.reportType, entity.reportType)
            set(CatalogsReportDistributionIssueFilters.catalogId, entity.catalogId)
        }
    }

}


