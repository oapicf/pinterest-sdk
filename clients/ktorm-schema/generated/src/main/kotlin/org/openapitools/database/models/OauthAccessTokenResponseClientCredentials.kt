/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * A successful OAuth client token response for the client token flow.
 * @param accessToken 
 * @param tokenType 
 * @param expiresIn 
 * @param scope 
 * @param responseType 
 */
object OauthAccessTokenResponseClientCredentialss : BaseTable<OauthAccessTokenResponseClientCredentials>("OauthAccessTokenResponseClientCredentials") {
    val accessToken = text("access_token")
    val tokenType = text("token_type")
    val expiresIn = int("expires_in")
    val scope = text("scope")
    val responseType = text("response_type").transform({ OauthAccessTokenResponseClientCredentials.ResponseType.valueOf(it ?: "authorization_code") }, { it.value }) /* null */


    /**
     * Create an entity of type OauthAccessTokenResponseClientCredentials from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OauthAccessTokenResponseClientCredentials(
        accessToken = row[accessToken] ?: "" /* kotlin.String */,
        tokenType = row[tokenType] ?: "" /* kotlin.String */,
        expiresIn = row[expiresIn] ?: 0 /* kotlin.Int */,
        scope = row[scope] ?: "" /* kotlin.String */,
        responseType = row[responseType]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type OauthAccessTokenResponseClientCredentials to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OauthAccessTokenResponseClientCredentials()
    * database.update(OauthAccessTokenResponseClientCredentialss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OauthAccessTokenResponseClientCredentials) {
        this.apply {
            set(OauthAccessTokenResponseClientCredentialss.accessToken, entity.accessToken)
            set(OauthAccessTokenResponseClientCredentialss.tokenType, entity.tokenType)
            set(OauthAccessTokenResponseClientCredentialss.expiresIn, entity.expiresIn)
            set(OauthAccessTokenResponseClientCredentialss.scope, entity.scope)
            set(OauthAccessTokenResponseClientCredentialss.responseType, entity.responseType)
        }
    }

}


