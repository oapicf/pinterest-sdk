/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Product counts for a Hotel CatalogsProductGroup
 * @param catalogType 
 * @param total 
 */
object CatalogsHotelProductGroupProductCountss : BaseTable<CatalogsHotelProductGroupProductCounts>("CatalogsHotelProductGroupProductCounts") {
    val catalogType = text("catalog_type").transform({ CatalogsHotelProductGroupProductCounts.CatalogType.valueOf(it) }, { it.value })
    val total = decimal("total")

    /**
     * Create an entity of type CatalogsHotelProductGroupProductCounts from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsHotelProductGroupProductCounts(
        catalogType = row[catalogType] ?: CatalogsHotelProductGroupProductCounts.CatalogType.valueOf("") /* kotlin.String */,
        total = row[total] ?: 0 /* java.math.BigDecimal */
    )

    /**
    * Assign all the columns from the entity of type CatalogsHotelProductGroupProductCounts to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsHotelProductGroupProductCounts()
    * database.update(CatalogsHotelProductGroupProductCountss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsHotelProductGroupProductCounts) {
        this.apply {
            set(CatalogsHotelProductGroupProductCountss.catalogType, entity.catalogType)
            set(CatalogsHotelProductGroupProductCountss.total, entity.total)
        }
    }

}


