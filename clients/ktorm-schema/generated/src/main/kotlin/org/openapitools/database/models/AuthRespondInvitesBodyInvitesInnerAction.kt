/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param acceptInvite Whether the invite/request is accepted.
 * @param assetIdToPermissions An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
 */
object AuthRespondInvitesBodyInvitesInnerActions : BaseTable<AuthRespondInvitesBodyInvitesInnerAction>("AuthRespondInvitesBody_invites_inner_action") {
    val acceptInvite = boolean("accept_invite") /* Whether the invite/request is accepted. */
    val assetIdToPermissions = blob("asset_id_to_permissions") /* null */ /* An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner.  */

    /**
     * Create an entity of type AuthRespondInvitesBodyInvitesInnerAction from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AuthRespondInvitesBodyInvitesInnerAction(
        acceptInvite = row[acceptInvite] ?: false /* kotlin.Boolean */ /* Whether the invite/request is accepted. */,
        assetIdToPermissions = row[assetIdToPermissions]  /* kotlin.collections.Map<kotlin.String, kotlin.Array<Permissions>>? */ /* An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner.  */
    )

    /**
    * Assign all the columns from the entity of type AuthRespondInvitesBodyInvitesInnerAction to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AuthRespondInvitesBodyInvitesInnerAction()
    * database.update(AuthRespondInvitesBodyInvitesInnerActions, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AuthRespondInvitesBodyInvitesInnerAction) {
        this.apply {
            set(AuthRespondInvitesBodyInvitesInnerActions.acceptInvite, entity.acceptInvite)
            set(AuthRespondInvitesBodyInvitesInnerActions.assetIdToPermissions, entity.assetIdToPermissions)
        }
    }

}


