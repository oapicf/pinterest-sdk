/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param title Carousel Pin slot title.
 * @param description Carousel Pin slot description.
 * @param link Carousel Pin slot link.
 */
object PinUpdateCarouselSlotsInners : BaseTable<PinUpdateCarouselSlotsInner>("PinUpdate_carousel_slots_inner") {
    val title = text("title") /* null */ /* Carousel Pin slot title. */
    val description = text("description") /* null */ /* Carousel Pin slot description. */
    val link = text("link") /* null */ /* Carousel Pin slot link. */

    /**
     * Create an entity of type PinUpdateCarouselSlotsInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinUpdateCarouselSlotsInner(
        title = row[title]  /* kotlin.String? */ /* Carousel Pin slot title. */,
        description = row[description]  /* kotlin.String? */ /* Carousel Pin slot description. */,
        link = row[link]  /* kotlin.String? */ /* Carousel Pin slot link. */
    )

    /**
    * Assign all the columns from the entity of type PinUpdateCarouselSlotsInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinUpdateCarouselSlotsInner()
    * database.update(PinUpdateCarouselSlotsInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinUpdateCarouselSlotsInner) {
        this.apply {
            set(PinUpdateCarouselSlotsInners.title, entity.title)
            set(PinUpdateCarouselSlotsInners.description, entity.description)
            set(PinUpdateCarouselSlotsInners.link, entity.link)
        }
    }

}


