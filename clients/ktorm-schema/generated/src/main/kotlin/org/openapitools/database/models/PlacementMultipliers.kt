/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * This represents a mapping from placement to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified placement in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. All placement multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).
 * @param PLACEMENT 
 */
object PlacementMultiplierss : BaseTable<PlacementMultipliers>("PlacementMultipliers") {
    val PLACEMENT = text("PLACEMENT").transform({ PlacementMultipliers.PLACEMENT.valueOf(it ?: "SEARCH") }, { it.value }) /* null */


    /**
     * Create an entity of type PlacementMultipliers from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PlacementMultipliers(
        PLACEMENT = row[PLACEMENT]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type PlacementMultipliers to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PlacementMultipliers()
    * database.update(PlacementMultiplierss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PlacementMultipliers) {
        this.apply {
            set(PlacementMultiplierss.PLACEMENT, entity.PLACEMENT)
        }
    }

}


