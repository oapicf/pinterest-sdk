/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * A sequence of weekly observations of the relative search volume for this keyword over the past year.<br /> These values are normalized to a [0-100] range, and can be used to visualize the history of user interest in this keyword. By default, normalization is applied independently to the time series of each keyword, but the `normalize_against_group` query parameter can be used in cases where you wish to compare relative volume between keywords.<br /> **Note**: The date of each observation is in ISO-8601 format and represents the *end* of the week.  For example, a value of `2023-10-31` would include searches that happened between `2023-10-25` and `2023-10-31`.
 * @param date 
 */
object TrendingKeywordsResponseTrendsInnerTimeSeriess : BaseTable<TrendingKeywordsResponseTrendsInnerTimeSeries>("TrendingKeywordsResponse_trends_inner_time_series") {
    val date = date("date") /* null */

    /**
     * Create an entity of type TrendingKeywordsResponseTrendsInnerTimeSeries from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TrendingKeywordsResponseTrendsInnerTimeSeries(
        date = row[date]  /* java.time.LocalDate? */
    )

    /**
    * Assign all the columns from the entity of type TrendingKeywordsResponseTrendsInnerTimeSeries to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TrendingKeywordsResponseTrendsInnerTimeSeries()
    * database.update(TrendingKeywordsResponseTrendsInnerTimeSeriess, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TrendingKeywordsResponseTrendsInnerTimeSeries) {
        this.apply {
            set(TrendingKeywordsResponseTrendsInnerTimeSeriess.date, entity.date)
        }
    }

}


