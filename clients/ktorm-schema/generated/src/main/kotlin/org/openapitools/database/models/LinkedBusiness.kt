/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param username Username
 * @param imageSmallUrl image_small_url
 * @param imageMediumUrl image_medium_url
 * @param imageLargeUrl image_large_url
 * @param imageXlargeUrl image_xlarge_url
 */
object LinkedBusinesss : BaseTable<LinkedBusiness>("LinkedBusiness") {
    val username = text("username") /* null */ /* Username */
    val imageSmallUrl = text("image_small_url") /* null */ /* image_small_url */
    val imageMediumUrl = text("image_medium_url") /* null */ /* image_medium_url */
    val imageLargeUrl = text("image_large_url") /* null */ /* image_large_url */
    val imageXlargeUrl = text("image_xlarge_url") /* null */ /* image_xlarge_url */

    /**
     * Create an entity of type LinkedBusiness from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = LinkedBusiness(
        username = row[username]  /* kotlin.String? */ /* Username */,
        imageSmallUrl = row[imageSmallUrl]  /* kotlin.String? */ /* image_small_url */,
        imageMediumUrl = row[imageMediumUrl]  /* kotlin.String? */ /* image_medium_url */,
        imageLargeUrl = row[imageLargeUrl]  /* kotlin.String? */ /* image_large_url */,
        imageXlargeUrl = row[imageXlargeUrl]  /* kotlin.String? */ /* image_xlarge_url */
    )

    /**
    * Assign all the columns from the entity of type LinkedBusiness to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = LinkedBusiness()
    * database.update(LinkedBusinesss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: LinkedBusiness) {
        this.apply {
            set(LinkedBusinesss.username, entity.username)
            set(LinkedBusinesss.imageSmallUrl, entity.imageSmallUrl)
            set(LinkedBusinesss.imageMediumUrl, entity.imageMediumUrl)
            set(LinkedBusinesss.imageLargeUrl, entity.imageLargeUrl)
            set(LinkedBusinesss.imageXlargeUrl, entity.imageXlargeUrl)
        }
    }

}


