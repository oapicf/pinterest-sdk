/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Ad accounts and profiles the business member/partner has access to.
 * @param adAccounts List of ad account IDs and respective permission levels.
 * @param profiles List of profile IDs and respective permission levels.
 */
object BusinessMemberAssetsSummarys : BaseTable<BusinessMemberAssetsSummary>("BusinessMemberAssetsSummary") {

    /**
     * Create an entity of type BusinessMemberAssetsSummary from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = BusinessMemberAssetsSummary(
        adAccounts = emptyList() /* kotlin.Array<BusinessMemberAssetsSummaryAdAccountsInner>? */ /* List of ad account IDs and respective permission levels. */,
        profiles = emptyList() /* kotlin.Array<BusinessMemberAssetsSummaryProfilesInner>? */ /* List of profile IDs and respective permission levels. */
    )

    /**
    * Assign all the columns from the entity of type BusinessMemberAssetsSummary to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = BusinessMemberAssetsSummary()
    * database.update(BusinessMemberAssetsSummarys, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: BusinessMemberAssetsSummary) {
        this.apply {
        }
    }

}


object BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryAdAccountsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryAdAccountsInner") {
    val businessMemberAssetsSummary = long("businessMemberAssetsSummary")
    val businessMemberAssetsSummaryAdAccountsInner = long("businessMemberAssetsSummaryAdAccountsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[businessMemberAssetsSummary] ?: 0, row[businessMemberAssetsSummaryAdAccountsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryAdAccountsInner.businessMemberAssetsSummary, entity.first)
            set(BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryAdAccountsInner.businessMemberAssetsSummaryAdAccountsInner, entity.second)
        }
    }

}

object BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryProfilesInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryProfilesInner") {
    val businessMemberAssetsSummary = long("businessMemberAssetsSummary")
    val businessMemberAssetsSummaryProfilesInner = long("businessMemberAssetsSummaryProfilesInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[businessMemberAssetsSummary] ?: 0, row[businessMemberAssetsSummaryProfilesInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryProfilesInner.businessMemberAssetsSummary, entity.first)
            set(BusinessMemberAssetsSummaryBusinessMemberAssetsSummaryProfilesInner.businessMemberAssetsSummaryProfilesInner, entity.second)
        }
    }

}

