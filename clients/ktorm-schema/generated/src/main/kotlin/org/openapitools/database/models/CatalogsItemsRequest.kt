/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Request object of catalogs items
 * @param country 
 * @param language 
 * @param filters 
 */
object CatalogsItemsRequests : BaseTable<CatalogsItemsRequest>("CatalogsItemsRequest") {
    val country = long("country")
    val language = long("language")
    val filters = long("filters")

    /**
     * Create an entity of type CatalogsItemsRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsItemsRequest(
        country = Countrys.createEntity(row, withReferences) /* Country */,
        language = CatalogsItemsRequestLanguages.createEntity(row, withReferences) /* CatalogsItemsRequestLanguage */,
        filters = CatalogsItemsPostFilterss.createEntity(row, withReferences) /* CatalogsItemsPostFilters */
    )

    /**
    * Assign all the columns from the entity of type CatalogsItemsRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsItemsRequest()
    * database.update(CatalogsItemsRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsItemsRequest) {
        this.apply {
            set(CatalogsItemsRequests.country, entity.country)
            set(CatalogsItemsRequests.language, entity.language)
            set(CatalogsItemsRequests.filters, entity.filters)
        }
    }

}


