/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Request containing operations to perform on bid prices and bid multipliers for a batch of retail catalog items
 * @param catalogId Catalog id pertaining to all items
 * @param items Array of item bid option operations
 */
object AdvancedAuctionItemsSubmitRequests : BaseTable<AdvancedAuctionItemsSubmitRequest>("AdvancedAuctionItemsSubmitRequest") {
    val catalogId = text("catalog_id") /* Catalog id pertaining to all items */

    /**
     * Create an entity of type AdvancedAuctionItemsSubmitRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdvancedAuctionItemsSubmitRequest(
        catalogId = row[catalogId] ?: "" /* kotlin.String */ /* Catalog id pertaining to all items */,
        items = emptyList() /* kotlin.Array<AdvancedAuctionItemsSubmitRecord> */ /* Array of item bid option operations */
    )

    /**
    * Assign all the columns from the entity of type AdvancedAuctionItemsSubmitRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdvancedAuctionItemsSubmitRequest()
    * database.update(AdvancedAuctionItemsSubmitRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdvancedAuctionItemsSubmitRequest) {
        this.apply {
            set(AdvancedAuctionItemsSubmitRequests.catalogId, entity.catalogId)
        }
    }

}


object AdvancedAuctionItemsSubmitRequestAdvancedAuctionItemsSubmitRecord : BaseTable<Pair<kotlin.Long, kotlin.Long>>("AdvancedAuctionItemsSubmitRequestAdvancedAuctionItemsSubmitRecord") {
    val advancedAuctionItemsSubmitRequest = long("advancedAuctionItemsSubmitRequest")
    val advancedAuctionItemsSubmitRecord = long("advancedAuctionItemsSubmitRecord")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[advancedAuctionItemsSubmitRequest] ?: 0, row[advancedAuctionItemsSubmitRecord] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(AdvancedAuctionItemsSubmitRequestAdvancedAuctionItemsSubmitRecord.advancedAuctionItemsSubmitRequest, entity.first)
            set(AdvancedAuctionItemsSubmitRequestAdvancedAuctionItemsSubmitRecord.advancedAuctionItemsSubmitRecord, entity.second)
        }
    }

}

