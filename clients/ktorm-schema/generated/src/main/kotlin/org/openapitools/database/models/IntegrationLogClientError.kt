/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * System error details included in the log sent by the client.
 * @param cause Original cause of the error.
 * @param columnNumber Column number in the line of the file that raised the error.
 * @param fileName Filename where the error happened.
 * @param lineNumber Line number where the error happened.
 * @param message Human-readable description of the error.
 * @param messageDetail More detail about the message.
 * @param name Filename where the error happened.
 * @param number Integer that specifies the error code.
 * @param stackTrace Stack trace of where the error happened.
 */
object IntegrationLogClientErrors : BaseTable<IntegrationLogClientError>("IntegrationLogClientError") {
    val cause = text("cause") /* null */ /* Original cause of the error. */
    val columnNumber = int("column_number") /* null */ /* Column number in the line of the file that raised the error. */
    val fileName = text("file_name") /* null */ /* Filename where the error happened. */
    val lineNumber = int("line_number") /* null */ /* Line number where the error happened. */
    val message = text("message") /* null */ /* Human-readable description of the error. */
    val messageDetail = text("message_detail") /* null */ /* More detail about the message. */
    val name = text("name") /* null */ /* Filename where the error happened. */
    val number = int("number") /* null */ /* Integer that specifies the error code. */
    val stackTrace = text("stack_trace") /* null */ /* Stack trace of where the error happened. */

    /**
     * Create an entity of type IntegrationLogClientError from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = IntegrationLogClientError(
        cause = row[cause]  /* kotlin.String? */ /* Original cause of the error. */,
        columnNumber = row[columnNumber]  /* kotlin.Int? */ /* Column number in the line of the file that raised the error. */,
        fileName = row[fileName]  /* kotlin.String? */ /* Filename where the error happened. */,
        lineNumber = row[lineNumber]  /* kotlin.Int? */ /* Line number where the error happened. */,
        message = row[message]  /* kotlin.String? */ /* Human-readable description of the error. */,
        messageDetail = row[messageDetail]  /* kotlin.String? */ /* More detail about the message. */,
        name = row[name]  /* kotlin.String? */ /* Filename where the error happened. */,
        number = row[number]  /* kotlin.Int? */ /* Integer that specifies the error code. */,
        stackTrace = row[stackTrace]  /* kotlin.String? */ /* Stack trace of where the error happened. */
    )

    /**
    * Assign all the columns from the entity of type IntegrationLogClientError to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = IntegrationLogClientError()
    * database.update(IntegrationLogClientErrors, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: IntegrationLogClientError) {
        this.apply {
            set(IntegrationLogClientErrors.cause, entity.cause)
            set(IntegrationLogClientErrors.columnNumber, entity.columnNumber)
            set(IntegrationLogClientErrors.fileName, entity.fileName)
            set(IntegrationLogClientErrors.lineNumber, entity.lineNumber)
            set(IntegrationLogClientErrors.message, entity.message)
            set(IntegrationLogClientErrors.messageDetail, entity.messageDetail)
            set(IntegrationLogClientErrors.name, entity.name)
            set(IntegrationLogClientErrors.number, entity.number)
            set(IntegrationLogClientErrors.stackTrace, entity.stackTrace)
        }
    }

}


