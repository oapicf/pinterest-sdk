/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param items SSIO order lines by ad acount id
 * @param bookmark 
 */
object SsioOrderLinesGetByAdAccount200Responses : BaseTable<SsioOrderLinesGetByAdAccount200Response>("ssio_order_lines_get_by_ad_account_200_response") {
    val bookmark = text("bookmark") /* null */

    /**
     * Create an entity of type SsioOrderLinesGetByAdAccount200Response from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = SsioOrderLinesGetByAdAccount200Response(
        items = emptyList() /* kotlin.Array<SSIOOrderLine> */ /* SSIO order lines by ad acount id */,
        bookmark = row[bookmark]  /* kotlin.String? */
    )

    /**
    * Assign all the columns from the entity of type SsioOrderLinesGetByAdAccount200Response to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = SsioOrderLinesGetByAdAccount200Response()
    * database.update(SsioOrderLinesGetByAdAccount200Responses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: SsioOrderLinesGetByAdAccount200Response) {
        this.apply {
            set(SsioOrderLinesGetByAdAccount200Responses.bookmark, entity.bookmark)
        }
    }

}


object SsioOrderLinesGetByAdAccount200ResponseSSIOOrderLine : BaseTable<Pair<kotlin.Long, kotlin.Long>>("SsioOrderLinesGetByAdAccount200ResponseSSIOOrderLine") {
    val ssioOrderLinesGetByAdAccount200Response = long("ssioOrderLinesGetByAdAccount200Response")
    val sSIOOrderLine = long("sSIOOrderLine")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[ssioOrderLinesGetByAdAccount200Response] ?: 0, row[sSIOOrderLine] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(SsioOrderLinesGetByAdAccount200ResponseSSIOOrderLine.ssioOrderLinesGetByAdAccount200Response, entity.first)
            set(SsioOrderLinesGetByAdAccount200ResponseSSIOOrderLine.sSIOOrderLine, entity.second)
        }
    }

}

