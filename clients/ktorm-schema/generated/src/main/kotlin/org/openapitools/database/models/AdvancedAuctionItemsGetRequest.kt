/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Request object used to get bid options values for a batch of retail catalog items
 * @param catalogId Catalog id pertaining to the retail item
 * @param items A list of retail catalog items to fetch bid options for
 */
object AdvancedAuctionItemsGetRequests : BaseTable<AdvancedAuctionItemsGetRequest>("AdvancedAuctionItemsGetRequest") {
    val catalogId = text("catalog_id") /* Catalog id pertaining to the retail item */

    /**
     * Create an entity of type AdvancedAuctionItemsGetRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdvancedAuctionItemsGetRequest(
        catalogId = row[catalogId] ?: "" /* kotlin.String */ /* Catalog id pertaining to the retail item */,
        items = emptyList() /* kotlin.Array<AdvancedAuctionItemsGetRecord> */ /* A list of retail catalog items to fetch bid options for */
    )

    /**
    * Assign all the columns from the entity of type AdvancedAuctionItemsGetRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdvancedAuctionItemsGetRequest()
    * database.update(AdvancedAuctionItemsGetRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdvancedAuctionItemsGetRequest) {
        this.apply {
            set(AdvancedAuctionItemsGetRequests.catalogId, entity.catalogId)
        }
    }

}


object AdvancedAuctionItemsGetRequestAdvancedAuctionItemsGetRecord : BaseTable<Pair<kotlin.Long, kotlin.Long>>("AdvancedAuctionItemsGetRequestAdvancedAuctionItemsGetRecord") {
    val advancedAuctionItemsGetRequest = long("advancedAuctionItemsGetRequest")
    val advancedAuctionItemsGetRecord = long("advancedAuctionItemsGetRecord")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[advancedAuctionItemsGetRequest] ?: 0, row[advancedAuctionItemsGetRecord] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(AdvancedAuctionItemsGetRequestAdvancedAuctionItemsGetRecord.advancedAuctionItemsGetRequest, entity.first)
            set(AdvancedAuctionItemsGetRequestAdvancedAuctionItemsGetRecord.advancedAuctionItemsGetRecord, entity.second)
        }
    }

}

