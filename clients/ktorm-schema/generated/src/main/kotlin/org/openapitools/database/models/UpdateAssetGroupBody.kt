/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param assetGroupsToUpdate A list of asset groups and the data that will be used to update them.
 */
object UpdateAssetGroupBodys : BaseTable<UpdateAssetGroupBody>("UpdateAssetGroupBody") {

    /**
     * Create an entity of type UpdateAssetGroupBody from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = UpdateAssetGroupBody(
        assetGroupsToUpdate = emptyList() /* kotlin.Array<UpdateAssetGroupBodyAssetGroupsToUpdateInner>? */ /* A list of asset groups and the data that will be used to update them. */
    )

    /**
    * Assign all the columns from the entity of type UpdateAssetGroupBody to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = UpdateAssetGroupBody()
    * database.update(UpdateAssetGroupBodys, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: UpdateAssetGroupBody) {
        this.apply {
        }
    }

}


object UpdateAssetGroupBodyUpdateAssetGroupBodyAssetGroupsToUpdateInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("UpdateAssetGroupBodyUpdateAssetGroupBodyAssetGroupsToUpdateInner") {
    val updateAssetGroupBody = long("updateAssetGroupBody")
    val updateAssetGroupBodyAssetGroupsToUpdateInner = long("updateAssetGroupBodyAssetGroupsToUpdateInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[updateAssetGroupBody] ?: 0, row[updateAssetGroupBodyAssetGroupsToUpdateInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(UpdateAssetGroupBodyUpdateAssetGroupBodyAssetGroupsToUpdateInner.updateAssetGroupBody, entity.first)
            set(UpdateAssetGroupBodyUpdateAssetGroupBodyAssetGroupsToUpdateInner.updateAssetGroupBodyAssetGroupsToUpdateInner, entity.second)
        }
    }

}

