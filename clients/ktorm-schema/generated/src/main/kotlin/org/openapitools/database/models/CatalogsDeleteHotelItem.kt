/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * A hotel item to be deleted
 * @param hotelId The catalog hotel id in the merchant namespace
 * @param operation 
 */
object CatalogsDeleteHotelItems : BaseTable<CatalogsDeleteHotelItem>("CatalogsDeleteHotelItem") {
    val hotelId = text("hotel_id") /* The catalog hotel id in the merchant namespace */
    val operation = text("operation").transform({ CatalogsDeleteHotelItem.Operation.valueOf(it) }, { it.value })

    /**
     * Create an entity of type CatalogsDeleteHotelItem from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsDeleteHotelItem(
        hotelId = row[hotelId] ?: "" /* kotlin.String */ /* The catalog hotel id in the merchant namespace */,
        operation = row[operation] ?: CatalogsDeleteHotelItem.Operation.valueOf("") /* kotlin.String */
    )

    /**
    * Assign all the columns from the entity of type CatalogsDeleteHotelItem to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsDeleteHotelItem()
    * database.update(CatalogsDeleteHotelItems, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsDeleteHotelItem) {
        this.apply {
            set(CatalogsDeleteHotelItems.hotelId, entity.hotelId)
            set(CatalogsDeleteHotelItems.operation, entity.operation)
        }
    }

}


