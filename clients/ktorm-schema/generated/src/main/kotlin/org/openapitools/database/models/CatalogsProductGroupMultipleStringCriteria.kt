/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param propertyValues 
 * @param negated 
 */
object CatalogsProductGroupMultipleStringCriterias : BaseTable<CatalogsProductGroupMultipleStringCriteria>("CatalogsProductGroupMultipleStringCriteria") {
    val negated = boolean("negated") /* null */

    /**
     * Create an entity of type CatalogsProductGroupMultipleStringCriteria from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsProductGroupMultipleStringCriteria(
        propertyValues = emptyList() /* kotlin.Array<kotlin.String> */,
        negated = row[negated] ?: false /* kotlin.Boolean? */
    )

    /**
    * Assign all the columns from the entity of type CatalogsProductGroupMultipleStringCriteria to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsProductGroupMultipleStringCriteria()
    * database.update(CatalogsProductGroupMultipleStringCriterias, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsProductGroupMultipleStringCriteria) {
        this.apply {
            set(CatalogsProductGroupMultipleStringCriterias.negated, entity.negated)
        }
    }

}


object CatalogsProductGroupMultipleStringCriteriaPropertyValues : BaseTable<Pair<kotlin.Long, kotlin.String>>("CatalogsProductGroupMultipleStringCriteriaPropertyValues") {
    val catalogsProductGroupMultipleStringCriteria = long("catalogsProductGroupMultipleStringCriteria")
    val propertyValues = text("propertyValues")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[catalogsProductGroupMultipleStringCriteria] ?: 0, row[propertyValues] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(CatalogsProductGroupMultipleStringCriteriaPropertyValues.catalogsProductGroupMultipleStringCriteria, entity.first)
            set(CatalogsProductGroupMultipleStringCriteriaPropertyValues.propertyValues, entity.second)
        }
    }

}

