/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * If specified, you must provide all properties
 * @param score Your hotel's rating.
 * @param numberOfReviewers Total number of people who have rated this hotel.
 * @param maxScore Max value for the hotel rating score.
 * @param ratingSystem System you use for guest reviews.
 */
object CatalogsHotelGuestRatingss : BaseTable<CatalogsHotelGuestRatings>("CatalogsHotelGuestRatings") {
    val score = decimal("score") /* null */ /* Your hotel's rating. */
    val numberOfReviewers = int("number_of_reviewers") /* null */ /* Total number of people who have rated this hotel. */
    val maxScore = decimal("max_score") /* null */ /* Max value for the hotel rating score. */
    val ratingSystem = text("rating_system") /* null */ /* System you use for guest reviews. */

    /**
     * Create an entity of type CatalogsHotelGuestRatings from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsHotelGuestRatings(
        score = row[score]  /* java.math.BigDecimal? */ /* Your hotel's rating. */,
        numberOfReviewers = row[numberOfReviewers]  /* kotlin.Int? */ /* Total number of people who have rated this hotel. */,
        maxScore = row[maxScore]  /* java.math.BigDecimal? */ /* Max value for the hotel rating score. */,
        ratingSystem = row[ratingSystem]  /* kotlin.String? */ /* System you use for guest reviews. */
    )

    /**
    * Assign all the columns from the entity of type CatalogsHotelGuestRatings to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsHotelGuestRatings()
    * database.update(CatalogsHotelGuestRatingss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsHotelGuestRatings) {
        this.apply {
            set(CatalogsHotelGuestRatingss.score, entity.score)
            set(CatalogsHotelGuestRatingss.numberOfReviewers, entity.numberOfReviewers)
            set(CatalogsHotelGuestRatingss.maxScore, entity.maxScore)
            set(CatalogsHotelGuestRatingss.ratingSystem, entity.ratingSystem)
        }
    }

}


