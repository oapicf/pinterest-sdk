/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param lifetimeMetrics The lifetime metric name and value.
 * @param dailyMetrics Array with the requested daily metric records
 * @param summaryMetrics The metric name and value over the requested period for each requested metric
 */
object PinAnalyticsMetricsResponses : BaseTable<PinAnalyticsMetricsResponse>("PinAnalyticsMetricsResponse") {
    val lifetimeMetrics = blob("lifetime_metrics") /* null */ /* The lifetime metric name and value. */
    val summaryMetrics = blob("summary_metrics") /* null */ /* The metric name and value over the requested period for each requested metric */

    /**
     * Create an entity of type PinAnalyticsMetricsResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinAnalyticsMetricsResponse(
        lifetimeMetrics = row[lifetimeMetrics]  /* kotlin.collections.Map<kotlin.String, kotlin.Int>? */ /* The lifetime metric name and value. */,
        dailyMetrics = emptyList() /* kotlin.Array<PinAnalyticsMetricsResponseDailyMetricsInner>? */ /* Array with the requested daily metric records */,
        summaryMetrics = row[summaryMetrics]  /* kotlin.collections.Map<kotlin.String, java.math.BigDecimal>? */ /* The metric name and value over the requested period for each requested metric */
    )

    /**
    * Assign all the columns from the entity of type PinAnalyticsMetricsResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinAnalyticsMetricsResponse()
    * database.update(PinAnalyticsMetricsResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinAnalyticsMetricsResponse) {
        this.apply {
            set(PinAnalyticsMetricsResponses.lifetimeMetrics, entity.lifetimeMetrics)
            set(PinAnalyticsMetricsResponses.summaryMetrics, entity.summaryMetrics)
        }
    }

}


object PinAnalyticsMetricsResponsePinAnalyticsMetricsResponseDailyMetricsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("PinAnalyticsMetricsResponsePinAnalyticsMetricsResponseDailyMetricsInner") {
    val pinAnalyticsMetricsResponse = long("pinAnalyticsMetricsResponse")
    val pinAnalyticsMetricsResponseDailyMetricsInner = long("pinAnalyticsMetricsResponseDailyMetricsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[pinAnalyticsMetricsResponse] ?: 0, row[pinAnalyticsMetricsResponseDailyMetricsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(PinAnalyticsMetricsResponsePinAnalyticsMetricsResponseDailyMetricsInner.pinAnalyticsMetricsResponse, entity.first)
            set(PinAnalyticsMetricsResponsePinAnalyticsMetricsResponseDailyMetricsInner.pinAnalyticsMetricsResponseDailyMetricsInner, entity.second)
        }
    }

}

