/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Pin with image.
 * @param mediaType 
 * @param images 
 */
object PinMediaWithImages : BaseTable<PinMediaWithImage>("PinMediaWithImage") {
    val mediaType = text("media_type") /* null */
    val images = long("images") /* null */

    /**
     * Create an entity of type PinMediaWithImage from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinMediaWithImage(
        mediaType = row[mediaType]  /* kotlin.String? */,
        images = PinMediaWithImageAllOfImagess.createEntity(row, withReferences) /* PinMediaWithImageAllOfImages? */
    )

    /**
    * Assign all the columns from the entity of type PinMediaWithImage to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinMediaWithImage()
    * database.update(PinMediaWithImages, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinMediaWithImage) {
        this.apply {
            set(PinMediaWithImages.mediaType, entity.mediaType)
            set(PinMediaWithImages.images, entity.images)
        }
    }

}


