/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param startTime Unix UTC timestamp.
 * @param endTime Unix UTC timestamp.
 * @param name Campaign name
 * @param campaignStatus 
 * @param objectiveType 
 */
object BulkDownloadRequestCampaignFilters : BaseTable<BulkDownloadRequestCampaignFilter>("BulkDownloadRequest_campaign_filter") {
    val startTime = text("start_time") /* null */ /* Unix UTC timestamp. */
    val endTime = text("end_time") /* null */ /* Unix UTC timestamp. */
    val name = text("name") /* null */ /* Campaign name */

    /**
     * Create an entity of type BulkDownloadRequestCampaignFilter from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = BulkDownloadRequestCampaignFilter(
        startTime = row[startTime]  /* kotlin.String? */ /* Unix UTC timestamp. */,
        endTime = row[endTime]  /* kotlin.String? */ /* Unix UTC timestamp. */,
        name = row[name]  /* kotlin.String? */ /* Campaign name */,
        campaignStatus = emptyList() /* kotlin.Array<CampaignSummaryStatus>? */,
        objectiveType = emptyList() /* kotlin.Array<ObjectiveType>? */
    )

    /**
    * Assign all the columns from the entity of type BulkDownloadRequestCampaignFilter to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = BulkDownloadRequestCampaignFilter()
    * database.update(BulkDownloadRequestCampaignFilters, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: BulkDownloadRequestCampaignFilter) {
        this.apply {
            set(BulkDownloadRequestCampaignFilters.startTime, entity.startTime)
            set(BulkDownloadRequestCampaignFilters.endTime, entity.endTime)
            set(BulkDownloadRequestCampaignFilters.name, entity.name)
        }
    }

}


object BulkDownloadRequestCampaignFilterCampaignSummaryStatus : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkDownloadRequestCampaignFilterCampaignSummaryStatus") {
    val bulkDownloadRequestCampaignFilter = long("bulkDownloadRequestCampaignFilter")
    val campaignSummaryStatus = long("campaignSummaryStatus")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkDownloadRequestCampaignFilter] ?: 0, row[campaignSummaryStatus] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkDownloadRequestCampaignFilterCampaignSummaryStatus.bulkDownloadRequestCampaignFilter, entity.first)
            set(BulkDownloadRequestCampaignFilterCampaignSummaryStatus.campaignSummaryStatus, entity.second)
        }
    }

}

object BulkDownloadRequestCampaignFilterObjectiveType : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkDownloadRequestCampaignFilterObjectiveType") {
    val bulkDownloadRequestCampaignFilter = long("bulkDownloadRequestCampaignFilter")
    val objectiveType = long("objectiveType")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkDownloadRequestCampaignFilter] ?: 0, row[objectiveType] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkDownloadRequestCampaignFilterObjectiveType.bulkDownloadRequestCampaignFilter, entity.first)
            set(BulkDownloadRequestCampaignFilterObjectiveType.objectiveType, entity.second)
        }
    }

}

