/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Pin fields for updates
 * @param altText Pin's alternative text.
 * @param boardId The id of the board to move the Pin onto.
 * @param boardSectionId <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID.
 * @param description Pin description - 800 characters maximum.
 * @param link URL viewer is taken to when they click pin.
 * @param title The native pin title that creators explicitly prefer to display.
 * @param carouselSlots Carousel Pin slots data.
 * @param note Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
 */
object PinUpdates : BaseTable<PinUpdate>("PinUpdate") {
    val altText = text("alt_text") /* null */ /* Pin's alternative text. */
    val boardId = text("board_id") /* null */ /* The id of the board to move the Pin onto. */
    val boardSectionId = text("board_section_id") /* null */ /* <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID. */
    val description = text("description") /* null */ /* Pin description - 800 characters maximum. */
    val link = text("link") /* null */ /* URL viewer is taken to when they click pin. */
    val title = text("title") /* null */ /* The native pin title that creators explicitly prefer to display. */
    val note = text("note") /* null */ /* Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>. */

    /**
     * Create an entity of type PinUpdate from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinUpdate(
        altText = row[altText]  /* kotlin.String? */ /* Pin's alternative text. */,
        boardId = row[boardId]  /* kotlin.String? */ /* The id of the board to move the Pin onto. */,
        boardSectionId = row[boardSectionId]  /* kotlin.String? */ /* <a href=\"https://help.pinterest.com/en/article/create-a-board-section\">Board section</a> ID. */,
        description = row[description]  /* kotlin.String? */ /* Pin description - 800 characters maximum. */,
        link = row[link]  /* kotlin.String? */ /* URL viewer is taken to when they click pin. */,
        title = row[title]  /* kotlin.String? */ /* The native pin title that creators explicitly prefer to display. */,
        carouselSlots = emptyList() /* kotlin.Array<PinUpdateCarouselSlotsInner>? */ /* Carousel Pin slots data. */,
        note = row[note]  /* kotlin.String? */ /* Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>. */
    )

    /**
    * Assign all the columns from the entity of type PinUpdate to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinUpdate()
    * database.update(PinUpdates, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinUpdate) {
        this.apply {
            set(PinUpdates.altText, entity.altText)
            set(PinUpdates.boardId, entity.boardId)
            set(PinUpdates.boardSectionId, entity.boardSectionId)
            set(PinUpdates.description, entity.description)
            set(PinUpdates.link, entity.link)
            set(PinUpdates.title, entity.title)
            set(PinUpdates.note, entity.note)
        }
    }

}


object PinUpdatePinUpdateCarouselSlotsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("PinUpdatePinUpdateCarouselSlotsInner") {
    val pinUpdate = long("pinUpdate")
    val pinUpdateCarouselSlotsInner = long("pinUpdateCarouselSlotsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[pinUpdate] ?: 0, row[pinUpdateCarouselSlotsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(PinUpdatePinUpdateCarouselSlotsInner.pinUpdate, entity.first)
            set(PinUpdatePinUpdateCarouselSlotsInner.pinUpdateCarouselSlotsInner, entity.second)
        }
    }

}

