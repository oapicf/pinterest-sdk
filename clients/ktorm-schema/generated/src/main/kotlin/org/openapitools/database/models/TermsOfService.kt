/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param id The ID of the terms of service
 * @param html The terms of service content
 * @param hasAccepted Whether the ad account has accepted terms of service.
 * @param adAccountId The ID of the ad account.
 */
object TermsOfServices : BaseTable<TermsOfService>("TermsOfService") {
    val id = text("id") /* null */ /* The ID of the terms of service */
    val html = text("html") /* null */ /* The terms of service content */
    val hasAccepted = boolean("has_accepted") /* null */ /* Whether the ad account has accepted terms of service. */
    val adAccountId = text("ad_account_id") /* null */ /* The ID of the ad account. */

    /**
     * Create an entity of type TermsOfService from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TermsOfService(
        id = row[id]  /* kotlin.String? */ /* The ID of the terms of service */,
        html = row[html]  /* kotlin.String? */ /* The terms of service content */,
        hasAccepted = row[hasAccepted]  /* kotlin.Boolean? */ /* Whether the ad account has accepted terms of service. */,
        adAccountId = row[adAccountId]  /* kotlin.String? */ /* The ID of the ad account. */
    )

    /**
    * Assign all the columns from the entity of type TermsOfService to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TermsOfService()
    * database.update(TermsOfServices, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TermsOfService) {
        this.apply {
            set(TermsOfServices.id, entity.id)
            set(TermsOfServices.html, entity.html)
            set(TermsOfServices.hasAccepted, entity.hasAccepted)
            set(TermsOfServices.adAccountId, entity.adAccountId)
        }
    }

}


