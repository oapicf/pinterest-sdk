/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param errors 
 * @param info 
 * @param warnings 
 */
object CatalogsFeedIngestionDetailss : BaseTable<CatalogsFeedIngestionDetails>("CatalogsFeedIngestionDetails") {
    val errors = long("errors")
    val info = long("info")
    val warnings = long("warnings")

    /**
     * Create an entity of type CatalogsFeedIngestionDetails from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsFeedIngestionDetails(
        errors = CatalogsFeedIngestionErrorss.createEntity(row, withReferences) /* CatalogsFeedIngestionErrors */,
        info = CatalogsFeedIngestionInfos.createEntity(row, withReferences) /* CatalogsFeedIngestionInfo */,
        warnings = CatalogsFeedIngestionWarningss.createEntity(row, withReferences) /* CatalogsFeedIngestionWarnings */
    )

    /**
    * Assign all the columns from the entity of type CatalogsFeedIngestionDetails to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsFeedIngestionDetails()
    * database.update(CatalogsFeedIngestionDetailss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsFeedIngestionDetails) {
        this.apply {
            set(CatalogsFeedIngestionDetailss.errors, entity.errors)
            set(CatalogsFeedIngestionDetailss.info, entity.info)
            set(CatalogsFeedIngestionDetailss.warnings, entity.warnings)
        }
    }

}


