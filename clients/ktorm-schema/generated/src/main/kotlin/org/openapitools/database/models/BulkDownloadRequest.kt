/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Ad entities to get in bulk request.
 * @param entityTypes All entity types specified will be downloaded. Fewer types result in faster downloads.
 * @param entityIds All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
 * @param updatedSince Unix UTC timestamp to retrieve all entities that have changed since this time.
 * @param campaignFilter 
 * @param outputFormat 
 */
object BulkDownloadRequests : BaseTable<BulkDownloadRequest>("BulkDownloadRequest") {
    val updatedSince = text("updated_since") /* null */ /* Unix UTC timestamp to retrieve all entities that have changed since this time. */
    val campaignFilter = long("campaign_filter") /* null */
    val outputFormat = long("output_format") /* null */

    /**
     * Create an entity of type BulkDownloadRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = BulkDownloadRequest(
        entityTypes = emptyList() /* kotlin.Array<BulkEntityType>? */ /* All entity types specified will be downloaded. Fewer types result in faster downloads. */,
        entityIds = emptyList() /* kotlin.Array<kotlin.String>? */ /* All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded. */,
        updatedSince = row[updatedSince]  /* kotlin.String? */ /* Unix UTC timestamp to retrieve all entities that have changed since this time. */,
        campaignFilter = BulkDownloadRequestCampaignFilters.createEntity(row, withReferences) /* BulkDownloadRequestCampaignFilter? */,
        outputFormat = BulkOutputFormats.createEntity(row, withReferences) /* BulkOutputFormat? */
    )

    /**
    * Assign all the columns from the entity of type BulkDownloadRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = BulkDownloadRequest()
    * database.update(BulkDownloadRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: BulkDownloadRequest) {
        this.apply {
            set(BulkDownloadRequests.updatedSince, entity.updatedSince)
            set(BulkDownloadRequests.campaignFilter, entity.campaignFilter)
            set(BulkDownloadRequests.outputFormat, entity.outputFormat)
        }
    }

}


object BulkDownloadRequestBulkEntityType : BaseTable<Pair<kotlin.Long, kotlin.Long>>("BulkDownloadRequestBulkEntityType") {
    val bulkDownloadRequest = long("bulkDownloadRequest")
    val bulkEntityType = long("bulkEntityType")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[bulkDownloadRequest] ?: 0, row[bulkEntityType] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(BulkDownloadRequestBulkEntityType.bulkDownloadRequest, entity.first)
            set(BulkDownloadRequestBulkEntityType.bulkEntityType, entity.second)
        }
    }

}

object BulkDownloadRequestEntityIds : BaseTable<Pair<kotlin.Long, kotlin.String>>("BulkDownloadRequestEntityIds") {
    val bulkDownloadRequest = long("bulkDownloadRequest")
    val entityIds = text("entityIds")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[bulkDownloadRequest] ?: 0, row[entityIds] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(BulkDownloadRequestEntityIds.bulkDownloadRequest, entity.first)
            set(BulkDownloadRequestEntityIds.entityIds, entity.second)
        }
    }

}

