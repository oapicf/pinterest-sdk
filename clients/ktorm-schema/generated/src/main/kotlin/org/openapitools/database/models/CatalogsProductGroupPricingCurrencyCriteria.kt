/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param operator 
 * @param value 
 * @param currency 
 * @param negated 
 */
object CatalogsProductGroupPricingCurrencyCriterias : BaseTable<CatalogsProductGroupPricingCurrencyCriteria>("catalogs_product_group_pricing_currency_criteria") {
    val operator = text("operator").transform({ CatalogsProductGroupPricingCurrencyCriteria.Operator.valueOf(it) }, { it.value })
    val value = decimal("value")
    val currency = long("currency")
    val negated = boolean("negated") /* null */

    /**
     * Create an entity of type CatalogsProductGroupPricingCurrencyCriteria from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsProductGroupPricingCurrencyCriteria(
        operator = row[operator] ?: CatalogsProductGroupPricingCurrencyCriteria.Operator.valueOf("") /* kotlin.String */,
        value = row[value] ?: 0 /* java.math.BigDecimal */,
        currency = NonNullableCatalogsCurrencys.createEntity(row, withReferences) /* NonNullableCatalogsCurrency */,
        negated = row[negated] ?: false /* kotlin.Boolean? */
    )

    /**
    * Assign all the columns from the entity of type CatalogsProductGroupPricingCurrencyCriteria to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsProductGroupPricingCurrencyCriteria()
    * database.update(CatalogsProductGroupPricingCurrencyCriterias, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsProductGroupPricingCurrencyCriteria) {
        this.apply {
            set(CatalogsProductGroupPricingCurrencyCriterias.operator, entity.operator)
            set(CatalogsProductGroupPricingCurrencyCriterias.value, entity.value)
            set(CatalogsProductGroupPricingCurrencyCriterias.currency, entity.currency)
            set(CatalogsProductGroupPricingCurrencyCriterias.negated, entity.negated)
        }
    }

}


