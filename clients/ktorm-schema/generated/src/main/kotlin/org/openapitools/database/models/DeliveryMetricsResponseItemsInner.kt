/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param name Metric's name.
 * @param category Category name
 * @param definition How the metric is defined.
 * @param displayName Display name, when available. If unavaible it will not be returned. Matches how the metric is named in our native tools like Pinterest Ads Manager.
 */
object DeliveryMetricsResponseItemsInners : BaseTable<DeliveryMetricsResponseItemsInner>("DeliveryMetricsResponse_items_inner") {
    val name = text("name") /* null */ /* Metric's name. */
    val category = text("category").transform({ DeliveryMetricsResponseItemsInner.Category.valueOf(it ?: "ADS") }, { it.value }) /* null */ /* Category name */

    val definition = text("definition") /* null */ /* How the metric is defined. */
    val displayName = text("display_name") /* null */ /* Display name, when available. If unavaible it will not be returned. Matches how the metric is named in our native tools like Pinterest Ads Manager. */

    /**
     * Create an entity of type DeliveryMetricsResponseItemsInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = DeliveryMetricsResponseItemsInner(
        name = row[name]  /* kotlin.String? */ /* Metric's name. */,
        category = row[category]  /* kotlin.String? */ /* Category name */,
        definition = row[definition]  /* kotlin.String? */ /* How the metric is defined. */,
        displayName = row[displayName]  /* kotlin.String? */ /* Display name, when available. If unavaible it will not be returned. Matches how the metric is named in our native tools like Pinterest Ads Manager. */
    )

    /**
    * Assign all the columns from the entity of type DeliveryMetricsResponseItemsInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = DeliveryMetricsResponseItemsInner()
    * database.update(DeliveryMetricsResponseItemsInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: DeliveryMetricsResponseItemsInner) {
        this.apply {
            set(DeliveryMetricsResponseItemsInners.name, entity.name)
            set(DeliveryMetricsResponseItemsInners.category, entity.category)
            set(DeliveryMetricsResponseItemsInners.definition, entity.definition)
            set(DeliveryMetricsResponseItemsInners.displayName, entity.displayName)
        }
    }

}


