/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * A request to exchange an authorization code for an access token.
 * @param code 
 * @param redirectUri 
 */
object OauthAccessTokenRequestCodes : BaseTable<OauthAccessTokenRequestCode>("OauthAccessTokenRequestCode") {
    val code = text("code")
    val redirectUri = text("redirect_uri")

    /**
     * Create an entity of type OauthAccessTokenRequestCode from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OauthAccessTokenRequestCode(
        code = row[code] ?: "" /* kotlin.String */,
        redirectUri = row[redirectUri] ?: "" /* kotlin.String */
    )

    /**
    * Assign all the columns from the entity of type OauthAccessTokenRequestCode to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OauthAccessTokenRequestCode()
    * database.update(OauthAccessTokenRequestCodes, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OauthAccessTokenRequestCode) {
        this.apply {
            set(OauthAccessTokenRequestCodes.code, entity.code)
            set(OauthAccessTokenRequestCodes.redirectUri, entity.redirectUri)
        }
    }

}


