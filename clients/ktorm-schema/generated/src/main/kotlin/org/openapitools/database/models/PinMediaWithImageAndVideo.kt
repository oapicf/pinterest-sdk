/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Pin with a mix of images and videos.
 * @param mediaType 
 * @param items 
 */
object PinMediaWithImageAndVideos : BaseTable<PinMediaWithImageAndVideo>("PinMediaWithImageAndVideo") {
    val mediaType = text("media_type") /* null */

    /**
     * Create an entity of type PinMediaWithImageAndVideo from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinMediaWithImageAndVideo(
        mediaType = row[mediaType]  /* kotlin.String? */,
        items = emptyList() /* kotlin.Array<PinMediaMetadata>? */
    )

    /**
    * Assign all the columns from the entity of type PinMediaWithImageAndVideo to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinMediaWithImageAndVideo()
    * database.update(PinMediaWithImageAndVideos, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinMediaWithImageAndVideo) {
        this.apply {
            set(PinMediaWithImageAndVideos.mediaType, entity.mediaType)
        }
    }

}


object PinMediaWithImageAndVideoPinMediaMetadata : BaseTable<Pair<kotlin.Long, kotlin.Long>>("PinMediaWithImageAndVideoPinMediaMetadata") {
    val pinMediaWithImageAndVideo = long("pinMediaWithImageAndVideo")
    val pinMediaMetadata = long("pinMediaMetadata")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[pinMediaWithImageAndVideo] ?: 0, row[pinMediaMetadata] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(PinMediaWithImageAndVideoPinMediaMetadata.pinMediaWithImageAndVideo, entity.first)
            set(PinMediaWithImageAndVideoPinMediaMetadata.pinMediaMetadata, entity.second)
        }
    }

}

