/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param country 
 * @param name Ad Account name.
 * @param ownerUserId Advertiser's owning user ID.
 */
object AdAccountCreateRequests : BaseTable<AdAccountCreateRequest>("AdAccountCreateRequest") {
    val country = long("country") /* null */
    val name = text("name") /* null */ /* Ad Account name. */
    val ownerUserId = text("owner_user_id") /* null */ /* Advertiser's owning user ID. */

    /**
     * Create an entity of type AdAccountCreateRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdAccountCreateRequest(
        country = Countrys.createEntity(row, withReferences) /* Country? */,
        name = row[name]  /* kotlin.String? */ /* Ad Account name. */,
        ownerUserId = row[ownerUserId]  /* kotlin.String? */ /* Advertiser's owning user ID. */
    )

    /**
    * Assign all the columns from the entity of type AdAccountCreateRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdAccountCreateRequest()
    * database.update(AdAccountCreateRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdAccountCreateRequest) {
        this.apply {
            set(AdAccountCreateRequests.country, entity.country)
            set(AdAccountCreateRequests.name, entity.name)
            set(AdAccountCreateRequests.ownerUserId, entity.ownerUserId)
        }
    }

}


