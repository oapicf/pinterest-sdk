/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Object describing the result of an operation on an item bid option
 * @param operation 
 * @param itemId The catalog retail item id in the merchant namespace
 * @param country 
 * @param language 
 * @param bidOptions 
 * @param updateMask The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
 * @param errors Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
 */
object AdvancedAuctionProcessedItems : BaseTable<AdvancedAuctionProcessedItem>("AdvancedAuctionProcessedItem") {
    val operation = long("operation")
    val itemId = text("item_id") /* The catalog retail item id in the merchant namespace */
    val country = long("country")
    val language = long("language")
    val bidOptions = long("bid_options")

    /**
     * Create an entity of type AdvancedAuctionProcessedItem from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdvancedAuctionProcessedItem(
        operation = AdvancedAuctionOperations.createEntity(row, withReferences) /* AdvancedAuctionOperation */,
        itemId = row[itemId] ?: "" /* kotlin.String */ /* The catalog retail item id in the merchant namespace */,
        country = Countrys.createEntity(row, withReferences) /* Country */,
        language = Languages.createEntity(row, withReferences) /* Language */,
        bidOptions = AdvancedAuctionBidOptionss.createEntity(row, withReferences) /* AdvancedAuctionBidOptions */,
        updateMask = emptyList() /* kotlin.Array<UpdateMaskBidOptionField> */ /* The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`. */,
        errors = emptyList() /* kotlin.Array<AdvancedAuctionOperationError>? */ /* Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied. */
    )

    /**
    * Assign all the columns from the entity of type AdvancedAuctionProcessedItem to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdvancedAuctionProcessedItem()
    * database.update(AdvancedAuctionProcessedItems, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdvancedAuctionProcessedItem) {
        this.apply {
            set(AdvancedAuctionProcessedItems.operation, entity.operation)
            set(AdvancedAuctionProcessedItems.itemId, entity.itemId)
            set(AdvancedAuctionProcessedItems.country, entity.country)
            set(AdvancedAuctionProcessedItems.language, entity.language)
            set(AdvancedAuctionProcessedItems.bidOptions, entity.bidOptions)
        }
    }

}


object AdvancedAuctionProcessedItemUpdateMaskBidOptionField : BaseTable<Pair<kotlin.Long, kotlin.Long>>("AdvancedAuctionProcessedItemUpdateMaskBidOptionField") {
    val advancedAuctionProcessedItem = long("advancedAuctionProcessedItem")
    val updateMaskBidOptionField = long("updateMaskBidOptionField")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[advancedAuctionProcessedItem] ?: 0, row[updateMaskBidOptionField] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(AdvancedAuctionProcessedItemUpdateMaskBidOptionField.advancedAuctionProcessedItem, entity.first)
            set(AdvancedAuctionProcessedItemUpdateMaskBidOptionField.updateMaskBidOptionField, entity.second)
        }
    }

}

object AdvancedAuctionProcessedItemAdvancedAuctionOperationError : BaseTable<Pair<kotlin.Long, kotlin.Long>>("AdvancedAuctionProcessedItemAdvancedAuctionOperationError") {
    val advancedAuctionProcessedItem = long("advancedAuctionProcessedItem")
    val advancedAuctionOperationError = long("advancedAuctionOperationError")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[advancedAuctionProcessedItem] ?: 0, row[advancedAuctionOperationError] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(AdvancedAuctionProcessedItemAdvancedAuctionOperationError.advancedAuctionProcessedItem, entity.first)
            set(AdvancedAuctionProcessedItemAdvancedAuctionOperationError.advancedAuctionOperationError, entity.second)
        }
    }

}

