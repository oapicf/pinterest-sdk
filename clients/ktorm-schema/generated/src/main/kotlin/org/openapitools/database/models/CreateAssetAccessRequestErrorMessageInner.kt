/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param code Error code associated with the error in requesting asset access.
 * @param messages 
 */
object CreateAssetAccessRequestErrorMessageInners : BaseTable<CreateAssetAccessRequestErrorMessageInner>("CreateAssetAccessRequestErrorMessage_inner") {
    val code = int("code") /* null */ /* Error code associated with the error in requesting asset access. */

    /**
     * Create an entity of type CreateAssetAccessRequestErrorMessageInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateAssetAccessRequestErrorMessageInner(
        code = row[code]  /* kotlin.Int? */ /* Error code associated with the error in requesting asset access. */,
        messages = emptyList() /* kotlin.Array<kotlin.String>? */
    )

    /**
    * Assign all the columns from the entity of type CreateAssetAccessRequestErrorMessageInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateAssetAccessRequestErrorMessageInner()
    * database.update(CreateAssetAccessRequestErrorMessageInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateAssetAccessRequestErrorMessageInner) {
        this.apply {
            set(CreateAssetAccessRequestErrorMessageInners.code, entity.code)
        }
    }

}


object CreateAssetAccessRequestErrorMessageInnerMessages : BaseTable<Pair<kotlin.Long, kotlin.String>>("CreateAssetAccessRequestErrorMessageInnerMessages") {
    val createAssetAccessRequestErrorMessageInner = long("createAssetAccessRequestErrorMessageInner")
    val messages = text("messages")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[createAssetAccessRequestErrorMessageInner] ?: 0, row[messages] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(CreateAssetAccessRequestErrorMessageInnerMessages.createAssetAccessRequestErrorMessageInner, entity.first)
            set(CreateAssetAccessRequestErrorMessageInnerMessages.messages, entity.second)
        }
    }

}

