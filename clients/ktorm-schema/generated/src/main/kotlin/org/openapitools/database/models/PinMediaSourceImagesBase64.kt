/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Multiple Base64-encoded images media source
 * @param items Array with image objects.
 * @param sourceType 
 * @param index 
 */
object PinMediaSourceImagesBase64s : BaseTable<PinMediaSourceImagesBase64>("PinMediaSourceImagesBase64") {
    val sourceType = text("source_type").transform({ PinMediaSourceImagesBase64.SourceType.valueOf(it ?: "multiple_image_base64") }, { it.value }) /* null */

    val index = int("index") /* null */

    /**
     * Create an entity of type PinMediaSourceImagesBase64 from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinMediaSourceImagesBase64(
        items = emptyList() /* kotlin.Array<PinMediaSourceImagesBase64ItemsInner> */ /* Array with image objects. */,
        sourceType = row[sourceType]  /* kotlin.String? */,
        index = row[index]  /* kotlin.Int? */
    )

    /**
    * Assign all the columns from the entity of type PinMediaSourceImagesBase64 to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinMediaSourceImagesBase64()
    * database.update(PinMediaSourceImagesBase64s, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinMediaSourceImagesBase64) {
        this.apply {
            set(PinMediaSourceImagesBase64s.sourceType, entity.sourceType)
            set(PinMediaSourceImagesBase64s.index, entity.index)
        }
    }

}


object PinMediaSourceImagesBase64PinMediaSourceImagesBase64ItemsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("PinMediaSourceImagesBase64PinMediaSourceImagesBase64ItemsInner") {
    val pinMediaSourceImagesBase64 = long("pinMediaSourceImagesBase64")
    val pinMediaSourceImagesBase64ItemsInner = long("pinMediaSourceImagesBase64ItemsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[pinMediaSourceImagesBase64] ?: 0, row[pinMediaSourceImagesBase64ItemsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(PinMediaSourceImagesBase64PinMediaSourceImagesBase64ItemsInner.pinMediaSourceImagesBase64, entity.first)
            set(PinMediaSourceImagesBase64PinMediaSourceImagesBase64ItemsInner.pinMediaSourceImagesBase64ItemsInner, entity.second)
        }
    }

}

