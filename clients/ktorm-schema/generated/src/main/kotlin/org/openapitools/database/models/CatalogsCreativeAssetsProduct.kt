/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param catalogType 
 * @param metadata 
 * @param pin 
 */
object CatalogsCreativeAssetsProducts : BaseTable<CatalogsCreativeAssetsProduct>("CatalogsCreativeAssetsProduct") {
    val catalogType = text("catalog_type").transform({ CatalogsCreativeAssetsProduct.CatalogType.valueOf(it) }, { it.value })
    val metadata = long("metadata")
    val pin = long("pin")

    /**
     * Create an entity of type CatalogsCreativeAssetsProduct from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsCreativeAssetsProduct(
        catalogType = row[catalogType] ?: CatalogsCreativeAssetsProduct.CatalogType.valueOf("") /* kotlin.String */,
        metadata = CatalogsCreativeAssetsProductMetadatas.createEntity(row, withReferences) /* CatalogsCreativeAssetsProductMetadata */,
        pin = Pins.createEntity(row, withReferences) /* Pin */
    )

    /**
    * Assign all the columns from the entity of type CatalogsCreativeAssetsProduct to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsCreativeAssetsProduct()
    * database.update(CatalogsCreativeAssetsProducts, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsCreativeAssetsProduct) {
        this.apply {
            set(CatalogsCreativeAssetsProducts.catalogType, entity.catalogType)
            set(CatalogsCreativeAssetsProducts.metadata, entity.metadata)
            set(CatalogsCreativeAssetsProducts.pin, entity.pin)
        }
    }

}


