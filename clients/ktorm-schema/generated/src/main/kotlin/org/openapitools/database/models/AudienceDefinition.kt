/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Queryable audience representation.
 * @param date Generation date
 * @param type Generated audience type to request.
 * @param scope Generated audience scope to request.
 */
object AudienceDefinitions : BaseTable<AudienceDefinition>("AudienceDefinition") {
    val date = text("date") /* null */ /* Generation date */
    val type = text("type") /* null */ /* Generated audience type to request. */
    val scope = text("scope") /* null */ /* Generated audience scope to request. */

    /**
     * Create an entity of type AudienceDefinition from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AudienceDefinition(
        date = row[date]  /* kotlin.String? */ /* Generation date */,
        type = row[type]  /* kotlin.String? */ /* Generated audience type to request. */,
        scope = row[scope]  /* kotlin.String? */ /* Generated audience scope to request. */
    )

    /**
    * Assign all the columns from the entity of type AudienceDefinition to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AudienceDefinition()
    * database.update(AudienceDefinitions, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AudienceDefinition) {
        this.apply {
            set(AudienceDefinitions.date, entity.date)
            set(AudienceDefinitions.type, entity.type)
            set(AudienceDefinitions.scope, entity.scope)
        }
    }

}


