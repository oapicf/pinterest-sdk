/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param createdAt 
 * @param id 
 * @param updatedAt 
 */
object CatalogsDbItems : BaseTable<CatalogsDbItem>("CatalogsDbItem") {
    val createdAt = datetime("created_at")
    val id = text("id")
    val updatedAt = datetime("updated_at")

    /**
     * Create an entity of type CatalogsDbItem from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsDbItem(
        createdAt = row[createdAt] /* java.time.LocalDateTime */,
        id = row[id] ?: "" /* kotlin.String */,
        updatedAt = row[updatedAt] /* java.time.LocalDateTime */
    )

    /**
    * Assign all the columns from the entity of type CatalogsDbItem to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsDbItem()
    * database.update(CatalogsDbItems, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsDbItem) {
        this.apply {
            set(CatalogsDbItems.createdAt, entity.createdAt)
            set(CatalogsDbItems.id, entity.id)
            set(CatalogsDbItems.updatedAt, entity.updatedAt)
        }
    }

}


