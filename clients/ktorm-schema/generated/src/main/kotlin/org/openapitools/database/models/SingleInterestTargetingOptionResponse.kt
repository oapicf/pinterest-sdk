/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param id 
 * @param name 
 * @param childInterests 
 * @param level 
 */
object SingleInterestTargetingOptionResponses : BaseTable<SingleInterestTargetingOptionResponse>("SingleInterestTargetingOptionResponse") {
    val id = text("id") /* null */
    val name = text("name") /* null */
    val level = int("level") /* null */

    /**
     * Create an entity of type SingleInterestTargetingOptionResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = SingleInterestTargetingOptionResponse(
        id = row[id]  /* kotlin.String? */,
        name = row[name]  /* kotlin.String? */,
        childInterests = emptyList() /* kotlin.Array<kotlin.String>? */,
        level = row[level]  /* kotlin.Int? */
    )

    /**
    * Assign all the columns from the entity of type SingleInterestTargetingOptionResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = SingleInterestTargetingOptionResponse()
    * database.update(SingleInterestTargetingOptionResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: SingleInterestTargetingOptionResponse) {
        this.apply {
            set(SingleInterestTargetingOptionResponses.id, entity.id)
            set(SingleInterestTargetingOptionResponses.name, entity.name)
            set(SingleInterestTargetingOptionResponses.level, entity.level)
        }
    }

}


object SingleInterestTargetingOptionResponseChildInterests : BaseTable<Pair<kotlin.Long, kotlin.String>>("SingleInterestTargetingOptionResponseChildInterests") {
    val singleInterestTargetingOptionResponse = long("singleInterestTargetingOptionResponse")
    val childInterests = text("childInterests")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[singleInterestTargetingOptionResponse] ?: 0, row[childInterests] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(SingleInterestTargetingOptionResponseChildInterests.singleInterestTargetingOptionResponse, entity.first)
            set(SingleInterestTargetingOptionResponseChildInterests.childInterests, entity.second)
        }
    }

}

