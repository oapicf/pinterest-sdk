/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param website Website with path or domain only
 * @param status Status of the verification process
 * @param verifiedAt UTC timestamp when the verification happened - sometimes missing
 */
object UserWebsiteSummarys : BaseTable<UserWebsiteSummary>("UserWebsiteSummary") {
    val website = text("website") /* null */ /* Website with path or domain only */
    val status = text("status") /* null */ /* Status of the verification process */
    val verifiedAt = text("verified_at") /* null */ /* UTC timestamp when the verification happened - sometimes missing */

    /**
     * Create an entity of type UserWebsiteSummary from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = UserWebsiteSummary(
        website = row[website]  /* kotlin.String? */ /* Website with path or domain only */,
        status = row[status]  /* kotlin.String? */ /* Status of the verification process */,
        verifiedAt = row[verifiedAt]  /* kotlin.String? */ /* UTC timestamp when the verification happened - sometimes missing */
    )

    /**
    * Assign all the columns from the entity of type UserWebsiteSummary to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = UserWebsiteSummary()
    * database.update(UserWebsiteSummarys, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: UserWebsiteSummary) {
        this.apply {
            set(UserWebsiteSummarys.website, entity.website)
            set(UserWebsiteSummarys.status, entity.status)
            set(UserWebsiteSummarys.verifiedAt, entity.verifiedAt)
        }
    }

}


