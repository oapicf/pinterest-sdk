/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param imageUrl Image URL.
 * @param title Title displayed below ad.
 */
object AdPreviewCreateFromImages : BaseTable<AdPreviewCreateFromImage>("AdPreviewCreateFromImage") {
    val imageUrl = text("image_url") /* Image URL. */
    val title = text("title") /* Title displayed below ad. */

    /**
     * Create an entity of type AdPreviewCreateFromImage from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdPreviewCreateFromImage(
        imageUrl = row[imageUrl] ?: "" /* kotlin.String */ /* Image URL. */,
        title = row[title] ?: "" /* kotlin.String */ /* Title displayed below ad. */
    )

    /**
    * Assign all the columns from the entity of type AdPreviewCreateFromImage to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdPreviewCreateFromImage()
    * database.update(AdPreviewCreateFromImages, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdPreviewCreateFromImage) {
        this.apply {
            set(AdPreviewCreateFromImages.imageUrl, entity.imageUrl)
            set(AdPreviewCreateFromImages.title, entity.title)
        }
    }

}


