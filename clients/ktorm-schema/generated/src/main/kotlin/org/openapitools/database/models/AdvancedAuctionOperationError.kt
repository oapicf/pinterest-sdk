/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Error which occurred when applying a bid options operation to a specific item.
 * @param code The error code for the item bid option operation validation error
 * @param message Message describing the item bid option operation validation error
 */
object AdvancedAuctionOperationErrors : BaseTable<AdvancedAuctionOperationError>("AdvancedAuctionOperationError") {
    val code = int("code") /* null */ /* The error code for the item bid option operation validation error */
    val message = text("message") /* null */ /* Message describing the item bid option operation validation error */

    /**
     * Create an entity of type AdvancedAuctionOperationError from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdvancedAuctionOperationError(
        code = row[code]  /* kotlin.Int? */ /* The error code for the item bid option operation validation error */,
        message = row[message]  /* kotlin.String? */ /* Message describing the item bid option operation validation error */
    )

    /**
    * Assign all the columns from the entity of type AdvancedAuctionOperationError to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdvancedAuctionOperationError()
    * database.update(AdvancedAuctionOperationErrors, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdvancedAuctionOperationError) {
        this.apply {
            set(AdvancedAuctionOperationErrors.code, entity.code)
            set(AdvancedAuctionOperationErrors.message, entity.message)
        }
    }

}


