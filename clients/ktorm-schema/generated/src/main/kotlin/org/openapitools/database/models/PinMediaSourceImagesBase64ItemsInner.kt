/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param contentType 
 * @param data Image to upload as base64 string.
 * @param title 
 * @param description 
 * @param link Destination link for the image.
 */
object PinMediaSourceImagesBase64ItemsInners : BaseTable<PinMediaSourceImagesBase64ItemsInner>("PinMediaSourceImagesBase64_items_inner") {
    val contentType = text("content_type").transform({ PinMediaSourceImagesBase64ItemsInner.ContentType.valueOf(it) }, { it.value })
    val data = text("data") /* Image to upload as base64 string. */
    val title = text("title") /* null */
    val description = text("description") /* null */
    val link = text("link") /* null */ /* Destination link for the image. */

    /**
     * Create an entity of type PinMediaSourceImagesBase64ItemsInner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinMediaSourceImagesBase64ItemsInner(
        contentType = row[contentType] ?: PinMediaSourceImagesBase64ItemsInner.ContentType.valueOf("") /* kotlin.String */,
        data = row[data] ?: "" /* kotlin.String */ /* Image to upload as base64 string. */,
        title = row[title]  /* kotlin.String? */,
        description = row[description]  /* kotlin.String? */,
        link = row[link]  /* kotlin.String? */ /* Destination link for the image. */
    )

    /**
    * Assign all the columns from the entity of type PinMediaSourceImagesBase64ItemsInner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinMediaSourceImagesBase64ItemsInner()
    * database.update(PinMediaSourceImagesBase64ItemsInners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinMediaSourceImagesBase64ItemsInner) {
        this.apply {
            set(PinMediaSourceImagesBase64ItemsInners.contentType, entity.contentType)
            set(PinMediaSourceImagesBase64ItemsInners.data, entity.data)
            set(PinMediaSourceImagesBase64ItemsInners.title, entity.title)
            set(PinMediaSourceImagesBase64ItemsInners.description, entity.description)
            set(PinMediaSourceImagesBase64ItemsInners.link, entity.link)
        }
    }

}


