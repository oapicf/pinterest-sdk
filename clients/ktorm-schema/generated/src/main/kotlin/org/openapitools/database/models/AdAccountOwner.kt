/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param username Public username for the user account
 * @param id The owning account's user ID.
 */
object AdAccountOwners : BaseTable<AdAccountOwner>("Ad_account_owner") {
    val username = text("username") /* null */ /* Public username for the user account */
    val id = text("id") /* null */ /* The owning account's user ID. */

    /**
     * Create an entity of type AdAccountOwner from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdAccountOwner(
        username = row[username]  /* kotlin.String? */ /* Public username for the user account */,
        id = row[id]  /* kotlin.String? */ /* The owning account's user ID. */
    )

    /**
    * Assign all the columns from the entity of type AdAccountOwner to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdAccountOwner()
    * database.update(AdAccountOwners, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdAccountOwner) {
        this.apply {
            set(AdAccountOwners.username, entity.username)
            set(AdAccountOwners.id, entity.id)
        }
    }

}


