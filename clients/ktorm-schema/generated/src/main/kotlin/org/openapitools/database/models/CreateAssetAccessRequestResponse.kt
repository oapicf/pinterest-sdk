/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param exceptions A list of errors associated with the asset access requests. Will be returned if there is an error.
 * @param invites 
 */
object CreateAssetAccessRequestResponses : BaseTable<CreateAssetAccessRequestResponse>("CreateAssetAccessRequestResponse") {
    val invites = blob("invites") /* null */

    /**
     * Create an entity of type CreateAssetAccessRequestResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateAssetAccessRequestResponse(
        exceptions = emptyList() /* kotlin.Array<CreateAssetAccessRequestErrorMessageInner>? */ /* A list of errors associated with the asset access requests. Will be returned if there is an error. */,
        invites = row[invites]  /* kotlin.collections.Map<kotlin.String, kotlin.String>? */
    )

    /**
    * Assign all the columns from the entity of type CreateAssetAccessRequestResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateAssetAccessRequestResponse()
    * database.update(CreateAssetAccessRequestResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateAssetAccessRequestResponse) {
        this.apply {
            set(CreateAssetAccessRequestResponses.invites, entity.invites)
        }
    }

}


object CreateAssetAccessRequestResponseCreateAssetAccessRequestErrorMessageInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("CreateAssetAccessRequestResponseCreateAssetAccessRequestErrorMessageInner") {
    val createAssetAccessRequestResponse = long("createAssetAccessRequestResponse")
    val createAssetAccessRequestErrorMessageInner = long("createAssetAccessRequestErrorMessageInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[createAssetAccessRequestResponse] ?: 0, row[createAssetAccessRequestErrorMessageInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(CreateAssetAccessRequestResponseCreateAssetAccessRequestErrorMessageInner.createAssetAccessRequestResponse, entity.first)
            set(CreateAssetAccessRequestResponseCreateAssetAccessRequestErrorMessageInner.createAssetAccessRequestErrorMessageInner, entity.second)
        }
    }

}

