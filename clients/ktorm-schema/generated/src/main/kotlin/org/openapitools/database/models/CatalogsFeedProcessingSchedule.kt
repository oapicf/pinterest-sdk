/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Daily processing schedule. This field is **OPTIONAL**. Use this to configure the preferred time for processing a feed (otherwise random).
 * @param time A time in format HH:MM with leading 0 (zero)
 * @param timezone The timezone considered for the processing schedule time.
 */
object CatalogsFeedProcessingSchedules : BaseTable<CatalogsFeedProcessingSchedule>("CatalogsFeedProcessingSchedule") {
    val time = text("time") /* A time in format HH:MM with leading 0 (zero) */
    val timezone = text("timezone").transform({ CatalogsFeedProcessingSchedule.Timezone.valueOf(it) }, { it.value }) /* The timezone considered for the processing schedule time. */

    /**
     * Create an entity of type CatalogsFeedProcessingSchedule from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsFeedProcessingSchedule(
        time = row[time] ?: "" /* kotlin.String */ /* A time in format HH:MM with leading 0 (zero) */,
        timezone = row[timezone] ?: CatalogsFeedProcessingSchedule.Timezone.valueOf("") /* kotlin.String */ /* The timezone considered for the processing schedule time. */
    )

    /**
    * Assign all the columns from the entity of type CatalogsFeedProcessingSchedule to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsFeedProcessingSchedule()
    * database.update(CatalogsFeedProcessingSchedules, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsFeedProcessingSchedule) {
        this.apply {
            set(CatalogsFeedProcessingSchedules.time, entity.time)
            set(CatalogsFeedProcessingSchedules.timezone, entity.timezone)
        }
    }

}


