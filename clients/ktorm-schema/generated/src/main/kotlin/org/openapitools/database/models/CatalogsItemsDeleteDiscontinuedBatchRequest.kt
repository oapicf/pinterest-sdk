/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Request object to discontinue catalogs items
 * @param country 
 * @param language 
 * @param operation 
 * @param items Array with catalogs items
 */
object CatalogsItemsDeleteDiscontinuedBatchRequests : BaseTable<CatalogsItemsDeleteDiscontinuedBatchRequest>("CatalogsItemsDeleteDiscontinuedBatchRequest") {
    val country = long("country")
    val language = long("language")
    val operation = long("operation")

    /**
     * Create an entity of type CatalogsItemsDeleteDiscontinuedBatchRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsItemsDeleteDiscontinuedBatchRequest(
        country = Countrys.createEntity(row, withReferences) /* Country */,
        language = CatalogsItemsRequestLanguages.createEntity(row, withReferences) /* CatalogsItemsRequestLanguage */,
        operation = BatchOperations.createEntity(row, withReferences) /* BatchOperation */,
        items = emptyList() /* kotlin.Array<ItemDeleteDiscontinuedBatchRecord> */ /* Array with catalogs items */
    )

    /**
    * Assign all the columns from the entity of type CatalogsItemsDeleteDiscontinuedBatchRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsItemsDeleteDiscontinuedBatchRequest()
    * database.update(CatalogsItemsDeleteDiscontinuedBatchRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsItemsDeleteDiscontinuedBatchRequest) {
        this.apply {
            set(CatalogsItemsDeleteDiscontinuedBatchRequests.country, entity.country)
            set(CatalogsItemsDeleteDiscontinuedBatchRequests.language, entity.language)
            set(CatalogsItemsDeleteDiscontinuedBatchRequests.operation, entity.operation)
        }
    }

}


object CatalogsItemsDeleteDiscontinuedBatchRequestItemDeleteDiscontinuedBatchRecord : BaseTable<Pair<kotlin.Long, kotlin.Long>>("CatalogsItemsDeleteDiscontinuedBatchRequestItemDeleteDiscontinuedBatchRecord") {
    val catalogsItemsDeleteDiscontinuedBatchRequest = long("catalogsItemsDeleteDiscontinuedBatchRequest")
    val itemDeleteDiscontinuedBatchRecord = long("itemDeleteDiscontinuedBatchRecord")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[catalogsItemsDeleteDiscontinuedBatchRequest] ?: 0, row[itemDeleteDiscontinuedBatchRecord] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(CatalogsItemsDeleteDiscontinuedBatchRequestItemDeleteDiscontinuedBatchRecord.catalogsItemsDeleteDiscontinuedBatchRequest, entity.first)
            set(CatalogsItemsDeleteDiscontinuedBatchRequestItemDeleteDiscontinuedBatchRecord.itemDeleteDiscontinuedBatchRecord, entity.second)
        }
    }

}

