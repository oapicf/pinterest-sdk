/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Multiple images urls-based media source
 * @param items Array with image objects.
 * @param sourceType 
 * @param index 
 */
object PinMediaSourceImagesURLs : BaseTable<PinMediaSourceImagesURL>("PinMediaSourceImagesURL") {
    val sourceType = text("source_type").transform({ PinMediaSourceImagesURL.SourceType.valueOf(it ?: "multiple_image_urls") }, { it.value }) /* null */

    val index = int("index") /* null */

    /**
     * Create an entity of type PinMediaSourceImagesURL from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PinMediaSourceImagesURL(
        items = emptyList() /* kotlin.Array<PinMediaSourceImagesURLItemsInner> */ /* Array with image objects. */,
        sourceType = row[sourceType]  /* kotlin.String? */,
        index = row[index]  /* kotlin.Int? */
    )

    /**
    * Assign all the columns from the entity of type PinMediaSourceImagesURL to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PinMediaSourceImagesURL()
    * database.update(PinMediaSourceImagesURLs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PinMediaSourceImagesURL) {
        this.apply {
            set(PinMediaSourceImagesURLs.sourceType, entity.sourceType)
            set(PinMediaSourceImagesURLs.index, entity.index)
        }
    }

}


object PinMediaSourceImagesURLPinMediaSourceImagesURLItemsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("PinMediaSourceImagesURLPinMediaSourceImagesURLItemsInner") {
    val pinMediaSourceImagesURL = long("pinMediaSourceImagesURL")
    val pinMediaSourceImagesURLItemsInner = long("pinMediaSourceImagesURLItemsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[pinMediaSourceImagesURL] ?: 0, row[pinMediaSourceImagesURLItemsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(PinMediaSourceImagesURLPinMediaSourceImagesURLItemsInner.pinMediaSourceImagesURL, entity.first)
            set(PinMediaSourceImagesURLPinMediaSourceImagesURLItemsInner.pinMediaSourceImagesURLItemsInner, entity.second)
        }
    }

}

