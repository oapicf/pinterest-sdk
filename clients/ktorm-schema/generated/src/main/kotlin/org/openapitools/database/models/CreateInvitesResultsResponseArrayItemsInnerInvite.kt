/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * An invite object if the invite/request was successfully created. Will only be provided if the an invite/request is successfully created.
 * @param id Unique identifier of the invite/request.
 * @param user Metadata for the member/partner that was sent the invite/request.
 */
object CreateInvitesResultsResponseArrayItemsInnerInvites : BaseTable<CreateInvitesResultsResponseArrayItemsInnerInvite>("CreateInvitesResultsResponseArray_items_inner_invite") {
    val id = text("id") /* null */ /* Unique identifier of the invite/request. */
    val user = long("user") /* null */ /* Metadata for the member/partner that was sent the invite/request. */

    /**
     * Create an entity of type CreateInvitesResultsResponseArrayItemsInnerInvite from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CreateInvitesResultsResponseArrayItemsInnerInvite(
        id = row[id]  /* kotlin.String? */ /* Unique identifier of the invite/request. */,
        user = BusinessAccessUserSummarys.createEntity(row, withReferences) /* BusinessAccessUserSummary? */ /* Metadata for the member/partner that was sent the invite/request. */
    )

    /**
    * Assign all the columns from the entity of type CreateInvitesResultsResponseArrayItemsInnerInvite to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CreateInvitesResultsResponseArrayItemsInnerInvite()
    * database.update(CreateInvitesResultsResponseArrayItemsInnerInvites, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CreateInvitesResultsResponseArrayItemsInnerInvite) {
        this.apply {
            set(CreateInvitesResultsResponseArrayItemsInnerInvites.id, entity.id)
            set(CreateInvitesResultsResponseArrayItemsInnerInvites.user, entity.user)
        }
    }

}


