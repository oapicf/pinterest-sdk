/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Object describing an item bid option upsert operation
 * @param itemId The catalog retail item id in the merchant namespace
 * @param country 
 * @param language 
 * @param bidOptions 
 * @param updateMask The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
 */
object AdvancedAuctionItemsSubmitUpsertRecords : BaseTable<AdvancedAuctionItemsSubmitUpsertRecord>("AdvancedAuctionItemsSubmitUpsertRecord") {
    val itemId = text("item_id") /* The catalog retail item id in the merchant namespace */
    val country = long("country")
    val language = long("language")
    val bidOptions = long("bid_options")

    /**
     * Create an entity of type AdvancedAuctionItemsSubmitUpsertRecord from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = AdvancedAuctionItemsSubmitUpsertRecord(
        itemId = row[itemId] ?: "" /* kotlin.String */ /* The catalog retail item id in the merchant namespace */,
        country = Countrys.createEntity(row, withReferences) /* Country */,
        language = Languages.createEntity(row, withReferences) /* Language */,
        bidOptions = AdvancedAuctionBidOptionss.createEntity(row, withReferences) /* AdvancedAuctionBidOptions */,
        updateMask = emptyList() /* kotlin.Array<UpdateMaskBidOptionField> */ /* The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`. */
    )

    /**
    * Assign all the columns from the entity of type AdvancedAuctionItemsSubmitUpsertRecord to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = AdvancedAuctionItemsSubmitUpsertRecord()
    * database.update(AdvancedAuctionItemsSubmitUpsertRecords, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: AdvancedAuctionItemsSubmitUpsertRecord) {
        this.apply {
            set(AdvancedAuctionItemsSubmitUpsertRecords.itemId, entity.itemId)
            set(AdvancedAuctionItemsSubmitUpsertRecords.country, entity.country)
            set(AdvancedAuctionItemsSubmitUpsertRecords.language, entity.language)
            set(AdvancedAuctionItemsSubmitUpsertRecords.bidOptions, entity.bidOptions)
        }
    }

}


object AdvancedAuctionItemsSubmitUpsertRecordUpdateMaskBidOptionField : BaseTable<Pair<kotlin.Long, kotlin.Long>>("AdvancedAuctionItemsSubmitUpsertRecordUpdateMaskBidOptionField") {
    val advancedAuctionItemsSubmitUpsertRecord = long("advancedAuctionItemsSubmitUpsertRecord")
    val updateMaskBidOptionField = long("updateMaskBidOptionField")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[advancedAuctionItemsSubmitUpsertRecord] ?: 0, row[updateMaskBidOptionField] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(AdvancedAuctionItemsSubmitUpsertRecordUpdateMaskBidOptionField.advancedAuctionItemsSubmitUpsertRecord, entity.first)
            set(AdvancedAuctionItemsSubmitUpsertRecordUpdateMaskBidOptionField.updateMaskBidOptionField, entity.second)
        }
    }

}

