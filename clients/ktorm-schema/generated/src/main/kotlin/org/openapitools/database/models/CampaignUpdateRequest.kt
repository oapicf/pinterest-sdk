/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param id Campaign ID.
 * @param adAccountId Campaign's Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema.
 * @param name Campaign name.
 * @param status 
 * @param lifetimeSpendCap Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and \"daily_spend_cap\" cannot be set at the same time.
 * @param dailySpendCap Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and \"lifetime_spend_cap\" cannot be set at the same time.
 * @param orderLineId Order line ID that appears on the invoice.
 * @param trackingUrls 
 * @param startTime Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
 * @param endTime Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
 * @param isFlexibleDailyBudgets Determine if a campaign has flexible daily budgets setup.
 * @param defaultAdGroupBudgetInMicroCurrency When transitioning from campaign budget optimization to non-campaign budget optimization, the default_ad_group_budget_in_micro_currency will propagate to each child ad groups daily budget. Unit is micro currency of the associated advertiser account.
 * @param isAutomatedCampaign Specifies whether the campaign was created in the automated campaign flow
 * @param isCampaignBudgetOptimization Determines if a campaign automatically generate ad-group level budgets given a campaign budget to maximize campaign outcome. When transitioning from non-cbo to cbo, all previous child ad group budget will be cleared.
 * @param objectiveType 
 */
object CampaignUpdateRequests : BaseTable<CampaignUpdateRequest>("CampaignUpdateRequest") {
    val id = text("id") /* Campaign ID. */
    val adAccountId = text("ad_account_id") /* Campaign's Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema. */
    val name = text("name") /* null */ /* Campaign name. */
    val status = long("status") /* null */
    val lifetimeSpendCap = int("lifetime_spend_cap") /* null */ /* Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and \"daily_spend_cap\" cannot be set at the same time. */
    val dailySpendCap = int("daily_spend_cap") /* null */ /* Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and \"lifetime_spend_cap\" cannot be set at the same time. */
    val orderLineId = text("order_line_id") /* null */ /* Order line ID that appears on the invoice. */
    val trackingUrls = long("tracking_urls") /* null */
    val startTime = int("start_time") /* null */ /* Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns. */
    val endTime = int("end_time") /* null */ /* Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns. */
    val isFlexibleDailyBudgets = boolean("is_flexible_daily_budgets") /* null */ /* Determine if a campaign has flexible daily budgets setup. */
    val defaultAdGroupBudgetInMicroCurrency = int("default_ad_group_budget_in_micro_currency") /* null */ /* When transitioning from campaign budget optimization to non-campaign budget optimization, the default_ad_group_budget_in_micro_currency will propagate to each child ad groups daily budget. Unit is micro currency of the associated advertiser account. */
    val isAutomatedCampaign = boolean("is_automated_campaign") /* null */ /* Specifies whether the campaign was created in the automated campaign flow */
    val isCampaignBudgetOptimization = boolean("is_campaign_budget_optimization") /* null */ /* Determines if a campaign automatically generate ad-group level budgets given a campaign budget to maximize campaign outcome. When transitioning from non-cbo to cbo, all previous child ad group budget will be cleared. */
    val objectiveType = long("objective_type") /* null */

    /**
     * Create an entity of type CampaignUpdateRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CampaignUpdateRequest(
        id = row[id] ?: "" /* kotlin.String */ /* Campaign ID. */,
        adAccountId = row[adAccountId] ?: "" /* kotlin.String */ /* Campaign's Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema. */,
        name = row[name]  /* kotlin.String? */ /* Campaign name. */,
        status = EntityStatuss.createEntity(row, withReferences) /* EntityStatus? */,
        lifetimeSpendCap = row[lifetimeSpendCap]  /* kotlin.Int? */ /* Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and \"daily_spend_cap\" cannot be set at the same time. */,
        dailySpendCap = row[dailySpendCap]  /* kotlin.Int? */ /* Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and \"lifetime_spend_cap\" cannot be set at the same time. */,
        orderLineId = row[orderLineId]  /* kotlin.String? */ /* Order line ID that appears on the invoice. */,
        trackingUrls = TrackingUrlss.createEntity(row, withReferences) /* TrackingUrls? */,
        startTime = row[startTime]  /* kotlin.Int? */ /* Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns. */,
        endTime = row[endTime]  /* kotlin.Int? */ /* Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns. */,
        isFlexibleDailyBudgets = row[isFlexibleDailyBudgets]  /* kotlin.Boolean? */ /* Determine if a campaign has flexible daily budgets setup. */,
        defaultAdGroupBudgetInMicroCurrency = row[defaultAdGroupBudgetInMicroCurrency]  /* kotlin.Int? */ /* When transitioning from campaign budget optimization to non-campaign budget optimization, the default_ad_group_budget_in_micro_currency will propagate to each child ad groups daily budget. Unit is micro currency of the associated advertiser account. */,
        isAutomatedCampaign = row[isAutomatedCampaign]  /* kotlin.Boolean? */ /* Specifies whether the campaign was created in the automated campaign flow */,
        isCampaignBudgetOptimization = row[isCampaignBudgetOptimization]  /* kotlin.Boolean? */ /* Determines if a campaign automatically generate ad-group level budgets given a campaign budget to maximize campaign outcome. When transitioning from non-cbo to cbo, all previous child ad group budget will be cleared. */,
        objectiveType = ObjectiveTypes.createEntity(row, withReferences) /* ObjectiveType? */
    )

    /**
    * Assign all the columns from the entity of type CampaignUpdateRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CampaignUpdateRequest()
    * database.update(CampaignUpdateRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CampaignUpdateRequest) {
        this.apply {
            set(CampaignUpdateRequests.id, entity.id)
            set(CampaignUpdateRequests.adAccountId, entity.adAccountId)
            set(CampaignUpdateRequests.name, entity.name)
            set(CampaignUpdateRequests.status, entity.status)
            set(CampaignUpdateRequests.lifetimeSpendCap, entity.lifetimeSpendCap)
            set(CampaignUpdateRequests.dailySpendCap, entity.dailySpendCap)
            set(CampaignUpdateRequests.orderLineId, entity.orderLineId)
            set(CampaignUpdateRequests.trackingUrls, entity.trackingUrls)
            set(CampaignUpdateRequests.startTime, entity.startTime)
            set(CampaignUpdateRequests.endTime, entity.endTime)
            set(CampaignUpdateRequests.isFlexibleDailyBudgets, entity.isFlexibleDailyBudgets)
            set(CampaignUpdateRequests.defaultAdGroupBudgetInMicroCurrency, entity.defaultAdGroupBudgetInMicroCurrency)
            set(CampaignUpdateRequests.isAutomatedCampaign, entity.isAutomatedCampaign)
            set(CampaignUpdateRequests.isCampaignBudgetOptimization, entity.isCampaignBudgetOptimization)
            set(CampaignUpdateRequests.objectiveType, entity.objectiveType)
        }
    }

}


