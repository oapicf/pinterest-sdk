/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR We experienced a technical difficulty and were unable to download some additional images. The next download attempt will happen in 24 hours.
 * @param ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE Additional image files are unreadable. Please upload new files to continue.
 * @param ADDITIONAL_IMAGE_MALFORMED_URL Additional image files are unreadable. Please check your link and upload new files to continue.
 * @param ADDITIONAL_IMAGE_FILE_NOT_FOUND Additional image files are unreadable. Please upload new files to continue.
 * @param ADDITIONAL_IMAGE_INVALID_FILE Additional image files are unreadable. Please upload new files to continue.
 * @param HOTEL_PRICE_HEADER_IS_PRESENT price is not a supported column. Use base_price and sale_price instead.
 */
object CatalogsFeedIngestionWarningss : BaseTable<CatalogsFeedIngestionWarnings>("CatalogsFeedIngestionWarnings") {
    val ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR = int("ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR") /* null */ /* We experienced a technical difficulty and were unable to download some additional images. The next download attempt will happen in 24 hours. */
    val ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE = int("ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE") /* null */ /* Additional image files are unreadable. Please upload new files to continue. */
    val ADDITIONAL_IMAGE_MALFORMED_URL = int("ADDITIONAL_IMAGE_MALFORMED_URL") /* null */ /* Additional image files are unreadable. Please check your link and upload new files to continue. */
    val ADDITIONAL_IMAGE_FILE_NOT_FOUND = int("ADDITIONAL_IMAGE_FILE_NOT_FOUND") /* null */ /* Additional image files are unreadable. Please upload new files to continue. */
    val ADDITIONAL_IMAGE_INVALID_FILE = int("ADDITIONAL_IMAGE_INVALID_FILE") /* null */ /* Additional image files are unreadable. Please upload new files to continue. */
    val HOTEL_PRICE_HEADER_IS_PRESENT = int("HOTEL_PRICE_HEADER_IS_PRESENT") /* null */ /* price is not a supported column. Use base_price and sale_price instead. */

    /**
     * Create an entity of type CatalogsFeedIngestionWarnings from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsFeedIngestionWarnings(
        ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR = row[ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR]  /* kotlin.Int? */ /* We experienced a technical difficulty and were unable to download some additional images. The next download attempt will happen in 24 hours. */,
        ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE = row[ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE]  /* kotlin.Int? */ /* Additional image files are unreadable. Please upload new files to continue. */,
        ADDITIONAL_IMAGE_MALFORMED_URL = row[ADDITIONAL_IMAGE_MALFORMED_URL]  /* kotlin.Int? */ /* Additional image files are unreadable. Please check your link and upload new files to continue. */,
        ADDITIONAL_IMAGE_FILE_NOT_FOUND = row[ADDITIONAL_IMAGE_FILE_NOT_FOUND]  /* kotlin.Int? */ /* Additional image files are unreadable. Please upload new files to continue. */,
        ADDITIONAL_IMAGE_INVALID_FILE = row[ADDITIONAL_IMAGE_INVALID_FILE]  /* kotlin.Int? */ /* Additional image files are unreadable. Please upload new files to continue. */,
        HOTEL_PRICE_HEADER_IS_PRESENT = row[HOTEL_PRICE_HEADER_IS_PRESENT]  /* kotlin.Int? */ /* price is not a supported column. Use base_price and sale_price instead. */
    )

    /**
    * Assign all the columns from the entity of type CatalogsFeedIngestionWarnings to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsFeedIngestionWarnings()
    * database.update(CatalogsFeedIngestionWarningss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsFeedIngestionWarnings) {
        this.apply {
            set(CatalogsFeedIngestionWarningss.ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR, entity.ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR)
            set(CatalogsFeedIngestionWarningss.ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE, entity.ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE)
            set(CatalogsFeedIngestionWarningss.ADDITIONAL_IMAGE_MALFORMED_URL, entity.ADDITIONAL_IMAGE_MALFORMED_URL)
            set(CatalogsFeedIngestionWarningss.ADDITIONAL_IMAGE_FILE_NOT_FOUND, entity.ADDITIONAL_IMAGE_FILE_NOT_FOUND)
            set(CatalogsFeedIngestionWarningss.ADDITIONAL_IMAGE_INVALID_FILE, entity.ADDITIONAL_IMAGE_INVALID_FILE)
            set(CatalogsFeedIngestionWarningss.HOTEL_PRICE_HEADER_IS_PRESENT, entity.HOTEL_PRICE_HEADER_IS_PRESENT)
        }
    }

}


