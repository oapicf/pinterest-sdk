/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param ADULT_INVALID 
 * @param ADWORDS_FORMAT_INVALID 
 * @param AVAILABILITY_INVALID 
 * @param BLOCKLISTED_IMAGE_SIGNATURE 
 * @param DESCRIPTION_MISSING 
 * @param DUPLICATE_PRODUCTS 
 * @param IMAGE_LINK_INVALID 
 * @param IMAGE_LINK_LENGTH_TOO_LONG 
 * @param IMAGE_LINK_MISSING 
 * @param INVALID_DOMAIN 
 * @param ITEMID_MISSING 
 * @param ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE 
 * @param LINK_FORMAT_INVALID 
 * @param LINK_LENGTH_TOO_LONG 
 * @param LIST_PRICE_INVALID 
 * @param MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED 
 * @param PARSE_LINE_ERROR 
 * @param PINJOIN_CONTENT_UNSAFE 
 * @param PRICE_CANNOT_BE_DETERMINED 
 * @param PRICE_MISSING 
 * @param PRODUCT_LINK_MISSING 
 * @param PRODUCT_PRICE_INVALID 
 * @param TITLE_MISSING 
 */
object CatalogsItemValidationErrorss : BaseTable<CatalogsItemValidationErrors>("CatalogsItemValidationErrors") {
    val ADULT_INVALID = long("ADULT_INVALID") /* null */
    val ADWORDS_FORMAT_INVALID = long("ADWORDS_FORMAT_INVALID") /* null */
    val AVAILABILITY_INVALID = long("AVAILABILITY_INVALID") /* null */
    val BLOCKLISTED_IMAGE_SIGNATURE = long("BLOCKLISTED_IMAGE_SIGNATURE") /* null */
    val DESCRIPTION_MISSING = long("DESCRIPTION_MISSING") /* null */
    val DUPLICATE_PRODUCTS = long("DUPLICATE_PRODUCTS") /* null */
    val IMAGE_LINK_INVALID = long("IMAGE_LINK_INVALID") /* null */
    val IMAGE_LINK_LENGTH_TOO_LONG = long("IMAGE_LINK_LENGTH_TOO_LONG") /* null */
    val IMAGE_LINK_MISSING = long("IMAGE_LINK_MISSING") /* null */
    val INVALID_DOMAIN = long("INVALID_DOMAIN") /* null */
    val ITEMID_MISSING = long("ITEMID_MISSING") /* null */
    val ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = long("ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE") /* null */
    val LINK_FORMAT_INVALID = long("LINK_FORMAT_INVALID") /* null */
    val LINK_LENGTH_TOO_LONG = long("LINK_LENGTH_TOO_LONG") /* null */
    val LIST_PRICE_INVALID = long("LIST_PRICE_INVALID") /* null */
    val MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = long("MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED") /* null */
    val PARSE_LINE_ERROR = long("PARSE_LINE_ERROR") /* null */
    val PINJOIN_CONTENT_UNSAFE = long("PINJOIN_CONTENT_UNSAFE") /* null */
    val PRICE_CANNOT_BE_DETERMINED = long("PRICE_CANNOT_BE_DETERMINED") /* null */
    val PRICE_MISSING = long("PRICE_MISSING") /* null */
    val PRODUCT_LINK_MISSING = long("PRODUCT_LINK_MISSING") /* null */
    val PRODUCT_PRICE_INVALID = long("PRODUCT_PRICE_INVALID") /* null */
    val TITLE_MISSING = long("TITLE_MISSING") /* null */

    /**
     * Create an entity of type CatalogsItemValidationErrors from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CatalogsItemValidationErrors(
        ADULT_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        ADWORDS_FORMAT_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        AVAILABILITY_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        BLOCKLISTED_IMAGE_SIGNATURE = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        DESCRIPTION_MISSING = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        DUPLICATE_PRODUCTS = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        IMAGE_LINK_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        IMAGE_LINK_LENGTH_TOO_LONG = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        IMAGE_LINK_MISSING = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        INVALID_DOMAIN = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        ITEMID_MISSING = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        LINK_FORMAT_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        LINK_LENGTH_TOO_LONG = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        LIST_PRICE_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        PARSE_LINE_ERROR = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        PINJOIN_CONTENT_UNSAFE = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        PRICE_CANNOT_BE_DETERMINED = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        PRICE_MISSING = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        PRODUCT_LINK_MISSING = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        PRODUCT_PRICE_INVALID = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */,
        TITLE_MISSING = CatalogsItemValidationDetailss.createEntity(row, withReferences) /* CatalogsItemValidationDetails? */
    )

    /**
    * Assign all the columns from the entity of type CatalogsItemValidationErrors to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CatalogsItemValidationErrors()
    * database.update(CatalogsItemValidationErrorss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CatalogsItemValidationErrors) {
        this.apply {
            set(CatalogsItemValidationErrorss.ADULT_INVALID, entity.ADULT_INVALID)
            set(CatalogsItemValidationErrorss.ADWORDS_FORMAT_INVALID, entity.ADWORDS_FORMAT_INVALID)
            set(CatalogsItemValidationErrorss.AVAILABILITY_INVALID, entity.AVAILABILITY_INVALID)
            set(CatalogsItemValidationErrorss.BLOCKLISTED_IMAGE_SIGNATURE, entity.BLOCKLISTED_IMAGE_SIGNATURE)
            set(CatalogsItemValidationErrorss.DESCRIPTION_MISSING, entity.DESCRIPTION_MISSING)
            set(CatalogsItemValidationErrorss.DUPLICATE_PRODUCTS, entity.DUPLICATE_PRODUCTS)
            set(CatalogsItemValidationErrorss.IMAGE_LINK_INVALID, entity.IMAGE_LINK_INVALID)
            set(CatalogsItemValidationErrorss.IMAGE_LINK_LENGTH_TOO_LONG, entity.IMAGE_LINK_LENGTH_TOO_LONG)
            set(CatalogsItemValidationErrorss.IMAGE_LINK_MISSING, entity.IMAGE_LINK_MISSING)
            set(CatalogsItemValidationErrorss.INVALID_DOMAIN, entity.INVALID_DOMAIN)
            set(CatalogsItemValidationErrorss.ITEMID_MISSING, entity.ITEMID_MISSING)
            set(CatalogsItemValidationErrorss.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE, entity.ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE)
            set(CatalogsItemValidationErrorss.LINK_FORMAT_INVALID, entity.LINK_FORMAT_INVALID)
            set(CatalogsItemValidationErrorss.LINK_LENGTH_TOO_LONG, entity.LINK_LENGTH_TOO_LONG)
            set(CatalogsItemValidationErrorss.LIST_PRICE_INVALID, entity.LIST_PRICE_INVALID)
            set(CatalogsItemValidationErrorss.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED, entity.MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED)
            set(CatalogsItemValidationErrorss.PARSE_LINE_ERROR, entity.PARSE_LINE_ERROR)
            set(CatalogsItemValidationErrorss.PINJOIN_CONTENT_UNSAFE, entity.PINJOIN_CONTENT_UNSAFE)
            set(CatalogsItemValidationErrorss.PRICE_CANNOT_BE_DETERMINED, entity.PRICE_CANNOT_BE_DETERMINED)
            set(CatalogsItemValidationErrorss.PRICE_MISSING, entity.PRICE_MISSING)
            set(CatalogsItemValidationErrorss.PRODUCT_LINK_MISSING, entity.PRODUCT_LINK_MISSING)
            set(CatalogsItemValidationErrorss.PRODUCT_PRICE_INVALID, entity.PRODUCT_PRICE_INVALID)
            set(CatalogsItemValidationErrorss.TITLE_MISSING, entity.TITLE_MISSING)
        }
    }

}


