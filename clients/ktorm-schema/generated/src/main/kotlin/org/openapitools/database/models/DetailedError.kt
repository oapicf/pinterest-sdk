/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Used for including extra details to a base error
 * @param code 
 * @param message 
 * @param details 
 */
object DetailedErrors : BaseTable<DetailedError>("DetailedError") {
    val code = int("code")
    val message = text("message")
    val details = blob("details")

    /**
     * Create an entity of type DetailedError from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = DetailedError(
        code = row[code] ?: 0 /* kotlin.Int */,
        message = row[message] ?: "" /* kotlin.String */,
        details = row[details] /* kotlin.Any */
    )

    /**
    * Assign all the columns from the entity of type DetailedError to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = DetailedError()
    * database.update(DetailedErrors, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: DetailedError) {
        this.apply {
            set(DetailedErrors.code, entity.code)
            set(DetailedErrors.message, entity.message)
            set(DetailedErrors.details, entity.details)
        }
    }

}


