/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param deletedAssetGroups A list of ids of successfully deleted asset groups.
 * @param exceptions A list of errors associated with the asset groups. Will be returned if there is an error.
 */
object DeleteAssetGroupResponses : BaseTable<DeleteAssetGroupResponse>("DeleteAssetGroupResponse") {

    /**
     * Create an entity of type DeleteAssetGroupResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = DeleteAssetGroupResponse(
        deletedAssetGroups = emptyList() /* kotlin.Array<kotlin.String>? */ /* A list of ids of successfully deleted asset groups. */,
        exceptions = emptyList() /* kotlin.Array<DeleteAssetGroupResponseExceptionsInner>? */ /* A list of errors associated with the asset groups. Will be returned if there is an error. */
    )

    /**
    * Assign all the columns from the entity of type DeleteAssetGroupResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = DeleteAssetGroupResponse()
    * database.update(DeleteAssetGroupResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: DeleteAssetGroupResponse) {
        this.apply {
        }
    }

}


object DeleteAssetGroupResponseDeletedAssetGroups : BaseTable<Pair<kotlin.Long, kotlin.String>>("DeleteAssetGroupResponseDeletedAssetGroups") {
    val deleteAssetGroupResponse = long("deleteAssetGroupResponse")
    val deletedAssetGroups = text("deletedAssetGroups")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[deleteAssetGroupResponse] ?: 0, row[deletedAssetGroups] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(DeleteAssetGroupResponseDeletedAssetGroups.deleteAssetGroupResponse, entity.first)
            set(DeleteAssetGroupResponseDeletedAssetGroups.deletedAssetGroups, entity.second)
        }
    }

}

object DeleteAssetGroupResponseDeleteAssetGroupResponseExceptionsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("DeleteAssetGroupResponseDeleteAssetGroupResponseExceptionsInner") {
    val deleteAssetGroupResponse = long("deleteAssetGroupResponse")
    val deleteAssetGroupResponseExceptionsInner = long("deleteAssetGroupResponseExceptionsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[deleteAssetGroupResponse] ?: 0, row[deleteAssetGroupResponseExceptionsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(DeleteAssetGroupResponseDeleteAssetGroupResponseExceptionsInner.deleteAssetGroupResponse, entity.first)
            set(DeleteAssetGroupResponseDeleteAssetGroupResponseExceptionsInner.deleteAssetGroupResponseExceptionsInner, entity.second)
        }
    }

}

