/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param width 
 * @param height 
 * @param url 
 */
object ImageDetailss : BaseTable<ImageDetails>("ImageDetails") {
    val width = int("width")
    val height = int("height")
    val url = text("url")

    /**
     * Create an entity of type ImageDetails from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ImageDetails(
        width = row[width] ?: 0 /* kotlin.Int */,
        height = row[height] ?: 0 /* kotlin.Int */,
        url = row[url] ?: "" /* kotlin.String */
    )

    /**
    * Assign all the columns from the entity of type ImageDetails to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ImageDetails()
    * database.update(ImageDetailss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ImageDetails) {
        this.apply {
            set(ImageDetailss.width, entity.width)
            set(ImageDetailss.height, entity.height)
            set(ImageDetailss.url, entity.url)
        }
    }

}


