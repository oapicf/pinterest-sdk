<?php
/**
 * UserAccountApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserAccountApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserAccountApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for boardsUserFollowsList
     *
     * List following boards.
     *
     */
    public function testBoardsUserFollowsList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for followUserUpdate
     *
     * Follow user.
     *
     */
    public function testFollowUserUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for followersList
     *
     * List followers.
     *
     */
    public function testFollowersList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for linkedBusinessAccountsGet
     *
     * List linked businesses.
     *
     */
    public function testLinkedBusinessAccountsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unverifyWebsiteDelete
     *
     * Unverify website.
     *
     */
    public function testUnverifyWebsiteDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userAccountAnalytics
     *
     * Get user account analytics.
     *
     */
    public function testUserAccountAnalytics()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userAccountAnalyticsTopPins
     *
     * Get user account top pins analytics.
     *
     */
    public function testUserAccountAnalyticsTopPins()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userAccountAnalyticsTopVideoPins
     *
     * Get user account top video pins analytics.
     *
     */
    public function testUserAccountAnalyticsTopVideoPins()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userAccountFollowedInterests
     *
     * List following interests.
     *
     */
    public function testUserAccountFollowedInterests()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userAccountGet
     *
     * Get user account.
     *
     */
    public function testUserAccountGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userFollowingGet
     *
     * List following.
     *
     */
    public function testUserFollowingGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for userWebsitesGet
     *
     * Get user websites.
     *
     */
    public function testUserWebsitesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyWebsiteUpdate
     *
     * Verify website.
     *
     */
    public function testVerifyWebsiteUpdate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for websiteVerificationGet
     *
     * Get user verification code for website claiming.
     *
     */
    public function testWebsiteVerificationGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
