/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.BulkDownloadRequest;
import com.prokarma.pkmst.model.BulkDownloadResponse;
import com.prokarma.pkmst.model.BulkUpsertRequest;
import com.prokarma.pkmst.model.BulkUpsertResponse;
import com.prokarma.pkmst.model.BulkUpsertStatusResponse;
import com.prokarma.pkmst.model.Error;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2024-11-05T02:04:39.133647094Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Api(value = "Bulk", description = "the Bulk API")
public interface BulkApi {

    @ApiOperation(value = "Get advertiser entities in bulk", notes = "Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.", response = BulkDownloadResponse.class, authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.") })
         }, tags={ "bulk", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = BulkDownloadResponse.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/bulk/download",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<BulkDownloadResponse> bulkDownloadCreate(@ApiParam(value = "Unique identifier of an ad account.",required=true ) @PathVariable("ad_account_id") String adAccountId,@ApiParam(value = "Parameters to get ad entities in bulk" ,required=true )   @RequestBody BulkDownloadRequest bulkDownloadRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Download advertiser entities in bulk", notes = "Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).", response = BulkUpsertStatusResponse.class, authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.") })
         }, tags={ "bulk", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = BulkUpsertStatusResponse.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}",
        produces = { "application/json" }
    )
    ResponseEntity<BulkUpsertStatusResponse> bulkRequestGet(@ApiParam(value = "Unique identifier of an ad account.",required=true ) @PathVariable("ad_account_id") String adAccountId,@ApiParam(value = "Unique identifier of a bulk upsert request.",required=true ) @PathVariable("bulk_request_id") String bulkRequestId,@ApiParam(value = "if set to True then attach the errors/details to all the requests", defaultValue = "false")  @RequestParam(value = "include_details", required = false, defaultValue="false") Boolean includeDetails, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Create/update ad entities in bulk", notes = "Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a <code>request_id</code> that can be used to obtain the status of the request.", response = BulkUpsertResponse.class, authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:write", description = "Create, update, or delete ads, ad groups, campaigns etc.") })
         }, tags={ "bulk", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = BulkUpsertResponse.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/bulk/upsert",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<BulkUpsertResponse> bulkUpsertCreate(@ApiParam(value = "Unique identifier of an ad account.",required=true ) @PathVariable("ad_account_id") String adAccountId,@ApiParam(value = "Parameters to get create/update ad entities in bulk" ,required=true )   @RequestBody BulkUpsertRequest bulkUpsertRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
