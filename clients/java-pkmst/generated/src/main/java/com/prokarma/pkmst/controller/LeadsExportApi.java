/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.Error;
import com.prokarma.pkmst.model.LeadsExportCreateRequest;
import com.prokarma.pkmst.model.LeadsExportCreateResponse;
import com.prokarma.pkmst.model.LeadsExportResponseData;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2024-11-05T02:04:39.133647094Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Api(value = "LeadsExport", description = "the LeadsExport API")
public interface LeadsExportApi {

    @ApiOperation(value = "Create a request to export leads collected from a lead ad", notes = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Create an export of leads collected from a lead ad. This returns a lead_export_id  token that you can use to download the export when it is ready.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.", response = LeadsExportCreateResponse.class, authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:write", description = "Create, update, or delete ads, ad groups, campaigns etc.") })
         }, tags={ "leads_export", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = LeadsExportCreateResponse.class),
        @ApiResponse(code = 400, message = "Invalid ad account parameter.", response = Error.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/leads_export",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<LeadsExportCreateResponse> leadsExportCreate(@ApiParam(value = "Unique identifier of an ad account.",required=true ) @PathVariable("ad_account_id") String adAccountId,@ApiParam(value = "" ,required=true )   @RequestBody LeadsExportCreateRequest leadsExportCreateRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get the lead export from the lead export create call", notes = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Get the export of leads collected from a lead ad. This returns a URL to a list of lead export given a lead_export_id token returned from the create a lead export call. You can use the URL to download the report.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.", response = LeadsExportResponseData.class, authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.") })
         }, tags={ "leads_export", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = LeadsExportResponseData.class),
        @ApiResponse(code = 400, message = "Invalid ad account parameter.", response = Error.class),
        @ApiResponse(code = 404, message = "Invalid leads export id parameter.", response = Error.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/leads_export/{leads_export_id}",
        produces = { "application/json" }
    )
    ResponseEntity<LeadsExportResponseData> leadsExportGet(@ApiParam(value = "Unique identifier of an ad account.",required=true ) @PathVariable("ad_account_id") String adAccountId,@ApiParam(value = "lead_export_id token returned from the create a lead export endpoint",required=true ) @PathVariable("leads_export_id") String leadsExportId, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
