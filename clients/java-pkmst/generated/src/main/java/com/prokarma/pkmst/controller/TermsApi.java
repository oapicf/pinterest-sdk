/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.Error;
import java.util.List;
import com.prokarma.pkmst.model.RelatedTerms;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2024-11-05T02:04:39.133647094Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Api(value = "Terms", description = "the Terms API")
public interface TermsApi {

    @ApiOperation(value = "List related terms", notes = "Get a list of terms logically related to each input term. <p/> Example: the term 'workout' would list related terms like 'one song workout', 'yoga workout', 'workout motivation', etc.", response = RelatedTerms.class, authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.") })
         }, tags={ "terms", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = RelatedTerms.class),
        @ApiResponse(code = 400, message = "Invalid terms related parameters.", response = Error.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/terms/related",
        produces = { "application/json" }
    )
    ResponseEntity<RelatedTerms> termsRelatedList(@ApiParam(value = "List of input terms.", required = true)  @RequestParam(value = "terms", required = true) List<String> terms, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "List suggested terms", notes = "Get popular search terms that begin with your input term. <p/> Example: 'sport' would return popular terms like 'sports bar' and 'sportswear', but not 'motor sports' since the phrase does not begin with the given term.", response = String.class, responseContainer = "List", authorizations = {
        @Authorization(value = "pinterest_oauth2", scopes = {
            @AuthorizationScope(scope = "ads:read", description = "See all of your advertising data, including ads, ad groups, campaigns etc.") })
         }, tags={ "terms", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid terms suggested parameters.", response = Error.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/terms/suggested",
        produces = { "application/json" }
    )
    ResponseEntity<List<String>> termsSuggestedList(@ApiParam(value = "Input term.", required = true)  @RequestParam(value = "term", required = true) String term,@ApiParam(value = "Max suggested terms to return.", defaultValue = "4")  @RequestParam(value = "limit", required = false, defaultValue="4") Integer limit, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
