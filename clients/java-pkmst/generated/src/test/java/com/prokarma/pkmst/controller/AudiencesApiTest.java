/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.Audience;
import com.prokarma.pkmst.model.AudienceCreateCustomRequest;
import com.prokarma.pkmst.model.AudienceCreateRequest;
import com.prokarma.pkmst.model.AudienceUpdateRequest;
import com.prokarma.pkmst.model.AudiencesList200Response;
import com.prokarma.pkmst.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for AudiencesApi
 */
@Ignore
public class AudiencesApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final AudiencesApi api = new AudiencesApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Create audience
     *
     * Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with the ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude specific audience_ids when you create an ad group. &lt;p/&gt; For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void audiencesCreateTest() throws Exception {
        String adAccountId = null;
        AudienceCreateRequest audienceCreateRequest = null;
    ResponseEntity<Audience> response = api.audiencesCreate(adAccountId, audienceCreateRequest , accept);

        // TODO: test validations
    }
    
    /**
     * Create custom audience
     *
     * Create a custom audience and find the audiences you want your ads to reach.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void audiencesCreateCustomTest() throws Exception {
        String adAccountId = null;
        AudienceCreateCustomRequest audienceCreateCustomRequest = null;
    ResponseEntity<Audience> response = api.audiencesCreateCustom(adAccountId, audienceCreateCustomRequest , accept);

        // TODO: test validations
    }
    
    /**
     * Get audience
     *
     * Get a specific audience given the audience ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void audiencesGetTest() throws Exception {
        String adAccountId = null;
        String audienceId = null;
    ResponseEntity<Audience> response = api.audiencesGet(adAccountId, audienceId , accept);

        // TODO: test validations
    }
    
    /**
     * List audiences
     *
     * Get list of audiences for the ad account.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void audiencesListTest() throws Exception {
        String adAccountId = null;
        String bookmark = null;
        String order = null;
        Integer pageSize = null;
        String ownershipType = null;
    ResponseEntity<AudiencesList200Response> response = api.audiencesList(adAccountId, bookmark, order, pageSize, ownershipType , accept);

        // TODO: test validations
    }
    
    /**
     * Update audience
     *
     * Update (edit or remove) an existing targeting audience.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void audiencesUpdateTest() throws Exception {
        String adAccountId = null;
        String audienceId = null;
        AudienceUpdateRequest audienceUpdateRequest = null;
    ResponseEntity<Audience> response = api.audiencesUpdate(adAccountId, audienceId, audienceUpdateRequest , accept);

        // TODO: test validations
    }
    
}
