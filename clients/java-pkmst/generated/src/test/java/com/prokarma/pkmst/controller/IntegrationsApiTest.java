/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.DetailedError;
import com.prokarma.pkmst.model.Error;
import com.prokarma.pkmst.model.IntegrationLogsRequest;
import com.prokarma.pkmst.model.IntegrationLogsSuccessResponse;
import com.prokarma.pkmst.model.IntegrationMetadata;
import com.prokarma.pkmst.model.IntegrationRecord;
import com.prokarma.pkmst.model.IntegrationRequest;
import com.prokarma.pkmst.model.IntegrationRequestPatch;
import com.prokarma.pkmst.model.IntegrationsGetList200Response;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for IntegrationsApi
 */
@Ignore
public class IntegrationsApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final IntegrationsApi api = new IntegrationsApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Delete commerce integration
     *
     * Delete commerce integration metadata for the given external business ID. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsCommerceDelTest() throws Exception {
        String externalBusinessId = null;
    ResponseEntity<Void> response = api.integrationsCommerceDel(externalBusinessId , accept);

        // TODO: test validations
    }
    
    /**
     * Get commerce integration
     *
     * Get commerce integration metadata associated with the given external business ID. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsCommerceGetTest() throws Exception {
        String externalBusinessId = null;
    ResponseEntity<IntegrationMetadata> response = api.integrationsCommerceGet(externalBusinessId , accept);

        // TODO: test validations
    }
    
    /**
     * Update commerce integration
     *
     * Update commerce integration metadata for the given external business ID. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsCommercePatchTest() throws Exception {
        String externalBusinessId = null;
        IntegrationRequestPatch integrationRequestPatch = null;
    ResponseEntity<IntegrationMetadata> response = api.integrationsCommercePatch(externalBusinessId, integrationRequestPatch , accept);

        // TODO: test validations
    }
    
    /**
     * Create commerce integration
     *
     * Create commerce integration metadata to link an external business ID with a Pinterest merchant &amp; ad account. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsCommercePostTest() throws Exception {
        IntegrationRequest integrationRequest = null;
    ResponseEntity<IntegrationMetadata> response = api.integrationsCommercePost(integrationRequest , accept);

        // TODO: test validations
    }
    
    /**
     * Get integration metadata
     *
     * Get integration metadata by ID. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsGetByIdTest() throws Exception {
        String id = null;
    ResponseEntity<IntegrationRecord> response = api.integrationsGetById(id , accept);

        // TODO: test validations
    }
    
    /**
     * Get integration metadata list
     *
     * Get integration metadata list. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsGetListTest() throws Exception {
        String bookmark = null;
        Integer pageSize = null;
    ResponseEntity<IntegrationsGetList200Response> response = api.integrationsGetList(bookmark, pageSize , accept);

        // TODO: test validations
    }
    
    /**
     * Receives batched logs from integration applications.
     *
     * This endpoint receives batched logs from integration applications on partner platforms. Note: If you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void integrationsLogsPostTest() throws Exception {
        IntegrationLogsRequest integrationLogsRequest = null;
    ResponseEntity<IntegrationLogsSuccessResponse> response = api.integrationsLogsPost(integrationLogsRequest , accept);

        // TODO: test validations
    }
    
}
