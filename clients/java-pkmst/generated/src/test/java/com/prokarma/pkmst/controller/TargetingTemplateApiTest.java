/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.Error;
import com.prokarma.pkmst.model.TargetingTemplateCreate;
import com.prokarma.pkmst.model.TargetingTemplateGetResponseData;
import com.prokarma.pkmst.model.TargetingTemplateList200Response;
import com.prokarma.pkmst.model.TargetingTemplateUpdateRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for TargetingTemplateApi
 */
@Ignore
public class TargetingTemplateApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final TargetingTemplateApi api = new TargetingTemplateApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Create targeting templates
     *
     * &lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;  &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.&lt;/p&gt;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void targetingTemplateCreateTest() throws Exception {
        String adAccountId = null;
        TargetingTemplateCreate targetingTemplateCreate = null;
    ResponseEntity<TargetingTemplateGetResponseData> response = api.targetingTemplateCreate(adAccountId, targetingTemplateCreate , accept);

        // TODO: test validations
    }
    
    /**
     * List targeting templates
     *
     * Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void targetingTemplateListTest() throws Exception {
        String adAccountId = null;
        String order = null;
        Boolean includeSizing = null;
        String searchQuery = null;
        Integer pageSize = null;
        String bookmark = null;
    ResponseEntity<TargetingTemplateList200Response> response = api.targetingTemplateList(adAccountId, order, includeSizing, searchQuery, pageSize, bookmark , accept);

        // TODO: test validations
    }
    
    /**
     * Update targeting templates
     *
     * &lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void targetingTemplateUpdateTest() throws Exception {
        String adAccountId = null;
        TargetingTemplateUpdateRequest targetingTemplateUpdateRequest = null;
    ResponseEntity<Void> response = api.targetingTemplateUpdate(adAccountId, targetingTemplateUpdateRequest , accept);

        // TODO: test validations
    }
    
}
