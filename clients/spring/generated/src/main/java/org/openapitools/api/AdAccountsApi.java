/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.AdAccount;
import org.openapitools.model.AdAccountAnalyticsResponseInner;
import org.openapitools.model.AdAccountCreateRequest;
import org.openapitools.model.AdAccountCreateSubscriptionRequest;
import org.openapitools.model.AdAccountCreateSubscriptionResponse;
import org.openapitools.model.AdAccountGetSubscriptionResponse;
import org.openapitools.model.AdAccountsAudiencesSharedAccountsList200Response;
import org.openapitools.model.AdAccountsList200Response;
import org.openapitools.model.AdAccountsSubscriptionsGetList200Response;
import org.openapitools.model.AdArrayResponse;
import org.openapitools.model.AdCreateRequest;
import org.openapitools.model.AdGroupArrayResponse;
import org.openapitools.model.AdGroupAudienceSizingRequest;
import org.openapitools.model.AdGroupAudienceSizingResponse;
import org.openapitools.model.AdGroupCreateRequest;
import org.openapitools.model.AdGroupResponse;
import org.openapitools.model.AdGroupUpdateRequest;
import org.openapitools.model.AdGroupsAnalyticsResponseInner;
import org.openapitools.model.AdGroupsList200Response;
import org.openapitools.model.AdPreviewRequest;
import org.openapitools.model.AdPreviewURLResponse;
import org.openapitools.model.AdResponse;
import org.openapitools.model.AdUpdateRequest;
import org.openapitools.model.AdsAnalyticsAdTargetingType;
import org.openapitools.model.AdsAnalyticsCampaignTargetingType;
import org.openapitools.model.AdsAnalyticsCreateAsyncRequest;
import org.openapitools.model.AdsAnalyticsCreateAsyncResponse;
import org.openapitools.model.AdsAnalyticsGetAsyncResponse;
import org.openapitools.model.AdsAnalyticsResponseInner;
import org.openapitools.model.AdsAnalyticsTargetingType;
import org.openapitools.model.AdsCreditRedeemRequest;
import org.openapitools.model.AdsCreditRedeemResponse;
import org.openapitools.model.AdsCreditsDiscountsGet200Response;
import org.openapitools.model.AdsList200Response;
import org.openapitools.model.Audience;
import org.openapitools.model.AudienceAccountType;
import org.openapitools.model.AudienceCreateCustomRequest;
import org.openapitools.model.AudienceCreateRequest;
import org.openapitools.model.AudienceDefinitionResponse;
import org.openapitools.model.AudienceInsightType;
import org.openapitools.model.AudienceInsightsResponse;
import org.openapitools.model.AudienceUpdateRequest;
import org.openapitools.model.AudiencesList200Response;
import org.openapitools.model.BidFloor;
import org.openapitools.model.BidFloorRequest;
import org.openapitools.model.BillingProfilesGet200Response;
import org.openapitools.model.BulkDownloadRequest;
import org.openapitools.model.BulkDownloadResponse;
import org.openapitools.model.BulkUpsertRequest;
import org.openapitools.model.BulkUpsertResponse;
import org.openapitools.model.BulkUpsertStatusResponse;
import org.openapitools.model.BusinessSharedAudience;
import org.openapitools.model.BusinessSharedAudienceResponse;
import org.openapitools.model.CampaignCreateRequest;
import org.openapitools.model.CampaignCreateResponse;
import org.openapitools.model.CampaignResponse;
import org.openapitools.model.CampaignUpdateRequest;
import org.openapitools.model.CampaignUpdateResponse;
import org.openapitools.model.CampaignsAnalyticsResponseInner;
import org.openapitools.model.CampaignsList200Response;
import org.openapitools.model.ConversionApiResponse;
import org.openapitools.model.ConversionEventResponse;
import org.openapitools.model.ConversionEvents;
import org.openapitools.model.ConversionReportAttributionType;
import org.openapitools.model.ConversionTagCreate;
import org.openapitools.model.ConversionTagListResponse;
import org.openapitools.model.ConversionTagResponse;
import org.openapitools.model.CreateMMMReportRequest;
import org.openapitools.model.CreateMMMReportResponse;
import org.openapitools.model.CustomerList;
import org.openapitools.model.CustomerListRequest;
import org.openapitools.model.CustomerListUpdateRequest;
import org.openapitools.model.CustomerListsList200Response;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.model.DetailedError;
import org.openapitools.model.Error;
import org.openapitools.model.GetMMMReportResponse;
import org.openapitools.model.Granularity;
import org.openapitools.model.KeywordUpdateBody;
import org.openapitools.model.KeywordsGet200Response;
import org.openapitools.model.KeywordsMetricsArrayResponse;
import org.openapitools.model.KeywordsRequest;
import org.openapitools.model.KeywordsResponse;
import org.openapitools.model.LeadFormArrayResponse;
import org.openapitools.model.LeadFormCreateRequest;
import org.openapitools.model.LeadFormResponse;
import org.openapitools.model.LeadFormTestRequest;
import org.openapitools.model.LeadFormTestResponse;
import org.openapitools.model.LeadFormUpdateRequest;
import org.openapitools.model.LeadFormsList200Response;
import org.openapitools.model.LeadsExportCreateRequest;
import org.openapitools.model.LeadsExportCreateResponse;
import org.openapitools.model.LeadsExportResponseData;
import java.time.LocalDate;
import java.util.Map;
import org.openapitools.model.MatchType;
import org.openapitools.model.MetricsResponse;
import org.openapitools.model.OrderLine;
import org.openapitools.model.OrderLinesList200Response;
import org.openapitools.model.PageVisitConversionTagsGet200Response;
import org.openapitools.model.ProductGroupAnalyticsResponseInner;
import org.openapitools.model.ProductGroupPromotionCreateRequest;
import org.openapitools.model.ProductGroupPromotionResponse;
import org.openapitools.model.ProductGroupPromotionUpdateRequest;
import org.openapitools.model.ProductGroupPromotionsList200Response;
import org.openapitools.model.SSIOAccountResponse;
import org.openapitools.model.SSIOCreateInsertionOrderRequest;
import org.openapitools.model.SSIOCreateInsertionOrderResponse;
import org.openapitools.model.SSIOEditInsertionOrderRequest;
import org.openapitools.model.SSIOEditInsertionOrderResponse;
import org.openapitools.model.SSIOInsertionOrderStatusResponse;
import org.openapitools.model.SharedAudience;
import org.openapitools.model.SharedAudienceResponse;
import org.openapitools.model.SsioInsertionOrdersStatusGetByAdAccount200Response;
import org.openapitools.model.SsioOrderLinesGetByAdAccount200Response;
import org.openapitools.model.TargetingTemplateCreate;
import org.openapitools.model.TargetingTemplateGetResponseData;
import org.openapitools.model.TargetingTemplateList200Response;
import org.openapitools.model.TargetingTemplateUpdateRequest;
import org.openapitools.model.TemplatesList200Response;
import org.openapitools.model.TermsOfService;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-11-05T03:06:09.428113339Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Validated
@Tag(name = "ad_accounts", description = "View analytical information about advertising.   Note: If the current operation_user_account (defined by the access token) has access to another user's Ad Accounts via <a href='/docs/getting-started/using-business-access/'>Pinterest Business Access</a>, you can modify your request to use the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).")
public interface AdAccountsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /ad_accounts/{ad_account_id}/analytics : Get ad account analytics
     * Get analytics for the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return Success (status code 200)
     *         or Invalid ad account analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adAccountAnalytics",
        summary = "Get ad account analytics",
        description = "Get analytics for the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = AdAccountAnalyticsResponseInner.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<AdAccountAnalyticsResponseInner>> adAccountAnalytics(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"DATE\" : \"2021-04-01\", \"AD_ACCOUNT_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 }, { \"DATE\" : \"2021-04-01\", \"AD_ACCOUNT_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/targeting_analytics : Get targeting analytics for an ad account
     * Get targeting analytics for an ad account. For the requested account and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \&quot;age_bucket\&quot;) for applicable values (e.g. \&quot;45-49\&quot;). &lt;p/&gt; - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param targetingTypes Targeting type breakdowns for the report. The reporting per targeting type &lt;br&gt; is independent from each other. [\&quot;AGE_BUCKET_AND_GENDER\&quot;] is in BETA and not yet available to all users. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @param attributionTypes List of types of attribution for the conversion report (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adAccountTargetingAnalyticsGet",
        summary = "Get targeting analytics for an ad account",
        description = "Get targeting analytics for an ad account. For the requested account and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \"age_bucket\") for applicable values (e.g. \"45-49\"). <p/> - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MetricsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/targeting_analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<MetricsResponse> adAccountTargetingAnalyticsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 15) @Parameter(name = "targeting_types", description = "Targeting type breakdowns for the report. The reporting per targeting type <br> is independent from each other. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "targeting_types", required = true) List<AdsAnalyticsTargetingType> targetingTypes,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime,
        @Parameter(name = "attribution_types", description = "List of types of attribution for the conversion report", in = ParameterIn.QUERY) @Valid @RequestParam(value = "attribution_types", required = false) ConversionReportAttributionType attributionTypes
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : [ { \"targeting_type\" : \"KEYWORD\", \"targeting_value\" : \"christmas decor ideas\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"iphone\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"ipad\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_tablet\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GENDER\", \"targeting_value\" : \"female\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"LOCATION\", \"targeting_value\" : 500, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PLACEMENT\", \"targeting_value\" : \"SEARCH\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"COUNTRY\", \"targeting_value\" : \"US\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"TARGETED_INTEREST\", \"targeting_value\" : \"Food and Drinks\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PINNER_INTEREST\", \"targeting_value\" : \"Chocolate Cookies\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AUDIENCE_INCLUDE\", \"targeting_value\" : 254261234567, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GEO\", \"targeting_value\" : \"US:94102\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AGE_BUCKET\", \"targeting_value\" : \"45-49\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"REGION\", \"targeting_value\" : \"US-CA\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/audiences/shared/accounts : List accounts with access to an audience owned by an ad account
     * List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceId Unique identifier of the audience to use to filter the results. (required)
     * @param accountType Filter accounts by account type. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Invalid ad account audiences shared accounts parameters. (status code 400)
     *         or Shared accounts not found. (status code 404)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "adAccountsAudiencesSharedAccountsList",
        summary = "List accounts with access to an audience owned by an ad account",
        description = "List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.",
        tags = { "audience_sharing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccountsAudiencesSharedAccountsList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account audiences shared accounts parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Shared accounts not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/audiences/shared/accounts",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdAccountsAudiencesSharedAccountsList200Response> adAccountsAudiencesSharedAccountsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "audience_id", description = "Unique identifier of the audience to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "audience_id", required = true) String audienceId,
        @NotNull @Parameter(name = "account_type", description = "Filter accounts by account type.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "account_type", required = true, defaultValue = "AD_ACCOUNT") AudienceAccountType accountType,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"account_type\" : \"AD_ACCOUNT\", \"account_id\" : \"549755885175\", \"account_name\" : \"Home Depot USA\", \"shared_on_timestamp\" : 1677003860 }, { \"account_type\" : \"AD_ACCOUNT\", \"account_id\" : \"549755885175\", \"account_name\" : \"Home Depot USA\", \"shared_on_timestamp\" : 1677003860 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts : Create ad account
     * Create a new ad account. Different ad accounts can support different currencies, payment methods, etc. An ad account is needed to create campaigns, ad groups, and ads; other accounts (your employees or partners) can be assigned business access and appropriate roles to access an ad account. &lt;p/&gt; You can set up up to 50 ad accounts per user. (The user must have a business account to create an ad account.) &lt;p/&gt; For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/create-an-advertiser-account\&quot;&gt;Create an advertiser account&lt;/a&gt;.
     *
     * @param adAccountCreateRequest Ad account to create. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adAccountsCreate",
        summary = "Create ad account",
        description = "Create a new ad account. Different ad accounts can support different currencies, payment methods, etc. An ad account is needed to create campaigns, ad groups, and ads; other accounts (your employees or partners) can be assigned business access and appropriate roles to access an ad account. <p/> You can set up up to 50 ad accounts per user. (The user must have a business account to create an ad account.) <p/> For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/create-an-advertiser-account\">Create an advertiser account</a>.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccount.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdAccount> adAccountsCreate(
        @Parameter(name = "AdAccountCreateRequest", description = "Ad account to create.", required = true) @Valid @RequestBody AdAccountCreateRequest adAccountCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"owner\" : { \"id\" : \"id\", \"username\" : \"username\" }, \"country\" : \"US\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"permissions\" : [ \"ADMIN\", \"ADMIN\" ], \"name\" : \"name\", \"currency\" : \"USD\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id} : Get ad account
     * Get an ad account
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adAccountsGet",
        summary = "Get ad account",
        description = "Get an ad account",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccount.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdAccount> adAccountsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"owner\" : { \"id\" : \"id\", \"username\" : \"username\" }, \"country\" : \"US\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"permissions\" : [ \"ADMIN\", \"ADMIN\" ], \"name\" : \"name\", \"currency\" : \"USD\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts : List ad accounts
     * Get a list of the ad_accounts that the \&quot;operation user_account\&quot; has access to. - This includes ad_accounts they own and ad_accounts that are owned by others who have granted them &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;.
     *
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param includeSharedAccounts Include shared ad accounts (optional, default to true)
     * @return response (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adAccountsList",
        summary = "List ad accounts",
        description = "Get a list of the ad_accounts that the \"operation user_account\" has access to. - This includes ad_accounts they own and ad_accounts that are owned by others who have granted them <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccountsList200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdAccountsList200Response> adAccountsList(
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "include_shared_accounts", description = "Include shared ad accounts", in = ParameterIn.QUERY) @Valid @RequestParam(value = "include_shared_accounts", required = false, defaultValue = "true") Boolean includeSharedAccounts
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"owner\" : { \"id\" : \"id\", \"username\" : \"username\" }, \"country\" : \"US\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"permissions\" : [ \"ADMIN\", \"ADMIN\" ], \"name\" : \"name\", \"currency\" : \"USD\", \"id\" : \"id\" }, { \"owner\" : { \"id\" : \"id\", \"username\" : \"username\" }, \"country\" : \"US\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"permissions\" : [ \"ADMIN\", \"ADMIN\" ], \"name\" : \"name\", \"currency\" : \"USD\", \"id\" : \"id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id} : Delete lead ads subscription
     * Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param subscriptionId Unique identifier of a subscription. (required)
     * @return Subscription deleted successfully (status code 204)
     *         or Invalid input parameters. (status code 400)
     *         or You are not authorized to delete this subscription. (status code 403)
     *         or Subscription not found. (status code 404)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "adAccountsSubscriptionsDelById",
        summary = "Delete lead ads subscription",
        description = "Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "lead_ads" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Subscription deleted successfully"),
            @ApiResponse(responseCode = "400", description = "Invalid input parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "You are not authorized to delete this subscription.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Subscription not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Void> adAccountsSubscriptionsDelById(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Parameter(name = "subscription_id", description = "Unique identifier of a subscription.", required = true, in = ParameterIn.PATH) @PathVariable("subscription_id") String subscriptionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id} : Get lead ads subscription
     * Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param subscriptionId Unique identifier of a subscription. (required)
     * @return Success (status code 200)
     *         or Invalid input parameters. (status code 400)
     *         or Can&#39;t access this subscription. (status code 403)
     *         or Subscription not found. (status code 404)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "adAccountsSubscriptionsGetById",
        summary = "Get lead ads subscription",
        description = "Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "lead_ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccountGetSubscriptionResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid input parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Can't access this subscription.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Subscription not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdAccountGetSubscriptionResponse> adAccountsSubscriptionsGetById(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Parameter(name = "subscription_id", description = "Unique identifier of a subscription.", required = true, in = ParameterIn.PATH) @PathVariable("subscription_id") String subscriptionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\", \"created_time\" : 1699209842000, \"user_account_id\" : \"549755885175\", \"webhook_url\" : \"https://webhook.example.com/xyz\", \"lead_form_id\" : \"383791336903426390\", \"cryptographic_algorithm\" : \"AES-256-GCM\", \"id\" : \"8078432025948590686\", \"api_version\" : \"v5\", \"ad_account_id\" : \"549755885176\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/leads/subscriptions : Get lead ads subscriptions
     * Get the advertiser&#39;s list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Can&#39;t access this subscription. (status code 403)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "adAccountsSubscriptionsGetList",
        summary = "Get lead ads subscriptions",
        description = "Get the advertiser's list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "lead_ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccountsSubscriptionsGetList200Response.class))
            }),
            @ApiResponse(responseCode = "403", description = "Can't access this subscription.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/leads/subscriptions",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdAccountsSubscriptionsGetList200Response> adAccountsSubscriptionsGetList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\", \"created_time\" : 1699209842000, \"user_account_id\" : \"549755885175\", \"webhook_url\" : \"https://webhook.example.com/xyz\", \"lead_form_id\" : \"383791336903426390\", \"cryptographic_algorithm\" : \"AES-256-GCM\", \"id\" : \"8078432025948590686\", \"api_version\" : \"v5\", \"ad_account_id\" : \"549755885176\" }, { \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\", \"created_time\" : 1699209842000, \"user_account_id\" : \"549755885175\", \"webhook_url\" : \"https://webhook.example.com/xyz\", \"lead_form_id\" : \"383791336903426390\", \"cryptographic_algorithm\" : \"AES-256-GCM\", \"id\" : \"8078432025948590686\", \"api_version\" : \"v5\", \"ad_account_id\" : \"549755885176\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/leads/subscriptions : Create lead ads subscription
     * Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adAccountCreateSubscriptionRequest Subscription to create. (required)
     * @return Success (status code 200)
     *         or Invalid input parameters. (status code 400)
     *         or Can&#39;t access this subscription. (status code 403)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "adAccountsSubscriptionsPost",
        summary = "Create lead ads subscription",
        description = "Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "lead_ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdAccountCreateSubscriptionResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid input parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Can't access this subscription.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/leads/subscriptions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdAccountCreateSubscriptionResponse> adAccountsSubscriptionsPost(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdAccountCreateSubscriptionRequest", description = "Subscription to create.", required = true) @Valid @RequestBody AdAccountCreateSubscriptionRequest adAccountCreateSubscriptionRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"cryptographic_key\" : \"ucvxbV2Tdss0vNeYsdh4Qfa/1Khm2b0PqXvXeTTZh54\", \"created_time\" : 1699209842000, \"cryptographic_algorithm\" : \"AES-256-GCM\", \"id\" : \"8078432025948590686\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ad_groups/analytics : Get ad group analytics
     * Get analytics for the specified ad groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return Success (status code 200)
     *         or Invalid ad account group analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsAnalytics",
        summary = "Get ad group analytics",
        description = "Get analytics for the specified ad groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = AdGroupsAnalyticsResponseInner.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account group analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ad_groups/analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<AdGroupsAnalyticsResponseInner>> adGroupsAnalytics(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 100) @Parameter(name = "ad_group_ids", description = "List of Ad group Ids to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_group_ids", required = true) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> adGroupIds,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"DATE\" : \"2021-04-01\", \"AD_GROUP_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 }, { \"DATE\" : \"2021-04-01\", \"AD_GROUP_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/ad_groups/audience_sizing : Get audience sizing
     * Get potential audience size for an ad group with given targeting criteria.  Potential audience size estimates the number of people you may be able to reach per month with your campaign.  It is based on historical advertising data and the targeting criteria you select. It does not guarantee results or take into account factors such as bid, budget, schedule, seasonality or product experiments.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adGroupAudienceSizingRequest  (optional)
     * @return Success (status code 200)
     *         or Invalid ad group audience sizing parameters. (status code 400)
     *         or No access to requested audience list or product group. (status code 403)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsAudienceSizing",
        summary = "Get audience sizing",
        description = "Get potential audience size for an ad group with given targeting criteria.  Potential audience size estimates the number of people you may be able to reach per month with your campaign.  It is based on historical advertising data and the targeting criteria you select. It does not guarantee results or take into account factors such as bid, budget, schedule, seasonality or product experiments.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdGroupAudienceSizingResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad group audience sizing parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "No access to requested audience list or product group.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/ad_groups/audience_sizing",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdGroupAudienceSizingResponse> adGroupsAudienceSizing(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdGroupAudienceSizingRequest", description = "") @Valid @RequestBody(required = false) AdGroupAudienceSizingRequest adGroupAudienceSizingRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"audience_size_upper_bound\" : 150000, \"audience_size_lower_bound\" : 100000 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/bid_floor : Get bid floors
     * List bid floors for your campaign configuration. Bid floors are given in microcurrency values based on the currency in the bid floor specification. &lt;p/&gt; &lt;p&gt;Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.&lt;/p&gt; &lt;p&gt;A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Equivalency equations&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;$1 &#x3D; 1,000,000 microdollars&lt;/li&gt;   &lt;li&gt;1 microdollar &#x3D; $0.000001 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;To convert between currency and microcurrency&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;To convert dollars to microdollars, mutiply dollars by 1,000,000&lt;/li&gt;   &lt;li&gt;To convert microdollars to dollars, divide microdollars by 1,000,000&lt;/li&gt;  &lt;/ul&gt; For more on bid floors see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-your-bid\&quot;&gt; Set your bid&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bidFloorRequest Parameters to get bid_floor info (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsBidFloorGet",
        summary = "Get bid floors",
        description = "List bid floors for your campaign configuration. Bid floors are given in microcurrency values based on the currency in the bid floor specification. <p/> <p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p> <p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.</p> <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p> <ul>   <li>$1 = 1,000,000 microdollars</li>   <li>1 microdollar = $0.000001 </li> </ul> <p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p> <ul>   <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>   <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>  </ul> For more on bid floors see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/set-your-bid\"> Set your bid</a>.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BidFloor.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/bid_floor",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<BidFloor> adGroupsBidFloorGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "BidFloorRequest", description = "Parameters to get bid_floor info", required = true) @Valid @RequestBody BidFloorRequest bidFloorRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bid_floors\" : [ 100000, 200000 ], \"type\" : \"bidfloor\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/ad_groups : Create ad groups
     * Create multiple new ad groups. All ads in a given ad group will have the same budget, bid, run dates, targeting, and placement (search, browse, other). For more information, &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/campaign-structure\&quot; target&#x3D;\&quot;_blank\&quot;&gt; click here&lt;/a&gt;.&lt;/p&gt; &lt;strong&gt;Note:&lt;/strong&gt; - &#39;bid_in_micro_currency&#39; and &#39;budget_in_micro_currency&#39; should be expressed in microcurrency amounts based on the currency field set in the advertiser&#39;s profile.&lt;p/&gt; &lt;p&gt;Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.&lt;/p&gt; &lt;p&gt;A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Equivalency equations&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;$1 &#x3D; 1,000,000 microdollars&lt;/li&gt;   &lt;li&gt;1 microdollar &#x3D; $0.000001 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;To convert between currency and microcurrency&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;To convert dollars to microdollars, mutiply dollars by 1,000,000&lt;/li&gt;   &lt;li&gt;To convert microdollars to dollars, divide microdollars by 1,000,000&lt;/li&gt; &lt;/ul&gt; - Ad groups belong to ad campaigns. Some types of campaigns (e.g. budget optimization) have limits on the number of ad groups they can hold. If you exceed those limits, you will get an error message. - Start and end time cannot be set for ad groups that belong to CBO campaigns. Currently, campaigns with the following objective types: TRAFFIC, AWARENESS, WEB_CONVERSIONS, and CATALOG_SALES will default to CBO.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adGroupCreateRequest List of ad groups to create, size limit [1, 30]. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsCreate",
        summary = "Create ad groups",
        description = "Create multiple new ad groups. All ads in a given ad group will have the same budget, bid, run dates, targeting, and placement (search, browse, other). For more information, <a href=\"https://help.pinterest.com/en/business/article/campaign-structure\" target=\"_blank\"> click here</a>.</p> <strong>Note:</strong> - 'bid_in_micro_currency' and 'budget_in_micro_currency' should be expressed in microcurrency amounts based on the currency field set in the advertiser's profile.<p/> <p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p> <p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.</p>  <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p> <ul>   <li>$1 = 1,000,000 microdollars</li>   <li>1 microdollar = $0.000001 </li> </ul> <p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p> <ul>   <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>   <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li> </ul> - Ad groups belong to ad campaigns. Some types of campaigns (e.g. budget optimization) have limits on the number of ad groups they can hold. If you exceed those limits, you will get an error message. - Start and end time cannot be set for ad groups that belong to CBO campaigns. Currently, campaigns with the following objective types: TRAFFIC, AWARENESS, WEB_CONVERSIONS, and CATALOG_SALES will default to CBO.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdGroupArrayResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/ad_groups",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdGroupArrayResponse> adGroupsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdGroupCreateRequest", description = "List of ad groups to create, size limit [1, 30].", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid AdGroupCreateRequest> adGroupCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ad_groups/{ad_group_id} : Get ad group
     * Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will contain additional information from the Ad Review process. For more information about our policies and rejection reasons see the &lt;a href&#x3D;\&quot;https://www.pinterest.com/_/_/policy/advertising-guidelines/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest advertising standards&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adGroupId Unique identifier of an ad group. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsGet",
        summary = "Get ad group",
        description = "Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will contain additional information from the Ad Review process. For more information about our policies and rejection reasons see the <a href=\"https://www.pinterest.com/_/_/policy/advertising-guidelines/\" target=\"_blank\">Pinterest advertising standards</a>.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdGroupResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ad_groups/{ad_group_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdGroupResponse> adGroupsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_group_id", description = "Unique identifier of an ad group.", required = true, in = ParameterIn.PATH) @PathVariable("ad_group_id") String adGroupId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ad_groups : List ad groups
     * List ad groups based on provided campaign IDs or ad group IDs.(campaign_ids or ad_group_ids). &lt;p/&gt; &lt;strong&gt;Note:&lt;/strong&gt;&lt;p/&gt; Provide only campaign_id or ad_group_id. Do not provide both.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (optional)
     * @param entityStatuses Entity status (optional, default to ACTIVE,PAUSED)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param translateInterestsToNames Return interests as text names (if value is true) rather than topic IDs. (optional, default to false)
     * @return Success (status code 200)
     *         or Invalid ad account group parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsList",
        summary = "List ad groups",
        description = "List ad groups based on provided campaign IDs or ad group IDs.(campaign_ids or ad_group_ids). <p/> <strong>Note:</strong><p/> Provide only campaign_id or ad_group_id. Do not provide both.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdGroupsList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account group parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ad_groups",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdGroupsList200Response> adGroupsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Size(min = 1, max = 100) @Parameter(name = "campaign_ids", description = "List of Campaign Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_ids", required = false) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> campaignIds,
        @Size(min = 1, max = 100) @Parameter(name = "ad_group_ids", description = "List of Ad group Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_group_ids", required = false) List<@Pattern(regexp = "^\\d+$")String> adGroupIds,
        @Parameter(name = "entity_statuses", description = "Entity status", in = ParameterIn.QUERY) @Valid @RequestParam(value = "entity_statuses", required = false, defaultValue = "ACTIVE,PAUSED") List<String> entityStatuses,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Parameter(name = "translate_interests_to_names", description = "Return interests as text names (if value is true) rather than topic IDs.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "translate_interests_to_names", required = false, defaultValue = "false") Boolean translateInterestsToNames
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" }, { \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ad_groups/targeting_analytics : Get targeting analytics for ad groups
     * Get targeting analytics for one or more ad groups. For the requested ad group(s) and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \&quot;age_bucket\&quot;) for applicable values (e.g. \&quot;45-49\&quot;). &lt;p/&gt; - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param targetingTypes Targeting type breakdowns for the report. The reporting per targeting type &lt;br&gt; is independent from each other. [\&quot;AGE_BUCKET_AND_GENDER\&quot;] is in BETA and not yet available to all users. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @param attributionTypes List of types of attribution for the conversion report (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsTargetingAnalyticsGet",
        summary = "Get targeting analytics for ad groups",
        description = "Get targeting analytics for one or more ad groups. For the requested ad group(s) and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \"age_bucket\") for applicable values (e.g. \"45-49\"). <p/> - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MetricsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ad_groups/targeting_analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<MetricsResponse> adGroupsTargetingAnalyticsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Size(min = 1, max = 100) @Parameter(name = "ad_group_ids", description = "List of Ad group Ids to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_group_ids", required = true) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> adGroupIds,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 15) @Parameter(name = "targeting_types", description = "Targeting type breakdowns for the report. The reporting per targeting type <br> is independent from each other. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "targeting_types", required = true) List<AdsAnalyticsTargetingType> targetingTypes,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime,
        @Parameter(name = "attribution_types", description = "List of types of attribution for the conversion report", in = ParameterIn.QUERY) @Valid @RequestParam(value = "attribution_types", required = false) ConversionReportAttributionType attributionTypes
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : [ { \"targeting_type\" : \"KEYWORD\", \"targeting_value\" : \"christmas decor ideas\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"iphone\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"ipad\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_tablet\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GENDER\", \"targeting_value\" : \"female\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"LOCATION\", \"targeting_value\" : 500, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PLACEMENT\", \"targeting_value\" : \"SEARCH\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"COUNTRY\", \"targeting_value\" : \"US\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"TARGETED_INTEREST\", \"targeting_value\" : \"Food and Drinks\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PINNER_INTEREST\", \"targeting_value\" : \"Chocolate Cookies\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AUDIENCE_INCLUDE\", \"targeting_value\" : 254261234567, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GEO\", \"targeting_value\" : \"US:94102\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AGE_BUCKET\", \"targeting_value\" : \"45-49\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"REGION\", \"targeting_value\" : \"US-CA\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/ad_groups : Update ad groups
     * Update multiple existing ad groups.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adGroupUpdateRequest List of ad groups to update, size limit [1, 30]. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adGroupsUpdate",
        summary = "Update ad groups",
        description = "Update multiple existing ad groups.",
        tags = { "ad_groups" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdGroupArrayResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/ad_groups",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdGroupArrayResponse> adGroupsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdGroupUpdateRequest", description = "List of ad groups to update, size limit [1, 30].", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid AdGroupUpdateRequest> adGroupUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"updated_time\" : 1476477189, \"targeting_template_ids\" : [ \"643\" ], \"type\" : \"adgroup\", \"tracking_urls\" : \"{}\", \"budget_in_micro_currency\" : 5000000, \"bid_strategy_type\" : \"MAX_BID\", \"ad_account_id\" : \"549755885175\", \"conversion_learning_mode_type\" : \"ACTIVE\", \"dca_assets\" : \"\", \"feed_profile_id\" : \"626736533506\", \"lifetime_frequency_cap\" : 100, \"id\" : \"2680060704746\", \"optimization_goal_metadata\" : \"{}\", \"placement_group\" : \"placement_group\", \"budget_type\" : \"budget_type\", \"campaign_id\" : \"626736533506\", \"pacing_delivery_type\" : \"pacing_delivery_type\", \"created_time\" : 1476477189, \"bid_in_micro_currency\" : 5000000, \"end_time\" : 5705424000, \"summary_status\" : \"summary_status\", \"auto_targeting_enabled\" : true, \"start_time\" : 5686848000, \"billable_event\" : \"CLICKTHROUGH\", \"targeting_spec\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"name\" : \"Ad Group For Pin: 687195905986\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/ad_previews : Create ad preview with pin or image
     * Create an ad preview given an ad account ID and either an existing organic pin ID or the URL for an image to be used to create the Pin and the ad. &lt;p/&gt; If you are creating a preview from an existing Pin, that Pin must be promotable: that is, it must have a clickthrough link and meet other requirements. (See &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/promoted-pins-overview\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Ads Overview&lt;/a&gt;.) &lt;p/&gt; You can view the returned preview URL on a webpage or iframe for 7 days, after which the URL expires. Collection ads are not currently supported ad preview.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adPreviewRequest Create ad preview with pin or image. (required)
     * @return Successful ad preview creation. (status code 200)
     *         or Invalid Pin parameters response (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adPreviewsCreate",
        summary = "Create ad preview with pin or image",
        description = "Create an ad preview given an ad account ID and either an existing organic pin ID or the URL for an image to be used to create the Pin and the ad. <p/> If you are creating a preview from an existing Pin, that Pin must be promotable: that is, it must have a clickthrough link and meet other requirements. (See <a href=\"https://help.pinterest.com/en/business/article/promoted-pins-overview\" target=\"_blank\">Ads Overview</a>.) <p/> You can view the returned preview URL on a webpage or iframe for 7 days, after which the URL expires. Collection ads are not currently supported ad preview.",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successful ad preview creation.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdPreviewURLResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid Pin parameters response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/ad_previews",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdPreviewURLResponse> adPreviewsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdPreviewRequest", description = "Create ad preview with pin or image.", required = true) @Valid @RequestBody AdPreviewRequest adPreviewRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"url\" : \"https://ads.pinterest.com/ad-preview/58f1a0e9ab0bd0f99462a0e4c5dd7e8297888c8a36331e88f757abe8f0295d31/\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ads/targeting_analytics : Get targeting analytics for ads
     * Get targeting analytics for one or more ads. For the requested ad(s) and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \&quot;age_bucket\&quot;) for applicable values (e.g. \&quot;45-49\&quot;). &lt;p/&gt; - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adIds List of Ad Ids to use to filter the results. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param targetingTypes Targeting type breakdowns for the report. The reporting per targeting type &lt;br&gt; is independent from each other. [\&quot;AGE_BUCKET_AND_GENDER\&quot;] is in BETA and not yet available to all users. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @param attributionTypes List of types of attribution for the conversion report (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adTargetingAnalyticsGet",
        summary = "Get targeting analytics for ads",
        description = "Get targeting analytics for one or more ads. For the requested ad(s) and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \"age_bucket\") for applicable values (e.g. \"45-49\"). <p/> - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MetricsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ads/targeting_analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<MetricsResponse> adTargetingAnalyticsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Size(min = 1, max = 100) @Parameter(name = "ad_ids", description = "List of Ad Ids to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_ids", required = true) List<@Pattern(regexp = "^\\d+$")String> adIds,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 14) @Parameter(name = "targeting_types", description = "Targeting type breakdowns for the report. The reporting per targeting type <br> is independent from each other. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "targeting_types", required = true) List<AdsAnalyticsAdTargetingType> targetingTypes,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime,
        @Parameter(name = "attribution_types", description = "List of types of attribution for the conversion report", in = ParameterIn.QUERY) @Valid @RequestParam(value = "attribution_types", required = false) ConversionReportAttributionType attributionTypes
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : [ { \"targeting_type\" : \"KEYWORD\", \"targeting_value\" : \"christmas decor ideas\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"iphone\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"ipad\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_tablet\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GENDER\", \"targeting_value\" : \"female\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"LOCATION\", \"targeting_value\" : 500, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PLACEMENT\", \"targeting_value\" : \"SEARCH\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"COUNTRY\", \"targeting_value\" : \"US\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"TARGETED_INTEREST\", \"targeting_value\" : \"Food and Drinks\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PINNER_INTEREST\", \"targeting_value\" : \"Chocolate Cookies\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AUDIENCE_INCLUDE\", \"targeting_value\" : 254261234567, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GEO\", \"targeting_value\" : \"US:94102\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AGE_BUCKET\", \"targeting_value\" : \"45-49\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"REGION\", \"targeting_value\" : \"US-CA\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ads/analytics : Get ad analytics
     * Get analytics for the specified ads in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - The request must contain either ad_ids or both campaign_ids and pin_ids. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param adIds List of Ad Ids to use to filter the results. (optional)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @param pinIds List of Pin IDs. (optional)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adsAnalytics",
        summary = "Get ad analytics",
        description = "Get analytics for the specified ads in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - The request must contain either ad_ids or both campaign_ids and pin_ids. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = AdsAnalyticsResponseInner.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ads/analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<AdsAnalyticsResponseInner>> adsAnalytics(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Size(min = 1, max = 100) @Parameter(name = "ad_ids", description = "List of Ad Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_ids", required = false) List<@Pattern(regexp = "^\\d+$")String> adIds,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime,
        @Size(min = 1, max = 100) @Parameter(name = "pin_ids", description = "List of Pin IDs.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "pin_ids", required = false) List<@Pattern(regexp = "^\\d+$")String> pinIds,
        @Size(min = 1, max = 100) @Parameter(name = "campaign_ids", description = "List of Campaign Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_ids", required = false) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> campaignIds
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"DATE\" : \"2021-04-01\", \"AD_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 }, { \"DATE\" : \"2021-04-01\", \"AD_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/ads : Create ads
     * Create multiple new ads. Request must contain ad_group_id, creative_type, and the source Pin pin_id.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adCreateRequest List of ads to create, size limit [1, 30]. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adsCreate",
        summary = "Create ads",
        description = "Create multiple new ads. Request must contain ad_group_id, creative_type, and the source Pin pin_id.",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdArrayResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/ads",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdArrayResponse> adsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdCreateRequest", description = "List of ads to create, size limit [1, 30].", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid AdCreateRequest> adCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" }, \"exceptions\" : { \"code\" : 2, \"message\" : \"Advertiser not found.\" } }, { \"data\" : { \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" }, \"exceptions\" : { \"code\" : 2, \"message\" : \"Advertiser not found.\" } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/ads_credit/redeem : Redeem ad credits
     * Redeem ads credit on behalf of the ad account id and apply it towards billing.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adsCreditRedeemRequest Redeem ad credits request. (required)
     * @return Successfully redeemed ad credits. (status code 200)
     *         or Error thrown when unable to redeem offer code. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adsCreditRedeem",
        summary = "Redeem ad credits",
        description = "Redeem ads credit on behalf of the ad account id and apply it towards billing.  <strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully redeemed ad credits.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdsCreditRedeemResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Error thrown when unable to redeem offer code.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write", "billing:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/ads_credit/redeem",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdsCreditRedeemResponse> adsCreditRedeem(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdsCreditRedeemRequest", description = "Redeem ad credits request.", required = true) @Valid @RequestBody AdsCreditRedeemRequest adsCreditRedeemRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : false, \"errorMessage\" : \"The offer has already been redeemed by this advertiser\", \"errorCode\" : 2708 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ads_credit/discounts : Get ads credit discounts
     * Returns the list of discounts applied to the account.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return Success (status code 200)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "adsCreditsDiscountsGet",
        summary = "Get ads credit discounts",
        description = "Returns the list of discounts applied to the account.  <strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdsCreditsDiscountsGet200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read", "billing:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ads_credit/discounts",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdsCreditsDiscountsGet200Response> adsCreditsDiscountsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"active\" : true, \"discountType\" : \"COUPON\", \"discountCurrency\" : \"USD\", \"discountInMicroCurrency\" : 125000000, \"title\" : \"Ads Credits\", \"remainingDiscountInMicroCurrency\" : 125000000, \"advertiser_id\" : \"12312451231\" }, { \"active\" : true, \"discountType\" : \"COUPON\", \"discountCurrency\" : \"USD\", \"discountInMicroCurrency\" : 125000000, \"title\" : \"Ads Credits\", \"remainingDiscountInMicroCurrency\" : 125000000, \"advertiser_id\" : \"12312451231\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ads/{ad_id} : Get ad
     * Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will contain additional information from the Ad Review process. For more information about our policies and rejection reasons see the &lt;a href&#x3D;\&quot;https://www.pinterest.com/_/_/policy/advertising-guidelines/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest advertising standards&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adId Unique identifier of an ad. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adsGet",
        summary = "Get ad",
        description = "Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will contain additional information from the Ad Review process. For more information about our policies and rejection reasons see the <a href=\"https://www.pinterest.com/_/_/policy/advertising-guidelines/\" target=\"_blank\">Pinterest advertising standards</a>.",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ads/{ad_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdResponse> adsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_id", description = "Unique identifier of an ad.", required = true, in = ParameterIn.PATH) @PathVariable("ad_id") String adId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ads : List ads
     * List ads that meet the filters provided:   - Listed campaign ids or ad group ids or ad ids   - Listed entity statuses &lt;p/&gt; If no filter is provided, all ads in the ad account are returned. &lt;p/&gt; &lt;strong&gt;Note:&lt;/strong&gt;&lt;p/&gt; Provide only campaign_id or ad_group_id or ad_id. Do not provide more than one type. &lt;p/&gt; Review status is provided for each ad; if review_status is REJECTED, the rejected_reasons field will contain additional information. For more, see &lt;a href&#x3D;\&quot;https://policy.pinterest.com/en/advertising-guidelines\&quot;&gt;Pinterest advertising standards&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @param adGroupIds List of Ad group Ids to use to filter the results. (optional)
     * @param adIds List of Ad Ids to use to filter the results. (optional)
     * @param entityStatuses Entity status (optional, default to ACTIVE,PAUSED)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Invalid ad account ads parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adsList",
        summary = "List ads",
        description = "List ads that meet the filters provided:   - Listed campaign ids or ad group ids or ad ids   - Listed entity statuses <p/> If no filter is provided, all ads in the ad account are returned. <p/> <strong>Note:</strong><p/> Provide only campaign_id or ad_group_id or ad_id. Do not provide more than one type. <p/> Review status is provided for each ad; if review_status is REJECTED, the rejected_reasons field will contain additional information. For more, see <a href=\"https://policy.pinterest.com/en/advertising-guidelines\">Pinterest advertising standards</a>.",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdsList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ads",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdsList200Response> adsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Size(min = 1, max = 100) @Parameter(name = "campaign_ids", description = "List of Campaign Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_ids", required = false) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> campaignIds,
        @Size(min = 1, max = 100) @Parameter(name = "ad_group_ids", description = "List of Ad group Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_group_ids", required = false) List<@Pattern(regexp = "^\\d+$")String> adGroupIds,
        @Size(min = 1, max = 100) @Parameter(name = "ad_ids", description = "List of Ad Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_ids", required = false) List<@Pattern(regexp = "^\\d+$")String> adIds,
        @Parameter(name = "entity_statuses", description = "Entity status", in = ParameterIn.QUERY) @Valid @RequestParam(value = "entity_statuses", required = false, defaultValue = "ACTIVE,PAUSED") List<String> entityStatuses,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" }, { \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/ads : Update ads
     * Update multiple existing ads
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adUpdateRequest List of ads to update, size limit [1, 30] (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "adsUpdate",
        summary = "Update ads",
        description = "Update multiple existing ads",
        tags = { "ads" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdArrayResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/ads",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdArrayResponse> adsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdUpdateRequest", description = "List of ads to update, size limit [1, 30]", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid AdUpdateRequest> adUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" }, \"exceptions\" : { \"code\" : 2, \"message\" : \"Advertiser not found.\" } }, { \"data\" : { \"is_removable\" : false, \"updated_time\" : 1451431341, \"collection_items_destination_url_template\" : \"collection_items_destination_url_template\", \"destination_url\" : \"destination_url\", \"type\" : \"pinpromotion\", \"tracking_urls\" : \"{}\", \"ios_deep_link\" : \"ios_deep_link\", \"ad_account_id\" : \"549755885175\", \"is_pin_deleted\" : false, \"creative_type\" : \"REGULAR\", \"grid_click_type\" : \"CLOSEUP\", \"rejection_labels\" : [ \"rejection_labels\", \"rejection_labels\" ], \"id\" : \"687195134316\", \"review_status\" : \"PENDING\", \"ad_group_id\" : \"2680059592705\", \"pin_id\" : \"394205773611545468\", \"campaign_id\" : \"626735565838\", \"created_time\" : 1451431341, \"view_tracking_url\" : \"view_tracking_url\", \"android_deep_link\" : \"android_deep_link\", \"summary_status\" : \"summary_status\", \"carousel_android_deep_links\" : [ \"carousel_android_deep_links\", \"carousel_android_deep_links\" ], \"carousel_destination_urls\" : [ \"carousel_destination_urls\", \"carousel_destination_urls\" ], \"carousel_ios_deep_links\" : [ \"carousel_ios_deep_links\", \"carousel_ios_deep_links\" ], \"click_tracking_url\" : \"click_tracking_url\", \"quiz_pin_data\" : \"{}\", \"name\" : \"name\", \"lead_form_id\" : \"lead_form_id\", \"customizable_cta_type\" : \"LEARN_MORE\", \"rejected_reasons\" : [ \"HASHTAGS\", \"HASHTAGS\" ], \"status\" : \"ACTIVE\" }, \"exceptions\" : { \"code\" : 2, \"message\" : \"Advertiser not found.\" } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/mmm_reports : Create a request for a Marketing Mix Modeling (MMM) report
     * This creates an asynchronous mmm report based on the given request. It returns a token that you can use to download the report when it is ready. NOTE: An additional limit of 5 queries per minute per advertiser applies to this endpoint while it&#39;s in beta release.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param createMMMReportRequest  (required)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics mmm parameters (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "analyticsCreateMmmReport",
        summary = "Create a request for a Marketing Mix Modeling (MMM) report",
        description = "This creates an asynchronous mmm report based on the given request. It returns a token that you can use to download the report when it is ready. NOTE: An additional limit of 5 queries per minute per advertiser applies to this endpoint while it's in beta release.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreateMMMReportResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics mmm parameters", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/mmm_reports",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreateMMMReportResponse> analyticsCreateMmmReport(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "CreateMMMReportRequest", description = "", required = true) @Valid @RequestBody CreateMMMReportRequest createMMMReportRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : { \"report_status\" : \"report_status\", \"message\" : \"message\", \"token\" : \"token\", \"status\" : \"success\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/reports : Create async request for an account analytics report
     * This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 914 days before the current date in UTC time and the max time range supported is 186 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days. - If level is PRODUCT_ITEM, the furthest back you can are allowed to pull data is 92 days before the current date in UTC time and the max time range supported is 31 days. - If level is PRODUCT_ITEM, ad_ids and ad_statuses parameters are not allowed. Any columns related to pin promotion and ad is not allowed either.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param adsAnalyticsCreateAsyncRequest  (required)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "analyticsCreateReport",
        summary = "Create async request for an account analytics report",
        description = "This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 914 days before the current date in UTC time and the max time range supported is 186 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days. - If level is PRODUCT_ITEM, the furthest back you can are allowed to pull data is 92 days before the current date in UTC time and the max time range supported is 31 days. - If level is PRODUCT_ITEM, ad_ids and ad_statuses parameters are not allowed. Any columns related to pin promotion and ad is not allowed either.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdsAnalyticsCreateAsyncResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/reports",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AdsAnalyticsCreateAsyncResponse> analyticsCreateReport(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AdsAnalyticsCreateAsyncRequest", description = "", required = true) @Valid @RequestBody AdsAnalyticsCreateAsyncRequest adsAnalyticsCreateAsyncRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"report_status\" : \"report_status\", \"message\" : \"message\", \"token\" : \"token\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/templates/{template_id}/reports : Create async request for an analytics report using a template
     * This takes a template ID and an optional custom timeframe and constructs an asynchronous report based on the template. It returns a token that you can use to download the report when it is ready.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param templateId Unique identifier of a template. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 2.5 years back from today. (optional)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 2.5 years past start date. (optional)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (optional)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics template parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "analyticsCreateTemplateReport",
        summary = "Create async request for an analytics report using a template",
        description = "This takes a template ID and an optional custom timeframe and constructs an asynchronous report based on the template. It returns a token that you can use to download the report when it is ready.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdsAnalyticsCreateAsyncResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics template parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/templates/{template_id}/reports",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdsAnalyticsCreateAsyncResponse> analyticsCreateTemplateReport(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "template_id", description = "Unique identifier of a template.", required = true, in = ParameterIn.PATH) @PathVariable("template_id") String templateId,
        @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 2.5 years back from today.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 2.5 years past start date.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = false) Granularity granularity
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"report_status\" : \"report_status\", \"message\" : \"message\", \"token\" : \"token\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/mmm_reports : Get advertiser Marketing Mix Modeling (MMM) report.
     * Get an mmm report for an ad account. This returns a URL to an mmm metrics report given a token returned from the create mmm report endpoint.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param token Token returned from the post request creation call (required)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "analyticsGetMmmReport",
        summary = "Get advertiser Marketing Mix Modeling (MMM) report.",
        description = "Get an mmm report for an ad account. This returns a URL to an mmm metrics report given a token returned from the create mmm report endpoint.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GetMMMReportResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/mmm_reports",
        produces = { "application/json" }
    )
    
    default ResponseEntity<GetMMMReportResponse> analyticsGetMmmReport(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "token", description = "Token returned from the post request creation call", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "token", required = true) String token
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : { \"size\" : 0.8008281904610115, \"report_status\" : \"DOES_NOT_EXIST\", \"url\" : \"url\" }, \"message\" : \"ok\", \"status\" : \"success\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/reports : Get the account analytics report created by the async call
     * This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report. The link is valid for five minutes and the report is valid for one hour. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param token Token returned from the post request creation call (required)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "analyticsGetReport",
        summary = "Get the account analytics report created by the async call",
        description = "This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report. The link is valid for five minutes and the report is valid for one hour. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdsAnalyticsGetAsyncResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/reports",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdsAnalyticsGetAsyncResponse> analyticsGetReport(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "token", description = "Token returned from the post request creation call", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "token", required = true) String token
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 0.8008281904610115, \"report_status\" : \"report_status\", \"url\" : \"url\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/audience_insights : Get audience insights
     * Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account&#39;s engaged audience on Pinterest, the ad account&#39;s total audience on Pinterest and Pinterest&#39;s total audience.&lt;p/&gt; &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-insights\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Learn more about Audience Insights&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceInsightType Type of audience insights. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "audienceInsightsGet",
        summary = "Get audience insights",
        description = "Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account's engaged audience on Pinterest, the ad account's total audience on Pinterest and Pinterest's total audience.<p/> <a href=\"https://help.pinterest.com/en/business/article/audience-insights\" target=\"_blank\">Learn more about Audience Insights</a>.",
        tags = { "audience_insights" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AudienceInsightsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/audience_insights",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AudienceInsightsResponse> audienceInsightsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "audience_insight_type", description = "Type of audience insights.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "audience_insight_type", required = true, defaultValue = "YOUR_TOTAL_AUDIENCE") AudienceInsightType audienceInsightType
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2022-10-09\", \"size\" : 10000, \"categories\" : [ { \"name\" : \"travel\", \"index\" : 1.2, \"id\" : \"1234567\", \"subcategories\" : [ { \"name\" : \"travel destinations\", \"index\" : 1.2, \"id\" : \"958862518888\", \"key\" : \"958862518888\", \"ratio\" : 0.482 }, { \"name\" : \"travel destinations\", \"index\" : 1.2, \"id\" : \"958862518888\", \"key\" : \"958862518888\", \"ratio\" : 0.482 } ], \"key\" : \"1234567\", \"ratio\" : 0.551 }, { \"name\" : \"travel\", \"index\" : 1.2, \"id\" : \"1234567\", \"subcategories\" : [ { \"name\" : \"travel destinations\", \"index\" : 1.2, \"id\" : \"958862518888\", \"key\" : \"958862518888\", \"ratio\" : 0.482 }, { \"name\" : \"travel destinations\", \"index\" : 1.2, \"id\" : \"958862518888\", \"key\" : \"958862518888\", \"ratio\" : 0.482 } ], \"key\" : \"1234567\", \"ratio\" : 0.551 } ], \"type\" : \"YOUR_TOTAL_AUDIENCE\", \"size_is_upper_bound\" : true, \"demographics\" : { \"devices\" : [ { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 }, { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 } ], \"ages\" : [ { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 }, { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 } ], \"genders\" : [ { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 }, { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 } ], \"countries\" : [ { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 }, { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 } ], \"metros\" : [ { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 }, { \"name\" : \"United States\", \"key\" : \"us\", \"ratio\" : 0.551 } ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/insights/audiences : Get audience insights scope and type
     * Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "audienceInsightsScopeAndTypeGet",
        summary = "Get audience insights scope and type",
        description = "Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.",
        tags = { "audience_insights" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AudienceDefinitionResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/insights/audiences",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AudienceDefinitionResponse> audienceInsightsScopeAndTypeGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"date\" : \"2022-10-09\", \"scope\" : \"PARTNER\", \"type\" : \"IMPRESSION_PLUS_ENGAGEMENT\" }, { \"date\" : \"2022-10-09\", \"scope\" : \"PARTNER\", \"type\" : \"IMPRESSION_PLUS_ENGAGEMENT\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/audiences : Create audience
     * Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with the ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude specific audience_ids when you create an ad group. &lt;p/&gt; For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceCreateRequest List of ads to create, size limit [1, 30] (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "audiencesCreate",
        summary = "Create audience",
        description = "Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with the ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude specific audience_ids when you create an ad group. <p/> For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a>.",
        tags = { "audiences" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Audience.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/audiences",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Audience> audiencesCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AudienceCreateRequest", description = "List of ads to create, size limit [1, 30]", required = true) @Valid @RequestBody AudienceCreateRequest audienceCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 1000, \"audience_type\" : \"audience_type\", \"updated_timestamp\" : 1451431341, \"name\" : \"ACME Tools\", \"description\" : \"People who love making quilts.\", \"rule\" : { \"country\" : \"US\", \"visitor_source_id\" : \"549755885175\", \"prefill\" : true, \"customer_list_id\" : \"5497558859876\", \"event_source\" : { \"=\" : [ \"web\", \"mobile\" ] }, \"objective_type\" : [ \"AWARENESS\" ], \"event_data\" : { \"video_title\" : \"How to style your Parker Boots\", \"page_name\" : \"Our Favorite Pins on Pinterest.\", \"order_quantity\" : 1, \"property\" : \"Athleta\", \"currency\" : \"USD\", \"lead_type\" : \"Newsletter\", \"promo_code\" : \"WINTER10\", \"line_items\" : { \"product_id\" : 1414, \"product_variant\" : \"Red\", \"product_brand\" : \"Parker\", \"product_price\" : \"99.99\", \"product_variant_id\" : \"1414-34832\", \"product_name\" : \"Parker Boots\", \"product_category\" : \"Shoes\", \"product_quantity\" : 2 }, \"search_query\" : \"boots\", \"order_id\" : \"X-151481\", \"value\" : \"199.98\" }, \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ], \"url\" : [ \"url\", \"url\" ], \"ad_account_id\" : \"549755885175\", \"ingestion_source\" : { \"=\" : [ \"tag\" ] }, \"ad_id\" : [ \"687201361754\" ], \"retention_days\" : 30, \"engager_type\" : 1, \"engagement_type\" : \"click\", \"percentage\" : 3, \"engagement_domain\" : [ \"www.somedomain.com\" ], \"event\" : \"checkout\", \"pin_id\" : [ \"34567\" ], \"campaign_id\" : [ \"626744528398\" ] }, \"created_timestamp\" : 1451431341, \"id\" : \"1234\", \"type\" : \"audience\", \"ad_account_id\" : \"549755885175\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/audiences/custom : Create custom audience
     * Create a custom audience and find the audiences you want your ads to reach.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceCreateCustomRequest Custom audience to create. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "audiencesCreateCustom",
        summary = "Create custom audience",
        description = "Create a custom audience and find the audiences you want your ads to reach.",
        tags = { "audiences" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Audience.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/audiences/custom",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Audience> audiencesCreateCustom(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "AudienceCreateCustomRequest", description = "Custom audience to create.", required = true) @Valid @RequestBody AudienceCreateCustomRequest audienceCreateCustomRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 1000, \"audience_type\" : \"audience_type\", \"updated_timestamp\" : 1451431341, \"name\" : \"ACME Tools\", \"description\" : \"People who love making quilts.\", \"rule\" : { \"country\" : \"US\", \"visitor_source_id\" : \"549755885175\", \"prefill\" : true, \"customer_list_id\" : \"5497558859876\", \"event_source\" : { \"=\" : [ \"web\", \"mobile\" ] }, \"objective_type\" : [ \"AWARENESS\" ], \"event_data\" : { \"video_title\" : \"How to style your Parker Boots\", \"page_name\" : \"Our Favorite Pins on Pinterest.\", \"order_quantity\" : 1, \"property\" : \"Athleta\", \"currency\" : \"USD\", \"lead_type\" : \"Newsletter\", \"promo_code\" : \"WINTER10\", \"line_items\" : { \"product_id\" : 1414, \"product_variant\" : \"Red\", \"product_brand\" : \"Parker\", \"product_price\" : \"99.99\", \"product_variant_id\" : \"1414-34832\", \"product_name\" : \"Parker Boots\", \"product_category\" : \"Shoes\", \"product_quantity\" : 2 }, \"search_query\" : \"boots\", \"order_id\" : \"X-151481\", \"value\" : \"199.98\" }, \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ], \"url\" : [ \"url\", \"url\" ], \"ad_account_id\" : \"549755885175\", \"ingestion_source\" : { \"=\" : [ \"tag\" ] }, \"ad_id\" : [ \"687201361754\" ], \"retention_days\" : 30, \"engager_type\" : 1, \"engagement_type\" : \"click\", \"percentage\" : 3, \"engagement_domain\" : [ \"www.somedomain.com\" ], \"event\" : \"checkout\", \"pin_id\" : [ \"34567\" ], \"campaign_id\" : [ \"626744528398\" ] }, \"created_timestamp\" : 1451431341, \"id\" : \"1234\", \"type\" : \"audience\", \"ad_account_id\" : \"549755885175\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/audiences/{audience_id} : Get audience
     * Get a specific audience given the audience ID.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceId Unique identifier of an audience (required)
     * @return Success (status code 200)
     *         or Audience not found. (status code 404)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "audiencesGet",
        summary = "Get audience",
        description = "Get a specific audience given the audience ID.",
        tags = { "audiences" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Audience.class))
            }),
            @ApiResponse(responseCode = "404", description = "Audience not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/audiences/{audience_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Audience> audiencesGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "audience_id", description = "Unique identifier of an audience", required = true, in = ParameterIn.PATH) @PathVariable("audience_id") String audienceId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 1000, \"audience_type\" : \"audience_type\", \"updated_timestamp\" : 1451431341, \"name\" : \"ACME Tools\", \"description\" : \"People who love making quilts.\", \"rule\" : { \"country\" : \"US\", \"visitor_source_id\" : \"549755885175\", \"prefill\" : true, \"customer_list_id\" : \"5497558859876\", \"event_source\" : { \"=\" : [ \"web\", \"mobile\" ] }, \"objective_type\" : [ \"AWARENESS\" ], \"event_data\" : { \"video_title\" : \"How to style your Parker Boots\", \"page_name\" : \"Our Favorite Pins on Pinterest.\", \"order_quantity\" : 1, \"property\" : \"Athleta\", \"currency\" : \"USD\", \"lead_type\" : \"Newsletter\", \"promo_code\" : \"WINTER10\", \"line_items\" : { \"product_id\" : 1414, \"product_variant\" : \"Red\", \"product_brand\" : \"Parker\", \"product_price\" : \"99.99\", \"product_variant_id\" : \"1414-34832\", \"product_name\" : \"Parker Boots\", \"product_category\" : \"Shoes\", \"product_quantity\" : 2 }, \"search_query\" : \"boots\", \"order_id\" : \"X-151481\", \"value\" : \"199.98\" }, \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ], \"url\" : [ \"url\", \"url\" ], \"ad_account_id\" : \"549755885175\", \"ingestion_source\" : { \"=\" : [ \"tag\" ] }, \"ad_id\" : [ \"687201361754\" ], \"retention_days\" : 30, \"engager_type\" : 1, \"engagement_type\" : \"click\", \"percentage\" : 3, \"engagement_domain\" : [ \"www.somedomain.com\" ], \"event\" : \"checkout\", \"pin_id\" : [ \"34567\" ], \"campaign_id\" : [ \"626744528398\" ] }, \"created_timestamp\" : 1451431341, \"id\" : \"1234\", \"type\" : \"audience\", \"ad_account_id\" : \"549755885175\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/audiences : List audiences
     * Get list of audiences for the ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. For received audiences, it is sorted by sharing event time. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param ownershipType Filter audiences by ownership type. (optional, default to OWNED)
     * @return Success (status code 200)
     *         or Invalid ad account audience parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "audiencesList",
        summary = "List audiences",
        description = "Get list of audiences for the ad account.",
        tags = { "audiences" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AudiencesList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account audience parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/audiences",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AudiencesList200Response> audiencesList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. For received audiences, it is sorted by sharing event time. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "ownership_type", description = "Filter audiences by ownership type.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ownership_type", required = false, defaultValue = "OWNED") String ownershipType
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"size\" : 1000, \"audience_type\" : \"audience_type\", \"updated_timestamp\" : 1451431341, \"name\" : \"ACME Tools\", \"description\" : \"People who love making quilts.\", \"rule\" : { \"country\" : \"US\", \"visitor_source_id\" : \"549755885175\", \"prefill\" : true, \"customer_list_id\" : \"5497558859876\", \"event_source\" : { \"=\" : [ \"web\", \"mobile\" ] }, \"objective_type\" : [ \"AWARENESS\" ], \"event_data\" : { \"video_title\" : \"How to style your Parker Boots\", \"page_name\" : \"Our Favorite Pins on Pinterest.\", \"order_quantity\" : 1, \"property\" : \"Athleta\", \"currency\" : \"USD\", \"lead_type\" : \"Newsletter\", \"promo_code\" : \"WINTER10\", \"line_items\" : { \"product_id\" : 1414, \"product_variant\" : \"Red\", \"product_brand\" : \"Parker\", \"product_price\" : \"99.99\", \"product_variant_id\" : \"1414-34832\", \"product_name\" : \"Parker Boots\", \"product_category\" : \"Shoes\", \"product_quantity\" : 2 }, \"search_query\" : \"boots\", \"order_id\" : \"X-151481\", \"value\" : \"199.98\" }, \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ], \"url\" : [ \"url\", \"url\" ], \"ad_account_id\" : \"549755885175\", \"ingestion_source\" : { \"=\" : [ \"tag\" ] }, \"ad_id\" : [ \"687201361754\" ], \"retention_days\" : 30, \"engager_type\" : 1, \"engagement_type\" : \"click\", \"percentage\" : 3, \"engagement_domain\" : [ \"www.somedomain.com\" ], \"event\" : \"checkout\", \"pin_id\" : [ \"34567\" ], \"campaign_id\" : [ \"626744528398\" ] }, \"created_timestamp\" : 1451431341, \"id\" : \"1234\", \"type\" : \"audience\", \"ad_account_id\" : \"549755885175\", \"status\" : \"status\" }, { \"size\" : 1000, \"audience_type\" : \"audience_type\", \"updated_timestamp\" : 1451431341, \"name\" : \"ACME Tools\", \"description\" : \"People who love making quilts.\", \"rule\" : { \"country\" : \"US\", \"visitor_source_id\" : \"549755885175\", \"prefill\" : true, \"customer_list_id\" : \"5497558859876\", \"event_source\" : { \"=\" : [ \"web\", \"mobile\" ] }, \"objective_type\" : [ \"AWARENESS\" ], \"event_data\" : { \"video_title\" : \"How to style your Parker Boots\", \"page_name\" : \"Our Favorite Pins on Pinterest.\", \"order_quantity\" : 1, \"property\" : \"Athleta\", \"currency\" : \"USD\", \"lead_type\" : \"Newsletter\", \"promo_code\" : \"WINTER10\", \"line_items\" : { \"product_id\" : 1414, \"product_variant\" : \"Red\", \"product_brand\" : \"Parker\", \"product_price\" : \"99.99\", \"product_variant_id\" : \"1414-34832\", \"product_name\" : \"Parker Boots\", \"product_category\" : \"Shoes\", \"product_quantity\" : 2 }, \"search_query\" : \"boots\", \"order_id\" : \"X-151481\", \"value\" : \"199.98\" }, \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ], \"url\" : [ \"url\", \"url\" ], \"ad_account_id\" : \"549755885175\", \"ingestion_source\" : { \"=\" : [ \"tag\" ] }, \"ad_id\" : [ \"687201361754\" ], \"retention_days\" : 30, \"engager_type\" : 1, \"engagement_type\" : \"click\", \"percentage\" : 3, \"engagement_domain\" : [ \"www.somedomain.com\" ], \"event\" : \"checkout\", \"pin_id\" : [ \"34567\" ], \"campaign_id\" : [ \"626744528398\" ] }, \"created_timestamp\" : 1451431341, \"id\" : \"1234\", \"type\" : \"audience\", \"ad_account_id\" : \"549755885175\", \"status\" : \"status\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/audiences/{audience_id} : Update audience
     * Update (edit or remove) an existing targeting audience.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param audienceId Unique identifier of an audience (required)
     * @param audienceUpdateRequest The audience to be updated. (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "audiencesUpdate",
        summary = "Update audience",
        description = "Update (edit or remove) an existing targeting audience.",
        tags = { "audiences" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Audience.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/audiences/{audience_id}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Audience> audiencesUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "audience_id", description = "Unique identifier of an audience", required = true, in = ParameterIn.PATH) @PathVariable("audience_id") String audienceId,
        @Parameter(name = "AudienceUpdateRequest", description = "The audience to be updated.") @Valid @RequestBody(required = false) AudienceUpdateRequest audienceUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"size\" : 1000, \"audience_type\" : \"audience_type\", \"updated_timestamp\" : 1451431341, \"name\" : \"ACME Tools\", \"description\" : \"People who love making quilts.\", \"rule\" : { \"country\" : \"US\", \"visitor_source_id\" : \"549755885175\", \"prefill\" : true, \"customer_list_id\" : \"5497558859876\", \"event_source\" : { \"=\" : [ \"web\", \"mobile\" ] }, \"objective_type\" : [ \"AWARENESS\" ], \"event_data\" : { \"video_title\" : \"How to style your Parker Boots\", \"page_name\" : \"Our Favorite Pins on Pinterest.\", \"order_quantity\" : 1, \"property\" : \"Athleta\", \"currency\" : \"USD\", \"lead_type\" : \"Newsletter\", \"promo_code\" : \"WINTER10\", \"line_items\" : { \"product_id\" : 1414, \"product_variant\" : \"Red\", \"product_brand\" : \"Parker\", \"product_price\" : \"99.99\", \"product_variant_id\" : \"1414-34832\", \"product_name\" : \"Parker Boots\", \"product_category\" : \"Shoes\", \"product_quantity\" : 2 }, \"search_query\" : \"boots\", \"order_id\" : \"X-151481\", \"value\" : \"199.98\" }, \"seed_id\" : [ \"2542620639259\", \"2542620639261\" ], \"url\" : [ \"url\", \"url\" ], \"ad_account_id\" : \"549755885175\", \"ingestion_source\" : { \"=\" : [ \"tag\" ] }, \"ad_id\" : [ \"687201361754\" ], \"retention_days\" : 30, \"engager_type\" : 1, \"engagement_type\" : \"click\", \"percentage\" : 3, \"engagement_domain\" : [ \"www.somedomain.com\" ], \"event\" : \"checkout\", \"pin_id\" : [ \"34567\" ], \"campaign_id\" : [ \"626744528398\" ] }, \"created_timestamp\" : 1451431341, \"id\" : \"1234\", \"type\" : \"audience\", \"ad_account_id\" : \"549755885175\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/billing_profiles : Get billing profiles
     * Get billing profiles in the advertiser account.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param isActive Return active billing profiles, if false return all billing profiles. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return Success (status code 200)
     *         or Unexpected error. (status code 200)
     */
    @Operation(
        operationId = "billingProfilesGet",
        summary = "Get billing profiles",
        description = "Get billing profiles in the advertiser account.  <strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BillingProfilesGet200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read", "billing:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/billing_profiles",
        produces = { "application/json" }
    )
    
    default ResponseEntity<BillingProfilesGet200Response> billingProfilesGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "is_active", description = "Return active billing profiles, if false return all billing profiles.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "is_active", required = true) Boolean isActive,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"payment_method_brand\" : \"VISA\", \"id\" : \"12312451231\", \"card_type\" : \"VISA\", \"status\" : \"INVALID\", \"advertiser_id\" : \"12312451231\" }, { \"payment_method_brand\" : \"VISA\", \"id\" : \"12312451231\", \"card_type\" : \"VISA\", \"status\" : \"INVALID\", \"advertiser_id\" : \"12312451231\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/bulk/download : Get advertiser entities in bulk
     * Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bulkDownloadRequest Parameters to get ad entities in bulk (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "bulkDownloadCreate",
        summary = "Get advertiser entities in bulk",
        description = "Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads, and/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused, only active entities will return data.",
        tags = { "bulk" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BulkDownloadResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/bulk/download",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<BulkDownloadResponse> bulkDownloadCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "BulkDownloadRequest", description = "Parameters to get ad entities in bulk", required = true) @Valid @RequestBody BulkDownloadRequest bulkDownloadRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"request_id\" : \"2680059592705\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/bulk/{bulk_request_id} : Download advertiser entities in bulk
     * Get the status of a bulk request by &lt;code&gt;request_id&lt;/code&gt;, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bulkRequestId Unique identifier of a bulk upsert request. (required)
     * @param includeDetails if set to True then attach the errors/details to all the requests (optional, default to false)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "bulkRequestGet",
        summary = "Download advertiser entities in bulk",
        description = "Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the new or updated entity data (campaigns, ad groups, product groups, ads, or keywords).",
        tags = { "bulk" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BulkUpsertStatusResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<BulkUpsertStatusResponse> bulkRequestGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "bulk_request_id", description = "Unique identifier of a bulk upsert request.", required = true, in = ParameterIn.PATH) @PathVariable("bulk_request_id") String bulkRequestId,
        @Parameter(name = "include_details", description = "if set to True then attach the errors/details to all the requests", in = ParameterIn.QUERY) @Valid @RequestParam(value = "include_details", required = false, defaultValue = "false") Boolean includeDetails
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"result_url\" : \"https://pinterest-waterloo.s3.us-east-1.amazonaws.com/bulk_framework/AD_ENTITY_UPSERT/549763856637-1659122537-0b4d77d3-f620-48ce-bec9-616106afb8d4/(...)\", \"status\" : \"SUCCEEDED\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/bulk/upsert : Create/update ad entities in bulk
     * Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a &lt;code&gt;request_id&lt;/code&gt; that can be used to obtain the status of the request.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bulkUpsertRequest Parameters to get create/update ad entities in bulk (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "bulkUpsertCreate",
        summary = "Create/update ad entities in bulk",
        description = "Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords. Note that this request will be processed asynchronously; the response will include a <code>request_id</code> that can be used to obtain the status of the request.",
        tags = { "bulk" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BulkUpsertResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/bulk/upsert",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<BulkUpsertResponse> bulkUpsertCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "BulkUpsertRequest", description = "Parameters to get create/update ad entities in bulk", required = true) @Valid @RequestBody BulkUpsertRequest bulkUpsertRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"request_id\" : \"549763856477-1660864560-1407e16a-c586-4add-94df-d0b160bec0ff, 549763856477-1660864560-d0b160bec0ff\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/campaigns/targeting_analytics : Get targeting analytics for campaigns
     * Get targeting analytics for one or more campaigns. For the requested account and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \&quot;age_bucket\&quot;) for applicable values (e.g. \&quot;45-49\&quot;). &lt;p/&gt; - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param targetingTypes Targeting type breakdowns for the report. The reporting per targeting type &lt;br&gt; is independent from each other. [\&quot;AGE_BUCKET_AND_GENDER\&quot;] is in BETA and not yet available to all users. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @param attributionTypes List of types of attribution for the conversion report (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "campaignTargetingAnalyticsGet",
        summary = "Get targeting analytics for campaigns",
        description = "Get targeting analytics for one or more campaigns. For the requested account and metrics, the response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. \"age_bucket\") for applicable values (e.g. \"45-49\"). <p/> - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "campaigns" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MetricsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/campaigns/targeting_analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<MetricsResponse> campaignTargetingAnalyticsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Size(min = 1, max = 100) @Parameter(name = "campaign_ids", description = "List of Campaign Ids to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_ids", required = true) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> campaignIds,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 14) @Parameter(name = "targeting_types", description = "Targeting type breakdowns for the report. The reporting per targeting type <br> is independent from each other. [\"AGE_BUCKET_AND_GENDER\"] is in BETA and not yet available to all users.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "targeting_types", required = true) List<AdsAnalyticsCampaignTargetingType> targetingTypes,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime,
        @Parameter(name = "attribution_types", description = "List of types of attribution for the conversion report", in = ParameterIn.QUERY) @Valid @RequestParam(value = "attribution_types", required = false) ConversionReportAttributionType attributionTypes
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : [ { \"targeting_type\" : \"KEYWORD\", \"targeting_value\" : \"christmas decor ideas\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"iphone\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"ipad\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"web_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_mobile\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"APPTYPE\", \"targeting_value\" : \"android_tablet\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GENDER\", \"targeting_value\" : \"female\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"LOCATION\", \"targeting_value\" : 500, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PLACEMENT\", \"targeting_value\" : \"SEARCH\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"COUNTRY\", \"targeting_value\" : \"US\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"TARGETED_INTEREST\", \"targeting_value\" : \"Food and Drinks\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"PINNER_INTEREST\", \"targeting_value\" : \"Chocolate Cookies\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AUDIENCE_INCLUDE\", \"targeting_value\" : 254261234567, \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"GEO\", \"targeting_value\" : \"US:94102\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"AGE_BUCKET\", \"targeting_value\" : \"45-49\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } }, { \"targeting_type\" : \"REGION\", \"targeting_value\" : \"US-CA\", \"metrics\" : { \"AD_GROUP_ID\" : 2680067996745, \"DATE\" : \"2022-04-26\", \"SPEND_IN_DOLLAR\" : 240 } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/campaigns/analytics : Get campaign analytics
     * Get analytics for the specified campaigns in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return Success (status code 200)
     *         or Invalid ad account campaign analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "campaignsAnalytics",
        summary = "Get campaign analytics",
        description = "Get analytics for the specified campaigns in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "campaigns" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CampaignsAnalyticsResponseInner.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account campaign analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/campaigns/analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<CampaignsAnalyticsResponseInner>> campaignsAnalytics(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 100) @Parameter(name = "campaign_ids", description = "List of Campaign Ids to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_ids", required = true) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> campaignIds,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"DATE\" : \"2021-04-01\", \"CAMPAIGN_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 }, { \"DATE\" : \"2021-04-01\", \"CAMPAIGN_ID\" : \"547602124502\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/campaigns : Create campaigns
     * Create multiple new campaigns. Every campaign has its own campaign_id and houses one or more ad groups, which contain one or more ads. For more, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-your-campaign/\&quot;&gt;Set up your campaign&lt;/a&gt;. &lt;p/&gt; &lt;strong&gt;Note:&lt;/strong&gt; - The values for &#39;lifetime_spend_cap&#39; and &#39;daily_spend_cap&#39; are microcurrency amounts based on the currency field set in the advertiser&#39;s profile. (e.g. USD) &lt;p/&gt; &lt;p&gt;Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.&lt;/p&gt; &lt;p&gt;A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Equivalency equations&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;$1 &#x3D; 1,000,000 microdollars&lt;/li&gt;   &lt;li&gt;1 microdollar &#x3D; $0.000001 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;To convert between currency and microcurrency&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;To convert dollars to microdollars, mutiply dollars by 1,000,000&lt;/li&gt;   &lt;li&gt;To convert microdollars to dollars, divide microdollars by 1,000,000&lt;/li&gt; &lt;/ul&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignCreateRequest Array of campaigns. (required)
     * @return response (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "campaignsCreate",
        summary = "Create campaigns",
        description = "Create multiple new campaigns. Every campaign has its own campaign_id and houses one or more ad groups, which contain one or more ads. For more, see <a href=\"https://help.pinterest.com/en/business/article/set-up-your-campaign/\">Set up your campaign</a>. <p/> <strong>Note:</strong> - The values for 'lifetime_spend_cap' and 'daily_spend_cap' are microcurrency amounts based on the currency field set in the advertiser's profile. (e.g. USD) <p/> <p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p> <p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.</p>  <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p> <ul>   <li>$1 = 1,000,000 microdollars</li>   <li>1 microdollar = $0.000001 </li> </ul> <p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p> <ul>   <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>   <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li> </ul>",
        tags = { "campaigns" },
        responses = {
            @ApiResponse(responseCode = "200", description = "response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CampaignCreateResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/campaigns",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CampaignCreateResponse> campaignsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "CampaignCreateRequest", description = "Array of campaigns.", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid CampaignCreateRequest> campaignCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"default_ad_group_budget_in_micro_currency\" : 0, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"is_automated_campaign\" : true, \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"default_ad_group_budget_in_micro_currency\" : 0, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"is_automated_campaign\" : true, \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/campaigns/{campaign_id} : Get campaign
     * Get a specific campaign given the campaign ID.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignId Campaign ID, must be associated with the ad account ID provided in the path. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "campaignsGet",
        summary = "Get campaign",
        description = "Get a specific campaign given the campaign ID.",
        tags = { "campaigns" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CampaignResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/campaigns/{campaign_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CampaignResponse> campaignsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "campaign_id", description = "Campaign ID, must be associated with the ad account ID provided in the path.", required = true, in = ParameterIn.PATH) @PathVariable("campaign_id") String campaignId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"objective_type\" : \"AWARENESS\", \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/campaigns : List campaigns
     * Get a list of the campaigns in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignIds List of Campaign Ids to use to filter the results. (optional)
     * @param entityStatuses Entity status (optional, default to ACTIVE,PAUSED)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Invalid ad account campaign parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "campaignsList",
        summary = "List campaigns",
        description = "Get a list of the campaigns in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager.",
        tags = { "campaigns" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CampaignsList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account campaign parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/campaigns",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CampaignsList200Response> campaignsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Size(min = 1, max = 100) @Parameter(name = "campaign_ids", description = "List of Campaign Ids to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_ids", required = false) List<@Pattern(regexp = "^\\d+$")@Size(max = 18)String> campaignIds,
        @Parameter(name = "entity_statuses", description = "Entity status", in = ParameterIn.QUERY) @Valid @RequestParam(value = "entity_statuses", required = false, defaultValue = "ACTIVE,PAUSED") List<String> entityStatuses,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"objective_type\" : \"AWARENESS\", \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" }, { \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"objective_type\" : \"AWARENESS\", \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/campaigns : Update campaigns
     * Update multiple ad campaigns based on campaign_ids. &lt;p/&gt; &lt;strong&gt;Note:&lt;/strong&gt;&lt;p/&gt;  - &lt;p&gt;The values for &#39;lifetime_spend_cap&#39; and &#39;daily_spend_cap&#39; are microcurrency amounts based on the currency field set in the advertiser&#39;s profile. (e.g. USD) &lt;p/&gt; &lt;p&gt;Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.&lt;/p&gt; &lt;p&gt;A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Equivalency equations&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;$1 &#x3D; 1,000,000 microdollars&lt;/li&gt;   &lt;li&gt;1 microdollar &#x3D; $0.000001 &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;To convert between currency and microcurrency&lt;/strong&gt;, using dollars as an example currency:&lt;/p&gt; &lt;ul&gt;   &lt;li&gt;To convert dollars to microdollars, mutiply dollars by 1,000,000&lt;/li&gt;   &lt;li&gt;To convert microdollars to dollars, divide microdollars by 1,000,000&lt;/li&gt; &lt;/ul&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignUpdateRequest Array of campaigns. (required)
     * @return response (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "campaignsUpdate",
        summary = "Update campaigns",
        description = "Update multiple ad campaigns based on campaign_ids. <p/> <strong>Note:</strong><p/>  - <p>The values for 'lifetime_spend_cap' and 'daily_spend_cap' are microcurrency amounts based on the currency field set in the advertiser's profile. (e.g. USD) <p/> <p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p> <p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.</p> <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p> <ul>   <li>$1 = 1,000,000 microdollars</li>   <li>1 microdollar = $0.000001 </li> </ul> <p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p> <ul>   <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>   <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li> </ul>",
        tags = { "campaigns" },
        responses = {
            @ApiResponse(responseCode = "200", description = "response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CampaignUpdateResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/campaigns",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CampaignUpdateResponse> campaignsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "CampaignUpdateRequest", description = "Array of campaigns.", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid CampaignUpdateRequest> campaignUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"default_ad_group_budget_in_micro_currency\" : 0, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"is_automated_campaign\" : true, \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"default_ad_group_budget_in_micro_currency\" : 0, \"lifetime_spend_cap\" : 1432744744, \"end_time\" : 1644023526, \"is_flexible_daily_budgets\" : true, \"daily_spend_cap\" : 1432744744, \"is_campaign_budget_optimization\" : true, \"summary_status\" : \"RUNNING\", \"type\" : \"campaign\", \"tracking_urls\" : \"{}\", \"ad_account_id\" : \"549755885175\", \"is_automated_campaign\" : true, \"start_time\" : 1580865126, \"name\" : \"ACME Tools\", \"order_line_id\" : \"549755885175\", \"id\" : \"549755885175\", \"status\" : \"status\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/conversion_tags : Create conversion tag
     * Create a conversion tag, also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Pinterest tag&lt;/a&gt;, with the option to enable enhanced match.&lt;p/&gt; The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account&#39;s ad on Pinterest. The advertiser needs to customize this tag to track conversions.&lt;p/&gt; For more information, see:&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\&quot;&gt;Set up the Pinterest tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/\&quot;&gt;Pinterest Tag&lt;/a&gt;&lt;p/&gt; &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;/docs/api-features/pinterest-tag/#enhanced-match\&quot;&gt;Enhanced match&lt;/a&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagCreate Conversion Tag to create (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "conversionTagsCreate",
        summary = "Create conversion tag",
        description = "Create a conversion tag, also known as <a href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\" target=\"_blank\">Pinterest tag</a>, with the option to enable enhanced match.<p/> The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account's ad on Pinterest. The advertiser needs to customize this tag to track conversions.<p/> For more information, see:<p/> <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\">Set up the Pinterest tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/\">Pinterest Tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/#enhanced-match\">Enhanced match</a>",
        tags = { "conversion_tags" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ConversionTagResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/conversion_tags",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ConversionTagResponse> conversionTagsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "ConversionTagCreate", description = "Conversion Tag to create", required = true) @Valid @RequestBody ConversionTagCreate conversionTagCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code_snippet\" : \"<script type=text/javascript> [...]\", \"configs\" : { \"aem_fnln_enabled\" : true, \"aem_enabled\" : true, \"aem_db_enabled\" : true, \"md_frequency\" : 0.6, \"aem_ph_enabled\" : true, \"aem_ge_enabled\" : true, \"aem_loc_enabled\" : true }, \"name\" : \"ACME Checkout Test Tag\", \"enhanced_match_status\" : \"VALIDATION_COMPLETE\", \"id\" : \"2617998078212\", \"last_fired_time_ms\" : 1599030000000, \"version\" : \"3\", \"ad_account_id\" : \"549755885175\", \"status\" : \"ACTIVE\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id} : Get conversion tag
     * Get information about an existing conversion tag.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionTagId Id of the conversion tag. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "conversionTagsGet",
        summary = "Get conversion tag",
        description = "Get information about an existing conversion tag.",
        tags = { "conversion_tags" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ConversionTagResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ConversionTagResponse> conversionTagsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "conversion_tag_id", description = "Id of the conversion tag.", required = true, in = ParameterIn.PATH) @PathVariable("conversion_tag_id") String conversionTagId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code_snippet\" : \"<script type=text/javascript> [...]\", \"configs\" : { \"aem_fnln_enabled\" : true, \"aem_enabled\" : true, \"aem_db_enabled\" : true, \"md_frequency\" : 0.6, \"aem_ph_enabled\" : true, \"aem_ge_enabled\" : true, \"aem_loc_enabled\" : true }, \"name\" : \"ACME Checkout Test Tag\", \"enhanced_match_status\" : \"VALIDATION_COMPLETE\", \"id\" : \"2617998078212\", \"last_fired_time_ms\" : 1599030000000, \"version\" : \"3\", \"ad_account_id\" : \"549755885175\", \"status\" : \"ACTIVE\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/conversion_tags : Get conversion tags
     * List conversion tags associated with an ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param filterDeleted Filter out deleted tags. (optional, default to false)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "conversionTagsList",
        summary = "Get conversion tags",
        description = "List conversion tags associated with an ad account.",
        tags = { "conversion_tags" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ConversionTagListResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/conversion_tags",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ConversionTagListResponse> conversionTagsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "filter_deleted", description = "Filter out deleted tags.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "filter_deleted", required = false, defaultValue = "false") Boolean filterDeleted
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"code_snippet\" : \"<script type=text/javascript> [...]\", \"configs\" : { \"aem_fnln_enabled\" : true, \"aem_enabled\" : true, \"aem_db_enabled\" : true, \"md_frequency\" : 0.6, \"aem_ph_enabled\" : true, \"aem_ge_enabled\" : true, \"aem_loc_enabled\" : true }, \"name\" : \"ACME Checkout Test Tag\", \"enhanced_match_status\" : \"VALIDATION_COMPLETE\", \"id\" : \"2617998078212\", \"last_fired_time_ms\" : 1599030000000, \"version\" : \"3\", \"ad_account_id\" : \"549755885175\", \"status\" : \"ACTIVE\" }, { \"code_snippet\" : \"<script type=text/javascript> [...]\", \"configs\" : { \"aem_fnln_enabled\" : true, \"aem_enabled\" : true, \"aem_db_enabled\" : true, \"md_frequency\" : 0.6, \"aem_ph_enabled\" : true, \"aem_ge_enabled\" : true, \"aem_loc_enabled\" : true }, \"name\" : \"ACME Checkout Test Tag\", \"enhanced_match_status\" : \"VALIDATION_COMPLETE\", \"id\" : \"2617998078212\", \"last_fired_time_ms\" : 1599030000000, \"version\" : \"3\", \"ad_account_id\" : \"549755885175\", \"status\" : \"ACTIVE\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/keywords/metrics : Get country&#39;s keyword metrics
     * See keyword metrics for a specified country, aggregated across all of Pinterest. (Definitions are available from the \&quot;Get delivery metrics definitions\&quot; &lt;a href&#x3D;\&quot;/docs/api/v5/#operation/delivery_metrics/get\&quot;&gt;API endpoint&lt;/a&gt;).
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param countryCode Two letter country code (ISO 3166-1 alpha-2) (required)
     * @param keywords Comma-separated keywords (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "countryKeywordsMetricsGet",
        summary = "Get country's keyword metrics",
        description = "See keyword metrics for a specified country, aggregated across all of Pinterest. (Definitions are available from the \"Get delivery metrics definitions\" <a href=\"/docs/api/v5/#operation/delivery_metrics/get\">API endpoint</a>).",
        tags = { "keywords" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KeywordsMetricsArrayResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/keywords/metrics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<KeywordsMetricsArrayResponse> countryKeywordsMetricsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "country_code", description = "Two letter country code (ISO 3166-1 alpha-2)", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "country_code", required = true) String countryCode,
        @NotNull @Size(min = 1, max = 2000) @Parameter(name = "keywords", description = "Comma-separated keywords", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "keywords", required = true) List<String> keywords
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : [ { \"metrics\" : { \"avg_cpc_in_micro_currency\" : 100000, \"keyword_query_volume\" : \"5M+\" }, \"keyword\" : \"animals\" }, { \"metrics\" : { \"avg_cpc_in_micro_currency\" : 100000, \"keyword_query_volume\" : \"5M+\" }, \"keyword\" : \"animals\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/customer_lists : Create customer lists
     * &lt;p&gt;Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).&lt;/p&gt; &lt;p&gt;A customer list is one of the four types of Pinterest audiences: for more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt; or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;p/&gt;  &lt;p&gt;&lt;b&gt;Please review our &lt;u&gt;&lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting#section-13341\&quot; target&#x3D;\&quot;_blank\&quot;&gt;requirements&lt;/a&gt;&lt;/u&gt; for what type of information is allowed when uploading a customer list.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;When you create a customer list, the system scans the list for existing Pinterest accounts; the list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process is complete. The filtered list – containing only the Pinterest accounts that were included in your starting list – is what will be used to create the audience.&lt;/p&gt; &lt;p&gt;Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type) using the &lt;a href&#x3D;\&quot;#operation/create_audience_handler\&quot;&gt;create audience endpoint&lt;/a&gt; before it can be used.&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param customerListRequest Parameters to get Customer lists info (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "customerListsCreate",
        summary = "Create customer lists",
        description = "<p>Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).</p> <p>A customer list is one of the four types of Pinterest audiences: for more information, see <a href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a> or the <a href=\"/docs/api-features/targeting-overview/\" target=\"_blank\">Audiences</a> section of the ads management guide.<p/>  <p><b>Please review our <u><a href=\"https://help.pinterest.com/en/business/article/audience-targeting#section-13341\" target=\"_blank\">requirements</a></u> for what type of information is allowed when uploading a customer list.</b></p> <p>When you create a customer list, the system scans the list for existing Pinterest accounts; the list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process is complete. The filtered list – containing only the Pinterest accounts that were included in your starting list – is what will be used to create the audience.</p> <p>Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type) using the <a href=\"#operation/create_audience_handler\">create audience endpoint</a> before it can be used.</p>",
        tags = { "customer_lists" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomerList.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/customer_lists",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CustomerList> customerListsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "CustomerListRequest", description = "Parameters to get Customer lists info", required = true) @Valid @RequestBody CustomerListRequest customerListRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"created_time\" : 1452208622, \"updated_time\" : 1461269616, \"name\" : \"The Glengarry Glen Ross leads\", \"num_removed_user_records\" : 0, \"id\" : \"643\", \"num_uploaded_user_records\" : 11, \"type\" : \"customerlist\", \"num_batches\" : 2, \"exceptions\" : \"{}\", \"ad_account_id\" : \"549756359984\", \"status\" : \"PROCESSING\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/customer_lists/{customer_list_id} : Get customer list
     * Gets a specific customer list given the customer list ID.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param customerListId Unique identifier of a customer list (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "customerListsGet",
        summary = "Get customer list",
        description = "Gets a specific customer list given the customer list ID.",
        tags = { "customer_lists" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomerList.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CustomerList> customerListsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "customer_list_id", description = "Unique identifier of a customer list", required = true, in = ParameterIn.PATH) @PathVariable("customer_list_id") String customerListId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"created_time\" : 1452208622, \"updated_time\" : 1461269616, \"name\" : \"The Glengarry Glen Ross leads\", \"num_removed_user_records\" : 0, \"id\" : \"643\", \"num_uploaded_user_records\" : 11, \"type\" : \"customerlist\", \"num_batches\" : 2, \"exceptions\" : \"{}\", \"ad_account_id\" : \"549756359984\", \"status\" : \"PROCESSING\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/customer_lists : Get customer lists
     * &lt;p&gt;Get a set of customer lists including id and name based on the filters provided.&lt;/p&gt; &lt;p&gt;(Customer lists are a type of audience.) For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;  or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "customerListsList",
        summary = "Get customer lists",
        description = "<p>Get a set of customer lists including id and name based on the filters provided.</p> <p>(Customer lists are a type of audience.) For more information, see <a href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a>  or the <a href=\"/docs/api-features/targeting-overview/\" target=\"_blank\">Audiences</a> section of the ads management guide.</p>",
        tags = { "customer_lists" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomerListsList200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/customer_lists",
        produces = { "application/json" }
    )
    
    default ResponseEntity<CustomerListsList200Response> customerListsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"created_time\" : 1452208622, \"updated_time\" : 1461269616, \"name\" : \"The Glengarry Glen Ross leads\", \"num_removed_user_records\" : 0, \"id\" : \"643\", \"num_uploaded_user_records\" : 11, \"type\" : \"customerlist\", \"num_batches\" : 2, \"exceptions\" : \"{}\", \"ad_account_id\" : \"549756359984\", \"status\" : \"PROCESSING\" }, { \"created_time\" : 1452208622, \"updated_time\" : 1461269616, \"name\" : \"The Glengarry Glen Ross leads\", \"num_removed_user_records\" : 0, \"id\" : \"643\", \"num_uploaded_user_records\" : 11, \"type\" : \"customerlist\", \"num_batches\" : 2, \"exceptions\" : \"{}\", \"ad_account_id\" : \"549756359984\", \"status\" : \"PROCESSING\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/customer_lists/{customer_list_id} : Update customer list
     * &lt;p&gt;Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)&lt;/p&gt; &lt;p&gt;When you add records to an existing customer list, the system scans the additions for existing Pinterest accounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records  to add will be deleted when the matching process is complete.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt; or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param customerListId Unique identifier of a customer list (required)
     * @param customerListUpdateRequest  (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "customerListsUpdate",
        summary = "Update customer list",
        description = "<p>Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)</p> <p>When you add records to an existing customer list, the system scans the additions for existing Pinterest accounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records  to add will be deleted when the matching process is complete.</p> <p>For more information, see <a href=\"https://help.pinterest.com/en/business/article/audience-targeting\" target=\"_blank\">Audience targeting</a> or the <a href=\"/docs/api-features/targeting-overview/\" target=\"_blank\">Audiences</a> section of the ads management guide.</p>",
        tags = { "customer_lists" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomerList.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CustomerList> customerListsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "customer_list_id", description = "Unique identifier of a customer list", required = true, in = ParameterIn.PATH) @PathVariable("customer_list_id") String customerListId,
        @Parameter(name = "CustomerListUpdateRequest", description = "", required = true) @Valid @RequestBody CustomerListUpdateRequest customerListUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"created_time\" : 1452208622, \"updated_time\" : 1461269616, \"name\" : \"The Glengarry Glen Ross leads\", \"num_removed_user_records\" : 0, \"id\" : \"643\", \"num_uploaded_user_records\" : 11, \"type\" : \"customerlist\", \"num_batches\" : 2, \"exceptions\" : \"{}\", \"ad_account_id\" : \"549756359984\", \"status\" : \"PROCESSING\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/events : Send conversions
     * The Pinterest API offers advertisers a way to send Pinterest their conversion information (including web conversions, in-app conversions, or even offline conversions) based on their &lt;code&gt;ad_account_id&lt;/code&gt;. The request body should be a JSON object. - This endpoint requires an &lt;code&gt;access_token&lt;/code&gt; be generated through Ads Manager. Review the &lt;a href&#x3D;\&quot;/docs/api-features/conversion-overview/\&quot;&gt;Conversions Guide&lt;/a&gt; for more details. (Note that the authorization header required is &lt;code&gt;Authorization: Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;). - The token&#39;s &lt;code&gt;user_account&lt;/code&gt; must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Audience, Campaign. (Note that the token can be used across multiple ad accounts under an user ID.) - This endpoint has a rate limit of 5,000 calls per minute per ad account. - If the merchant is submitting this information using both Pinterest conversion tags and the Pinterest API, Pinterest will remove duplicate information before reporting. (Note that events that took place offline cannot be deduplicated.)
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param conversionEvents Conversion events. (required)
     * @param test Include query param ?test&#x3D;true to mark the request as a test request. The events will not be recorded but the API will still return the same response messages. Use this mode to verify your requests are working and your events are constructed correctly. Warning: If you use this query parameter, be certain that it is off (set to false or deleted) before sending a legitimate (non-testing) request. (optional)
     * @return Success (status code 200)
     *         or The request was invalid. (status code 400)
     *         or Not authorized to send conversion events (status code 401)
     *         or Unauthorized access. (status code 403)
     *         or Not all events were successfully processed. (status code 422)
     *         or This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits within a short time window. (status code 429)
     *         or The endpoint has been ramped down and is currently not accepting any traffic. (status code 503)
     *         or Unexpected errors (status code 200)
     */
    @Operation(
        operationId = "eventsCreate",
        summary = "Send conversions",
        description = "The Pinterest API offers advertisers a way to send Pinterest their conversion information (including web conversions, in-app conversions, or even offline conversions) based on their <code>ad_account_id</code>. The request body should be a JSON object. - This endpoint requires an <code>access_token</code> be generated through Ads Manager. Review the <a href=\"/docs/api-features/conversion-overview/\">Conversions Guide</a> for more details. (Note that the authorization header required is <code>Authorization: Bearer &lt;access_token&gt;</code>). - The token's <code>user_account</code> must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Audience, Campaign. (Note that the token can be used across multiple ad accounts under an user ID.) - This endpoint has a rate limit of 5,000 calls per minute per ad account. - If the merchant is submitting this information using both Pinterest conversion tags and the Pinterest API, Pinterest will remove duplicate information before reporting. (Note that events that took place offline cannot be deduplicated.)",
        tags = { "conversion_events" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ConversionApiResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "The request was invalid.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "401", description = "Not authorized to send conversion events", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "403", description = "Unauthorized access.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "422", description = "Not all events were successfully processed.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = DetailedError.class))
            }),
            @ApiResponse(responseCode = "429", description = "This request exceeded a rate limit. This can happen if the client exceeds one of the published rate limits within a short time window.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "503", description = "The endpoint has been ramped down and is currently not accepting any traffic.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected errors", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" }),
            @SecurityRequirement(name = "conversion_token")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/events",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ConversionApiResponse> eventsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "ConversionEvents", description = "Conversion events.", required = true) @Valid @RequestBody ConversionEvents conversionEvents,
        @Parameter(name = "test", description = "Include query param ?test=true to mark the request as a test request. The events will not be recorded but the API will still return the same response messages. Use this mode to verify your requests are working and your events are constructed correctly. Warning: If you use this query parameter, be certain that it is off (set to false or deleted) before sending a legitimate (non-testing) request.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "test", required = false) Boolean test
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"num_events_processed\" : 6, \"num_events_received\" : 0, \"events\" : [ { \"error_message\" : \"error_message\", \"warning_message\" : \"warning_message\", \"status\" : \"processed\" }, { \"error_message\" : \"error_message\", \"warning_message\" : \"warning_message\", \"status\" : \"processed\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 1, \"details\" : \"{}\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/keywords : Create keywords
     * &lt;p&gt;Create keywords for following entity types(advertiser, campaign, ad group or ad).&lt;/p&gt; &lt;p&gt;For more information, see &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/keyword-targeting\&quot;&gt;Keyword targeting&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt; &lt;ul style&#x3D;\&quot;list-style-type: square;\&quot;&gt; &lt;li&gt;Advertisers and campaigns can only be assigned keywords with excluding (&#39;_NEGATIVE&#39;).&lt;/li&gt; &lt;li&gt;All keyword match types are available for ad groups.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information on match types, see &lt;a  target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot;&gt;match type enums&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Returns:&lt;/b&gt;&lt;/p&gt; &lt;ul style&#x3D;\&quot;list-style-type: square;\&quot;&gt; &lt;li&gt;&lt;p&gt;A successful call returns an object containing an array of new keyword objects and an empty &amp;quot;errors&amp;quot; object array.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &amp;quot;errors&amp;quot; object array:&lt;/p&gt; &lt;pre class&#x3D;\&quot;last literal-block\&quot;&gt; { \&quot;keywords\&quot;: [], \&quot;errors\&quot;: [ { \&quot;data\&quot;: { \&quot;archived\&quot;: null, \&quot;match_type\&quot;: \&quot;EXACT\&quot;, \&quot;parent_type\&quot;: null, \&quot;value\&quot;: \&quot;foobar\&quot;, \&quot;parent_id\&quot;: null, \&quot;type\&quot;: \&quot;keyword\&quot;, \&quot;id\&quot;: null }, \&quot;error_messages\&quot;: [ \&quot;Advertisers and Campaigns only accept excluded targeting attributes.\&quot; ] } } &lt;/pre&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Rate limit&lt;/b&gt;: &lt;a href&#x3D;\&quot;/docs/reference/rate-limits/\&quot;&gt;WRITE&lt;/a&gt;.&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param keywordsRequest  (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "keywordsCreate",
        summary = "Create keywords",
        description = "<p>Create keywords for following entity types(advertiser, campaign, ad group or ad).</p> <p>For more information, see <a target=\"_blank\" href=\"https://help.pinterest.com/en/business/article/keyword-targeting\">Keyword targeting</a>.</p> <p><b>Notes:</b></p> <ul style=\"list-style-type: square;\"> <li>Advertisers and campaigns can only be assigned keywords with excluding ('_NEGATIVE').</li> <li>All keyword match types are available for ad groups.</li> </ul> <p>For more information on match types, see <a  target=\"_blank\" href=\"/docs/api-features/targeting-overview/\">match type enums</a>.</p> <p><b>Returns:</b></p> <ul style=\"list-style-type: square;\"> <li><p>A successful call returns an object containing an array of new keyword objects and an empty &quot;errors&quot; object array.</p></li> <li><p>An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &quot;errors&quot; object array:</p> <pre class=\"last literal-block\"> { \"keywords\": [], \"errors\": [ { \"data\": { \"archived\": null, \"match_type\": \"EXACT\", \"parent_type\": null, \"value\": \"foobar\", \"parent_id\": null, \"type\": \"keyword\", \"id\": null }, \"error_messages\": [ \"Advertisers and Campaigns only accept excluded targeting attributes.\" ] } } </pre></li> </ul> <p><b>Rate limit</b>: <a href=\"/docs/reference/rate-limits/\">WRITE</a>.</p>",
        tags = { "keywords" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KeywordsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/keywords",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<KeywordsResponse> keywordsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "KeywordsRequest", description = "", required = true) @Valid @RequestBody KeywordsRequest keywordsRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"keywords\" : [ { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" } ], \"errors\" : [ { \"data\" : { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, \"error_messages\" : [ \"error_messages\", \"error_messages\" ] }, { \"data\" : { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, \"error_messages\" : [ \"error_messages\", \"error_messages\" ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/keywords : Get keywords
     * &lt;p&gt;Get a list of keywords based on the filters provided. If no filter is provided, it will default to the ad_account_id filter, which means it will only return keywords that specifically have parent_id set to the ad_account_id. Note: Keywords can have ad_account_ids, campaign_ids, and ad_group_ids set as their parent_ids. Keywords created through Ads Manager will have their parent_id set to an ad_group_id, not ad_account_id.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/keyword-targeting\&quot;&gt;Keyword targeting&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt; &lt;ul style&#x3D;\&quot;list-style-type: square;\&quot;&gt; &lt;li&gt;Advertisers and campaigns can only be assigned keywords with excluding (&#39;_NEGATIVE&#39;).&lt;/li&gt; &lt;li&gt;All keyword match types are available for ad groups.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information on match types, see &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot;&gt;match type enums&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Returns:&lt;/b&gt;&lt;/p&gt; &lt;ul style&#x3D;\&quot;list-style-type: square;\&quot;&gt; &lt;li&gt;&lt;p&gt;A successful call returns an object containing an array of new keyword objects and an empty &amp;quot;errors&amp;quot; object array.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &amp;quot;errors&amp;quot; object array:&lt;/p&gt; &lt;pre class&#x3D;\&quot;last literal-block\&quot;&gt; { \&quot;keywords\&quot;: [], \&quot;errors\&quot;: [ { \&quot;data\&quot;: { \&quot;archived\&quot;: null, \&quot;match_type\&quot;: \&quot;EXACT\&quot;, \&quot;parent_type\&quot;: null, \&quot;value\&quot;: \&quot;foobar\&quot;, \&quot;parent_id\&quot;: null, \&quot;type\&quot;: \&quot;keyword\&quot;, \&quot;id\&quot;: null }, \&quot;error_messages\&quot;: [ \&quot;Advertisers and Campaigns only accept excluded targeting attributes.\&quot; ] } } &lt;/pre&gt;&lt;/li&gt; &lt;/ul&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param campaignId Campaign Id to use to filter the results. (optional)
     * @param adGroupId Ad group Id. (optional)
     * @param matchTypes Keyword &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot;&gt;match type&lt;/a&gt; (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "keywordsGet",
        summary = "Get keywords",
        description = "<p>Get a list of keywords based on the filters provided. If no filter is provided, it will default to the ad_account_id filter, which means it will only return keywords that specifically have parent_id set to the ad_account_id. Note: Keywords can have ad_account_ids, campaign_ids, and ad_group_ids set as their parent_ids. Keywords created through Ads Manager will have their parent_id set to an ad_group_id, not ad_account_id.</p> <p>For more information, see <a target=\"_blank\" href=\"https://help.pinterest.com/en/business/article/keyword-targeting\">Keyword targeting</a>.</p> <p><b>Notes:</b></p> <ul style=\"list-style-type: square;\"> <li>Advertisers and campaigns can only be assigned keywords with excluding ('_NEGATIVE').</li> <li>All keyword match types are available for ad groups.</li> </ul> <p>For more information on match types, see <a target=\"_blank\" href=\"/docs/api-features/targeting-overview/\">match type enums</a>.</p> <p><b>Returns:</b></p> <ul style=\"list-style-type: square;\"> <li><p>A successful call returns an object containing an array of new keyword objects and an empty &quot;errors&quot; object array.</p></li> <li><p>An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &quot;errors&quot; object array:</p> <pre class=\"last literal-block\"> { \"keywords\": [], \"errors\": [ { \"data\": { \"archived\": null, \"match_type\": \"EXACT\", \"parent_type\": null, \"value\": \"foobar\", \"parent_id\": null, \"type\": \"keyword\", \"id\": null }, \"error_messages\": [ \"Advertisers and Campaigns only accept excluded targeting attributes.\" ] } } </pre></li> </ul>",
        tags = { "keywords" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KeywordsGet200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/keywords",
        produces = { "application/json" }
    )
    
    default ResponseEntity<KeywordsGet200Response> keywordsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "campaign_id", description = "Campaign Id to use to filter the results.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "campaign_id", required = false) String campaignId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_group_id", description = "Ad group Id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_group_id", required = false) String adGroupId,
        @Size(min = 1, max = 5) @Parameter(name = "match_types", description = "Keyword <a target=\"_blank\" href=\"/docs/api-features/targeting-overview/\">match type</a>", in = ParameterIn.QUERY) @Valid @RequestParam(value = "match_types", required = false) List<MatchType> matchTypes,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/keywords : Update keywords
     * &lt;p&gt;Update one or more keywords&#39; bid and archived fields.&lt;/p&gt; &lt;p&gt;Archiving a keyword effectively deletes it - keywords no longer receive metrics and no longer visible within the parent entity&#39;s keywords list.&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param keywordUpdateBody  (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "keywordsUpdate",
        summary = "Update keywords",
        description = "<p>Update one or more keywords' bid and archived fields.</p> <p>Archiving a keyword effectively deletes it - keywords no longer receive metrics and no longer visible within the parent entity's keywords list.</p>",
        tags = { "keywords" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = KeywordsResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/keywords",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<KeywordsResponse> keywordsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "KeywordUpdateBody", description = "", required = true) @Valid @RequestBody KeywordUpdateBody keywordUpdateBody
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"keywords\" : [ { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" } ], \"errors\" : [ { \"data\" : { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, \"error_messages\" : [ \"error_messages\", \"error_messages\" ] }, { \"data\" : { \"archived\" : false, \"parent_id\" : \"383791336903426391\", \"match_type\" : \"BROAD\", \"id\" : \"383791336903426391\", \"bid\" : 0, \"parent_type\" : \"campaign\", \"type\" : \"keyword\", \"value\" : \"value\" }, \"error_messages\" : [ \"error_messages\", \"error_messages\" ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/lead_forms/{lead_form_id} : Get lead form by id
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Gets a lead form given it&#39;s ID. It must also be associated with the provided ad account ID.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param leadFormId Unique identifier of a lead form. (required)
     * @return Success (status code 200)
     *         or Invalid ad account lead forms parameters. (status code 400)
     *         or The lead form ID for the given ad account ID does not exist. (status code 404)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadFormGet",
        summary = "Get lead form by id",
        description = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Gets a lead form given it's ID. It must also be associated with the provided ad account ID.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.",
        tags = { "lead_forms" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadFormResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account lead forms parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "The lead form ID for the given ad account ID does not exist.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<LeadFormResponse> leadFormGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Parameter(name = "lead_form_id", description = "Unique identifier of a lead form.", required = true, in = ParameterIn.PATH) @PathVariable("lead_form_id") String leadFormId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test : Create lead form test data
     * Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param leadFormId Unique identifier of a lead form. (required)
     * @param leadFormTestRequest Subscription to create. (required)
     * @return Success (status code 200)
     *         or Invalid parameters. (status code 400)
     *         or Lead not found. (status code 404)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadFormTestCreate",
        summary = "Create lead form test data",
        description = "Create lead form test data based on the list of answers provided as part of the body. - List of answers should follow the questions creation order.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
        tags = { "lead_forms" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadFormTestResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Lead not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<LeadFormTestResponse> leadFormTestCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Parameter(name = "lead_form_id", description = "Unique identifier of a lead form.", required = true, in = ParameterIn.PATH) @PathVariable("lead_form_id") String leadFormId,
        @Parameter(name = "LeadFormTestRequest", description = "Subscription to create.", required = true) @Valid @RequestBody LeadFormTestRequest leadFormTestRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"subscription_id\" : \"8078432025948590686\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/lead_forms : Create lead forms
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Create lead forms. Lead forms are used in lead ads and allow you to control what text appears on the lead form’ s description, questions and confirmation sections.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param leadFormCreateRequest List of lead forms to create, size limit [1, 30]. (required)
     * @return Success (status code 200)
     *         or Invalid ad account lead forms parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadFormsCreate",
        summary = "Create lead forms",
        description = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Create lead forms. Lead forms are used in lead ads and allow you to control what text appears on the lead form’ s description, questions and confirmation sections.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.",
        tags = { "lead_forms" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadFormArrayResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account lead forms parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/lead_forms",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<LeadFormArrayResponse> leadFormsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "LeadFormCreateRequest", description = "List of lead forms to create, size limit [1, 30].", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid LeadFormCreateRequest> leadFormCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/lead_forms : List lead forms
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  List lead forms associated with an ad account ID.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Invalid ad account lead forms parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadFormsList",
        summary = "List lead forms",
        description = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  List lead forms associated with an ad account ID.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.",
        tags = { "lead_forms" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadFormsList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account lead forms parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/lead_forms",
        produces = { "application/json" }
    )
    
    default ResponseEntity<LeadFormsList200Response> leadFormsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" }, { \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/lead_forms : Update lead forms
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Update lead forms. Lead ads help you reach people who are actively looking for, and interested in, your goods and services. The lead form can be associated with an ad to allow people to fill out the form.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param leadFormUpdateRequest List of lead forms to update, size limit [1, 30]. (required)
     * @return Success (status code 200)
     *         or Invalid ad account lead forms parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadFormsUpdate",
        summary = "Update lead forms",
        description = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Update lead forms. Lead ads help you reach people who are actively looking for, and interested in, your goods and services. The lead form can be associated with an ad to allow people to fill out the form.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.",
        tags = { "lead_forms" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadFormArrayResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account lead forms parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/lead_forms",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<LeadFormArrayResponse> leadFormsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "LeadFormUpdateRequest", description = "List of lead forms to update, size limit [1, 30].", required = true) @Valid@Size(min = 1, max = 30)  @RequestBody List<@Valid LeadFormUpdateRequest> leadFormUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"completion_message\" : \"Thank you for submitting. We will contact you soon.\", \"created_time\" : 1451431341, \"updated_time\" : 1451431341, \"disclosure_language\" : \"By entering your personal information, you agree that your data will be collected and used.\", \"name\" : \"Lead Form 3/14/2023\", \"questions\" : [ { \"question_type\" : \"CUSTOM\", \"custom_question_field_type\" : \"CHECKBOX\", \"custom_question_label\" : \"What is your favorite animal?\", \"custom_question_options\" : [ \"Dog\", \"Cat\", \"Bird\", \"Turtle\" ] } ], \"policy_links\" : [ { \"label\" : \"Copyright\", \"link\" : \"https://policy.pinterest.com/en/copyright\" } ], \"has_accepted_terms\" : false, \"id\" : \"7765300871171\", \"privacy_policy_link\" : \"https://www.advertisername.com/privacy-policy\", \"status\" : \"DRAFT\", \"ad_account_id\" : \"549755885175\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/leads_export : Create a request to export leads collected from a lead ad
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Create an export of leads collected from a lead ad. This returns a lead_export_id  token that you can use to download the export when it is ready.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param leadsExportCreateRequest  (required)
     * @return Success (status code 200)
     *         or Invalid ad account parameter. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadsExportCreate",
        summary = "Create a request to export leads collected from a lead ad",
        description = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Create an export of leads collected from a lead ad. This returns a lead_export_id  token that you can use to download the export when it is ready.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.",
        tags = { "leads_export" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadsExportCreateResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/leads_export",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<LeadsExportCreateResponse> leadsExportCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "LeadsExportCreateRequest", description = "", required = true) @Valid @RequestBody LeadsExportCreateRequest leadsExportCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"leads_export_id\" : \"123456789012\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/leads_export/{leads_export_id} : Get the lead export from the lead export create call
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Get the export of leads collected from a lead ad. This returns a URL to a list of lead export given a lead_export_id token returned from the create a lead export call. You can use the URL to download the report.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param leadsExportId lead_export_id token returned from the create a lead export endpoint (required)
     * @return Success (status code 200)
     *         or Invalid ad account parameter. (status code 400)
     *         or Invalid leads export id parameter. (status code 404)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "leadsExportGet",
        summary = "Get the lead export from the lead export create call",
        description = "<strong>This feature is currently in beta and not available to all apps, if you're interested in joining the beta, please reach out to your Pinterest account manager.</strong>  Get the export of leads collected from a lead ad. This returns a URL to a list of lead export given a lead_export_id token returned from the create a lead export call. You can use the URL to download the report.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/lead-ads\">Lead ads</a>.",
        tags = { "leads_export" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LeadsExportResponseData.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "Invalid leads export id parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/leads_export/{leads_export_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<LeadsExportResponseData> leadsExportGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Parameter(name = "leads_export_id", description = "lead_export_id token returned from the create a lead export endpoint", required = true, in = ParameterIn.PATH) @PathVariable("leads_export_id") String leadsExportId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"export_status\" : \"IN_PROGRESS\", \"download_url\" : \"download_url\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible : Get Ocpm eligible conversion tags
     * Get Ocpm eligible conversion tag events for an ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return Success (status code 200)
     *         or Unexpected errors (status code 200)
     */
    @Operation(
        operationId = "ocpmEligibleConversionTagsGet",
        summary = "Get Ocpm eligible conversion tags",
        description = "Get Ocpm eligible conversion tag events for an ad account.",
        tags = { "conversion_tags" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ConversionEventResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected errors", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Map<String, List<ConversionEventResponse>>> ocpmEligibleConversionTagsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"12345\" : [ { \"conversion_event\" : \"PAGE_LOAD\", \"created_time\" : 1564768710, \"conversion_tag_id\" : \"2614324385652\", \"ad_account_id\" : \"549757463328\" }, { \"conversion_event\" : \"CHECKOUT\", \"created_time\" : 1564710210, \"conversion_tag_id\" : \"2614324315793\", \"ad_account_id\" : \"549757463328\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/order_lines/{order_line_id} : Get order line
     * Get a specific existing order line associated with an ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param orderLineId Unique identifier of an order line. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "orderLinesGet",
        summary = "Get order line",
        description = "Get a specific existing order line associated with an ad account.",
        tags = { "order_lines" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrderLine.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/order_lines/{order_line_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<OrderLine> orderLinesGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "order_line_id", description = "Unique identifier of an order line.", required = true, in = ParameterIn.PATH) @PathVariable("order_line_id") String orderLineId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"start_time\" : 1452208622, \"purchase_order_id\" : \"PO12345\", \"campaign_ids\" : [ \"626735565838\" ], \"end_time\" : 1461269616, \"name\" : \"Order Line Name 1\", \"id\" : \"2680059592705\", \"paid_budget\" : 5000000, \"paid_type\" : \"PAID\", \"type\" : \"orderline\", \"ad_account_id\" : \"549755885175\", \"budget\" : 5000000, \"status\" : \"ACTIVE\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/order_lines : Get order lines
     * List existing order lines associated with an ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "orderLinesList",
        summary = "Get order lines",
        description = "List existing order lines associated with an ad account.",
        tags = { "order_lines" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OrderLinesList200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/order_lines",
        produces = { "application/json" }
    )
    
    default ResponseEntity<OrderLinesList200Response> orderLinesList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"start_time\" : 1452208622, \"purchase_order_id\" : \"PO12345\", \"campaign_ids\" : [ \"626735565838\" ], \"end_time\" : 1461269616, \"name\" : \"Order Line Name 1\", \"id\" : \"2680059592705\", \"paid_budget\" : 5000000, \"paid_type\" : \"PAID\", \"type\" : \"orderline\", \"ad_account_id\" : \"549755885175\", \"budget\" : 5000000, \"status\" : \"ACTIVE\" }, { \"start_time\" : 1452208622, \"purchase_order_id\" : \"PO12345\", \"campaign_ids\" : [ \"626735565838\" ], \"end_time\" : 1461269616, \"name\" : \"Order Line Name 1\", \"id\" : \"2680059592705\", \"paid_budget\" : 5000000, \"paid_type\" : \"PAID\", \"type\" : \"orderline\", \"ad_account_id\" : \"549755885175\", \"budget\" : 5000000, \"status\" : \"ACTIVE\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/conversion_tags/page_visit : Get page visit conversion tags
     * Get all page visit conversion tag events for an ad account.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "pageVisitConversionTagsGet",
        summary = "Get page visit conversion tags",
        description = "Get all page visit conversion tag events for an ad account.",
        tags = { "conversion_tags" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PageVisitConversionTagsGet200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/conversion_tags/page_visit",
        produces = { "application/json" }
    )
    
    default ResponseEntity<PageVisitConversionTagsGet200Response> pageVisitConversionTagsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"created_time\" : 1564768710, \"conversion_tag_id\" : \"2614324385652\", \"conversion_event\" : \"conversion_event\", \"ad_account_id\" : \"549757463328\" }, { \"created_time\" : 1564768710, \"conversion_tag_id\" : \"2614324385652\", \"conversion_event\" : \"conversion_event\", \"ad_account_id\" : \"549757463328\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/product_group_promotions : Create product group promotions
     * Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param productGroupPromotionCreateRequest List of Product Group Promotions to create, size limit [1, 30]. (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "productGroupPromotionsCreate",
        summary = "Create product group promotions",
        description = "Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a 'product group promotion.')",
        tags = { "product_group_promotions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProductGroupPromotionResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/product_group_promotions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ProductGroupPromotionResponse> productGroupPromotionsCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "ProductGroupPromotionCreateRequest", description = "List of Product Group Promotions to create, size limit [1, 30].", required = true) @Valid @RequestBody ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id} : Get a product group promotion by id
     * Get a product group promotion by id
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param productGroupPromotionId Unique identifier of a product group promotion (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "productGroupPromotionsGet",
        summary = "Get a product group promotion by id",
        description = "Get a product group promotion by id",
        tags = { "product_group_promotions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProductGroupPromotionResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ProductGroupPromotionResponse> productGroupPromotionsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "product_group_promotion_id", description = "Unique identifier of a product group promotion", required = true, in = ParameterIn.PATH) @PathVariable("product_group_promotion_id") String productGroupPromotionId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/product_group_promotions : Get product group promotions
     * List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param productGroupPromotionIds List of Product group promotion Ids. (optional)
     * @param entityStatuses Entity status (optional, default to ACTIVE,PAUSED)
     * @param adGroupId Ad group Id. (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "productGroupPromotionsList",
        summary = "Get product group promotions",
        description = "List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  <b>Note:</b> ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.",
        tags = { "product_group_promotions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProductGroupPromotionsList200Response.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/product_group_promotions",
        produces = { "application/json" }
    )
    
    default ResponseEntity<ProductGroupPromotionsList200Response> productGroupPromotionsList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Size(min = 1, max = 100) @Parameter(name = "product_group_promotion_ids", description = "List of Product group promotion Ids.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "product_group_promotion_ids", required = false) List<@Pattern(regexp = "^\\d+$")String> productGroupPromotionIds,
        @Parameter(name = "entity_statuses", description = "Entity status", in = ParameterIn.QUERY) @Valid @RequestParam(value = "entity_statuses", required = false, defaultValue = "ACTIVE,PAUSED") List<String> entityStatuses,
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_group_id", description = "Ad group Id.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ad_group_id", required = false) String adGroupId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/product_group_promotions : Update product group promotions
     * Update multiple existing Product Group Promotions (by product_group_id)
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param productGroupPromotionUpdateRequest Parameters to update Product group promotions (required)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "productGroupPromotionsUpdate",
        summary = "Update product group promotions",
        description = "Update multiple existing Product Group Promotions (by product_group_id)",
        tags = { "product_group_promotions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ProductGroupPromotionResponse.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/product_group_promotions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<ProductGroupPromotionResponse> productGroupPromotionsUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "ProductGroupPromotionUpdateRequest", description = "Parameters to update Product group promotions", required = true) @Valid @RequestBody ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"items\" : [ { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] }, { \"data\" : { \"catalog_product_group_id\" : \"1231235\", \"bid_in_micro_currency\" : 14000000, \"relative_definition\" : \"product_type_1='beverage appliances'\", \"slideshow_collections_description\" : \"slideshow description\", \"collections_hero_pin_id\" : \"123123\", \"catalog_product_group_name\" : \"catalogProductGroupName\", \"slideshow_collections_title\" : \"slideshow title\", \"is_mdl\" : true, \"parent_id\" : \"1231234\", \"grid_click_type\" : \"CLOSEUP\", \"creative_type\" : \"REGULAR\", \"definition\" : \"*/product_type_0='kitchen'/product_type_1='beverage appliances'\", \"id\" : \"2680059592705\", \"ad_group_id\" : \"2680059592705\", \"collections_hero_destination_url\" : \"http://www.pinterest.com\", \"included\" : true, \"tracking_url\" : \"https://www.pinterest.com\", \"status\" : \"ACTIVE\" }, \"exceptions\" : [ { \"code\" : 2, \"message\" : \"Advertiser not found.\" }, { \"code\" : 2, \"message\" : \"Advertiser not found.\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/product_groups/analytics : Get product group analytics
     * Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param startDate Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. (required)
     * @param endDate Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. (required)
     * @param productGroupIds List of Product group Ids to use to filter the results. (required)
     * @param columns Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned (required)
     * @param granularity TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly (required)
     * @param clickWindowDays Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param engagementWindowDays Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to 30)
     * @param viewWindowDays Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to 1)
     * @param conversionReportTime The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to TIME_OF_AD_ACTION)
     * @return Success (status code 200)
     *         or Invalid ad account ads analytics parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "productGroupsAnalytics",
        summary = "Get product group analytics",
        description = "Get analytics for the specified product groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.",
        tags = { "product_group_promotions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ProductGroupAnalyticsResponseInner.class)))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account ads analytics parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/product_groups/analytics",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<ProductGroupAnalyticsResponseInner>> productGroupsAnalytics(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @NotNull @Parameter(name = "start_date", description = "Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "start_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startDate,
        @NotNull @Parameter(name = "end_date", description = "Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "end_date", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endDate,
        @NotNull @Size(min = 1, max = 100) @Parameter(name = "product_group_ids", description = "List of Product group Ids to use to filter the results.", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "product_group_ids", required = true) List<@Pattern(regexp = "^\\d+$")String> productGroupIds,
        @NotNull @Parameter(name = "columns", description = "Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile's currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it's microdollars. Otherwise, it's in microunits of the advertiser's currency.<br/>For example, if the advertiser's currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).<br/>If a column has no value, it may not be returned", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "columns", required = true) List<String> columns,
        @NotNull @Parameter(name = "granularity", description = "TOTAL - metrics are aggregated over the specified date range.<br> DAY - metrics are broken down daily.<br> HOUR - metrics are broken down hourly.<br>WEEKLY - metrics are broken down weekly.<br>MONTHLY - metrics are broken down monthly", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "granularity", required = true) Granularity granularity,
        @Parameter(name = "click_window_days", description = "Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "click_window_days", required = false, defaultValue = "30") Integer clickWindowDays,
        @Parameter(name = "engagement_window_days", description = "Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `30` days.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "engagement_window_days", required = false, defaultValue = "30") Integer engagementWindowDays,
        @Parameter(name = "view_window_days", description = "Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to `1` day.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "view_window_days", required = false, defaultValue = "1") Integer viewWindowDays,
        @Parameter(name = "conversion_report_time", description = "The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "conversion_report_time", required = false, defaultValue = "TIME_OF_AD_ACTION") String conversionReportTime
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"DATE\" : \"2021-04-01\", \"PRODUCT_GROUP_ID\" : \"74629351736530\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 }, { \"DATE\" : \"2021-04-01\", \"PRODUCT_GROUP_ID\" : \"74629351736530\", \"SPEND_IN_DOLLAR\" : 30, \"TOTAL_CLICKTHROUGH\" : 216 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /ad_accounts/{ad_account_id}/sandbox : Delete ads data for ad account in API Sandbox
     * Delete an ad account and all the ads data associated with that account. A string message is returned indicating the status of the delete operation.  Note: This endpoint is only allowed in the Pinterest API Sandbox (https://api-sandbox.pinterest.com/v5). Go to /docs/developer-tools/sandbox/ for more information.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return OK (status code 200)
     *         or Invalid ad account id. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "sandboxDelete",
        summary = "Delete ads data for ad account in API Sandbox",
        description = "Delete an ad account and all the ads data associated with that account. A string message is returned indicating the status of the delete operation.  Note: This endpoint is only allowed in the Pinterest API Sandbox (https://api-sandbox.pinterest.com/v5). Go to /docs/developer-tools/sandbox/ for more information.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account id.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/ad_accounts/{ad_account_id}/sandbox",
        produces = { "application/json" }
    )
    
    default ResponseEntity<String> sandboxDelete(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "\"Delete Success\"";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ssio/accounts : Get Salesforce account details including bill-to information.
     * Get Salesforce account details including bill-to information to be used in insertion orders process for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @return Success (status code 200)
     *         or Invalid request parameter. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "ssioAccountsGet",
        summary = "Get Salesforce account details including bill-to information.",
        description = "Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SSIOAccountResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ssio/accounts",
        produces = { "application/json" }
    )
    
    default ResponseEntity<SSIOAccountResponse> ssioAccountsGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"billto_infos\" : [ { \"us_terms_id\" : \"a2S1N000000bKIOUA2\", \"row_terms_id\" : \"a2S1N000000bKHhUAM\", \"us_terms\" : \"This Insertion Order (\\"IO\\") is subject to the Pinterest Addendum To IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0), as executed by Pinterest, Inc. and GroupM Worldwide LLC on May 7, 2014 and Amendment No. 1 to Pinterest Addendum to IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0) as executed by Pinterest, Inc. and GroupM Worldwide LLC on August 20, 2015. The parties agree that Agency may apply any of the budget listed on this IO to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees.The terms of the Addendum supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.\", \"row_terms\" : \"The IO is governed by the terms available at\r\nhttps://business.pinterest.com/en-gb/pinterest-advertising-services-agreement\", \"addresses\" : [ { \"order_legal_entity\" : \"PIN US OU\", \"purpose\" : \"Billing\", \"display\" : \"475 Brannan Street, San Francisco, CA 94103\", \"address_id\" : \"a1C1N000004MUrLUAW\" }, { \"order_legal_entity\" : \"PIN US OU\", \"purpose\" : \"Billing\", \"display\" : \"475 Brannan Street, San Francisco, CA 94103\", \"address_id\" : \"a1C1N000004MUrLUAW\" } ], \"io_terms\" : \"The IO is governed by the terms available at https://business.pinterest.com/en/pinterest-advertising-services-agreement/. If a budget is listed on this IO, the parties agree that Advertiser (or if applicable, its Agency) may apply any of the budget to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees. The terms of the Agreement supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.\", \"io_terms_id\" : \"a2S1N000000bKHgUAM\", \"io_type\" : \"Pinterest Paper\", \"id\" : \"0011N00001LW8kAQAT\" }, { \"us_terms_id\" : \"a2S1N000000bKIOUA2\", \"row_terms_id\" : \"a2S1N000000bKHhUAM\", \"us_terms\" : \"This Insertion Order (\\"IO\\") is subject to the Pinterest Addendum To IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0), as executed by Pinterest, Inc. and GroupM Worldwide LLC on May 7, 2014 and Amendment No. 1 to Pinterest Addendum to IAB Standard Terms and Conditions for Internet Advertising For Media Buys One Year or Less (Version 3.0) as executed by Pinterest, Inc. and GroupM Worldwide LLC on August 20, 2015. The parties agree that Agency may apply any of the budget listed on this IO to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees.The terms of the Addendum supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.\", \"row_terms\" : \"The IO is governed by the terms available at\r\nhttps://business.pinterest.com/en-gb/pinterest-advertising-services-agreement\", \"addresses\" : [ { \"order_legal_entity\" : \"PIN US OU\", \"purpose\" : \"Billing\", \"display\" : \"475 Brannan Street, San Francisco, CA 94103\", \"address_id\" : \"a1C1N000004MUrLUAW\" }, { \"order_legal_entity\" : \"PIN US OU\", \"purpose\" : \"Billing\", \"display\" : \"475 Brannan Street, San Francisco, CA 94103\", \"address_id\" : \"a1C1N000004MUrLUAW\" } ], \"io_terms\" : \"The IO is governed by the terms available at https://business.pinterest.com/en/pinterest-advertising-services-agreement/. If a budget is listed on this IO, the parties agree that Advertiser (or if applicable, its Agency) may apply any of the budget to any auction bid type or ad product. Price will be determined by auction closing price, plus any applicable non-auction fees. The terms of the Agreement supersede any terms on this IO. ANY ADDITIONAL TERMS AND CONDITIONS ON THIS IO ARE NULL AND VOID.\", \"io_terms_id\" : \"a2S1N000000bKHgUAM\", \"io_type\" : \"Pinterest Paper\", \"id\" : \"0011N00001LW8kAQAT\" } ], \"eligible\" : true, \"can_edit\" : true, \"currency\" : \"USD\", \"error\" : \"No Error\", \"pmp_names\" : [ { \"name\" : \"Bidalgo\", \"id\" : \"0011N00001LW2aSQAT\" }, { \"name\" : \"Bidalgo\", \"id\" : \"0011N00001LW2aSQAT\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/ssio/insertion_orders : Create insertion order through SSIO.
     * Create insertion order through SSIO for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param ssIOCreateInsertionOrderRequest Order line to create. (required)
     * @return Success (status code 200)
     *         or Invalid request. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "ssioInsertionOrderCreate",
        summary = "Create insertion order through SSIO.",
        description = "Create insertion order through SSIO for <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SSIOCreateInsertionOrderResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/ssio/insertion_orders",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<SSIOCreateInsertionOrderResponse> ssioInsertionOrderCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "SSIOCreateInsertionOrderRequest", description = "Order line to create.", required = true) @Valid @RequestBody SSIOCreateInsertionOrderRequest ssIOCreateInsertionOrderRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"pin_order_id\" : \"pin_order_id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/ssio/insertion_orders : Edit insertion order through SSIO.
     * Edit insertion order through SSIO for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param ssIOEditInsertionOrderRequest Order line to create. (required)
     * @return Success (status code 200)
     *         or Invalid request. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "ssioInsertionOrderEdit",
        summary = "Edit insertion order through SSIO.",
        description = "Edit insertion order through SSIO for <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SSIOEditInsertionOrderResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/ssio/insertion_orders",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<SSIOEditInsertionOrderResponse> ssioInsertionOrderEdit(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "SSIOEditInsertionOrderRequest", description = "Order line to create.", required = true) @Valid @RequestBody SSIOEditInsertionOrderRequest ssIOEditInsertionOrderRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"pin_order_id\" : \"pin_order_id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ssio/insertion_orders/status : Get insertion order status by ad account id.
     * Get insertion order status for account id &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @return Success (status code 200)
     *         or Invalid request parameter. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "ssioInsertionOrdersStatusGetByAdAccount",
        summary = "Get insertion order status by ad account id.",
        description = "Get insertion order status for account id <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SsioInsertionOrdersStatusGetByAdAccount200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ssio/insertion_orders/status",
        produces = { "application/json" }
    )
    
    default ResponseEntity<SsioInsertionOrdersStatusGetByAdAccount200Response> ssioInsertionOrdersStatusGetByAdAccount(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"creation_time\" : \"2017-06-21T23:11:11.000Z\", \"pin_order_id\" : \"0Q01N0000015hekSAB\", \"status\" : \"Approved\" }, { \"creation_time\" : \"2017-06-21T23:11:11.000Z\", \"pin_order_id\" : \"0Q01N0000015hekSAB\", \"status\" : \"Approved\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status : Get insertion order status by pin order id.
     * Get insertion order status for pin order id &lt;code&gt;pin_order_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pinOrderId The pin order id associated with the ssio insertion order (required)
     * @return Success (status code 200)
     *         or Invalid request parameter. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "ssioInsertionOrdersStatusGetByPinOrderId",
        summary = "Get insertion order status by pin order id.",
        description = "Get insertion order status for pin order id <code>pin_order_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SSIOInsertionOrderStatusResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status",
        produces = { "application/json" }
    )
    
    default ResponseEntity<SSIOInsertionOrderStatusResponse> ssioInsertionOrdersStatusGetByPinOrderId(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "pin_order_id", description = "The pin order id associated with the ssio insertion order", required = true, in = ParameterIn.PATH) @PathVariable("pin_order_id") String pinOrderId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"creation_time\" : \"2017-06-21T23:11:11.000Z\", \"pin_order_id\" : \"0Q01N0000015hekSAB\", \"status\" : \"Approved\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/ssio/order_lines : Get Salesforce order lines by ad account id.
     * Get Salesforce order lines for account id &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param pinOrderId The pin order id associated with the ssio insertino order (optional)
     * @return Success (status code 200)
     *         or Invalid request parameter. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "ssioOrderLinesGetByAdAccount",
        summary = "Get Salesforce order lines by ad account id.",
        description = "Get Salesforce order lines for account id <code>ad_account_id</code>. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.",
        tags = { "billing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SsioOrderLinesGetByAdAccount200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request parameter.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/ssio/order_lines",
        produces = { "application/json" }
    )
    
    default ResponseEntity<SsioOrderLinesGetByAdAccount200Response> ssioOrderLinesGetByAdAccount(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "pin_order_id", description = "The pin order id associated with the ssio insertino order", in = ParameterIn.QUERY) @Valid @RequestParam(value = "pin_order_id", required = false) String pinOrderId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"end_date\" : \"2020-10-05\", \"pmp_name\" : \"pmp_name\", \"salesforce_order_line_id\" : \"salesforce_order_line_id\", \"billing_contact_firstname\" : \"Mary\", \"ads_manager_order_line_id\" : \"ads_manager_order_line_id\", \"currency_info\" : \"USD\", \"bill_to_company_name\" : \"Home Depot Inc.\", \"billing_contact_email\" : \"mail@test.com\", \"estimated_monthly_spend\" : 0.8008281904610115, \"media_contact_email\" : \"mail@test.com\", \"billing_contact_lastname\" : \"Smith\", \"order_name\" : \"order_name\", \"agency_link\" : \"\", \"po_number\" : \"po_number\", \"accepted_terms_id\" : \"accepted_terms_id\", \"accepted_terms_time\" : \"2020-10-06T13:07:04.000Z\", \"pin_order_id\" : \"pin_order_id\", \"media_contact_lastname\" : \"Doe\", \"last_modified_date_time\" : \"2020-10-06T13:07:04.000Z\", \"start_date\" : \"2018-03-01\", \"media_contact_firstname\" : \"John\", \"budget_amount\" : 5000000 }, { \"end_date\" : \"2020-10-05\", \"pmp_name\" : \"pmp_name\", \"salesforce_order_line_id\" : \"salesforce_order_line_id\", \"billing_contact_firstname\" : \"Mary\", \"ads_manager_order_line_id\" : \"ads_manager_order_line_id\", \"currency_info\" : \"USD\", \"bill_to_company_name\" : \"Home Depot Inc.\", \"billing_contact_email\" : \"mail@test.com\", \"estimated_monthly_spend\" : 0.8008281904610115, \"media_contact_email\" : \"mail@test.com\", \"billing_contact_lastname\" : \"Smith\", \"order_name\" : \"order_name\", \"agency_link\" : \"\", \"po_number\" : \"po_number\", \"accepted_terms_id\" : \"accepted_terms_id\", \"accepted_terms_time\" : \"2020-10-06T13:07:04.000Z\", \"pin_order_id\" : \"pin_order_id\", \"media_contact_lastname\" : \"Doe\", \"last_modified_date_time\" : \"2020-10-06T13:07:04.000Z\", \"start_date\" : \"2018-03-01\", \"media_contact_firstname\" : \"John\", \"budget_amount\" : 5000000 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /ad_accounts/{ad_account_id}/targeting_templates : Create targeting templates
     * &lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;  &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param targetingTemplateCreate targeting template creation entity (required)
     * @return Success (status code 200)
     *         or Invalid ad account id. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "targetingTemplateCreate",
        summary = "Create targeting templates",
        description = "<p>Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords & interest, demographics, and placements to use more than once during the campaign creation process.</p>  <p>Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.</p>",
        tags = { "targeting_template" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = TargetingTemplateGetResponseData.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account id.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/ad_accounts/{ad_account_id}/targeting_templates",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<TargetingTemplateGetResponseData> targetingTemplateCreate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "TargetingTemplateCreate", description = "targeting template creation entity", required = true) @Valid @RequestBody TargetingTemplateCreate targetingTemplateCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"sizing\" : { \"reach_estimate\" : { \"estimate\" : 63492000, \"lower_bound\" : 47619000, \"upper_bound\" : 79365000 } }, \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"keywords\" : [ { \"value\" : \"cats\", \"match_type\" : \"EXACT_NEGATIVE\" } ], \"auto_targeting_enabled\" : true, \"tracking_urls\" : { \"impression\" : [ \"URL1\", \"URL2\" ], \"click\" : [ \"URL1\", \"URL2\" ], \"engagement\" : [ \"URL1\", \"URL2\" ], \"buyable_button\" : [ \"URL1\", \"URL2\" ], \"audience_verification\" : [ \"URL1\", \"URL2\" ] }, \"ad_account_id\" : \"549755885175\", \"targeting_attributes\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"valid\" : true, \"name\" : \"Gaming\", \"id\" : \"643\", \"placement_group\" : \"ALL\", \"status\" : \"ACTIVE\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/targeting_templates : List targeting templates
     * Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param includeSizing Include audience sizing in result or not (optional, default to false)
     * @param searchQuery Search keyword for targeting templates (optional)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Invalid ad account id. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "targetingTemplateList",
        summary = "List targeting templates",
        description = "Get a list of the targeting templates in the specified <code>ad_account_id</code>",
        tags = { "targeting_template" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = TargetingTemplateList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account id.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/targeting_templates",
        produces = { "application/json" }
    )
    
    default ResponseEntity<TargetingTemplateList200Response> targetingTemplateList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "include_sizing", description = "Include audience sizing in result or not", in = ParameterIn.QUERY) @Valid @RequestParam(value = "include_sizing", required = false, defaultValue = "false") Boolean includeSizing,
        @Parameter(name = "search_query", description = "Search keyword for targeting templates", in = ParameterIn.QUERY) @Valid @RequestParam(value = "search_query", required = false) String searchQuery,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"targeting_attributes\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"sizing\" : { \"reach_estimate\" : { \"estimate\" : 63492000, \"lower_bound\" : 47619000, \"upper_bound\" : 79365000 } }, \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"keywords\" : [ { \"value\" : \"cats\", \"match_type\" : \"EXACT_NEGATIVE\" } ], \"name\" : \"Gaming\", \"id\" : \"643\", \"auto_targeting_enabled\" : true, \"placement_group\" : \"ALL\", \"tracking_urls\" : { \"impression\" : [ \"URL1\", \"URL2\" ], \"click\" : [ \"URL1\", \"URL2\" ], \"engagement\" : [ \"URL1\", \"URL2\" ], \"buyable_button\" : [ \"URL1\", \"URL2\" ], \"audience_verification\" : [ \"URL1\", \"URL2\" ] }, \"ad_account_id\" : \"549755885175\", \"status\" : \"ACTIVE\" }, { \"targeting_attributes\" : { \"GEO\" : [ \"GEO\", \"GEO\" ], \"LOCATION\" : [ \"LOCATION\", \"LOCATION\" ], \"LOCALE\" : [ \"LOCALE\", \"LOCALE\" ], \"AGE_BUCKET\" : [ \"35-44\", \"50-54\" ], \"AUDIENCE_INCLUDE\" : [ \"AUDIENCE_INCLUDE\", \"AUDIENCE_INCLUDE\" ], \"SHOPPING_RETARGETING\" : [ { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] }, { \"lookback_window\" : 30, \"exclusion_window\" : 14, \"tag_types\" : [ 0, 6 ] } ], \"GENDER\" : [ \"unknown\", \"unknown\" ], \"TARGETING_STRATEGY\" : [ \"CHOOSE_YOUR_OWN\", \"CHOOSE_YOUR_OWN\" ], \"APPTYPE\" : [ \"ipad\", \"iphone\" ], \"AUDIENCE_EXCLUDE\" : [ \"AUDIENCE_EXCLUDE\", \"AUDIENCE_EXCLUDE\" ], \"INTEREST\" : [ \"INTEREST\", \"INTEREST\" ] }, \"sizing\" : { \"reach_estimate\" : { \"estimate\" : 63492000, \"lower_bound\" : 47619000, \"upper_bound\" : 79365000 } }, \"created_time\" : 1432744744, \"updated_time\" : 1432744744, \"keywords\" : [ { \"value\" : \"cats\", \"match_type\" : \"EXACT_NEGATIVE\" } ], \"name\" : \"Gaming\", \"id\" : \"643\", \"auto_targeting_enabled\" : true, \"placement_group\" : \"ALL\", \"tracking_urls\" : { \"impression\" : [ \"URL1\", \"URL2\" ], \"click\" : [ \"URL1\", \"URL2\" ], \"engagement\" : [ \"URL1\", \"URL2\" ], \"buyable_button\" : [ \"URL1\", \"URL2\" ], \"audience_verification\" : [ \"URL1\", \"URL2\" ] }, \"ad_account_id\" : \"549755885175\", \"status\" : \"ACTIVE\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/targeting_templates : Update targeting templates
     * &lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param targetingTemplateUpdateRequest Operation type and targeting template ID (required)
     * @return Success (status code 200)
     *         or Invalid ad account id. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "targetingTemplateUpdate",
        summary = "Update targeting templates",
        description = "<p>Update the targeting template given advertiser ID and targeting template ID</p>",
        tags = { "targeting_template" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success"),
            @ApiResponse(responseCode = "400", description = "Invalid ad account id.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/targeting_templates",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> targetingTemplateUpdate(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "TargetingTemplateUpdateRequest", description = "Operation type and targeting template ID", required = true) @Valid @RequestBody TargetingTemplateUpdateRequest targetingTemplateUpdateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/templates : List templates
     * Gets all Templates associated with an ad account ID.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     * @param order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     * @param bookmark Cursor used to fetch the next page of items (optional)
     * @return Success (status code 200)
     *         or Invalid ad account template parameters. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "templatesList",
        summary = "List templates",
        description = "Gets all Templates associated with an ad account ID.",
        tags = { "ad_accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = TemplatesList200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account template parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/templates",
        produces = { "application/json" }
    )
    
    default ResponseEntity<TemplatesList200Response> templatesList(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Min(1) @Max(250) @Parameter(name = "page_size", description = "Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false, defaultValue = "25") Integer pageSize,
        @Parameter(name = "order", description = "The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "order", required = false) String order,
        @Parameter(name = "bookmark", description = "Cursor used to fetch the next page of items", in = ParameterIn.QUERY) @Valid @RequestParam(value = "bookmark", required = false) String bookmark
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bookmark\" : \"bookmark\", \"items\" : [ { \"updated_time\" : 1432744744, \"ad_account_ids\" : [ \"547664674848\" ], \"report_level\" : \"CAMPAIGN\", \"report_format\" : \"JSON\", \"view_window_days\" : 7, \"columns\" : [ \"SPEND_IN_DOLLAR\" ], \"click_window_days\" : 7, \"ingestion_sources\" : [ \"CONVERSIONS_API\", \"CONVERSIONS_API\" ], \"type\" : \"BULK\", \"conversion_report_time_type\" : \"TIME_OF_AD_ACTION\", \"ad_account_id\" : \"547664674848\", \"is_deleted\" : false, \"id\" : \"6739202847590\", \"is_scheduled\" : true, \"custom_column_ids\" : [ \"1597252063\" ], \"date_range\" : { \"absolute_date_range\" : { \"end_date\" : 6.027456183070403, \"type\" : \"absolute\", \"start_date\" : 0.8008281904610115 }, \"relative_date_range\" : { \"end_days_in_past\" : 7, \"type\" : \"relative\", \"start_days_in_past\" : 14 }, \"dynamic_date_range\" : { \"range\" : \"YEAR_TO_DATE\", \"type\" : \"dynamic\" } }, \"is_owned_by_user\" : true, \"report_start_relative_days_in_past\" : 7, \"report_end_relative_days_in_past\" : 7, \"user_id\" : \"784762938748396\", \"granularity\" : \"TOTAL\", \"filters_json\" : \"[{\\"field\\": \\"SPEND_IN_DOLLAR\\", \\"operator\\": \\"=\\", \\"value\\": 100}]\", \"creation_source\" : \"ADS_MANAGER_REPORT_BUILDER\", \"name\" : \"Week over week spend\", \"engagement_window_days\" : 7 }, { \"updated_time\" : 1432744744, \"ad_account_ids\" : [ \"547664674848\" ], \"report_level\" : \"CAMPAIGN\", \"report_format\" : \"JSON\", \"view_window_days\" : 7, \"columns\" : [ \"SPEND_IN_DOLLAR\" ], \"click_window_days\" : 7, \"ingestion_sources\" : [ \"CONVERSIONS_API\", \"CONVERSIONS_API\" ], \"type\" : \"BULK\", \"conversion_report_time_type\" : \"TIME_OF_AD_ACTION\", \"ad_account_id\" : \"547664674848\", \"is_deleted\" : false, \"id\" : \"6739202847590\", \"is_scheduled\" : true, \"custom_column_ids\" : [ \"1597252063\" ], \"date_range\" : { \"absolute_date_range\" : { \"end_date\" : 6.027456183070403, \"type\" : \"absolute\", \"start_date\" : 0.8008281904610115 }, \"relative_date_range\" : { \"end_days_in_past\" : 7, \"type\" : \"relative\", \"start_days_in_past\" : 14 }, \"dynamic_date_range\" : { \"range\" : \"YEAR_TO_DATE\", \"type\" : \"dynamic\" } }, \"is_owned_by_user\" : true, \"report_start_relative_days_in_past\" : 7, \"report_end_relative_days_in_past\" : 7, \"user_id\" : \"784762938748396\", \"granularity\" : \"TOTAL\", \"filters_json\" : \"[{\\"field\\": \\"SPEND_IN_DOLLAR\\", \\"operator\\": \\"=\\", \\"value\\": 100}]\", \"creation_source\" : \"ADS_MANAGER_REPORT_BUILDER\", \"name\" : \"Week over week spend\", \"engagement_window_days\" : 7 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /ad_accounts/{ad_account_id}/terms_of_service : Get terms of service
     * Get the text of the terms of service and see whether the advertiser has accepted the terms of service.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param includeHtml Return HTML in TOS text. (optional, default to false)
     * @param tosType Request type. (optional)
     * @return Success (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "termsOfServiceGet",
        summary = "Get terms of service",
        description = "Get the text of the terms of service and see whether the advertiser has accepted the terms of service.",
        tags = { "terms_of_service" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = TermsOfService.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:read" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ad_accounts/{ad_account_id}/terms_of_service",
        produces = { "application/json" }
    )
    
    default ResponseEntity<TermsOfService> termsOfServiceGet(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "include_html", description = "Return HTML in TOS text.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "include_html", required = false, defaultValue = "false") Boolean includeHtml,
        @Parameter(name = "tos_type", description = "Request type.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "tos_type", required = false) String tosType
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"has_accepted\" : true, \"html\" : \"example test\", \"id\" : \"2650449554526\", \"ad_account_id\" : \"549755885175\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/audiences/ad_accounts/shared : Update audience sharing between ad accounts
     * From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/create-and-manage-accounts&#39;&gt;Pinterest Business Hierarchy&lt;/a&gt; as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param sharedAudience  (required)
     * @return Success (status code 200)
     *         or Invalid ad account id. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "updateAdAccountToAdAccountSharedAudience",
        summary = "Update audience sharing between ad accounts",
        description = "From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same <a href='https://help.pinterest.com/en/business/article/create-and-manage-accounts'>Pinterest Business Hierarchy</a> as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.",
        tags = { "audience_sharing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SharedAudienceResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account id.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<SharedAudienceResponse> updateAdAccountToAdAccountSharedAudience(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "SharedAudience", description = "", required = true) @Valid @RequestBody SharedAudience sharedAudience
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"recipient_account_ids\" : [ \"549755885175\" ], \"permissions\" : [ \"RESOURCE_PINNER_LIST_READER\", \"RESOURCE_PINNER_LIST_OWNER\" ], \"audience_id\" : \"2542621871096\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /ad_accounts/{ad_account_id}/audiences/businesses/shared : Update audience sharing from an ad account to businesses
     * From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
     *
     * @param adAccountId Unique identifier of an ad account. (required)
     * @param businessSharedAudience  (required)
     * @return Success (status code 200)
     *         or Invalid ad account id. (status code 400)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "updateAdAccountToBusinessSharedAudience",
        summary = "Update audience sharing from an ad account to businesses",
        description = "From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.",
        tags = { "audience_sharing" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BusinessSharedAudienceResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid ad account id.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "default", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "pinterest_oauth2", scopes={ "ads:write" })
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/ad_accounts/{ad_account_id}/audiences/businesses/shared",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<BusinessSharedAudienceResponse> updateAdAccountToBusinessSharedAudience(
        @Pattern(regexp = "^\\d+$") @Size(max = 18) @Parameter(name = "ad_account_id", description = "Unique identifier of an ad account.", required = true, in = ParameterIn.PATH) @PathVariable("ad_account_id") String adAccountId,
        @Parameter(name = "BusinessSharedAudience", description = "", required = true) @Valid @RequestBody BusinessSharedAudience businessSharedAudience
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"recipient_business_ids\" : [ \"549755885175\" ], \"permissions\" : [ \"RESOURCE_PINNER_LIST_READER\", \"RESOURCE_PINNER_LIST_OWNER\" ], \"audience_id\" : \"2542621871096\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
