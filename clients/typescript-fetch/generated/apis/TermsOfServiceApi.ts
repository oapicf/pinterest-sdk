/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TermsOfService,
} from '../models/index';
import {
    TermsOfServiceFromJSON,
    TermsOfServiceToJSON,
} from '../models/index';

export interface TermsOfServiceGetRequest {
    adAccountId: string;
    includeHtml?: boolean;
    tosType?: string;
}

/**
 * 
 */
export class TermsOfServiceApi extends runtime.BaseAPI {

    /**
     * Get the text of the terms of service and see whether the advertiser has accepted the terms of service.
     * Get terms of service
     */
    async termsOfServiceGetRaw(requestParameters: TermsOfServiceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TermsOfService>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling termsOfServiceGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['includeHtml'] != null) {
            queryParameters['include_html'] = requestParameters['includeHtml'];
        }

        if (requestParameters['tosType'] != null) {
            queryParameters['tos_type'] = requestParameters['tosType'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/terms_of_service`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TermsOfServiceFromJSON(jsonValue));
    }

    /**
     * Get the text of the terms of service and see whether the advertiser has accepted the terms of service.
     * Get terms of service
     */
    async termsOfServiceGet(requestParameters: TermsOfServiceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TermsOfService> {
        const response = await this.termsOfServiceGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
