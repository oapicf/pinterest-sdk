/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ConversionEventResponse,
  ConversionTagCreate,
  ConversionTagListResponse,
  ConversionTagResponse,
  PageVisitConversionTagsGet200Response,
} from '../models/index';
import {
    ConversionEventResponseFromJSON,
    ConversionEventResponseToJSON,
    ConversionTagCreateFromJSON,
    ConversionTagCreateToJSON,
    ConversionTagListResponseFromJSON,
    ConversionTagListResponseToJSON,
    ConversionTagResponseFromJSON,
    ConversionTagResponseToJSON,
    PageVisitConversionTagsGet200ResponseFromJSON,
    PageVisitConversionTagsGet200ResponseToJSON,
} from '../models/index';

export interface ConversionTagsCreateRequest {
    adAccountId: string;
    conversionTagCreate: ConversionTagCreate;
}

export interface ConversionTagsGetRequest {
    adAccountId: string;
    conversionTagId: string;
}

export interface ConversionTagsListRequest {
    adAccountId: string;
    filterDeleted?: boolean;
}

export interface OcpmEligibleConversionTagsGetRequest {
    adAccountId: string;
}

export interface PageVisitConversionTagsGetRequest {
    adAccountId: string;
    pageSize?: number;
    order?: PageVisitConversionTagsGetOrderEnum;
    bookmark?: string;
}

/**
 * 
 */
export class ConversionTagsApi extends runtime.BaseAPI {

    /**
     * Create a conversion tag, also known as <a href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\" target=\"_blank\">Pinterest tag</a>, with the option to enable enhanced match.<p/> The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account\'s ad on Pinterest. The advertiser needs to customize this tag to track conversions.<p/> For more information, see:<p/> <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\">Set up the Pinterest tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/\">Pinterest Tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/#enhanced-match\">Enhanced match</a>
     * Create conversion tag
     */
    async conversionTagsCreateRaw(requestParameters: ConversionTagsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConversionTagResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling conversionTagsCreate().'
            );
        }

        if (requestParameters['conversionTagCreate'] == null) {
            throw new runtime.RequiredError(
                'conversionTagCreate',
                'Required parameter "conversionTagCreate" was null or undefined when calling conversionTagsCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:write"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/conversion_tags`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ConversionTagCreateToJSON(requestParameters['conversionTagCreate']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConversionTagResponseFromJSON(jsonValue));
    }

    /**
     * Create a conversion tag, also known as <a href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\" target=\"_blank\">Pinterest tag</a>, with the option to enable enhanced match.<p/> The Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account\'s ad on Pinterest. The advertiser needs to customize this tag to track conversions.<p/> For more information, see:<p/> <a class=\"reference external\" href=\"https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag\">Set up the Pinterest tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/\">Pinterest Tag</a><p/> <a class=\"reference external\" href=\"/docs/api-features/pinterest-tag/#enhanced-match\">Enhanced match</a>
     * Create conversion tag
     */
    async conversionTagsCreate(requestParameters: ConversionTagsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConversionTagResponse> {
        const response = await this.conversionTagsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get information about an existing conversion tag.
     * Get conversion tag
     */
    async conversionTagsGetRaw(requestParameters: ConversionTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConversionTagResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling conversionTagsGet().'
            );
        }

        if (requestParameters['conversionTagId'] == null) {
            throw new runtime.RequiredError(
                'conversionTagId',
                'Required parameter "conversionTagId" was null or undefined when calling conversionTagsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))).replace(`{${"conversion_tag_id"}}`, encodeURIComponent(String(requestParameters['conversionTagId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConversionTagResponseFromJSON(jsonValue));
    }

    /**
     * Get information about an existing conversion tag.
     * Get conversion tag
     */
    async conversionTagsGet(requestParameters: ConversionTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConversionTagResponse> {
        const response = await this.conversionTagsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List conversion tags associated with an ad account.
     * Get conversion tags
     */
    async conversionTagsListRaw(requestParameters: ConversionTagsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConversionTagListResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling conversionTagsList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['filterDeleted'] != null) {
            queryParameters['filter_deleted'] = requestParameters['filterDeleted'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/conversion_tags`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConversionTagListResponseFromJSON(jsonValue));
    }

    /**
     * List conversion tags associated with an ad account.
     * Get conversion tags
     */
    async conversionTagsList(requestParameters: ConversionTagsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConversionTagListResponse> {
        const response = await this.conversionTagsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Ocpm eligible conversion tag events for an ad account.
     * Get Ocpm eligible conversion tags
     */
    async ocpmEligibleConversionTagsGetRaw(requestParameters: OcpmEligibleConversionTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: Array<ConversionEventResponse>; }>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ocpmEligibleConversionTagsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get Ocpm eligible conversion tag events for an ad account.
     * Get Ocpm eligible conversion tags
     */
    async ocpmEligibleConversionTagsGet(requestParameters: OcpmEligibleConversionTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: Array<ConversionEventResponse>; }> {
        const response = await this.ocpmEligibleConversionTagsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get all page visit conversion tag events for an ad account.
     * Get page visit conversion tags
     */
    async pageVisitConversionTagsGetRaw(requestParameters: PageVisitConversionTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageVisitConversionTagsGet200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling pageVisitConversionTagsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/conversion_tags/page_visit`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PageVisitConversionTagsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get all page visit conversion tag events for an ad account.
     * Get page visit conversion tags
     */
    async pageVisitConversionTagsGet(requestParameters: PageVisitConversionTagsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageVisitConversionTagsGet200Response> {
        const response = await this.pageVisitConversionTagsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const PageVisitConversionTagsGetOrderEnum = {
    Ascending: 'ASCENDING',
    Descending: 'DESCENDING'
} as const;
export type PageVisitConversionTagsGetOrderEnum = typeof PageVisitConversionTagsGetOrderEnum[keyof typeof PageVisitConversionTagsGetOrderEnum];
