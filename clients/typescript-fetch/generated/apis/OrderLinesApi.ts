/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  OrderLine,
  OrderLinesList200Response,
} from '../models/index';
import {
    OrderLineFromJSON,
    OrderLineToJSON,
    OrderLinesList200ResponseFromJSON,
    OrderLinesList200ResponseToJSON,
} from '../models/index';

export interface OrderLinesGetRequest {
    adAccountId: string;
    orderLineId: string;
}

export interface OrderLinesListRequest {
    adAccountId: string;
    pageSize?: number;
    order?: OrderLinesListOrderEnum;
    bookmark?: string;
}

/**
 * 
 */
export class OrderLinesApi extends runtime.BaseAPI {

    /**
     * Get a specific existing order line associated with an ad account.
     * Get order line
     */
    async orderLinesGetRaw(requestParameters: OrderLinesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderLine>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling orderLinesGet().'
            );
        }

        if (requestParameters['orderLineId'] == null) {
            throw new runtime.RequiredError(
                'orderLineId',
                'Required parameter "orderLineId" was null or undefined when calling orderLinesGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/order_lines/{order_line_id}`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))).replace(`{${"order_line_id"}}`, encodeURIComponent(String(requestParameters['orderLineId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OrderLineFromJSON(jsonValue));
    }

    /**
     * Get a specific existing order line associated with an ad account.
     * Get order line
     */
    async orderLinesGet(requestParameters: OrderLinesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderLine> {
        const response = await this.orderLinesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List existing order lines associated with an ad account.
     * Get order lines
     */
    async orderLinesListRaw(requestParameters: OrderLinesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderLinesList200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling orderLinesList().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/order_lines`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OrderLinesList200ResponseFromJSON(jsonValue));
    }

    /**
     * List existing order lines associated with an ad account.
     * Get order lines
     */
    async orderLinesList(requestParameters: OrderLinesListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderLinesList200Response> {
        const response = await this.orderLinesListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const OrderLinesListOrderEnum = {
    Ascending: 'ASCENDING',
    Descending: 'DESCENDING'
} as const;
export type OrderLinesListOrderEnum = typeof OrderLinesListOrderEnum[keyof typeof OrderLinesListOrderEnum];
