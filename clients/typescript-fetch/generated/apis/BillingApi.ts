/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AdsCreditRedeemRequest,
  AdsCreditRedeemResponse,
  AdsCreditsDiscountsGet200Response,
  BillingProfilesGet200Response,
  SSIOAccountResponse,
  SSIOCreateInsertionOrderRequest,
  SSIOCreateInsertionOrderResponse,
  SSIOEditInsertionOrderRequest,
  SSIOEditInsertionOrderResponse,
  SSIOInsertionOrderStatusResponse,
  SsioInsertionOrdersStatusGetByAdAccount200Response,
  SsioOrderLinesGetByAdAccount200Response,
} from '../models/index';
import {
    AdsCreditRedeemRequestFromJSON,
    AdsCreditRedeemRequestToJSON,
    AdsCreditRedeemResponseFromJSON,
    AdsCreditRedeemResponseToJSON,
    AdsCreditsDiscountsGet200ResponseFromJSON,
    AdsCreditsDiscountsGet200ResponseToJSON,
    BillingProfilesGet200ResponseFromJSON,
    BillingProfilesGet200ResponseToJSON,
    SSIOAccountResponseFromJSON,
    SSIOAccountResponseToJSON,
    SSIOCreateInsertionOrderRequestFromJSON,
    SSIOCreateInsertionOrderRequestToJSON,
    SSIOCreateInsertionOrderResponseFromJSON,
    SSIOCreateInsertionOrderResponseToJSON,
    SSIOEditInsertionOrderRequestFromJSON,
    SSIOEditInsertionOrderRequestToJSON,
    SSIOEditInsertionOrderResponseFromJSON,
    SSIOEditInsertionOrderResponseToJSON,
    SSIOInsertionOrderStatusResponseFromJSON,
    SSIOInsertionOrderStatusResponseToJSON,
    SsioInsertionOrdersStatusGetByAdAccount200ResponseFromJSON,
    SsioInsertionOrdersStatusGetByAdAccount200ResponseToJSON,
    SsioOrderLinesGetByAdAccount200ResponseFromJSON,
    SsioOrderLinesGetByAdAccount200ResponseToJSON,
} from '../models/index';

export interface AdsCreditRedeemOperationRequest {
    adAccountId: string;
    adsCreditRedeemRequest: AdsCreditRedeemRequest;
}

export interface AdsCreditsDiscountsGetRequest {
    adAccountId: string;
    bookmark?: string;
    pageSize?: number;
}

export interface BillingProfilesGetRequest {
    adAccountId: string;
    isActive: boolean;
    bookmark?: string;
    pageSize?: number;
}

export interface SsioAccountsGetRequest {
    adAccountId: string;
}

export interface SsioInsertionOrderCreateRequest {
    adAccountId: string;
    sSIOCreateInsertionOrderRequest: SSIOCreateInsertionOrderRequest;
}

export interface SsioInsertionOrderEditRequest {
    adAccountId: string;
    sSIOEditInsertionOrderRequest: SSIOEditInsertionOrderRequest;
}

export interface SsioInsertionOrdersStatusGetByAdAccountRequest {
    adAccountId: string;
    bookmark?: string;
    pageSize?: number;
}

export interface SsioInsertionOrdersStatusGetByPinOrderIdRequest {
    adAccountId: string;
    pinOrderId: string;
}

export interface SsioOrderLinesGetByAdAccountRequest {
    adAccountId: string;
    bookmark?: string;
    pageSize?: number;
    pinOrderId?: string;
}

/**
 * 
 */
export class BillingApi extends runtime.BaseAPI {

    /**
     * Redeem ads credit on behalf of the ad account id and apply it towards billing.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Redeem ad credits
     */
    async adsCreditRedeemRaw(requestParameters: AdsCreditRedeemOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdsCreditRedeemResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling adsCreditRedeem().'
            );
        }

        if (requestParameters['adsCreditRedeemRequest'] == null) {
            throw new runtime.RequiredError(
                'adsCreditRedeemRequest',
                'Required parameter "adsCreditRedeemRequest" was null or undefined when calling adsCreditRedeem().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:write", "billing:write"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ads_credit/redeem`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AdsCreditRedeemRequestToJSON(requestParameters['adsCreditRedeemRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AdsCreditRedeemResponseFromJSON(jsonValue));
    }

    /**
     * Redeem ads credit on behalf of the ad account id and apply it towards billing.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Redeem ad credits
     */
    async adsCreditRedeem(requestParameters: AdsCreditRedeemOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdsCreditRedeemResponse> {
        const response = await this.adsCreditRedeemRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the list of discounts applied to the account.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get ads credit discounts
     */
    async adsCreditsDiscountsGetRaw(requestParameters: AdsCreditsDiscountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdsCreditsDiscountsGet200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling adsCreditsDiscountsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read", "billing:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ads_credit/discounts`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AdsCreditsDiscountsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the list of discounts applied to the account.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get ads credit discounts
     */
    async adsCreditsDiscountsGet(requestParameters: AdsCreditsDiscountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdsCreditsDiscountsGet200Response> {
        const response = await this.adsCreditsDiscountsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get billing profiles in the advertiser account.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get billing profiles
     */
    async billingProfilesGetRaw(requestParameters: BillingProfilesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingProfilesGet200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling billingProfilesGet().'
            );
        }

        if (requestParameters['isActive'] == null) {
            throw new runtime.RequiredError(
                'isActive',
                'Required parameter "isActive" was null or undefined when calling billingProfilesGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['isActive'] != null) {
            queryParameters['is_active'] = requestParameters['isActive'];
        }

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read", "billing:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/billing_profiles`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BillingProfilesGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Get billing profiles in the advertiser account.  <strong>This endpoint might not be available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>
     * Get billing profiles
     */
    async billingProfilesGet(requestParameters: BillingProfilesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingProfilesGet200Response> {
        const response = await this.billingProfilesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get Salesforce account details including bill-to information.
     */
    async ssioAccountsGetRaw(requestParameters: SsioAccountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SSIOAccountResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ssioAccountsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ssio/accounts`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SSIOAccountResponseFromJSON(jsonValue));
    }

    /**
     * Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get Salesforce account details including bill-to information.
     */
    async ssioAccountsGet(requestParameters: SsioAccountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SSIOAccountResponse> {
        const response = await this.ssioAccountsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create insertion order through SSIO for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Create insertion order through SSIO.
     */
    async ssioInsertionOrderCreateRaw(requestParameters: SsioInsertionOrderCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SSIOCreateInsertionOrderResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ssioInsertionOrderCreate().'
            );
        }

        if (requestParameters['sSIOCreateInsertionOrderRequest'] == null) {
            throw new runtime.RequiredError(
                'sSIOCreateInsertionOrderRequest',
                'Required parameter "sSIOCreateInsertionOrderRequest" was null or undefined when calling ssioInsertionOrderCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:write"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ssio/insertion_orders`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SSIOCreateInsertionOrderRequestToJSON(requestParameters['sSIOCreateInsertionOrderRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SSIOCreateInsertionOrderResponseFromJSON(jsonValue));
    }

    /**
     * Create insertion order through SSIO for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Create insertion order through SSIO.
     */
    async ssioInsertionOrderCreate(requestParameters: SsioInsertionOrderCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SSIOCreateInsertionOrderResponse> {
        const response = await this.ssioInsertionOrderCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Edit insertion order through SSIO for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Edit insertion order through SSIO.
     */
    async ssioInsertionOrderEditRaw(requestParameters: SsioInsertionOrderEditRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SSIOEditInsertionOrderResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ssioInsertionOrderEdit().'
            );
        }

        if (requestParameters['sSIOEditInsertionOrderRequest'] == null) {
            throw new runtime.RequiredError(
                'sSIOEditInsertionOrderRequest',
                'Required parameter "sSIOEditInsertionOrderRequest" was null or undefined when calling ssioInsertionOrderEdit().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:write"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ssio/insertion_orders`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: SSIOEditInsertionOrderRequestToJSON(requestParameters['sSIOEditInsertionOrderRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SSIOEditInsertionOrderResponseFromJSON(jsonValue));
    }

    /**
     * Edit insertion order through SSIO for <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Edit insertion order through SSIO.
     */
    async ssioInsertionOrderEdit(requestParameters: SsioInsertionOrderEditRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SSIOEditInsertionOrderResponse> {
        const response = await this.ssioInsertionOrderEditRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get insertion order status for account id <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get insertion order status by ad account id.
     */
    async ssioInsertionOrdersStatusGetByAdAccountRaw(requestParameters: SsioInsertionOrdersStatusGetByAdAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SsioInsertionOrdersStatusGetByAdAccount200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ssioInsertionOrdersStatusGetByAdAccount().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ssio/insertion_orders/status`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SsioInsertionOrdersStatusGetByAdAccount200ResponseFromJSON(jsonValue));
    }

    /**
     * Get insertion order status for account id <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get insertion order status by ad account id.
     */
    async ssioInsertionOrdersStatusGetByAdAccount(requestParameters: SsioInsertionOrdersStatusGetByAdAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SsioInsertionOrdersStatusGetByAdAccount200Response> {
        const response = await this.ssioInsertionOrdersStatusGetByAdAccountRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get insertion order status for pin order id <code>pin_order_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get insertion order status by pin order id.
     */
    async ssioInsertionOrdersStatusGetByPinOrderIdRaw(requestParameters: SsioInsertionOrdersStatusGetByPinOrderIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SSIOInsertionOrderStatusResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ssioInsertionOrdersStatusGetByPinOrderId().'
            );
        }

        if (requestParameters['pinOrderId'] == null) {
            throw new runtime.RequiredError(
                'pinOrderId',
                'Required parameter "pinOrderId" was null or undefined when calling ssioInsertionOrdersStatusGetByPinOrderId().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))).replace(`{${"pin_order_id"}}`, encodeURIComponent(String(requestParameters['pinOrderId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SSIOInsertionOrderStatusResponseFromJSON(jsonValue));
    }

    /**
     * Get insertion order status for pin order id <code>pin_order_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get insertion order status by pin order id.
     */
    async ssioInsertionOrdersStatusGetByPinOrderId(requestParameters: SsioInsertionOrdersStatusGetByPinOrderIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SSIOInsertionOrderStatusResponse> {
        const response = await this.ssioInsertionOrdersStatusGetByPinOrderIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Salesforce order lines for account id <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get Salesforce order lines by ad account id.
     */
    async ssioOrderLinesGetByAdAccountRaw(requestParameters: SsioOrderLinesGetByAdAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SsioOrderLinesGetByAdAccount200Response>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling ssioOrderLinesGetByAdAccount().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['bookmark'] != null) {
            queryParameters['bookmark'] = requestParameters['bookmark'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['page_size'] = requestParameters['pageSize'];
        }

        if (requestParameters['pinOrderId'] != null) {
            queryParameters['pin_order_id'] = requestParameters['pinOrderId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/ssio/order_lines`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SsioOrderLinesGetByAdAccount200ResponseFromJSON(jsonValue));
    }

    /**
     * Get Salesforce order lines for account id <code>ad_account_id</code>. - The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Finance, Campaign.
     * Get Salesforce order lines by ad account id.
     */
    async ssioOrderLinesGetByAdAccount(requestParameters: SsioOrderLinesGetByAdAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SsioOrderLinesGetByAdAccount200Response> {
        const response = await this.ssioOrderLinesGetByAdAccountRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
