/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AudienceDefinitionResponse,
  AudienceInsightType,
  AudienceInsightsResponse,
} from '../models/index';
import {
    AudienceDefinitionResponseFromJSON,
    AudienceDefinitionResponseToJSON,
    AudienceInsightTypeFromJSON,
    AudienceInsightTypeToJSON,
    AudienceInsightsResponseFromJSON,
    AudienceInsightsResponseToJSON,
} from '../models/index';

export interface AudienceInsightsGetRequest {
    adAccountId: string;
    audienceInsightType: AudienceInsightType;
}

export interface AudienceInsightsScopeAndTypeGetRequest {
    adAccountId: string;
}

/**
 * 
 */
export class AudienceInsightsApi extends runtime.BaseAPI {

    /**
     * Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account\'s engaged audience on Pinterest, the ad account\'s total audience on Pinterest and Pinterest\'s total audience.<p/> <a href=\"https://help.pinterest.com/en/business/article/audience-insights\" target=\"_blank\">Learn more about Audience Insights</a>.
     * Get audience insights
     */
    async audienceInsightsGetRaw(requestParameters: AudienceInsightsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AudienceInsightsResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling audienceInsightsGet().'
            );
        }

        if (requestParameters['audienceInsightType'] == null) {
            throw new runtime.RequiredError(
                'audienceInsightType',
                'Required parameter "audienceInsightType" was null or undefined when calling audienceInsightsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['audienceInsightType'] != null) {
            queryParameters['audience_insight_type'] = requestParameters['audienceInsightType'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/audience_insights`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AudienceInsightsResponseFromJSON(jsonValue));
    }

    /**
     * Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account\'s engaged audience on Pinterest, the ad account\'s total audience on Pinterest and Pinterest\'s total audience.<p/> <a href=\"https://help.pinterest.com/en/business/article/audience-insights\" target=\"_blank\">Learn more about Audience Insights</a>.
     * Get audience insights
     */
    async audienceInsightsGet(requestParameters: AudienceInsightsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AudienceInsightsResponse> {
        const response = await this.audienceInsightsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.
     * Get audience insights scope and type
     */
    async audienceInsightsScopeAndTypeGetRaw(requestParameters: AudienceInsightsScopeAndTypeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AudienceDefinitionResponse>> {
        if (requestParameters['adAccountId'] == null) {
            throw new runtime.RequiredError(
                'adAccountId',
                'Required parameter "adAccountId" was null or undefined when calling audienceInsightsScopeAndTypeGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("pinterest_oauth2", ["ads:read"]);
        }

        const response = await this.request({
            path: `/ad_accounts/{ad_account_id}/insights/audiences`.replace(`{${"ad_account_id"}}`, encodeURIComponent(String(requestParameters['adAccountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AudienceDefinitionResponseFromJSON(jsonValue));
    }

    /**
     * Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.
     * Get audience insights scope and type
     */
    async audienceInsightsScopeAndTypeGet(requestParameters: AudienceInsightsScopeAndTypeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AudienceDefinitionResponse> {
        const response = await this.audienceInsightsScopeAndTypeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
