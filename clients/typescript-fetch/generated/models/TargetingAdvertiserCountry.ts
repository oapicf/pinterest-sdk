/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Advertiser's ISO two character country code.
 * @export
 */
export const TargetingAdvertiserCountry = {
    Us: 'US',
    Gb: 'GB',
    Ca: 'CA',
    Ie: 'IE',
    Au: 'AU',
    Nz: 'NZ',
    Fr: 'FR',
    Se: 'SE',
    Il: 'IL',
    De: 'DE',
    At: 'AT',
    It: 'IT',
    Es: 'ES',
    Nl: 'NL',
    Be: 'BE',
    Pt: 'PT',
    Ch: 'CH',
    Hk: 'HK',
    Jp: 'JP',
    Kr: 'KR',
    Sg: 'SG',
    No: 'NO',
    Dk: 'DK',
    Fi: 'FI',
    Cy: 'CY',
    Lu: 'LU',
    Mt: 'MT',
    Pl: 'PL',
    Ro: 'RO',
    Hu: 'HU',
    Cz: 'CZ',
    Gr: 'GR',
    Sk: 'SK',
    Br: 'BR',
    Mx: 'MX',
    Ar: 'AR',
    Cl: 'CL',
    Co: 'CO'
} as const;
export type TargetingAdvertiserCountry = typeof TargetingAdvertiserCountry[keyof typeof TargetingAdvertiserCountry];


export function instanceOfTargetingAdvertiserCountry(value: any): boolean {
    for (const key in TargetingAdvertiserCountry) {
        if (Object.prototype.hasOwnProperty.call(TargetingAdvertiserCountry, key)) {
            if (TargetingAdvertiserCountry[key as keyof typeof TargetingAdvertiserCountry] === value) {
                return true;
            }
        }
    }
    return false;
}

export function TargetingAdvertiserCountryFromJSON(json: any): TargetingAdvertiserCountry {
    return TargetingAdvertiserCountryFromJSONTyped(json, false);
}

export function TargetingAdvertiserCountryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetingAdvertiserCountry {
    return json as TargetingAdvertiserCountry;
}

export function TargetingAdvertiserCountryToJSON(value?: TargetingAdvertiserCountry | null): any {
    return value as any;
}

export function TargetingAdvertiserCountryToJSONTyped(value: any, ignoreDiscriminator: boolean): TargetingAdvertiserCountry {
    return value as TargetingAdvertiserCountry;
}

