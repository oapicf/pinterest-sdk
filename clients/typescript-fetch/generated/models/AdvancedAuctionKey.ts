/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Language } from './Language';
import {
    LanguageFromJSON,
    LanguageFromJSONTyped,
    LanguageToJSON,
    LanguageToJSONTyped,
} from './Language';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
    CountryToJSONTyped,
} from './Country';

/**
 * Object uniquely identifying a retail catalog item
 * @export
 * @interface AdvancedAuctionKey
 */
export interface AdvancedAuctionKey {
    /**
     * The catalog retail item id in the merchant namespace
     * @type {string}
     * @memberof AdvancedAuctionKey
     */
    itemId: string;
    /**
     * 
     * @type {Country}
     * @memberof AdvancedAuctionKey
     */
    country: Country;
    /**
     * 
     * @type {Language}
     * @memberof AdvancedAuctionKey
     */
    language: Language;
}



/**
 * Check if a given object implements the AdvancedAuctionKey interface.
 */
export function instanceOfAdvancedAuctionKey(value: object): value is AdvancedAuctionKey {
    if (!('itemId' in value) || value['itemId'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    return true;
}

export function AdvancedAuctionKeyFromJSON(json: any): AdvancedAuctionKey {
    return AdvancedAuctionKeyFromJSONTyped(json, false);
}

export function AdvancedAuctionKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionKey {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['item_id'],
        'country': CountryFromJSON(json['country']),
        'language': LanguageFromJSON(json['language']),
    };
}

  export function AdvancedAuctionKeyToJSON(json: any): AdvancedAuctionKey {
      return AdvancedAuctionKeyToJSONTyped(json, false);
  }

  export function AdvancedAuctionKeyToJSONTyped(value?: AdvancedAuctionKey | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item_id': value['itemId'],
        'country': CountryToJSON(value['country']),
        'language': LanguageToJSON(value['language']),
    };
}

