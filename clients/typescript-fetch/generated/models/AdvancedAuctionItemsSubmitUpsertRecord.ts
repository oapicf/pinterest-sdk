/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Language } from './Language';
import {
    LanguageFromJSON,
    LanguageFromJSONTyped,
    LanguageToJSON,
    LanguageToJSONTyped,
} from './Language';
import type { UpdateMaskBidOptionField } from './UpdateMaskBidOptionField';
import {
    UpdateMaskBidOptionFieldFromJSON,
    UpdateMaskBidOptionFieldFromJSONTyped,
    UpdateMaskBidOptionFieldToJSON,
    UpdateMaskBidOptionFieldToJSONTyped,
} from './UpdateMaskBidOptionField';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
    CountryToJSONTyped,
} from './Country';
import type { AdvancedAuctionBidOptions } from './AdvancedAuctionBidOptions';
import {
    AdvancedAuctionBidOptionsFromJSON,
    AdvancedAuctionBidOptionsFromJSONTyped,
    AdvancedAuctionBidOptionsToJSON,
    AdvancedAuctionBidOptionsToJSONTyped,
} from './AdvancedAuctionBidOptions';

/**
 * Object describing an item bid option upsert operation
 * @export
 * @interface AdvancedAuctionItemsSubmitUpsertRecord
 */
export interface AdvancedAuctionItemsSubmitUpsertRecord {
    /**
     * The catalog retail item id in the merchant namespace
     * @type {string}
     * @memberof AdvancedAuctionItemsSubmitUpsertRecord
     */
    itemId: string;
    /**
     * 
     * @type {Country}
     * @memberof AdvancedAuctionItemsSubmitUpsertRecord
     */
    country: Country;
    /**
     * 
     * @type {Language}
     * @memberof AdvancedAuctionItemsSubmitUpsertRecord
     */
    language: Language;
    /**
     * 
     * @type {AdvancedAuctionBidOptions}
     * @memberof AdvancedAuctionItemsSubmitUpsertRecord
     */
    bidOptions: AdvancedAuctionBidOptions;
    /**
     * The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
     * @type {Array<UpdateMaskBidOptionField>}
     * @memberof AdvancedAuctionItemsSubmitUpsertRecord
     */
    updateMask: Array<UpdateMaskBidOptionField> | null;
}



/**
 * Check if a given object implements the AdvancedAuctionItemsSubmitUpsertRecord interface.
 */
export function instanceOfAdvancedAuctionItemsSubmitUpsertRecord(value: object): value is AdvancedAuctionItemsSubmitUpsertRecord {
    if (!('itemId' in value) || value['itemId'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('bidOptions' in value) || value['bidOptions'] === undefined) return false;
    if (!('updateMask' in value) || value['updateMask'] === undefined) return false;
    return true;
}

export function AdvancedAuctionItemsSubmitUpsertRecordFromJSON(json: any): AdvancedAuctionItemsSubmitUpsertRecord {
    return AdvancedAuctionItemsSubmitUpsertRecordFromJSONTyped(json, false);
}

export function AdvancedAuctionItemsSubmitUpsertRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionItemsSubmitUpsertRecord {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['item_id'],
        'country': CountryFromJSON(json['country']),
        'language': LanguageFromJSON(json['language']),
        'bidOptions': AdvancedAuctionBidOptionsFromJSON(json['bid_options']),
        'updateMask': (json['update_mask'] == null ? null : (json['update_mask'] as Array<any>).map(UpdateMaskBidOptionFieldFromJSON)),
    };
}

  export function AdvancedAuctionItemsSubmitUpsertRecordToJSON(json: any): AdvancedAuctionItemsSubmitUpsertRecord {
      return AdvancedAuctionItemsSubmitUpsertRecordToJSONTyped(json, false);
  }

  export function AdvancedAuctionItemsSubmitUpsertRecordToJSONTyped(value?: AdvancedAuctionItemsSubmitUpsertRecord | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item_id': value['itemId'],
        'country': CountryToJSON(value['country']),
        'language': LanguageToJSON(value['language']),
        'bid_options': AdvancedAuctionBidOptionsToJSON(value['bidOptions']),
        'update_mask': (value['updateMask'] == null ? null : (value['updateMask'] as Array<any>).map(UpdateMaskBidOptionFieldToJSON)),
    };
}

