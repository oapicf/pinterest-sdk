/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CampaignSummaryStatus } from './CampaignSummaryStatus';
import {
    CampaignSummaryStatusFromJSON,
    CampaignSummaryStatusFromJSONTyped,
    CampaignSummaryStatusToJSON,
    CampaignSummaryStatusToJSONTyped,
} from './CampaignSummaryStatus';
import type { EntityStatus } from './EntityStatus';
import {
    EntityStatusFromJSON,
    EntityStatusFromJSONTyped,
    EntityStatusToJSON,
    EntityStatusToJSONTyped,
} from './EntityStatus';
import type { TrackingUrls } from './TrackingUrls';
import {
    TrackingUrlsFromJSON,
    TrackingUrlsFromJSONTyped,
    TrackingUrlsToJSON,
    TrackingUrlsToJSONTyped,
} from './TrackingUrls';
import type { ObjectiveType } from './ObjectiveType';
import {
    ObjectiveTypeFromJSON,
    ObjectiveTypeFromJSONTyped,
    ObjectiveTypeToJSON,
    ObjectiveTypeToJSONTyped,
} from './ObjectiveType';

/**
 * 
 * @export
 * @interface CampaignResponse
 */
export interface CampaignResponse {
    /**
     * Campaign ID.
     * @type {string}
     * @memberof CampaignResponse
     */
    id?: string;
    /**
     * Campaign's Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema.
     * @type {string}
     * @memberof CampaignResponse
     */
    adAccountId?: string;
    /**
     * Campaign name.
     * @type {string}
     * @memberof CampaignResponse
     */
    name?: string;
    /**
     * 
     * @type {EntityStatus}
     * @memberof CampaignResponse
     */
    status?: EntityStatus;
    /**
     * Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "daily_spend_cap" cannot be set at the same time.
     * @type {number}
     * @memberof CampaignResponse
     */
    lifetimeSpendCap?: number | null;
    /**
     * Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "lifetime_spend_cap" cannot be set at the same time.
     * @type {number}
     * @memberof CampaignResponse
     */
    dailySpendCap?: number | null;
    /**
     * Order line ID that appears on the invoice.
     * @type {string}
     * @memberof CampaignResponse
     */
    orderLineId?: string | null;
    /**
     * 
     * @type {TrackingUrls}
     * @memberof CampaignResponse
     */
    trackingUrls?: TrackingUrls | null;
    /**
     * Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignResponse
     */
    startTime?: number | null;
    /**
     * Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignResponse
     */
    endTime?: number | null;
    /**
     * Determine if a campaign has flexible daily budgets setup.
     * @type {boolean}
     * @memberof CampaignResponse
     */
    isFlexibleDailyBudgets?: boolean | null;
    /**
     * 
     * @type {ObjectiveType}
     * @memberof CampaignResponse
     */
    objectiveType?: ObjectiveType;
    /**
     * Campaign creation time. Unix timestamp in seconds.
     * @type {number}
     * @memberof CampaignResponse
     */
    createdTime?: number;
    /**
     * UTC timestamp. Last update time.
     * @type {number}
     * @memberof CampaignResponse
     */
    updatedTime?: number;
    /**
     * Always "campaign".
     * @type {string}
     * @memberof CampaignResponse
     */
    type?: string;
    /**
     * Determines if a campaign automatically generate ad-group level budgets given a campaign budget to maximize campaign outcome. When transitioning from non-cbo to cbo, all previous child ad group budget will be cleared.
     * @type {boolean}
     * @memberof CampaignResponse
     */
    isCampaignBudgetOptimization?: boolean | null;
    /**
     * 
     * @type {CampaignSummaryStatus}
     * @memberof CampaignResponse
     */
    summaryStatus?: CampaignSummaryStatus;
}



/**
 * Check if a given object implements the CampaignResponse interface.
 */
export function instanceOfCampaignResponse(value: object): value is CampaignResponse {
    return true;
}

export function CampaignResponseFromJSON(json: any): CampaignResponse {
    return CampaignResponseFromJSONTyped(json, false);
}

export function CampaignResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CampaignResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'adAccountId': json['ad_account_id'] == null ? undefined : json['ad_account_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : EntityStatusFromJSON(json['status']),
        'lifetimeSpendCap': json['lifetime_spend_cap'] == null ? undefined : json['lifetime_spend_cap'],
        'dailySpendCap': json['daily_spend_cap'] == null ? undefined : json['daily_spend_cap'],
        'orderLineId': json['order_line_id'] == null ? undefined : json['order_line_id'],
        'trackingUrls': json['tracking_urls'] == null ? undefined : TrackingUrlsFromJSON(json['tracking_urls']),
        'startTime': json['start_time'] == null ? undefined : json['start_time'],
        'endTime': json['end_time'] == null ? undefined : json['end_time'],
        'isFlexibleDailyBudgets': json['is_flexible_daily_budgets'] == null ? undefined : json['is_flexible_daily_budgets'],
        'objectiveType': json['objective_type'] == null ? undefined : ObjectiveTypeFromJSON(json['objective_type']),
        'createdTime': json['created_time'] == null ? undefined : json['created_time'],
        'updatedTime': json['updated_time'] == null ? undefined : json['updated_time'],
        'type': json['type'] == null ? undefined : json['type'],
        'isCampaignBudgetOptimization': json['is_campaign_budget_optimization'] == null ? undefined : json['is_campaign_budget_optimization'],
        'summaryStatus': json['summary_status'] == null ? undefined : CampaignSummaryStatusFromJSON(json['summary_status']),
    };
}

  export function CampaignResponseToJSON(json: any): CampaignResponse {
      return CampaignResponseToJSONTyped(json, false);
  }

  export function CampaignResponseToJSONTyped(value?: CampaignResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ad_account_id': value['adAccountId'],
        'name': value['name'],
        'status': EntityStatusToJSON(value['status']),
        'lifetime_spend_cap': value['lifetimeSpendCap'],
        'daily_spend_cap': value['dailySpendCap'],
        'order_line_id': value['orderLineId'],
        'tracking_urls': TrackingUrlsToJSON(value['trackingUrls']),
        'start_time': value['startTime'],
        'end_time': value['endTime'],
        'is_flexible_daily_budgets': value['isFlexibleDailyBudgets'],
        'objective_type': ObjectiveTypeToJSON(value['objectiveType']),
        'created_time': value['createdTime'],
        'updated_time': value['updatedTime'],
        'type': value['type'],
        'is_campaign_budget_optimization': value['isCampaignBudgetOptimization'],
        'summary_status': CampaignSummaryStatusToJSON(value['summaryStatus']),
    };
}

