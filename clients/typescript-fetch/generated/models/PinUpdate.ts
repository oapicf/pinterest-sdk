/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PinUpdateCarouselSlotsInner } from './PinUpdateCarouselSlotsInner';
import {
    PinUpdateCarouselSlotsInnerFromJSON,
    PinUpdateCarouselSlotsInnerFromJSONTyped,
    PinUpdateCarouselSlotsInnerToJSON,
    PinUpdateCarouselSlotsInnerToJSONTyped,
} from './PinUpdateCarouselSlotsInner';

/**
 * Pin fields for updates
 * @export
 * @interface PinUpdate
 */
export interface PinUpdate {
    /**
     * Pin's alternative text.
     * @type {string}
     * @memberof PinUpdate
     */
    altText?: string | null;
    /**
     * The id of the board to move the Pin onto.
     * @type {string}
     * @memberof PinUpdate
     */
    boardId?: string | null;
    /**
     * <a href="https://help.pinterest.com/en/article/create-a-board-section">Board section</a> ID.
     * @type {string}
     * @memberof PinUpdate
     */
    boardSectionId?: string | null;
    /**
     * Pin description - 800 characters maximum.
     * @type {string}
     * @memberof PinUpdate
     */
    description?: string | null;
    /**
     * URL viewer is taken to when they click pin.
     * @type {string}
     * @memberof PinUpdate
     */
    link?: string | null;
    /**
     * The native pin title that creators explicitly prefer to display.
     * @type {string}
     * @memberof PinUpdate
     */
    title?: string | null;
    /**
     * Carousel Pin slots data.
     * @type {Array<PinUpdateCarouselSlotsInner>}
     * @memberof PinUpdate
     */
    carouselSlots?: Array<PinUpdateCarouselSlotsInner>;
    /**
     * Private note for this Pin. <a href="https://help.pinterest.com/en/article/add-notes-to-your-pins">Learn more</a>.
     * @type {string}
     * @memberof PinUpdate
     */
    note?: string | null;
}

/**
 * Check if a given object implements the PinUpdate interface.
 */
export function instanceOfPinUpdate(value: object): value is PinUpdate {
    return true;
}

export function PinUpdateFromJSON(json: any): PinUpdate {
    return PinUpdateFromJSONTyped(json, false);
}

export function PinUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): PinUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'altText': json['alt_text'] == null ? undefined : json['alt_text'],
        'boardId': json['board_id'] == null ? undefined : json['board_id'],
        'boardSectionId': json['board_section_id'] == null ? undefined : json['board_section_id'],
        'description': json['description'] == null ? undefined : json['description'],
        'link': json['link'] == null ? undefined : json['link'],
        'title': json['title'] == null ? undefined : json['title'],
        'carouselSlots': json['carousel_slots'] == null ? undefined : ((json['carousel_slots'] as Array<any>).map(PinUpdateCarouselSlotsInnerFromJSON)),
        'note': json['note'] == null ? undefined : json['note'],
    };
}

  export function PinUpdateToJSON(json: any): PinUpdate {
      return PinUpdateToJSONTyped(json, false);
  }

  export function PinUpdateToJSONTyped(value?: PinUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alt_text': value['altText'],
        'board_id': value['boardId'],
        'board_section_id': value['boardSectionId'],
        'description': value['description'],
        'link': value['link'],
        'title': value['title'],
        'carousel_slots': value['carouselSlots'] == null ? undefined : ((value['carouselSlots'] as Array<any>).map(PinUpdateCarouselSlotsInnerToJSON)),
        'note': value['note'],
    };
}

