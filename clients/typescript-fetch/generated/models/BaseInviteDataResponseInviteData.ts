/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Metadata for the invite/request.
 * @export
 * @interface BaseInviteDataResponseInviteData
 */
export interface BaseInviteDataResponseInviteData {
    /**
     * The date and time when the invite/request will expire. Returned in milliseconds.
     * @type {number}
     * @memberof BaseInviteDataResponseInviteData
     */
    inviteExpiration?: number;
    /**
     * The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
     * @type {string}
     * @memberof BaseInviteDataResponseInviteData
     */
    inviteStatus?: string;
    /**
     * The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
     * @type {string}
     * @memberof BaseInviteDataResponseInviteData
     */
    inviteType?: string;
    /**
     * The date and time the invite/request was last updated. Returned in milliseconds.
     * @type {number}
     * @memberof BaseInviteDataResponseInviteData
     */
    lastUpdatedTime?: number;
    /**
     * The date and time the invite/request was sent/created. Returned in milliseconds.
     * @type {number}
     * @memberof BaseInviteDataResponseInviteData
     */
    sentAt?: number;
}

/**
 * Check if a given object implements the BaseInviteDataResponseInviteData interface.
 */
export function instanceOfBaseInviteDataResponseInviteData(value: object): value is BaseInviteDataResponseInviteData {
    return true;
}

export function BaseInviteDataResponseInviteDataFromJSON(json: any): BaseInviteDataResponseInviteData {
    return BaseInviteDataResponseInviteDataFromJSONTyped(json, false);
}

export function BaseInviteDataResponseInviteDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseInviteDataResponseInviteData {
    if (json == null) {
        return json;
    }
    return {
        
        'inviteExpiration': json['invite_expiration'] == null ? undefined : json['invite_expiration'],
        'inviteStatus': json['invite_status'] == null ? undefined : json['invite_status'],
        'inviteType': json['invite_type'] == null ? undefined : json['invite_type'],
        'lastUpdatedTime': json['last_updated_time'] == null ? undefined : json['last_updated_time'],
        'sentAt': json['sent_at'] == null ? undefined : json['sent_at'],
    };
}

  export function BaseInviteDataResponseInviteDataToJSON(json: any): BaseInviteDataResponseInviteData {
      return BaseInviteDataResponseInviteDataToJSONTyped(json, false);
  }

  export function BaseInviteDataResponseInviteDataToJSONTyped(value?: BaseInviteDataResponseInviteData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'invite_expiration': value['inviteExpiration'],
        'invite_status': value['inviteStatus'],
        'invite_type': value['inviteType'],
        'last_updated_time': value['lastUpdatedTime'],
        'sent_at': value['sentAt'],
    };
}

