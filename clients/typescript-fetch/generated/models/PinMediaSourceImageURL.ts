/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Image URL-based media source
 * @export
 * @interface PinMediaSourceImageURL
 */
export interface PinMediaSourceImageURL {
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImageURL
     */
    sourceType: PinMediaSourceImageURLSourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImageURL
     */
    url: string;
    /**
     * Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
     * @type {boolean}
     * @memberof PinMediaSourceImageURL
     */
    isStandard?: boolean;
}


/**
 * @export
 */
export const PinMediaSourceImageURLSourceTypeEnum = {
    ImageUrl: 'image_url'
} as const;
export type PinMediaSourceImageURLSourceTypeEnum = typeof PinMediaSourceImageURLSourceTypeEnum[keyof typeof PinMediaSourceImageURLSourceTypeEnum];


/**
 * Check if a given object implements the PinMediaSourceImageURL interface.
 */
export function instanceOfPinMediaSourceImageURL(value: object): value is PinMediaSourceImageURL {
    if (!('sourceType' in value) || value['sourceType'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function PinMediaSourceImageURLFromJSON(json: any): PinMediaSourceImageURL {
    return PinMediaSourceImageURLFromJSONTyped(json, false);
}

export function PinMediaSourceImageURLFromJSONTyped(json: any, ignoreDiscriminator: boolean): PinMediaSourceImageURL {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceType': json['source_type'],
        'url': json['url'],
        'isStandard': json['is_standard'] == null ? undefined : json['is_standard'],
    };
}

  export function PinMediaSourceImageURLToJSON(json: any): PinMediaSourceImageURL {
      return PinMediaSourceImageURLToJSONTyped(json, false);
  }

  export function PinMediaSourceImageURLToJSONTyped(value?: PinMediaSourceImageURL | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source_type': value['sourceType'],
        'url': value['url'],
        'is_standard': value['isStandard'],
    };
}

