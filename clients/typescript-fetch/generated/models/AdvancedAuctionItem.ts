/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Language } from './Language';
import {
    LanguageFromJSON,
    LanguageFromJSONTyped,
    LanguageToJSON,
    LanguageToJSONTyped,
} from './Language';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
    CountryToJSONTyped,
} from './Country';
import type { AdvancedAuctionBidOptions } from './AdvancedAuctionBidOptions';
import {
    AdvancedAuctionBidOptionsFromJSON,
    AdvancedAuctionBidOptionsFromJSONTyped,
    AdvancedAuctionBidOptionsToJSON,
    AdvancedAuctionBidOptionsToJSONTyped,
} from './AdvancedAuctionBidOptions';

/**
 * 
 * @export
 * @interface AdvancedAuctionItem
 */
export interface AdvancedAuctionItem {
    /**
     * The catalog retail item id in the merchant namespace
     * @type {string}
     * @memberof AdvancedAuctionItem
     */
    itemId: string;
    /**
     * 
     * @type {Country}
     * @memberof AdvancedAuctionItem
     */
    country: Country;
    /**
     * 
     * @type {Language}
     * @memberof AdvancedAuctionItem
     */
    language: Language;
    /**
     * 
     * @type {AdvancedAuctionBidOptions}
     * @memberof AdvancedAuctionItem
     */
    bidOptions: AdvancedAuctionBidOptions;
}



/**
 * Check if a given object implements the AdvancedAuctionItem interface.
 */
export function instanceOfAdvancedAuctionItem(value: object): value is AdvancedAuctionItem {
    if (!('itemId' in value) || value['itemId'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('bidOptions' in value) || value['bidOptions'] === undefined) return false;
    return true;
}

export function AdvancedAuctionItemFromJSON(json: any): AdvancedAuctionItem {
    return AdvancedAuctionItemFromJSONTyped(json, false);
}

export function AdvancedAuctionItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionItem {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['item_id'],
        'country': CountryFromJSON(json['country']),
        'language': LanguageFromJSON(json['language']),
        'bidOptions': AdvancedAuctionBidOptionsFromJSON(json['bid_options']),
    };
}

  export function AdvancedAuctionItemToJSON(json: any): AdvancedAuctionItem {
      return AdvancedAuctionItemToJSONTyped(json, false);
  }

  export function AdvancedAuctionItemToJSONTyped(value?: AdvancedAuctionItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item_id': value['itemId'],
        'country': CountryToJSON(value['country']),
        'language': LanguageToJSON(value['language']),
        'bid_options': AdvancedAuctionBidOptionsToJSON(value['bidOptions']),
    };
}

