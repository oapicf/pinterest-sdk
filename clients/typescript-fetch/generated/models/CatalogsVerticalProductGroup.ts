/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsProductGroup } from './CatalogsCreativeAssetsProductGroup';
import {
    instanceOfCatalogsCreativeAssetsProductGroup,
    CatalogsCreativeAssetsProductGroupFromJSON,
    CatalogsCreativeAssetsProductGroupFromJSONTyped,
    CatalogsCreativeAssetsProductGroupToJSON,
} from './CatalogsCreativeAssetsProductGroup';
import type { CatalogsHotelProductGroup } from './CatalogsHotelProductGroup';
import {
    instanceOfCatalogsHotelProductGroup,
    CatalogsHotelProductGroupFromJSON,
    CatalogsHotelProductGroupFromJSONTyped,
    CatalogsHotelProductGroupToJSON,
} from './CatalogsHotelProductGroup';
import type { CatalogsRetailProductGroup } from './CatalogsRetailProductGroup';
import {
    instanceOfCatalogsRetailProductGroup,
    CatalogsRetailProductGroupFromJSON,
    CatalogsRetailProductGroupFromJSONTyped,
    CatalogsRetailProductGroupToJSON,
} from './CatalogsRetailProductGroup';

/**
 * @type CatalogsVerticalProductGroup
 * 
 * @export
 */
export type CatalogsVerticalProductGroup = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsProductGroup | { catalogType: 'HOTEL' } & CatalogsHotelProductGroup | { catalogType: 'RETAIL' } & CatalogsRetailProductGroup;

export function CatalogsVerticalProductGroupFromJSON(json: any): CatalogsVerticalProductGroup {
    return CatalogsVerticalProductGroupFromJSONTyped(json, false);
}

export function CatalogsVerticalProductGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsVerticalProductGroup {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsProductGroupFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelProductGroupFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailProductGroupFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsVerticalProductGroup exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsVerticalProductGroupToJSON(value?: CatalogsVerticalProductGroup | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsProductGroupToJSON(value);
        case 'HOTEL':
            return CatalogsHotelProductGroupToJSON(value);
        case 'RETAIL':
            return CatalogsRetailProductGroupToJSON(value);
        default:
            throw new Error(`No variant of CatalogsVerticalProductGroup exists with 'catalogType=${value['catalogType']}'`);
    }

}

