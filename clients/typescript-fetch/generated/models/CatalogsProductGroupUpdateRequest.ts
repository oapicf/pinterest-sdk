/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsProductGroupFiltersRequest } from './CatalogsProductGroupFiltersRequest';
import {
    CatalogsProductGroupFiltersRequestFromJSON,
    CatalogsProductGroupFiltersRequestFromJSONTyped,
    CatalogsProductGroupFiltersRequestToJSON,
    CatalogsProductGroupFiltersRequestToJSONTyped,
} from './CatalogsProductGroupFiltersRequest';

/**
 * Request object for updating a product group.
 * @export
 * @interface CatalogsProductGroupUpdateRequest
 */
export interface CatalogsProductGroupUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    description?: string | null;
    /**
     * boolean indicator of whether the product group is being featured or not
     * @type {boolean}
     * @memberof CatalogsProductGroupUpdateRequest
     * @deprecated
     */
    isFeatured?: boolean;
    /**
     * 
     * @type {CatalogsProductGroupFiltersRequest}
     * @memberof CatalogsProductGroupUpdateRequest
     */
    filters?: CatalogsProductGroupFiltersRequest;
}

/**
 * Check if a given object implements the CatalogsProductGroupUpdateRequest interface.
 */
export function instanceOfCatalogsProductGroupUpdateRequest(value: object): value is CatalogsProductGroupUpdateRequest {
    return true;
}

export function CatalogsProductGroupUpdateRequestFromJSON(json: any): CatalogsProductGroupUpdateRequest {
    return CatalogsProductGroupUpdateRequestFromJSONTyped(json, false);
}

export function CatalogsProductGroupUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsProductGroupUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'isFeatured': json['is_featured'] == null ? undefined : json['is_featured'],
        'filters': json['filters'] == null ? undefined : CatalogsProductGroupFiltersRequestFromJSON(json['filters']),
    };
}

  export function CatalogsProductGroupUpdateRequestToJSON(json: any): CatalogsProductGroupUpdateRequest {
      return CatalogsProductGroupUpdateRequestToJSONTyped(json, false);
  }

  export function CatalogsProductGroupUpdateRequestToJSONTyped(value?: CatalogsProductGroupUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'is_featured': value['isFeatured'],
        'filters': CatalogsProductGroupFiltersRequestToJSON(value['filters']),
    };
}

