/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Board fields for updates
 * @export
 * @interface BoardUpdate
 */
export interface BoardUpdate {
    /**
     * 
     * @type {string}
     * @memberof BoardUpdate
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BoardUpdate
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BoardUpdate
     */
    privacy?: BoardUpdatePrivacyEnum;
}


/**
 * @export
 */
export const BoardUpdatePrivacyEnum = {
    Public: 'PUBLIC',
    Secret: 'SECRET'
} as const;
export type BoardUpdatePrivacyEnum = typeof BoardUpdatePrivacyEnum[keyof typeof BoardUpdatePrivacyEnum];


/**
 * Check if a given object implements the BoardUpdate interface.
 */
export function instanceOfBoardUpdate(value: object): value is BoardUpdate {
    return true;
}

export function BoardUpdateFromJSON(json: any): BoardUpdate {
    return BoardUpdateFromJSONTyped(json, false);
}

export function BoardUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): BoardUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'privacy': json['privacy'] == null ? undefined : json['privacy'],
    };
}

  export function BoardUpdateToJSON(json: any): BoardUpdate {
      return BoardUpdateToJSONTyped(json, false);
  }

  export function BoardUpdateToJSONTyped(value?: BoardUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'privacy': value['privacy'],
    };
}

