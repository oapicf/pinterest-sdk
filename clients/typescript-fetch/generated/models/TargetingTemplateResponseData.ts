/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TargetingTemplateKeyword } from './TargetingTemplateKeyword';
import {
    TargetingTemplateKeywordFromJSON,
    TargetingTemplateKeywordFromJSONTyped,
    TargetingTemplateKeywordToJSON,
    TargetingTemplateKeywordToJSONTyped,
} from './TargetingTemplateKeyword';
import type { TrackingUrls } from './TrackingUrls';
import {
    TrackingUrlsFromJSON,
    TrackingUrlsFromJSONTyped,
    TrackingUrlsToJSON,
    TrackingUrlsToJSONTyped,
} from './TrackingUrls';
import type { TargetingSpec } from './TargetingSpec';
import {
    TargetingSpecFromJSON,
    TargetingSpecFromJSONTyped,
    TargetingSpecToJSON,
    TargetingSpecToJSONTyped,
} from './TargetingSpec';
import type { PlacementGroupType } from './PlacementGroupType';
import {
    PlacementGroupTypeFromJSON,
    PlacementGroupTypeFromJSONTyped,
    PlacementGroupTypeToJSON,
    PlacementGroupTypeToJSONTyped,
} from './PlacementGroupType';
import type { TargetingTemplateAudienceSizing } from './TargetingTemplateAudienceSizing';
import {
    TargetingTemplateAudienceSizingFromJSON,
    TargetingTemplateAudienceSizingFromJSONTyped,
    TargetingTemplateAudienceSizingToJSON,
    TargetingTemplateAudienceSizingToJSONTyped,
} from './TargetingTemplateAudienceSizing';

/**
 * 
 * @export
 * @interface TargetingTemplateResponseData
 */
export interface TargetingTemplateResponseData {
    /**
     * targeting template name
     * @type {string}
     * @memberof TargetingTemplateResponseData
     */
    name?: string;
    /**
     * Enable auto-targeting for ad group. Also known as <a href="https://help.pinterest.com/en/business/article/expanded-targeting" target="_blank">"expanded targeting"</a>.
     * @type {boolean}
     * @memberof TargetingTemplateResponseData
     */
    autoTargetingEnabled?: boolean;
    /**
     * 
     * @type {TargetingSpec}
     * @memberof TargetingTemplateResponseData
     */
    targetingAttributes?: TargetingSpec;
    /**
     * 
     * @type {PlacementGroupType}
     * @memberof TargetingTemplateResponseData
     */
    placementGroup?: PlacementGroupType;
    /**
     * 
     * @type {Array<TargetingTemplateKeyword>}
     * @memberof TargetingTemplateResponseData
     */
    keywords?: Array<TargetingTemplateKeyword>;
    /**
     * 
     * @type {TrackingUrls}
     * @memberof TargetingTemplateResponseData
     */
    trackingUrls?: TrackingUrls | null;
    /**
     * Targeting template ID.
     * @type {string}
     * @memberof TargetingTemplateResponseData
     */
    id?: string;
    /**
     * Targeting template created time. Unix timestamp in seconds.
     * @type {number}
     * @memberof TargetingTemplateResponseData
     */
    createdTime?: number;
    /**
     * Targeting template updated time.Unix timestamp in seconds.
     * @type {number}
     * @memberof TargetingTemplateResponseData
     */
    updatedTime?: number;
    /**
     * The ID of the advertiser that this targeting template belongs to.
     * @type {string}
     * @memberof TargetingTemplateResponseData
     */
    adAccountId?: string;
    /**
     * Indicate targeting template is active or Deleted
     * @type {string}
     * @memberof TargetingTemplateResponseData
     */
    status?: TargetingTemplateResponseDataStatusEnum;
    /**
     * 
     * @type {TargetingTemplateAudienceSizing}
     * @memberof TargetingTemplateResponseData
     */
    sizing?: TargetingTemplateAudienceSizing | null;
}


/**
 * @export
 */
export const TargetingTemplateResponseDataStatusEnum = {
    Active: 'ACTIVE',
    Deleted: 'DELETED'
} as const;
export type TargetingTemplateResponseDataStatusEnum = typeof TargetingTemplateResponseDataStatusEnum[keyof typeof TargetingTemplateResponseDataStatusEnum];


/**
 * Check if a given object implements the TargetingTemplateResponseData interface.
 */
export function instanceOfTargetingTemplateResponseData(value: object): value is TargetingTemplateResponseData {
    return true;
}

export function TargetingTemplateResponseDataFromJSON(json: any): TargetingTemplateResponseData {
    return TargetingTemplateResponseDataFromJSONTyped(json, false);
}

export function TargetingTemplateResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetingTemplateResponseData {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'autoTargetingEnabled': json['auto_targeting_enabled'] == null ? undefined : json['auto_targeting_enabled'],
        'targetingAttributes': json['targeting_attributes'] == null ? undefined : TargetingSpecFromJSON(json['targeting_attributes']),
        'placementGroup': json['placement_group'] == null ? undefined : PlacementGroupTypeFromJSON(json['placement_group']),
        'keywords': json['keywords'] == null ? undefined : ((json['keywords'] as Array<any>).map(TargetingTemplateKeywordFromJSON)),
        'trackingUrls': json['tracking_urls'] == null ? undefined : TrackingUrlsFromJSON(json['tracking_urls']),
        'id': json['id'] == null ? undefined : json['id'],
        'createdTime': json['created_time'] == null ? undefined : json['created_time'],
        'updatedTime': json['updated_time'] == null ? undefined : json['updated_time'],
        'adAccountId': json['ad_account_id'] == null ? undefined : json['ad_account_id'],
        'status': json['status'] == null ? undefined : json['status'],
        'sizing': json['sizing'] == null ? undefined : TargetingTemplateAudienceSizingFromJSON(json['sizing']),
    };
}

  export function TargetingTemplateResponseDataToJSON(json: any): TargetingTemplateResponseData {
      return TargetingTemplateResponseDataToJSONTyped(json, false);
  }

  export function TargetingTemplateResponseDataToJSONTyped(value?: TargetingTemplateResponseData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'auto_targeting_enabled': value['autoTargetingEnabled'],
        'targeting_attributes': TargetingSpecToJSON(value['targetingAttributes']),
        'placement_group': PlacementGroupTypeToJSON(value['placementGroup']),
        'keywords': value['keywords'] == null ? undefined : ((value['keywords'] as Array<any>).map(TargetingTemplateKeywordToJSON)),
        'tracking_urls': TrackingUrlsToJSON(value['trackingUrls']),
        'id': value['id'],
        'created_time': value['createdTime'],
        'updated_time': value['updatedTime'],
        'ad_account_id': value['adAccountId'],
        'status': value['status'],
        'sizing': TargetingTemplateAudienceSizingToJSON(value['sizing']),
    };
}

