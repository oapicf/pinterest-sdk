/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';

/**
 * 
 * @export
 * @interface SharedAudienceResponse
 */
export interface SharedAudienceResponse {
    /**
     * Audience ID that was shared
     * @type {string}
     * @memberof SharedAudienceResponse
     */
    audienceId?: string;
    /**
     * 
     * @type {Array<Role>}
     * @memberof SharedAudienceResponse
     */
    permissions?: Array<Role>;
    /**
     * Account IDs that received the audience
     * @type {Array<string>}
     * @memberof SharedAudienceResponse
     */
    recipientAccountIds?: Array<string>;
}

/**
 * Check if a given object implements the SharedAudienceResponse interface.
 */
export function instanceOfSharedAudienceResponse(value: object): value is SharedAudienceResponse {
    return true;
}

export function SharedAudienceResponseFromJSON(json: any): SharedAudienceResponse {
    return SharedAudienceResponseFromJSONTyped(json, false);
}

export function SharedAudienceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedAudienceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'audienceId': json['audience_id'] == null ? undefined : json['audience_id'],
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(RoleFromJSON)),
        'recipientAccountIds': json['recipient_account_ids'] == null ? undefined : json['recipient_account_ids'],
    };
}

  export function SharedAudienceResponseToJSON(json: any): SharedAudienceResponse {
      return SharedAudienceResponseToJSONTyped(json, false);
  }

  export function SharedAudienceResponseToJSONTyped(value?: SharedAudienceResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'audience_id': value['audienceId'],
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(RoleToJSON)),
        'recipient_account_ids': value['recipientAccountIds'],
    };
}

