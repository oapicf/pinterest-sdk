/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Product counts for a Creative Assets CatalogsProductGroup
 * @export
 * @interface CatalogsCreativeAssetsProductGroupProductCounts
 */
export interface CatalogsCreativeAssetsProductGroupProductCounts {
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupProductCounts
     */
    catalogType: CatalogsCreativeAssetsProductGroupProductCountsCatalogTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CatalogsCreativeAssetsProductGroupProductCounts
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogsCreativeAssetsProductGroupProductCounts
     */
    videos: number;
}


/**
 * @export
 */
export const CatalogsCreativeAssetsProductGroupProductCountsCatalogTypeEnum = {
    CreativeAssets: 'CREATIVE_ASSETS'
} as const;
export type CatalogsCreativeAssetsProductGroupProductCountsCatalogTypeEnum = typeof CatalogsCreativeAssetsProductGroupProductCountsCatalogTypeEnum[keyof typeof CatalogsCreativeAssetsProductGroupProductCountsCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsCreativeAssetsProductGroupProductCounts interface.
 */
export function instanceOfCatalogsCreativeAssetsProductGroupProductCounts(value: object): value is CatalogsCreativeAssetsProductGroupProductCounts {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('videos' in value) || value['videos'] === undefined) return false;
    return true;
}

export function CatalogsCreativeAssetsProductGroupProductCountsFromJSON(json: any): CatalogsCreativeAssetsProductGroupProductCounts {
    return CatalogsCreativeAssetsProductGroupProductCountsFromJSONTyped(json, false);
}

export function CatalogsCreativeAssetsProductGroupProductCountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsCreativeAssetsProductGroupProductCounts {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'total': json['total'],
        'videos': json['videos'],
    };
}

  export function CatalogsCreativeAssetsProductGroupProductCountsToJSON(json: any): CatalogsCreativeAssetsProductGroupProductCounts {
      return CatalogsCreativeAssetsProductGroupProductCountsToJSONTyped(json, false);
  }

  export function CatalogsCreativeAssetsProductGroupProductCountsToJSONTyped(value?: CatalogsCreativeAssetsProductGroupProductCounts | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'total': value['total'],
        'videos': value['videos'],
    };
}

