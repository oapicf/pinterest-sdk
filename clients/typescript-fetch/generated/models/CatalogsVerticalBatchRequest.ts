/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsBatchRequest } from './CatalogsCreativeAssetsBatchRequest';
import {
    instanceOfCatalogsCreativeAssetsBatchRequest,
    CatalogsCreativeAssetsBatchRequestFromJSON,
    CatalogsCreativeAssetsBatchRequestFromJSONTyped,
    CatalogsCreativeAssetsBatchRequestToJSON,
} from './CatalogsCreativeAssetsBatchRequest';
import type { CatalogsHotelBatchRequest } from './CatalogsHotelBatchRequest';
import {
    instanceOfCatalogsHotelBatchRequest,
    CatalogsHotelBatchRequestFromJSON,
    CatalogsHotelBatchRequestFromJSONTyped,
    CatalogsHotelBatchRequestToJSON,
} from './CatalogsHotelBatchRequest';
import type { CatalogsRetailBatchRequest } from './CatalogsRetailBatchRequest';
import {
    instanceOfCatalogsRetailBatchRequest,
    CatalogsRetailBatchRequestFromJSON,
    CatalogsRetailBatchRequestFromJSONTyped,
    CatalogsRetailBatchRequestToJSON,
} from './CatalogsRetailBatchRequest';

/**
 * @type CatalogsVerticalBatchRequest
 * A request object that can have multiple operations on a single batch
 * @export
 */
export type CatalogsVerticalBatchRequest = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsBatchRequest | { catalogType: 'HOTEL' } & CatalogsHotelBatchRequest | { catalogType: 'RETAIL' } & CatalogsRetailBatchRequest;

export function CatalogsVerticalBatchRequestFromJSON(json: any): CatalogsVerticalBatchRequest {
    return CatalogsVerticalBatchRequestFromJSONTyped(json, false);
}

export function CatalogsVerticalBatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsVerticalBatchRequest {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsBatchRequestFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelBatchRequestFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailBatchRequestFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsVerticalBatchRequest exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsVerticalBatchRequestToJSON(value?: CatalogsVerticalBatchRequest | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsBatchRequestToJSON(value);
        case 'HOTEL':
            return CatalogsHotelBatchRequestToJSON(value);
        case 'RETAIL':
            return CatalogsRetailBatchRequestToJSON(value);
        default:
            throw new Error(`No variant of CatalogsVerticalBatchRequest exists with 'catalogType=${value['catalogType']}'`);
    }

}

