/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogsReportFeedIngestionFilter
 */
export interface CatalogsReportFeedIngestionFilter {
    /**
     * 
     * @type {string}
     * @memberof CatalogsReportFeedIngestionFilter
     */
    reportType: CatalogsReportFeedIngestionFilterReportTypeEnum;
    /**
     * ID of the feed entity.
     * @type {string}
     * @memberof CatalogsReportFeedIngestionFilter
     */
    feedId: string;
    /**
     * Unique identifier of a feed processing result. It can be acquired from the "id" field of the "items" array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list). If not provided, default to most recent completed processing result.
     * @type {string}
     * @memberof CatalogsReportFeedIngestionFilter
     */
    processingResultId?: string;
}


/**
 * @export
 */
export const CatalogsReportFeedIngestionFilterReportTypeEnum = {
    FeedIngestionIssues: 'FEED_INGESTION_ISSUES'
} as const;
export type CatalogsReportFeedIngestionFilterReportTypeEnum = typeof CatalogsReportFeedIngestionFilterReportTypeEnum[keyof typeof CatalogsReportFeedIngestionFilterReportTypeEnum];


/**
 * Check if a given object implements the CatalogsReportFeedIngestionFilter interface.
 */
export function instanceOfCatalogsReportFeedIngestionFilter(value: object): value is CatalogsReportFeedIngestionFilter {
    if (!('reportType' in value) || value['reportType'] === undefined) return false;
    if (!('feedId' in value) || value['feedId'] === undefined) return false;
    return true;
}

export function CatalogsReportFeedIngestionFilterFromJSON(json: any): CatalogsReportFeedIngestionFilter {
    return CatalogsReportFeedIngestionFilterFromJSONTyped(json, false);
}

export function CatalogsReportFeedIngestionFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsReportFeedIngestionFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'reportType': json['report_type'],
        'feedId': json['feed_id'],
        'processingResultId': json['processing_result_id'] == null ? undefined : json['processing_result_id'],
    };
}

  export function CatalogsReportFeedIngestionFilterToJSON(json: any): CatalogsReportFeedIngestionFilter {
      return CatalogsReportFeedIngestionFilterToJSONTyped(json, false);
  }

  export function CatalogsReportFeedIngestionFilterToJSONTyped(value?: CatalogsReportFeedIngestionFilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'report_type': value['reportType'],
        'feed_id': value['feedId'],
        'processing_result_id': value['processingResultId'],
    };
}

