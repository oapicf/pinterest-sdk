/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Gender } from './Gender';
import {
    GenderFromJSON,
    GenderFromJSONTyped,
    GenderToJSON,
    GenderToJSONTyped,
} from './Gender';

/**
 * 
 * @export
 * @interface CatalogsProductGroupMultipleGenderCriteria
 */
export interface CatalogsProductGroupMultipleGenderCriteria {
    /**
     * 
     * @type {Array<Gender>}
     * @memberof CatalogsProductGroupMultipleGenderCriteria
     */
    values: Array<Gender>;
    /**
     * 
     * @type {boolean}
     * @memberof CatalogsProductGroupMultipleGenderCriteria
     */
    negated?: boolean;
}

/**
 * Check if a given object implements the CatalogsProductGroupMultipleGenderCriteria interface.
 */
export function instanceOfCatalogsProductGroupMultipleGenderCriteria(value: object): value is CatalogsProductGroupMultipleGenderCriteria {
    if (!('values' in value) || value['values'] === undefined) return false;
    return true;
}

export function CatalogsProductGroupMultipleGenderCriteriaFromJSON(json: any): CatalogsProductGroupMultipleGenderCriteria {
    return CatalogsProductGroupMultipleGenderCriteriaFromJSONTyped(json, false);
}

export function CatalogsProductGroupMultipleGenderCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsProductGroupMultipleGenderCriteria {
    if (json == null) {
        return json;
    }
    return {
        
        'values': ((json['values'] as Array<any>).map(GenderFromJSON)),
        'negated': json['negated'] == null ? undefined : json['negated'],
    };
}

  export function CatalogsProductGroupMultipleGenderCriteriaToJSON(json: any): CatalogsProductGroupMultipleGenderCriteria {
      return CatalogsProductGroupMultipleGenderCriteriaToJSONTyped(json, false);
  }

  export function CatalogsProductGroupMultipleGenderCriteriaToJSONTyped(value?: CatalogsProductGroupMultipleGenderCriteria | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'values': ((value['values'] as Array<any>).map(GenderToJSON)),
        'negated': value['negated'],
    };
}

