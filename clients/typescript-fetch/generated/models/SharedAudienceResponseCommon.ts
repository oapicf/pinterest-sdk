/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';

/**
 * 
 * @export
 * @interface SharedAudienceResponseCommon
 */
export interface SharedAudienceResponseCommon {
    /**
     * Audience ID that was shared
     * @type {string}
     * @memberof SharedAudienceResponseCommon
     */
    audienceId?: string;
    /**
     * 
     * @type {Array<Role>}
     * @memberof SharedAudienceResponseCommon
     */
    permissions?: Array<Role>;
}

/**
 * Check if a given object implements the SharedAudienceResponseCommon interface.
 */
export function instanceOfSharedAudienceResponseCommon(value: object): value is SharedAudienceResponseCommon {
    return true;
}

export function SharedAudienceResponseCommonFromJSON(json: any): SharedAudienceResponseCommon {
    return SharedAudienceResponseCommonFromJSONTyped(json, false);
}

export function SharedAudienceResponseCommonFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedAudienceResponseCommon {
    if (json == null) {
        return json;
    }
    return {
        
        'audienceId': json['audience_id'] == null ? undefined : json['audience_id'],
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(RoleFromJSON)),
    };
}

  export function SharedAudienceResponseCommonToJSON(json: any): SharedAudienceResponseCommon {
      return SharedAudienceResponseCommonToJSONTyped(json, false);
  }

  export function SharedAudienceResponseCommonToJSONTyped(value?: SharedAudienceResponseCommon | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'audience_id': value['audienceId'],
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(RoleToJSON)),
    };
}

