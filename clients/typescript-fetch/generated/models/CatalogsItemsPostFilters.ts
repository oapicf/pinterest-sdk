/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsItemsPostFilter } from './CatalogsCreativeAssetsItemsPostFilter';
import {
    instanceOfCatalogsCreativeAssetsItemsPostFilter,
    CatalogsCreativeAssetsItemsPostFilterFromJSON,
    CatalogsCreativeAssetsItemsPostFilterFromJSONTyped,
    CatalogsCreativeAssetsItemsPostFilterToJSON,
} from './CatalogsCreativeAssetsItemsPostFilter';
import type { CatalogsHotelItemsPostFilter } from './CatalogsHotelItemsPostFilter';
import {
    instanceOfCatalogsHotelItemsPostFilter,
    CatalogsHotelItemsPostFilterFromJSON,
    CatalogsHotelItemsPostFilterFromJSONTyped,
    CatalogsHotelItemsPostFilterToJSON,
} from './CatalogsHotelItemsPostFilter';
import type { CatalogsRetailItemsPostFilter } from './CatalogsRetailItemsPostFilter';
import {
    instanceOfCatalogsRetailItemsPostFilter,
    CatalogsRetailItemsPostFilterFromJSON,
    CatalogsRetailItemsPostFilterFromJSONTyped,
    CatalogsRetailItemsPostFilterToJSON,
} from './CatalogsRetailItemsPostFilter';

/**
 * @type CatalogsItemsPostFilters
 * 
 * @export
 */
export type CatalogsItemsPostFilters = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsItemsPostFilter | { catalogType: 'HOTEL' } & CatalogsHotelItemsPostFilter | { catalogType: 'RETAIL' } & CatalogsRetailItemsPostFilter;

export function CatalogsItemsPostFiltersFromJSON(json: any): CatalogsItemsPostFilters {
    return CatalogsItemsPostFiltersFromJSONTyped(json, false);
}

export function CatalogsItemsPostFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsItemsPostFilters {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsItemsPostFilterFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelItemsPostFilterFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailItemsPostFilterFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsItemsPostFilters exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsItemsPostFiltersToJSON(value?: CatalogsItemsPostFilters | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsItemsPostFilterToJSON(value);
        case 'HOTEL':
            return CatalogsHotelItemsPostFilterToJSON(value);
        case 'RETAIL':
            return CatalogsRetailItemsPostFilterToJSON(value);
        default:
            throw new Error(`No variant of CatalogsItemsPostFilters exists with 'catalogType=${value['catalogType']}'`);
    }

}

