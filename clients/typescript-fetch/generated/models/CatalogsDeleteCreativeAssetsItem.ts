/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A creative assets item to be deleted
 * @export
 * @interface CatalogsDeleteCreativeAssetsItem
 */
export interface CatalogsDeleteCreativeAssetsItem {
    /**
     * The catalog creative assets id in the merchant namespace
     * @type {string}
     * @memberof CatalogsDeleteCreativeAssetsItem
     */
    creativeAssetsId: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsDeleteCreativeAssetsItem
     */
    operation: CatalogsDeleteCreativeAssetsItemOperationEnum;
}


/**
 * @export
 */
export const CatalogsDeleteCreativeAssetsItemOperationEnum = {
    Delete: 'DELETE'
} as const;
export type CatalogsDeleteCreativeAssetsItemOperationEnum = typeof CatalogsDeleteCreativeAssetsItemOperationEnum[keyof typeof CatalogsDeleteCreativeAssetsItemOperationEnum];


/**
 * Check if a given object implements the CatalogsDeleteCreativeAssetsItem interface.
 */
export function instanceOfCatalogsDeleteCreativeAssetsItem(value: object): value is CatalogsDeleteCreativeAssetsItem {
    if (!('creativeAssetsId' in value) || value['creativeAssetsId'] === undefined) return false;
    if (!('operation' in value) || value['operation'] === undefined) return false;
    return true;
}

export function CatalogsDeleteCreativeAssetsItemFromJSON(json: any): CatalogsDeleteCreativeAssetsItem {
    return CatalogsDeleteCreativeAssetsItemFromJSONTyped(json, false);
}

export function CatalogsDeleteCreativeAssetsItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsDeleteCreativeAssetsItem {
    if (json == null) {
        return json;
    }
    return {
        
        'creativeAssetsId': json['creative_assets_id'],
        'operation': json['operation'],
    };
}

  export function CatalogsDeleteCreativeAssetsItemToJSON(json: any): CatalogsDeleteCreativeAssetsItem {
      return CatalogsDeleteCreativeAssetsItemToJSONTyped(json, false);
  }

  export function CatalogsDeleteCreativeAssetsItemToJSONTyped(value?: CatalogsDeleteCreativeAssetsItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'creative_assets_id': value['creativeAssetsId'],
        'operation': value['operation'],
    };
}

