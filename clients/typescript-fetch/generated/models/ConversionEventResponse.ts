/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConversionTagType } from './ConversionTagType';
import {
    ConversionTagTypeFromJSON,
    ConversionTagTypeFromJSONTyped,
    ConversionTagTypeToJSON,
    ConversionTagTypeToJSONTyped,
} from './ConversionTagType';

/**
 * 
 * @export
 * @interface ConversionEventResponse
 */
export interface ConversionEventResponse {
    /**
     * 
     * @type {ConversionTagType}
     * @memberof ConversionEventResponse
     */
    conversionEvent?: ConversionTagType;
    /**
     * Id of the tag.
     * @type {string}
     * @memberof ConversionEventResponse
     */
    conversionTagId?: string;
    /**
     * Id of the ad account.
     * @type {string}
     * @memberof ConversionEventResponse
     */
    adAccountId?: string;
    /**
     * Creation date in epoch format.
     * @type {number}
     * @memberof ConversionEventResponse
     */
    createdTime?: number;
}



/**
 * Check if a given object implements the ConversionEventResponse interface.
 */
export function instanceOfConversionEventResponse(value: object): value is ConversionEventResponse {
    return true;
}

export function ConversionEventResponseFromJSON(json: any): ConversionEventResponse {
    return ConversionEventResponseFromJSONTyped(json, false);
}

export function ConversionEventResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversionEventResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'conversionEvent': json['conversion_event'] == null ? undefined : ConversionTagTypeFromJSON(json['conversion_event']),
        'conversionTagId': json['conversion_tag_id'] == null ? undefined : json['conversion_tag_id'],
        'adAccountId': json['ad_account_id'] == null ? undefined : json['ad_account_id'],
        'createdTime': json['created_time'] == null ? undefined : json['created_time'],
    };
}

  export function ConversionEventResponseToJSON(json: any): ConversionEventResponse {
      return ConversionEventResponseToJSONTyped(json, false);
  }

  export function ConversionEventResponseToJSONTyped(value?: ConversionEventResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conversion_event': ConversionTagTypeToJSON(value['conversionEvent']),
        'conversion_tag_id': value['conversionTagId'],
        'ad_account_id': value['adAccountId'],
        'created_time': value['createdTime'],
    };
}

