/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PinMediaSourceImagesBase64ItemsInner } from './PinMediaSourceImagesBase64ItemsInner';
import {
    PinMediaSourceImagesBase64ItemsInnerFromJSON,
    PinMediaSourceImagesBase64ItemsInnerFromJSONTyped,
    PinMediaSourceImagesBase64ItemsInnerToJSON,
    PinMediaSourceImagesBase64ItemsInnerToJSONTyped,
} from './PinMediaSourceImagesBase64ItemsInner';

/**
 * Multiple Base64-encoded images media source
 * @export
 * @interface PinMediaSourceImagesBase64
 */
export interface PinMediaSourceImagesBase64 {
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImagesBase64
     */
    sourceType?: PinMediaSourceImagesBase64SourceTypeEnum;
    /**
     * Array with image objects.
     * @type {Array<PinMediaSourceImagesBase64ItemsInner>}
     * @memberof PinMediaSourceImagesBase64
     */
    items: Array<PinMediaSourceImagesBase64ItemsInner>;
    /**
     * 
     * @type {number}
     * @memberof PinMediaSourceImagesBase64
     */
    index?: number;
}


/**
 * @export
 */
export const PinMediaSourceImagesBase64SourceTypeEnum = {
    MultipleImageBase64: 'multiple_image_base64'
} as const;
export type PinMediaSourceImagesBase64SourceTypeEnum = typeof PinMediaSourceImagesBase64SourceTypeEnum[keyof typeof PinMediaSourceImagesBase64SourceTypeEnum];


/**
 * Check if a given object implements the PinMediaSourceImagesBase64 interface.
 */
export function instanceOfPinMediaSourceImagesBase64(value: object): value is PinMediaSourceImagesBase64 {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function PinMediaSourceImagesBase64FromJSON(json: any): PinMediaSourceImagesBase64 {
    return PinMediaSourceImagesBase64FromJSONTyped(json, false);
}

export function PinMediaSourceImagesBase64FromJSONTyped(json: any, ignoreDiscriminator: boolean): PinMediaSourceImagesBase64 {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceType': json['source_type'] == null ? undefined : json['source_type'],
        'items': ((json['items'] as Array<any>).map(PinMediaSourceImagesBase64ItemsInnerFromJSON)),
        'index': json['index'] == null ? undefined : json['index'],
    };
}

  export function PinMediaSourceImagesBase64ToJSON(json: any): PinMediaSourceImagesBase64 {
      return PinMediaSourceImagesBase64ToJSONTyped(json, false);
  }

  export function PinMediaSourceImagesBase64ToJSONTyped(value?: PinMediaSourceImagesBase64 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source_type': value['sourceType'],
        'items': ((value['items'] as Array<any>).map(PinMediaSourceImagesBase64ItemsInnerToJSON)),
        'index': value['index'],
    };
}

