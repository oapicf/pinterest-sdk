/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsProductGroupMultipleStringCriteria } from './CatalogsProductGroupMultipleStringCriteria';
import {
    CatalogsProductGroupMultipleStringCriteriaFromJSON,
    CatalogsProductGroupMultipleStringCriteriaFromJSONTyped,
    CatalogsProductGroupMultipleStringCriteriaToJSON,
    CatalogsProductGroupMultipleStringCriteriaToJSONTyped,
} from './CatalogsProductGroupMultipleStringCriteria';

/**
 * 
 * @export
 * @interface ConditionFilter
 */
export interface ConditionFilter {
    /**
     * 
     * @type {CatalogsProductGroupMultipleStringCriteria}
     * @memberof ConditionFilter
     */
    cONDITION: CatalogsProductGroupMultipleStringCriteria;
}

/**
 * Check if a given object implements the ConditionFilter interface.
 */
export function instanceOfConditionFilter(value: object): value is ConditionFilter {
    if (!('cONDITION' in value) || value['cONDITION'] === undefined) return false;
    return true;
}

export function ConditionFilterFromJSON(json: any): ConditionFilter {
    return ConditionFilterFromJSONTyped(json, false);
}

export function ConditionFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConditionFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'cONDITION': json['CONDITION'],
    };
}

  export function ConditionFilterToJSON(json: any): ConditionFilter {
      return ConditionFilterToJSONTyped(json, false);
  }

  export function ConditionFilterToJSONTyped(value?: ConditionFilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'CONDITION': value['cONDITION'],
    };
}

