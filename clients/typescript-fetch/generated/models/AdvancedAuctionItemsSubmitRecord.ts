/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AdvancedAuctionItemsSubmitDeleteRecord } from './AdvancedAuctionItemsSubmitDeleteRecord';
import {
    instanceOfAdvancedAuctionItemsSubmitDeleteRecord,
    AdvancedAuctionItemsSubmitDeleteRecordFromJSON,
    AdvancedAuctionItemsSubmitDeleteRecordFromJSONTyped,
    AdvancedAuctionItemsSubmitDeleteRecordToJSON,
} from './AdvancedAuctionItemsSubmitDeleteRecord';
import type { AdvancedAuctionItemsSubmitUpsertRecord } from './AdvancedAuctionItemsSubmitUpsertRecord';
import {
    instanceOfAdvancedAuctionItemsSubmitUpsertRecord,
    AdvancedAuctionItemsSubmitUpsertRecordFromJSON,
    AdvancedAuctionItemsSubmitUpsertRecordFromJSONTyped,
    AdvancedAuctionItemsSubmitUpsertRecordToJSON,
} from './AdvancedAuctionItemsSubmitUpsertRecord';

/**
 * @type AdvancedAuctionItemsSubmitRecord
 * Object describing an item bid option operation
 * @export
 */
export type AdvancedAuctionItemsSubmitRecord = { operation: 'DELETE' } & AdvancedAuctionItemsSubmitDeleteRecord | { operation: 'UPSERT' } & AdvancedAuctionItemsSubmitUpsertRecord;

export function AdvancedAuctionItemsSubmitRecordFromJSON(json: any): AdvancedAuctionItemsSubmitRecord {
    return AdvancedAuctionItemsSubmitRecordFromJSONTyped(json, false);
}

export function AdvancedAuctionItemsSubmitRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionItemsSubmitRecord {
    if (json == null) {
        return json;
    }
    switch (json['operation']) {
        case 'DELETE':
            return Object.assign({}, AdvancedAuctionItemsSubmitDeleteRecordFromJSONTyped(json, true), { operation: 'DELETE' } as const);
        case 'UPSERT':
            return Object.assign({}, AdvancedAuctionItemsSubmitUpsertRecordFromJSONTyped(json, true), { operation: 'UPSERT' } as const);
        default:
            throw new Error(`No variant of AdvancedAuctionItemsSubmitRecord exists with 'operation=${json['operation']}'`);
    }
}

export function AdvancedAuctionItemsSubmitRecordToJSON(value?: AdvancedAuctionItemsSubmitRecord | null): any {
    if (value == null) {
        return value;
    }
    switch (value['operation']) {
        case 'DELETE':
            return AdvancedAuctionItemsSubmitDeleteRecordToJSON(value);
        case 'UPSERT':
            return AdvancedAuctionItemsSubmitUpsertRecordToJSON(value);
        default:
            throw new Error(`No variant of AdvancedAuctionItemsSubmitRecord exists with 'operation=${value['operation']}'`);
    }

}

