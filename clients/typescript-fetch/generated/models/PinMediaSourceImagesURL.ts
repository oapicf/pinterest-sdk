/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PinMediaSourceImagesURLItemsInner } from './PinMediaSourceImagesURLItemsInner';
import {
    PinMediaSourceImagesURLItemsInnerFromJSON,
    PinMediaSourceImagesURLItemsInnerFromJSONTyped,
    PinMediaSourceImagesURLItemsInnerToJSON,
    PinMediaSourceImagesURLItemsInnerToJSONTyped,
} from './PinMediaSourceImagesURLItemsInner';

/**
 * Multiple images urls-based media source
 * @export
 * @interface PinMediaSourceImagesURL
 */
export interface PinMediaSourceImagesURL {
    /**
     * 
     * @type {string}
     * @memberof PinMediaSourceImagesURL
     */
    sourceType?: PinMediaSourceImagesURLSourceTypeEnum;
    /**
     * Array with image objects.
     * @type {Array<PinMediaSourceImagesURLItemsInner>}
     * @memberof PinMediaSourceImagesURL
     */
    items: Array<PinMediaSourceImagesURLItemsInner>;
    /**
     * 
     * @type {number}
     * @memberof PinMediaSourceImagesURL
     */
    index?: number;
}


/**
 * @export
 */
export const PinMediaSourceImagesURLSourceTypeEnum = {
    MultipleImageUrls: 'multiple_image_urls'
} as const;
export type PinMediaSourceImagesURLSourceTypeEnum = typeof PinMediaSourceImagesURLSourceTypeEnum[keyof typeof PinMediaSourceImagesURLSourceTypeEnum];


/**
 * Check if a given object implements the PinMediaSourceImagesURL interface.
 */
export function instanceOfPinMediaSourceImagesURL(value: object): value is PinMediaSourceImagesURL {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function PinMediaSourceImagesURLFromJSON(json: any): PinMediaSourceImagesURL {
    return PinMediaSourceImagesURLFromJSONTyped(json, false);
}

export function PinMediaSourceImagesURLFromJSONTyped(json: any, ignoreDiscriminator: boolean): PinMediaSourceImagesURL {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceType': json['source_type'] == null ? undefined : json['source_type'],
        'items': ((json['items'] as Array<any>).map(PinMediaSourceImagesURLItemsInnerFromJSON)),
        'index': json['index'] == null ? undefined : json['index'],
    };
}

  export function PinMediaSourceImagesURLToJSON(json: any): PinMediaSourceImagesURL {
      return PinMediaSourceImagesURLToJSONTyped(json, false);
  }

  export function PinMediaSourceImagesURLToJSONTyped(value?: PinMediaSourceImagesURL | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source_type': value['sourceType'],
        'items': ((value['items'] as Array<any>).map(PinMediaSourceImagesURLItemsInnerToJSON)),
        'index': value['index'],
    };
}

