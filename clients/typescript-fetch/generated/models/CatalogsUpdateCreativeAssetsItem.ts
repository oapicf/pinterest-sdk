/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsUpdatableCreativeAssetsAttributes } from './CatalogsUpdatableCreativeAssetsAttributes';
import {
    CatalogsUpdatableCreativeAssetsAttributesFromJSON,
    CatalogsUpdatableCreativeAssetsAttributesFromJSONTyped,
    CatalogsUpdatableCreativeAssetsAttributesToJSON,
    CatalogsUpdatableCreativeAssetsAttributesToJSONTyped,
} from './CatalogsUpdatableCreativeAssetsAttributes';

/**
 * A creative assets item to be updated.
 * @export
 * @interface CatalogsUpdateCreativeAssetsItem
 */
export interface CatalogsUpdateCreativeAssetsItem {
    /**
     * The catalog creative assets item id in the merchant namespace
     * @type {string}
     * @memberof CatalogsUpdateCreativeAssetsItem
     */
    creativeAssetsId: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsUpdateCreativeAssetsItem
     */
    operation: CatalogsUpdateCreativeAssetsItemOperationEnum;
    /**
     * 
     * @type {CatalogsUpdatableCreativeAssetsAttributes}
     * @memberof CatalogsUpdateCreativeAssetsItem
     */
    attributes: CatalogsUpdatableCreativeAssetsAttributes;
}


/**
 * @export
 */
export const CatalogsUpdateCreativeAssetsItemOperationEnum = {
    Update: 'UPDATE'
} as const;
export type CatalogsUpdateCreativeAssetsItemOperationEnum = typeof CatalogsUpdateCreativeAssetsItemOperationEnum[keyof typeof CatalogsUpdateCreativeAssetsItemOperationEnum];


/**
 * Check if a given object implements the CatalogsUpdateCreativeAssetsItem interface.
 */
export function instanceOfCatalogsUpdateCreativeAssetsItem(value: object): value is CatalogsUpdateCreativeAssetsItem {
    if (!('creativeAssetsId' in value) || value['creativeAssetsId'] === undefined) return false;
    if (!('operation' in value) || value['operation'] === undefined) return false;
    if (!('attributes' in value) || value['attributes'] === undefined) return false;
    return true;
}

export function CatalogsUpdateCreativeAssetsItemFromJSON(json: any): CatalogsUpdateCreativeAssetsItem {
    return CatalogsUpdateCreativeAssetsItemFromJSONTyped(json, false);
}

export function CatalogsUpdateCreativeAssetsItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsUpdateCreativeAssetsItem {
    if (json == null) {
        return json;
    }
    return {
        
        'creativeAssetsId': json['creative_assets_id'],
        'operation': json['operation'],
        'attributes': CatalogsUpdatableCreativeAssetsAttributesFromJSON(json['attributes']),
    };
}

  export function CatalogsUpdateCreativeAssetsItemToJSON(json: any): CatalogsUpdateCreativeAssetsItem {
      return CatalogsUpdateCreativeAssetsItemToJSONTyped(json, false);
  }

  export function CatalogsUpdateCreativeAssetsItemToJSONTyped(value?: CatalogsUpdateCreativeAssetsItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'creative_assets_id': value['creativeAssetsId'],
        'operation': value['operation'],
        'attributes': CatalogsUpdatableCreativeAssetsAttributesToJSON(value['attributes']),
    };
}

