/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogsReportDistributionIssueFilter
 */
export interface CatalogsReportDistributionIssueFilter {
    /**
     * 
     * @type {string}
     * @memberof CatalogsReportDistributionIssueFilter
     */
    reportType: CatalogsReportDistributionIssueFilterReportTypeEnum;
    /**
     * Unique identifier of a catalog. If not given, oldest catalog will be used
     * @type {string}
     * @memberof CatalogsReportDistributionIssueFilter
     */
    catalogId?: string;
}


/**
 * @export
 */
export const CatalogsReportDistributionIssueFilterReportTypeEnum = {
    DistributionIssues: 'DISTRIBUTION_ISSUES'
} as const;
export type CatalogsReportDistributionIssueFilterReportTypeEnum = typeof CatalogsReportDistributionIssueFilterReportTypeEnum[keyof typeof CatalogsReportDistributionIssueFilterReportTypeEnum];


/**
 * Check if a given object implements the CatalogsReportDistributionIssueFilter interface.
 */
export function instanceOfCatalogsReportDistributionIssueFilter(value: object): value is CatalogsReportDistributionIssueFilter {
    if (!('reportType' in value) || value['reportType'] === undefined) return false;
    return true;
}

export function CatalogsReportDistributionIssueFilterFromJSON(json: any): CatalogsReportDistributionIssueFilter {
    return CatalogsReportDistributionIssueFilterFromJSONTyped(json, false);
}

export function CatalogsReportDistributionIssueFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsReportDistributionIssueFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'reportType': json['report_type'],
        'catalogId': json['catalog_id'] == null ? undefined : json['catalog_id'],
    };
}

  export function CatalogsReportDistributionIssueFilterToJSON(json: any): CatalogsReportDistributionIssueFilter {
      return CatalogsReportDistributionIssueFilterToJSONTyped(json, false);
  }

  export function CatalogsReportDistributionIssueFilterToJSONTyped(value?: CatalogsReportDistributionIssueFilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'report_type': value['reportType'],
        'catalog_id': value['catalogId'],
    };
}

