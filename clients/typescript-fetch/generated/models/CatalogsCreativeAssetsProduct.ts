/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsCreativeAssetsProductMetadata } from './CatalogsCreativeAssetsProductMetadata';
import {
    CatalogsCreativeAssetsProductMetadataFromJSON,
    CatalogsCreativeAssetsProductMetadataFromJSONTyped,
    CatalogsCreativeAssetsProductMetadataToJSON,
    CatalogsCreativeAssetsProductMetadataToJSONTyped,
} from './CatalogsCreativeAssetsProductMetadata';
import type { Pin } from './Pin';
import {
    PinFromJSON,
    PinFromJSONTyped,
    PinToJSON,
    PinToJSONTyped,
} from './Pin';

/**
 * 
 * @export
 * @interface CatalogsCreativeAssetsProduct
 */
export interface CatalogsCreativeAssetsProduct {
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProduct
     */
    catalogType: CatalogsCreativeAssetsProductCatalogTypeEnum;
    /**
     * 
     * @type {CatalogsCreativeAssetsProductMetadata}
     * @memberof CatalogsCreativeAssetsProduct
     */
    metadata: CatalogsCreativeAssetsProductMetadata;
    /**
     * 
     * @type {Pin}
     * @memberof CatalogsCreativeAssetsProduct
     */
    pin: Pin | null;
}


/**
 * @export
 */
export const CatalogsCreativeAssetsProductCatalogTypeEnum = {
    CreativeAssets: 'CREATIVE_ASSETS'
} as const;
export type CatalogsCreativeAssetsProductCatalogTypeEnum = typeof CatalogsCreativeAssetsProductCatalogTypeEnum[keyof typeof CatalogsCreativeAssetsProductCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsCreativeAssetsProduct interface.
 */
export function instanceOfCatalogsCreativeAssetsProduct(value: object): value is CatalogsCreativeAssetsProduct {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('pin' in value) || value['pin'] === undefined) return false;
    return true;
}

export function CatalogsCreativeAssetsProductFromJSON(json: any): CatalogsCreativeAssetsProduct {
    return CatalogsCreativeAssetsProductFromJSONTyped(json, false);
}

export function CatalogsCreativeAssetsProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsCreativeAssetsProduct {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'metadata': CatalogsCreativeAssetsProductMetadataFromJSON(json['metadata']),
        'pin': PinFromJSON(json['pin']),
    };
}

  export function CatalogsCreativeAssetsProductToJSON(json: any): CatalogsCreativeAssetsProduct {
      return CatalogsCreativeAssetsProductToJSONTyped(json, false);
  }

  export function CatalogsCreativeAssetsProductToJSONTyped(value?: CatalogsCreativeAssetsProduct | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'metadata': CatalogsCreativeAssetsProductMetadataToJSON(value['metadata']),
        'pin': PinToJSON(value['pin']),
    };
}

