/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AudienceDemographicValue } from './AudienceDemographicValue';
import {
    AudienceDemographicValueFromJSON,
    AudienceDemographicValueFromJSONTyped,
    AudienceDemographicValueToJSON,
    AudienceDemographicValueToJSONTyped,
} from './AudienceDemographicValue';

/**
 * Audience demographics
 * @export
 * @interface AudienceDemographics
 */
export interface AudienceDemographics {
    /**
     * Ages distribution.
     * @type {Array<AudienceDemographicValue>}
     * @memberof AudienceDemographics
     */
    ages?: Array<AudienceDemographicValue>;
    /**
     * Gender distribution.
     * @type {Array<AudienceDemographicValue>}
     * @memberof AudienceDemographics
     */
    genders?: Array<AudienceDemographicValue>;
    /**
     * Device usage distribution.
     * @type {Array<AudienceDemographicValue>}
     * @memberof AudienceDemographics
     */
    devices?: Array<AudienceDemographicValue>;
    /**
     * Geographic metro area distribution.
     * @type {Array<AudienceDemographicValue>}
     * @memberof AudienceDemographics
     */
    metros?: Array<AudienceDemographicValue>;
    /**
     * Country area distribution.
     * @type {Array<AudienceDemographicValue>}
     * @memberof AudienceDemographics
     */
    countries?: Array<AudienceDemographicValue>;
}

/**
 * Check if a given object implements the AudienceDemographics interface.
 */
export function instanceOfAudienceDemographics(value: object): value is AudienceDemographics {
    return true;
}

export function AudienceDemographicsFromJSON(json: any): AudienceDemographics {
    return AudienceDemographicsFromJSONTyped(json, false);
}

export function AudienceDemographicsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AudienceDemographics {
    if (json == null) {
        return json;
    }
    return {
        
        'ages': json['ages'] == null ? undefined : ((json['ages'] as Array<any>).map(AudienceDemographicValueFromJSON)),
        'genders': json['genders'] == null ? undefined : ((json['genders'] as Array<any>).map(AudienceDemographicValueFromJSON)),
        'devices': json['devices'] == null ? undefined : ((json['devices'] as Array<any>).map(AudienceDemographicValueFromJSON)),
        'metros': json['metros'] == null ? undefined : ((json['metros'] as Array<any>).map(AudienceDemographicValueFromJSON)),
        'countries': json['countries'] == null ? undefined : ((json['countries'] as Array<any>).map(AudienceDemographicValueFromJSON)),
    };
}

  export function AudienceDemographicsToJSON(json: any): AudienceDemographics {
      return AudienceDemographicsToJSONTyped(json, false);
  }

  export function AudienceDemographicsToJSONTyped(value?: AudienceDemographics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ages': value['ages'] == null ? undefined : ((value['ages'] as Array<any>).map(AudienceDemographicValueToJSON)),
        'genders': value['genders'] == null ? undefined : ((value['genders'] as Array<any>).map(AudienceDemographicValueToJSON)),
        'devices': value['devices'] == null ? undefined : ((value['devices'] as Array<any>).map(AudienceDemographicValueToJSON)),
        'metros': value['metros'] == null ? undefined : ((value['metros'] as Array<any>).map(AudienceDemographicValueToJSON)),
        'countries': value['countries'] == null ? undefined : ((value['countries'] as Array<any>).map(AudienceDemographicValueToJSON)),
    };
}

