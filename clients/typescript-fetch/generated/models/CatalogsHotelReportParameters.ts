/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsHotelReportParametersReport } from './CatalogsHotelReportParametersReport';
import {
    CatalogsHotelReportParametersReportFromJSON,
    CatalogsHotelReportParametersReportFromJSONTyped,
    CatalogsHotelReportParametersReportToJSON,
    CatalogsHotelReportParametersReportToJSONTyped,
} from './CatalogsHotelReportParametersReport';

/**
 * Parameters for hotel report
 * @export
 * @interface CatalogsHotelReportParameters
 */
export interface CatalogsHotelReportParameters {
    /**
     * 
     * @type {string}
     * @memberof CatalogsHotelReportParameters
     */
    catalogType: CatalogsHotelReportParametersCatalogTypeEnum;
    /**
     * 
     * @type {CatalogsHotelReportParametersReport}
     * @memberof CatalogsHotelReportParameters
     */
    report: CatalogsHotelReportParametersReport;
}


/**
 * @export
 */
export const CatalogsHotelReportParametersCatalogTypeEnum = {
    Hotel: 'HOTEL'
} as const;
export type CatalogsHotelReportParametersCatalogTypeEnum = typeof CatalogsHotelReportParametersCatalogTypeEnum[keyof typeof CatalogsHotelReportParametersCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsHotelReportParameters interface.
 */
export function instanceOfCatalogsHotelReportParameters(value: object): value is CatalogsHotelReportParameters {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('report' in value) || value['report'] === undefined) return false;
    return true;
}

export function CatalogsHotelReportParametersFromJSON(json: any): CatalogsHotelReportParameters {
    return CatalogsHotelReportParametersFromJSONTyped(json, false);
}

export function CatalogsHotelReportParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsHotelReportParameters {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'report': CatalogsHotelReportParametersReportFromJSON(json['report']),
    };
}

  export function CatalogsHotelReportParametersToJSON(json: any): CatalogsHotelReportParameters {
      return CatalogsHotelReportParametersToJSONTyped(json, false);
  }

  export function CatalogsHotelReportParametersToJSONTyped(value?: CatalogsHotelReportParameters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'report': CatalogsHotelReportParametersReportToJSON(value['report']),
    };
}

