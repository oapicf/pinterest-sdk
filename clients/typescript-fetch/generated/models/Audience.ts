/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AudienceRule } from './AudienceRule';
import {
    AudienceRuleFromJSON,
    AudienceRuleFromJSONTyped,
    AudienceRuleToJSON,
    AudienceRuleToJSONTyped,
} from './AudienceRule';

/**
 * 
 * @export
 * @interface Audience
 */
export interface Audience {
    /**
     * Ad account ID.
     * @type {string}
     * @memberof Audience
     */
    adAccountId?: string;
    /**
     * Audience ID.
     * @type {string}
     * @memberof Audience
     */
    id?: string;
    /**
     * Audience name.
     * @type {string}
     * @memberof Audience
     */
    name?: string;
    /**
     * <a href="/docs/reference/glossary/#Audience Types">Audience types</a>: ACTALIKE, ENGAGEMENT, CUSTOMER_LIST and VISITOR
     * @type {string}
     * @memberof Audience
     */
    audienceType?: string;
    /**
     * Audience description.
     * @type {string}
     * @memberof Audience
     */
    description?: string | null;
    /**
     * 
     * @type {AudienceRule}
     * @memberof Audience
     */
    rule?: AudienceRule;
    /**
     * Audience size.
     * @type {number}
     * @memberof Audience
     */
    size?: number | null;
    /**
     * Audience status. READY, INITIALIZING, TOO_SMALL - Each audience list needs to have at least 100 people with Pinterest accounts before you can start using it.
     * @type {string}
     * @memberof Audience
     */
    status?: string;
    /**
     * Always "audience".
     * @type {string}
     * @memberof Audience
     */
    type?: string;
    /**
     * Creation time. Unix timestamp in seconds.
     * @type {number}
     * @memberof Audience
     */
    createdTimestamp?: number | null;
    /**
     * Last update time. Unix timestamp in seconds.
     * @type {number}
     * @memberof Audience
     */
    updatedTimestamp?: number | null;
}

/**
 * Check if a given object implements the Audience interface.
 */
export function instanceOfAudience(value: object): value is Audience {
    return true;
}

export function AudienceFromJSON(json: any): Audience {
    return AudienceFromJSONTyped(json, false);
}

export function AudienceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Audience {
    if (json == null) {
        return json;
    }
    return {
        
        'adAccountId': json['ad_account_id'] == null ? undefined : json['ad_account_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'audienceType': json['audience_type'] == null ? undefined : json['audience_type'],
        'description': json['description'] == null ? undefined : json['description'],
        'rule': json['rule'] == null ? undefined : AudienceRuleFromJSON(json['rule']),
        'size': json['size'] == null ? undefined : json['size'],
        'status': json['status'] == null ? undefined : json['status'],
        'type': json['type'] == null ? undefined : json['type'],
        'createdTimestamp': json['created_timestamp'] == null ? undefined : json['created_timestamp'],
        'updatedTimestamp': json['updated_timestamp'] == null ? undefined : json['updated_timestamp'],
    };
}

  export function AudienceToJSON(json: any): Audience {
      return AudienceToJSONTyped(json, false);
  }

  export function AudienceToJSONTyped(value?: Audience | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ad_account_id': value['adAccountId'],
        'id': value['id'],
        'name': value['name'],
        'audience_type': value['audienceType'],
        'description': value['description'],
        'rule': AudienceRuleToJSON(value['rule']),
        'size': value['size'],
        'status': value['status'],
        'type': value['type'],
        'created_timestamp': value['createdTimestamp'],
        'updated_timestamp': value['updatedTimestamp'],
    };
}

