/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageMetadataImages } from './ImageMetadataImages';
import {
    ImageMetadataImagesFromJSON,
    ImageMetadataImagesFromJSONTyped,
    ImageMetadataImagesToJSON,
    ImageMetadataImagesToJSONTyped,
} from './ImageMetadataImages';
import type { ImageMetadata } from './ImageMetadata';
import {
    ImageMetadataFromJSON,
    ImageMetadataFromJSONTyped,
    ImageMetadataToJSON,
    ImageMetadataToJSONTyped,
} from './ImageMetadata';
import type { VideoMetadata } from './VideoMetadata';
import {
    VideoMetadataFromJSON,
    VideoMetadataFromJSONTyped,
    VideoMetadataToJSON,
    VideoMetadataToJSONTyped,
} from './VideoMetadata';

/**
 * 
 * @export
 * @interface PinMediaMetadata
 */
export interface PinMediaMetadata {
    /**
     * 
     * @type {string}
     * @memberof PinMediaMetadata
     */
    itemType?: string;
    /**
     * 
     * @type {string}
     * @memberof PinMediaMetadata
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PinMediaMetadata
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PinMediaMetadata
     */
    link?: string | null;
    /**
     * 
     * @type {ImageMetadataImages}
     * @memberof PinMediaMetadata
     */
    images?: ImageMetadataImages;
    /**
     * 
     * @type {string}
     * @memberof PinMediaMetadata
     */
    coverImageUrl?: string;
    /**
     * Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
     * @type {string}
     * @memberof PinMediaMetadata
     */
    videoUrl?: string | null;
    /**
     * Duration (in milliseconds)
     * @type {number}
     * @memberof PinMediaMetadata
     */
    duration?: number;
    /**
     * Height (in pixels)
     * @type {number}
     * @memberof PinMediaMetadata
     */
    height?: number;
    /**
     * Width (in pixels)
     * @type {number}
     * @memberof PinMediaMetadata
     */
    width?: number;
}

/**
 * Check if a given object implements the PinMediaMetadata interface.
 */
export function instanceOfPinMediaMetadata(value: object): value is PinMediaMetadata {
    return true;
}

export function PinMediaMetadataFromJSON(json: any): PinMediaMetadata {
    return PinMediaMetadataFromJSONTyped(json, false);
}

export function PinMediaMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PinMediaMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'itemType': json['item_type'] == null ? undefined : json['item_type'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'link': json['link'] == null ? undefined : json['link'],
        'images': json['images'] == null ? undefined : ImageMetadataImagesFromJSON(json['images']),
        'coverImageUrl': json['cover_image_url'] == null ? undefined : json['cover_image_url'],
        'videoUrl': json['video_url'] == null ? undefined : json['video_url'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'height': json['height'] == null ? undefined : json['height'],
        'width': json['width'] == null ? undefined : json['width'],
    };
}

  export function PinMediaMetadataToJSON(json: any): PinMediaMetadata {
      return PinMediaMetadataToJSONTyped(json, false);
  }

  export function PinMediaMetadataToJSONTyped(value?: PinMediaMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item_type': value['itemType'],
        'title': value['title'],
        'description': value['description'],
        'link': value['link'],
        'images': ImageMetadataImagesToJSON(value['images']),
        'cover_image_url': value['coverImageUrl'],
        'video_url': value['videoUrl'],
        'duration': value['duration'],
        'height': value['height'],
        'width': value['width'],
    };
}

