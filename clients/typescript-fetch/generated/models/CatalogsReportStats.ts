/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsReportDistributionStats } from './CatalogsReportDistributionStats';
import {
    instanceOfCatalogsReportDistributionStats,
    CatalogsReportDistributionStatsFromJSON,
    CatalogsReportDistributionStatsFromJSONTyped,
    CatalogsReportDistributionStatsToJSON,
} from './CatalogsReportDistributionStats';
import type { CatalogsReportFeedIngestionStats } from './CatalogsReportFeedIngestionStats';
import {
    instanceOfCatalogsReportFeedIngestionStats,
    CatalogsReportFeedIngestionStatsFromJSON,
    CatalogsReportFeedIngestionStatsFromJSONTyped,
    CatalogsReportFeedIngestionStatsToJSON,
} from './CatalogsReportFeedIngestionStats';

/**
 * @type CatalogsReportStats
 * Diagnostics aggregated numbers
 * @export
 */
export type CatalogsReportStats = { reportType: 'DISTRIBUTION_ISSUES' } & CatalogsReportDistributionStats | { reportType: 'FEED_INGESTION_ISSUES' } & CatalogsReportFeedIngestionStats;

export function CatalogsReportStatsFromJSON(json: any): CatalogsReportStats {
    return CatalogsReportStatsFromJSONTyped(json, false);
}

export function CatalogsReportStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsReportStats {
    if (json == null) {
        return json;
    }
    switch (json['report_type']) {
        case 'DISTRIBUTION_ISSUES':
            return Object.assign({}, CatalogsReportDistributionStatsFromJSONTyped(json, true), { reportType: 'DISTRIBUTION_ISSUES' } as const);
        case 'FEED_INGESTION_ISSUES':
            return Object.assign({}, CatalogsReportFeedIngestionStatsFromJSONTyped(json, true), { reportType: 'FEED_INGESTION_ISSUES' } as const);
        default:
            throw new Error(`No variant of CatalogsReportStats exists with 'reportType=${json['reportType']}'`);
    }
}

export function CatalogsReportStatsToJSON(value?: CatalogsReportStats | null): any {
    if (value == null) {
        return value;
    }
    switch (value['reportType']) {
        case 'DISTRIBUTION_ISSUES':
            return CatalogsReportDistributionStatsToJSON(value);
        case 'FEED_INGESTION_ISSUES':
            return CatalogsReportFeedIngestionStatsToJSON(value);
        default:
            throw new Error(`No variant of CatalogsReportStats exists with 'reportType=${value['reportType']}'`);
    }

}

