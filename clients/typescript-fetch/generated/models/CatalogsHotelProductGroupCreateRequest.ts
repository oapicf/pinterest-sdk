/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsHotelProductGroupFilters } from './CatalogsHotelProductGroupFilters';
import {
    CatalogsHotelProductGroupFiltersFromJSON,
    CatalogsHotelProductGroupFiltersFromJSONTyped,
    CatalogsHotelProductGroupFiltersToJSON,
    CatalogsHotelProductGroupFiltersToJSONTyped,
} from './CatalogsHotelProductGroupFilters';

/**
 * Request object for creating a hotel product group.
 * @export
 * @interface CatalogsHotelProductGroupCreateRequest
 */
export interface CatalogsHotelProductGroupCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsHotelProductGroupCreateRequest
     */
    catalogType: CatalogsHotelProductGroupCreateRequestCatalogTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CatalogsHotelProductGroupCreateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsHotelProductGroupCreateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {CatalogsHotelProductGroupFilters}
     * @memberof CatalogsHotelProductGroupCreateRequest
     */
    filters: CatalogsHotelProductGroupFilters;
    /**
     * Catalog id pertaining to the hotel product group.
     * @type {string}
     * @memberof CatalogsHotelProductGroupCreateRequest
     */
    catalogId: string;
}


/**
 * @export
 */
export const CatalogsHotelProductGroupCreateRequestCatalogTypeEnum = {
    Hotel: 'HOTEL'
} as const;
export type CatalogsHotelProductGroupCreateRequestCatalogTypeEnum = typeof CatalogsHotelProductGroupCreateRequestCatalogTypeEnum[keyof typeof CatalogsHotelProductGroupCreateRequestCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsHotelProductGroupCreateRequest interface.
 */
export function instanceOfCatalogsHotelProductGroupCreateRequest(value: object): value is CatalogsHotelProductGroupCreateRequest {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('filters' in value) || value['filters'] === undefined) return false;
    if (!('catalogId' in value) || value['catalogId'] === undefined) return false;
    return true;
}

export function CatalogsHotelProductGroupCreateRequestFromJSON(json: any): CatalogsHotelProductGroupCreateRequest {
    return CatalogsHotelProductGroupCreateRequestFromJSONTyped(json, false);
}

export function CatalogsHotelProductGroupCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsHotelProductGroupCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'filters': CatalogsHotelProductGroupFiltersFromJSON(json['filters']),
        'catalogId': json['catalog_id'],
    };
}

  export function CatalogsHotelProductGroupCreateRequestToJSON(json: any): CatalogsHotelProductGroupCreateRequest {
      return CatalogsHotelProductGroupCreateRequestToJSONTyped(json, false);
  }

  export function CatalogsHotelProductGroupCreateRequestToJSONTyped(value?: CatalogsHotelProductGroupCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'name': value['name'],
        'description': value['description'],
        'filters': CatalogsHotelProductGroupFiltersToJSON(value['filters']),
        'catalog_id': value['catalogId'],
    };
}

