/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsCreativeAssetsProductGroupFilters } from './CatalogsCreativeAssetsProductGroupFilters';
import {
    CatalogsCreativeAssetsProductGroupFiltersFromJSON,
    CatalogsCreativeAssetsProductGroupFiltersFromJSONTyped,
    CatalogsCreativeAssetsProductGroupFiltersToJSON,
    CatalogsCreativeAssetsProductGroupFiltersToJSONTyped,
} from './CatalogsCreativeAssetsProductGroupFilters';

/**
 * Request object for creating a creative assets product group.
 * @export
 * @interface CatalogsCreativeAssetsProductGroupCreateRequest
 */
export interface CatalogsCreativeAssetsProductGroupCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupCreateRequest
     */
    catalogType: CatalogsCreativeAssetsProductGroupCreateRequestCatalogTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupCreateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupCreateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {CatalogsCreativeAssetsProductGroupFilters}
     * @memberof CatalogsCreativeAssetsProductGroupCreateRequest
     */
    filters: CatalogsCreativeAssetsProductGroupFilters;
    /**
     * Catalog id pertaining to the creative assets product group.
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupCreateRequest
     */
    catalogId: string;
}


/**
 * @export
 */
export const CatalogsCreativeAssetsProductGroupCreateRequestCatalogTypeEnum = {
    CreativeAssets: 'CREATIVE_ASSETS'
} as const;
export type CatalogsCreativeAssetsProductGroupCreateRequestCatalogTypeEnum = typeof CatalogsCreativeAssetsProductGroupCreateRequestCatalogTypeEnum[keyof typeof CatalogsCreativeAssetsProductGroupCreateRequestCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsCreativeAssetsProductGroupCreateRequest interface.
 */
export function instanceOfCatalogsCreativeAssetsProductGroupCreateRequest(value: object): value is CatalogsCreativeAssetsProductGroupCreateRequest {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('filters' in value) || value['filters'] === undefined) return false;
    if (!('catalogId' in value) || value['catalogId'] === undefined) return false;
    return true;
}

export function CatalogsCreativeAssetsProductGroupCreateRequestFromJSON(json: any): CatalogsCreativeAssetsProductGroupCreateRequest {
    return CatalogsCreativeAssetsProductGroupCreateRequestFromJSONTyped(json, false);
}

export function CatalogsCreativeAssetsProductGroupCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsCreativeAssetsProductGroupCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'filters': CatalogsCreativeAssetsProductGroupFiltersFromJSON(json['filters']),
        'catalogId': json['catalog_id'],
    };
}

  export function CatalogsCreativeAssetsProductGroupCreateRequestToJSON(json: any): CatalogsCreativeAssetsProductGroupCreateRequest {
      return CatalogsCreativeAssetsProductGroupCreateRequestToJSONTyped(json, false);
  }

  export function CatalogsCreativeAssetsProductGroupCreateRequestToJSONTyped(value?: CatalogsCreativeAssetsProductGroupCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'name': value['name'],
        'description': value['description'],
        'filters': CatalogsCreativeAssetsProductGroupFiltersToJSON(value['filters']),
        'catalog_id': value['catalogId'],
    };
}

