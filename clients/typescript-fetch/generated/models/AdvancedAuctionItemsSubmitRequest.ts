/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdvancedAuctionItemsSubmitRecord } from './AdvancedAuctionItemsSubmitRecord';
import {
    AdvancedAuctionItemsSubmitRecordFromJSON,
    AdvancedAuctionItemsSubmitRecordFromJSONTyped,
    AdvancedAuctionItemsSubmitRecordToJSON,
    AdvancedAuctionItemsSubmitRecordToJSONTyped,
} from './AdvancedAuctionItemsSubmitRecord';

/**
 * Request containing operations to perform on bid prices and bid multipliers for a batch of retail catalog items
 * @export
 * @interface AdvancedAuctionItemsSubmitRequest
 */
export interface AdvancedAuctionItemsSubmitRequest {
    /**
     * Catalog id pertaining to all items
     * @type {string}
     * @memberof AdvancedAuctionItemsSubmitRequest
     */
    catalogId: string;
    /**
     * Array of item bid option operations
     * @type {Array<AdvancedAuctionItemsSubmitRecord>}
     * @memberof AdvancedAuctionItemsSubmitRequest
     */
    items: Array<AdvancedAuctionItemsSubmitRecord>;
}

/**
 * Check if a given object implements the AdvancedAuctionItemsSubmitRequest interface.
 */
export function instanceOfAdvancedAuctionItemsSubmitRequest(value: object): value is AdvancedAuctionItemsSubmitRequest {
    if (!('catalogId' in value) || value['catalogId'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function AdvancedAuctionItemsSubmitRequestFromJSON(json: any): AdvancedAuctionItemsSubmitRequest {
    return AdvancedAuctionItemsSubmitRequestFromJSONTyped(json, false);
}

export function AdvancedAuctionItemsSubmitRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionItemsSubmitRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogId': json['catalog_id'],
        'items': ((json['items'] as Array<any>).map(AdvancedAuctionItemsSubmitRecordFromJSON)),
    };
}

  export function AdvancedAuctionItemsSubmitRequestToJSON(json: any): AdvancedAuctionItemsSubmitRequest {
      return AdvancedAuctionItemsSubmitRequestToJSONTyped(json, false);
  }

  export function AdvancedAuctionItemsSubmitRequestToJSONTyped(value?: AdvancedAuctionItemsSubmitRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_id': value['catalogId'],
        'items': ((value['items'] as Array<any>).map(AdvancedAuctionItemsSubmitRecordToJSON)),
    };
}

