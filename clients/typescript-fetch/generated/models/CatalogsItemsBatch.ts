/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsItemsBatch } from './CatalogsCreativeAssetsItemsBatch';
import {
    instanceOfCatalogsCreativeAssetsItemsBatch,
    CatalogsCreativeAssetsItemsBatchFromJSON,
    CatalogsCreativeAssetsItemsBatchFromJSONTyped,
    CatalogsCreativeAssetsItemsBatchToJSON,
} from './CatalogsCreativeAssetsItemsBatch';
import type { CatalogsHotelItemsBatch } from './CatalogsHotelItemsBatch';
import {
    instanceOfCatalogsHotelItemsBatch,
    CatalogsHotelItemsBatchFromJSON,
    CatalogsHotelItemsBatchFromJSONTyped,
    CatalogsHotelItemsBatchToJSON,
} from './CatalogsHotelItemsBatch';
import type { CatalogsRetailItemsBatch } from './CatalogsRetailItemsBatch';
import {
    instanceOfCatalogsRetailItemsBatch,
    CatalogsRetailItemsBatchFromJSON,
    CatalogsRetailItemsBatchFromJSONTyped,
    CatalogsRetailItemsBatchToJSON,
} from './CatalogsRetailItemsBatch';

/**
 * @type CatalogsItemsBatch
 * Object describing the catalogs items batch
 * @export
 */
export type CatalogsItemsBatch = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsItemsBatch | { catalogType: 'HOTEL' } & CatalogsHotelItemsBatch | { catalogType: 'RETAIL' } & CatalogsRetailItemsBatch;

export function CatalogsItemsBatchFromJSON(json: any): CatalogsItemsBatch {
    return CatalogsItemsBatchFromJSONTyped(json, false);
}

export function CatalogsItemsBatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsItemsBatch {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsItemsBatchFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelItemsBatchFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailItemsBatchFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsItemsBatch exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsItemsBatchToJSON(value?: CatalogsItemsBatch | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsItemsBatchToJSON(value);
        case 'HOTEL':
            return CatalogsHotelItemsBatchToJSON(value);
        case 'RETAIL':
            return CatalogsRetailItemsBatchToJSON(value);
        default:
            throw new Error(`No variant of CatalogsItemsBatch exists with 'catalogType=${value['catalogType']}'`);
    }

}

