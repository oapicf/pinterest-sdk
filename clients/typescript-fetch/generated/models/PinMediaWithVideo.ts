/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PinMedia } from './PinMedia';
import {
    PinMediaFromJSON,
    PinMediaFromJSONTyped,
    PinMediaToJSON,
    PinMediaToJSONTyped,
} from './PinMedia';
import type { PinMediaWithImageAllOfImages } from './PinMediaWithImageAllOfImages';
import {
    PinMediaWithImageAllOfImagesFromJSON,
    PinMediaWithImageAllOfImagesFromJSONTyped,
    PinMediaWithImageAllOfImagesToJSON,
    PinMediaWithImageAllOfImagesToJSONTyped,
} from './PinMediaWithImageAllOfImages';

/**
 * Pin with video.
 * @export
 * @interface PinMediaWithVideo
 */
export interface PinMediaWithVideo extends PinMedia {
    /**
     * 
     * @type {PinMediaWithImageAllOfImages}
     * @memberof PinMediaWithVideo
     */
    images?: PinMediaWithImageAllOfImages;
    /**
     * 
     * @type {string}
     * @memberof PinMediaWithVideo
     */
    coverImageUrl?: string;
    /**
     * Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
     * @type {string}
     * @memberof PinMediaWithVideo
     */
    videoUrl?: string | null;
    /**
     * Duration (in milliseconds)
     * @type {number}
     * @memberof PinMediaWithVideo
     */
    duration?: number;
    /**
     * Height (in pixels)
     * @type {number}
     * @memberof PinMediaWithVideo
     */
    height?: number;
    /**
     * Width (in pixels)
     * @type {number}
     * @memberof PinMediaWithVideo
     */
    width?: number;
}

/**
 * Check if a given object implements the PinMediaWithVideo interface.
 */
export function instanceOfPinMediaWithVideo(value: object): value is PinMediaWithVideo {
    return true;
}

export function PinMediaWithVideoFromJSON(json: any): PinMediaWithVideo {
    return PinMediaWithVideoFromJSONTyped(json, false);
}

export function PinMediaWithVideoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PinMediaWithVideo {
    if (json == null) {
        return json;
    }
    return {
        ...PinMediaFromJSONTyped(json, true),
        'images': json['images'] == null ? undefined : PinMediaWithImageAllOfImagesFromJSON(json['images']),
        'coverImageUrl': json['cover_image_url'] == null ? undefined : json['cover_image_url'],
        'videoUrl': json['video_url'] == null ? undefined : json['video_url'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'height': json['height'] == null ? undefined : json['height'],
        'width': json['width'] == null ? undefined : json['width'],
    };
}

  export function PinMediaWithVideoToJSON(json: any): PinMediaWithVideo {
      return PinMediaWithVideoToJSONTyped(json, false);
  }

  export function PinMediaWithVideoToJSONTyped(value?: PinMediaWithVideo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...PinMediaToJSONTyped(value, true),
        'images': PinMediaWithImageAllOfImagesToJSON(value['images']),
        'cover_image_url': value['coverImageUrl'],
        'video_url': value['videoUrl'],
        'duration': value['duration'],
        'height': value['height'],
        'width': value['width'],
    };
}

