/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ItemCreateBatchRecord } from './ItemCreateBatchRecord';
import {
    instanceOfItemCreateBatchRecord,
    ItemCreateBatchRecordFromJSON,
    ItemCreateBatchRecordFromJSONTyped,
    ItemCreateBatchRecordToJSON,
} from './ItemCreateBatchRecord';
import type { ItemDeleteBatchRecord } from './ItemDeleteBatchRecord';
import {
    instanceOfItemDeleteBatchRecord,
    ItemDeleteBatchRecordFromJSON,
    ItemDeleteBatchRecordFromJSONTyped,
    ItemDeleteBatchRecordToJSON,
} from './ItemDeleteBatchRecord';
import type { ItemDeleteDiscontinuedBatchRecord } from './ItemDeleteDiscontinuedBatchRecord';
import {
    instanceOfItemDeleteDiscontinuedBatchRecord,
    ItemDeleteDiscontinuedBatchRecordFromJSON,
    ItemDeleteDiscontinuedBatchRecordFromJSONTyped,
    ItemDeleteDiscontinuedBatchRecordToJSON,
} from './ItemDeleteDiscontinuedBatchRecord';
import type { ItemUpdateBatchRecord } from './ItemUpdateBatchRecord';
import {
    instanceOfItemUpdateBatchRecord,
    ItemUpdateBatchRecordFromJSON,
    ItemUpdateBatchRecordFromJSONTyped,
    ItemUpdateBatchRecordToJSON,
} from './ItemUpdateBatchRecord';
import type { ItemUpsertBatchRecord } from './ItemUpsertBatchRecord';
import {
    instanceOfItemUpsertBatchRecord,
    ItemUpsertBatchRecordFromJSON,
    ItemUpsertBatchRecordFromJSONTyped,
    ItemUpsertBatchRecordToJSON,
} from './ItemUpsertBatchRecord';

/**
 * @type ItemBatchRecord
 * Object describing an item batch record
 * @export
 */
export type ItemBatchRecord = ItemCreateBatchRecord | ItemDeleteBatchRecord | ItemDeleteDiscontinuedBatchRecord | ItemUpdateBatchRecord | ItemUpsertBatchRecord;

export function ItemBatchRecordFromJSON(json: any): ItemBatchRecord {
    return ItemBatchRecordFromJSONTyped(json, false);
}

export function ItemBatchRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemBatchRecord {
    if (json == null) {
        return json;
    }
    if (instanceOfItemCreateBatchRecord(json)) {
        return ItemCreateBatchRecordFromJSONTyped(json, true);
    }
    if (instanceOfItemDeleteBatchRecord(json)) {
        return ItemDeleteBatchRecordFromJSONTyped(json, true);
    }
    if (instanceOfItemDeleteDiscontinuedBatchRecord(json)) {
        return ItemDeleteDiscontinuedBatchRecordFromJSONTyped(json, true);
    }
    if (instanceOfItemUpdateBatchRecord(json)) {
        return ItemUpdateBatchRecordFromJSONTyped(json, true);
    }
    if (instanceOfItemUpsertBatchRecord(json)) {
        return ItemUpsertBatchRecordFromJSONTyped(json, true);
    }

    return {} as any;
}

export function ItemBatchRecordToJSON(value?: ItemBatchRecord | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfItemCreateBatchRecord(value)) {
        return ItemCreateBatchRecordToJSON(value as ItemCreateBatchRecord);
    }
    if (instanceOfItemDeleteBatchRecord(value)) {
        return ItemDeleteBatchRecordToJSON(value as ItemDeleteBatchRecord);
    }
    if (instanceOfItemDeleteDiscontinuedBatchRecord(value)) {
        return ItemDeleteDiscontinuedBatchRecordToJSON(value as ItemDeleteDiscontinuedBatchRecord);
    }
    if (instanceOfItemUpdateBatchRecord(value)) {
        return ItemUpdateBatchRecordToJSON(value as ItemUpdateBatchRecord);
    }
    if (instanceOfItemUpsertBatchRecord(value)) {
        return ItemUpsertBatchRecordToJSON(value as ItemUpsertBatchRecord);
    }

    return {};
}

