/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeletePartnerAssetAccessBodyAccessesInner
 */
export interface DeletePartnerAssetAccessBodyAccessesInner {
    /**
     * Unique identifier of a business partner to update asset access to.
     * @type {string}
     * @memberof DeletePartnerAssetAccessBodyAccessesInner
     */
    partnerId: string;
    /**
     * Unique identifier of the business asset.
     * @type {string}
     * @memberof DeletePartnerAssetAccessBodyAccessesInner
     */
    assetId: string;
    /**
     * If partner_type=INTERNAL, the deleted asset access is for the access the partner has to your business asset.<br>
     * If partner_type=EXTERNAL, the deleted asset access is for the access you have to the partner's business asset.
     * @type {string}
     * @memberof DeletePartnerAssetAccessBodyAccessesInner
     */
    partnerType?: DeletePartnerAssetAccessBodyAccessesInnerPartnerTypeEnum;
}


/**
 * @export
 */
export const DeletePartnerAssetAccessBodyAccessesInnerPartnerTypeEnum = {
    Internal: 'INTERNAL',
    External: 'EXTERNAL'
} as const;
export type DeletePartnerAssetAccessBodyAccessesInnerPartnerTypeEnum = typeof DeletePartnerAssetAccessBodyAccessesInnerPartnerTypeEnum[keyof typeof DeletePartnerAssetAccessBodyAccessesInnerPartnerTypeEnum];


/**
 * Check if a given object implements the DeletePartnerAssetAccessBodyAccessesInner interface.
 */
export function instanceOfDeletePartnerAssetAccessBodyAccessesInner(value: object): value is DeletePartnerAssetAccessBodyAccessesInner {
    if (!('partnerId' in value) || value['partnerId'] === undefined) return false;
    if (!('assetId' in value) || value['assetId'] === undefined) return false;
    return true;
}

export function DeletePartnerAssetAccessBodyAccessesInnerFromJSON(json: any): DeletePartnerAssetAccessBodyAccessesInner {
    return DeletePartnerAssetAccessBodyAccessesInnerFromJSONTyped(json, false);
}

export function DeletePartnerAssetAccessBodyAccessesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeletePartnerAssetAccessBodyAccessesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'partnerId': json['partner_id'],
        'assetId': json['asset_id'],
        'partnerType': json['partner_type'] == null ? undefined : json['partner_type'],
    };
}

  export function DeletePartnerAssetAccessBodyAccessesInnerToJSON(json: any): DeletePartnerAssetAccessBodyAccessesInner {
      return DeletePartnerAssetAccessBodyAccessesInnerToJSONTyped(json, false);
  }

  export function DeletePartnerAssetAccessBodyAccessesInnerToJSONTyped(value?: DeletePartnerAssetAccessBodyAccessesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'partner_id': value['partnerId'],
        'asset_id': value['assetId'],
        'partner_type': value['partnerType'],
    };
}

