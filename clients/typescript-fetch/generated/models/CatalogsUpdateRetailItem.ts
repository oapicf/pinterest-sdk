/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UpdatableItemAttributes } from './UpdatableItemAttributes';
import {
    UpdatableItemAttributesFromJSON,
    UpdatableItemAttributesFromJSONTyped,
    UpdatableItemAttributesToJSON,
    UpdatableItemAttributesToJSONTyped,
} from './UpdatableItemAttributes';
import type { UpdateMaskFieldType } from './UpdateMaskFieldType';
import {
    UpdateMaskFieldTypeFromJSON,
    UpdateMaskFieldTypeFromJSONTyped,
    UpdateMaskFieldTypeToJSON,
    UpdateMaskFieldTypeToJSONTyped,
} from './UpdateMaskFieldType';

/**
 * An item to be updated
 * @export
 * @interface CatalogsUpdateRetailItem
 */
export interface CatalogsUpdateRetailItem {
    /**
     * The catalog item id in the merchant namespace
     * @type {string}
     * @memberof CatalogsUpdateRetailItem
     */
    itemId: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsUpdateRetailItem
     */
    operation: CatalogsUpdateRetailItemOperationEnum;
    /**
     * 
     * @type {UpdatableItemAttributes}
     * @memberof CatalogsUpdateRetailItem
     */
    attributes: UpdatableItemAttributes;
    /**
     * The list of product attributes to be updated. Attributes specified in the update mask without a value specified in the body will be deleted from the product item.
     * @type {Array<UpdateMaskFieldType>}
     * @memberof CatalogsUpdateRetailItem
     */
    updateMask?: Array<UpdateMaskFieldType> | null;
}


/**
 * @export
 */
export const CatalogsUpdateRetailItemOperationEnum = {
    Update: 'UPDATE'
} as const;
export type CatalogsUpdateRetailItemOperationEnum = typeof CatalogsUpdateRetailItemOperationEnum[keyof typeof CatalogsUpdateRetailItemOperationEnum];


/**
 * Check if a given object implements the CatalogsUpdateRetailItem interface.
 */
export function instanceOfCatalogsUpdateRetailItem(value: object): value is CatalogsUpdateRetailItem {
    if (!('itemId' in value) || value['itemId'] === undefined) return false;
    if (!('operation' in value) || value['operation'] === undefined) return false;
    if (!('attributes' in value) || value['attributes'] === undefined) return false;
    return true;
}

export function CatalogsUpdateRetailItemFromJSON(json: any): CatalogsUpdateRetailItem {
    return CatalogsUpdateRetailItemFromJSONTyped(json, false);
}

export function CatalogsUpdateRetailItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsUpdateRetailItem {
    if (json == null) {
        return json;
    }
    return {
        
        'itemId': json['item_id'],
        'operation': json['operation'],
        'attributes': UpdatableItemAttributesFromJSON(json['attributes']),
        'updateMask': json['update_mask'] == null ? undefined : ((json['update_mask'] as Array<any>).map(UpdateMaskFieldTypeFromJSON)),
    };
}

  export function CatalogsUpdateRetailItemToJSON(json: any): CatalogsUpdateRetailItem {
      return CatalogsUpdateRetailItemToJSONTyped(json, false);
  }

  export function CatalogsUpdateRetailItemToJSONTyped(value?: CatalogsUpdateRetailItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'item_id': value['itemId'],
        'operation': value['operation'],
        'attributes': UpdatableItemAttributesToJSON(value['attributes']),
        'update_mask': value['updateMask'] == null ? undefined : ((value['updateMask'] as Array<any>).map(UpdateMaskFieldTypeToJSON)),
    };
}

