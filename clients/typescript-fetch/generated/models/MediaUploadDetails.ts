/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaUploadType } from './MediaUploadType';
import {
    MediaUploadTypeFromJSON,
    MediaUploadTypeFromJSONTyped,
    MediaUploadTypeToJSON,
    MediaUploadTypeToJSONTyped,
} from './MediaUploadType';
import type { MediaUploadStatus } from './MediaUploadStatus';
import {
    MediaUploadStatusFromJSON,
    MediaUploadStatusFromJSONTyped,
    MediaUploadStatusToJSON,
    MediaUploadStatusToJSONTyped,
} from './MediaUploadStatus';

/**
 * Media upload details
 * @export
 * @interface MediaUploadDetails
 */
export interface MediaUploadDetails {
    /**
     * 
     * @type {string}
     * @memberof MediaUploadDetails
     */
    readonly mediaId?: string;
    /**
     * 
     * @type {MediaUploadType}
     * @memberof MediaUploadDetails
     */
    readonly mediaType?: MediaUploadType;
    /**
     * 
     * @type {MediaUploadStatus}
     * @memberof MediaUploadDetails
     */
    readonly status?: MediaUploadStatus;
}



/**
 * Check if a given object implements the MediaUploadDetails interface.
 */
export function instanceOfMediaUploadDetails(value: object): value is MediaUploadDetails {
    return true;
}

export function MediaUploadDetailsFromJSON(json: any): MediaUploadDetails {
    return MediaUploadDetailsFromJSONTyped(json, false);
}

export function MediaUploadDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaUploadDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'mediaId': json['media_id'] == null ? undefined : json['media_id'],
        'mediaType': json['media_type'] == null ? undefined : MediaUploadTypeFromJSON(json['media_type']),
        'status': json['status'] == null ? undefined : MediaUploadStatusFromJSON(json['status']),
    };
}

  export function MediaUploadDetailsToJSON(json: any): MediaUploadDetails {
      return MediaUploadDetailsToJSONTyped(json, false);
  }

  export function MediaUploadDetailsToJSONTyped(value?: Omit<MediaUploadDetails, 'media_id'|'media_type'|'status'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

