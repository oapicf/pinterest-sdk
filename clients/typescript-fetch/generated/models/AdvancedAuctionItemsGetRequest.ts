/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdvancedAuctionItemsGetRecord } from './AdvancedAuctionItemsGetRecord';
import {
    AdvancedAuctionItemsGetRecordFromJSON,
    AdvancedAuctionItemsGetRecordFromJSONTyped,
    AdvancedAuctionItemsGetRecordToJSON,
    AdvancedAuctionItemsGetRecordToJSONTyped,
} from './AdvancedAuctionItemsGetRecord';

/**
 * Request object used to get bid options values for a batch of retail catalog items
 * @export
 * @interface AdvancedAuctionItemsGetRequest
 */
export interface AdvancedAuctionItemsGetRequest {
    /**
     * Catalog id pertaining to the retail item
     * @type {string}
     * @memberof AdvancedAuctionItemsGetRequest
     */
    catalogId: string;
    /**
     * A list of retail catalog items to fetch bid options for
     * @type {Array<AdvancedAuctionItemsGetRecord>}
     * @memberof AdvancedAuctionItemsGetRequest
     */
    items: Array<AdvancedAuctionItemsGetRecord>;
}

/**
 * Check if a given object implements the AdvancedAuctionItemsGetRequest interface.
 */
export function instanceOfAdvancedAuctionItemsGetRequest(value: object): value is AdvancedAuctionItemsGetRequest {
    if (!('catalogId' in value) || value['catalogId'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function AdvancedAuctionItemsGetRequestFromJSON(json: any): AdvancedAuctionItemsGetRequest {
    return AdvancedAuctionItemsGetRequestFromJSONTyped(json, false);
}

export function AdvancedAuctionItemsGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionItemsGetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogId': json['catalog_id'],
        'items': ((json['items'] as Array<any>).map(AdvancedAuctionItemsGetRecordFromJSON)),
    };
}

  export function AdvancedAuctionItemsGetRequestToJSON(json: any): AdvancedAuctionItemsGetRequest {
      return AdvancedAuctionItemsGetRequestToJSONTyped(json, false);
  }

  export function AdvancedAuctionItemsGetRequestToJSONTyped(value?: AdvancedAuctionItemsGetRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_id': value['catalogId'],
        'items': ((value['items'] as Array<any>).map(AdvancedAuctionItemsGetRecordToJSON)),
    };
}

