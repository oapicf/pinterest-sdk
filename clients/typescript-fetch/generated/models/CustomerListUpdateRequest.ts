/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserListOperationType } from './UserListOperationType';
import {
    UserListOperationTypeFromJSON,
    UserListOperationTypeFromJSONTyped,
    UserListOperationTypeToJSON,
    UserListOperationTypeToJSONTyped,
} from './UserListOperationType';
import type { Exception } from './Exception';
import {
    ExceptionFromJSON,
    ExceptionFromJSONTyped,
    ExceptionToJSON,
    ExceptionToJSONTyped,
} from './Exception';

/**
 * 
 * @export
 * @interface CustomerListUpdateRequest
 */
export interface CustomerListUpdateRequest {
    /**
     * Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
     * @type {string}
     * @memberof CustomerListUpdateRequest
     */
    records: string;
    /**
     * 
     * @type {UserListOperationType}
     * @memberof CustomerListUpdateRequest
     */
    operationType: UserListOperationType;
    /**
     * 
     * @type {Exception}
     * @memberof CustomerListUpdateRequest
     */
    exceptions?: Exception;
}



/**
 * Check if a given object implements the CustomerListUpdateRequest interface.
 */
export function instanceOfCustomerListUpdateRequest(value: object): value is CustomerListUpdateRequest {
    if (!('records' in value) || value['records'] === undefined) return false;
    if (!('operationType' in value) || value['operationType'] === undefined) return false;
    return true;
}

export function CustomerListUpdateRequestFromJSON(json: any): CustomerListUpdateRequest {
    return CustomerListUpdateRequestFromJSONTyped(json, false);
}

export function CustomerListUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerListUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'records': json['records'],
        'operationType': UserListOperationTypeFromJSON(json['operation_type']),
        'exceptions': json['exceptions'] == null ? undefined : json['exceptions'],
    };
}

  export function CustomerListUpdateRequestToJSON(json: any): CustomerListUpdateRequest {
      return CustomerListUpdateRequestToJSONTyped(json, false);
  }

  export function CustomerListUpdateRequestToJSONTyped(value?: CustomerListUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'records': value['records'],
        'operation_type': UserListOperationTypeToJSON(value['operationType']),
        'exceptions': value['exceptions'],
    };
}

