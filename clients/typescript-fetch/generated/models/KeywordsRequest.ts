/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeywordsCommon } from './KeywordsCommon';
import {
    KeywordsCommonFromJSON,
    KeywordsCommonFromJSONTyped,
    KeywordsCommonToJSON,
    KeywordsCommonToJSONTyped,
} from './KeywordsCommon';

/**
 * 
 * @export
 * @interface KeywordsRequest
 */
export interface KeywordsRequest {
    /**
     * Keyword JSON array. Each array element has 3 fields
     * @type {Array<KeywordsCommon>}
     * @memberof KeywordsRequest
     */
    keywords: Array<KeywordsCommon>;
    /**
     * Keyword parent entity ID (advertiser, campaign, ad group).
     * @type {string}
     * @memberof KeywordsRequest
     */
    parentId: string;
}

/**
 * Check if a given object implements the KeywordsRequest interface.
 */
export function instanceOfKeywordsRequest(value: object): value is KeywordsRequest {
    if (!('keywords' in value) || value['keywords'] === undefined) return false;
    if (!('parentId' in value) || value['parentId'] === undefined) return false;
    return true;
}

export function KeywordsRequestFromJSON(json: any): KeywordsRequest {
    return KeywordsRequestFromJSONTyped(json, false);
}

export function KeywordsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeywordsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'keywords': ((json['keywords'] as Array<any>).map(KeywordsCommonFromJSON)),
        'parentId': json['parent_id'],
    };
}

  export function KeywordsRequestToJSON(json: any): KeywordsRequest {
      return KeywordsRequestToJSONTyped(json, false);
  }

  export function KeywordsRequestToJSONTyped(value?: KeywordsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'keywords': ((value['keywords'] as Array<any>).map(KeywordsCommonToJSON)),
        'parent_id': value['parentId'],
    };
}

