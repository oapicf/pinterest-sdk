/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsHotelProductGroupFilters } from './CatalogsHotelProductGroupFilters';
import {
    CatalogsHotelProductGroupFiltersFromJSON,
    CatalogsHotelProductGroupFiltersFromJSONTyped,
    CatalogsHotelProductGroupFiltersToJSON,
    CatalogsHotelProductGroupFiltersToJSONTyped,
} from './CatalogsHotelProductGroupFilters';

/**
 * Request object to list products for a given hotel catalog_id and product group filter.
 * @export
 * @interface CatalogsHotelListProductsByCatalogBasedFilterRequest
 */
export interface CatalogsHotelListProductsByCatalogBasedFilterRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsHotelListProductsByCatalogBasedFilterRequest
     */
    catalogType: CatalogsHotelListProductsByCatalogBasedFilterRequestCatalogTypeEnum;
    /**
     * Catalog id pertaining to the hotel product group.
     * @type {string}
     * @memberof CatalogsHotelListProductsByCatalogBasedFilterRequest
     */
    catalogId: string;
    /**
     * 
     * @type {CatalogsHotelProductGroupFilters}
     * @memberof CatalogsHotelListProductsByCatalogBasedFilterRequest
     */
    filters: CatalogsHotelProductGroupFilters;
}


/**
 * @export
 */
export const CatalogsHotelListProductsByCatalogBasedFilterRequestCatalogTypeEnum = {
    Hotel: 'HOTEL'
} as const;
export type CatalogsHotelListProductsByCatalogBasedFilterRequestCatalogTypeEnum = typeof CatalogsHotelListProductsByCatalogBasedFilterRequestCatalogTypeEnum[keyof typeof CatalogsHotelListProductsByCatalogBasedFilterRequestCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsHotelListProductsByCatalogBasedFilterRequest interface.
 */
export function instanceOfCatalogsHotelListProductsByCatalogBasedFilterRequest(value: object): value is CatalogsHotelListProductsByCatalogBasedFilterRequest {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('catalogId' in value) || value['catalogId'] === undefined) return false;
    if (!('filters' in value) || value['filters'] === undefined) return false;
    return true;
}

export function CatalogsHotelListProductsByCatalogBasedFilterRequestFromJSON(json: any): CatalogsHotelListProductsByCatalogBasedFilterRequest {
    return CatalogsHotelListProductsByCatalogBasedFilterRequestFromJSONTyped(json, false);
}

export function CatalogsHotelListProductsByCatalogBasedFilterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsHotelListProductsByCatalogBasedFilterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'catalogId': json['catalog_id'],
        'filters': CatalogsHotelProductGroupFiltersFromJSON(json['filters']),
    };
}

  export function CatalogsHotelListProductsByCatalogBasedFilterRequestToJSON(json: any): CatalogsHotelListProductsByCatalogBasedFilterRequest {
      return CatalogsHotelListProductsByCatalogBasedFilterRequestToJSONTyped(json, false);
  }

  export function CatalogsHotelListProductsByCatalogBasedFilterRequestToJSONTyped(value?: CatalogsHotelListProductsByCatalogBasedFilterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'catalog_id': value['catalogId'],
        'filters': CatalogsHotelProductGroupFiltersToJSON(value['filters']),
    };
}

