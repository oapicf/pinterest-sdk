/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsItemsFilter } from './CatalogsCreativeAssetsItemsFilter';
import {
    instanceOfCatalogsCreativeAssetsItemsFilter,
    CatalogsCreativeAssetsItemsFilterFromJSON,
    CatalogsCreativeAssetsItemsFilterFromJSONTyped,
    CatalogsCreativeAssetsItemsFilterToJSON,
} from './CatalogsCreativeAssetsItemsFilter';
import type { CatalogsHotelItemsFilter } from './CatalogsHotelItemsFilter';
import {
    instanceOfCatalogsHotelItemsFilter,
    CatalogsHotelItemsFilterFromJSON,
    CatalogsHotelItemsFilterFromJSONTyped,
    CatalogsHotelItemsFilterToJSON,
} from './CatalogsHotelItemsFilter';
import type { CatalogsRetailItemsFilter } from './CatalogsRetailItemsFilter';
import {
    instanceOfCatalogsRetailItemsFilter,
    CatalogsRetailItemsFilterFromJSON,
    CatalogsRetailItemsFilterFromJSONTyped,
    CatalogsRetailItemsFilterToJSON,
} from './CatalogsRetailItemsFilter';

/**
 * @type CatalogsItemsFilters
 * 
 * @export
 */
export type CatalogsItemsFilters = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsItemsFilter | { catalogType: 'HOTEL' } & CatalogsHotelItemsFilter | { catalogType: 'RETAIL' } & CatalogsRetailItemsFilter;

export function CatalogsItemsFiltersFromJSON(json: any): CatalogsItemsFilters {
    return CatalogsItemsFiltersFromJSONTyped(json, false);
}

export function CatalogsItemsFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsItemsFilters {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsItemsFilterFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelItemsFilterFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailItemsFilterFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsItemsFilters exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsItemsFiltersToJSON(value?: CatalogsItemsFilters | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsItemsFilterToJSON(value);
        case 'HOTEL':
            return CatalogsHotelItemsFilterToJSON(value);
        case 'RETAIL':
            return CatalogsRetailItemsFilterToJSON(value);
        default:
            throw new Error(`No variant of CatalogsItemsFilters exists with 'catalogType=${value['catalogType']}'`);
    }

}

