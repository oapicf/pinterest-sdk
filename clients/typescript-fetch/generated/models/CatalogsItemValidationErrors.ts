/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsItemValidationDetails } from './CatalogsItemValidationDetails';
import {
    CatalogsItemValidationDetailsFromJSON,
    CatalogsItemValidationDetailsFromJSONTyped,
    CatalogsItemValidationDetailsToJSON,
    CatalogsItemValidationDetailsToJSONTyped,
} from './CatalogsItemValidationDetails';

/**
 * 
 * @export
 * @interface CatalogsItemValidationErrors
 */
export interface CatalogsItemValidationErrors {
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    aDULTINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    aDWORDSFORMATINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    aVAILABILITYINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    bLOCKLISTEDIMAGESIGNATURE?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    dESCRIPTIONMISSING?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    dUPLICATEPRODUCTS?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    iMAGELINKINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    iMAGELINKLENGTHTOOLONG?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    iMAGELINKMISSING?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    iNVALIDDOMAIN?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    iTEMIDMISSING?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    iTEMMAINIMAGEDOWNLOADFAILURE?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    lINKFORMATINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    lINKLENGTHTOOLONG?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    lISTPRICEINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    mAXITEMSPERITEMGROUPEXCEEDED?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    pARSELINEERROR?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    pINJOINCONTENTUNSAFE?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    pRICECANNOTBEDETERMINED?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    pRICEMISSING?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    pRODUCTLINKMISSING?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    pRODUCTPRICEINVALID?: CatalogsItemValidationDetails;
    /**
     * 
     * @type {CatalogsItemValidationDetails}
     * @memberof CatalogsItemValidationErrors
     */
    tITLEMISSING?: CatalogsItemValidationDetails;
}

/**
 * Check if a given object implements the CatalogsItemValidationErrors interface.
 */
export function instanceOfCatalogsItemValidationErrors(value: object): value is CatalogsItemValidationErrors {
    return true;
}

export function CatalogsItemValidationErrorsFromJSON(json: any): CatalogsItemValidationErrors {
    return CatalogsItemValidationErrorsFromJSONTyped(json, false);
}

export function CatalogsItemValidationErrorsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsItemValidationErrors {
    if (json == null) {
        return json;
    }
    return {
        
        'aDULTINVALID': json['ADULT_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['ADULT_INVALID']),
        'aDWORDSFORMATINVALID': json['ADWORDS_FORMAT_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['ADWORDS_FORMAT_INVALID']),
        'aVAILABILITYINVALID': json['AVAILABILITY_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['AVAILABILITY_INVALID']),
        'bLOCKLISTEDIMAGESIGNATURE': json['BLOCKLISTED_IMAGE_SIGNATURE'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['BLOCKLISTED_IMAGE_SIGNATURE']),
        'dESCRIPTIONMISSING': json['DESCRIPTION_MISSING'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['DESCRIPTION_MISSING']),
        'dUPLICATEPRODUCTS': json['DUPLICATE_PRODUCTS'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['DUPLICATE_PRODUCTS']),
        'iMAGELINKINVALID': json['IMAGE_LINK_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['IMAGE_LINK_INVALID']),
        'iMAGELINKLENGTHTOOLONG': json['IMAGE_LINK_LENGTH_TOO_LONG'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['IMAGE_LINK_LENGTH_TOO_LONG']),
        'iMAGELINKMISSING': json['IMAGE_LINK_MISSING'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['IMAGE_LINK_MISSING']),
        'iNVALIDDOMAIN': json['INVALID_DOMAIN'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['INVALID_DOMAIN']),
        'iTEMIDMISSING': json['ITEMID_MISSING'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['ITEMID_MISSING']),
        'iTEMMAINIMAGEDOWNLOADFAILURE': json['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE']),
        'lINKFORMATINVALID': json['LINK_FORMAT_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['LINK_FORMAT_INVALID']),
        'lINKLENGTHTOOLONG': json['LINK_LENGTH_TOO_LONG'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['LINK_LENGTH_TOO_LONG']),
        'lISTPRICEINVALID': json['LIST_PRICE_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['LIST_PRICE_INVALID']),
        'mAXITEMSPERITEMGROUPEXCEEDED': json['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED']),
        'pARSELINEERROR': json['PARSE_LINE_ERROR'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['PARSE_LINE_ERROR']),
        'pINJOINCONTENTUNSAFE': json['PINJOIN_CONTENT_UNSAFE'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['PINJOIN_CONTENT_UNSAFE']),
        'pRICECANNOTBEDETERMINED': json['PRICE_CANNOT_BE_DETERMINED'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['PRICE_CANNOT_BE_DETERMINED']),
        'pRICEMISSING': json['PRICE_MISSING'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['PRICE_MISSING']),
        'pRODUCTLINKMISSING': json['PRODUCT_LINK_MISSING'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['PRODUCT_LINK_MISSING']),
        'pRODUCTPRICEINVALID': json['PRODUCT_PRICE_INVALID'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['PRODUCT_PRICE_INVALID']),
        'tITLEMISSING': json['TITLE_MISSING'] == null ? undefined : CatalogsItemValidationDetailsFromJSON(json['TITLE_MISSING']),
    };
}

  export function CatalogsItemValidationErrorsToJSON(json: any): CatalogsItemValidationErrors {
      return CatalogsItemValidationErrorsToJSONTyped(json, false);
  }

  export function CatalogsItemValidationErrorsToJSONTyped(value?: CatalogsItemValidationErrors | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ADULT_INVALID': CatalogsItemValidationDetailsToJSON(value['aDULTINVALID']),
        'ADWORDS_FORMAT_INVALID': CatalogsItemValidationDetailsToJSON(value['aDWORDSFORMATINVALID']),
        'AVAILABILITY_INVALID': CatalogsItemValidationDetailsToJSON(value['aVAILABILITYINVALID']),
        'BLOCKLISTED_IMAGE_SIGNATURE': CatalogsItemValidationDetailsToJSON(value['bLOCKLISTEDIMAGESIGNATURE']),
        'DESCRIPTION_MISSING': CatalogsItemValidationDetailsToJSON(value['dESCRIPTIONMISSING']),
        'DUPLICATE_PRODUCTS': CatalogsItemValidationDetailsToJSON(value['dUPLICATEPRODUCTS']),
        'IMAGE_LINK_INVALID': CatalogsItemValidationDetailsToJSON(value['iMAGELINKINVALID']),
        'IMAGE_LINK_LENGTH_TOO_LONG': CatalogsItemValidationDetailsToJSON(value['iMAGELINKLENGTHTOOLONG']),
        'IMAGE_LINK_MISSING': CatalogsItemValidationDetailsToJSON(value['iMAGELINKMISSING']),
        'INVALID_DOMAIN': CatalogsItemValidationDetailsToJSON(value['iNVALIDDOMAIN']),
        'ITEMID_MISSING': CatalogsItemValidationDetailsToJSON(value['iTEMIDMISSING']),
        'ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE': CatalogsItemValidationDetailsToJSON(value['iTEMMAINIMAGEDOWNLOADFAILURE']),
        'LINK_FORMAT_INVALID': CatalogsItemValidationDetailsToJSON(value['lINKFORMATINVALID']),
        'LINK_LENGTH_TOO_LONG': CatalogsItemValidationDetailsToJSON(value['lINKLENGTHTOOLONG']),
        'LIST_PRICE_INVALID': CatalogsItemValidationDetailsToJSON(value['lISTPRICEINVALID']),
        'MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED': CatalogsItemValidationDetailsToJSON(value['mAXITEMSPERITEMGROUPEXCEEDED']),
        'PARSE_LINE_ERROR': CatalogsItemValidationDetailsToJSON(value['pARSELINEERROR']),
        'PINJOIN_CONTENT_UNSAFE': CatalogsItemValidationDetailsToJSON(value['pINJOINCONTENTUNSAFE']),
        'PRICE_CANNOT_BE_DETERMINED': CatalogsItemValidationDetailsToJSON(value['pRICECANNOTBEDETERMINED']),
        'PRICE_MISSING': CatalogsItemValidationDetailsToJSON(value['pRICEMISSING']),
        'PRODUCT_LINK_MISSING': CatalogsItemValidationDetailsToJSON(value['pRODUCTLINKMISSING']),
        'PRODUCT_PRICE_INVALID': CatalogsItemValidationDetailsToJSON(value['pRODUCTPRICEINVALID']),
        'TITLE_MISSING': CatalogsItemValidationDetailsToJSON(value['tITLEMISSING']),
    };
}

