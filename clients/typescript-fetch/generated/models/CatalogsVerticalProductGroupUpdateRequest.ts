/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsProductGroupUpdateRequest } from './CatalogsCreativeAssetsProductGroupUpdateRequest';
import {
    instanceOfCatalogsCreativeAssetsProductGroupUpdateRequest,
    CatalogsCreativeAssetsProductGroupUpdateRequestFromJSON,
    CatalogsCreativeAssetsProductGroupUpdateRequestFromJSONTyped,
    CatalogsCreativeAssetsProductGroupUpdateRequestToJSON,
} from './CatalogsCreativeAssetsProductGroupUpdateRequest';
import type { CatalogsHotelProductGroupUpdateRequest } from './CatalogsHotelProductGroupUpdateRequest';
import {
    instanceOfCatalogsHotelProductGroupUpdateRequest,
    CatalogsHotelProductGroupUpdateRequestFromJSON,
    CatalogsHotelProductGroupUpdateRequestFromJSONTyped,
    CatalogsHotelProductGroupUpdateRequestToJSON,
} from './CatalogsHotelProductGroupUpdateRequest';
import type { CatalogsRetailProductGroupUpdateRequest } from './CatalogsRetailProductGroupUpdateRequest';
import {
    instanceOfCatalogsRetailProductGroupUpdateRequest,
    CatalogsRetailProductGroupUpdateRequestFromJSON,
    CatalogsRetailProductGroupUpdateRequestFromJSONTyped,
    CatalogsRetailProductGroupUpdateRequestToJSON,
} from './CatalogsRetailProductGroupUpdateRequest';

/**
 * @type CatalogsVerticalProductGroupUpdateRequest
 * Request object for updating a catalog based product group.
 * @export
 */
export type CatalogsVerticalProductGroupUpdateRequest = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsProductGroupUpdateRequest | { catalogType: 'HOTEL' } & CatalogsHotelProductGroupUpdateRequest | { catalogType: 'RETAIL' } & CatalogsRetailProductGroupUpdateRequest;

export function CatalogsVerticalProductGroupUpdateRequestFromJSON(json: any): CatalogsVerticalProductGroupUpdateRequest {
    return CatalogsVerticalProductGroupUpdateRequestFromJSONTyped(json, false);
}

export function CatalogsVerticalProductGroupUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsVerticalProductGroupUpdateRequest {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsProductGroupUpdateRequestFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelProductGroupUpdateRequestFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailProductGroupUpdateRequestFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsVerticalProductGroupUpdateRequest exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsVerticalProductGroupUpdateRequestToJSON(value?: CatalogsVerticalProductGroupUpdateRequest | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsProductGroupUpdateRequestToJSON(value);
        case 'HOTEL':
            return CatalogsHotelProductGroupUpdateRequestToJSON(value);
        case 'RETAIL':
            return CatalogsRetailProductGroupUpdateRequestToJSON(value);
        default:
            throw new Error(`No variant of CatalogsVerticalProductGroupUpdateRequest exists with 'catalogType=${value['catalogType']}'`);
    }

}

