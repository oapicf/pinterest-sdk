/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QuizPinResult } from './QuizPinResult';
import {
    QuizPinResultFromJSON,
    QuizPinResultFromJSONTyped,
    QuizPinResultToJSON,
    QuizPinResultToJSONTyped,
} from './QuizPinResult';
import type { QuizPinQuestion } from './QuizPinQuestion';
import {
    QuizPinQuestionFromJSON,
    QuizPinQuestionFromJSONTyped,
    QuizPinQuestionToJSON,
    QuizPinQuestionToJSONTyped,
} from './QuizPinQuestion';

/**
 * This field includes all quiz data including questions, options, and results.
 * @export
 * @interface QuizPinData
 */
export interface QuizPinData {
    /**
     * 
     * @type {Array<QuizPinQuestion>}
     * @memberof QuizPinData
     */
    questions?: Array<QuizPinQuestion>;
    /**
     * 
     * @type {Array<QuizPinResult>}
     * @memberof QuizPinData
     */
    results?: Array<QuizPinResult>;
    /**
     * Quiz ad tie breaker type, default is RANDOM
     * @type {string}
     * @memberof QuizPinData
     */
    tieBreakerType?: QuizPinDataTieBreakerTypeEnum;
    /**
     * 
     * @type {QuizPinResult}
     * @memberof QuizPinData
     */
    tieBreakerCustomResult?: QuizPinResult | null;
}


/**
 * @export
 */
export const QuizPinDataTieBreakerTypeEnum = {
    Random: 'RANDOM',
    Custom: 'CUSTOM'
} as const;
export type QuizPinDataTieBreakerTypeEnum = typeof QuizPinDataTieBreakerTypeEnum[keyof typeof QuizPinDataTieBreakerTypeEnum];


/**
 * Check if a given object implements the QuizPinData interface.
 */
export function instanceOfQuizPinData(value: object): value is QuizPinData {
    return true;
}

export function QuizPinDataFromJSON(json: any): QuizPinData {
    return QuizPinDataFromJSONTyped(json, false);
}

export function QuizPinDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuizPinData {
    if (json == null) {
        return json;
    }
    return {
        
        'questions': json['questions'] == null ? undefined : ((json['questions'] as Array<any>).map(QuizPinQuestionFromJSON)),
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(QuizPinResultFromJSON)),
        'tieBreakerType': json['tie_breaker_type'] == null ? undefined : json['tie_breaker_type'],
        'tieBreakerCustomResult': json['tie_breaker_custom_result'] == null ? undefined : QuizPinResultFromJSON(json['tie_breaker_custom_result']),
    };
}

  export function QuizPinDataToJSON(json: any): QuizPinData {
      return QuizPinDataToJSONTyped(json, false);
  }

  export function QuizPinDataToJSONTyped(value?: QuizPinData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'questions': value['questions'] == null ? undefined : ((value['questions'] as Array<any>).map(QuizPinQuestionToJSON)),
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(QuizPinResultToJSON)),
        'tie_breaker_type': value['tieBreakerType'],
        'tie_breaker_custom_result': QuizPinResultToJSON(value['tieBreakerCustomResult']),
    };
}

