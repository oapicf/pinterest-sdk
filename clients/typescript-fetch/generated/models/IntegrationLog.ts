/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntegrationLogClientRequest } from './IntegrationLogClientRequest';
import {
    IntegrationLogClientRequestFromJSON,
    IntegrationLogClientRequestFromJSONTyped,
    IntegrationLogClientRequestToJSON,
    IntegrationLogClientRequestToJSONTyped,
} from './IntegrationLogClientRequest';
import type { IntegrationLogClientError } from './IntegrationLogClientError';
import {
    IntegrationLogClientErrorFromJSON,
    IntegrationLogClientErrorFromJSONTyped,
    IntegrationLogClientErrorToJSON,
    IntegrationLogClientErrorToJSONTyped,
} from './IntegrationLogClientError';

/**
 * Schema for log sent from an integration application.
 * @export
 * @interface IntegrationLog
 */
export interface IntegrationLog {
    /**
     * Timestamp in milliseconds of when the log was executed at the client.
     * @type {number}
     * @memberof IntegrationLog
     */
    clientTimestamp: number;
    /**
     * Log event type
     * @type {string}
     * @memberof IntegrationLog
     */
    eventType: IntegrationLogEventTypeEnum;
    /**
     * Log level type
     * @type {string}
     * @memberof IntegrationLog
     */
    logLevel: IntegrationLogLogLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLog
     */
    externalBusinessId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLog
     */
    advertiserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLog
     */
    merchantId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLog
     */
    tagId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLog
     */
    feedProfileId?: string | null;
    /**
     * Explanation of the event that occured.
     * @type {string}
     * @memberof IntegrationLog
     */
    message?: string;
    /**
     * Version number of the integration application.
     * @type {string}
     * @memberof IntegrationLog
     */
    appVersionNumber?: string;
    /**
     * Version number of the platform the integration application is running on.
     * @type {string}
     * @memberof IntegrationLog
     */
    platformVersionNumber?: string;
    /**
     * 
     * @type {IntegrationLogClientError}
     * @memberof IntegrationLog
     */
    error?: IntegrationLogClientError;
    /**
     * 
     * @type {IntegrationLogClientRequest}
     * @memberof IntegrationLog
     */
    request?: IntegrationLogClientRequest;
}


/**
 * @export
 */
export const IntegrationLogEventTypeEnum = {
    App: 'APP',
    Api: 'API'
} as const;
export type IntegrationLogEventTypeEnum = typeof IntegrationLogEventTypeEnum[keyof typeof IntegrationLogEventTypeEnum];

/**
 * @export
 */
export const IntegrationLogLogLevelEnum = {
    Info: 'INFO',
    Warn: 'WARN',
    Error: 'ERROR'
} as const;
export type IntegrationLogLogLevelEnum = typeof IntegrationLogLogLevelEnum[keyof typeof IntegrationLogLogLevelEnum];


/**
 * Check if a given object implements the IntegrationLog interface.
 */
export function instanceOfIntegrationLog(value: object): value is IntegrationLog {
    if (!('clientTimestamp' in value) || value['clientTimestamp'] === undefined) return false;
    if (!('eventType' in value) || value['eventType'] === undefined) return false;
    if (!('logLevel' in value) || value['logLevel'] === undefined) return false;
    return true;
}

export function IntegrationLogFromJSON(json: any): IntegrationLog {
    return IntegrationLogFromJSONTyped(json, false);
}

export function IntegrationLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationLog {
    if (json == null) {
        return json;
    }
    return {
        
        'clientTimestamp': json['client_timestamp'],
        'eventType': json['event_type'],
        'logLevel': json['log_level'],
        'externalBusinessId': json['external_business_id'] == null ? undefined : json['external_business_id'],
        'advertiserId': json['advertiser_id'] == null ? undefined : json['advertiser_id'],
        'merchantId': json['merchant_id'] == null ? undefined : json['merchant_id'],
        'tagId': json['tag_id'] == null ? undefined : json['tag_id'],
        'feedProfileId': json['feed_profile_id'] == null ? undefined : json['feed_profile_id'],
        'message': json['message'] == null ? undefined : json['message'],
        'appVersionNumber': json['app_version_number'] == null ? undefined : json['app_version_number'],
        'platformVersionNumber': json['platform_version_number'] == null ? undefined : json['platform_version_number'],
        'error': json['error'] == null ? undefined : IntegrationLogClientErrorFromJSON(json['error']),
        'request': json['request'] == null ? undefined : IntegrationLogClientRequestFromJSON(json['request']),
    };
}

  export function IntegrationLogToJSON(json: any): IntegrationLog {
      return IntegrationLogToJSONTyped(json, false);
  }

  export function IntegrationLogToJSONTyped(value?: IntegrationLog | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_timestamp': value['clientTimestamp'],
        'event_type': value['eventType'],
        'log_level': value['logLevel'],
        'external_business_id': value['externalBusinessId'],
        'advertiser_id': value['advertiserId'],
        'merchant_id': value['merchantId'],
        'tag_id': value['tagId'],
        'feed_profile_id': value['feedProfileId'],
        'message': value['message'],
        'app_version_number': value['appVersionNumber'],
        'platform_version_number': value['platformVersionNumber'],
        'error': IntegrationLogClientErrorToJSON(value['error']),
        'request': IntegrationLogClientRequestToJSON(value['request']),
    };
}

