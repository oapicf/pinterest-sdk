/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pin } from './Pin';
import {
    PinFromJSON,
    PinFromJSONTyped,
    PinToJSON,
    PinToJSONTyped,
} from './Pin';
import type { CatalogsRetailProductMetadata } from './CatalogsRetailProductMetadata';
import {
    CatalogsRetailProductMetadataFromJSON,
    CatalogsRetailProductMetadataFromJSONTyped,
    CatalogsRetailProductMetadataToJSON,
    CatalogsRetailProductMetadataToJSONTyped,
} from './CatalogsRetailProductMetadata';

/**
 * 
 * @export
 * @interface CatalogsRetailProduct
 */
export interface CatalogsRetailProduct {
    /**
     * 
     * @type {string}
     * @memberof CatalogsRetailProduct
     */
    catalogType: CatalogsRetailProductCatalogTypeEnum;
    /**
     * 
     * @type {CatalogsRetailProductMetadata}
     * @memberof CatalogsRetailProduct
     */
    metadata: CatalogsRetailProductMetadata;
    /**
     * 
     * @type {Pin}
     * @memberof CatalogsRetailProduct
     */
    pin: Pin | null;
}


/**
 * @export
 */
export const CatalogsRetailProductCatalogTypeEnum = {
    Retail: 'RETAIL'
} as const;
export type CatalogsRetailProductCatalogTypeEnum = typeof CatalogsRetailProductCatalogTypeEnum[keyof typeof CatalogsRetailProductCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsRetailProduct interface.
 */
export function instanceOfCatalogsRetailProduct(value: object): value is CatalogsRetailProduct {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('pin' in value) || value['pin'] === undefined) return false;
    return true;
}

export function CatalogsRetailProductFromJSON(json: any): CatalogsRetailProduct {
    return CatalogsRetailProductFromJSONTyped(json, false);
}

export function CatalogsRetailProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsRetailProduct {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'metadata': CatalogsRetailProductMetadataFromJSON(json['metadata']),
        'pin': PinFromJSON(json['pin']),
    };
}

  export function CatalogsRetailProductToJSON(json: any): CatalogsRetailProduct {
      return CatalogsRetailProductToJSONTyped(json, false);
  }

  export function CatalogsRetailProductToJSONTyped(value?: CatalogsRetailProduct | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'metadata': CatalogsRetailProductMetadataToJSON(value['metadata']),
        'pin': PinToJSON(value['pin']),
    };
}

