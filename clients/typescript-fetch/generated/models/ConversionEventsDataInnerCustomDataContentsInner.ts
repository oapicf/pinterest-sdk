/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversionEventsDataInnerCustomDataContentsInner
 */
export interface ConversionEventsDataInnerCustomDataContentsInner {
    /**
     * The id of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href="https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs" target="_blank">here</a> (Install the Pinterest tag section).
     * @type {string}
     * @memberof ConversionEventsDataInnerCustomDataContentsInner
     */
    id?: string;
    /**
     * The price of a product. Accepted as a string in the request; it will be parsed into a double. This is the original item value before any discount. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href="https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs" target="_blank">here</a> (Install the Pinterest tag section).
     * @type {string}
     * @memberof ConversionEventsDataInnerCustomDataContentsInner
     */
    itemPrice?: string;
    /**
     * The amount of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href="https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs" target="_blank">here</a> (Install the Pinterest tag section).
     * @type {number}
     * @memberof ConversionEventsDataInnerCustomDataContentsInner
     */
    quantity?: number;
    /**
     * The name of a product.
     * @type {string}
     * @memberof ConversionEventsDataInnerCustomDataContentsInner
     */
    itemName?: string;
    /**
     * The category of a product.
     * @type {string}
     * @memberof ConversionEventsDataInnerCustomDataContentsInner
     */
    itemCategory?: string;
    /**
     * The brand of a product.
     * @type {string}
     * @memberof ConversionEventsDataInnerCustomDataContentsInner
     */
    itemBrand?: string;
}

/**
 * Check if a given object implements the ConversionEventsDataInnerCustomDataContentsInner interface.
 */
export function instanceOfConversionEventsDataInnerCustomDataContentsInner(value: object): value is ConversionEventsDataInnerCustomDataContentsInner {
    return true;
}

export function ConversionEventsDataInnerCustomDataContentsInnerFromJSON(json: any): ConversionEventsDataInnerCustomDataContentsInner {
    return ConversionEventsDataInnerCustomDataContentsInnerFromJSONTyped(json, false);
}

export function ConversionEventsDataInnerCustomDataContentsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversionEventsDataInnerCustomDataContentsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'itemPrice': json['item_price'] == null ? undefined : json['item_price'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'itemName': json['item_name'] == null ? undefined : json['item_name'],
        'itemCategory': json['item_category'] == null ? undefined : json['item_category'],
        'itemBrand': json['item_brand'] == null ? undefined : json['item_brand'],
    };
}

  export function ConversionEventsDataInnerCustomDataContentsInnerToJSON(json: any): ConversionEventsDataInnerCustomDataContentsInner {
      return ConversionEventsDataInnerCustomDataContentsInnerToJSONTyped(json, false);
  }

  export function ConversionEventsDataInnerCustomDataContentsInnerToJSONTyped(value?: ConversionEventsDataInnerCustomDataContentsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'item_price': value['itemPrice'],
        'quantity': value['quantity'],
        'item_name': value['itemName'],
        'item_category': value['itemCategory'],
        'item_brand': value['itemBrand'],
    };
}

