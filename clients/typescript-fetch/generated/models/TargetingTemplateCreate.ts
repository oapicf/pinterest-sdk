/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TargetingTemplateKeyword } from './TargetingTemplateKeyword';
import {
    TargetingTemplateKeywordFromJSON,
    TargetingTemplateKeywordFromJSONTyped,
    TargetingTemplateKeywordToJSON,
    TargetingTemplateKeywordToJSONTyped,
} from './TargetingTemplateKeyword';
import type { TrackingUrls } from './TrackingUrls';
import {
    TrackingUrlsFromJSON,
    TrackingUrlsFromJSONTyped,
    TrackingUrlsToJSON,
    TrackingUrlsToJSONTyped,
} from './TrackingUrls';
import type { TargetingSpec } from './TargetingSpec';
import {
    TargetingSpecFromJSON,
    TargetingSpecFromJSONTyped,
    TargetingSpecToJSON,
    TargetingSpecToJSONTyped,
} from './TargetingSpec';
import type { PlacementGroupType } from './PlacementGroupType';
import {
    PlacementGroupTypeFromJSON,
    PlacementGroupTypeFromJSONTyped,
    PlacementGroupTypeToJSON,
    PlacementGroupTypeToJSONTyped,
} from './PlacementGroupType';

/**
 * 
 * @export
 * @interface TargetingTemplateCreate
 */
export interface TargetingTemplateCreate {
    /**
     * Name of targeting template.
     * @type {string}
     * @memberof TargetingTemplateCreate
     */
    name: string;
    /**
     * Enable auto-targeting for ad group. Also known as <a href="https://help.pinterest.com/en/business/article/expanded-targeting" target="_blank">"expanded targeting"</a>.
     * @type {boolean}
     * @memberof TargetingTemplateCreate
     */
    autoTargetingEnabled?: boolean;
    /**
     * 
     * @type {TargetingSpec}
     * @memberof TargetingTemplateCreate
     */
    targetingAttributes: TargetingSpec;
    /**
     * 
     * @type {PlacementGroupType}
     * @memberof TargetingTemplateCreate
     */
    placementGroup?: PlacementGroupType;
    /**
     * 
     * @type {Array<TargetingTemplateKeyword>}
     * @memberof TargetingTemplateCreate
     */
    keywords?: Array<TargetingTemplateKeyword>;
    /**
     * 
     * @type {TrackingUrls}
     * @memberof TargetingTemplateCreate
     */
    trackingUrls?: TrackingUrls | null;
}



/**
 * Check if a given object implements the TargetingTemplateCreate interface.
 */
export function instanceOfTargetingTemplateCreate(value: object): value is TargetingTemplateCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('targetingAttributes' in value) || value['targetingAttributes'] === undefined) return false;
    return true;
}

export function TargetingTemplateCreateFromJSON(json: any): TargetingTemplateCreate {
    return TargetingTemplateCreateFromJSONTyped(json, false);
}

export function TargetingTemplateCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetingTemplateCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'autoTargetingEnabled': json['auto_targeting_enabled'] == null ? undefined : json['auto_targeting_enabled'],
        'targetingAttributes': TargetingSpecFromJSON(json['targeting_attributes']),
        'placementGroup': json['placement_group'] == null ? undefined : PlacementGroupTypeFromJSON(json['placement_group']),
        'keywords': json['keywords'] == null ? undefined : ((json['keywords'] as Array<any>).map(TargetingTemplateKeywordFromJSON)),
        'trackingUrls': json['tracking_urls'] == null ? undefined : TrackingUrlsFromJSON(json['tracking_urls']),
    };
}

  export function TargetingTemplateCreateToJSON(json: any): TargetingTemplateCreate {
      return TargetingTemplateCreateToJSONTyped(json, false);
  }

  export function TargetingTemplateCreateToJSONTyped(value?: TargetingTemplateCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'auto_targeting_enabled': value['autoTargetingEnabled'],
        'targeting_attributes': TargetingSpecToJSON(value['targetingAttributes']),
        'placement_group': PlacementGroupTypeToJSON(value['placementGroup']),
        'keywords': value['keywords'] == null ? undefined : ((value['keywords'] as Array<any>).map(TargetingTemplateKeywordToJSON)),
        'tracking_urls': TrackingUrlsToJSON(value['trackingUrls']),
    };
}

