/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pin } from './Pin';
import {
    PinFromJSON,
    PinFromJSONTyped,
    PinToJSON,
    PinToJSONTyped,
} from './Pin';
import type { CatalogsHotelProductMetadata } from './CatalogsHotelProductMetadata';
import {
    CatalogsHotelProductMetadataFromJSON,
    CatalogsHotelProductMetadataFromJSONTyped,
    CatalogsHotelProductMetadataToJSON,
    CatalogsHotelProductMetadataToJSONTyped,
} from './CatalogsHotelProductMetadata';

/**
 * 
 * @export
 * @interface CatalogsHotelProduct
 */
export interface CatalogsHotelProduct {
    /**
     * 
     * @type {string}
     * @memberof CatalogsHotelProduct
     */
    catalogType: CatalogsHotelProductCatalogTypeEnum;
    /**
     * 
     * @type {CatalogsHotelProductMetadata}
     * @memberof CatalogsHotelProduct
     */
    metadata: CatalogsHotelProductMetadata;
    /**
     * 
     * @type {Pin}
     * @memberof CatalogsHotelProduct
     */
    pin: Pin | null;
}


/**
 * @export
 */
export const CatalogsHotelProductCatalogTypeEnum = {
    Hotel: 'HOTEL'
} as const;
export type CatalogsHotelProductCatalogTypeEnum = typeof CatalogsHotelProductCatalogTypeEnum[keyof typeof CatalogsHotelProductCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsHotelProduct interface.
 */
export function instanceOfCatalogsHotelProduct(value: object): value is CatalogsHotelProduct {
    if (!('catalogType' in value) || value['catalogType'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('pin' in value) || value['pin'] === undefined) return false;
    return true;
}

export function CatalogsHotelProductFromJSON(json: any): CatalogsHotelProduct {
    return CatalogsHotelProductFromJSONTyped(json, false);
}

export function CatalogsHotelProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsHotelProduct {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'],
        'metadata': CatalogsHotelProductMetadataFromJSON(json['metadata']),
        'pin': PinFromJSON(json['pin']),
    };
}

  export function CatalogsHotelProductToJSON(json: any): CatalogsHotelProduct {
      return CatalogsHotelProductToJSONTyped(json, false);
  }

  export function CatalogsHotelProductToJSONTyped(value?: CatalogsHotelProduct | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'metadata': CatalogsHotelProductMetadataToJSON(value['metadata']),
        'pin': PinToJSON(value['pin']),
    };
}

