/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogsHotelAddress
 */
export interface CatalogsHotelAddress {
    /**
     * Primary street address of hotel.
     * @type {string}
     * @memberof CatalogsHotelAddress
     */
    addr1?: string;
    /**
     * City where the hotel is located.
     * @type {string}
     * @memberof CatalogsHotelAddress
     */
    city?: string;
    /**
     * State, county, province, where the hotel is located.
     * @type {string}
     * @memberof CatalogsHotelAddress
     */
    region?: string;
    /**
     * Country where the hotel is located.
     * @type {string}
     * @memberof CatalogsHotelAddress
     */
    country?: string;
    /**
     * Required for countries with a postal code system. Postal or zip code of the hotel.
     * @type {string}
     * @memberof CatalogsHotelAddress
     */
    postalCode?: string;
}

/**
 * Check if a given object implements the CatalogsHotelAddress interface.
 */
export function instanceOfCatalogsHotelAddress(value: object): value is CatalogsHotelAddress {
    return true;
}

export function CatalogsHotelAddressFromJSON(json: any): CatalogsHotelAddress {
    return CatalogsHotelAddressFromJSONTyped(json, false);
}

export function CatalogsHotelAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsHotelAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'addr1': json['addr1'] == null ? undefined : json['addr1'],
        'city': json['city'] == null ? undefined : json['city'],
        'region': json['region'] == null ? undefined : json['region'],
        'country': json['country'] == null ? undefined : json['country'],
        'postalCode': json['postal_code'] == null ? undefined : json['postal_code'],
    };
}

  export function CatalogsHotelAddressToJSON(json: any): CatalogsHotelAddress {
      return CatalogsHotelAddressToJSONTyped(json, false);
  }

  export function CatalogsHotelAddressToJSONTyped(value?: CatalogsHotelAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'addr1': value['addr1'],
        'city': value['city'],
        'region': value['region'],
        'country': value['country'],
        'postal_code': value['postalCode'],
    };
}

