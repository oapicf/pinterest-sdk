/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LeadFormQuestionType } from './LeadFormQuestionType';
import {
    LeadFormQuestionTypeFromJSON,
    LeadFormQuestionTypeFromJSONTyped,
    LeadFormQuestionTypeToJSON,
    LeadFormQuestionTypeToJSONTyped,
} from './LeadFormQuestionType';
import type { LeadFormQuestionFieldType } from './LeadFormQuestionFieldType';
import {
    LeadFormQuestionFieldTypeFromJSON,
    LeadFormQuestionFieldTypeFromJSONTyped,
    LeadFormQuestionFieldTypeToJSON,
    LeadFormQuestionFieldTypeToJSONTyped,
} from './LeadFormQuestionFieldType';

/**
 * 
 * @export
 * @interface LeadFormQuestion
 */
export interface LeadFormQuestion {
    /**
     * 
     * @type {LeadFormQuestionType}
     * @memberof LeadFormQuestion
     */
    questionType?: LeadFormQuestionType;
    /**
     * 
     * @type {LeadFormQuestionFieldType}
     * @memberof LeadFormQuestion
     */
    customQuestionFieldType?: LeadFormQuestionFieldType | null;
    /**
     * Question label for a custom question.
     * @type {string}
     * @memberof LeadFormQuestion
     */
    customQuestionLabel?: string | null;
    /**
     * Question options for a custom question.
     * @type {Array<string>}
     * @memberof LeadFormQuestion
     */
    customQuestionOptions?: Array<string> | null;
}



/**
 * Check if a given object implements the LeadFormQuestion interface.
 */
export function instanceOfLeadFormQuestion(value: object): value is LeadFormQuestion {
    return true;
}

export function LeadFormQuestionFromJSON(json: any): LeadFormQuestion {
    return LeadFormQuestionFromJSONTyped(json, false);
}

export function LeadFormQuestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeadFormQuestion {
    if (json == null) {
        return json;
    }
    return {
        
        'questionType': json['question_type'] == null ? undefined : LeadFormQuestionTypeFromJSON(json['question_type']),
        'customQuestionFieldType': json['custom_question_field_type'] == null ? undefined : LeadFormQuestionFieldTypeFromJSON(json['custom_question_field_type']),
        'customQuestionLabel': json['custom_question_label'] == null ? undefined : json['custom_question_label'],
        'customQuestionOptions': json['custom_question_options'] == null ? undefined : json['custom_question_options'],
    };
}

  export function LeadFormQuestionToJSON(json: any): LeadFormQuestion {
      return LeadFormQuestionToJSONTyped(json, false);
  }

  export function LeadFormQuestionToJSONTyped(value?: LeadFormQuestion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'question_type': LeadFormQuestionTypeToJSON(value['questionType']),
        'custom_question_field_type': LeadFormQuestionFieldTypeToJSON(value['customQuestionFieldType']),
        'custom_question_label': value['customQuestionLabel'],
        'custom_question_options': value['customQuestionOptions'],
    };
}

