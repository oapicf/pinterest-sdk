/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BillingProfilesResponse
 */
export interface BillingProfilesResponse {
    /**
     * Billing ID.
     * @type {string}
     * @memberof BillingProfilesResponse
     */
    id?: string;
    /**
     * Type of the card.
     * @type {string}
     * @memberof BillingProfilesResponse
     */
    cardType?: BillingProfilesResponseCardTypeEnum;
    /**
     * Status of the billing.
     * @type {string}
     * @memberof BillingProfilesResponse
     */
    status?: BillingProfilesResponseStatusEnum;
    /**
     * Advertiser ID of the billing.
     * @type {string}
     * @memberof BillingProfilesResponse
     */
    advertiserId?: string;
    /**
     * Brand of the payment method.
     * @type {string}
     * @memberof BillingProfilesResponse
     */
    paymentMethodBrand?: BillingProfilesResponsePaymentMethodBrandEnum;
}


/**
 * @export
 */
export const BillingProfilesResponseCardTypeEnum = {
    Unknown: 'UNKNOWN',
    Visa: 'VISA',
    Mastercard: 'MASTERCARD',
    AmericanExpress: 'AMERICAN_EXPRESS',
    Discover: 'DISCOVER',
    Elo: 'ELO'
} as const;
export type BillingProfilesResponseCardTypeEnum = typeof BillingProfilesResponseCardTypeEnum[keyof typeof BillingProfilesResponseCardTypeEnum];

/**
 * @export
 */
export const BillingProfilesResponseStatusEnum = {
    Unspecified: 'UNSPECIFIED',
    Valid: 'VALID',
    Invalid: 'INVALID',
    Pending: 'PENDING',
    Deleted: 'DELETED',
    Secondary: 'SECONDARY',
    PendingSecondary: 'PENDING_SECONDARY'
} as const;
export type BillingProfilesResponseStatusEnum = typeof BillingProfilesResponseStatusEnum[keyof typeof BillingProfilesResponseStatusEnum];

/**
 * @export
 */
export const BillingProfilesResponsePaymentMethodBrandEnum = {
    Unknown: 'UNKNOWN',
    Visa: 'VISA',
    Mastercard: 'MASTERCARD',
    AmericanExpress: 'AMERICAN_EXPRESS',
    Discover: 'DISCOVER',
    Sofort: 'SOFORT',
    DinersClub: 'DINERS_CLUB',
    Elo: 'ELO',
    CarteBancaire: 'CARTE_BANCAIRE'
} as const;
export type BillingProfilesResponsePaymentMethodBrandEnum = typeof BillingProfilesResponsePaymentMethodBrandEnum[keyof typeof BillingProfilesResponsePaymentMethodBrandEnum];


/**
 * Check if a given object implements the BillingProfilesResponse interface.
 */
export function instanceOfBillingProfilesResponse(value: object): value is BillingProfilesResponse {
    return true;
}

export function BillingProfilesResponseFromJSON(json: any): BillingProfilesResponse {
    return BillingProfilesResponseFromJSONTyped(json, false);
}

export function BillingProfilesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingProfilesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'cardType': json['card_type'] == null ? undefined : json['card_type'],
        'status': json['status'] == null ? undefined : json['status'],
        'advertiserId': json['advertiser_id'] == null ? undefined : json['advertiser_id'],
        'paymentMethodBrand': json['payment_method_brand'] == null ? undefined : json['payment_method_brand'],
    };
}

  export function BillingProfilesResponseToJSON(json: any): BillingProfilesResponse {
      return BillingProfilesResponseToJSONTyped(json, false);
  }

  export function BillingProfilesResponseToJSONTyped(value?: BillingProfilesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'card_type': value['cardType'],
        'status': value['status'],
        'advertiser_id': value['advertiserId'],
        'payment_method_brand': value['paymentMethodBrand'],
    };
}

