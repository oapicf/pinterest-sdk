/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AdvancedAuctionProcessedItem } from './AdvancedAuctionProcessedItem';
import {
    AdvancedAuctionProcessedItemFromJSON,
    AdvancedAuctionProcessedItemFromJSONTyped,
    AdvancedAuctionProcessedItemToJSON,
    AdvancedAuctionProcessedItemToJSONTyped,
} from './AdvancedAuctionProcessedItem';

/**
 * Response object containing the results of an operation on an item bid option
 * @export
 * @interface AdvancedAuctionProcessedItems
 */
export interface AdvancedAuctionProcessedItems {
    /**
     * Catalog id pertaining to all items
     * @type {string}
     * @memberof AdvancedAuctionProcessedItems
     */
    catalogId?: string;
    /**
     * Array of advanced auction processed items
     * @type {Array<AdvancedAuctionProcessedItem>}
     * @memberof AdvancedAuctionProcessedItems
     */
    items?: Array<AdvancedAuctionProcessedItem>;
}

/**
 * Check if a given object implements the AdvancedAuctionProcessedItems interface.
 */
export function instanceOfAdvancedAuctionProcessedItems(value: object): value is AdvancedAuctionProcessedItems {
    return true;
}

export function AdvancedAuctionProcessedItemsFromJSON(json: any): AdvancedAuctionProcessedItems {
    return AdvancedAuctionProcessedItemsFromJSONTyped(json, false);
}

export function AdvancedAuctionProcessedItemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedAuctionProcessedItems {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogId': json['catalog_id'] == null ? undefined : json['catalog_id'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(AdvancedAuctionProcessedItemFromJSON)),
    };
}

  export function AdvancedAuctionProcessedItemsToJSON(json: any): AdvancedAuctionProcessedItems {
      return AdvancedAuctionProcessedItemsToJSONTyped(json, false);
  }

  export function AdvancedAuctionProcessedItemsToJSONTyped(value?: AdvancedAuctionProcessedItems | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_id': value['catalogId'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(AdvancedAuctionProcessedItemToJSON)),
    };
}

