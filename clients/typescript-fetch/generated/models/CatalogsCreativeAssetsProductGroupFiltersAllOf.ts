/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsCreativeAssetsProductGroupFilterKeys } from './CatalogsCreativeAssetsProductGroupFilterKeys';
import {
    CatalogsCreativeAssetsProductGroupFilterKeysFromJSON,
    CatalogsCreativeAssetsProductGroupFilterKeysFromJSONTyped,
    CatalogsCreativeAssetsProductGroupFilterKeysToJSON,
    CatalogsCreativeAssetsProductGroupFilterKeysToJSONTyped,
} from './CatalogsCreativeAssetsProductGroupFilterKeys';

/**
 * 
 * @export
 * @interface CatalogsCreativeAssetsProductGroupFiltersAllOf
 */
export interface CatalogsCreativeAssetsProductGroupFiltersAllOf {
    /**
     * 
     * @type {Array<CatalogsCreativeAssetsProductGroupFilterKeys>}
     * @memberof CatalogsCreativeAssetsProductGroupFiltersAllOf
     */
    allOf: Array<CatalogsCreativeAssetsProductGroupFilterKeys>;
}

/**
 * Check if a given object implements the CatalogsCreativeAssetsProductGroupFiltersAllOf interface.
 */
export function instanceOfCatalogsCreativeAssetsProductGroupFiltersAllOf(value: object): value is CatalogsCreativeAssetsProductGroupFiltersAllOf {
    if (!('allOf' in value) || value['allOf'] === undefined) return false;
    return true;
}

export function CatalogsCreativeAssetsProductGroupFiltersAllOfFromJSON(json: any): CatalogsCreativeAssetsProductGroupFiltersAllOf {
    return CatalogsCreativeAssetsProductGroupFiltersAllOfFromJSONTyped(json, false);
}

export function CatalogsCreativeAssetsProductGroupFiltersAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsCreativeAssetsProductGroupFiltersAllOf {
    if (json == null) {
        return json;
    }
    return {
        
        'allOf': ((json['all_of'] as Array<any>).map(CatalogsCreativeAssetsProductGroupFilterKeysFromJSON)),
    };
}

  export function CatalogsCreativeAssetsProductGroupFiltersAllOfToJSON(json: any): CatalogsCreativeAssetsProductGroupFiltersAllOf {
      return CatalogsCreativeAssetsProductGroupFiltersAllOfToJSONTyped(json, false);
  }

  export function CatalogsCreativeAssetsProductGroupFiltersAllOfToJSONTyped(value?: CatalogsCreativeAssetsProductGroupFiltersAllOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'all_of': ((value['allOf'] as Array<any>).map(CatalogsCreativeAssetsProductGroupFilterKeysToJSON)),
    };
}

