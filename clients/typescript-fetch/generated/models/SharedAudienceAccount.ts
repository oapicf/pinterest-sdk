/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SharedAudienceAccount
 */
export interface SharedAudienceAccount {
    /**
     * Account ID (ad account or business ID).
     * @type {string}
     * @memberof SharedAudienceAccount
     */
    accountId: string;
    /**
     * Account name.
     * @type {string}
     * @memberof SharedAudienceAccount
     */
    accountName: string;
    /**
     * account type
     * @type {string}
     * @memberof SharedAudienceAccount
     */
    accountType: SharedAudienceAccountAccountTypeEnum;
    /**
     * Epoch timestamp in seconds for the shared audience event
     * @type {number}
     * @memberof SharedAudienceAccount
     */
    sharedOnTimestamp: number;
}


/**
 * @export
 */
export const SharedAudienceAccountAccountTypeEnum = {
    AdAccount: 'AD_ACCOUNT',
    BusinessAccount: 'BUSINESS_ACCOUNT'
} as const;
export type SharedAudienceAccountAccountTypeEnum = typeof SharedAudienceAccountAccountTypeEnum[keyof typeof SharedAudienceAccountAccountTypeEnum];


/**
 * Check if a given object implements the SharedAudienceAccount interface.
 */
export function instanceOfSharedAudienceAccount(value: object): value is SharedAudienceAccount {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('accountName' in value) || value['accountName'] === undefined) return false;
    if (!('accountType' in value) || value['accountType'] === undefined) return false;
    if (!('sharedOnTimestamp' in value) || value['sharedOnTimestamp'] === undefined) return false;
    return true;
}

export function SharedAudienceAccountFromJSON(json: any): SharedAudienceAccount {
    return SharedAudienceAccountFromJSONTyped(json, false);
}

export function SharedAudienceAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedAudienceAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['account_id'],
        'accountName': json['account_name'],
        'accountType': json['account_type'],
        'sharedOnTimestamp': json['shared_on_timestamp'],
    };
}

  export function SharedAudienceAccountToJSON(json: any): SharedAudienceAccount {
      return SharedAudienceAccountToJSONTyped(json, false);
  }

  export function SharedAudienceAccountToJSONTyped(value?: SharedAudienceAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_id': value['accountId'],
        'account_name': value['accountName'],
        'account_type': value['accountType'],
        'shared_on_timestamp': value['sharedOnTimestamp'],
    };
}

