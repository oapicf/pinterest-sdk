/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsHotelReportParameters } from './CatalogsHotelReportParameters';
import {
    instanceOfCatalogsHotelReportParameters,
    CatalogsHotelReportParametersFromJSON,
    CatalogsHotelReportParametersFromJSONTyped,
    CatalogsHotelReportParametersToJSON,
} from './CatalogsHotelReportParameters';
import type { CatalogsRetailReportParameters } from './CatalogsRetailReportParameters';
import {
    instanceOfCatalogsRetailReportParameters,
    CatalogsRetailReportParametersFromJSON,
    CatalogsRetailReportParametersFromJSONTyped,
    CatalogsRetailReportParametersToJSON,
} from './CatalogsRetailReportParameters';

/**
 * @type CatalogsReportParameters
 * Report parameters
 * @export
 */
export type CatalogsReportParameters = { catalogType: 'HOTEL' } & CatalogsHotelReportParameters | { catalogType: 'RETAIL' } & CatalogsRetailReportParameters;

export function CatalogsReportParametersFromJSON(json: any): CatalogsReportParameters {
    return CatalogsReportParametersFromJSONTyped(json, false);
}

export function CatalogsReportParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsReportParameters {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelReportParametersFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailReportParametersFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsReportParameters exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsReportParametersToJSON(value?: CatalogsReportParameters | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'HOTEL':
            return CatalogsHotelReportParametersToJSON(value);
        case 'RETAIL':
            return CatalogsRetailReportParametersToJSON(value);
        default:
            throw new Error(`No variant of CatalogsReportParameters exists with 'catalogType=${value['catalogType']}'`);
    }

}

