/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Third-party tracking URLs. Up to three tracking URLs - with a max length of 2,000 - are supported for each event type. Tracking URLs set at the ad group or ad level can override those set at the campaign level. For more information, see <a href="https://help.pinterest.com/en/business/article/third-party-and-dynamic-tracking" target="_blank">Third-party and dynamic tracking</a>.
 * @export
 * @interface TrackingUrls
 */
export interface TrackingUrls {
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackingUrls
     */
    impression?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackingUrls
     */
    click?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackingUrls
     */
    engagement?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackingUrls
     */
    buyableButton?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackingUrls
     */
    audienceVerification?: Array<string>;
}

/**
 * Check if a given object implements the TrackingUrls interface.
 */
export function instanceOfTrackingUrls(value: object): value is TrackingUrls {
    return true;
}

export function TrackingUrlsFromJSON(json: any): TrackingUrls {
    return TrackingUrlsFromJSONTyped(json, false);
}

export function TrackingUrlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackingUrls {
    if (json == null) {
        return json;
    }
    return {
        
        'impression': json['impression'] == null ? undefined : json['impression'],
        'click': json['click'] == null ? undefined : json['click'],
        'engagement': json['engagement'] == null ? undefined : json['engagement'],
        'buyableButton': json['buyable_button'] == null ? undefined : json['buyable_button'],
        'audienceVerification': json['audience_verification'] == null ? undefined : json['audience_verification'],
    };
}

  export function TrackingUrlsToJSON(json: any): TrackingUrls {
      return TrackingUrlsToJSONTyped(json, false);
  }

  export function TrackingUrlsToJSONTyped(value?: TrackingUrls | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'impression': value['impression'],
        'click': value['click'],
        'engagement': value['engagement'],
        'buyable_button': value['buyableButton'],
        'audience_verification': value['audienceVerification'],
    };
}

