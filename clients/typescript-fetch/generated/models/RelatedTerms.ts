/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RelatedTermsRelatedTermsListInner } from './RelatedTermsRelatedTermsListInner';
import {
    RelatedTermsRelatedTermsListInnerFromJSON,
    RelatedTermsRelatedTermsListInnerFromJSONTyped,
    RelatedTermsRelatedTermsListInnerToJSON,
    RelatedTermsRelatedTermsListInnerToJSONTyped,
} from './RelatedTermsRelatedTermsListInner';

/**
 * 
 * @export
 * @interface RelatedTerms
 */
export interface RelatedTerms {
    /**
     * First input term. For example, if you pass "?terms=clothes,workout", then id will be "clothes"
     * @type {string}
     * @memberof RelatedTerms
     */
    id?: string;
    /**
     * Total number of related terms returned
     * @type {number}
     * @memberof RelatedTerms
     */
    relatedTermCount?: number;
    /**
     * The id of the advertiser.
     * @type {Array<RelatedTermsRelatedTermsListInner>}
     * @memberof RelatedTerms
     */
    relatedTermsList?: Array<RelatedTermsRelatedTermsListInner>;
}

/**
 * Check if a given object implements the RelatedTerms interface.
 */
export function instanceOfRelatedTerms(value: object): value is RelatedTerms {
    return true;
}

export function RelatedTermsFromJSON(json: any): RelatedTerms {
    return RelatedTermsFromJSONTyped(json, false);
}

export function RelatedTermsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelatedTerms {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'relatedTermCount': json['related_term_count'] == null ? undefined : json['related_term_count'],
        'relatedTermsList': json['related_terms_list'] == null ? undefined : ((json['related_terms_list'] as Array<any>).map(RelatedTermsRelatedTermsListInnerFromJSON)),
    };
}

  export function RelatedTermsToJSON(json: any): RelatedTerms {
      return RelatedTermsToJSONTyped(json, false);
  }

  export function RelatedTermsToJSONTyped(value?: RelatedTerms | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'related_term_count': value['relatedTermCount'],
        'related_terms_list': value['relatedTermsList'] == null ? undefined : ((value['relatedTermsList'] as Array<any>).map(RelatedTermsRelatedTermsListInnerToJSON)),
    };
}

