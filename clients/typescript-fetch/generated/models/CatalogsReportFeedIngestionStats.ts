/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogsReportFeedIngestionStats
 */
export interface CatalogsReportFeedIngestionStats {
    /**
     * 
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    reportType?: CatalogsReportFeedIngestionStatsReportTypeEnum;
    /**
     * ID of the catalog entity.
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    catalogId?: string;
    /**
     * The event code that a diagnostics aggregated number references
     * @type {number}
     * @memberof CatalogsReportFeedIngestionStats
     */
    code?: number;
    /**
     * A human-friendly label for the event code (e.g, 'AVAILABILITY_INVALID')
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    codeLabel?: string;
    /**
     * Title message describing the diagnostic issue
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    message?: string;
    /**
     * Number of occurrences of the issue
     * @type {number}
     * @memberof CatalogsReportFeedIngestionStats
     */
    occurrences?: number;
    /**
     * An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue
     * @type {string}
     * @memberof CatalogsReportFeedIngestionStats
     */
    severity?: CatalogsReportFeedIngestionStatsSeverityEnum;
}


/**
 * @export
 */
export const CatalogsReportFeedIngestionStatsReportTypeEnum = {
    FeedIngestionIssues: 'FEED_INGESTION_ISSUES'
} as const;
export type CatalogsReportFeedIngestionStatsReportTypeEnum = typeof CatalogsReportFeedIngestionStatsReportTypeEnum[keyof typeof CatalogsReportFeedIngestionStatsReportTypeEnum];

/**
 * @export
 */
export const CatalogsReportFeedIngestionStatsSeverityEnum = {
    Warn: 'WARN',
    Error: 'ERROR'
} as const;
export type CatalogsReportFeedIngestionStatsSeverityEnum = typeof CatalogsReportFeedIngestionStatsSeverityEnum[keyof typeof CatalogsReportFeedIngestionStatsSeverityEnum];


/**
 * Check if a given object implements the CatalogsReportFeedIngestionStats interface.
 */
export function instanceOfCatalogsReportFeedIngestionStats(value: object): value is CatalogsReportFeedIngestionStats {
    return true;
}

export function CatalogsReportFeedIngestionStatsFromJSON(json: any): CatalogsReportFeedIngestionStats {
    return CatalogsReportFeedIngestionStatsFromJSONTyped(json, false);
}

export function CatalogsReportFeedIngestionStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsReportFeedIngestionStats {
    if (json == null) {
        return json;
    }
    return {
        
        'reportType': json['report_type'] == null ? undefined : json['report_type'],
        'catalogId': json['catalog_id'] == null ? undefined : json['catalog_id'],
        'code': json['code'] == null ? undefined : json['code'],
        'codeLabel': json['code_label'] == null ? undefined : json['code_label'],
        'message': json['message'] == null ? undefined : json['message'],
        'occurrences': json['occurrences'] == null ? undefined : json['occurrences'],
        'severity': json['severity'] == null ? undefined : json['severity'],
    };
}

  export function CatalogsReportFeedIngestionStatsToJSON(json: any): CatalogsReportFeedIngestionStats {
      return CatalogsReportFeedIngestionStatsToJSONTyped(json, false);
  }

  export function CatalogsReportFeedIngestionStatsToJSONTyped(value?: CatalogsReportFeedIngestionStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'report_type': value['reportType'],
        'catalog_id': value['catalogId'],
        'code': value['code'],
        'code_label': value['codeLabel'],
        'message': value['message'],
        'occurrences': value['occurrences'],
        'severity': value['severity'],
    };
}

