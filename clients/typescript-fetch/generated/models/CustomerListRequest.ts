/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserListType } from './UserListType';
import {
    UserListTypeFromJSON,
    UserListTypeFromJSONTyped,
    UserListTypeToJSON,
    UserListTypeToJSONTyped,
} from './UserListType';

/**
 * 
 * @export
 * @interface CustomerListRequest
 */
export interface CustomerListRequest {
    /**
     * Customer list name.
     * @type {string}
     * @memberof CustomerListRequest
     */
    name: string;
    /**
     * Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
     * @type {string}
     * @memberof CustomerListRequest
     */
    records: string;
    /**
     * 
     * @type {UserListType}
     * @memberof CustomerListRequest
     */
    listType?: UserListType;
    /**
     * Customer list errors.
     * @type {object}
     * @memberof CustomerListRequest
     */
    exceptions?: object;
}



/**
 * Check if a given object implements the CustomerListRequest interface.
 */
export function instanceOfCustomerListRequest(value: object): value is CustomerListRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('records' in value) || value['records'] === undefined) return false;
    return true;
}

export function CustomerListRequestFromJSON(json: any): CustomerListRequest {
    return CustomerListRequestFromJSONTyped(json, false);
}

export function CustomerListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerListRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'records': json['records'],
        'listType': json['list_type'] == null ? undefined : UserListTypeFromJSON(json['list_type']),
        'exceptions': json['exceptions'] == null ? undefined : json['exceptions'],
    };
}

  export function CustomerListRequestToJSON(json: any): CustomerListRequest {
      return CustomerListRequestToJSONTyped(json, false);
  }

  export function CustomerListRequestToJSONTyped(value?: CustomerListRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'records': value['records'],
        'list_type': UserListTypeToJSON(value['listType']),
        'exceptions': value['exceptions'],
    };
}

