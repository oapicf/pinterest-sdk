/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsFeedProcessingStatus } from './CatalogsFeedProcessingStatus';
import {
    CatalogsFeedProcessingStatusFromJSON,
    CatalogsFeedProcessingStatusFromJSONTyped,
    CatalogsFeedProcessingStatusToJSON,
    CatalogsFeedProcessingStatusToJSONTyped,
} from './CatalogsFeedProcessingStatus';

/**
 * 
 * @export
 * @interface CatalogsFeedIngestion
 */
export interface CatalogsFeedIngestion {
    /**
     * 
     * @type {string}
     * @memberof CatalogsFeedIngestion
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsFeedIngestion
     */
    feedId: string;
    /**
     * 
     * @type {Date}
     * @memberof CatalogsFeedIngestion
     */
    createdAt: Date;
    /**
     * 
     * @type {CatalogsFeedProcessingStatus}
     * @memberof CatalogsFeedIngestion
     */
    status: CatalogsFeedProcessingStatus;
}



/**
 * Check if a given object implements the CatalogsFeedIngestion interface.
 */
export function instanceOfCatalogsFeedIngestion(value: object): value is CatalogsFeedIngestion {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('feedId' in value) || value['feedId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function CatalogsFeedIngestionFromJSON(json: any): CatalogsFeedIngestion {
    return CatalogsFeedIngestionFromJSONTyped(json, false);
}

export function CatalogsFeedIngestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsFeedIngestion {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'feedId': json['feed_id'],
        'createdAt': (new Date(json['created_at'])),
        'status': CatalogsFeedProcessingStatusFromJSON(json['status']),
    };
}

  export function CatalogsFeedIngestionToJSON(json: any): CatalogsFeedIngestion {
      return CatalogsFeedIngestionToJSONTyped(json, false);
  }

  export function CatalogsFeedIngestionToJSONTyped(value?: CatalogsFeedIngestion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'feed_id': value['feedId'],
        'created_at': ((value['createdAt']).toISOString()),
        'status': CatalogsFeedProcessingStatusToJSON(value['status']),
    };
}

