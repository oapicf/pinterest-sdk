/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityStatus } from './EntityStatus';
import {
    EntityStatusFromJSON,
    EntityStatusFromJSONTyped,
    EntityStatusToJSON,
    EntityStatusToJSONTyped,
} from './EntityStatus';
import type { TrackingUrls } from './TrackingUrls';
import {
    TrackingUrlsFromJSON,
    TrackingUrlsFromJSONTyped,
    TrackingUrlsToJSON,
    TrackingUrlsToJSONTyped,
} from './TrackingUrls';
import type { ObjectiveType } from './ObjectiveType';
import {
    ObjectiveTypeFromJSON,
    ObjectiveTypeFromJSONTyped,
    ObjectiveTypeToJSON,
    ObjectiveTypeToJSONTyped,
} from './ObjectiveType';

/**
 * 
 * @export
 * @interface CampaignCreateRequest
 */
export interface CampaignCreateRequest {
    /**
     * Campaign's Advertiser ID. If you want to create a campaign in a Business Account shared account you need to specify the Business Access advertiser ID in both the query path param as well as the request body schema.
     * @type {string}
     * @memberof CampaignCreateRequest
     */
    adAccountId: string;
    /**
     * Campaign name.
     * @type {string}
     * @memberof CampaignCreateRequest
     */
    name: string;
    /**
     * 
     * @type {EntityStatus}
     * @memberof CampaignCreateRequest
     */
    status?: EntityStatus;
    /**
     * Campaign total spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "daily_spend_cap" cannot be set at the same time.
     * @type {number}
     * @memberof CampaignCreateRequest
     */
    lifetimeSpendCap?: number | null;
    /**
     * Campaign daily spending cap. Required for Campaign Budget Optimization (CBO) campaigns. This and "lifetime_spend_cap" cannot be set at the same time.
     * @type {number}
     * @memberof CampaignCreateRequest
     */
    dailySpendCap?: number | null;
    /**
     * Order line ID that appears on the invoice.
     * @type {string}
     * @memberof CampaignCreateRequest
     */
    orderLineId?: string | null;
    /**
     * 
     * @type {TrackingUrls}
     * @memberof CampaignCreateRequest
     */
    trackingUrls?: TrackingUrls | null;
    /**
     * Campaign start time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignCreateRequest
     */
    startTime?: number | null;
    /**
     * Campaign end time. Unix timestamp in seconds. Only used for Campaign Budget Optimization (CBO) campaigns.
     * @type {number}
     * @memberof CampaignCreateRequest
     */
    endTime?: number | null;
    /**
     * Determine if a campaign has flexible daily budgets setup.
     * @type {boolean}
     * @memberof CampaignCreateRequest
     */
    isFlexibleDailyBudgets?: boolean | null;
    /**
     * When transitioning from campaign budget optimization to non-campaign budget optimization, the default_ad_group_budget_in_micro_currency will propagate to each child ad groups daily budget. Unit is micro currency of the associated advertiser account.
     * @type {number}
     * @memberof CampaignCreateRequest
     */
    defaultAdGroupBudgetInMicroCurrency?: number | null;
    /**
     * Specifies whether the campaign was created in the automated campaign flow
     * @type {boolean}
     * @memberof CampaignCreateRequest
     */
    isAutomatedCampaign?: boolean | null;
    /**
     * 
     * @type {ObjectiveType}
     * @memberof CampaignCreateRequest
     */
    objectiveType: ObjectiveType;
}



/**
 * Check if a given object implements the CampaignCreateRequest interface.
 */
export function instanceOfCampaignCreateRequest(value: object): value is CampaignCreateRequest {
    if (!('adAccountId' in value) || value['adAccountId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('objectiveType' in value) || value['objectiveType'] === undefined) return false;
    return true;
}

export function CampaignCreateRequestFromJSON(json: any): CampaignCreateRequest {
    return CampaignCreateRequestFromJSONTyped(json, false);
}

export function CampaignCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CampaignCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'adAccountId': json['ad_account_id'],
        'name': json['name'],
        'status': json['status'] == null ? undefined : EntityStatusFromJSON(json['status']),
        'lifetimeSpendCap': json['lifetime_spend_cap'] == null ? undefined : json['lifetime_spend_cap'],
        'dailySpendCap': json['daily_spend_cap'] == null ? undefined : json['daily_spend_cap'],
        'orderLineId': json['order_line_id'] == null ? undefined : json['order_line_id'],
        'trackingUrls': json['tracking_urls'] == null ? undefined : TrackingUrlsFromJSON(json['tracking_urls']),
        'startTime': json['start_time'] == null ? undefined : json['start_time'],
        'endTime': json['end_time'] == null ? undefined : json['end_time'],
        'isFlexibleDailyBudgets': json['is_flexible_daily_budgets'] == null ? undefined : json['is_flexible_daily_budgets'],
        'defaultAdGroupBudgetInMicroCurrency': json['default_ad_group_budget_in_micro_currency'] == null ? undefined : json['default_ad_group_budget_in_micro_currency'],
        'isAutomatedCampaign': json['is_automated_campaign'] == null ? undefined : json['is_automated_campaign'],
        'objectiveType': ObjectiveTypeFromJSON(json['objective_type']),
    };
}

  export function CampaignCreateRequestToJSON(json: any): CampaignCreateRequest {
      return CampaignCreateRequestToJSONTyped(json, false);
  }

  export function CampaignCreateRequestToJSONTyped(value?: CampaignCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ad_account_id': value['adAccountId'],
        'name': value['name'],
        'status': EntityStatusToJSON(value['status']),
        'lifetime_spend_cap': value['lifetimeSpendCap'],
        'daily_spend_cap': value['dailySpendCap'],
        'order_line_id': value['orderLineId'],
        'tracking_urls': TrackingUrlsToJSON(value['trackingUrls']),
        'start_time': value['startTime'],
        'end_time': value['endTime'],
        'is_flexible_daily_budgets': value['isFlexibleDailyBudgets'],
        'default_ad_group_budget_in_micro_currency': value['defaultAdGroupBudgetInMicroCurrency'],
        'is_automated_campaign': value['isAutomatedCampaign'],
        'objective_type': ObjectiveTypeToJSON(value['objectiveType']),
    };
}

