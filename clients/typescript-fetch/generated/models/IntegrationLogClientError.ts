/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * System error details included in the log sent by the client.
 * @export
 * @interface IntegrationLogClientError
 */
export interface IntegrationLogClientError {
    /**
     * Original cause of the error.
     * @type {string}
     * @memberof IntegrationLogClientError
     */
    cause?: string;
    /**
     * Column number in the line of the file that raised the error.
     * @type {number}
     * @memberof IntegrationLogClientError
     */
    columnNumber?: number;
    /**
     * Filename where the error happened.
     * @type {string}
     * @memberof IntegrationLogClientError
     */
    fileName?: string;
    /**
     * Line number where the error happened.
     * @type {number}
     * @memberof IntegrationLogClientError
     */
    lineNumber?: number;
    /**
     * Human-readable description of the error.
     * @type {string}
     * @memberof IntegrationLogClientError
     */
    message?: string;
    /**
     * More detail about the message.
     * @type {string}
     * @memberof IntegrationLogClientError
     */
    messageDetail?: string;
    /**
     * Filename where the error happened.
     * @type {string}
     * @memberof IntegrationLogClientError
     */
    name?: string;
    /**
     * Integer that specifies the error code.
     * @type {number}
     * @memberof IntegrationLogClientError
     */
    number?: number;
    /**
     * Stack trace of where the error happened.
     * @type {string}
     * @memberof IntegrationLogClientError
     */
    stackTrace?: string;
}

/**
 * Check if a given object implements the IntegrationLogClientError interface.
 */
export function instanceOfIntegrationLogClientError(value: object): value is IntegrationLogClientError {
    return true;
}

export function IntegrationLogClientErrorFromJSON(json: any): IntegrationLogClientError {
    return IntegrationLogClientErrorFromJSONTyped(json, false);
}

export function IntegrationLogClientErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationLogClientError {
    if (json == null) {
        return json;
    }
    return {
        
        'cause': json['cause'] == null ? undefined : json['cause'],
        'columnNumber': json['column_number'] == null ? undefined : json['column_number'],
        'fileName': json['file_name'] == null ? undefined : json['file_name'],
        'lineNumber': json['line_number'] == null ? undefined : json['line_number'],
        'message': json['message'] == null ? undefined : json['message'],
        'messageDetail': json['message_detail'] == null ? undefined : json['message_detail'],
        'name': json['name'] == null ? undefined : json['name'],
        'number': json['number'] == null ? undefined : json['number'],
        'stackTrace': json['stack_trace'] == null ? undefined : json['stack_trace'],
    };
}

  export function IntegrationLogClientErrorToJSON(json: any): IntegrationLogClientError {
      return IntegrationLogClientErrorToJSONTyped(json, false);
  }

  export function IntegrationLogClientErrorToJSONTyped(value?: IntegrationLogClientError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cause': value['cause'],
        'column_number': value['columnNumber'],
        'file_name': value['fileName'],
        'line_number': value['lineNumber'],
        'message': value['message'],
        'message_detail': value['messageDetail'],
        'name': value['name'],
        'number': value['number'],
        'stack_trace': value['stackTrace'],
    };
}

