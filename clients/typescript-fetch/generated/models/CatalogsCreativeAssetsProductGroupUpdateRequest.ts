/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CatalogsCreativeAssetsProductGroupFilters } from './CatalogsCreativeAssetsProductGroupFilters';
import {
    CatalogsCreativeAssetsProductGroupFiltersFromJSON,
    CatalogsCreativeAssetsProductGroupFiltersFromJSONTyped,
    CatalogsCreativeAssetsProductGroupFiltersToJSON,
    CatalogsCreativeAssetsProductGroupFiltersToJSONTyped,
} from './CatalogsCreativeAssetsProductGroupFilters';

/**
 * Request object for updating a creative assets product group.
 * @export
 * @interface CatalogsCreativeAssetsProductGroupUpdateRequest
 */
export interface CatalogsCreativeAssetsProductGroupUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupUpdateRequest
     */
    catalogType?: CatalogsCreativeAssetsProductGroupUpdateRequestCatalogTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogsCreativeAssetsProductGroupUpdateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {CatalogsCreativeAssetsProductGroupFilters}
     * @memberof CatalogsCreativeAssetsProductGroupUpdateRequest
     */
    filters?: CatalogsCreativeAssetsProductGroupFilters;
}


/**
 * @export
 */
export const CatalogsCreativeAssetsProductGroupUpdateRequestCatalogTypeEnum = {
    CreativeAssets: 'CREATIVE_ASSETS'
} as const;
export type CatalogsCreativeAssetsProductGroupUpdateRequestCatalogTypeEnum = typeof CatalogsCreativeAssetsProductGroupUpdateRequestCatalogTypeEnum[keyof typeof CatalogsCreativeAssetsProductGroupUpdateRequestCatalogTypeEnum];


/**
 * Check if a given object implements the CatalogsCreativeAssetsProductGroupUpdateRequest interface.
 */
export function instanceOfCatalogsCreativeAssetsProductGroupUpdateRequest(value: object): value is CatalogsCreativeAssetsProductGroupUpdateRequest {
    return true;
}

export function CatalogsCreativeAssetsProductGroupUpdateRequestFromJSON(json: any): CatalogsCreativeAssetsProductGroupUpdateRequest {
    return CatalogsCreativeAssetsProductGroupUpdateRequestFromJSONTyped(json, false);
}

export function CatalogsCreativeAssetsProductGroupUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsCreativeAssetsProductGroupUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogType': json['catalog_type'] == null ? undefined : json['catalog_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'filters': json['filters'] == null ? undefined : CatalogsCreativeAssetsProductGroupFiltersFromJSON(json['filters']),
    };
}

  export function CatalogsCreativeAssetsProductGroupUpdateRequestToJSON(json: any): CatalogsCreativeAssetsProductGroupUpdateRequest {
      return CatalogsCreativeAssetsProductGroupUpdateRequestToJSONTyped(json, false);
  }

  export function CatalogsCreativeAssetsProductGroupUpdateRequestToJSONTyped(value?: CatalogsCreativeAssetsProductGroupUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_type': value['catalogType'],
        'name': value['name'],
        'description': value['description'],
        'filters': CatalogsCreativeAssetsProductGroupFiltersToJSON(value['filters']),
    };
}

