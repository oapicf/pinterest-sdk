/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsFeedsUpdateRequest } from './CatalogsCreativeAssetsFeedsUpdateRequest';
import {
    instanceOfCatalogsCreativeAssetsFeedsUpdateRequest,
    CatalogsCreativeAssetsFeedsUpdateRequestFromJSON,
    CatalogsCreativeAssetsFeedsUpdateRequestFromJSONTyped,
    CatalogsCreativeAssetsFeedsUpdateRequestToJSON,
} from './CatalogsCreativeAssetsFeedsUpdateRequest';
import type { CatalogsHotelFeedsUpdateRequest } from './CatalogsHotelFeedsUpdateRequest';
import {
    instanceOfCatalogsHotelFeedsUpdateRequest,
    CatalogsHotelFeedsUpdateRequestFromJSON,
    CatalogsHotelFeedsUpdateRequestFromJSONTyped,
    CatalogsHotelFeedsUpdateRequestToJSON,
} from './CatalogsHotelFeedsUpdateRequest';
import type { CatalogsRetailFeedsUpdateRequest } from './CatalogsRetailFeedsUpdateRequest';
import {
    instanceOfCatalogsRetailFeedsUpdateRequest,
    CatalogsRetailFeedsUpdateRequestFromJSON,
    CatalogsRetailFeedsUpdateRequestFromJSONTyped,
    CatalogsRetailFeedsUpdateRequestToJSON,
} from './CatalogsRetailFeedsUpdateRequest';

/**
 * @type CatalogsVerticalFeedsUpdateRequest
 * Request object for updating a feed.
 * @export
 */
export type CatalogsVerticalFeedsUpdateRequest = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsFeedsUpdateRequest | { catalogType: 'HOTEL' } & CatalogsHotelFeedsUpdateRequest | { catalogType: 'RETAIL' } & CatalogsRetailFeedsUpdateRequest;

export function CatalogsVerticalFeedsUpdateRequestFromJSON(json: any): CatalogsVerticalFeedsUpdateRequest {
    return CatalogsVerticalFeedsUpdateRequestFromJSONTyped(json, false);
}

export function CatalogsVerticalFeedsUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogsVerticalFeedsUpdateRequest {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsFeedsUpdateRequestFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelFeedsUpdateRequestFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailFeedsUpdateRequestFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of CatalogsVerticalFeedsUpdateRequest exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function CatalogsVerticalFeedsUpdateRequestToJSON(value?: CatalogsVerticalFeedsUpdateRequest | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsFeedsUpdateRequestToJSON(value);
        case 'HOTEL':
            return CatalogsHotelFeedsUpdateRequestToJSON(value);
        case 'RETAIL':
            return CatalogsRetailFeedsUpdateRequestToJSON(value);
        default:
            throw new Error(`No variant of CatalogsVerticalFeedsUpdateRequest exists with 'catalogType=${value['catalogType']}'`);
    }

}

