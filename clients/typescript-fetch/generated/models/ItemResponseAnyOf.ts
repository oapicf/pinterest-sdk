/* tslint:disable */
/* eslint-disable */
/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CatalogsCreativeAssetsItemResponse } from './CatalogsCreativeAssetsItemResponse';
import {
    instanceOfCatalogsCreativeAssetsItemResponse,
    CatalogsCreativeAssetsItemResponseFromJSON,
    CatalogsCreativeAssetsItemResponseFromJSONTyped,
    CatalogsCreativeAssetsItemResponseToJSON,
} from './CatalogsCreativeAssetsItemResponse';
import type { CatalogsHotelItemResponse } from './CatalogsHotelItemResponse';
import {
    instanceOfCatalogsHotelItemResponse,
    CatalogsHotelItemResponseFromJSON,
    CatalogsHotelItemResponseFromJSONTyped,
    CatalogsHotelItemResponseToJSON,
} from './CatalogsHotelItemResponse';
import type { CatalogsRetailItemResponse } from './CatalogsRetailItemResponse';
import {
    instanceOfCatalogsRetailItemResponse,
    CatalogsRetailItemResponseFromJSON,
    CatalogsRetailItemResponseFromJSONTyped,
    CatalogsRetailItemResponseToJSON,
} from './CatalogsRetailItemResponse';

/**
 * @type ItemResponseAnyOf
 * 
 * @export
 */
export type ItemResponseAnyOf = { catalogType: 'CREATIVE_ASSETS' } & CatalogsCreativeAssetsItemResponse | { catalogType: 'HOTEL' } & CatalogsHotelItemResponse | { catalogType: 'RETAIL' } & CatalogsRetailItemResponse;

export function ItemResponseAnyOfFromJSON(json: any): ItemResponseAnyOf {
    return ItemResponseAnyOfFromJSONTyped(json, false);
}

export function ItemResponseAnyOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemResponseAnyOf {
    if (json == null) {
        return json;
    }
    switch (json['catalog_type']) {
        case 'CREATIVE_ASSETS':
            return Object.assign({}, CatalogsCreativeAssetsItemResponseFromJSONTyped(json, true), { catalogType: 'CREATIVE_ASSETS' } as const);
        case 'HOTEL':
            return Object.assign({}, CatalogsHotelItemResponseFromJSONTyped(json, true), { catalogType: 'HOTEL' } as const);
        case 'RETAIL':
            return Object.assign({}, CatalogsRetailItemResponseFromJSONTyped(json, true), { catalogType: 'RETAIL' } as const);
        default:
            throw new Error(`No variant of ItemResponseAnyOf exists with 'catalogType=${json['catalogType']}'`);
    }
}

export function ItemResponseAnyOfToJSON(value?: ItemResponseAnyOf | null): any {
    if (value == null) {
        return value;
    }
    switch (value['catalogType']) {
        case 'CREATIVE_ASSETS':
            return CatalogsCreativeAssetsItemResponseToJSON(value);
        case 'HOTEL':
            return CatalogsHotelItemResponseToJSON(value);
        case 'RETAIL':
            return CatalogsRetailItemResponseToJSON(value);
        default:
            throw new Error(`No variant of ItemResponseAnyOf exists with 'catalogType=${value['catalogType']}'`);
    }

}

