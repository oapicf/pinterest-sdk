/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPILineItem.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPILineItem::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (ProductBrand.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_brand")); WriteJsonValue(Writer, ProductBrand.GetValue());
	}
	if (ProductCategory.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_category")); WriteJsonValue(Writer, ProductCategory.GetValue());
	}
	if (ProductId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_id")); WriteJsonValue(Writer, ProductId.GetValue());
	}
	if (ProductName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_name")); WriteJsonValue(Writer, ProductName.GetValue());
	}
	if (ProductPrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_price")); WriteJsonValue(Writer, ProductPrice.GetValue());
	}
	if (ProductQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_quantity")); WriteJsonValue(Writer, ProductQuantity.GetValue());
	}
	if (ProductVariant.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_variant")); WriteJsonValue(Writer, ProductVariant.GetValue());
	}
	if (ProductVariantId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("product_variant_id")); WriteJsonValue(Writer, ProductVariantId.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPILineItem::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_brand"), ProductBrand);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_category"), ProductCategory);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_id"), ProductId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_name"), ProductName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_price"), ProductPrice);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_quantity"), ProductQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_variant"), ProductVariant);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("product_variant_id"), ProductVariantId);

	return ParseSuccess;
}

}
