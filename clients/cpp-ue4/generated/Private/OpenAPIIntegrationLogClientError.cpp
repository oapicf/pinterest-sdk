/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIIntegrationLogClientError.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIIntegrationLogClientError::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Cause.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("cause")); WriteJsonValue(Writer, Cause.GetValue());
	}
	if (ColumnNumber.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("column_number")); WriteJsonValue(Writer, ColumnNumber.GetValue());
	}
	if (FileName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("file_name")); WriteJsonValue(Writer, FileName.GetValue());
	}
	if (LineNumber.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("line_number")); WriteJsonValue(Writer, LineNumber.GetValue());
	}
	if (Message.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("message")); WriteJsonValue(Writer, Message.GetValue());
	}
	if (MessageDetail.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("message_detail")); WriteJsonValue(Writer, MessageDetail.GetValue());
	}
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());
	}
	if (Number.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("number")); WriteJsonValue(Writer, Number.GetValue());
	}
	if (StackTrace.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("stack_trace")); WriteJsonValue(Writer, StackTrace.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIIntegrationLogClientError::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("cause"), Cause);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("column_number"), ColumnNumber);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("file_name"), FileName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("line_number"), LineNumber);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("message"), Message);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("message_detail"), MessageDetail);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("number"), Number);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("stack_trace"), StackTrace);

	return ParseSuccess;
}

}
