/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICatalogsCreativeAssetsAttributes.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPICatalogsCreativeAssetsAttributes::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Title.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("title")); WriteJsonValue(Writer, Title.GetValue());
	}
	if (Description.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("description")); WriteJsonValue(Writer, Description.GetValue());
	}
	if (Link.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("link")); WriteJsonValue(Writer, Link.GetValue());
	}
	if (IosDeepLink.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ios_deep_link")); WriteJsonValue(Writer, IosDeepLink.GetValue());
	}
	if (AndroidDeepLink.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("android_deep_link")); WriteJsonValue(Writer, AndroidDeepLink.GetValue());
	}
	if (GoogleProductCategory.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("google_product_category")); WriteJsonValue(Writer, GoogleProductCategory.GetValue());
	}
	if (CustomLabel0.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_label_0")); WriteJsonValue(Writer, CustomLabel0.GetValue());
	}
	if (CustomLabel1.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_label_1")); WriteJsonValue(Writer, CustomLabel1.GetValue());
	}
	if (CustomLabel2.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_label_2")); WriteJsonValue(Writer, CustomLabel2.GetValue());
	}
	if (CustomLabel3.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_label_3")); WriteJsonValue(Writer, CustomLabel3.GetValue());
	}
	if (CustomLabel4.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("custom_label_4")); WriteJsonValue(Writer, CustomLabel4.GetValue());
	}
	if (Visibility.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("visibility")); WriteJsonValue(Writer, Visibility.GetValue());
	}
	if (ImageLink.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("image_link")); WriteJsonValue(Writer, ImageLink.GetValue());
	}
	if (VideoLink.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("video_link")); WriteJsonValue(Writer, VideoLink.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPICatalogsCreativeAssetsAttributes::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("title"), Title);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("description"), Description);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("link"), Link);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ios_deep_link"), IosDeepLink);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("android_deep_link"), AndroidDeepLink);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("google_product_category"), GoogleProductCategory);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("custom_label_0"), CustomLabel0);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("custom_label_1"), CustomLabel1);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("custom_label_2"), CustomLabel2);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("custom_label_3"), CustomLabel3);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("custom_label_4"), CustomLabel4);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("visibility"), Visibility);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("image_link"), ImageLink);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("video_link"), VideoLink);

	return ParseSuccess;
}

}
