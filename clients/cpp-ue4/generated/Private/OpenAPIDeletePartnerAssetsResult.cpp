/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIDeletePartnerAssetsResult.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIDeletePartnerAssetsResult::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (AssetId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("asset_id")); WriteJsonValue(Writer, AssetId.GetValue());
	}
	if (AssetType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("asset_type")); WriteJsonValue(Writer, AssetType.GetValue());
	}
	if (Permissions.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("permissions")); WriteJsonValue(Writer, Permissions.GetValue());
	}
	if (IsSharedPartner.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("is_shared_partner")); WriteJsonValue(Writer, IsSharedPartner.GetValue());
	}
	if (PartnerId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("partner_id")); WriteJsonValue(Writer, PartnerId.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIDeletePartnerAssetsResult::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("asset_id"), AssetId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("asset_type"), AssetType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("permissions"), Permissions);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("is_shared_partner"), IsSharedPartner);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("partner_id"), PartnerId);

	return ParseSuccess;
}

}
