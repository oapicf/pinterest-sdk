/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPITargetingSpecAppType.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPITargetingSpecAppType::Values& Value)
{
	switch (Value)
	{
	case OpenAPITargetingSpecAppType::Values::AndroidMobile:
		return TEXT("android_mobile");
	case OpenAPITargetingSpecAppType::Values::AndroidTablet:
		return TEXT("android_tablet");
	case OpenAPITargetingSpecAppType::Values::Ipad:
		return TEXT("ipad");
	case OpenAPITargetingSpecAppType::Values::Iphone:
		return TEXT("iphone");
	case OpenAPITargetingSpecAppType::Values::Web:
		return TEXT("web");
	case OpenAPITargetingSpecAppType::Values::WebMobile:
		return TEXT("web_mobile");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPITargetingSpecAppType::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPITargetingSpecAppType::EnumToString(const OpenAPITargetingSpecAppType::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPITargetingSpecAppType::Values& Value)
{
	static TMap<FString, OpenAPITargetingSpecAppType::Values> StringToEnum = { 
		{ TEXT("android_mobile"), OpenAPITargetingSpecAppType::Values::AndroidMobile },
		{ TEXT("android_tablet"), OpenAPITargetingSpecAppType::Values::AndroidTablet },
		{ TEXT("ipad"), OpenAPITargetingSpecAppType::Values::Ipad },
		{ TEXT("iphone"), OpenAPITargetingSpecAppType::Values::Iphone },
		{ TEXT("web"), OpenAPITargetingSpecAppType::Values::Web },
		{ TEXT("web_mobile"), OpenAPITargetingSpecAppType::Values::WebMobile }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPITargetingSpecAppType::EnumFromString(const FString& EnumAsString, OpenAPITargetingSpecAppType::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPITargetingSpecAppType::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPITargetingSpecAppType::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPITargetingSpecAppType::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPITargetingSpecAppType::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
