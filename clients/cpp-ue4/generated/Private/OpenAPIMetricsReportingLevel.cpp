/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIMetricsReportingLevel.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIMetricsReportingLevel::Values& Value)
{
	switch (Value)
	{
	case OpenAPIMetricsReportingLevel::Values::Advertiser:
		return TEXT("ADVERTISER");
	case OpenAPIMetricsReportingLevel::Values::AdvertiserTargeting:
		return TEXT("ADVERTISER_TARGETING");
	case OpenAPIMetricsReportingLevel::Values::Campaign:
		return TEXT("CAMPAIGN");
	case OpenAPIMetricsReportingLevel::Values::CampaignTargeting:
		return TEXT("CAMPAIGN_TARGETING");
	case OpenAPIMetricsReportingLevel::Values::AdGroup:
		return TEXT("AD_GROUP");
	case OpenAPIMetricsReportingLevel::Values::AdGroupTargeting:
		return TEXT("AD_GROUP_TARGETING");
	case OpenAPIMetricsReportingLevel::Values::PinPromotion:
		return TEXT("PIN_PROMOTION");
	case OpenAPIMetricsReportingLevel::Values::PinPromotionTargeting:
		return TEXT("PIN_PROMOTION_TARGETING");
	case OpenAPIMetricsReportingLevel::Values::Keyword:
		return TEXT("KEYWORD");
	case OpenAPIMetricsReportingLevel::Values::ProductGroup:
		return TEXT("PRODUCT_GROUP");
	case OpenAPIMetricsReportingLevel::Values::ProductGroupTargeting:
		return TEXT("PRODUCT_GROUP_TARGETING");
	case OpenAPIMetricsReportingLevel::Values::ProductItem:
		return TEXT("PRODUCT_ITEM");
	case OpenAPIMetricsReportingLevel::Values::ProductItemTargeting:
		return TEXT("PRODUCT_ITEM_TARGETING");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIMetricsReportingLevel::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIMetricsReportingLevel::EnumToString(const OpenAPIMetricsReportingLevel::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIMetricsReportingLevel::Values& Value)
{
	static TMap<FString, OpenAPIMetricsReportingLevel::Values> StringToEnum = { 
		{ TEXT("ADVERTISER"), OpenAPIMetricsReportingLevel::Values::Advertiser },
		{ TEXT("ADVERTISER_TARGETING"), OpenAPIMetricsReportingLevel::Values::AdvertiserTargeting },
		{ TEXT("CAMPAIGN"), OpenAPIMetricsReportingLevel::Values::Campaign },
		{ TEXT("CAMPAIGN_TARGETING"), OpenAPIMetricsReportingLevel::Values::CampaignTargeting },
		{ TEXT("AD_GROUP"), OpenAPIMetricsReportingLevel::Values::AdGroup },
		{ TEXT("AD_GROUP_TARGETING"), OpenAPIMetricsReportingLevel::Values::AdGroupTargeting },
		{ TEXT("PIN_PROMOTION"), OpenAPIMetricsReportingLevel::Values::PinPromotion },
		{ TEXT("PIN_PROMOTION_TARGETING"), OpenAPIMetricsReportingLevel::Values::PinPromotionTargeting },
		{ TEXT("KEYWORD"), OpenAPIMetricsReportingLevel::Values::Keyword },
		{ TEXT("PRODUCT_GROUP"), OpenAPIMetricsReportingLevel::Values::ProductGroup },
		{ TEXT("PRODUCT_GROUP_TARGETING"), OpenAPIMetricsReportingLevel::Values::ProductGroupTargeting },
		{ TEXT("PRODUCT_ITEM"), OpenAPIMetricsReportingLevel::Values::ProductItem },
		{ TEXT("PRODUCT_ITEM_TARGETING"), OpenAPIMetricsReportingLevel::Values::ProductItemTargeting }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIMetricsReportingLevel::EnumFromString(const FString& EnumAsString, OpenAPIMetricsReportingLevel::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIMetricsReportingLevel::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIMetricsReportingLevel::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPIMetricsReportingLevel::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPIMetricsReportingLevel::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
