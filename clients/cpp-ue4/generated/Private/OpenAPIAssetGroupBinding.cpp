/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIAssetGroupBinding.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIAssetGroupBinding::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (AssetGroupName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("asset_group_name")); WriteJsonValue(Writer, AssetGroupName.GetValue());
	}
	if (AssetGroupDescription.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("asset_group_description")); WriteJsonValue(Writer, AssetGroupDescription.GetValue());
	}
	if (AssetGroupTypes.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("asset_group_types")); WriteJsonValue(Writer, AssetGroupTypes.GetValue());
	}
	if (AdAccountsIds.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ad_accounts_ids")); WriteJsonValue(Writer, AdAccountsIds.GetValue());
	}
	if (ProfilesIds.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("profiles_ids")); WriteJsonValue(Writer, ProfilesIds.GetValue());
	}
	if (CreatedTime.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("created_time")); WriteJsonValue(Writer, CreatedTime.GetValue());
	}
	if (UpdatedTime.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("updated_time")); WriteJsonValue(Writer, UpdatedTime.GetValue());
	}
	if (Owner.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("owner")); WriteJsonValue(Writer, Owner.GetValue());
	}
	if (CreatedBy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("created_by")); WriteJsonValue(Writer, CreatedBy.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIAssetGroupBinding::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("asset_group_name"), AssetGroupName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("asset_group_description"), AssetGroupDescription);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("asset_group_types"), AssetGroupTypes);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ad_accounts_ids"), AdAccountsIds);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("profiles_ids"), ProfilesIds);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("created_time"), CreatedTime);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("updated_time"), UpdatedTime);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("owner"), Owner);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("created_by"), CreatedBy);

	return ParseSuccess;
}

}
