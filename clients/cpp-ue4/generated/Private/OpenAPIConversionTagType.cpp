/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIConversionTagType.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIConversionTagType::Values& Value)
{
	switch (Value)
	{
	case OpenAPIConversionTagType::Values::PageLoad:
		return TEXT("PAGE_LOAD");
	case OpenAPIConversionTagType::Values::Unknown:
		return TEXT("UNKNOWN");
	case OpenAPIConversionTagType::Values::Initialized:
		return TEXT("INITIALIZED");
	case OpenAPIConversionTagType::Values::PageVisit:
		return TEXT("PAGE_VISIT");
	case OpenAPIConversionTagType::Values::Signup:
		return TEXT("SIGNUP");
	case OpenAPIConversionTagType::Values::Checkout:
		return TEXT("CHECKOUT");
	case OpenAPIConversionTagType::Values::Custom:
		return TEXT("CUSTOM");
	case OpenAPIConversionTagType::Values::ViewCategory:
		return TEXT("VIEW_CATEGORY");
	case OpenAPIConversionTagType::Values::Search:
		return TEXT("SEARCH");
	case OpenAPIConversionTagType::Values::AddToCart:
		return TEXT("ADD_TO_CART");
	case OpenAPIConversionTagType::Values::WatchVideo:
		return TEXT("WATCH_VIDEO");
	case OpenAPIConversionTagType::Values::Lead:
		return TEXT("LEAD");
	case OpenAPIConversionTagType::Values::AppInstall:
		return TEXT("APP_INSTALL");
	case OpenAPIConversionTagType::Values::WebSession:
		return TEXT("WEB_SESSION");
	case OpenAPIConversionTagType::Values::ExternalMeasurement:
		return TEXT("EXTERNAL_MEASUREMENT");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIConversionTagType::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIConversionTagType::EnumToString(const OpenAPIConversionTagType::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIConversionTagType::Values& Value)
{
	static TMap<FString, OpenAPIConversionTagType::Values> StringToEnum = { 
		{ TEXT("PAGE_LOAD"), OpenAPIConversionTagType::Values::PageLoad },
		{ TEXT("UNKNOWN"), OpenAPIConversionTagType::Values::Unknown },
		{ TEXT("INITIALIZED"), OpenAPIConversionTagType::Values::Initialized },
		{ TEXT("PAGE_VISIT"), OpenAPIConversionTagType::Values::PageVisit },
		{ TEXT("SIGNUP"), OpenAPIConversionTagType::Values::Signup },
		{ TEXT("CHECKOUT"), OpenAPIConversionTagType::Values::Checkout },
		{ TEXT("CUSTOM"), OpenAPIConversionTagType::Values::Custom },
		{ TEXT("VIEW_CATEGORY"), OpenAPIConversionTagType::Values::ViewCategory },
		{ TEXT("SEARCH"), OpenAPIConversionTagType::Values::Search },
		{ TEXT("ADD_TO_CART"), OpenAPIConversionTagType::Values::AddToCart },
		{ TEXT("WATCH_VIDEO"), OpenAPIConversionTagType::Values::WatchVideo },
		{ TEXT("LEAD"), OpenAPIConversionTagType::Values::Lead },
		{ TEXT("APP_INSTALL"), OpenAPIConversionTagType::Values::AppInstall },
		{ TEXT("WEB_SESSION"), OpenAPIConversionTagType::Values::WebSession },
		{ TEXT("EXTERNAL_MEASUREMENT"), OpenAPIConversionTagType::Values::ExternalMeasurement }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIConversionTagType::EnumFromString(const FString& EnumAsString, OpenAPIConversionTagType::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIConversionTagType::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIConversionTagType::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPIConversionTagType::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPIConversionTagType::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
