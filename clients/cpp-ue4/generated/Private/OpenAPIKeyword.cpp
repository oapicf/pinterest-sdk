/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIKeyword.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIKeyword::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Bid.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("bid")); WriteJsonValue(Writer, Bid.GetValue());
	}
	if (MatchType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("match_type")); WriteJsonValue(Writer, MatchType.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("value")); WriteJsonValue(Writer, Value);
	if (Archived.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("archived")); WriteJsonValue(Writer, Archived.GetValue());
	}
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (ParentId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("parent_id")); WriteJsonValue(Writer, ParentId.GetValue());
	}
	if (ParentType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("parent_type")); WriteJsonValue(Writer, ParentType.GetValue());
	}
	if (Type.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("type")); WriteJsonValue(Writer, Type.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIKeyword::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("bid"), Bid);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("match_type"), MatchType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("value"), Value);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("archived"), Archived);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("parent_id"), ParentId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("parent_type"), ParentType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("type"), Type);

	return ParseSuccess;
}

}
