/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICatalogsProductGroupFilterKeys.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPICatalogsProductGroupFilterKeys::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("MIN_PRICE")); WriteJsonValue(Writer, MinPrice);
	Writer->WriteIdentifierPrefix(TEXT("MAX_PRICE")); WriteJsonValue(Writer, MaxPrice);
	Writer->WriteIdentifierPrefix(TEXT("CURRENCY")); WriteJsonValue(Writer, Currency);
	Writer->WriteIdentifierPrefix(TEXT("ITEM_ID")); WriteJsonValue(Writer, ItemId);
	Writer->WriteIdentifierPrefix(TEXT("AVAILABILITY")); WriteJsonValue(Writer, Availability);
	Writer->WriteIdentifierPrefix(TEXT("BRAND")); WriteJsonValue(Writer, Brand);
	Writer->WriteIdentifierPrefix(TEXT("CONDITION")); WriteJsonValue(Writer, Condition);
	Writer->WriteIdentifierPrefix(TEXT("CUSTOM_LABEL_0")); WriteJsonValue(Writer, CUSTOMLABEL0);
	Writer->WriteIdentifierPrefix(TEXT("CUSTOM_LABEL_1")); WriteJsonValue(Writer, CUSTOMLABEL1);
	Writer->WriteIdentifierPrefix(TEXT("CUSTOM_LABEL_2")); WriteJsonValue(Writer, CUSTOMLABEL2);
	Writer->WriteIdentifierPrefix(TEXT("CUSTOM_LABEL_3")); WriteJsonValue(Writer, CUSTOMLABEL3);
	Writer->WriteIdentifierPrefix(TEXT("CUSTOM_LABEL_4")); WriteJsonValue(Writer, CUSTOMLABEL4);
	Writer->WriteIdentifierPrefix(TEXT("ITEM_GROUP_ID")); WriteJsonValue(Writer, ItemGroupId);
	Writer->WriteIdentifierPrefix(TEXT("GENDER")); WriteJsonValue(Writer, Gender);
	Writer->WriteIdentifierPrefix(TEXT("MEDIA_TYPE")); WriteJsonValue(Writer, MediaType);
	Writer->WriteIdentifierPrefix(TEXT("PRODUCT_TYPE_4")); WriteJsonValue(Writer, PRODUCTTYPE4);
	Writer->WriteIdentifierPrefix(TEXT("PRODUCT_TYPE_3")); WriteJsonValue(Writer, PRODUCTTYPE3);
	Writer->WriteIdentifierPrefix(TEXT("PRODUCT_TYPE_2")); WriteJsonValue(Writer, PRODUCTTYPE2);
	Writer->WriteIdentifierPrefix(TEXT("PRODUCT_TYPE_1")); WriteJsonValue(Writer, PRODUCTTYPE1);
	Writer->WriteIdentifierPrefix(TEXT("PRODUCT_TYPE_0")); WriteJsonValue(Writer, PRODUCTTYPE0);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_6")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY6);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_5")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY5);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_4")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY4);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_3")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY3);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_2")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY2);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_1")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY1);
	Writer->WriteIdentifierPrefix(TEXT("GOOGLE_PRODUCT_CATEGORY_0")); WriteJsonValue(Writer, GOOGLEPRODUCTCATEGORY0);
	Writer->WriteIdentifierPrefix(TEXT("PRODUCT_GROUP")); WriteJsonValue(Writer, ProductGroup);
	Writer->WriteObjectEnd();
}

bool OpenAPICatalogsProductGroupFilterKeys::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MIN_PRICE"), MinPrice);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MAX_PRICE"), MaxPrice);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENCY"), Currency);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ITEM_ID"), ItemId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("AVAILABILITY"), Availability);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("BRAND"), Brand);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CONDITION"), Condition);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CUSTOM_LABEL_0"), CUSTOMLABEL0);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CUSTOM_LABEL_1"), CUSTOMLABEL1);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CUSTOM_LABEL_2"), CUSTOMLABEL2);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CUSTOM_LABEL_3"), CUSTOMLABEL3);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CUSTOM_LABEL_4"), CUSTOMLABEL4);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ITEM_GROUP_ID"), ItemGroupId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GENDER"), Gender);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MEDIA_TYPE"), MediaType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRODUCT_TYPE_4"), PRODUCTTYPE4);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRODUCT_TYPE_3"), PRODUCTTYPE3);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRODUCT_TYPE_2"), PRODUCTTYPE2);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRODUCT_TYPE_1"), PRODUCTTYPE1);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRODUCT_TYPE_0"), PRODUCTTYPE0);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_6"), GOOGLEPRODUCTCATEGORY6);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_5"), GOOGLEPRODUCTCATEGORY5);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_4"), GOOGLEPRODUCTCATEGORY4);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_3"), GOOGLEPRODUCTCATEGORY3);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_2"), GOOGLEPRODUCTCATEGORY2);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_1"), GOOGLEPRODUCTCATEGORY1);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("GOOGLE_PRODUCT_CATEGORY_0"), GOOGLEPRODUCTCATEGORY0);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRODUCT_GROUP"), ProductGroup);

	return ParseSuccess;
}

}
