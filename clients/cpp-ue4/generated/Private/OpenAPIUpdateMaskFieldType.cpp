/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIUpdateMaskFieldType.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIUpdateMaskFieldType::Values& Value)
{
	switch (Value)
	{
	case OpenAPIUpdateMaskFieldType::Values::AdLink:
		return TEXT("ad_link");
	case OpenAPIUpdateMaskFieldType::Values::Adult:
		return TEXT("adult");
	case OpenAPIUpdateMaskFieldType::Values::AgeGroup:
		return TEXT("age_group");
	case OpenAPIUpdateMaskFieldType::Values::Availability:
		return TEXT("availability");
	case OpenAPIUpdateMaskFieldType::Values::AverageReviewRating:
		return TEXT("average_review_rating");
	case OpenAPIUpdateMaskFieldType::Values::Brand:
		return TEXT("brand");
	case OpenAPIUpdateMaskFieldType::Values::CheckoutEnabled:
		return TEXT("checkout_enabled");
	case OpenAPIUpdateMaskFieldType::Values::Color:
		return TEXT("color");
	case OpenAPIUpdateMaskFieldType::Values::Condition:
		return TEXT("condition");
	case OpenAPIUpdateMaskFieldType::Values::CustomLabel0:
		return TEXT("custom_label_0");
	case OpenAPIUpdateMaskFieldType::Values::CustomLabel1:
		return TEXT("custom_label_1");
	case OpenAPIUpdateMaskFieldType::Values::CustomLabel2:
		return TEXT("custom_label_2");
	case OpenAPIUpdateMaskFieldType::Values::CustomLabel3:
		return TEXT("custom_label_3");
	case OpenAPIUpdateMaskFieldType::Values::CustomLabel4:
		return TEXT("custom_label_4");
	case OpenAPIUpdateMaskFieldType::Values::Description:
		return TEXT("description");
	case OpenAPIUpdateMaskFieldType::Values::FreeShippingLabel:
		return TEXT("free_shipping_label");
	case OpenAPIUpdateMaskFieldType::Values::FreeShippingLimit:
		return TEXT("free_shipping_limit");
	case OpenAPIUpdateMaskFieldType::Values::Gender:
		return TEXT("gender");
	case OpenAPIUpdateMaskFieldType::Values::GoogleProductCategory:
		return TEXT("google_product_category");
	case OpenAPIUpdateMaskFieldType::Values::Gtin:
		return TEXT("gtin");
	case OpenAPIUpdateMaskFieldType::Values::ItemGroupId:
		return TEXT("item_group_id");
	case OpenAPIUpdateMaskFieldType::Values::LastUpdatedTime:
		return TEXT("last_updated_time");
	case OpenAPIUpdateMaskFieldType::Values::Link:
		return TEXT("link");
	case OpenAPIUpdateMaskFieldType::Values::Material:
		return TEXT("material");
	case OpenAPIUpdateMaskFieldType::Values::MinAdPrice:
		return TEXT("min_ad_price");
	case OpenAPIUpdateMaskFieldType::Values::Mpn:
		return TEXT("mpn");
	case OpenAPIUpdateMaskFieldType::Values::NumberOfRatings:
		return TEXT("number_of_ratings");
	case OpenAPIUpdateMaskFieldType::Values::NumberOfReviews:
		return TEXT("number_of_reviews");
	case OpenAPIUpdateMaskFieldType::Values::Pattern:
		return TEXT("pattern");
	case OpenAPIUpdateMaskFieldType::Values::Price:
		return TEXT("price");
	case OpenAPIUpdateMaskFieldType::Values::ProductType:
		return TEXT("product_type");
	case OpenAPIUpdateMaskFieldType::Values::SalePrice:
		return TEXT("sale_price");
	case OpenAPIUpdateMaskFieldType::Values::Shipping:
		return TEXT("shipping");
	case OpenAPIUpdateMaskFieldType::Values::ShippingHeight:
		return TEXT("shipping_height");
	case OpenAPIUpdateMaskFieldType::Values::ShippingWeight:
		return TEXT("shipping_weight");
	case OpenAPIUpdateMaskFieldType::Values::ShippingWidth:
		return TEXT("shipping_width");
	case OpenAPIUpdateMaskFieldType::Values::Size:
		return TEXT("size");
	case OpenAPIUpdateMaskFieldType::Values::SizeSystem:
		return TEXT("size_system");
	case OpenAPIUpdateMaskFieldType::Values::SizeType:
		return TEXT("size_type");
	case OpenAPIUpdateMaskFieldType::Values::Tax:
		return TEXT("tax");
	case OpenAPIUpdateMaskFieldType::Values::Title:
		return TEXT("title");
	case OpenAPIUpdateMaskFieldType::Values::VariantNames:
		return TEXT("variant_names");
	case OpenAPIUpdateMaskFieldType::Values::VariantValues:
		return TEXT("variant_values");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIUpdateMaskFieldType::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIUpdateMaskFieldType::EnumToString(const OpenAPIUpdateMaskFieldType::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIUpdateMaskFieldType::Values& Value)
{
	static TMap<FString, OpenAPIUpdateMaskFieldType::Values> StringToEnum = { 
		{ TEXT("ad_link"), OpenAPIUpdateMaskFieldType::Values::AdLink },
		{ TEXT("adult"), OpenAPIUpdateMaskFieldType::Values::Adult },
		{ TEXT("age_group"), OpenAPIUpdateMaskFieldType::Values::AgeGroup },
		{ TEXT("availability"), OpenAPIUpdateMaskFieldType::Values::Availability },
		{ TEXT("average_review_rating"), OpenAPIUpdateMaskFieldType::Values::AverageReviewRating },
		{ TEXT("brand"), OpenAPIUpdateMaskFieldType::Values::Brand },
		{ TEXT("checkout_enabled"), OpenAPIUpdateMaskFieldType::Values::CheckoutEnabled },
		{ TEXT("color"), OpenAPIUpdateMaskFieldType::Values::Color },
		{ TEXT("condition"), OpenAPIUpdateMaskFieldType::Values::Condition },
		{ TEXT("custom_label_0"), OpenAPIUpdateMaskFieldType::Values::CustomLabel0 },
		{ TEXT("custom_label_1"), OpenAPIUpdateMaskFieldType::Values::CustomLabel1 },
		{ TEXT("custom_label_2"), OpenAPIUpdateMaskFieldType::Values::CustomLabel2 },
		{ TEXT("custom_label_3"), OpenAPIUpdateMaskFieldType::Values::CustomLabel3 },
		{ TEXT("custom_label_4"), OpenAPIUpdateMaskFieldType::Values::CustomLabel4 },
		{ TEXT("description"), OpenAPIUpdateMaskFieldType::Values::Description },
		{ TEXT("free_shipping_label"), OpenAPIUpdateMaskFieldType::Values::FreeShippingLabel },
		{ TEXT("free_shipping_limit"), OpenAPIUpdateMaskFieldType::Values::FreeShippingLimit },
		{ TEXT("gender"), OpenAPIUpdateMaskFieldType::Values::Gender },
		{ TEXT("google_product_category"), OpenAPIUpdateMaskFieldType::Values::GoogleProductCategory },
		{ TEXT("gtin"), OpenAPIUpdateMaskFieldType::Values::Gtin },
		{ TEXT("item_group_id"), OpenAPIUpdateMaskFieldType::Values::ItemGroupId },
		{ TEXT("last_updated_time"), OpenAPIUpdateMaskFieldType::Values::LastUpdatedTime },
		{ TEXT("link"), OpenAPIUpdateMaskFieldType::Values::Link },
		{ TEXT("material"), OpenAPIUpdateMaskFieldType::Values::Material },
		{ TEXT("min_ad_price"), OpenAPIUpdateMaskFieldType::Values::MinAdPrice },
		{ TEXT("mpn"), OpenAPIUpdateMaskFieldType::Values::Mpn },
		{ TEXT("number_of_ratings"), OpenAPIUpdateMaskFieldType::Values::NumberOfRatings },
		{ TEXT("number_of_reviews"), OpenAPIUpdateMaskFieldType::Values::NumberOfReviews },
		{ TEXT("pattern"), OpenAPIUpdateMaskFieldType::Values::Pattern },
		{ TEXT("price"), OpenAPIUpdateMaskFieldType::Values::Price },
		{ TEXT("product_type"), OpenAPIUpdateMaskFieldType::Values::ProductType },
		{ TEXT("sale_price"), OpenAPIUpdateMaskFieldType::Values::SalePrice },
		{ TEXT("shipping"), OpenAPIUpdateMaskFieldType::Values::Shipping },
		{ TEXT("shipping_height"), OpenAPIUpdateMaskFieldType::Values::ShippingHeight },
		{ TEXT("shipping_weight"), OpenAPIUpdateMaskFieldType::Values::ShippingWeight },
		{ TEXT("shipping_width"), OpenAPIUpdateMaskFieldType::Values::ShippingWidth },
		{ TEXT("size"), OpenAPIUpdateMaskFieldType::Values::Size },
		{ TEXT("size_system"), OpenAPIUpdateMaskFieldType::Values::SizeSystem },
		{ TEXT("size_type"), OpenAPIUpdateMaskFieldType::Values::SizeType },
		{ TEXT("tax"), OpenAPIUpdateMaskFieldType::Values::Tax },
		{ TEXT("title"), OpenAPIUpdateMaskFieldType::Values::Title },
		{ TEXT("variant_names"), OpenAPIUpdateMaskFieldType::Values::VariantNames },
		{ TEXT("variant_values"), OpenAPIUpdateMaskFieldType::Values::VariantValues }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIUpdateMaskFieldType::EnumFromString(const FString& EnumAsString, OpenAPIUpdateMaskFieldType::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIUpdateMaskFieldType::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIUpdateMaskFieldType::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPIUpdateMaskFieldType::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPIUpdateMaskFieldType::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
