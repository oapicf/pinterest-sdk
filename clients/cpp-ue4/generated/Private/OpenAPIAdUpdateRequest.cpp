/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIAdUpdateRequest.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum& Value)
{
	switch (Value)
	{
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::GetOffer:
		return TEXT("GET_OFFER");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::LearnMore:
		return TEXT("LEARN_MORE");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::OrderNow:
		return TEXT("ORDER_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ShopNow:
		return TEXT("SHOP_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::SignUp:
		return TEXT("SIGN_UP");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::Subscribe:
		return TEXT("SUBSCRIBE");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::BuyNow:
		return TEXT("BUY_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ContactUs:
		return TEXT("CONTACT_US");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::GetQuote:
		return TEXT("GET_QUOTE");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::VisitSite:
		return TEXT("VISIT_SITE");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ApplyNow:
		return TEXT("APPLY_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::BookNow:
		return TEXT("BOOK_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::RequestDemo:
		return TEXT("REQUEST_DEMO");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::RegisterNow:
		return TEXT("REGISTER_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::FindADealer:
		return TEXT("FIND_A_DEALER");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::AddToCart:
		return TEXT("ADD_TO_CART");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::WatchNow:
		return TEXT("WATCH_NOW");
	case OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ReadMore:
		return TEXT("READ_MORE");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIAdUpdateRequest::EnumToString(const OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum& Value)
{
	static TMap<FString, OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum> StringToEnum = { 
		{ TEXT("GET_OFFER"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::GetOffer },
		{ TEXT("LEARN_MORE"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::LearnMore },
		{ TEXT("ORDER_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::OrderNow },
		{ TEXT("SHOP_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ShopNow },
		{ TEXT("SIGN_UP"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::SignUp },
		{ TEXT("SUBSCRIBE"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::Subscribe },
		{ TEXT("BUY_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::BuyNow },
		{ TEXT("CONTACT_US"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ContactUs },
		{ TEXT("GET_QUOTE"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::GetQuote },
		{ TEXT("VISIT_SITE"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::VisitSite },
		{ TEXT("APPLY_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ApplyNow },
		{ TEXT("BOOK_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::BookNow },
		{ TEXT("REQUEST_DEMO"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::RequestDemo },
		{ TEXT("REGISTER_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::RegisterNow },
		{ TEXT("FIND_A_DEALER"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::FindADealer },
		{ TEXT("ADD_TO_CART"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::AddToCart },
		{ TEXT("WATCH_NOW"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::WatchNow },
		{ TEXT("READ_MORE"), OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum::ReadMore }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIAdUpdateRequest::EnumFromString(const FString& EnumAsString, OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIAdUpdateRequest::CustomizableCtaTypeEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPIAdUpdateRequest::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (AdGroupId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ad_group_id")); WriteJsonValue(Writer, AdGroupId.GetValue());
	}
	if (AndroidDeepLink.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("android_deep_link")); WriteJsonValue(Writer, AndroidDeepLink.GetValue());
	}
	if (CarouselAndroidDeepLinks.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("carousel_android_deep_links")); WriteJsonValue(Writer, CarouselAndroidDeepLinks.GetValue());
	}
	if (CarouselDestinationUrls.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("carousel_destination_urls")); WriteJsonValue(Writer, CarouselDestinationUrls.GetValue());
	}
	if (CarouselIosDeepLinks.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("carousel_ios_deep_links")); WriteJsonValue(Writer, CarouselIosDeepLinks.GetValue());
	}
	if (ClickTrackingUrl.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("click_tracking_url")); WriteJsonValue(Writer, ClickTrackingUrl.GetValue());
	}
	if (CreativeType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("creative_type")); WriteJsonValue(Writer, CreativeType.GetValue());
	}
	if (DestinationUrl.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("destination_url")); WriteJsonValue(Writer, DestinationUrl.GetValue());
	}
	if (IosDeepLink.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ios_deep_link")); WriteJsonValue(Writer, IosDeepLink.GetValue());
	}
	if (IsPinDeleted.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("is_pin_deleted")); WriteJsonValue(Writer, IsPinDeleted.GetValue());
	}
	if (IsRemovable.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("is_removable")); WriteJsonValue(Writer, IsRemovable.GetValue());
	}
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());
	}
	if (Status.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("status")); WriteJsonValue(Writer, Status.GetValue());
	}
	if (TrackingUrls.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("tracking_urls")); WriteJsonValue(Writer, TrackingUrls.GetValue());
	}
	if (ViewTrackingUrl.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("view_tracking_url")); WriteJsonValue(Writer, ViewTrackingUrl.GetValue());
	}
	if (LeadFormId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("lead_form_id")); WriteJsonValue(Writer, LeadFormId.GetValue());
	}
	if (GridClickType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("grid_click_type")); WriteJsonValue(Writer, GridClickType.GetValue());
	}
	if (CustomizableCtaType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("customizable_cta_type")); WriteJsonValue(Writer, CustomizableCtaType.GetValue());
	}
	if (QuizPinData.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("quiz_pin_data")); WriteJsonValue(Writer, QuizPinData.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id);
	if (PinId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("pin_id")); WriteJsonValue(Writer, PinId.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIAdUpdateRequest::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ad_group_id"), AdGroupId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("android_deep_link"), AndroidDeepLink);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("carousel_android_deep_links"), CarouselAndroidDeepLinks);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("carousel_destination_urls"), CarouselDestinationUrls);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("carousel_ios_deep_links"), CarouselIosDeepLinks);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("click_tracking_url"), ClickTrackingUrl);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("creative_type"), CreativeType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("destination_url"), DestinationUrl);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ios_deep_link"), IosDeepLink);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("is_pin_deleted"), IsPinDeleted);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("is_removable"), IsRemovable);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("status"), Status);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("tracking_urls"), TrackingUrls);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("view_tracking_url"), ViewTrackingUrl);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("lead_form_id"), LeadFormId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("grid_click_type"), GridClickType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("customizable_cta_type"), CustomizableCtaType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("quiz_pin_data"), QuizPinData);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("pin_id"), PinId);

	return ParseSuccess;
}

}
