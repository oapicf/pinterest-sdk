/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICatalogsFeedIngestionWarnings.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPICatalogsFeedIngestionWarnings::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (AdditionalImageLevelInternalError.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR")); WriteJsonValue(Writer, AdditionalImageLevelInternalError.GetValue());
	}
	if (AdditionalImageFileNotAccessible.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE")); WriteJsonValue(Writer, AdditionalImageFileNotAccessible.GetValue());
	}
	if (AdditionalImageMalformedUrl.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ADDITIONAL_IMAGE_MALFORMED_URL")); WriteJsonValue(Writer, AdditionalImageMalformedUrl.GetValue());
	}
	if (AdditionalImageFileNotFound.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ADDITIONAL_IMAGE_FILE_NOT_FOUND")); WriteJsonValue(Writer, AdditionalImageFileNotFound.GetValue());
	}
	if (AdditionalImageInvalidFile.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ADDITIONAL_IMAGE_INVALID_FILE")); WriteJsonValue(Writer, AdditionalImageInvalidFile.GetValue());
	}
	if (HotelPriceHeaderIsPresent.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("HOTEL_PRICE_HEADER_IS_PRESENT")); WriteJsonValue(Writer, HotelPriceHeaderIsPresent.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPICatalogsFeedIngestionWarnings::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR"), AdditionalImageLevelInternalError);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE"), AdditionalImageFileNotAccessible);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ADDITIONAL_IMAGE_MALFORMED_URL"), AdditionalImageMalformedUrl);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ADDITIONAL_IMAGE_FILE_NOT_FOUND"), AdditionalImageFileNotFound);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ADDITIONAL_IMAGE_INVALID_FILE"), AdditionalImageInvalidFile);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("HOTEL_PRICE_HEADER_IS_PRESENT"), HotelPriceHeaderIsPresent);

	return ParseSuccess;
}

}
