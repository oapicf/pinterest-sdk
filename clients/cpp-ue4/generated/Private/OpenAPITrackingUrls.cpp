/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPITrackingUrls.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPITrackingUrls::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Impression.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("impression")); WriteJsonValue(Writer, Impression.GetValue());
	}
	if (Click.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("click")); WriteJsonValue(Writer, Click.GetValue());
	}
	if (Engagement.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("engagement")); WriteJsonValue(Writer, Engagement.GetValue());
	}
	if (BuyableButton.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("buyable_button")); WriteJsonValue(Writer, BuyableButton.GetValue());
	}
	if (AudienceVerification.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("audience_verification")); WriteJsonValue(Writer, AudienceVerification.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPITrackingUrls::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("impression"), Impression);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("click"), Click);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("engagement"), Engagement);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("buyable_button"), BuyableButton);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("audience_verification"), AudienceVerification);

	return ParseSuccess;
}

}
