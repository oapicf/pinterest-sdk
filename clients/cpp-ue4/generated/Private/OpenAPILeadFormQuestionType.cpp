/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPILeadFormQuestionType.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPILeadFormQuestionType::Values& Value)
{
	switch (Value)
	{
	case OpenAPILeadFormQuestionType::Values::Custom:
		return TEXT("CUSTOM");
	case OpenAPILeadFormQuestionType::Values::FullName:
		return TEXT("FULL_NAME");
	case OpenAPILeadFormQuestionType::Values::FirstName:
		return TEXT("FIRST_NAME");
	case OpenAPILeadFormQuestionType::Values::LastName:
		return TEXT("LAST_NAME");
	case OpenAPILeadFormQuestionType::Values::Email:
		return TEXT("EMAIL");
	case OpenAPILeadFormQuestionType::Values::PhoneNumber:
		return TEXT("PHONE_NUMBER");
	case OpenAPILeadFormQuestionType::Values::ZipCode:
		return TEXT("ZIP_CODE");
	case OpenAPILeadFormQuestionType::Values::Gender:
		return TEXT("GENDER");
	case OpenAPILeadFormQuestionType::Values::City:
		return TEXT("CITY");
	case OpenAPILeadFormQuestionType::Values::Country:
		return TEXT("COUNTRY");
	case OpenAPILeadFormQuestionType::Values::StateProvince:
		return TEXT("STATE_PROVINCE");
	case OpenAPILeadFormQuestionType::Values::Address:
		return TEXT("ADDRESS");
	case OpenAPILeadFormQuestionType::Values::DateOfBirth:
		return TEXT("DATE_OF_BIRTH");
	case OpenAPILeadFormQuestionType::Values::Age:
		return TEXT("AGE");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPILeadFormQuestionType::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPILeadFormQuestionType::EnumToString(const OpenAPILeadFormQuestionType::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPILeadFormQuestionType::Values& Value)
{
	static TMap<FString, OpenAPILeadFormQuestionType::Values> StringToEnum = { 
		{ TEXT("CUSTOM"), OpenAPILeadFormQuestionType::Values::Custom },
		{ TEXT("FULL_NAME"), OpenAPILeadFormQuestionType::Values::FullName },
		{ TEXT("FIRST_NAME"), OpenAPILeadFormQuestionType::Values::FirstName },
		{ TEXT("LAST_NAME"), OpenAPILeadFormQuestionType::Values::LastName },
		{ TEXT("EMAIL"), OpenAPILeadFormQuestionType::Values::Email },
		{ TEXT("PHONE_NUMBER"), OpenAPILeadFormQuestionType::Values::PhoneNumber },
		{ TEXT("ZIP_CODE"), OpenAPILeadFormQuestionType::Values::ZipCode },
		{ TEXT("GENDER"), OpenAPILeadFormQuestionType::Values::Gender },
		{ TEXT("CITY"), OpenAPILeadFormQuestionType::Values::City },
		{ TEXT("COUNTRY"), OpenAPILeadFormQuestionType::Values::Country },
		{ TEXT("STATE_PROVINCE"), OpenAPILeadFormQuestionType::Values::StateProvince },
		{ TEXT("ADDRESS"), OpenAPILeadFormQuestionType::Values::Address },
		{ TEXT("DATE_OF_BIRTH"), OpenAPILeadFormQuestionType::Values::DateOfBirth },
		{ TEXT("AGE"), OpenAPILeadFormQuestionType::Values::Age }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPILeadFormQuestionType::EnumFromString(const FString& EnumAsString, OpenAPILeadFormQuestionType::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPILeadFormQuestionType::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPILeadFormQuestionType::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPILeadFormQuestionType::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPILeadFormQuestionType::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
