/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICatalogsFeedProcessingSchedule.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum& Value)
{
	switch (Value)
	{
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaAbidjan:
		return TEXT("Africa/Abidjan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaAccra:
		return TEXT("Africa/Accra");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaAlgiers:
		return TEXT("Africa/Algiers");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaBissau:
		return TEXT("Africa/Bissau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaCairo:
		return TEXT("Africa/Cairo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaCasablanca:
		return TEXT("Africa/Casablanca");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaCeuta:
		return TEXT("Africa/Ceuta");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaElAaiun:
		return TEXT("Africa/El_Aaiun");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaJohannesburg:
		return TEXT("Africa/Johannesburg");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaJuba:
		return TEXT("Africa/Juba");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaKhartoum:
		return TEXT("Africa/Khartoum");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaLagos:
		return TEXT("Africa/Lagos");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaMaputo:
		return TEXT("Africa/Maputo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaMonrovia:
		return TEXT("Africa/Monrovia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaNairobi:
		return TEXT("Africa/Nairobi");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaNdjamena:
		return TEXT("Africa/Ndjamena");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaSaoTome:
		return TEXT("Africa/Sao_Tome");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaTripoli:
		return TEXT("Africa/Tripoli");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaTunis:
		return TEXT("Africa/Tunis");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaWindhoek:
		return TEXT("Africa/Windhoek");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAdak:
		return TEXT("America/Adak");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAnchorage:
		return TEXT("America/Anchorage");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAraguaina:
		return TEXT("America/Araguaina");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaBuenosAires:
		return TEXT("America/Argentina/Buenos_Aires");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaCatamarca:
		return TEXT("America/Argentina/Catamarca");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaCordoba:
		return TEXT("America/Argentina/Cordoba");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaJujuy:
		return TEXT("America/Argentina/Jujuy");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaLaRioja:
		return TEXT("America/Argentina/La_Rioja");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaMendoza:
		return TEXT("America/Argentina/Mendoza");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaRioGallegos:
		return TEXT("America/Argentina/Rio_Gallegos");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaSalta:
		return TEXT("America/Argentina/Salta");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaSanJuan:
		return TEXT("America/Argentina/San_Juan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaSanLuis:
		return TEXT("America/Argentina/San_Luis");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaTucuman:
		return TEXT("America/Argentina/Tucuman");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaUshuaia:
		return TEXT("America/Argentina/Ushuaia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAsuncion:
		return TEXT("America/Asuncion");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAtikokan:
		return TEXT("America/Atikokan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBahia:
		return TEXT("America/Bahia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBahiaBanderas:
		return TEXT("America/Bahia_Banderas");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBarbados:
		return TEXT("America/Barbados");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBelem:
		return TEXT("America/Belem");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBelize:
		return TEXT("America/Belize");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBlancSablon:
		return TEXT("America/Blanc-Sablon");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBoaVista:
		return TEXT("America/Boa_Vista");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBogota:
		return TEXT("America/Bogota");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBoise:
		return TEXT("America/Boise");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCambridgeBay:
		return TEXT("America/Cambridge_Bay");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCampoGrande:
		return TEXT("America/Campo_Grande");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCancun:
		return TEXT("America/Cancun");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCaracas:
		return TEXT("America/Caracas");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCayenne:
		return TEXT("America/Cayenne");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaChicago:
		return TEXT("America/Chicago");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaChihuahua:
		return TEXT("America/Chihuahua");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCostaRica:
		return TEXT("America/Costa_Rica");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCreston:
		return TEXT("America/Creston");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCuiaba:
		return TEXT("America/Cuiaba");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCuracao:
		return TEXT("America/Curacao");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDanmarkshavn:
		return TEXT("America/Danmarkshavn");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDawson:
		return TEXT("America/Dawson");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDawsonCreek:
		return TEXT("America/Dawson_Creek");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDenver:
		return TEXT("America/Denver");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDetroit:
		return TEXT("America/Detroit");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaEdmonton:
		return TEXT("America/Edmonton");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaEirunepe:
		return TEXT("America/Eirunepe");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaElSalvador:
		return TEXT("America/El_Salvador");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaFortNelson:
		return TEXT("America/Fort_Nelson");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaFortaleza:
		return TEXT("America/Fortaleza");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGlaceBay:
		return TEXT("America/Glace_Bay");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGooseBay:
		return TEXT("America/Goose_Bay");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGrandTurk:
		return TEXT("America/Grand_Turk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGuatemala:
		return TEXT("America/Guatemala");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGuayaquil:
		return TEXT("America/Guayaquil");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGuyana:
		return TEXT("America/Guyana");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaHalifax:
		return TEXT("America/Halifax");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaHavana:
		return TEXT("America/Havana");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaHermosillo:
		return TEXT("America/Hermosillo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaIndianapolis:
		return TEXT("America/Indiana/Indianapolis");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaKnox:
		return TEXT("America/Indiana/Knox");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaMarengo:
		return TEXT("America/Indiana/Marengo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaPetersburg:
		return TEXT("America/Indiana/Petersburg");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaTellCity:
		return TEXT("America/Indiana/Tell_City");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaVevay:
		return TEXT("America/Indiana/Vevay");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaVincennes:
		return TEXT("America/Indiana/Vincennes");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaWinamac:
		return TEXT("America/Indiana/Winamac");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaInuvik:
		return TEXT("America/Inuvik");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIqaluit:
		return TEXT("America/Iqaluit");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaJamaica:
		return TEXT("America/Jamaica");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaJuneau:
		return TEXT("America/Juneau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaKentuckyLouisville:
		return TEXT("America/Kentucky/Louisville");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaKentuckyMonticello:
		return TEXT("America/Kentucky/Monticello");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaLaPaz:
		return TEXT("America/La_Paz");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaLima:
		return TEXT("America/Lima");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaLosAngeles:
		return TEXT("America/Los_Angeles");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMaceio:
		return TEXT("America/Maceio");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaManagua:
		return TEXT("America/Managua");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaManaus:
		return TEXT("America/Manaus");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMartinique:
		return TEXT("America/Martinique");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMatamoros:
		return TEXT("America/Matamoros");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMazatlan:
		return TEXT("America/Mazatlan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMenominee:
		return TEXT("America/Menominee");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMerida:
		return TEXT("America/Merida");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMetlakatla:
		return TEXT("America/Metlakatla");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMexicoCity:
		return TEXT("America/Mexico_City");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMiquelon:
		return TEXT("America/Miquelon");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMoncton:
		return TEXT("America/Moncton");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMonterrey:
		return TEXT("America/Monterrey");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMontevideo:
		return TEXT("America/Montevideo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNassau:
		return TEXT("America/Nassau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNewYork:
		return TEXT("America/New_York");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNipigon:
		return TEXT("America/Nipigon");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNome:
		return TEXT("America/Nome");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNoronha:
		return TEXT("America/Noronha");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNorthDakotaBeulah:
		return TEXT("America/North_Dakota/Beulah");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNorthDakotaCenter:
		return TEXT("America/North_Dakota/Center");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNorthDakotaNewSalem:
		return TEXT("America/North_Dakota/New_Salem");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNuuk:
		return TEXT("America/Nuuk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaOjinaga:
		return TEXT("America/Ojinaga");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPanama:
		return TEXT("America/Panama");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPangnirtung:
		return TEXT("America/Pangnirtung");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaParamaribo:
		return TEXT("America/Paramaribo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPhoenix:
		return TEXT("America/Phoenix");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPortAuPrince:
		return TEXT("America/Port-au-Prince");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPortOfSpain:
		return TEXT("America/Port_of_Spain");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPortoVelho:
		return TEXT("America/Porto_Velho");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPuertoRico:
		return TEXT("America/Puerto_Rico");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPuntaArenas:
		return TEXT("America/Punta_Arenas");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRainyRiver:
		return TEXT("America/Rainy_River");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRankinInlet:
		return TEXT("America/Rankin_Inlet");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRecife:
		return TEXT("America/Recife");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRegina:
		return TEXT("America/Regina");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaResolute:
		return TEXT("America/Resolute");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRioBranco:
		return TEXT("America/Rio_Branco");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSantarem:
		return TEXT("America/Santarem");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSantiago:
		return TEXT("America/Santiago");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSantoDomingo:
		return TEXT("America/Santo_Domingo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSaoPaulo:
		return TEXT("America/Sao_Paulo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaScoresbysund:
		return TEXT("America/Scoresbysund");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSitka:
		return TEXT("America/Sitka");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaStJohns:
		return TEXT("America/St_Johns");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSwiftCurrent:
		return TEXT("America/Swift_Current");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaTegucigalpa:
		return TEXT("America/Tegucigalpa");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaThule:
		return TEXT("America/Thule");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaThunderBay:
		return TEXT("America/Thunder_Bay");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaTijuana:
		return TEXT("America/Tijuana");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaToronto:
		return TEXT("America/Toronto");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaVancouver:
		return TEXT("America/Vancouver");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaWhitehorse:
		return TEXT("America/Whitehorse");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaWinnipeg:
		return TEXT("America/Winnipeg");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaYakutat:
		return TEXT("America/Yakutat");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaYellowknife:
		return TEXT("America/Yellowknife");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaCasey:
		return TEXT("Antarctica/Casey");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaDavis:
		return TEXT("Antarctica/Davis");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaDumontDUrville:
		return TEXT("Antarctica/DumontDUrville");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaMacquarie:
		return TEXT("Antarctica/Macquarie");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaMawson:
		return TEXT("Antarctica/Mawson");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaPalmer:
		return TEXT("Antarctica/Palmer");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaRothera:
		return TEXT("Antarctica/Rothera");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaSyowa:
		return TEXT("Antarctica/Syowa");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaTroll:
		return TEXT("Antarctica/Troll");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaVostok:
		return TEXT("Antarctica/Vostok");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAlmaty:
		return TEXT("Asia/Almaty");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAmman:
		return TEXT("Asia/Amman");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAnadyr:
		return TEXT("Asia/Anadyr");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAqtau:
		return TEXT("Asia/Aqtau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAqtobe:
		return TEXT("Asia/Aqtobe");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAshgabat:
		return TEXT("Asia/Ashgabat");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAtyrau:
		return TEXT("Asia/Atyrau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBaghdad:
		return TEXT("Asia/Baghdad");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBaku:
		return TEXT("Asia/Baku");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBangkok:
		return TEXT("Asia/Bangkok");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBarnaul:
		return TEXT("Asia/Barnaul");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBeirut:
		return TEXT("Asia/Beirut");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBishkek:
		return TEXT("Asia/Bishkek");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBrunei:
		return TEXT("Asia/Brunei");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaChita:
		return TEXT("Asia/Chita");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaChoibalsan:
		return TEXT("Asia/Choibalsan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaColombo:
		return TEXT("Asia/Colombo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDamascus:
		return TEXT("Asia/Damascus");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDhaka:
		return TEXT("Asia/Dhaka");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDili:
		return TEXT("Asia/Dili");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDubai:
		return TEXT("Asia/Dubai");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDushanbe:
		return TEXT("Asia/Dushanbe");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaFamagusta:
		return TEXT("Asia/Famagusta");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaGaza:
		return TEXT("Asia/Gaza");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHebron:
		return TEXT("Asia/Hebron");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHoChiMinh:
		return TEXT("Asia/Ho_Chi_Minh");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHongKong:
		return TEXT("Asia/Hong_Kong");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHovd:
		return TEXT("Asia/Hovd");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaIrkutsk:
		return TEXT("Asia/Irkutsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaJakarta:
		return TEXT("Asia/Jakarta");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaJayapura:
		return TEXT("Asia/Jayapura");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaJerusalem:
		return TEXT("Asia/Jerusalem");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKabul:
		return TEXT("Asia/Kabul");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKamchatka:
		return TEXT("Asia/Kamchatka");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKarachi:
		return TEXT("Asia/Karachi");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKathmandu:
		return TEXT("Asia/Kathmandu");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKhandyga:
		return TEXT("Asia/Khandyga");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKolkata:
		return TEXT("Asia/Kolkata");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKrasnoyarsk:
		return TEXT("Asia/Krasnoyarsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKualaLumpur:
		return TEXT("Asia/Kuala_Lumpur");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKuching:
		return TEXT("Asia/Kuching");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaMacau:
		return TEXT("Asia/Macau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaMagadan:
		return TEXT("Asia/Magadan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaMakassar:
		return TEXT("Asia/Makassar");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaManila:
		return TEXT("Asia/Manila");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaNicosia:
		return TEXT("Asia/Nicosia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaNovokuznetsk:
		return TEXT("Asia/Novokuznetsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaNovosibirsk:
		return TEXT("Asia/Novosibirsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaOmsk:
		return TEXT("Asia/Omsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaOral:
		return TEXT("Asia/Oral");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaPontianak:
		return TEXT("Asia/Pontianak");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaPyongyang:
		return TEXT("Asia/Pyongyang");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaQatar:
		return TEXT("Asia/Qatar");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaQostanay:
		return TEXT("Asia/Qostanay");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaQyzylorda:
		return TEXT("Asia/Qyzylorda");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaRiyadh:
		return TEXT("Asia/Riyadh");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSakhalin:
		return TEXT("Asia/Sakhalin");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSamarkand:
		return TEXT("Asia/Samarkand");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSeoul:
		return TEXT("Asia/Seoul");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaShanghai:
		return TEXT("Asia/Shanghai");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSingapore:
		return TEXT("Asia/Singapore");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSrednekolymsk:
		return TEXT("Asia/Srednekolymsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTaipei:
		return TEXT("Asia/Taipei");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTashkent:
		return TEXT("Asia/Tashkent");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTbilisi:
		return TEXT("Asia/Tbilisi");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTehran:
		return TEXT("Asia/Tehran");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaThimphu:
		return TEXT("Asia/Thimphu");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTokyo:
		return TEXT("Asia/Tokyo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTomsk:
		return TEXT("Asia/Tomsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaUlaanbaatar:
		return TEXT("Asia/Ulaanbaatar");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaUrumqi:
		return TEXT("Asia/Urumqi");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaUstNera:
		return TEXT("Asia/Ust-Nera");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaVladivostok:
		return TEXT("Asia/Vladivostok");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYakutsk:
		return TEXT("Asia/Yakutsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYangon:
		return TEXT("Asia/Yangon");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYekaterinburg:
		return TEXT("Asia/Yekaterinburg");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYerevan:
		return TEXT("Asia/Yerevan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticAzores:
		return TEXT("Atlantic/Azores");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticBermuda:
		return TEXT("Atlantic/Bermuda");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticCanary:
		return TEXT("Atlantic/Canary");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticCapeVerde:
		return TEXT("Atlantic/Cape_Verde");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticFaroe:
		return TEXT("Atlantic/Faroe");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticMadeira:
		return TEXT("Atlantic/Madeira");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticReykjavik:
		return TEXT("Atlantic/Reykjavik");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticSouthGeorgia:
		return TEXT("Atlantic/South_Georgia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticStanley:
		return TEXT("Atlantic/Stanley");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaAdelaide:
		return TEXT("Australia/Adelaide");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaBrisbane:
		return TEXT("Australia/Brisbane");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaBrokenHill:
		return TEXT("Australia/Broken_Hill");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaCurrie:
		return TEXT("Australia/Currie");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaDarwin:
		return TEXT("Australia/Darwin");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaEucla:
		return TEXT("Australia/Eucla");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaHobart:
		return TEXT("Australia/Hobart");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaLindeman:
		return TEXT("Australia/Lindeman");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaLordHowe:
		return TEXT("Australia/Lord_Howe");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaMelbourne:
		return TEXT("Australia/Melbourne");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaPerth:
		return TEXT("Australia/Perth");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaSydney:
		return TEXT("Australia/Sydney");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Cet:
		return TEXT("CET");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::CST6CDT:
		return TEXT("CST6CDT");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Eet:
		return TEXT("EET");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Est:
		return TEXT("EST");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EST5EDT:
		return TEXT("EST5EDT");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT:
		return TEXT("Etc/GMT");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT1:
		return TEXT("Etc/GMT+1");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT10:
		return TEXT("Etc/GMT+10");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT11:
		return TEXT("Etc/GMT+11");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT122:
		return TEXT("Etc/GMT+12");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT2:
		return TEXT("Etc/GMT+2");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT3:
		return TEXT("Etc/GMT+3");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT4:
		return TEXT("Etc/GMT+4");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT5:
		return TEXT("Etc/GMT+5");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT6:
		return TEXT("Etc/GMT+6");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT7:
		return TEXT("Etc/GMT+7");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT8:
		return TEXT("Etc/GMT+8");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT9:
		return TEXT("Etc/GMT+9");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT12:
		return TEXT("Etc/GMT-1");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT102:
		return TEXT("Etc/GMT-10");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT112:
		return TEXT("Etc/GMT-11");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT122:
		return TEXT("Etc/GMT-12");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT13:
		return TEXT("Etc/GMT-13");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT14:
		return TEXT("Etc/GMT-14");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT22:
		return TEXT("Etc/GMT-2");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT32:
		return TEXT("Etc/GMT-3");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT42:
		return TEXT("Etc/GMT-4");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT52:
		return TEXT("Etc/GMT-5");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT62:
		return TEXT("Etc/GMT-6");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT72:
		return TEXT("Etc/GMT-7");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT82:
		return TEXT("Etc/GMT-8");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT92:
		return TEXT("Etc/GMT-9");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcUTC:
		return TEXT("Etc/UTC");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAmsterdam:
		return TEXT("Europe/Amsterdam");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAndorra:
		return TEXT("Europe/Andorra");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAstrakhan:
		return TEXT("Europe/Astrakhan");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAthens:
		return TEXT("Europe/Athens");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBelgrade:
		return TEXT("Europe/Belgrade");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBerlin:
		return TEXT("Europe/Berlin");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBrussels:
		return TEXT("Europe/Brussels");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBucharest:
		return TEXT("Europe/Bucharest");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBudapest:
		return TEXT("Europe/Budapest");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeChisinau:
		return TEXT("Europe/Chisinau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeCopenhagen:
		return TEXT("Europe/Copenhagen");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeDublin:
		return TEXT("Europe/Dublin");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeGibraltar:
		return TEXT("Europe/Gibraltar");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeHelsinki:
		return TEXT("Europe/Helsinki");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeIstanbul:
		return TEXT("Europe/Istanbul");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeKaliningrad:
		return TEXT("Europe/Kaliningrad");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeKiev:
		return TEXT("Europe/Kiev");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeKirov:
		return TEXT("Europe/Kirov");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeLisbon:
		return TEXT("Europe/Lisbon");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeLondon:
		return TEXT("Europe/London");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeLuxembourg:
		return TEXT("Europe/Luxembourg");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMadrid:
		return TEXT("Europe/Madrid");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMalta:
		return TEXT("Europe/Malta");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMinsk:
		return TEXT("Europe/Minsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMonaco:
		return TEXT("Europe/Monaco");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMoscow:
		return TEXT("Europe/Moscow");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeOslo:
		return TEXT("Europe/Oslo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeParis:
		return TEXT("Europe/Paris");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropePrague:
		return TEXT("Europe/Prague");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeRiga:
		return TEXT("Europe/Riga");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeRome:
		return TEXT("Europe/Rome");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSamara:
		return TEXT("Europe/Samara");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSaratov:
		return TEXT("Europe/Saratov");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSimferopol:
		return TEXT("Europe/Simferopol");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSofia:
		return TEXT("Europe/Sofia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeStockholm:
		return TEXT("Europe/Stockholm");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeTallinn:
		return TEXT("Europe/Tallinn");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeTirane:
		return TEXT("Europe/Tirane");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeUlyanovsk:
		return TEXT("Europe/Ulyanovsk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeUzhgorod:
		return TEXT("Europe/Uzhgorod");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeVienna:
		return TEXT("Europe/Vienna");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeVilnius:
		return TEXT("Europe/Vilnius");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeVolgograd:
		return TEXT("Europe/Volgograd");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeWarsaw:
		return TEXT("Europe/Warsaw");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeZaporozhye:
		return TEXT("Europe/Zaporozhye");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeZurich:
		return TEXT("Europe/Zurich");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Hst:
		return TEXT("HST");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianChagos:
		return TEXT("Indian/Chagos");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianChristmas:
		return TEXT("Indian/Christmas");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianCocos:
		return TEXT("Indian/Cocos");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianKerguelen:
		return TEXT("Indian/Kerguelen");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianMahe:
		return TEXT("Indian/Mahe");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianMaldives:
		return TEXT("Indian/Maldives");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianMauritius:
		return TEXT("Indian/Mauritius");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianReunion:
		return TEXT("Indian/Reunion");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Met:
		return TEXT("MET");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Mst:
		return TEXT("MST");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::MST7MDT:
		return TEXT("MST7MDT");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PST8PDT:
		return TEXT("PST8PDT");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificApia:
		return TEXT("Pacific/Apia");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificAuckland:
		return TEXT("Pacific/Auckland");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificBougainville:
		return TEXT("Pacific/Bougainville");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificChatham:
		return TEXT("Pacific/Chatham");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificChuuk:
		return TEXT("Pacific/Chuuk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificEaster:
		return TEXT("Pacific/Easter");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificEfate:
		return TEXT("Pacific/Efate");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificEnderbury:
		return TEXT("Pacific/Enderbury");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificFakaofo:
		return TEXT("Pacific/Fakaofo");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificFiji:
		return TEXT("Pacific/Fiji");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificFunafuti:
		return TEXT("Pacific/Funafuti");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGalapagos:
		return TEXT("Pacific/Galapagos");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGambier:
		return TEXT("Pacific/Gambier");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGuadalcanal:
		return TEXT("Pacific/Guadalcanal");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGuam:
		return TEXT("Pacific/Guam");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificHonolulu:
		return TEXT("Pacific/Honolulu");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificKiritimati:
		return TEXT("Pacific/Kiritimati");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificKosrae:
		return TEXT("Pacific/Kosrae");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificKwajalein:
		return TEXT("Pacific/Kwajalein");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificMajuro:
		return TEXT("Pacific/Majuro");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificMarquesas:
		return TEXT("Pacific/Marquesas");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNauru:
		return TEXT("Pacific/Nauru");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNiue:
		return TEXT("Pacific/Niue");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNorfolk:
		return TEXT("Pacific/Norfolk");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNoumea:
		return TEXT("Pacific/Noumea");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPagoPago:
		return TEXT("Pacific/Pago_Pago");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPalau:
		return TEXT("Pacific/Palau");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPitcairn:
		return TEXT("Pacific/Pitcairn");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPohnpei:
		return TEXT("Pacific/Pohnpei");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPortMoresby:
		return TEXT("Pacific/Port_Moresby");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificRarotonga:
		return TEXT("Pacific/Rarotonga");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificTahiti:
		return TEXT("Pacific/Tahiti");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificTarawa:
		return TEXT("Pacific/Tarawa");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificTongatapu:
		return TEXT("Pacific/Tongatapu");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificWake:
		return TEXT("Pacific/Wake");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificWallis:
		return TEXT("Pacific/Wallis");
	case OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Wet:
		return TEXT("WET");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPICatalogsFeedProcessingSchedule::EnumToString(const OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum& Value)
{
	static TMap<FString, OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum> StringToEnum = { 
		{ TEXT("Africa/Abidjan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaAbidjan },
		{ TEXT("Africa/Accra"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaAccra },
		{ TEXT("Africa/Algiers"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaAlgiers },
		{ TEXT("Africa/Bissau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaBissau },
		{ TEXT("Africa/Cairo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaCairo },
		{ TEXT("Africa/Casablanca"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaCasablanca },
		{ TEXT("Africa/Ceuta"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaCeuta },
		{ TEXT("Africa/El_Aaiun"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaElAaiun },
		{ TEXT("Africa/Johannesburg"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaJohannesburg },
		{ TEXT("Africa/Juba"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaJuba },
		{ TEXT("Africa/Khartoum"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaKhartoum },
		{ TEXT("Africa/Lagos"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaLagos },
		{ TEXT("Africa/Maputo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaMaputo },
		{ TEXT("Africa/Monrovia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaMonrovia },
		{ TEXT("Africa/Nairobi"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaNairobi },
		{ TEXT("Africa/Ndjamena"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaNdjamena },
		{ TEXT("Africa/Sao_Tome"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaSaoTome },
		{ TEXT("Africa/Tripoli"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaTripoli },
		{ TEXT("Africa/Tunis"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaTunis },
		{ TEXT("Africa/Windhoek"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AfricaWindhoek },
		{ TEXT("America/Adak"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAdak },
		{ TEXT("America/Anchorage"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAnchorage },
		{ TEXT("America/Araguaina"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAraguaina },
		{ TEXT("America/Argentina/Buenos_Aires"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaBuenosAires },
		{ TEXT("America/Argentina/Catamarca"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaCatamarca },
		{ TEXT("America/Argentina/Cordoba"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaCordoba },
		{ TEXT("America/Argentina/Jujuy"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaJujuy },
		{ TEXT("America/Argentina/La_Rioja"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaLaRioja },
		{ TEXT("America/Argentina/Mendoza"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaMendoza },
		{ TEXT("America/Argentina/Rio_Gallegos"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaRioGallegos },
		{ TEXT("America/Argentina/Salta"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaSalta },
		{ TEXT("America/Argentina/San_Juan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaSanJuan },
		{ TEXT("America/Argentina/San_Luis"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaSanLuis },
		{ TEXT("America/Argentina/Tucuman"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaTucuman },
		{ TEXT("America/Argentina/Ushuaia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaArgentinaUshuaia },
		{ TEXT("America/Asuncion"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAsuncion },
		{ TEXT("America/Atikokan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaAtikokan },
		{ TEXT("America/Bahia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBahia },
		{ TEXT("America/Bahia_Banderas"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBahiaBanderas },
		{ TEXT("America/Barbados"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBarbados },
		{ TEXT("America/Belem"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBelem },
		{ TEXT("America/Belize"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBelize },
		{ TEXT("America/Blanc-Sablon"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBlancSablon },
		{ TEXT("America/Boa_Vista"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBoaVista },
		{ TEXT("America/Bogota"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBogota },
		{ TEXT("America/Boise"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaBoise },
		{ TEXT("America/Cambridge_Bay"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCambridgeBay },
		{ TEXT("America/Campo_Grande"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCampoGrande },
		{ TEXT("America/Cancun"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCancun },
		{ TEXT("America/Caracas"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCaracas },
		{ TEXT("America/Cayenne"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCayenne },
		{ TEXT("America/Chicago"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaChicago },
		{ TEXT("America/Chihuahua"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaChihuahua },
		{ TEXT("America/Costa_Rica"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCostaRica },
		{ TEXT("America/Creston"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCreston },
		{ TEXT("America/Cuiaba"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCuiaba },
		{ TEXT("America/Curacao"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaCuracao },
		{ TEXT("America/Danmarkshavn"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDanmarkshavn },
		{ TEXT("America/Dawson"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDawson },
		{ TEXT("America/Dawson_Creek"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDawsonCreek },
		{ TEXT("America/Denver"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDenver },
		{ TEXT("America/Detroit"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaDetroit },
		{ TEXT("America/Edmonton"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaEdmonton },
		{ TEXT("America/Eirunepe"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaEirunepe },
		{ TEXT("America/El_Salvador"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaElSalvador },
		{ TEXT("America/Fort_Nelson"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaFortNelson },
		{ TEXT("America/Fortaleza"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaFortaleza },
		{ TEXT("America/Glace_Bay"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGlaceBay },
		{ TEXT("America/Goose_Bay"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGooseBay },
		{ TEXT("America/Grand_Turk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGrandTurk },
		{ TEXT("America/Guatemala"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGuatemala },
		{ TEXT("America/Guayaquil"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGuayaquil },
		{ TEXT("America/Guyana"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaGuyana },
		{ TEXT("America/Halifax"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaHalifax },
		{ TEXT("America/Havana"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaHavana },
		{ TEXT("America/Hermosillo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaHermosillo },
		{ TEXT("America/Indiana/Indianapolis"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaIndianapolis },
		{ TEXT("America/Indiana/Knox"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaKnox },
		{ TEXT("America/Indiana/Marengo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaMarengo },
		{ TEXT("America/Indiana/Petersburg"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaPetersburg },
		{ TEXT("America/Indiana/Tell_City"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaTellCity },
		{ TEXT("America/Indiana/Vevay"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaVevay },
		{ TEXT("America/Indiana/Vincennes"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaVincennes },
		{ TEXT("America/Indiana/Winamac"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIndianaWinamac },
		{ TEXT("America/Inuvik"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaInuvik },
		{ TEXT("America/Iqaluit"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaIqaluit },
		{ TEXT("America/Jamaica"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaJamaica },
		{ TEXT("America/Juneau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaJuneau },
		{ TEXT("America/Kentucky/Louisville"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaKentuckyLouisville },
		{ TEXT("America/Kentucky/Monticello"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaKentuckyMonticello },
		{ TEXT("America/La_Paz"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaLaPaz },
		{ TEXT("America/Lima"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaLima },
		{ TEXT("America/Los_Angeles"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaLosAngeles },
		{ TEXT("America/Maceio"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMaceio },
		{ TEXT("America/Managua"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaManagua },
		{ TEXT("America/Manaus"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaManaus },
		{ TEXT("America/Martinique"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMartinique },
		{ TEXT("America/Matamoros"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMatamoros },
		{ TEXT("America/Mazatlan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMazatlan },
		{ TEXT("America/Menominee"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMenominee },
		{ TEXT("America/Merida"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMerida },
		{ TEXT("America/Metlakatla"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMetlakatla },
		{ TEXT("America/Mexico_City"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMexicoCity },
		{ TEXT("America/Miquelon"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMiquelon },
		{ TEXT("America/Moncton"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMoncton },
		{ TEXT("America/Monterrey"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMonterrey },
		{ TEXT("America/Montevideo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaMontevideo },
		{ TEXT("America/Nassau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNassau },
		{ TEXT("America/New_York"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNewYork },
		{ TEXT("America/Nipigon"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNipigon },
		{ TEXT("America/Nome"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNome },
		{ TEXT("America/Noronha"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNoronha },
		{ TEXT("America/North_Dakota/Beulah"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNorthDakotaBeulah },
		{ TEXT("America/North_Dakota/Center"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNorthDakotaCenter },
		{ TEXT("America/North_Dakota/New_Salem"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNorthDakotaNewSalem },
		{ TEXT("America/Nuuk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaNuuk },
		{ TEXT("America/Ojinaga"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaOjinaga },
		{ TEXT("America/Panama"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPanama },
		{ TEXT("America/Pangnirtung"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPangnirtung },
		{ TEXT("America/Paramaribo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaParamaribo },
		{ TEXT("America/Phoenix"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPhoenix },
		{ TEXT("America/Port-au-Prince"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPortAuPrince },
		{ TEXT("America/Port_of_Spain"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPortOfSpain },
		{ TEXT("America/Porto_Velho"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPortoVelho },
		{ TEXT("America/Puerto_Rico"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPuertoRico },
		{ TEXT("America/Punta_Arenas"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaPuntaArenas },
		{ TEXT("America/Rainy_River"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRainyRiver },
		{ TEXT("America/Rankin_Inlet"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRankinInlet },
		{ TEXT("America/Recife"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRecife },
		{ TEXT("America/Regina"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRegina },
		{ TEXT("America/Resolute"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaResolute },
		{ TEXT("America/Rio_Branco"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaRioBranco },
		{ TEXT("America/Santarem"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSantarem },
		{ TEXT("America/Santiago"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSantiago },
		{ TEXT("America/Santo_Domingo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSantoDomingo },
		{ TEXT("America/Sao_Paulo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSaoPaulo },
		{ TEXT("America/Scoresbysund"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaScoresbysund },
		{ TEXT("America/Sitka"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSitka },
		{ TEXT("America/St_Johns"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaStJohns },
		{ TEXT("America/Swift_Current"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaSwiftCurrent },
		{ TEXT("America/Tegucigalpa"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaTegucigalpa },
		{ TEXT("America/Thule"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaThule },
		{ TEXT("America/Thunder_Bay"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaThunderBay },
		{ TEXT("America/Tijuana"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaTijuana },
		{ TEXT("America/Toronto"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaToronto },
		{ TEXT("America/Vancouver"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaVancouver },
		{ TEXT("America/Whitehorse"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaWhitehorse },
		{ TEXT("America/Winnipeg"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaWinnipeg },
		{ TEXT("America/Yakutat"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaYakutat },
		{ TEXT("America/Yellowknife"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AmericaYellowknife },
		{ TEXT("Antarctica/Casey"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaCasey },
		{ TEXT("Antarctica/Davis"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaDavis },
		{ TEXT("Antarctica/DumontDUrville"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaDumontDUrville },
		{ TEXT("Antarctica/Macquarie"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaMacquarie },
		{ TEXT("Antarctica/Mawson"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaMawson },
		{ TEXT("Antarctica/Palmer"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaPalmer },
		{ TEXT("Antarctica/Rothera"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaRothera },
		{ TEXT("Antarctica/Syowa"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaSyowa },
		{ TEXT("Antarctica/Troll"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaTroll },
		{ TEXT("Antarctica/Vostok"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AntarcticaVostok },
		{ TEXT("Asia/Almaty"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAlmaty },
		{ TEXT("Asia/Amman"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAmman },
		{ TEXT("Asia/Anadyr"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAnadyr },
		{ TEXT("Asia/Aqtau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAqtau },
		{ TEXT("Asia/Aqtobe"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAqtobe },
		{ TEXT("Asia/Ashgabat"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAshgabat },
		{ TEXT("Asia/Atyrau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaAtyrau },
		{ TEXT("Asia/Baghdad"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBaghdad },
		{ TEXT("Asia/Baku"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBaku },
		{ TEXT("Asia/Bangkok"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBangkok },
		{ TEXT("Asia/Barnaul"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBarnaul },
		{ TEXT("Asia/Beirut"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBeirut },
		{ TEXT("Asia/Bishkek"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBishkek },
		{ TEXT("Asia/Brunei"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaBrunei },
		{ TEXT("Asia/Chita"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaChita },
		{ TEXT("Asia/Choibalsan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaChoibalsan },
		{ TEXT("Asia/Colombo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaColombo },
		{ TEXT("Asia/Damascus"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDamascus },
		{ TEXT("Asia/Dhaka"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDhaka },
		{ TEXT("Asia/Dili"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDili },
		{ TEXT("Asia/Dubai"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDubai },
		{ TEXT("Asia/Dushanbe"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaDushanbe },
		{ TEXT("Asia/Famagusta"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaFamagusta },
		{ TEXT("Asia/Gaza"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaGaza },
		{ TEXT("Asia/Hebron"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHebron },
		{ TEXT("Asia/Ho_Chi_Minh"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHoChiMinh },
		{ TEXT("Asia/Hong_Kong"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHongKong },
		{ TEXT("Asia/Hovd"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaHovd },
		{ TEXT("Asia/Irkutsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaIrkutsk },
		{ TEXT("Asia/Jakarta"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaJakarta },
		{ TEXT("Asia/Jayapura"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaJayapura },
		{ TEXT("Asia/Jerusalem"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaJerusalem },
		{ TEXT("Asia/Kabul"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKabul },
		{ TEXT("Asia/Kamchatka"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKamchatka },
		{ TEXT("Asia/Karachi"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKarachi },
		{ TEXT("Asia/Kathmandu"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKathmandu },
		{ TEXT("Asia/Khandyga"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKhandyga },
		{ TEXT("Asia/Kolkata"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKolkata },
		{ TEXT("Asia/Krasnoyarsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKrasnoyarsk },
		{ TEXT("Asia/Kuala_Lumpur"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKualaLumpur },
		{ TEXT("Asia/Kuching"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaKuching },
		{ TEXT("Asia/Macau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaMacau },
		{ TEXT("Asia/Magadan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaMagadan },
		{ TEXT("Asia/Makassar"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaMakassar },
		{ TEXT("Asia/Manila"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaManila },
		{ TEXT("Asia/Nicosia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaNicosia },
		{ TEXT("Asia/Novokuznetsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaNovokuznetsk },
		{ TEXT("Asia/Novosibirsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaNovosibirsk },
		{ TEXT("Asia/Omsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaOmsk },
		{ TEXT("Asia/Oral"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaOral },
		{ TEXT("Asia/Pontianak"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaPontianak },
		{ TEXT("Asia/Pyongyang"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaPyongyang },
		{ TEXT("Asia/Qatar"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaQatar },
		{ TEXT("Asia/Qostanay"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaQostanay },
		{ TEXT("Asia/Qyzylorda"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaQyzylorda },
		{ TEXT("Asia/Riyadh"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaRiyadh },
		{ TEXT("Asia/Sakhalin"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSakhalin },
		{ TEXT("Asia/Samarkand"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSamarkand },
		{ TEXT("Asia/Seoul"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSeoul },
		{ TEXT("Asia/Shanghai"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaShanghai },
		{ TEXT("Asia/Singapore"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSingapore },
		{ TEXT("Asia/Srednekolymsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaSrednekolymsk },
		{ TEXT("Asia/Taipei"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTaipei },
		{ TEXT("Asia/Tashkent"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTashkent },
		{ TEXT("Asia/Tbilisi"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTbilisi },
		{ TEXT("Asia/Tehran"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTehran },
		{ TEXT("Asia/Thimphu"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaThimphu },
		{ TEXT("Asia/Tokyo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTokyo },
		{ TEXT("Asia/Tomsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaTomsk },
		{ TEXT("Asia/Ulaanbaatar"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaUlaanbaatar },
		{ TEXT("Asia/Urumqi"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaUrumqi },
		{ TEXT("Asia/Ust-Nera"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaUstNera },
		{ TEXT("Asia/Vladivostok"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaVladivostok },
		{ TEXT("Asia/Yakutsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYakutsk },
		{ TEXT("Asia/Yangon"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYangon },
		{ TEXT("Asia/Yekaterinburg"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYekaterinburg },
		{ TEXT("Asia/Yerevan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AsiaYerevan },
		{ TEXT("Atlantic/Azores"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticAzores },
		{ TEXT("Atlantic/Bermuda"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticBermuda },
		{ TEXT("Atlantic/Canary"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticCanary },
		{ TEXT("Atlantic/Cape_Verde"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticCapeVerde },
		{ TEXT("Atlantic/Faroe"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticFaroe },
		{ TEXT("Atlantic/Madeira"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticMadeira },
		{ TEXT("Atlantic/Reykjavik"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticReykjavik },
		{ TEXT("Atlantic/South_Georgia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticSouthGeorgia },
		{ TEXT("Atlantic/Stanley"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AtlanticStanley },
		{ TEXT("Australia/Adelaide"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaAdelaide },
		{ TEXT("Australia/Brisbane"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaBrisbane },
		{ TEXT("Australia/Broken_Hill"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaBrokenHill },
		{ TEXT("Australia/Currie"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaCurrie },
		{ TEXT("Australia/Darwin"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaDarwin },
		{ TEXT("Australia/Eucla"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaEucla },
		{ TEXT("Australia/Hobart"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaHobart },
		{ TEXT("Australia/Lindeman"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaLindeman },
		{ TEXT("Australia/Lord_Howe"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaLordHowe },
		{ TEXT("Australia/Melbourne"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaMelbourne },
		{ TEXT("Australia/Perth"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaPerth },
		{ TEXT("Australia/Sydney"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::AustraliaSydney },
		{ TEXT("CET"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Cet },
		{ TEXT("CST6CDT"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::CST6CDT },
		{ TEXT("EET"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Eet },
		{ TEXT("EST"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Est },
		{ TEXT("EST5EDT"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EST5EDT },
		{ TEXT("Etc/GMT"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT },
		{ TEXT("Etc/GMT+1"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT1 },
		{ TEXT("Etc/GMT+10"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT10 },
		{ TEXT("Etc/GMT+11"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT11 },
		{ TEXT("Etc/GMT+12"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT122 },
		{ TEXT("Etc/GMT+2"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT2 },
		{ TEXT("Etc/GMT+3"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT3 },
		{ TEXT("Etc/GMT+4"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT4 },
		{ TEXT("Etc/GMT+5"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT5 },
		{ TEXT("Etc/GMT+6"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT6 },
		{ TEXT("Etc/GMT+7"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT7 },
		{ TEXT("Etc/GMT+8"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT8 },
		{ TEXT("Etc/GMT+9"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT9 },
		{ TEXT("Etc/GMT-1"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT12 },
		{ TEXT("Etc/GMT-10"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT102 },
		{ TEXT("Etc/GMT-11"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT112 },
		{ TEXT("Etc/GMT-12"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT122 },
		{ TEXT("Etc/GMT-13"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT13 },
		{ TEXT("Etc/GMT-14"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT14 },
		{ TEXT("Etc/GMT-2"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT22 },
		{ TEXT("Etc/GMT-3"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT32 },
		{ TEXT("Etc/GMT-4"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT42 },
		{ TEXT("Etc/GMT-5"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT52 },
		{ TEXT("Etc/GMT-6"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT62 },
		{ TEXT("Etc/GMT-7"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT72 },
		{ TEXT("Etc/GMT-8"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT82 },
		{ TEXT("Etc/GMT-9"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcGMT92 },
		{ TEXT("Etc/UTC"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EtcUTC },
		{ TEXT("Europe/Amsterdam"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAmsterdam },
		{ TEXT("Europe/Andorra"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAndorra },
		{ TEXT("Europe/Astrakhan"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAstrakhan },
		{ TEXT("Europe/Athens"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeAthens },
		{ TEXT("Europe/Belgrade"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBelgrade },
		{ TEXT("Europe/Berlin"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBerlin },
		{ TEXT("Europe/Brussels"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBrussels },
		{ TEXT("Europe/Bucharest"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBucharest },
		{ TEXT("Europe/Budapest"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeBudapest },
		{ TEXT("Europe/Chisinau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeChisinau },
		{ TEXT("Europe/Copenhagen"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeCopenhagen },
		{ TEXT("Europe/Dublin"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeDublin },
		{ TEXT("Europe/Gibraltar"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeGibraltar },
		{ TEXT("Europe/Helsinki"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeHelsinki },
		{ TEXT("Europe/Istanbul"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeIstanbul },
		{ TEXT("Europe/Kaliningrad"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeKaliningrad },
		{ TEXT("Europe/Kiev"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeKiev },
		{ TEXT("Europe/Kirov"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeKirov },
		{ TEXT("Europe/Lisbon"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeLisbon },
		{ TEXT("Europe/London"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeLondon },
		{ TEXT("Europe/Luxembourg"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeLuxembourg },
		{ TEXT("Europe/Madrid"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMadrid },
		{ TEXT("Europe/Malta"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMalta },
		{ TEXT("Europe/Minsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMinsk },
		{ TEXT("Europe/Monaco"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMonaco },
		{ TEXT("Europe/Moscow"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeMoscow },
		{ TEXT("Europe/Oslo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeOslo },
		{ TEXT("Europe/Paris"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeParis },
		{ TEXT("Europe/Prague"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropePrague },
		{ TEXT("Europe/Riga"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeRiga },
		{ TEXT("Europe/Rome"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeRome },
		{ TEXT("Europe/Samara"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSamara },
		{ TEXT("Europe/Saratov"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSaratov },
		{ TEXT("Europe/Simferopol"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSimferopol },
		{ TEXT("Europe/Sofia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeSofia },
		{ TEXT("Europe/Stockholm"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeStockholm },
		{ TEXT("Europe/Tallinn"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeTallinn },
		{ TEXT("Europe/Tirane"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeTirane },
		{ TEXT("Europe/Ulyanovsk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeUlyanovsk },
		{ TEXT("Europe/Uzhgorod"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeUzhgorod },
		{ TEXT("Europe/Vienna"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeVienna },
		{ TEXT("Europe/Vilnius"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeVilnius },
		{ TEXT("Europe/Volgograd"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeVolgograd },
		{ TEXT("Europe/Warsaw"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeWarsaw },
		{ TEXT("Europe/Zaporozhye"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeZaporozhye },
		{ TEXT("Europe/Zurich"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::EuropeZurich },
		{ TEXT("HST"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Hst },
		{ TEXT("Indian/Chagos"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianChagos },
		{ TEXT("Indian/Christmas"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianChristmas },
		{ TEXT("Indian/Cocos"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianCocos },
		{ TEXT("Indian/Kerguelen"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianKerguelen },
		{ TEXT("Indian/Mahe"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianMahe },
		{ TEXT("Indian/Maldives"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianMaldives },
		{ TEXT("Indian/Mauritius"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianMauritius },
		{ TEXT("Indian/Reunion"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::IndianReunion },
		{ TEXT("MET"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Met },
		{ TEXT("MST"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Mst },
		{ TEXT("MST7MDT"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::MST7MDT },
		{ TEXT("PST8PDT"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PST8PDT },
		{ TEXT("Pacific/Apia"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificApia },
		{ TEXT("Pacific/Auckland"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificAuckland },
		{ TEXT("Pacific/Bougainville"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificBougainville },
		{ TEXT("Pacific/Chatham"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificChatham },
		{ TEXT("Pacific/Chuuk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificChuuk },
		{ TEXT("Pacific/Easter"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificEaster },
		{ TEXT("Pacific/Efate"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificEfate },
		{ TEXT("Pacific/Enderbury"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificEnderbury },
		{ TEXT("Pacific/Fakaofo"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificFakaofo },
		{ TEXT("Pacific/Fiji"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificFiji },
		{ TEXT("Pacific/Funafuti"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificFunafuti },
		{ TEXT("Pacific/Galapagos"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGalapagos },
		{ TEXT("Pacific/Gambier"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGambier },
		{ TEXT("Pacific/Guadalcanal"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGuadalcanal },
		{ TEXT("Pacific/Guam"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificGuam },
		{ TEXT("Pacific/Honolulu"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificHonolulu },
		{ TEXT("Pacific/Kiritimati"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificKiritimati },
		{ TEXT("Pacific/Kosrae"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificKosrae },
		{ TEXT("Pacific/Kwajalein"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificKwajalein },
		{ TEXT("Pacific/Majuro"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificMajuro },
		{ TEXT("Pacific/Marquesas"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificMarquesas },
		{ TEXT("Pacific/Nauru"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNauru },
		{ TEXT("Pacific/Niue"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNiue },
		{ TEXT("Pacific/Norfolk"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNorfolk },
		{ TEXT("Pacific/Noumea"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificNoumea },
		{ TEXT("Pacific/Pago_Pago"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPagoPago },
		{ TEXT("Pacific/Palau"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPalau },
		{ TEXT("Pacific/Pitcairn"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPitcairn },
		{ TEXT("Pacific/Pohnpei"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPohnpei },
		{ TEXT("Pacific/Port_Moresby"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificPortMoresby },
		{ TEXT("Pacific/Rarotonga"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificRarotonga },
		{ TEXT("Pacific/Tahiti"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificTahiti },
		{ TEXT("Pacific/Tarawa"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificTarawa },
		{ TEXT("Pacific/Tongatapu"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificTongatapu },
		{ TEXT("Pacific/Wake"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificWake },
		{ TEXT("Pacific/Wallis"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::PacificWallis },
		{ TEXT("WET"), OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum::Wet }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPICatalogsFeedProcessingSchedule::EnumFromString(const FString& EnumAsString, OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPICatalogsFeedProcessingSchedule::TimezoneEnum& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPICatalogsFeedProcessingSchedule::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("time")); WriteJsonValue(Writer, Time);
	if (Timezone.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("timezone")); WriteJsonValue(Writer, Timezone.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPICatalogsFeedProcessingSchedule::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("time"), Time);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("timezone"), Timezone);

	return ParseSuccess;
}

}
