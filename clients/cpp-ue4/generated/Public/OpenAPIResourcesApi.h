/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

class OPENAPI_API OpenAPIResourcesApi
{
public:
	OpenAPIResourcesApi();
	~OpenAPIResourcesApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class AdAccountCountriesGetRequest;
	class AdAccountCountriesGetResponse;
	class DeliveryMetricsGetRequest;
	class DeliveryMetricsGetResponse;
	class InterestTargetingOptionsGetRequest;
	class InterestTargetingOptionsGetResponse;
	class LeadFormQuestionsGetRequest;
	class LeadFormQuestionsGetResponse;
	class MetricsReadyStateGetRequest;
	class MetricsReadyStateGetResponse;
	class TargetingOptionsGetRequest;
	class TargetingOptionsGetResponse;
	
    DECLARE_DELEGATE_OneParam(FAdAccountCountriesGetDelegate, const AdAccountCountriesGetResponse&);
    DECLARE_DELEGATE_OneParam(FDeliveryMetricsGetDelegate, const DeliveryMetricsGetResponse&);
    DECLARE_DELEGATE_OneParam(FInterestTargetingOptionsGetDelegate, const InterestTargetingOptionsGetResponse&);
    DECLARE_DELEGATE_OneParam(FLeadFormQuestionsGetDelegate, const LeadFormQuestionsGetResponse&);
    DECLARE_DELEGATE_OneParam(FMetricsReadyStateGetDelegate, const MetricsReadyStateGetResponse&);
    DECLARE_DELEGATE_OneParam(FTargetingOptionsGetDelegate, const TargetingOptionsGetResponse&);
    
    FHttpRequestPtr AdAccountCountriesGet(const AdAccountCountriesGetRequest& Request, const FAdAccountCountriesGetDelegate& Delegate = FAdAccountCountriesGetDelegate()) const;
    FHttpRequestPtr DeliveryMetricsGet(const DeliveryMetricsGetRequest& Request, const FDeliveryMetricsGetDelegate& Delegate = FDeliveryMetricsGetDelegate()) const;
    FHttpRequestPtr InterestTargetingOptionsGet(const InterestTargetingOptionsGetRequest& Request, const FInterestTargetingOptionsGetDelegate& Delegate = FInterestTargetingOptionsGetDelegate()) const;
    FHttpRequestPtr LeadFormQuestionsGet(const LeadFormQuestionsGetRequest& Request, const FLeadFormQuestionsGetDelegate& Delegate = FLeadFormQuestionsGetDelegate()) const;
    FHttpRequestPtr MetricsReadyStateGet(const MetricsReadyStateGetRequest& Request, const FMetricsReadyStateGetDelegate& Delegate = FMetricsReadyStateGetDelegate()) const;
    FHttpRequestPtr TargetingOptionsGet(const TargetingOptionsGetRequest& Request, const FTargetingOptionsGetDelegate& Delegate = FTargetingOptionsGetDelegate()) const;
    
private:
    void OnAdAccountCountriesGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FAdAccountCountriesGetDelegate Delegate) const;
    void OnDeliveryMetricsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDeliveryMetricsGetDelegate Delegate) const;
    void OnInterestTargetingOptionsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FInterestTargetingOptionsGetDelegate Delegate) const;
    void OnLeadFormQuestionsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FLeadFormQuestionsGetDelegate Delegate) const;
    void OnMetricsReadyStateGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FMetricsReadyStateGetDelegate Delegate) const;
    void OnTargetingOptionsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FTargetingOptionsGetDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
