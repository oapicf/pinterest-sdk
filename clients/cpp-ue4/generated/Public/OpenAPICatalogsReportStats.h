/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPICatalogsReportDistributionStats.h"
#include "OpenAPICatalogsReportFeedIngestionStats.h"

namespace OpenAPI
{

/*
 * OpenAPICatalogsReportStats
 *
 * Diagnostics aggregated numbers
 */
class OPENAPI_API OpenAPICatalogsReportStats : public Model
{
public:
    virtual ~OpenAPICatalogsReportStats() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	enum class ReportTypeEnum
	{
		FeedIngestionIssues,
		DistributionIssues,
  	};

	static FString EnumToString(const ReportTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ReportTypeEnum& EnumValue);
	ReportTypeEnum ReportType;
	/* ID of the catalog entity. */
	TOptional<FString> CatalogId;
	/* The event code that a diagnostics aggregated number references */
	TOptional<int32> Code;
	/* A human-friendly label for the event code (e.g, 'SPAM') */
	TOptional<FString> CodeLabel;
	/* Title message describing the diagnostic issue */
	TOptional<FString> Message;
	/* Number of occurrences of the issue */
	TOptional<int32> Occurrences;
	enum class SeverityEnum
	{
		Warn,
		Error,
  	};

	static FString EnumToString(const SeverityEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, SeverityEnum& EnumValue);
	/* An ERROR means that items have been dropped, while a WARN denotes that items have been ingested despite an issue */
	TOptional<SeverityEnum> Severity;
	/* Indicates if issue makes items ineligible for ads distribution */
	TOptional<bool> IneligibleForAds;
	/* Indicates if issue makes items ineligible for organic distribution */
	TOptional<bool> IneligibleForOrganic;
};

}
