/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIResourcesApi.h"

#include "OpenAPIAdAccountsCountryResponse.h"
#include "OpenAPIBookClosedResponse.h"
#include "OpenAPIDeliveryMetricsResponse.h"
#include "OpenAPIError.h"
#include "OpenAPISingleInterestTargetingOptionResponse.h"

namespace OpenAPI
{

/* Get ad accounts countries
 *
 * Get Ad Accounts countries
*/
class OPENAPI_API OpenAPIResourcesApi::AdAccountCountriesGetRequest : public Request
{
public:
    virtual ~AdAccountCountriesGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIResourcesApi::AdAccountCountriesGetResponse : public Response
{
public:
    virtual ~AdAccountCountriesGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIAdAccountsCountryResponse Content;
};

/* Get available metrics&#39; definitions
 *
 * Get the definitions for ads and organic metrics available across both synchronous and asynchronous report endpoints. The &#x60;display_name&#x60; attribute will match how the metric is named in our native tools like Ads Manager. See &lt;a href&#x3D;&#39;/docs/api-features/analytics-overview/&#39;&gt;Organic Analytics&lt;/a&gt; and &lt;a href&#x3D;&#39;/docs/api-features/ads-reporting/&#39;&gt;Ads Analytics&lt;/a&gt; for more information.
*/
class OPENAPI_API OpenAPIResourcesApi::DeliveryMetricsGetRequest : public Request
{
public:
    virtual ~DeliveryMetricsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	enum class ReportTypeEnum
	{
		Sync,
		Async,
  	};

	static FString EnumToString(const ReportTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ReportTypeEnum& EnumValue);
	/* Report type. */
	TOptional<ReportTypeEnum> ReportType;
};

class OPENAPI_API OpenAPIResourcesApi::DeliveryMetricsGetResponse : public Response
{
public:
    virtual ~DeliveryMetricsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeliveryMetricsResponse Content;
};

/* Get interest details
 *
 * &lt;p&gt;Get details of a specific interest given interest ID.&lt;/p&gt; &lt;p&gt;Click &lt;a href&#x3D;\&quot;https://docs.google.com/spreadsheets/d/1HxL-0Z3p2fgxis9YBP2HWC3tvPrs1hAuHDRtH-NJTIM/edit#gid&#x3D;118370875\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; for a spreadsheet listing interests and their IDs.&lt;/p&gt;
*/
class OPENAPI_API OpenAPIResourcesApi::InterestTargetingOptionsGetRequest : public Request
{
public:
    virtual ~InterestTargetingOptionsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an interest. */
	FString InterestId;
};

class OPENAPI_API OpenAPIResourcesApi::InterestTargetingOptionsGetResponse : public Response
{
public:
    virtual ~InterestTargetingOptionsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISingleInterestTargetingOptionResponse Content;
};

/* Get lead form questions
 *
 * Get a list of all lead form question type names. Some questions might not be used.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
*/
class OPENAPI_API OpenAPIResourcesApi::LeadFormQuestionsGetRequest : public Request
{
public:
    virtual ~LeadFormQuestionsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIResourcesApi::LeadFormQuestionsGetResponse : public Response
{
public:
    virtual ~LeadFormQuestionsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Get metrics ready state
 *
 * Learn whether conversion or non-conversion metrics are finalized and ready to query.
*/
class OPENAPI_API OpenAPIResourcesApi::MetricsReadyStateGetRequest : public Request
{
public:
    virtual ~MetricsReadyStateGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Analytics reports request date (UTC). Format: YYYY-MM-DD */
	FString Date;
};

class OPENAPI_API OpenAPIResourcesApi::MetricsReadyStateGetResponse : public Response
{
public:
    virtual ~MetricsReadyStateGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBookClosedResponse Content;
};

/* Get targeting options
 *
 * &lt;p&gt;You can use targeting values in ads placement to define your intended audience. &lt;/p&gt; &lt;p&gt;Targeting metrics are organized around targeting specifications.&lt;/p&gt; &lt;p&gt;For more information on ads targeting, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Sample return:&lt;/b&gt;&lt;/p&gt; &lt;pre class&#x3D;\&quot;literal-block\&quot;&gt; [{&amp;quot;36313&amp;quot;: &amp;quot;Australia: Moreton Bay - North&amp;quot;, &amp;quot;124735&amp;quot;: &amp;quot;Canada: North Battleford&amp;quot;, &amp;quot;36109&amp;quot;: &amp;quot;Australia: Murray&amp;quot;, &amp;quot;36108&amp;quot;: &amp;quot;Australia: Mid North Coast&amp;quot;, &amp;quot;36101&amp;quot;: &amp;quot;Australia: Capital Region&amp;quot;, &amp;quot;811&amp;quot;: &amp;quot;U.S.: Reno&amp;quot;, &amp;quot;36103&amp;quot;: &amp;quot;Australia: Central West&amp;quot;, &amp;quot;36102&amp;quot;: &amp;quot;Australia: Central Coast&amp;quot;, &amp;quot;36105&amp;quot;: &amp;quot;Australia: Far West and Orana&amp;quot;, &amp;quot;36104&amp;quot;: &amp;quot;Australia: Coffs Harbour - Grafton&amp;quot;, &amp;quot;36107&amp;quot;: &amp;quot;Australia: Illawarra&amp;quot;, &amp;quot;36106&amp;quot;: &amp;quot;Australia: Hunter Valley Exc Newcastle&amp;quot;, &amp;quot;554017&amp;quot;: &amp;quot;New Zealand: Wanganui&amp;quot;, &amp;quot;554016&amp;quot;: &amp;quot;New Zealand: Marlborough&amp;quot;, &amp;quot;554015&amp;quot;: &amp;quot;New Zealand: Gisborne&amp;quot;, &amp;quot;554014&amp;quot;: &amp;quot;New Zealand: Tararua&amp;quot;, &amp;quot;554013&amp;quot;: &amp;quot;New Zealand: Invercargill&amp;quot;, &amp;quot;GR&amp;quot;: &amp;quot;Greece&amp;quot;, &amp;quot;554011&amp;quot;: &amp;quot;New Zealand: Whangarei&amp;quot;, &amp;quot;554010&amp;quot;: &amp;quot;New Zealand: Far North&amp;quot;, &amp;quot;717&amp;quot;: &amp;quot;U.S.: Quincy-Hannibal-Keokuk&amp;quot;, &amp;quot;716&amp;quot;: &amp;quot;U.S.: Baton Rouge&amp;quot;,...}] &lt;/pre&gt;
*/
class OPENAPI_API OpenAPIResourcesApi::TargetingOptionsGetRequest : public Request
{
public:
    virtual ~TargetingOptionsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	enum class TargetingTypeEnum
	{
		Apptype,
		Gender,
		Locale,
		AgeBucket,
		Location,
		Geo,
		Interest,
		Keyword,
		AudienceInclude,
		AudienceExclude,
  	};

	static FString EnumToString(const TargetingTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, TargetingTypeEnum& EnumValue);
	/* Public targeting type. */
	TargetingTypeEnum TargetingType;
	/* Client ID. */
	TOptional<FString> ClientId;
	/* Oauth signature */
	TOptional<FString> OauthSignature;
	/* Timestamp */
	TOptional<FString> Timestamp;
	/* Unique identifier of an ad account. */
	TOptional<FString> AdAccountId;
};

class OPENAPI_API OpenAPIResourcesApi::TargetingOptionsGetResponse : public Response
{
public:
    virtual ~TargetingOptionsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<TSharedPtr<FJsonObject>> Content;
};

}
