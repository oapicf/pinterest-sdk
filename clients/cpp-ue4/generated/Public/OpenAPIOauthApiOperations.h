/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIOauthApi.h"

#include "OpenAPIError.h"
#include "OpenAPIOauthAccessTokenResponse.h"

namespace OpenAPI
{

/* Generate OAuth access token
 *
 * Generate an OAuth access token by using an authorization code or a refresh token.  IMPORTANT: You need to start the OAuth flow via www.pinterest.com/oauth before calling this endpoint (or have an existing refresh token).  See &lt;a href&#x3D;&#39;/docs/getting-started/authentication-and-scopes/&#39;&gt;Authentication&lt;/a&gt; for more.  &lt;strong&gt;Parameter &lt;i&gt;refresh_on&lt;/i&gt; and its corresponding response type &lt;i&gt;everlasting_refresh&lt;/i&gt; are now available to all apps! Later this year, continuous refresh will become the default behavior (ie you will no longer need to send this parameter). &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;  &lt;strong&gt;Grant type &lt;i&gt;client_credentials&lt;/i&gt; and its corresponding response type are not fully available. You will likely get a default error if you attempt to use this grant_type.&lt;/strong&gt;
*/
class OPENAPI_API OpenAPIOauthApi::OauthTokenRequest : public Request
{
public:
    virtual ~OauthTokenRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	enum class GrantTypeEnum
	{
		AuthorizationCode,
		RefreshToken,
		ClientCredentials,
  	};

	static FString EnumToString(const GrantTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, GrantTypeEnum& EnumValue);
	GrantTypeEnum GrantType;
};

class OPENAPI_API OpenAPIOauthApi::OauthTokenResponse : public Response
{
public:
    virtual ~OauthTokenResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIOauthAccessTokenResponse Content;
};

}
