/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIBusinessAccessAssetsApi.h"

#include "OpenAPIBusinessAssetMembersGet200Response.h"
#include "OpenAPIBusinessAssetPartnersGet200Response.h"
#include "OpenAPIBusinessAssetsGet200Response.h"
#include "OpenAPIBusinessMemberAssetsGet200Response.h"
#include "OpenAPIBusinessMembersAssetAccessDeleteRequest.h"
#include "OpenAPIBusinessPartnerAssetAccessGet200Response.h"
#include "OpenAPICreateAssetGroupBody.h"
#include "OpenAPICreateAssetGroupResponse.h"
#include "OpenAPIDeleteAssetGroupBody.h"
#include "OpenAPIDeleteAssetGroupResponse.h"
#include "OpenAPIDeleteMemberAccessResultsResponseArray.h"
#include "OpenAPIDeletePartnerAssetAccessBody.h"
#include "OpenAPIDeletePartnerAssetsResultsResponseArray.h"
#include "OpenAPIError.h"
#include "OpenAPIPartnerType.h"
#include "OpenAPIPermissionsWithOwner.h"
#include "OpenAPIUpdateAssetGroupBody.h"
#include "OpenAPIUpdateAssetGroupResponse.h"
#include "OpenAPIUpdateMemberAssetAccessBody.h"
#include "OpenAPIUpdateMemberAssetsResultsResponseArray.h"
#include "OpenAPIUpdatePartnerAssetAccessBody.h"
#include "OpenAPIUpdatePartnerAssetsResultsResponseArray.h"

namespace OpenAPI
{

/* Create a new asset group.
 *
 * Create a new asset group with the specified parameters. - An &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/asset-groups\&quot;&gt;asset group&lt;/a&gt; is a custom group of assets based on how youâ€™d like to manage your accounts.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::AssetGroupCreateRequest : public Request
{
public:
    virtual ~AssetGroupCreateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPICreateAssetGroupBody OpenAPICreateAssetGroupBody;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::AssetGroupCreateResponse : public Response
{
public:
    virtual ~AssetGroupCreateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICreateAssetGroupResponse Content;
};

/* Delete asset groups.
 *
 * Delete a batch of asset groups.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::AssetGroupDeleteRequest : public Request
{
public:
    virtual ~AssetGroupDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPIDeleteAssetGroupBody OpenAPIDeleteAssetGroupBody;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::AssetGroupDeleteResponse : public Response
{
public:
    virtual ~AssetGroupDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeleteAssetGroupResponse Content;
};

/* Update asset groups.
 *
 * Update a batch of asset groups with the specified parameters.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::AssetGroupUpdateRequest : public Request
{
public:
    virtual ~AssetGroupUpdateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPIUpdateAssetGroupBody OpenAPIUpdateAssetGroupBody;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::AssetGroupUpdateResponse : public Response
{
public:
    virtual ~AssetGroupUpdateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUpdateAssetGroupResponse Content;
};

/* Get members with access to asset
 *
 * Get all the members the requesting business has granted access to on the given asset.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessAssetMembersGetRequest : public Request
{
public:
    virtual ~BusinessAssetMembersGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* Unique identifier of a business asset. */
	FString AssetId;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
	/* An index to start fetching the results from. Only the results starting from this index will be returned. */
	TOptional<int32> StartIndex;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessAssetMembersGetResponse : public Response
{
public:
    virtual ~BusinessAssetMembersGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessAssetMembersGet200Response Content;
};

/* Get partners with access to asset
 *
 * Get all the partners the requesting business has granted access to on the given asset. Note: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with you cannot be shared with a different partner.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessAssetPartnersGetRequest : public Request
{
public:
    virtual ~BusinessAssetPartnersGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* Unique identifier of a business asset. */
	FString AssetId;
	/* An index to start fetching the results from. Only the results starting from this index will be returned. */
	TOptional<int32> StartIndex;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessAssetPartnersGetResponse : public Response
{
public:
    virtual ~BusinessAssetPartnersGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessAssetPartnersGet200Response Content;
};

/* List business assets
 *
 * Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessAssetsGetRequest : public Request
{
public:
    virtual ~BusinessAssetsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned. */
	TOptional<TArray<OpenAPIPermissionsWithOwner>> Permissions;
	/* A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child. */
	TOptional<FString> ChildAssetId;
	/* An asset group unique identifier. Used to fetch assets contained within the specified asset group. */
	TOptional<FString> AssetGroupId;
	enum class AssetTypeEnum
	{
		AdAccount,
		Profile,
		AssetGroup,
  	};

	static FString EnumToString(const AssetTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, AssetTypeEnum& EnumValue);
	/* A resource type to filter the assets by. Only assets of the specified type will be returned. */
	TOptional<AssetTypeEnum> AssetType;
	/* An index to start fetching the results from. Only the results starting from this index will be returned. */
	TOptional<int32> StartIndex;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessAssetsGetResponse : public Response
{
public:
    virtual ~BusinessAssetsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessAssetsGet200Response Content;
};

/* Get assets assigned to a member
 *
 * Get assets on which you assigned asset permissions to the given member. Can be used to: - get all assets, regardless of asset type or - get assets of one asset type by using the asset_type query. The return response will include the permissions the member has to that asset and the asset type.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessMemberAssetsGetRequest : public Request
{
public:
    virtual ~BusinessMemberAssetsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* The member id to fetch assets for. */
	FString MemberId;
	enum class AssetTypeEnum
	{
		AdAccount,
		Profile,
		AssetGroup,
  	};

	static FString EnumToString(const AssetTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, AssetTypeEnum& EnumValue);
	/* A resource type to filter the assets by. Only assets of the specified type will be returned. */
	TOptional<AssetTypeEnum> AssetType;
	/* An index to start fetching the results from. Only the results starting from this index will be returned. */
	TOptional<int32> StartIndex;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessMemberAssetsGetResponse : public Response
{
public:
    virtual ~BusinessMemberAssetsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessMemberAssetsGet200Response Content;
};

/* Delete member access to asset
 *
 * Terminate multiple members&#39; access to an asset.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessMembersAssetAccessDeleteRequest : public Request
{
public:
    virtual ~BusinessMembersAssetAccessDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* List member assset permissions to delete. */
	OpenAPIBusinessMembersAssetAccessDeleteRequest OpenAPIBusinessMembersAssetAccessDeleteRequest;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessMembersAssetAccessDeleteResponse : public Response
{
public:
    virtual ~BusinessMembersAssetAccessDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeleteMemberAccessResultsResponseArray Content;
};

/* Assign/Update member asset permissions
 *
 * Grant multiple members access to assets and/or update multiple member&#39;s exisiting permissions to an asset. Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE. 
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessMembersAssetAccessUpdateRequest : public Request
{
public:
    virtual ~BusinessMembersAssetAccessUpdateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* List of member asset permissions to create or update. */
	OpenAPIUpdateMemberAssetAccessBody OpenAPIUpdateMemberAssetAccessBody;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessMembersAssetAccessUpdateResponse : public Response
{
public:
    virtual ~BusinessMembersAssetAccessUpdateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUpdateMemberAssetsResultsResponseArray Content;
};

/* Get assets assigned to a partner or assets assigned by a partner
 *
 * Can be used to get the business assets your partner has granted you access to or the business assets you have granted your partner access to. If you specify: - partner_type&#x3D;INTERNAL, you will retrieve your business assets that the partner has access to. - partner_type&#x3D;EXTERNAL, you will retrieve the partner&#39;s business assets that the partner has granted you access to.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessPartnerAssetAccessGetRequest : public Request
{
public:
    virtual ~BusinessPartnerAssetAccessGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* The partner id to be bound to the Business */
	FString PartnerId;
	/* Specifies whether to fetch internal or external (shared) partners. If partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br> If partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset. */
	TOptional<OpenAPIPartnerType> PartnerType;
	enum class AssetTypeEnum
	{
		AdAccount,
		Profile,
		AssetGroup,
  	};

	static FString EnumToString(const AssetTypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, AssetTypeEnum& EnumValue);
	/* A resource type to filter the assets by. Only assets of the specified type will be returned. */
	TOptional<AssetTypeEnum> AssetType;
	/* An index to start fetching the results from. Only the results starting from this index will be returned. */
	TOptional<int32> StartIndex;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::BusinessPartnerAssetAccessGetResponse : public Response
{
public:
    virtual ~BusinessPartnerAssetAccessGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessPartnerAssetAccessGet200Response Content;
};

/* Delete partner access to asset
 *
 * Terminate multiple partners&#39; access to an asset. If - partner_type&#x3D;INTERNAL: You will terminate a partner&#39;s asset access to your business assets. - partner_type&#x3D;EXTERNAL: You will terminate your own access to your partner&#39;s business assets.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::DeletePartnerAssetAccessHandlerImplRequest : public Request
{
public:
    virtual ~DeletePartnerAssetAccessHandlerImplRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPIDeletePartnerAssetAccessBody OpenAPIDeletePartnerAssetAccessBody;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::DeletePartnerAssetAccessHandlerImplResponse : public Response
{
public:
    virtual ~DeletePartnerAssetAccessHandlerImplResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeletePartnerAssetsResultsResponseArray Content;
};

/* Assign/Update partner asset permissions
 *
 * Grant multiple partners access to assets and/or update multiple partner&#39;s exisiting permissions to an asset. If your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them. To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview  Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.
*/
class OPENAPI_API OpenAPIBusinessAccessAssetsApi::UpdatePartnerAssetAccessHandlerImplRequest : public Request
{
public:
    virtual ~UpdatePartnerAssetAccessHandlerImplRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* A list of assets and permissions to assign to your partners. */
	OpenAPIUpdatePartnerAssetAccessBody OpenAPIUpdatePartnerAssetAccessBody;
};

class OPENAPI_API OpenAPIBusinessAccessAssetsApi::UpdatePartnerAssetAccessHandlerImplResponse : public Response
{
public:
    virtual ~UpdatePartnerAssetAccessHandlerImplResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUpdatePartnerAssetsResultsResponseArray Content;
};

}
