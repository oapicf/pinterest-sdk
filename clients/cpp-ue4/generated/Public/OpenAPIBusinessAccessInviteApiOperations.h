/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIBusinessAccessInviteApi.h"

#include "OpenAPIAuthRespondInvitesBody.h"
#include "OpenAPICancelInvitesBody.h"
#include "OpenAPICreateAssetAccessRequestBody.h"
#include "OpenAPICreateAssetAccessRequestResponse.h"
#include "OpenAPICreateAssetInvitesRequest.h"
#include "OpenAPICreateInvitesResultsResponseArray.h"
#include "OpenAPICreateMembershipOrPartnershipInvitesBody.h"
#include "OpenAPIDeleteInvitesResultsResponseArray.h"
#include "OpenAPIError.h"
#include "OpenAPIGetInvites200Response.h"
#include "OpenAPIInviteType.h"
#include "OpenAPIRespondToInvitesResponseArray.h"
#include "OpenAPIUpdateInvitesResultsResponseArray.h"

namespace OpenAPI
{

/* Create a request to access an existing partner&#39;s assets.
 *
 * Create a request to access an existing partner&#39;s assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
*/
class OPENAPI_API OpenAPIBusinessAccessInviteApi::AssetAccessRequestsCreateRequest : public Request
{
public:
    virtual ~AssetAccessRequestsCreateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPICreateAssetAccessRequestBody OpenAPICreateAssetAccessRequestBody;
};

class OPENAPI_API OpenAPIBusinessAccessInviteApi::AssetAccessRequestsCreateResponse : public Response
{
public:
    virtual ~AssetAccessRequestsCreateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICreateAssetAccessRequestResponse Content;
};

/* Cancel invites/requests
 *
 * Cancel membership/partnership invites and/or requests.
*/
class OPENAPI_API OpenAPIBusinessAccessInviteApi::CancelInvitesOrRequestsRequest : public Request
{
public:
    virtual ~CancelInvitesOrRequestsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Business id */
	FString BusinessId;
	/* A list with invite ids */
	OpenAPICancelInvitesBody OpenAPICancelInvitesBody;
};

class OPENAPI_API OpenAPIBusinessAccessInviteApi::CancelInvitesOrRequestsResponse : public Response
{
public:
    virtual ~CancelInvitesOrRequestsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeleteInvitesResultsResponseArray Content;
};

/* Update invite/request with an asset permission
 *
 * Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner&#39;s asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \&quot;Create a request to access an existing partner&#39;s assets\&quot; to request access to your   partner&#39;s assets.     - invite_type&#x3D;\&quot;PARTNER_REQUEST\&quot; - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \&quot;Assign/Update partner asset permissions\&quot; to assign a partner access to   new assets.     - invite_type&#x3D;\&quot;PARTNER_INVITE\&quot; - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \&quot;Assign/Update member asset permissions\&quot; to assign a member access to new   assets.     - invite_type&#x3D;\&quot;MEMBER_INVITE\&quot;  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
*/
class OPENAPI_API OpenAPIBusinessAccessInviteApi::CreateAssetInvitesRequest : public Request
{
public:
    virtual ~CreateAssetInvitesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* A list of invites/requests together with the asset permissions to be assigned to the invite/request.  */
	OpenAPICreateAssetInvitesRequest OpenAPICreateAssetInvitesRequest;
};

class OPENAPI_API OpenAPIBusinessAccessInviteApi::CreateAssetInvitesResponse : public Response
{
public:
    virtual ~CreateAssetInvitesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUpdateInvitesResultsResponseArray Content;
};

/* Create invites or requests
 *
 * Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type&#x3D;\&quot;MEMBER_INVITE\&quot;     - business_role&#x3D;\&quot;EMPLOYEE\&quot; OR business_role&#x3D;\&quot;BIZ_ADMIN\&quot; (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type&#x3D;\&quot;PARTNER_INVITE\&quot;     - business_role&#x3D;\&quot;PARTNER\&quot;     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type&#x3D;\&quot;PARTNER_REQUEST\&quot;     - business_role&#x3D;\&quot;PARTNER\&quot;     - partners
*/
class OPENAPI_API OpenAPIBusinessAccessInviteApi::CreateMembershipOrPartnershipInvitesRequest : public Request
{
public:
    virtual ~CreateMembershipOrPartnershipInvitesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Business id */
	FString BusinessId;
	/* An object with the properties: invite_type, partners, members, business_role */
	OpenAPICreateMembershipOrPartnershipInvitesBody OpenAPICreateMembershipOrPartnershipInvitesBody;
};

class OPENAPI_API OpenAPIBusinessAccessInviteApi::CreateMembershipOrPartnershipInvitesResponse : public Response
{
public:
    virtual ~CreateMembershipOrPartnershipInvitesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICreateInvitesResultsResponseArray Content;
};

/* Get invites/requests
 *
 * Get the membership/partnership invites and/or requests for the authorized user.
*/
class OPENAPI_API OpenAPIBusinessAccessInviteApi::GetInvitesRequest : public Request
{
public:
    virtual ~GetInvitesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* A boolean field to indicate whether the invite is to create a partnership or a membership. */
	TOptional<bool> IsMember;
	enum class InviteStatusEnum
	{
		Pending,
		Expired,
  	};

	static FString EnumToString(const InviteStatusEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, InviteStatusEnum& EnumValue);
	/* A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned. */
	TOptional<TArray<InviteStatusEnum>> InviteStatus;
	/* Invite type to filter invites by. Only invites of the specified type will be returned. */
	TOptional<OpenAPIInviteType> InviteType;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPIBusinessAccessInviteApi::GetInvitesResponse : public Response
{
public:
    virtual ~GetInvitesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGetInvites200Response Content;
};

/* Accept or decline an invite/request
 *
 * Accept or decline invites or requests.
*/
class OPENAPI_API OpenAPIBusinessAccessInviteApi::RespondBusinessAccessInvitesRequest : public Request
{
public:
    virtual ~RespondBusinessAccessInvitesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIAuthRespondInvitesBody OpenAPIAuthRespondInvitesBody;
};

class OPENAPI_API OpenAPIBusinessAccessInviteApi::RespondBusinessAccessInvitesResponse : public Response
{
public:
    virtual ~RespondBusinessAccessInvitesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRespondToInvitesResponseArray Content;
};

}
