/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIAudienceSharingApi.h"

#include "OpenAPIAdAccountsAudiencesSharedAccountsList200Response.h"
#include "OpenAPIAudienceAccountType.h"
#include "OpenAPIAudiencesList200Response.h"
#include "OpenAPIBusinessSharedAudience.h"
#include "OpenAPIBusinessSharedAudienceResponse.h"
#include "OpenAPIError.h"
#include "OpenAPISharedAudience.h"
#include "OpenAPISharedAudienceResponse.h"

namespace OpenAPI
{

/* List accounts with access to an audience owned by an ad account
 *
 * List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::AdAccountsAudiencesSharedAccountsListRequest : public Request
{
public:
    virtual ~AdAccountsAudiencesSharedAccountsListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* Unique identifier of the audience to use to filter the results. */
	FString AudienceId;
	/* Filter accounts by account type. */
	OpenAPIAudienceAccountType AccountType;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
};

class OPENAPI_API OpenAPIAudienceSharingApi::AdAccountsAudiencesSharedAccountsListResponse : public Response
{
public:
    virtual ~AdAccountsAudiencesSharedAccountsListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIAdAccountsAudiencesSharedAccountsList200Response Content;
};

/* List accounts with access to an audience owned by a business
 *
 * List all ad accounts and/or businesses that have access to a specific audience. The audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business. If the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::BusinessAccountAudiencesSharedAccountsListRequest : public Request
{
public:
    virtual ~BusinessAccountAudiencesSharedAccountsListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* Unique identifier of the audience to use to filter the results. */
	FString AudienceId;
	/* Filter accounts by account type. */
	OpenAPIAudienceAccountType AccountType;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
};

class OPENAPI_API OpenAPIAudienceSharingApi::BusinessAccountAudiencesSharedAccountsListResponse : public Response
{
public:
    virtual ~BusinessAccountAudiencesSharedAccountsListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIAdAccountsAudiencesSharedAccountsList200Response Content;
};

/* List received audiences for a business
 *
 * Get a list of received audiences for the given business.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::SharedAudiencesForBusinessListRequest : public Request
{
public:
    virtual ~SharedAudiencesForBusinessListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
	enum class OrderEnum
	{
		Ascending,
		Descending,
  	};

	static FString EnumToString(const OrderEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, OrderEnum& EnumValue);
	/* The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. */
	TOptional<OrderEnum> Order;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
};

class OPENAPI_API OpenAPIAudienceSharingApi::SharedAudiencesForBusinessListResponse : public Response
{
public:
    virtual ~SharedAudiencesForBusinessListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIAudiencesList200Response Content;
};

/* Update audience sharing between ad accounts
 *
 * From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/create-and-manage-accounts&#39;&gt;Pinterest Business Hierarchy&lt;/a&gt; as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::UpdateAdAccountToAdAccountSharedAudienceRequest : public Request
{
public:
    virtual ~UpdateAdAccountToAdAccountSharedAudienceRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	OpenAPISharedAudience OpenAPISharedAudience;
};

class OPENAPI_API OpenAPIAudienceSharingApi::UpdateAdAccountToAdAccountSharedAudienceResponse : public Response
{
public:
    virtual ~UpdateAdAccountToAdAccountSharedAudienceResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISharedAudienceResponse Content;
};

/* Update audience sharing from an ad account to businesses
 *
 * From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::UpdateAdAccountToBusinessSharedAudienceRequest : public Request
{
public:
    virtual ~UpdateAdAccountToBusinessSharedAudienceRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	OpenAPIBusinessSharedAudience OpenAPIBusinessSharedAudience;
};

class OPENAPI_API OpenAPIAudienceSharingApi::UpdateAdAccountToBusinessSharedAudienceResponse : public Response
{
public:
    virtual ~UpdateAdAccountToBusinessSharedAudienceResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessSharedAudienceResponse Content;
};

/* Update audience sharing from a business to ad accounts
 *
 * From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. &lt;ul&gt; &lt;li&gt;If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.&lt;/li&gt; &lt;li&gt;If the business is the recipient of the audience, it can share with any of its owned ad accounts.&lt;/li&gt; &lt;/ul&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::UpdateBusinessToAdAccountSharedAudienceRequest : public Request
{
public:
    virtual ~UpdateBusinessToAdAccountSharedAudienceRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPISharedAudience OpenAPISharedAudience;
};

class OPENAPI_API OpenAPIAudienceSharingApi::UpdateBusinessToAdAccountSharedAudienceResponse : public Response
{
public:
    virtual ~UpdateBusinessToAdAccountSharedAudienceResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISharedAudienceResponse Content;
};

/* Update audience sharing between businesses
 *
 * From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
*/
class OPENAPI_API OpenAPIAudienceSharingApi::UpdateBusinessToBusinessSharedAudienceRequest : public Request
{
public:
    virtual ~UpdateBusinessToBusinessSharedAudienceRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of the requesting business. */
	FString BusinessId;
	OpenAPIBusinessSharedAudience OpenAPIBusinessSharedAudience;
};

class OPENAPI_API OpenAPIAudienceSharingApi::UpdateBusinessToBusinessSharedAudienceResponse : public Response
{
public:
    virtual ~UpdateBusinessToBusinessSharedAudienceResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIBusinessSharedAudienceResponse Content;
};

}
