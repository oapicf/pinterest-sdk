/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPITargetingTemplateApi.h"

#include "OpenAPIError.h"
#include "OpenAPITargetingTemplateCreate.h"
#include "OpenAPITargetingTemplateGetResponseData.h"
#include "OpenAPITargetingTemplateList200Response.h"
#include "OpenAPITargetingTemplateUpdateRequest.h"

namespace OpenAPI
{

/* Create targeting templates
 *
 * &lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;  &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.&lt;/p&gt;
*/
class OPENAPI_API OpenAPITargetingTemplateApi::TargetingTemplateCreateRequest : public Request
{
public:
    virtual ~TargetingTemplateCreateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* targeting template creation entity */
	OpenAPITargetingTemplateCreate OpenAPITargetingTemplateCreate;
};

class OPENAPI_API OpenAPITargetingTemplateApi::TargetingTemplateCreateResponse : public Response
{
public:
    virtual ~TargetingTemplateCreateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPITargetingTemplateGetResponseData Content;
};

/* List targeting templates
 *
 * Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;
*/
class OPENAPI_API OpenAPITargetingTemplateApi::TargetingTemplateListRequest : public Request
{
public:
    virtual ~TargetingTemplateListRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	enum class OrderEnum
	{
		Ascending,
		Descending,
  	};

	static FString EnumToString(const OrderEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, OrderEnum& EnumValue);
	/* The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. */
	TOptional<OrderEnum> Order;
	/* Include audience sizing in result or not */
	TOptional<bool> IncludeSizing;
	/* Search keyword for targeting templates */
	TOptional<FString> SearchQuery;
	/* Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information. */
	TOptional<int32> PageSize;
	/* Cursor used to fetch the next page of items */
	TOptional<FString> Bookmark;
};

class OPENAPI_API OpenAPITargetingTemplateApi::TargetingTemplateListResponse : public Response
{
public:
    virtual ~TargetingTemplateListResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPITargetingTemplateList200Response Content;
};

/* Update targeting templates
 *
 * &lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;
*/
class OPENAPI_API OpenAPITargetingTemplateApi::TargetingTemplateUpdateRequest : public Request
{
public:
    virtual ~TargetingTemplateUpdateRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Unique identifier of an ad account. */
	FString AdAccountId;
	/* Operation type and targeting template ID */
	OpenAPITargetingTemplateUpdateRequest OpenAPITargetingTemplateUpdateRequest;
};

class OPENAPI_API OpenAPITargetingTemplateApi::TargetingTemplateUpdateResponse : public Response
{
public:
    virtual ~TargetingTemplateUpdateResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

}
