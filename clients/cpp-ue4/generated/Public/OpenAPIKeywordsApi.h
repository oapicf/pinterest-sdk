/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * OpenAPI spec version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

class OPENAPI_API OpenAPIKeywordsApi
{
public:
	OpenAPIKeywordsApi();
	~OpenAPIKeywordsApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class CountryKeywordsMetricsGetRequest;
	class CountryKeywordsMetricsGetResponse;
	class KeywordsCreateRequest;
	class KeywordsCreateResponse;
	class KeywordsGetRequest;
	class KeywordsGetResponse;
	class KeywordsUpdateRequest;
	class KeywordsUpdateResponse;
	class TrendingKeywordsListRequest;
	class TrendingKeywordsListResponse;
	
    DECLARE_DELEGATE_OneParam(FCountryKeywordsMetricsGetDelegate, const CountryKeywordsMetricsGetResponse&);
    DECLARE_DELEGATE_OneParam(FKeywordsCreateDelegate, const KeywordsCreateResponse&);
    DECLARE_DELEGATE_OneParam(FKeywordsGetDelegate, const KeywordsGetResponse&);
    DECLARE_DELEGATE_OneParam(FKeywordsUpdateDelegate, const KeywordsUpdateResponse&);
    DECLARE_DELEGATE_OneParam(FTrendingKeywordsListDelegate, const TrendingKeywordsListResponse&);
    
    FHttpRequestPtr CountryKeywordsMetricsGet(const CountryKeywordsMetricsGetRequest& Request, const FCountryKeywordsMetricsGetDelegate& Delegate = FCountryKeywordsMetricsGetDelegate()) const;
    FHttpRequestPtr KeywordsCreate(const KeywordsCreateRequest& Request, const FKeywordsCreateDelegate& Delegate = FKeywordsCreateDelegate()) const;
    FHttpRequestPtr KeywordsGet(const KeywordsGetRequest& Request, const FKeywordsGetDelegate& Delegate = FKeywordsGetDelegate()) const;
    FHttpRequestPtr KeywordsUpdate(const KeywordsUpdateRequest& Request, const FKeywordsUpdateDelegate& Delegate = FKeywordsUpdateDelegate()) const;
    FHttpRequestPtr TrendingKeywordsList(const TrendingKeywordsListRequest& Request, const FTrendingKeywordsListDelegate& Delegate = FTrendingKeywordsListDelegate()) const;
    
private:
    void OnCountryKeywordsMetricsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCountryKeywordsMetricsGetDelegate Delegate) const;
    void OnKeywordsCreateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FKeywordsCreateDelegate Delegate) const;
    void OnKeywordsGetResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FKeywordsGetDelegate Delegate) const;
    void OnKeywordsUpdateResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FKeywordsUpdateDelegate Delegate) const;
    void OnTrendingKeywordsListResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FTrendingKeywordsListDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
