/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.Error;
import org.openapitools.model.Granularity;
import org.joda.time.LocalDate;
import org.openapitools.model.ProductGroupAnalyticsResponseInner;
import org.openapitools.model.ProductGroupPromotionCreateRequest;
import org.openapitools.model.ProductGroupPromotionResponse;
import org.openapitools.model.ProductGroupPromotionUpdateRequest;
import org.openapitools.model.ProductGroupPromotionsList200Response;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.jaxrs.ext.multipart.Attachment;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
import org.apache.cxf.jaxrs.provider.MultipartProvider;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Pinterest REST API
 *
 * <p>Pinterest's REST API
 *
 * API tests for ProductGroupPromotionsApi.
 */
public class ProductGroupPromotionsApiTest {

    private ProductGroupPromotionsApi api;

    @Before
    public void setup() {
        List<?> providers = Arrays.asList(new JacksonJsonProvider(), new JacksonXMLProvider(), new MultipartProvider());

        api = JAXRSClientFactory.create("https://api.pinterest.com/v5", ProductGroupPromotionsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Create product group promotions
     *
     * Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a &#39;product group promotion.&#39;)
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void productGroupPromotionsCreateTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        ProductGroupPromotionCreateRequest productGroupPromotionCreateRequest = null;

        // TODO: delete this line and uncomment the next
        // ProductGroupPromotionResponse response = api.productGroupPromotionsCreate(adAccountId, productGroupPromotionCreateRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Get a product group promotion by id
     *
     * Get a product group promotion by id
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void productGroupPromotionsGetTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        String productGroupPromotionId = null;

        // TODO: delete this line and uncomment the next
        // ProductGroupPromotionResponse response = api.productGroupPromotionsGet(adAccountId, productGroupPromotionId);
        // TODO: complete test assertions
    }
    
    /**
     * Get product group promotions
     *
     * List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  &lt;b&gt;Note:&lt;/b&gt; ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void productGroupPromotionsListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        List<@Pattern(regexp = "^\\d+$")String> productGroupPromotionIds = null;
        List<String> entityStatuses = null;
        String adGroupId = null;
        Integer pageSize = null;
        String order = null;
        String bookmark = null;

        // TODO: delete this line and uncomment the next
        // ProductGroupPromotionsList200Response response = api.productGroupPromotionsList(adAccountId, productGroupPromotionIds, entityStatuses, adGroupId, pageSize, order, bookmark);
        // TODO: complete test assertions
    }
    
    /**
     * Update product group promotions
     *
     * Update multiple existing Product Group Promotions (by product_group_id)
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void productGroupPromotionsUpdateTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        ProductGroupPromotionUpdateRequest productGroupPromotionUpdateRequest = null;

        // TODO: delete this line and uncomment the next
        // ProductGroupPromotionResponse response = api.productGroupPromotionsUpdate(adAccountId, productGroupPromotionUpdateRequest);
        // TODO: complete test assertions
    }
    
    /**
     * Get product group analytics
     *
     * Get analytics for the specified product groups in the specified &lt;code&gt;ad_account_id&lt;/code&gt;, filtered by the specified options. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void productGroupsAnalyticsTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        List<@Pattern(regexp = "^\\d+$")String> productGroupIds = null;
        List<String> columns = null;
        Granularity granularity = null;
        Integer clickWindowDays = null;
        Integer engagementWindowDays = null;
        Integer viewWindowDays = null;
        String conversionReportTime = null;

        // TODO: delete this line and uncomment the next
        // List<ProductGroupAnalyticsResponseInner> response = api.productGroupsAnalytics(adAccountId, startDate, endDate, productGroupIds, columns, granularity, clickWindowDays, engagementWindowDays, viewWindowDays, conversionReportTime);
        // TODO: complete test assertions
    }
    
}
