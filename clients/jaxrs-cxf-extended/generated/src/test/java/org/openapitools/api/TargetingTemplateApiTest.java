/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.Error;
import org.openapitools.model.TargetingTemplateCreate;
import org.openapitools.model.TargetingTemplateGetResponseData;
import org.openapitools.model.TargetingTemplateList200Response;
import org.openapitools.model.TargetingTemplateUpdateRequest;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.jaxrs.ext.multipart.Attachment;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
import org.apache.cxf.jaxrs.provider.MultipartProvider;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Pinterest REST API
 *
 * <p>Pinterest's REST API
 *
 * API tests for TargetingTemplateApi.
 */
public class TargetingTemplateApiTest {

    private TargetingTemplateApi api;

    @Before
    public void setup() {
        List<?> providers = Arrays.asList(new JacksonJsonProvider(), new JacksonXMLProvider(), new MultipartProvider());

        api = JAXRSClientFactory.create("https://api.pinterest.com/v5", TargetingTemplateApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * Create targeting templates
     *
     * &lt;p&gt;Targeting templates allow advertisers to save a set of targeting details including audience lists,  keywords &amp; interest, demographics, and placements to use more than once during the campaign creation process.&lt;/p&gt;  &lt;p&gt;Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse   performance targeting from prior campaigns for new campaigns.&lt;/p&gt;
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void targetingTemplateCreateTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        TargetingTemplateCreate targetingTemplateCreate = null;

        // TODO: delete this line and uncomment the next
        // TargetingTemplateGetResponseData response = api.targetingTemplateCreate(adAccountId, targetingTemplateCreate);
        // TODO: complete test assertions
    }
    
    /**
     * List targeting templates
     *
     * Get a list of the targeting templates in the specified &lt;code&gt;ad_account_id&lt;/code&gt;
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void targetingTemplateListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        String order = null;
        Boolean includeSizing = null;
        String searchQuery = null;
        Integer pageSize = null;
        String bookmark = null;

        // TODO: delete this line and uncomment the next
        // TargetingTemplateList200Response response = api.targetingTemplateList(adAccountId, order, includeSizing, searchQuery, pageSize, bookmark);
        // TODO: complete test assertions
    }
    
    /**
     * Update targeting templates
     *
     * &lt;p&gt;Update the targeting template given advertiser ID and targeting template ID&lt;/p&gt;
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void targetingTemplateUpdateTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        TargetingTemplateUpdateRequest targetingTemplateUpdateRequest = null;

        // TODO: delete this line and uncomment the next
        // api.targetingTemplateUpdate(adAccountId, targetingTemplateUpdateRequest);
    }
    
}
