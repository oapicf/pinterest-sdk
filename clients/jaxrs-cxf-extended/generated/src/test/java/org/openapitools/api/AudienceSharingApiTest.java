/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.api;

import org.openapitools.model.AdAccountsAudiencesSharedAccountsList200Response;
import org.openapitools.model.AudienceAccountType;
import org.openapitools.model.AudiencesList200Response;
import org.openapitools.model.BusinessSharedAudience;
import org.openapitools.model.BusinessSharedAudienceResponse;
import org.openapitools.model.Error;
import org.openapitools.model.SharedAudience;
import org.openapitools.model.SharedAudienceResponse;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;
import org.apache.cxf.jaxrs.ext.multipart.Attachment;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
import org.apache.cxf.jaxrs.provider.MultipartProvider;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Pinterest REST API
 *
 * <p>Pinterest's REST API
 *
 * API tests for AudienceSharingApi.
 */
public class AudienceSharingApiTest {

    private AudienceSharingApi api;

    @Before
    public void setup() {
        List<?> providers = Arrays.asList(new JacksonJsonProvider(), new JacksonXMLProvider(), new MultipartProvider());

        api = JAXRSClientFactory.create("https://api.pinterest.com/v5", AudienceSharingApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);

        ClientConfiguration config = WebClient.getConfig(client);
    }

    
    /**
     * List accounts with access to an audience owned by an ad account
     *
     * List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void adAccountsAudiencesSharedAccountsListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        String audienceId = null;
        AudienceAccountType accountType = null;
        Integer pageSize = null;
        String bookmark = null;

        // TODO: delete this line and uncomment the next
        // AdAccountsAudiencesSharedAccountsList200Response response = api.adAccountsAudiencesSharedAccountsList(adAccountId, audienceId, accountType, pageSize, bookmark);
        // TODO: complete test assertions
    }
    
    /**
     * List accounts with access to an audience owned by a business
     *
     * List all ad accounts and/or businesses that have access to a specific audience. The audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business. If the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void businessAccountAudiencesSharedAccountsListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String businessId = null;
        String audienceId = null;
        AudienceAccountType accountType = null;
        Integer pageSize = null;
        String bookmark = null;

        // TODO: delete this line and uncomment the next
        // AdAccountsAudiencesSharedAccountsList200Response response = api.businessAccountAudiencesSharedAccountsList(businessId, audienceId, accountType, pageSize, bookmark);
        // TODO: complete test assertions
    }
    
    /**
     * List received audiences for a business
     *
     * Get a list of received audiences for the given business.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void sharedAudiencesForBusinessListTest() throws Exception {
        // TODO: assign appropriate parameter values
        String businessId = null;
        String bookmark = null;
        String order = null;
        Integer pageSize = null;

        // TODO: delete this line and uncomment the next
        // AudiencesList200Response response = api.sharedAudiencesForBusinessList(businessId, bookmark, order, pageSize);
        // TODO: complete test assertions
    }
    
    /**
     * Update audience sharing between ad accounts
     *
     * From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/create-and-manage-accounts&#39;&gt;Pinterest Business Hierarchy&lt;/a&gt; as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void updateAdAccountToAdAccountSharedAudienceTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        SharedAudience sharedAudience = null;

        // TODO: delete this line and uncomment the next
        // SharedAudienceResponse response = api.updateAdAccountToAdAccountSharedAudience(adAccountId, sharedAudience);
        // TODO: complete test assertions
    }
    
    /**
     * Update audience sharing from an ad account to businesses
     *
     * From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void updateAdAccountToBusinessSharedAudienceTest() throws Exception {
        // TODO: assign appropriate parameter values
        String adAccountId = null;
        BusinessSharedAudience businessSharedAudience = null;

        // TODO: delete this line and uncomment the next
        // BusinessSharedAudienceResponse response = api.updateAdAccountToBusinessSharedAudience(adAccountId, businessSharedAudience);
        // TODO: complete test assertions
    }
    
    /**
     * Update audience sharing from a business to ad accounts
     *
     * From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. &lt;ul&gt; &lt;li&gt;If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.&lt;/li&gt; &lt;li&gt;If the business is the recipient of the audience, it can share with any of its owned ad accounts.&lt;/li&gt; &lt;/ul&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void updateBusinessToAdAccountSharedAudienceTest() throws Exception {
        // TODO: assign appropriate parameter values
        String businessId = null;
        SharedAudience sharedAudience = null;

        // TODO: delete this line and uncomment the next
        // SharedAudienceResponse response = api.updateBusinessToAdAccountSharedAudience(businessId, sharedAudience);
        // TODO: complete test assertions
    }
    
    /**
     * Update audience sharing between businesses
     *
     * From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.&lt;br&gt; This endpoint is not available to all apps.&lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.
     *
     * @throws ApiException if the API call fails
     */
    @Test
    public void updateBusinessToBusinessSharedAudienceTest() throws Exception {
        // TODO: assign appropriate parameter values
        String businessId = null;
        BusinessSharedAudience businessSharedAudience = null;

        // TODO: delete this line and uncomment the next
        // BusinessSharedAudienceResponse response = api.updateBusinessToBusinessSharedAudience(businessId, businessSharedAudience);
        // TODO: complete test assertions
    }
    
}
