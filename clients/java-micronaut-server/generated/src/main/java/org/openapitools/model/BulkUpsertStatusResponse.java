/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.BulkUpsertStatus;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ID of the bulk request.
 */
@Schema(name = "BulkUpsertStatusResponse", description = "ID of the bulk request.")
@JsonPropertyOrder({
  BulkUpsertStatusResponse.JSON_PROPERTY_STATUS,
  BulkUpsertStatusResponse.JSON_PROPERTY_RESULT_URL
})
@JsonTypeName("BulkUpsertStatusResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class BulkUpsertStatusResponse {
    public static final String JSON_PROPERTY_STATUS = "status";
    private BulkUpsertStatus status;

    public static final String JSON_PROPERTY_RESULT_URL = "result_url";
    private String resultUrl;

    public BulkUpsertStatusResponse() {
    }

    public BulkUpsertStatusResponse status(BulkUpsertStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @Nullable
    @Schema(name = "status", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BulkUpsertStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(BulkUpsertStatus status) {
        this.status = status;
    }

    public BulkUpsertStatusResponse resultUrl(String resultUrl) {
        this.resultUrl = resultUrl;
        return this;
    }

    /**
     * Get resultUrl
     * @return resultUrl
     */
    @Nullable
    @Schema(name = "result_url", example = "https://pinterest-waterloo.s3.us-east-1.amazonaws.com/bulk_framework/AD_ENTITY_UPSERT/549763856637-1659122537-0b4d77d3-f620-48ce-bec9-616106afb8d4/(...)", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RESULT_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getResultUrl() {
        return resultUrl;
    }

    @JsonProperty(JSON_PROPERTY_RESULT_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResultUrl(String resultUrl) {
        this.resultUrl = resultUrl;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BulkUpsertStatusResponse bulkUpsertStatusResponse = (BulkUpsertStatusResponse) o;
        return Objects.equals(this.status, bulkUpsertStatusResponse.status) &&
            Objects.equals(this.resultUrl, bulkUpsertStatusResponse.resultUrl);
    }

    @Override
    public int hashCode() {
        return Objects.hash(status, resultUrl);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BulkUpsertStatusResponse {\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    resultUrl: ").append(toIndentedString(resultUrl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

