/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * UserWebsiteVerificationCode
 */
@JsonPropertyOrder({
  UserWebsiteVerificationCode.JSON_PROPERTY_VERIFICATION_CODE,
  UserWebsiteVerificationCode.JSON_PROPERTY_DNS_TXT_RECORD,
  UserWebsiteVerificationCode.JSON_PROPERTY_METATAG,
  UserWebsiteVerificationCode.JSON_PROPERTY_FILENAME,
  UserWebsiteVerificationCode.JSON_PROPERTY_FILE_CONTENT
})
@JsonTypeName("UserWebsiteVerificationCode")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class UserWebsiteVerificationCode {
    public static final String JSON_PROPERTY_VERIFICATION_CODE = "verification_code";
    private String verificationCode;

    public static final String JSON_PROPERTY_DNS_TXT_RECORD = "dns_txt_record";
    private String dnsTxtRecord;

    public static final String JSON_PROPERTY_METATAG = "metatag";
    private String metatag;

    public static final String JSON_PROPERTY_FILENAME = "filename";
    private String filename;

    public static final String JSON_PROPERTY_FILE_CONTENT = "file_content";
    private String fileContent;

    public UserWebsiteVerificationCode() {
    }

    public UserWebsiteVerificationCode verificationCode(String verificationCode) {
        this.verificationCode = verificationCode;
        return this;
    }

    /**
     * Code to check against the user claiming the website
     * @return verificationCode
     */
    @Nullable
    @Schema(name = "verification_code", example = "e1edcc1a43976c646367e9c6c9a9b7b6", description = "Code to check against the user claiming the website", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_VERIFICATION_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVerificationCode() {
        return verificationCode;
    }

    @JsonProperty(JSON_PROPERTY_VERIFICATION_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVerificationCode(String verificationCode) {
        this.verificationCode = verificationCode;
    }

    public UserWebsiteVerificationCode dnsTxtRecord(String dnsTxtRecord) {
        this.dnsTxtRecord = dnsTxtRecord;
        return this;
    }

    /**
     * DNS TXT record to check against for the website to be claimed
     * @return dnsTxtRecord
     */
    @Nullable
    @Schema(name = "dns_txt_record", example = "pinterest-site-verification=e1edcc1a43976c646367e9c6c9a9b7b6", description = "DNS TXT record to check against for the website to be claimed", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DNS_TXT_RECORD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDnsTxtRecord() {
        return dnsTxtRecord;
    }

    @JsonProperty(JSON_PROPERTY_DNS_TXT_RECORD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnsTxtRecord(String dnsTxtRecord) {
        this.dnsTxtRecord = dnsTxtRecord;
    }

    public UserWebsiteVerificationCode metatag(String metatag) {
        this.metatag = metatag;
        return this;
    }

    /**
     * Metatag the verification process searchs for the website to be claimed
     * @return metatag
     */
    @Nullable
    @Schema(name = "metatag", example = "<meta name=\"p:domain_verify\" content=\"e1edcc1a43976c646367e9c6c9a9b7b6\"/>", description = "Metatag the verification process searchs for the website to be claimed", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_METATAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMetatag() {
        return metatag;
    }

    @JsonProperty(JSON_PROPERTY_METATAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMetatag(String metatag) {
        this.metatag = metatag;
    }

    public UserWebsiteVerificationCode filename(String filename) {
        this.filename = filename;
        return this;
    }

    /**
     * File expected to find on the website being claimed
     * @return filename
     */
    @Nullable
    @Schema(name = "filename", example = "pinterest-e1edc.html", description = "File expected to find on the website being claimed", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FILENAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFilename() {
        return filename;
    }

    @JsonProperty(JSON_PROPERTY_FILENAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFilename(String filename) {
        this.filename = filename;
    }

    public UserWebsiteVerificationCode fileContent(String fileContent) {
        this.fileContent = fileContent;
        return this;
    }

    /**
     * A full html file to upload to the website in order for it to be claimed
     * @return fileContent
     */
    @Nullable
    @Schema(name = "file_content", description = "A full html file to upload to the website in order for it to be claimed", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FILE_CONTENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFileContent() {
        return fileContent;
    }

    @JsonProperty(JSON_PROPERTY_FILE_CONTENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFileContent(String fileContent) {
        this.fileContent = fileContent;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserWebsiteVerificationCode userWebsiteVerificationCode = (UserWebsiteVerificationCode) o;
        return Objects.equals(this.verificationCode, userWebsiteVerificationCode.verificationCode) &&
            Objects.equals(this.dnsTxtRecord, userWebsiteVerificationCode.dnsTxtRecord) &&
            Objects.equals(this.metatag, userWebsiteVerificationCode.metatag) &&
            Objects.equals(this.filename, userWebsiteVerificationCode.filename) &&
            Objects.equals(this.fileContent, userWebsiteVerificationCode.fileContent);
    }

    @Override
    public int hashCode() {
        return Objects.hash(verificationCode, dnsTxtRecord, metatag, filename, fileContent);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserWebsiteVerificationCode {\n");
        sb.append("    verificationCode: ").append(toIndentedString(verificationCode)).append("\n");
        sb.append("    dnsTxtRecord: ").append(toIndentedString(dnsTxtRecord)).append("\n");
        sb.append("    metatag: ").append(toIndentedString(metatag)).append("\n");
        sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
        sb.append("    fileContent: ").append(toIndentedString(fileContent)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

