/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.AdvancedAuctionItemsGetRecord;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Request object used to get bid options values for a batch of retail catalog items
 */
@Schema(name = "AdvancedAuctionItemsGetRequest", description = "Request object used to get bid options values for a batch of retail catalog items")
@JsonPropertyOrder({
  AdvancedAuctionItemsGetRequest.JSON_PROPERTY_CATALOG_ID,
  AdvancedAuctionItemsGetRequest.JSON_PROPERTY_ITEMS
})
@JsonTypeName("AdvancedAuctionItemsGetRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AdvancedAuctionItemsGetRequest {
    public static final String JSON_PROPERTY_CATALOG_ID = "catalog_id";
    private String catalogId;

    public static final String JSON_PROPERTY_ITEMS = "items";
    private List<AdvancedAuctionItemsGetRecord> items = new ArrayList<>();

    public AdvancedAuctionItemsGetRequest(String catalogId, List<AdvancedAuctionItemsGetRecord> items) {
        this.catalogId = catalogId;
        this.items = items;
    }

    public AdvancedAuctionItemsGetRequest catalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }

    /**
     * Catalog id pertaining to the retail item
     * @return catalogId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @Schema(name = "catalog_id", example = "2680059592705", description = "Catalog id pertaining to the retail item", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCatalogId() {
        return catalogId;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogId(String catalogId) {
        this.catalogId = catalogId;
    }

    public AdvancedAuctionItemsGetRequest items(List<AdvancedAuctionItemsGetRecord> items) {
        this.items = items;
        return this;
    }

    public AdvancedAuctionItemsGetRequest addItemsItem(AdvancedAuctionItemsGetRecord itemsItem) {
        this.items.add(itemsItem);
        return this;
    }

    /**
     * A list of retail catalog items to fetch bid options for
     * @return items
     */
    @NotNull
    @Size(min=1, max=10000)
    @Schema(name = "items", description = "A list of retail catalog items to fetch bid options for", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<AdvancedAuctionItemsGetRecord> getItems() {
        return items;
    }

    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setItems(List<AdvancedAuctionItemsGetRecord> items) {
        this.items = items;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdvancedAuctionItemsGetRequest advancedAuctionItemsGetRequest = (AdvancedAuctionItemsGetRequest) o;
        return Objects.equals(this.catalogId, advancedAuctionItemsGetRequest.catalogId) &&
            Objects.equals(this.items, advancedAuctionItemsGetRequest.items);
    }

    @Override
    public int hashCode() {
        return Objects.hash(catalogId, items);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdvancedAuctionItemsGetRequest {\n");
        sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

