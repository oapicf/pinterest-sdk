/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.InviteBusinessRoleBinding;
import org.openapitools.model.InviteExceptionResponse;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * UpdateInvitesResultsResponseArrayItemsInner
 */
@JsonPropertyOrder({
  UpdateInvitesResultsResponseArrayItemsInner.JSON_PROPERTY_EXCEPTION,
  UpdateInvitesResultsResponseArrayItemsInner.JSON_PROPERTY_INVITE
})
@JsonTypeName("UpdateInvitesResultsResponseArray_items_inner")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class UpdateInvitesResultsResponseArrayItemsInner {
    public static final String JSON_PROPERTY_EXCEPTION = "exception";
    private InviteExceptionResponse exception;

    public static final String JSON_PROPERTY_INVITE = "invite";
    private InviteBusinessRoleBinding invite;

    public UpdateInvitesResultsResponseArrayItemsInner() {
    }

    public UpdateInvitesResultsResponseArrayItemsInner exception(InviteExceptionResponse exception) {
        this.exception = exception;
        return this;
    }

    /**
     * Get exception
     * @return exception
     */
    @Valid
    @Nullable
    @Schema(name = "exception", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_EXCEPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public InviteExceptionResponse getException() {
        return exception;
    }

    @JsonProperty(JSON_PROPERTY_EXCEPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setException(InviteExceptionResponse exception) {
        this.exception = exception;
    }

    public UpdateInvitesResultsResponseArrayItemsInner invite(InviteBusinessRoleBinding invite) {
        this.invite = invite;
        return this;
    }

    /**
     * Get invite
     * @return invite
     */
    @Valid
    @Nullable
    @Schema(name = "invite", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INVITE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public InviteBusinessRoleBinding getInvite() {
        return invite;
    }

    @JsonProperty(JSON_PROPERTY_INVITE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInvite(InviteBusinessRoleBinding invite) {
        this.invite = invite;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateInvitesResultsResponseArrayItemsInner updateInvitesResultsResponseArrayItemsInner = (UpdateInvitesResultsResponseArrayItemsInner) o;
        return Objects.equals(this.exception, updateInvitesResultsResponseArrayItemsInner.exception) &&
            Objects.equals(this.invite, updateInvitesResultsResponseArrayItemsInner.invite);
    }

    @Override
    public int hashCode() {
        return Objects.hash(exception, invite);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UpdateInvitesResultsResponseArrayItemsInner {\n");
        sb.append("    exception: ").append(toIndentedString(exception)).append("\n");
        sb.append("    invite: ").append(toIndentedString(invite)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

