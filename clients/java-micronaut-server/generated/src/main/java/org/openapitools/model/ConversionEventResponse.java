/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.ConversionTagType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ConversionEventResponse
 */
@JsonPropertyOrder({
  ConversionEventResponse.JSON_PROPERTY_CONVERSION_EVENT,
  ConversionEventResponse.JSON_PROPERTY_CONVERSION_TAG_ID,
  ConversionEventResponse.JSON_PROPERTY_AD_ACCOUNT_ID,
  ConversionEventResponse.JSON_PROPERTY_CREATED_TIME
})
@JsonTypeName("ConversionEventResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class ConversionEventResponse {
    public static final String JSON_PROPERTY_CONVERSION_EVENT = "conversion_event";
    private ConversionTagType conversionEvent;

    public static final String JSON_PROPERTY_CONVERSION_TAG_ID = "conversion_tag_id";
    private String conversionTagId;

    public static final String JSON_PROPERTY_AD_ACCOUNT_ID = "ad_account_id";
    private String adAccountId;

    public static final String JSON_PROPERTY_CREATED_TIME = "created_time";
    private Integer createdTime;

    public ConversionEventResponse() {
    }

    public ConversionEventResponse conversionEvent(ConversionTagType conversionEvent) {
        this.conversionEvent = conversionEvent;
        return this;
    }

    /**
     * Get conversionEvent
     * @return conversionEvent
     */
    @Nullable
    @Schema(name = "conversion_event", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CONVERSION_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ConversionTagType getConversionEvent() {
        return conversionEvent;
    }

    @JsonProperty(JSON_PROPERTY_CONVERSION_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConversionEvent(ConversionTagType conversionEvent) {
        this.conversionEvent = conversionEvent;
    }

    public ConversionEventResponse conversionTagId(String conversionTagId) {
        this.conversionTagId = conversionTagId;
        return this;
    }

    /**
     * Id of the tag.
     * @return conversionTagId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "conversion_tag_id", example = "2614324385652", description = "Id of the tag.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CONVERSION_TAG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getConversionTagId() {
        return conversionTagId;
    }

    @JsonProperty(JSON_PROPERTY_CONVERSION_TAG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConversionTagId(String conversionTagId) {
        this.conversionTagId = conversionTagId;
    }

    public ConversionEventResponse adAccountId(String adAccountId) {
        this.adAccountId = adAccountId;
        return this;
    }

    /**
     * Id of the ad account.
     * @return adAccountId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "ad_account_id", example = "549757463328", description = "Id of the ad account.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AD_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAdAccountId() {
        return adAccountId;
    }

    @JsonProperty(JSON_PROPERTY_AD_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdAccountId(String adAccountId) {
        this.adAccountId = adAccountId;
    }

    public ConversionEventResponse createdTime(Integer createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Creation date in epoch format.
     * @return createdTime
     */
    @Nullable
    @Schema(name = "created_time", example = "1564768710", description = "Creation date in epoch format.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCreatedTime() {
        return createdTime;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedTime(Integer createdTime) {
        this.createdTime = createdTime;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConversionEventResponse conversionEventResponse = (ConversionEventResponse) o;
        return Objects.equals(this.conversionEvent, conversionEventResponse.conversionEvent) &&
            Objects.equals(this.conversionTagId, conversionEventResponse.conversionTagId) &&
            Objects.equals(this.adAccountId, conversionEventResponse.adAccountId) &&
            Objects.equals(this.createdTime, conversionEventResponse.createdTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(conversionEvent, conversionTagId, adAccountId, createdTime);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConversionEventResponse {\n");
        sb.append("    conversionEvent: ").append(toIndentedString(conversionEvent)).append("\n");
        sb.append("    conversionTagId: ").append(toIndentedString(conversionTagId)).append("\n");
        sb.append("    adAccountId: ").append(toIndentedString(adAccountId)).append("\n");
        sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

