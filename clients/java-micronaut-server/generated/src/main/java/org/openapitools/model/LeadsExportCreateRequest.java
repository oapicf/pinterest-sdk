/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * LeadsExportCreateRequest
 */
@JsonPropertyOrder({
  LeadsExportCreateRequest.JSON_PROPERTY_START_DATE,
  LeadsExportCreateRequest.JSON_PROPERTY_END_DATE,
  LeadsExportCreateRequest.JSON_PROPERTY_AD_ID
})
@JsonTypeName("LeadsExportCreateRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class LeadsExportCreateRequest {
    public static final String JSON_PROPERTY_START_DATE = "start_date";
    private String startDate;

    public static final String JSON_PROPERTY_END_DATE = "end_date";
    private String endDate;

    public static final String JSON_PROPERTY_AD_ID = "ad_id";
    private String adId;

    public LeadsExportCreateRequest(String startDate, String endDate, String adId) {
        this.startDate = startDate;
        this.endDate = endDate;
        this.adId = adId;
    }

    public LeadsExportCreateRequest startDate(String startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * Export leads collected on and after start date (UTC). Format: YYYY-MM-DD
     * @return startDate
     */
    @NotNull
    @Pattern(regexp="^(\\d{4})-(\\d{2})-(\\d{2})$")
    @Schema(name = "start_date", example = "2020-12-20", description = "Export leads collected on and after start date (UTC). Format: YYYY-MM-DD", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_START_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getStartDate() {
        return startDate;
    }

    @JsonProperty(JSON_PROPERTY_START_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    public LeadsExportCreateRequest endDate(String endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * Export leads collected on and before end date (UTC). Format: YYYY-MM-DD
     * @return endDate
     */
    @NotNull
    @Pattern(regexp="^(\\d{4})-(\\d{2})-(\\d{2})$")
    @Schema(name = "end_date", example = "2020-12-20", description = "Export leads collected on and before end date (UTC). Format: YYYY-MM-DD", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_END_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getEndDate() {
        return endDate;
    }

    @JsonProperty(JSON_PROPERTY_END_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    public LeadsExportCreateRequest adId(String adId) {
        this.adId = adId;
        return this;
    }

    /**
     * ID for the ad collecting leads
     * @return adId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @Schema(name = "ad_id", example = "687201361754", description = "ID for the ad collecting leads", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_AD_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAdId() {
        return adId;
    }

    @JsonProperty(JSON_PROPERTY_AD_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAdId(String adId) {
        this.adId = adId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LeadsExportCreateRequest leadsExportCreateRequest = (LeadsExportCreateRequest) o;
        return Objects.equals(this.startDate, leadsExportCreateRequest.startDate) &&
            Objects.equals(this.endDate, leadsExportCreateRequest.endDate) &&
            Objects.equals(this.adId, leadsExportCreateRequest.adId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(startDate, endDate, adId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LeadsExportCreateRequest {\n");
        sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
        sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
        sb.append("    adId: ").append(toIndentedString(adId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

