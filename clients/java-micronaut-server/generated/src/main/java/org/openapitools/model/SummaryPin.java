/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.PinMedia;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Summarized pin information
 */
@Schema(name = "SummaryPin", description = "Summarized pin information")
@JsonPropertyOrder({
  SummaryPin.JSON_PROPERTY_MEDIA,
  SummaryPin.JSON_PROPERTY_ALT_TEXT,
  SummaryPin.JSON_PROPERTY_LINK,
  SummaryPin.JSON_PROPERTY_TITLE,
  SummaryPin.JSON_PROPERTY_DESCRIPTION
})
@JsonTypeName("SummaryPin")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class SummaryPin {
    public static final String JSON_PROPERTY_MEDIA = "media";
    private PinMedia media;

    public static final String JSON_PROPERTY_ALT_TEXT = "alt_text";
    private String altText;

    public static final String JSON_PROPERTY_LINK = "link";
    private String link;

    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public SummaryPin() {
    }

    /**
     * Get media
     * @return media
     */
    @Valid
    @Nullable
    @Schema(name = "media", accessMode = Schema.AccessMode.READ_ONLY, requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MEDIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PinMedia getMedia() {
        return media;
    }

    public SummaryPin altText(String altText) {
        this.altText = altText;
        return this;
    }

    /**
     * Get altText
     * @return altText
     */
    @Nullable
    @Size(max=500)
    @Schema(name = "alt_text", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ALT_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAltText() {
        return altText;
    }

    @JsonProperty(JSON_PROPERTY_ALT_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAltText(String altText) {
        this.altText = altText;
    }

    public SummaryPin link(String link) {
        this.link = link;
        return this;
    }

    /**
     * Get link
     * @return link
     */
    @Nullable
    @Size(max=2048)
    @Schema(name = "link", example = "https://www.pinterest.com/", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_LINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLink() {
        return link;
    }

    @JsonProperty(JSON_PROPERTY_LINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLink(String link) {
        this.link = link;
    }

    public SummaryPin title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     * @return title
     */
    @Nullable
    @Schema(name = "title", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTitle() {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitle(String title) {
        this.title = title;
    }

    public SummaryPin description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * @return description
     */
    @Nullable
    @Schema(name = "description", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SummaryPin summaryPin = (SummaryPin) o;
        return Objects.equals(this.media, summaryPin.media) &&
            Objects.equals(this.altText, summaryPin.altText) &&
            Objects.equals(this.link, summaryPin.link) &&
            Objects.equals(this.title, summaryPin.title) &&
            Objects.equals(this.description, summaryPin.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(media, altText, link, title, description);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SummaryPin {\n");
        sb.append("    media: ").append(toIndentedString(media)).append("\n");
        sb.append("    altText: ").append(toIndentedString(altText)).append("\n");
        sb.append("    link: ").append(toIndentedString(link)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

