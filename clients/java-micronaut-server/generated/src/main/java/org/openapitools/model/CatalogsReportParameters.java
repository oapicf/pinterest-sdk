/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import org.openapitools.model.CatalogsHotelReportParameters;
import org.openapitools.model.CatalogsHotelReportParametersReport;
import org.openapitools.model.CatalogsRetailReportParameters;
import org.openapitools.model.CatalogsType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Report parameters
 */
@Schema(name = "CatalogsReportParameters", description = "Report parameters")
@JsonPropertyOrder({
  CatalogsReportParameters.JSON_PROPERTY_CATALOG_TYPE,
  CatalogsReportParameters.JSON_PROPERTY_REPORT
})
@JsonTypeName("CatalogsReportParameters")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@JsonIgnoreProperties(
  value = "catalog_type", // ignore manually set catalog_type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the catalog_type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "catalog_type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = CatalogsHotelReportParameters.class, name = "HOTEL"),
  @JsonSubTypes.Type(value = CatalogsRetailReportParameters.class, name = "RETAIL"),
})

@Introspected
public class CatalogsReportParameters {
    public static final String JSON_PROPERTY_CATALOG_TYPE = "catalog_type";
    protected CatalogsType catalogType;

    public static final String JSON_PROPERTY_REPORT = "report";
    private CatalogsHotelReportParametersReport report;

    public CatalogsReportParameters(CatalogsType catalogType, CatalogsHotelReportParametersReport report) {
        this.catalogType = catalogType;
        this.report = report;
    }

    public CatalogsReportParameters catalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
        return this;
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    @NotNull
    @Schema(name = "catalog_type", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsType getCatalogType() {
        return catalogType;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
    }

    public CatalogsReportParameters report(CatalogsHotelReportParametersReport report) {
        this.report = report;
        return this;
    }

    /**
     * Get report
     * @return report
     */
    @Valid
    @NotNull
    @Schema(name = "report", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_REPORT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsHotelReportParametersReport getReport() {
        return report;
    }

    @JsonProperty(JSON_PROPERTY_REPORT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setReport(CatalogsHotelReportParametersReport report) {
        this.report = report;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsReportParameters catalogsReportParameters = (CatalogsReportParameters) o;
        return Objects.equals(this.catalogType, catalogsReportParameters.catalogType) &&
            Objects.equals(this.report, catalogsReportParameters.report);
    }

    @Override
    public int hashCode() {
        return Objects.hash(catalogType, report);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsReportParameters {\n");
        sb.append("    catalogType: ").append(toIndentedString(catalogType)).append("\n");
        sb.append("    report: ").append(toIndentedString(report)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

