/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.TopPinsAnalyticsResponseDateAvailability;
import org.openapitools.model.TopPinsAnalyticsResponsePinsInner;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * TopPinsAnalyticsResponse
 */
@JsonPropertyOrder({
  TopPinsAnalyticsResponse.JSON_PROPERTY_DATE_AVAILABILITY,
  TopPinsAnalyticsResponse.JSON_PROPERTY_PINS,
  TopPinsAnalyticsResponse.JSON_PROPERTY_SORT_BY
})
@JsonTypeName("TopPinsAnalyticsResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class TopPinsAnalyticsResponse {
    public static final String JSON_PROPERTY_DATE_AVAILABILITY = "date_availability";
    private TopPinsAnalyticsResponseDateAvailability dateAvailability;

    public static final String JSON_PROPERTY_PINS = "pins";
    private List<@Valid TopPinsAnalyticsResponsePinsInner> pins = null;

    /**
     * Gets or Sets sortBy
     */
    public enum SortByEnum {
        ENGAGEMENT("ENGAGEMENT"),
        SAVE("SAVE"),
        IMPRESSION("IMPRESSION"),
        OUTBOUND_CLICK("OUTBOUND_CLICK"),
        PIN_CLICK("PIN_CLICK");

        private String value;

        SortByEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static SortByEnum fromValue(String value) {
            for (SortByEnum b : SortByEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_SORT_BY = "sort_by";
    private SortByEnum sortBy;

    public TopPinsAnalyticsResponse() {
    }

    public TopPinsAnalyticsResponse dateAvailability(TopPinsAnalyticsResponseDateAvailability dateAvailability) {
        this.dateAvailability = dateAvailability;
        return this;
    }

    /**
     * Get dateAvailability
     * @return dateAvailability
     */
    @Valid
    @Nullable
    @Schema(name = "date_availability", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_AVAILABILITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TopPinsAnalyticsResponseDateAvailability getDateAvailability() {
        return dateAvailability;
    }

    @JsonProperty(JSON_PROPERTY_DATE_AVAILABILITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDateAvailability(TopPinsAnalyticsResponseDateAvailability dateAvailability) {
        this.dateAvailability = dateAvailability;
    }

    public TopPinsAnalyticsResponse pins(List<@Valid TopPinsAnalyticsResponsePinsInner> pins) {
        this.pins = pins;
        return this;
    }

    public TopPinsAnalyticsResponse addPinsItem(TopPinsAnalyticsResponsePinsInner pinsItem) {
        if (this.pins == null) {
            this.pins = new ArrayList<>();
        }
        this.pins.add(pinsItem);
        return this;
    }

    /**
     * Get pins
     * @return pins
     */
    @Nullable
    @Schema(name = "pins", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid TopPinsAnalyticsResponsePinsInner> getPins() {
        return pins;
    }

    @JsonProperty(JSON_PROPERTY_PINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPins(List<@Valid TopPinsAnalyticsResponsePinsInner> pins) {
        this.pins = pins;
    }

    public TopPinsAnalyticsResponse sortBy(SortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }

    /**
     * Get sortBy
     * @return sortBy
     */
    @Nullable
    @Schema(name = "sort_by", example = "IMPRESSION", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SORT_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public SortByEnum getSortBy() {
        return sortBy;
    }

    @JsonProperty(JSON_PROPERTY_SORT_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSortBy(SortByEnum sortBy) {
        this.sortBy = sortBy;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TopPinsAnalyticsResponse topPinsAnalyticsResponse = (TopPinsAnalyticsResponse) o;
        return Objects.equals(this.dateAvailability, topPinsAnalyticsResponse.dateAvailability) &&
            Objects.equals(this.pins, topPinsAnalyticsResponse.pins) &&
            Objects.equals(this.sortBy, topPinsAnalyticsResponse.sortBy);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dateAvailability, pins, sortBy);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TopPinsAnalyticsResponse {\n");
        sb.append("    dateAvailability: ").append(toIndentedString(dateAvailability)).append("\n");
        sb.append("    pins: ").append(toIndentedString(pins)).append("\n");
        sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

