/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CatalogsReportDistributionStats
 */
@JsonPropertyOrder({
  CatalogsReportDistributionStats.JSON_PROPERTY_REPORT_TYPE,
  CatalogsReportDistributionStats.JSON_PROPERTY_CATALOG_ID,
  CatalogsReportDistributionStats.JSON_PROPERTY_CODE,
  CatalogsReportDistributionStats.JSON_PROPERTY_CODE_LABEL,
  CatalogsReportDistributionStats.JSON_PROPERTY_MESSAGE,
  CatalogsReportDistributionStats.JSON_PROPERTY_OCCURRENCES,
  CatalogsReportDistributionStats.JSON_PROPERTY_INELIGIBLE_FOR_ADS,
  CatalogsReportDistributionStats.JSON_PROPERTY_INELIGIBLE_FOR_ORGANIC
})
@JsonTypeName("CatalogsReportDistributionStats")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CatalogsReportDistributionStats {
    /**
     * Gets or Sets reportType
     */
    public enum ReportTypeEnum {
        DISTRIBUTION_ISSUES("DISTRIBUTION_ISSUES");

        private String value;

        ReportTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ReportTypeEnum fromValue(String value) {
            for (ReportTypeEnum b : ReportTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_REPORT_TYPE = "report_type";
    private ReportTypeEnum reportType;

    public static final String JSON_PROPERTY_CATALOG_ID = "catalog_id";
    private String catalogId;

    public static final String JSON_PROPERTY_CODE = "code";
    private Integer code;

    public static final String JSON_PROPERTY_CODE_LABEL = "code_label";
    private String codeLabel;

    public static final String JSON_PROPERTY_MESSAGE = "message";
    private String message;

    public static final String JSON_PROPERTY_OCCURRENCES = "occurrences";
    private Integer occurrences;

    public static final String JSON_PROPERTY_INELIGIBLE_FOR_ADS = "ineligible_for_ads";
    private Boolean ineligibleForAds;

    public static final String JSON_PROPERTY_INELIGIBLE_FOR_ORGANIC = "ineligible_for_organic";
    private Boolean ineligibleForOrganic;

    public CatalogsReportDistributionStats() {
    }

    public CatalogsReportDistributionStats reportType(ReportTypeEnum reportType) {
        this.reportType = reportType;
        return this;
    }

    /**
     * Get reportType
     * @return reportType
     */
    @Nullable
    @Schema(name = "report_type", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REPORT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ReportTypeEnum getReportType() {
        return reportType;
    }

    @JsonProperty(JSON_PROPERTY_REPORT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReportType(ReportTypeEnum reportType) {
        this.reportType = reportType;
    }

    public CatalogsReportDistributionStats catalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }

    /**
     * ID of the catalog entity.
     * @return catalogId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "catalog_id", description = "ID of the catalog entity.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCatalogId() {
        return catalogId;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCatalogId(String catalogId) {
        this.catalogId = catalogId;
    }

    public CatalogsReportDistributionStats code(Integer code) {
        this.code = code;
        return this;
    }

    /**
     * The event code that a diagnostics aggregated number references
     * @return code
     */
    @Nullable
    @Schema(name = "code", description = "The event code that a diagnostics aggregated number references", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCode(Integer code) {
        this.code = code;
    }

    public CatalogsReportDistributionStats codeLabel(String codeLabel) {
        this.codeLabel = codeLabel;
        return this;
    }

    /**
     * A human-friendly label for the event code (e.g, &#39;SPAM&#39;)
     * @return codeLabel
     */
    @Nullable
    @Schema(name = "code_label", example = "SPAM", description = "A human-friendly label for the event code (e.g, 'SPAM')", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CODE_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCodeLabel() {
        return codeLabel;
    }

    @JsonProperty(JSON_PROPERTY_CODE_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCodeLabel(String codeLabel) {
        this.codeLabel = codeLabel;
    }

    public CatalogsReportDistributionStats message(String message) {
        this.message = message;
        return this;
    }

    /**
     * Title message describing the diagnostic issue
     * @return message
     */
    @Nullable
    @Schema(name = "message", description = "Title message describing the diagnostic issue", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMessage() {
        return message;
    }

    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMessage(String message) {
        this.message = message;
    }

    public CatalogsReportDistributionStats occurrences(Integer occurrences) {
        this.occurrences = occurrences;
        return this;
    }

    /**
     * Number of occurrences of the issue
     * @return occurrences
     */
    @Nullable
    @Schema(name = "occurrences", example = "10", description = "Number of occurrences of the issue", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OCCURRENCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getOccurrences() {
        return occurrences;
    }

    @JsonProperty(JSON_PROPERTY_OCCURRENCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOccurrences(Integer occurrences) {
        this.occurrences = occurrences;
    }

    public CatalogsReportDistributionStats ineligibleForAds(Boolean ineligibleForAds) {
        this.ineligibleForAds = ineligibleForAds;
        return this;
    }

    /**
     * Indicates if issue makes items ineligible for ads distribution
     * @return ineligibleForAds
     */
    @Nullable
    @Schema(name = "ineligible_for_ads", example = "true", description = "Indicates if issue makes items ineligible for ads distribution", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INELIGIBLE_FOR_ADS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIneligibleForAds() {
        return ineligibleForAds;
    }

    @JsonProperty(JSON_PROPERTY_INELIGIBLE_FOR_ADS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIneligibleForAds(Boolean ineligibleForAds) {
        this.ineligibleForAds = ineligibleForAds;
    }

    public CatalogsReportDistributionStats ineligibleForOrganic(Boolean ineligibleForOrganic) {
        this.ineligibleForOrganic = ineligibleForOrganic;
        return this;
    }

    /**
     * Indicates if issue makes items ineligible for organic distribution
     * @return ineligibleForOrganic
     */
    @Nullable
    @Schema(name = "ineligible_for_organic", example = "true", description = "Indicates if issue makes items ineligible for organic distribution", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INELIGIBLE_FOR_ORGANIC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIneligibleForOrganic() {
        return ineligibleForOrganic;
    }

    @JsonProperty(JSON_PROPERTY_INELIGIBLE_FOR_ORGANIC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIneligibleForOrganic(Boolean ineligibleForOrganic) {
        this.ineligibleForOrganic = ineligibleForOrganic;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsReportDistributionStats catalogsReportDistributionStats = (CatalogsReportDistributionStats) o;
        return Objects.equals(this.reportType, catalogsReportDistributionStats.reportType) &&
            Objects.equals(this.catalogId, catalogsReportDistributionStats.catalogId) &&
            Objects.equals(this.code, catalogsReportDistributionStats.code) &&
            Objects.equals(this.codeLabel, catalogsReportDistributionStats.codeLabel) &&
            Objects.equals(this.message, catalogsReportDistributionStats.message) &&
            Objects.equals(this.occurrences, catalogsReportDistributionStats.occurrences) &&
            Objects.equals(this.ineligibleForAds, catalogsReportDistributionStats.ineligibleForAds) &&
            Objects.equals(this.ineligibleForOrganic, catalogsReportDistributionStats.ineligibleForOrganic);
    }

    @Override
    public int hashCode() {
        return Objects.hash(reportType, catalogId, code, codeLabel, message, occurrences, ineligibleForAds, ineligibleForOrganic);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsReportDistributionStats {\n");
        sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
        sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    codeLabel: ").append(toIndentedString(codeLabel)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    occurrences: ").append(toIndentedString(occurrences)).append("\n");
        sb.append("    ineligibleForAds: ").append(toIndentedString(ineligibleForAds)).append("\n");
        sb.append("    ineligibleForOrganic: ").append(toIndentedString(ineligibleForOrganic)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

