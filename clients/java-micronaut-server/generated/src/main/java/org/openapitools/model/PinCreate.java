/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.BoardOwner;
import org.openapitools.model.PinMedia;
import org.openapitools.model.PinMediaSource;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Pin
 */
@Schema(name = "PinCreate", description = "Pin")
@JsonPropertyOrder({
  PinCreate.JSON_PROPERTY_ID,
  PinCreate.JSON_PROPERTY_CREATED_AT,
  PinCreate.JSON_PROPERTY_LINK,
  PinCreate.JSON_PROPERTY_TITLE,
  PinCreate.JSON_PROPERTY_DESCRIPTION,
  PinCreate.JSON_PROPERTY_DOMINANT_COLOR,
  PinCreate.JSON_PROPERTY_ALT_TEXT,
  PinCreate.JSON_PROPERTY_BOARD_ID,
  PinCreate.JSON_PROPERTY_BOARD_SECTION_ID,
  PinCreate.JSON_PROPERTY_BOARD_OWNER,
  PinCreate.JSON_PROPERTY_MEDIA,
  PinCreate.JSON_PROPERTY_MEDIA_SOURCE,
  PinCreate.JSON_PROPERTY_PARENT_PIN_ID,
  PinCreate.JSON_PROPERTY_NOTE
})
@JsonTypeName("PinCreate")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class PinCreate {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_LINK = "link";
    private String link;

    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_DOMINANT_COLOR = "dominant_color";
    private String dominantColor;

    public static final String JSON_PROPERTY_ALT_TEXT = "alt_text";
    private String altText;

    public static final String JSON_PROPERTY_BOARD_ID = "board_id";
    private String boardId;

    public static final String JSON_PROPERTY_BOARD_SECTION_ID = "board_section_id";
    private String boardSectionId;

    public static final String JSON_PROPERTY_BOARD_OWNER = "board_owner";
    private BoardOwner boardOwner;

    public static final String JSON_PROPERTY_MEDIA = "media";
    private PinMedia media;

    public static final String JSON_PROPERTY_MEDIA_SOURCE = "media_source";
    private PinMediaSource mediaSource;

    public static final String JSON_PROPERTY_PARENT_PIN_ID = "parent_pin_id";
    private String parentPinId;

    public static final String JSON_PROPERTY_NOTE = "note";
    private String note;

    public PinCreate() {
    }

    /**
     * Get id
     * @return id
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "id", accessMode = Schema.AccessMode.READ_ONLY, example = "813744226420795884", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    /**
     * Get createdAt
     * @return createdAt
     */
    @Nullable
    @Schema(name = "created_at", accessMode = Schema.AccessMode.READ_ONLY, example = "2020-01-01T20:10:40Z", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    public PinCreate link(String link) {
        this.link = link;
        return this;
    }

    /**
     * Get link
     * @return link
     */
    @Nullable
    @Size(max=2048)
    @Schema(name = "link", example = "https://www.pinterest.com/", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_LINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLink() {
        return link;
    }

    @JsonProperty(JSON_PROPERTY_LINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLink(String link) {
        this.link = link;
    }

    public PinCreate title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     * @return title
     */
    @Nullable
    @Size(max=100)
    @Schema(name = "title", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTitle() {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitle(String title) {
        this.title = title;
    }

    public PinCreate description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * @return description
     */
    @Nullable
    @Size(max=800)
    @Schema(name = "description", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public PinCreate dominantColor(String dominantColor) {
        this.dominantColor = dominantColor;
        return this;
    }

    /**
     * Dominant pin color. Hex number, e.g. \\\&quot;#6E7874\\\&quot;.
     * @return dominantColor
     */
    @Nullable
    @Schema(name = "dominant_color", example = "#6E7874", description = "Dominant pin color. Hex number, e.g. \\\"#6E7874\\\".", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DOMINANT_COLOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDominantColor() {
        return dominantColor;
    }

    @JsonProperty(JSON_PROPERTY_DOMINANT_COLOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDominantColor(String dominantColor) {
        this.dominantColor = dominantColor;
    }

    public PinCreate altText(String altText) {
        this.altText = altText;
        return this;
    }

    /**
     * Get altText
     * @return altText
     */
    @Nullable
    @Size(max=500)
    @Schema(name = "alt_text", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ALT_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAltText() {
        return altText;
    }

    @JsonProperty(JSON_PROPERTY_ALT_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAltText(String altText) {
        this.altText = altText;
    }

    public PinCreate boardId(String boardId) {
        this.boardId = boardId;
        return this;
    }

    /**
     * The board to which this Pin belongs.
     * @return boardId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "board_id", description = "The board to which this Pin belongs.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BOARD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBoardId() {
        return boardId;
    }

    @JsonProperty(JSON_PROPERTY_BOARD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBoardId(String boardId) {
        this.boardId = boardId;
    }

    public PinCreate boardSectionId(String boardSectionId) {
        this.boardSectionId = boardSectionId;
        return this;
    }

    /**
     * The board section to which this Pin belongs.
     * @return boardSectionId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "board_section_id", description = "The board section to which this Pin belongs.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BOARD_SECTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBoardSectionId() {
        return boardSectionId;
    }

    @JsonProperty(JSON_PROPERTY_BOARD_SECTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBoardSectionId(String boardSectionId) {
        this.boardSectionId = boardSectionId;
    }

    /**
     * Get boardOwner
     * @return boardOwner
     */
    @Valid
    @Nullable
    @Schema(name = "board_owner", accessMode = Schema.AccessMode.READ_ONLY, requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BOARD_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BoardOwner getBoardOwner() {
        return boardOwner;
    }

    /**
     * Get media
     * @return media
     */
    @Valid
    @Nullable
    @Schema(name = "media", accessMode = Schema.AccessMode.READ_ONLY, requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MEDIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PinMedia getMedia() {
        return media;
    }

    public PinCreate mediaSource(PinMediaSource mediaSource) {
        this.mediaSource = mediaSource;
        return this;
    }

    /**
     * Get mediaSource
     * @return mediaSource
     */
    @Valid
    @Nullable
    @Schema(name = "media_source", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MEDIA_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PinMediaSource getMediaSource() {
        return mediaSource;
    }

    @JsonProperty(JSON_PROPERTY_MEDIA_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMediaSource(PinMediaSource mediaSource) {
        this.mediaSource = mediaSource;
    }

    public PinCreate parentPinId(String parentPinId) {
        this.parentPinId = parentPinId;
        return this;
    }

    /**
     * The source pin id if this pin was saved from another pin. &lt;a href&#x3D;\&quot;https://help.pinterest.com/article/save-pins-on-pinterest\&quot;&gt;Learn more&lt;/a&gt;.
     * @return parentPinId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "parent_pin_id", description = "The source pin id if this pin was saved from another pin. <a href=\"https://help.pinterest.com/article/save-pins-on-pinterest\">Learn more</a>.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PARENT_PIN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getParentPinId() {
        return parentPinId;
    }

    @JsonProperty(JSON_PROPERTY_PARENT_PIN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParentPinId(String parentPinId) {
        this.parentPinId = parentPinId;
    }

    public PinCreate note(String note) {
        this.note = note;
        return this;
    }

    /**
     * Private note for this Pin. &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/add-notes-to-your-pins\&quot;&gt;Learn more&lt;/a&gt;.
     * @return note
     */
    @Nullable
    @Schema(name = "note", description = "Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNote() {
        return note;
    }

    @JsonProperty(JSON_PROPERTY_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNote(String note) {
        this.note = note;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PinCreate pinCreate = (PinCreate) o;
        return Objects.equals(this.id, pinCreate.id) &&
            Objects.equals(this.createdAt, pinCreate.createdAt) &&
            Objects.equals(this.link, pinCreate.link) &&
            Objects.equals(this.title, pinCreate.title) &&
            Objects.equals(this.description, pinCreate.description) &&
            Objects.equals(this.dominantColor, pinCreate.dominantColor) &&
            Objects.equals(this.altText, pinCreate.altText) &&
            Objects.equals(this.boardId, pinCreate.boardId) &&
            Objects.equals(this.boardSectionId, pinCreate.boardSectionId) &&
            Objects.equals(this.boardOwner, pinCreate.boardOwner) &&
            Objects.equals(this.media, pinCreate.media) &&
            Objects.equals(this.mediaSource, pinCreate.mediaSource) &&
            Objects.equals(this.parentPinId, pinCreate.parentPinId) &&
            Objects.equals(this.note, pinCreate.note);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, createdAt, link, title, description, dominantColor, altText, boardId, boardSectionId, boardOwner, media, mediaSource, parentPinId, note);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PinCreate {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    link: ").append(toIndentedString(link)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    dominantColor: ").append(toIndentedString(dominantColor)).append("\n");
        sb.append("    altText: ").append(toIndentedString(altText)).append("\n");
        sb.append("    boardId: ").append(toIndentedString(boardId)).append("\n");
        sb.append("    boardSectionId: ").append(toIndentedString(boardSectionId)).append("\n");
        sb.append("    boardOwner: ").append(toIndentedString(boardOwner)).append("\n");
        sb.append("    media: ").append(toIndentedString(media)).append("\n");
        sb.append("    mediaSource: ").append(toIndentedString(mediaSource)).append("\n");
        sb.append("    parentPinId: ").append(toIndentedString(parentPinId)).append("\n");
        sb.append("    note: ").append(toIndentedString(note)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

