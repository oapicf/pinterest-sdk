/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * An exception object if there is an error performing the action. Will only be provided if there is an error.
 */
@Schema(name = "InviteExceptionResponse", description = "An exception object if there is an error performing the action. Will only be provided if there is an error.")
@JsonPropertyOrder({
  InviteExceptionResponse.JSON_PROPERTY_INVITE_OR_REQUEST_ID,
  InviteExceptionResponse.JSON_PROPERTY_CODE,
  InviteExceptionResponse.JSON_PROPERTY_MESSAGE,
  InviteExceptionResponse.JSON_PROPERTY_USERS_OR_PARTNER_IDS
})
@JsonTypeName("InviteExceptionResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class InviteExceptionResponse {
    public static final String JSON_PROPERTY_INVITE_OR_REQUEST_ID = "invite_or_request_id";
    private String inviteOrRequestId;

    public static final String JSON_PROPERTY_CODE = "code";
    private Integer code;

    public static final String JSON_PROPERTY_MESSAGE = "message";
    private String message;

    public static final String JSON_PROPERTY_USERS_OR_PARTNER_IDS = "users_or_partner_ids";
    private List<String> usersOrPartnerIds = null;

    public InviteExceptionResponse() {
    }

    public InviteExceptionResponse inviteOrRequestId(String inviteOrRequestId) {
        this.inviteOrRequestId = inviteOrRequestId;
        return this;
    }

    /**
     * Unique identifier of the invite/request.
     * @return inviteOrRequestId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "invite_or_request_id", example = "383791336903426391", description = "Unique identifier of the invite/request.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INVITE_OR_REQUEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getInviteOrRequestId() {
        return inviteOrRequestId;
    }

    @JsonProperty(JSON_PROPERTY_INVITE_OR_REQUEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInviteOrRequestId(String inviteOrRequestId) {
        this.inviteOrRequestId = inviteOrRequestId;
    }

    public InviteExceptionResponse code(Integer code) {
        this.code = code;
        return this;
    }

    /**
     * Error code associated with the error in performing the action on the invite/request.
     * @return code
     */
    @Nullable
    @Schema(name = "code", example = "403", description = "Error code associated with the error in performing the action on the invite/request.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCode(Integer code) {
        this.code = code;
    }

    public InviteExceptionResponse message(String message) {
        this.message = message;
        return this;
    }

    /**
     * Error message associated with the error in performing the action on the invite/request.
     * @return message
     */
    @Nullable
    @Schema(name = "message", example = "You hit the maximum number of pending invites allowed.", description = "Error message associated with the error in performing the action on the invite/request.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMessage() {
        return message;
    }

    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMessage(String message) {
        this.message = message;
    }

    public InviteExceptionResponse usersOrPartnerIds(List<String> usersOrPartnerIds) {
        this.usersOrPartnerIds = usersOrPartnerIds;
        return this;
    }

    public InviteExceptionResponse addUsersOrPartnerIdsItem(String usersOrPartnerIdsItem) {
        if (this.usersOrPartnerIds == null) {
            this.usersOrPartnerIds = new ArrayList<>();
        }
        this.usersOrPartnerIds.add(usersOrPartnerIdsItem);
        return this;
    }

    /**
     * A list of users&#39; usernames or emails OR a list of partner ids that caused the error.
     * @return usersOrPartnerIds
     */
    @Nullable
    @Schema(name = "users_or_partner_ids", example = "[\"businessMember0101\",\"business+member@business.com\"]", description = "A list of users' usernames or emails OR a list of partner ids that caused the error.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_USERS_OR_PARTNER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getUsersOrPartnerIds() {
        return usersOrPartnerIds;
    }

    @JsonProperty(JSON_PROPERTY_USERS_OR_PARTNER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsersOrPartnerIds(List<String> usersOrPartnerIds) {
        this.usersOrPartnerIds = usersOrPartnerIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InviteExceptionResponse inviteExceptionResponse = (InviteExceptionResponse) o;
        return Objects.equals(this.inviteOrRequestId, inviteExceptionResponse.inviteOrRequestId) &&
            Objects.equals(this.code, inviteExceptionResponse.code) &&
            Objects.equals(this.message, inviteExceptionResponse.message) &&
            Objects.equals(this.usersOrPartnerIds, inviteExceptionResponse.usersOrPartnerIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(inviteOrRequestId, code, message, usersOrPartnerIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InviteExceptionResponse {\n");
        sb.append("    inviteOrRequestId: ").append(toIndentedString(inviteOrRequestId)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    usersOrPartnerIds: ").append(toIndentedString(usersOrPartnerIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

