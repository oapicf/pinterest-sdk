/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.PinMedia;
import org.openapitools.model.PinMediaWithImageAllOfImages;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Pin with video.
 */
@Schema(name = "PinMediaWithVideo", description = "Pin with video.")
@JsonPropertyOrder({
  PinMediaWithVideo.JSON_PROPERTY_IMAGES,
  PinMediaWithVideo.JSON_PROPERTY_COVER_IMAGE_URL,
  PinMediaWithVideo.JSON_PROPERTY_VIDEO_URL,
  PinMediaWithVideo.JSON_PROPERTY_DURATION,
  PinMediaWithVideo.JSON_PROPERTY_HEIGHT,
  PinMediaWithVideo.JSON_PROPERTY_WIDTH
})
@JsonTypeName("PinMediaWithVideo")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class PinMediaWithVideo extends PinMedia {
    public static final String JSON_PROPERTY_IMAGES = "images";
    private PinMediaWithImageAllOfImages images;

    public static final String JSON_PROPERTY_COVER_IMAGE_URL = "cover_image_url";
    private String coverImageUrl;

    public static final String JSON_PROPERTY_VIDEO_URL = "video_url";
    private String videoUrl;

    public static final String JSON_PROPERTY_DURATION = "duration";
    private BigDecimal duration;

    public static final String JSON_PROPERTY_HEIGHT = "height";
    private Integer height;

    public static final String JSON_PROPERTY_WIDTH = "width";
    private Integer width;

    public PinMediaWithVideo() {
        super();
    }

    public PinMediaWithVideo images(PinMediaWithImageAllOfImages images) {
        this.images = images;
        return this;
    }

    /**
     * Get images
     * @return images
     */
    @Valid
    @Nullable
    @Schema(name = "images", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_IMAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PinMediaWithImageAllOfImages getImages() {
        return images;
    }

    @JsonProperty(JSON_PROPERTY_IMAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImages(PinMediaWithImageAllOfImages images) {
        this.images = images;
    }

    public PinMediaWithVideo coverImageUrl(String coverImageUrl) {
        this.coverImageUrl = coverImageUrl;
        return this;
    }

    /**
     * Get coverImageUrl
     * @return coverImageUrl
     */
    @Nullable
    @Schema(name = "cover_image_url", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_COVER_IMAGE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCoverImageUrl() {
        return coverImageUrl;
    }

    @JsonProperty(JSON_PROPERTY_COVER_IMAGE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCoverImageUrl(String coverImageUrl) {
        this.coverImageUrl = coverImageUrl;
    }

    public PinMediaWithVideo videoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
        return this;
    }

    /**
     * Video url (720p). &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This field is limited and not available to all apps.
     * @return videoUrl
     */
    @Nullable
    @Schema(name = "video_url", description = "Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_VIDEO_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVideoUrl() {
        return videoUrl;
    }

    @JsonProperty(JSON_PROPERTY_VIDEO_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
    }

    public PinMediaWithVideo duration(BigDecimal duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Duration (in milliseconds)
     * @return duration
     */
    @Nullable
    @Schema(name = "duration", description = "Duration (in milliseconds)", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getDuration() {
        return duration;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDuration(BigDecimal duration) {
        this.duration = duration;
    }

    public PinMediaWithVideo height(Integer height) {
        this.height = height;
        return this;
    }

    /**
     * Height (in pixels)
     * @return height
     */
    @Nullable
    @Schema(name = "height", description = "Height (in pixels)", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getHeight() {
        return height;
    }

    @JsonProperty(JSON_PROPERTY_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHeight(Integer height) {
        this.height = height;
    }

    public PinMediaWithVideo width(Integer width) {
        this.width = width;
        return this;
    }

    /**
     * Width (in pixels)
     * @return width
     */
    @Nullable
    @Schema(name = "width", description = "Width (in pixels)", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_WIDTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getWidth() {
        return width;
    }

    @JsonProperty(JSON_PROPERTY_WIDTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWidth(Integer width) {
        this.width = width;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PinMediaWithVideo pinMediaWithVideo = (PinMediaWithVideo) o;
        return Objects.equals(this.images, pinMediaWithVideo.images) &&
            Objects.equals(this.coverImageUrl, pinMediaWithVideo.coverImageUrl) &&
            Objects.equals(this.videoUrl, pinMediaWithVideo.videoUrl) &&
            Objects.equals(this.duration, pinMediaWithVideo.duration) &&
            Objects.equals(this.height, pinMediaWithVideo.height) &&
            Objects.equals(this.width, pinMediaWithVideo.width) &&
            super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(images, coverImageUrl, videoUrl, duration, height, width, super.hashCode());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PinMediaWithVideo {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    images: ").append(toIndentedString(images)).append("\n");
        sb.append("    coverImageUrl: ").append(toIndentedString(coverImageUrl)).append("\n");
        sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    height: ").append(toIndentedString(height)).append("\n");
        sb.append("    width: ").append(toIndentedString(width)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

