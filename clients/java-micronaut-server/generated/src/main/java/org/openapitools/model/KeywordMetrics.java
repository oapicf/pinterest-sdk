/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Keyword metrics JSON
 */
@Schema(name = "KeywordMetrics", description = "Keyword metrics JSON")
@JsonPropertyOrder({
  KeywordMetrics.JSON_PROPERTY_AVG_CPC_IN_MICRO_CURRENCY,
  KeywordMetrics.JSON_PROPERTY_KEYWORD_QUERY_VOLUME
})
@JsonTypeName("KeywordMetrics")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class KeywordMetrics {
    public static final String JSON_PROPERTY_AVG_CPC_IN_MICRO_CURRENCY = "avg_cpc_in_micro_currency";
    private BigDecimal avgCpcInMicroCurrency;

    public static final String JSON_PROPERTY_KEYWORD_QUERY_VOLUME = "keyword_query_volume";
    private String keywordQueryVolume;

    public KeywordMetrics() {
    }

    public KeywordMetrics avgCpcInMicroCurrency(BigDecimal avgCpcInMicroCurrency) {
        this.avgCpcInMicroCurrency = avgCpcInMicroCurrency;
        return this;
    }

    /**
     * Average cost per click
     * @return avgCpcInMicroCurrency
     */
    @Nullable
    @Schema(name = "avg_cpc_in_micro_currency", example = "100000", description = "Average cost per click", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AVG_CPC_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getAvgCpcInMicroCurrency() {
        return avgCpcInMicroCurrency;
    }

    @JsonProperty(JSON_PROPERTY_AVG_CPC_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAvgCpcInMicroCurrency(BigDecimal avgCpcInMicroCurrency) {
        this.avgCpcInMicroCurrency = avgCpcInMicroCurrency;
    }

    public KeywordMetrics keywordQueryVolume(String keywordQueryVolume) {
        this.keywordQueryVolume = keywordQueryVolume;
        return this;
    }

    /**
     * Keyword&#39;s search frequency. This value is based on keyword frequency in pepsi client response
     * @return keywordQueryVolume
     */
    @Nullable
    @Schema(name = "keyword_query_volume", example = "5M+", description = "Keyword's search frequency. This value is based on keyword frequency in pepsi client response", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_KEYWORD_QUERY_VOLUME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getKeywordQueryVolume() {
        return keywordQueryVolume;
    }

    @JsonProperty(JSON_PROPERTY_KEYWORD_QUERY_VOLUME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKeywordQueryVolume(String keywordQueryVolume) {
        this.keywordQueryVolume = keywordQueryVolume;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        KeywordMetrics keywordMetrics = (KeywordMetrics) o;
        return Objects.equals(this.avgCpcInMicroCurrency, keywordMetrics.avgCpcInMicroCurrency) &&
            Objects.equals(this.keywordQueryVolume, keywordMetrics.keywordQueryVolume);
    }

    @Override
    public int hashCode() {
        return Objects.hash(avgCpcInMicroCurrency, keywordQueryVolume);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KeywordMetrics {\n");
        sb.append("    avgCpcInMicroCurrency: ").append(toIndentedString(avgCpcInMicroCurrency)).append("\n");
        sb.append("    keywordQueryVolume: ").append(toIndentedString(keywordQueryVolume)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

