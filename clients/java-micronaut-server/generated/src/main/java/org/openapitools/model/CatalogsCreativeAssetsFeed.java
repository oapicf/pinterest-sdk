/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.OffsetDateTime;
import org.openapitools.model.CatalogsFeedCredentials;
import org.openapitools.model.CatalogsFeedProcessingSchedule;
import org.openapitools.model.CatalogsFormat;
import org.openapitools.model.CatalogsStatus;
import org.openapitools.model.CatalogsType;
import org.openapitools.model.Country;
import org.openapitools.model.NullableCurrency;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Catalogs Creative Asset Feed object
 */
@Schema(name = "CatalogsCreativeAssetsFeed", description = "Catalogs Creative Asset Feed object")
@JsonPropertyOrder({
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_CREATED_AT,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_ID,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_UPDATED_AT,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_NAME,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_FORMAT,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_CATALOG_TYPE,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_CREDENTIALS,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_LOCATION,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_PREFERRED_PROCESSING_SCHEDULE,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_STATUS,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_DEFAULT_CURRENCY,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_DEFAULT_LOCALE,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_DEFAULT_COUNTRY,
  CatalogsCreativeAssetsFeed.JSON_PROPERTY_CATALOG_ID
})
@JsonTypeName("CatalogsCreativeAssetsFeed")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CatalogsCreativeAssetsFeed {
    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
    private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_FORMAT = "format";
    private CatalogsFormat _format;

    public static final String JSON_PROPERTY_CATALOG_TYPE = "catalog_type";
    private CatalogsType catalogType;

    public static final String JSON_PROPERTY_CREDENTIALS = "credentials";
    private CatalogsFeedCredentials credentials;

    public static final String JSON_PROPERTY_LOCATION = "location";
    private String location;

    public static final String JSON_PROPERTY_PREFERRED_PROCESSING_SCHEDULE = "preferred_processing_schedule";
    private CatalogsFeedProcessingSchedule preferredProcessingSchedule;

    public static final String JSON_PROPERTY_STATUS = "status";
    private CatalogsStatus status;

    public static final String JSON_PROPERTY_DEFAULT_CURRENCY = "default_currency";
    private NullableCurrency defaultCurrency;

    public static final String JSON_PROPERTY_DEFAULT_LOCALE = "default_locale";
    private String defaultLocale;

    public static final String JSON_PROPERTY_DEFAULT_COUNTRY = "default_country";
    private Country defaultCountry;

    public static final String JSON_PROPERTY_CATALOG_ID = "catalog_id";
    private String catalogId;

    public CatalogsCreativeAssetsFeed(OffsetDateTime createdAt, String id, OffsetDateTime updatedAt, String name, CatalogsFormat _format, CatalogsType catalogType, CatalogsFeedCredentials credentials, String location, CatalogsFeedProcessingSchedule preferredProcessingSchedule, CatalogsStatus status, NullableCurrency defaultCurrency, String defaultLocale, Country defaultCountry, String catalogId) {
        this.createdAt = createdAt;
        this.id = id;
        this.updatedAt = updatedAt;
        this.name = name;
        this._format = _format;
        this.catalogType = catalogType;
        this.credentials = credentials;
        this.location = location;
        this.preferredProcessingSchedule = preferredProcessingSchedule;
        this.status = status;
        this.defaultCurrency = defaultCurrency;
        this.defaultLocale = defaultLocale;
        this.defaultCountry = defaultCountry;
        this.catalogId = catalogId;
    }

    public CatalogsCreativeAssetsFeed createdAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     * @return createdAt
     */
    @NotNull
    @Schema(name = "created_at", example = "2022-03-14T15:15:22Z", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public CatalogsCreativeAssetsFeed id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * @return id
     */
    @NotNull
    @Schema(name = "id", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(String id) {
        this.id = id;
    }

    public CatalogsCreativeAssetsFeed updatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     * @return updatedAt
     */
    @NotNull
    @Schema(name = "updated_at", example = "2022-03-14T15:16:34Z", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public CatalogsCreativeAssetsFeed name(String name) {
        this.name = name;
        return this;
    }

    /**
     * A human-friendly name associated to a given feed. This value is currently nullable due to historical reasons. It is expected to become non-nullable in the future.
     * @return name
     */
    @Nullable
    @Schema(name = "name", description = "A human-friendly name associated to a given feed. This value is currently nullable due to historical reasons. It is expected to become non-nullable in the future.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }

    public CatalogsCreativeAssetsFeed _format(CatalogsFormat _format) {
        this._format = _format;
        return this;
    }

    /**
     * Get _format
     * @return _format
     */
    @NotNull
    @Schema(name = "format", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsFormat getFormat() {
        return _format;
    }

    @JsonProperty(JSON_PROPERTY_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFormat(CatalogsFormat _format) {
        this._format = _format;
    }

    public CatalogsCreativeAssetsFeed catalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
        return this;
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    @NotNull
    @Schema(name = "catalog_type", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsType getCatalogType() {
        return catalogType;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
    }

    public CatalogsCreativeAssetsFeed credentials(CatalogsFeedCredentials credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * Get credentials
     * @return credentials
     */
    @Valid
    @Nullable
    @Schema(name = "credentials", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREDENTIALS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsFeedCredentials getCredentials() {
        return credentials;
    }

    @JsonProperty(JSON_PROPERTY_CREDENTIALS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCredentials(CatalogsFeedCredentials credentials) {
        this.credentials = credentials;
    }

    public CatalogsCreativeAssetsFeed location(String location) {
        this.location = location;
        return this;
    }

    /**
     * The URL where a feed is available for download. This URL is what Pinterest will use to download a feed for processing.
     * @return location
     */
    @NotNull
    @Schema(name = "location", description = "The URL where a feed is available for download. This URL is what Pinterest will use to download a feed for processing.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_LOCATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getLocation() {
        return location;
    }

    @JsonProperty(JSON_PROPERTY_LOCATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLocation(String location) {
        this.location = location;
    }

    public CatalogsCreativeAssetsFeed preferredProcessingSchedule(CatalogsFeedProcessingSchedule preferredProcessingSchedule) {
        this.preferredProcessingSchedule = preferredProcessingSchedule;
        return this;
    }

    /**
     * Get preferredProcessingSchedule
     * @return preferredProcessingSchedule
     */
    @Valid
    @Nullable
    @Schema(name = "preferred_processing_schedule", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_PREFERRED_PROCESSING_SCHEDULE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsFeedProcessingSchedule getPreferredProcessingSchedule() {
        return preferredProcessingSchedule;
    }

    @JsonProperty(JSON_PROPERTY_PREFERRED_PROCESSING_SCHEDULE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPreferredProcessingSchedule(CatalogsFeedProcessingSchedule preferredProcessingSchedule) {
        this.preferredProcessingSchedule = preferredProcessingSchedule;
    }

    public CatalogsCreativeAssetsFeed status(CatalogsStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @NotNull
    @Schema(name = "status", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(CatalogsStatus status) {
        this.status = status;
    }

    public CatalogsCreativeAssetsFeed defaultCurrency(NullableCurrency defaultCurrency) {
        this.defaultCurrency = defaultCurrency;
        return this;
    }

    /**
     * Get defaultCurrency
     * @return defaultCurrency
     */
    @Nullable
    @Schema(name = "default_currency", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_DEFAULT_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public NullableCurrency getDefaultCurrency() {
        return defaultCurrency;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDefaultCurrency(NullableCurrency defaultCurrency) {
        this.defaultCurrency = defaultCurrency;
    }

    public CatalogsCreativeAssetsFeed defaultLocale(String defaultLocale) {
        this.defaultLocale = defaultLocale;
        return this;
    }

    /**
     * The locale used within a feed for product descriptions.
     * @return defaultLocale
     */
    @NotNull
    @Schema(name = "default_locale", example = "en-US", description = "The locale used within a feed for product descriptions.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_DEFAULT_LOCALE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDefaultLocale() {
        return defaultLocale;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_LOCALE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDefaultLocale(String defaultLocale) {
        this.defaultLocale = defaultLocale;
    }

    public CatalogsCreativeAssetsFeed defaultCountry(Country defaultCountry) {
        this.defaultCountry = defaultCountry;
        return this;
    }

    /**
     * Get defaultCountry
     * @return defaultCountry
     */
    @NotNull
    @Schema(name = "default_country", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_DEFAULT_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Country getDefaultCountry() {
        return defaultCountry;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDefaultCountry(Country defaultCountry) {
        this.defaultCountry = defaultCountry;
    }

    public CatalogsCreativeAssetsFeed catalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }

    /**
     * Catalog id pertaining to the feed. If not provided, feed will use a default catalog based on type.
     * @return catalogId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "catalog_id", description = "Catalog id pertaining to the feed. If not provided, feed will use a default catalog based on type.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCatalogId() {
        return catalogId;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogId(String catalogId) {
        this.catalogId = catalogId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsCreativeAssetsFeed catalogsCreativeAssetsFeed = (CatalogsCreativeAssetsFeed) o;
        return Objects.equals(this.createdAt, catalogsCreativeAssetsFeed.createdAt) &&
            Objects.equals(this.id, catalogsCreativeAssetsFeed.id) &&
            Objects.equals(this.updatedAt, catalogsCreativeAssetsFeed.updatedAt) &&
            Objects.equals(this.name, catalogsCreativeAssetsFeed.name) &&
            Objects.equals(this._format, catalogsCreativeAssetsFeed._format) &&
            Objects.equals(this.catalogType, catalogsCreativeAssetsFeed.catalogType) &&
            Objects.equals(this.credentials, catalogsCreativeAssetsFeed.credentials) &&
            Objects.equals(this.location, catalogsCreativeAssetsFeed.location) &&
            Objects.equals(this.preferredProcessingSchedule, catalogsCreativeAssetsFeed.preferredProcessingSchedule) &&
            Objects.equals(this.status, catalogsCreativeAssetsFeed.status) &&
            Objects.equals(this.defaultCurrency, catalogsCreativeAssetsFeed.defaultCurrency) &&
            Objects.equals(this.defaultLocale, catalogsCreativeAssetsFeed.defaultLocale) &&
            Objects.equals(this.defaultCountry, catalogsCreativeAssetsFeed.defaultCountry) &&
            Objects.equals(this.catalogId, catalogsCreativeAssetsFeed.catalogId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(createdAt, id, updatedAt, name, _format, catalogType, credentials, location, preferredProcessingSchedule, status, defaultCurrency, defaultLocale, defaultCountry, catalogId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsCreativeAssetsFeed {\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    _format: ").append(toIndentedString(_format)).append("\n");
        sb.append("    catalogType: ").append(toIndentedString(catalogType)).append("\n");
        sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
        sb.append("    location: ").append(toIndentedString(location)).append("\n");
        sb.append("    preferredProcessingSchedule: ").append(toIndentedString(preferredProcessingSchedule)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    defaultCurrency: ").append(toIndentedString(defaultCurrency)).append("\n");
        sb.append("    defaultLocale: ").append(toIndentedString(defaultLocale)).append("\n");
        sb.append("    defaultCountry: ").append(toIndentedString(defaultCountry)).append("\n");
        sb.append("    catalogId: ").append(toIndentedString(catalogId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

