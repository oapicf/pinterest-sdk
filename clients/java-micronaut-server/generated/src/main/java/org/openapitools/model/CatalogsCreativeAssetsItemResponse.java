/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.CatalogsCreativeAssetsAttributes;
import org.openapitools.model.CatalogsType;
import org.openapitools.model.Pin;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Object describing a hotel record
 */
@Schema(name = "CatalogsCreativeAssetsItemResponse", description = "Object describing a hotel record")
@JsonPropertyOrder({
  CatalogsCreativeAssetsItemResponse.JSON_PROPERTY_CATALOG_TYPE,
  CatalogsCreativeAssetsItemResponse.JSON_PROPERTY_CREATIVE_ASSETS_ID,
  CatalogsCreativeAssetsItemResponse.JSON_PROPERTY_PINS,
  CatalogsCreativeAssetsItemResponse.JSON_PROPERTY_ATTRIBUTES
})
@JsonTypeName("CatalogsCreativeAssetsItemResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class CatalogsCreativeAssetsItemResponse {
    public static final String JSON_PROPERTY_CATALOG_TYPE = "catalog_type";
    private CatalogsType catalogType;

    public static final String JSON_PROPERTY_CREATIVE_ASSETS_ID = "creative_assets_id";
    private String creativeAssetsId;

    public static final String JSON_PROPERTY_PINS = "pins";
    private List<@Valid Pin> pins = null;

    public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
    private CatalogsCreativeAssetsAttributes attributes;

    public CatalogsCreativeAssetsItemResponse(CatalogsType catalogType) {
        this.catalogType = catalogType;
    }

    public CatalogsCreativeAssetsItemResponse catalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
        return this;
    }

    /**
     * Get catalogType
     * @return catalogType
     */
    @NotNull
    @Schema(name = "catalog_type", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CatalogsType getCatalogType() {
        return catalogType;
    }

    @JsonProperty(JSON_PROPERTY_CATALOG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCatalogType(CatalogsType catalogType) {
        this.catalogType = catalogType;
    }

    public CatalogsCreativeAssetsItemResponse creativeAssetsId(String creativeAssetsId) {
        this.creativeAssetsId = creativeAssetsId;
        return this;
    }

    /**
     * The catalog creative assets id in the merchant namespace
     * @return creativeAssetsId
     */
    @Nullable
    @Schema(name = "creative_assets_id", example = "DS0294-M", description = "The catalog creative assets id in the merchant namespace", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATIVE_ASSETS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCreativeAssetsId() {
        return creativeAssetsId;
    }

    @JsonProperty(JSON_PROPERTY_CREATIVE_ASSETS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreativeAssetsId(String creativeAssetsId) {
        this.creativeAssetsId = creativeAssetsId;
    }

    public CatalogsCreativeAssetsItemResponse pins(List<@Valid Pin> pins) {
        this.pins = pins;
        return this;
    }

    public CatalogsCreativeAssetsItemResponse addPinsItem(Pin pinsItem) {
        if (this.pins == null) {
            this.pins = new ArrayList<>();
        }
        this.pins.add(pinsItem);
        return this;
    }

    /**
     * The pins mapped to the item
     * @return pins
     */
    @Nullable
    @Size(max=11)
    @Schema(name = "pins", description = "The pins mapped to the item", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid Pin> getPins() {
        return pins;
    }

    @JsonProperty(JSON_PROPERTY_PINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPins(List<@Valid Pin> pins) {
        this.pins = pins;
    }

    public CatalogsCreativeAssetsItemResponse attributes(CatalogsCreativeAssetsAttributes attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Get attributes
     * @return attributes
     */
    @Valid
    @Nullable
    @Schema(name = "attributes", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public CatalogsCreativeAssetsAttributes getAttributes() {
        return attributes;
    }

    @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAttributes(CatalogsCreativeAssetsAttributes attributes) {
        this.attributes = attributes;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CatalogsCreativeAssetsItemResponse catalogsCreativeAssetsItemResponse = (CatalogsCreativeAssetsItemResponse) o;
        return Objects.equals(this.catalogType, catalogsCreativeAssetsItemResponse.catalogType) &&
            Objects.equals(this.creativeAssetsId, catalogsCreativeAssetsItemResponse.creativeAssetsId) &&
            Objects.equals(this.pins, catalogsCreativeAssetsItemResponse.pins) &&
            Objects.equals(this.attributes, catalogsCreativeAssetsItemResponse.attributes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(catalogType, creativeAssetsId, pins, attributes);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CatalogsCreativeAssetsItemResponse {\n");
        sb.append("    catalogType: ").append(toIndentedString(catalogType)).append("\n");
        sb.append("    creativeAssetsId: ").append(toIndentedString(creativeAssetsId)).append("\n");
        sb.append("    pins: ").append(toIndentedString(pins)).append("\n");
        sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

