/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * AdsCreditDiscountsResponse
 */
@JsonPropertyOrder({
  AdsCreditDiscountsResponse.JSON_PROPERTY_ACTIVE,
  AdsCreditDiscountsResponse.JSON_PROPERTY_ADVERTISER_ID,
  AdsCreditDiscountsResponse.JSON_PROPERTY_DISCOUNT_TYPE,
  AdsCreditDiscountsResponse.JSON_PROPERTY_DISCOUNT_IN_MICRO_CURRENCY,
  AdsCreditDiscountsResponse.JSON_PROPERTY_DISCOUNT_CURRENCY,
  AdsCreditDiscountsResponse.JSON_PROPERTY_TITLE,
  AdsCreditDiscountsResponse.JSON_PROPERTY_REMAINING_DISCOUNT_IN_MICRO_CURRENCY
})
@JsonTypeName("AdsCreditDiscountsResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AdsCreditDiscountsResponse {
    public static final String JSON_PROPERTY_ACTIVE = "active";
    private Boolean active;

    public static final String JSON_PROPERTY_ADVERTISER_ID = "advertiser_id";
    private String advertiserId;

    /**
     * The type of discount of this credit
     */
    public enum DiscountTypeEnum {
        COUPON("COUPON"),
        CREDIT("CREDIT"),
        COUPON_APPLIED("COUPON_APPLIED"),
        CREDIT_APPLIED("CREDIT_APPLIED"),
        MARKETING_OFFER_CREDIT("MARKETING_OFFER_CREDIT"),
        MARKETING_OFFER_CREDIT_APPLIED("MARKETING_OFFER_CREDIT_APPLIED"),
        GOODWILL_CREDIT("GOODWILL_CREDIT"),
        GOODWILL_CREDIT_APPLIED("GOODWILL_CREDIT_APPLIED"),
        INTERNAL_CREDIT("INTERNAL_CREDIT"),
        INTERNAL_CREDIT_APPLIED("INTERNAL_CREDIT_APPLIED"),
        PREPAID_CREDIT("PREPAID_CREDIT"),
        PREPAID_CREDIT_APPLIED("PREPAID_CREDIT_APPLIED"),
        SALES_INCENTIVE_CREDIT("SALES_INCENTIVE_CREDIT"),
        SALES_INCENTIVE_CREDIT_APPLIED("SALES_INCENTIVE_CREDIT_APPLIED"),
        CREDIT_EXPIRED("CREDIT_EXPIRED"),
        FUTURE_CREDIT("FUTURE_CREDIT"),
        REFERRAL_CREDIT("REFERRAL_CREDIT"),
        INVOICE_SALES_INCENTIVE_CREDIT("INVOICE_SALES_INCENTIVE_CREDIT"),
        INVOICE_SALES_INCENTIVE_CREDIT_APPLIED("INVOICE_SALES_INCENTIVE_CREDIT_APPLIED"),
        PREPAID_CREDIT_REFUND("PREPAID_CREDIT_REFUND");

        private String value;

        DiscountTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static DiscountTypeEnum fromValue(String value) {
            for (DiscountTypeEnum b : DiscountTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            return null;
        }
    }
    public static final String JSON_PROPERTY_DISCOUNT_TYPE = "discountType";
    private DiscountTypeEnum discountType;

    public static final String JSON_PROPERTY_DISCOUNT_IN_MICRO_CURRENCY = "discountInMicroCurrency";
    private BigDecimal discountInMicroCurrency;

    public static final String JSON_PROPERTY_DISCOUNT_CURRENCY = "discountCurrency";
    private String discountCurrency;

    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public static final String JSON_PROPERTY_REMAINING_DISCOUNT_IN_MICRO_CURRENCY = "remainingDiscountInMicroCurrency";
    private BigDecimal remainingDiscountInMicroCurrency;

    public AdsCreditDiscountsResponse() {
    }

    public AdsCreditDiscountsResponse active(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * True if the offer code is currently active.
     * @return active
     */
    @Nullable
    @Schema(name = "active", example = "true", description = "True if the offer code is currently active.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ACTIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getActive() {
        return active;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActive(Boolean active) {
        this.active = active;
    }

    public AdsCreditDiscountsResponse advertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }

    /**
     * Advertiser ID the offer was applied to.
     * @return advertiserId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "advertiser_id", example = "12312451231", description = "Advertiser ID the offer was applied to.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ADVERTISER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAdvertiserId() {
        return advertiserId;
    }

    @JsonProperty(JSON_PROPERTY_ADVERTISER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
    }

    public AdsCreditDiscountsResponse discountType(DiscountTypeEnum discountType) {
        this.discountType = discountType;
        return this;
    }

    /**
     * The type of discount of this credit
     * @return discountType
     */
    @Nullable
    @Schema(name = "discountType", description = "The type of discount of this credit", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DISCOUNT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DiscountTypeEnum getDiscountType() {
        return discountType;
    }

    @JsonProperty(JSON_PROPERTY_DISCOUNT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDiscountType(DiscountTypeEnum discountType) {
        this.discountType = discountType;
    }

    public AdsCreditDiscountsResponse discountInMicroCurrency(BigDecimal discountInMicroCurrency) {
        this.discountInMicroCurrency = discountInMicroCurrency;
        return this;
    }

    /**
     * The discount applied in the offer’s currency value.
     * @return discountInMicroCurrency
     */
    @Nullable
    @Schema(name = "discountInMicroCurrency", example = "125000000", description = "The discount applied in the offer’s currency value.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DISCOUNT_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getDiscountInMicroCurrency() {
        return discountInMicroCurrency;
    }

    @JsonProperty(JSON_PROPERTY_DISCOUNT_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDiscountInMicroCurrency(BigDecimal discountInMicroCurrency) {
        this.discountInMicroCurrency = discountInMicroCurrency;
    }

    public AdsCreditDiscountsResponse discountCurrency(String discountCurrency) {
        this.discountCurrency = discountCurrency;
        return this;
    }

    /**
     * Currency value for the discount.
     * @return discountCurrency
     */
    @Nullable
    @Schema(name = "discountCurrency", example = "USD", description = "Currency value for the discount.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DISCOUNT_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDiscountCurrency() {
        return discountCurrency;
    }

    @JsonProperty(JSON_PROPERTY_DISCOUNT_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDiscountCurrency(String discountCurrency) {
        this.discountCurrency = discountCurrency;
    }

    public AdsCreditDiscountsResponse title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Human readable title of the offer code.
     * @return title
     */
    @Nullable
    @Schema(name = "title", example = "Ads Credits", description = "Human readable title of the offer code.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTitle() {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitle(String title) {
        this.title = title;
    }

    public AdsCreditDiscountsResponse remainingDiscountInMicroCurrency(BigDecimal remainingDiscountInMicroCurrency) {
        this.remainingDiscountInMicroCurrency = remainingDiscountInMicroCurrency;
        return this;
    }

    /**
     * The credits left to spend.
     * @return remainingDiscountInMicroCurrency
     */
    @Nullable
    @Schema(name = "remainingDiscountInMicroCurrency", example = "125000000", description = "The credits left to spend.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REMAINING_DISCOUNT_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getRemainingDiscountInMicroCurrency() {
        return remainingDiscountInMicroCurrency;
    }

    @JsonProperty(JSON_PROPERTY_REMAINING_DISCOUNT_IN_MICRO_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRemainingDiscountInMicroCurrency(BigDecimal remainingDiscountInMicroCurrency) {
        this.remainingDiscountInMicroCurrency = remainingDiscountInMicroCurrency;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AdsCreditDiscountsResponse adsCreditDiscountsResponse = (AdsCreditDiscountsResponse) o;
        return Objects.equals(this.active, adsCreditDiscountsResponse.active) &&
            Objects.equals(this.advertiserId, adsCreditDiscountsResponse.advertiserId) &&
            Objects.equals(this.discountType, adsCreditDiscountsResponse.discountType) &&
            Objects.equals(this.discountInMicroCurrency, adsCreditDiscountsResponse.discountInMicroCurrency) &&
            Objects.equals(this.discountCurrency, adsCreditDiscountsResponse.discountCurrency) &&
            Objects.equals(this.title, adsCreditDiscountsResponse.title) &&
            Objects.equals(this.remainingDiscountInMicroCurrency, adsCreditDiscountsResponse.remainingDiscountInMicroCurrency);
    }

    @Override
    public int hashCode() {
        return Objects.hash(active, advertiserId, discountType, discountInMicroCurrency, discountCurrency, title, remainingDiscountInMicroCurrency);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdsCreditDiscountsResponse {\n");
        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
        sb.append("    discountType: ").append(toIndentedString(discountType)).append("\n");
        sb.append("    discountInMicroCurrency: ").append(toIndentedString(discountInMicroCurrency)).append("\n");
        sb.append("    discountCurrency: ").append(toIndentedString(discountCurrency)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    remainingDiscountInMicroCurrency: ").append(toIndentedString(remainingDiscountInMicroCurrency)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

