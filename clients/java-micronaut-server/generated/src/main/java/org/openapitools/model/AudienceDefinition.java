/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Queryable audience representation.
 */
@Schema(name = "AudienceDefinition", description = "Queryable audience representation.")
@JsonPropertyOrder({
  AudienceDefinition.JSON_PROPERTY_DATE,
  AudienceDefinition.JSON_PROPERTY_TYPE,
  AudienceDefinition.JSON_PROPERTY_SCOPE
})
@JsonTypeName("AudienceDefinition")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AudienceDefinition {
    public static final String JSON_PROPERTY_DATE = "date";
    private String date;

    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    public static final String JSON_PROPERTY_SCOPE = "scope";
    private String scope;

    public AudienceDefinition() {
    }

    public AudienceDefinition date(String date) {
        this.date = date;
        return this;
    }

    /**
     * Generation date
     * @return date
     */
    @Nullable
    @Schema(name = "date", example = "2022-10-09", description = "Generation date", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDate() {
        return date;
    }

    @JsonProperty(JSON_PROPERTY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDate(String date) {
        this.date = date;
    }

    public AudienceDefinition type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Generated audience type to request.
     * @return type
     */
    @Nullable
    @Schema(name = "type", description = "Generated audience type to request.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(String type) {
        this.type = type;
    }

    public AudienceDefinition scope(String scope) {
        this.scope = scope;
        return this;
    }

    /**
     * Generated audience scope to request.
     * @return scope
     */
    @Nullable
    @Schema(name = "scope", description = "Generated audience scope to request.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getScope() {
        return scope;
    }

    @JsonProperty(JSON_PROPERTY_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScope(String scope) {
        this.scope = scope;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AudienceDefinition audienceDefinition = (AudienceDefinition) o;
        return Objects.equals(this.date, audienceDefinition.date) &&
            Objects.equals(this.type, audienceDefinition.type) &&
            Objects.equals(this.scope, audienceDefinition.scope);
    }

    @Override
    public int hashCode() {
        return Objects.hash(date, type, scope);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AudienceDefinition {\n");
        sb.append("    date: ").append(toIndentedString(date)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

