/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.ObjectiveType;
import org.openapitools.model.PinterestTagEventData;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * JSON object defining targeted audience users. Example rule formats per audience type:&lt;br&gt;CUSTOMER_LIST: { \&quot;customer_list_id\&quot;: \&quot;&amp;lt;customer list ID&amp;gt;\&quot;}&lt;br&gt;ACTALIKE: { \&quot;seed_id\&quot;: [\&quot;&amp;lt;audience ID&amp;gt;\&quot;], \&quot;country\&quot;: \&quot;US\&quot;, \&quot;percentage\&quot;: \&quot;10\&quot; }&lt;br&gt;(Valid countries include: \&quot;US\&quot;, \&quot;CA\&quot;, and \&quot;GB\&quot;. Percentage should be 1-10.&lt;br&gt;The targeted audience should be this % size across Pinterest.)&lt;br&gt;VISITOR: { \&quot;visitor_source_id\&quot;: [\&quot;&amp;lt;conversion tag ID&amp;gt;\&quot;], \&quot;retention_days\&quot;: \&quot;180\&quot;, \&quot;event_source\&quot;: {\&quot;&#x3D;\&quot;: [\&quot;web\&quot;, \&quot;mobile\&quot;]}, \&quot;ingestion_source\&quot;: {\&quot;&#x3D;\&quot;: [\&quot;tag\&quot;]}}&lt;br&gt;(Retention days should be 1-540. Retention applies to specific customers.)&lt;br&gt;ENGAGEMENT: {\&quot;engagement_domain\&quot;: [\&quot;www.entomi.com\&quot;], \&quot;engager_type\&quot;: 1}&lt;br&gt;For more details on engagement audiences, see &lt;a href&#x3D;\&quot;/docs/redoc/adtech_ads_v4/#section/November-2021\&quot; target&#x3D;\&quot;_blank\&quot;&gt;November 2021 changelog&lt;/a&gt;.
 */
@Schema(name = "AudienceRule", description = "JSON object defining targeted audience users. Example rule formats per audience type:<br>CUSTOMER_LIST: { \"customer_list_id\": \"&lt;customer list ID&gt;\"}<br>ACTALIKE: { \"seed_id\": [\"&lt;audience ID&gt;\"], \"country\": \"US\", \"percentage\": \"10\" }<br>(Valid countries include: \"US\", \"CA\", and \"GB\". Percentage should be 1-10.<br>The targeted audience should be this % size across Pinterest.)<br>VISITOR: { \"visitor_source_id\": [\"&lt;conversion tag ID&gt;\"], \"retention_days\": \"180\", \"event_source\": {\"=\": [\"web\", \"mobile\"]}, \"ingestion_source\": {\"=\": [\"tag\"]}}<br>(Retention days should be 1-540. Retention applies to specific customers.)<br>ENGAGEMENT: {\"engagement_domain\": [\"www.entomi.com\"], \"engager_type\": 1}<br>For more details on engagement audiences, see <a href=\"/docs/redoc/adtech_ads_v4/#section/November-2021\" target=\"_blank\">November 2021 changelog</a>.")
@JsonPropertyOrder({
  AudienceRule.JSON_PROPERTY_COUNTRY,
  AudienceRule.JSON_PROPERTY_CUSTOMER_LIST_ID,
  AudienceRule.JSON_PROPERTY_ENGAGEMENT_DOMAIN,
  AudienceRule.JSON_PROPERTY_ENGAGEMENT_TYPE,
  AudienceRule.JSON_PROPERTY_EVENT,
  AudienceRule.JSON_PROPERTY_EVENT_DATA,
  AudienceRule.JSON_PROPERTY_PERCENTAGE,
  AudienceRule.JSON_PROPERTY_PIN_ID,
  AudienceRule.JSON_PROPERTY_PREFILL,
  AudienceRule.JSON_PROPERTY_RETENTION_DAYS,
  AudienceRule.JSON_PROPERTY_SEED_ID,
  AudienceRule.JSON_PROPERTY_URL,
  AudienceRule.JSON_PROPERTY_VISITOR_SOURCE_ID,
  AudienceRule.JSON_PROPERTY_EVENT_SOURCE,
  AudienceRule.JSON_PROPERTY_INGESTION_SOURCE,
  AudienceRule.JSON_PROPERTY_ENGAGER_TYPE,
  AudienceRule.JSON_PROPERTY_CAMPAIGN_ID,
  AudienceRule.JSON_PROPERTY_AD_ID,
  AudienceRule.JSON_PROPERTY_OBJECTIVE_TYPE,
  AudienceRule.JSON_PROPERTY_AD_ACCOUNT_ID
})
@JsonTypeName("AudienceRule")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class AudienceRule {
    public static final String JSON_PROPERTY_COUNTRY = "country";
    private String country;

    public static final String JSON_PROPERTY_CUSTOMER_LIST_ID = "customer_list_id";
    private String customerListId;

    public static final String JSON_PROPERTY_ENGAGEMENT_DOMAIN = "engagement_domain";
    private List<String> engagementDomain = null;

    public static final String JSON_PROPERTY_ENGAGEMENT_TYPE = "engagement_type";
    private String engagementType;

    public static final String JSON_PROPERTY_EVENT = "event";
    private String event;

    public static final String JSON_PROPERTY_EVENT_DATA = "event_data";
    private PinterestTagEventData eventData;

    public static final String JSON_PROPERTY_PERCENTAGE = "percentage";
    private Integer percentage;

    public static final String JSON_PROPERTY_PIN_ID = "pin_id";
    private List<@Pattern(regexp = "^\\d+$")String> pinId = null;

    public static final String JSON_PROPERTY_PREFILL = "prefill";
    private Boolean prefill;

    public static final String JSON_PROPERTY_RETENTION_DAYS = "retention_days";
    private Integer retentionDays;

    public static final String JSON_PROPERTY_SEED_ID = "seed_id";
    private List<@Pattern(regexp = "^\\d+$")String> seedId = null;

    public static final String JSON_PROPERTY_URL = "url";
    private List<String> url = null;

    public static final String JSON_PROPERTY_VISITOR_SOURCE_ID = "visitor_source_id";
    private String visitorSourceId;

    public static final String JSON_PROPERTY_EVENT_SOURCE = "event_source";
    private Object eventSource;

    public static final String JSON_PROPERTY_INGESTION_SOURCE = "ingestion_source";
    private Object ingestionSource;

    public static final String JSON_PROPERTY_ENGAGER_TYPE = "engager_type";
    private Integer engagerType;

    public static final String JSON_PROPERTY_CAMPAIGN_ID = "campaign_id";
    private List<@Pattern(regexp = "^\\d+$")String> campaignId = null;

    public static final String JSON_PROPERTY_AD_ID = "ad_id";
    private List<@Pattern(regexp = "^\\d+$")String> adId = null;

    public static final String JSON_PROPERTY_OBJECTIVE_TYPE = "objective_type";
    private List<ObjectiveType> objectiveType = null;

    public static final String JSON_PROPERTY_AD_ACCOUNT_ID = "ad_account_id";
    private String adAccountId;

    public AudienceRule() {
    }

    public AudienceRule country(String country) {
        this.country = country;
        return this;
    }

    /**
     * Valid countries include: \&quot;US\&quot;, \&quot;CA\&quot;, and \&quot;GB\&quot;.
     * @return country
     */
    @Nullable
    @Schema(name = "country", example = "US", description = "Valid countries include: \"US\", \"CA\", and \"GB\".", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountry(String country) {
        this.country = country;
    }

    public AudienceRule customerListId(String customerListId) {
        this.customerListId = customerListId;
        return this;
    }

    /**
     * Customer list ID. For CUSTOMER_LIST &#x60;audience_type&#x60;.
     * @return customerListId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "customer_list_id", example = "5497558859876", description = "Customer list ID. For CUSTOMER_LIST `audience_type`.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CUSTOMER_LIST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCustomerListId() {
        return customerListId;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOMER_LIST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomerListId(String customerListId) {
        this.customerListId = customerListId;
    }

    public AudienceRule engagementDomain(List<String> engagementDomain) {
        this.engagementDomain = engagementDomain;
        return this;
    }

    public AudienceRule addEngagementDomainItem(String engagementDomainItem) {
        if (this.engagementDomain == null) {
            this.engagementDomain = new ArrayList<>();
        }
        this.engagementDomain.add(engagementDomainItem);
        return this;
    }

    /**
     * The audience account&#39;s verified domain. **Required** for ENGAGEMENT &#x60;audience_type&#x60;.
     * @return engagementDomain
     */
    @Nullable
    @Schema(name = "engagement_domain", example = "[\"www.somedomain.com\"]", description = "The audience account's verified domain. **Required** for ENGAGEMENT `audience_type`.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ENGAGEMENT_DOMAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getEngagementDomain() {
        return engagementDomain;
    }

    @JsonProperty(JSON_PROPERTY_ENGAGEMENT_DOMAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEngagementDomain(List<String> engagementDomain) {
        this.engagementDomain = engagementDomain;
    }

    public AudienceRule engagementType(String engagementType) {
        this.engagementType = engagementType;
        return this;
    }

    /**
     * Engagement type enum. Optional for ENGAGEMENT &#x60;audience_type&#x60;. Supported values are &#x60;click&#x60;, &#x60;save&#x60;, &#x60;closeup&#x60;, &#x60;comment&#x60; and &#x60;like&#x60;. All engagements are included if this field is not set. 
     * @return engagementType
     */
    @Nullable
    @Schema(name = "engagement_type", example = "click", description = "Engagement type enum. Optional for ENGAGEMENT `audience_type`. Supported values are `click`, `save`, `closeup`, `comment` and `like`. All engagements are included if this field is not set. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ENGAGEMENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEngagementType() {
        return engagementType;
    }

    @JsonProperty(JSON_PROPERTY_ENGAGEMENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEngagementType(String engagementType) {
        this.engagementType = engagementType;
    }

    public AudienceRule event(String event) {
        this.event = event;
        return this;
    }

    /**
     * A Pinterest tag event. Optional for VISITOR &#x60;audience_type&#x60;. Possible values are &#x60;pagevisit&#x60;, &#x60;signup&#x60;, &#x60;checkout&#x60;, &#x60;viewcategory&#x60;, &#x60;search&#x60;, &#x60;addtocart&#x60;, &#x60;watchvideo&#x60;, &#x60;lead&#x60;, and &#x60;custom&#x60;. This field also accepts a partner-defined Pinterest tag event.
     * @return event
     */
    @Nullable
    @Schema(name = "event", example = "checkout", description = "A Pinterest tag event. Optional for VISITOR `audience_type`. Possible values are `pagevisit`, `signup`, `checkout`, `viewcategory`, `search`, `addtocart`, `watchvideo`, `lead`, and `custom`. This field also accepts a partner-defined Pinterest tag event.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEvent() {
        return event;
    }

    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEvent(String event) {
        this.event = event;
    }

    public AudienceRule eventData(PinterestTagEventData eventData) {
        this.eventData = eventData;
        return this;
    }

    /**
     * Get eventData
     * @return eventData
     */
    @Valid
    @Nullable
    @Schema(name = "event_data", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_EVENT_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PinterestTagEventData getEventData() {
        return eventData;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventData(PinterestTagEventData eventData) {
        this.eventData = eventData;
    }

    public AudienceRule percentage(Integer percentage) {
        this.percentage = percentage;
        return this;
    }

    /**
     * Percentage should be 1-10. The targeted audience should be this % size across Pinterest.
     * @return percentage
     */
    @Nullable
    @Schema(name = "percentage", example = "3", description = "Percentage should be 1-10. The targeted audience should be this % size across Pinterest.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PERCENTAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getPercentage() {
        return percentage;
    }

    @JsonProperty(JSON_PROPERTY_PERCENTAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPercentage(Integer percentage) {
        this.percentage = percentage;
    }

    public AudienceRule pinId(List<@Pattern(regexp = "^\\d+$")String> pinId) {
        this.pinId = pinId;
        return this;
    }

    public AudienceRule addPinIdItem(String pinIdItem) {
        if (this.pinId == null) {
            this.pinId = new ArrayList<>();
        }
        this.pinId.add(pinIdItem);
        return this;
    }

    /**
     * IDs of engaged organic pins. Optional for ENGAGEMENT &#x60;audience_type&#x60;. For example, \&quot;pin_id:\&quot;: [\&quot;34567\&quot;]
     * @return pinId
     */
    @Nullable
    @Schema(name = "pin_id", example = "[\"34567\"]", description = "IDs of engaged organic pins. Optional for ENGAGEMENT `audience_type`. For example, \"pin_id:\": [\"34567\"]", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PIN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Pattern(regexp = "^\\d+$")String> getPinId() {
        return pinId;
    }

    @JsonProperty(JSON_PROPERTY_PIN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPinId(List<@Pattern(regexp = "^\\d+$")String> pinId) {
        this.pinId = pinId;
    }

    public AudienceRule prefill(Boolean prefill) {
        this.prefill = prefill;
        return this;
    }

    /**
     * Optional for VISITOR &#x60;audience_type&#x60;. If &#x60;true&#x60;, the specified rule on existing engagement data is applied to pre-populate the audience. If &#x60;false&#x60;, the audience is empty at creation time. The default is &#x60;true&#x60;.
     * @return prefill
     */
    @Nullable
    @Schema(name = "prefill", example = "true", description = "Optional for VISITOR `audience_type`. If `true`, the specified rule on existing engagement data is applied to pre-populate the audience. If `false`, the audience is empty at creation time. The default is `true`.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PREFILL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getPrefill() {
        return prefill;
    }

    @JsonProperty(JSON_PROPERTY_PREFILL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrefill(Boolean prefill) {
        this.prefill = prefill;
    }

    public AudienceRule retentionDays(Integer retentionDays) {
        this.retentionDays = retentionDays;
        return this;
    }

    /**
     * Number of days a Pinterest user remains in the audience. Optional for ENGAGEMENT and VISITOR &#x60;audience_type&#x60;. Accepted range is 1-540. Defaults to 180 if not specified.
     * @return retentionDays
     */
    @Nullable
    @Schema(name = "retention_days", example = "30", description = "Number of days a Pinterest user remains in the audience. Optional for ENGAGEMENT and VISITOR `audience_type`. Accepted range is 1-540. Defaults to 180 if not specified.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RETENTION_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRetentionDays() {
        return retentionDays;
    }

    @JsonProperty(JSON_PROPERTY_RETENTION_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRetentionDays(Integer retentionDays) {
        this.retentionDays = retentionDays;
    }

    public AudienceRule seedId(List<@Pattern(regexp = "^\\d+$")String> seedId) {
        this.seedId = seedId;
        return this;
    }

    public AudienceRule addSeedIdItem(String seedIdItem) {
        if (this.seedId == null) {
            this.seedId = new ArrayList<>();
        }
        this.seedId.add(seedIdItem);
        return this;
    }

    /**
     * Audience ID(s). For ACTALIKE &#x60;audience_type&#x60;. 
     * @return seedId
     */
    @Nullable
    @Schema(name = "seed_id", example = "[\"2542620639259\",\"2542620639261\"]", description = "Audience ID(s). For ACTALIKE `audience_type`. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SEED_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Pattern(regexp = "^\\d+$")String> getSeedId() {
        return seedId;
    }

    @JsonProperty(JSON_PROPERTY_SEED_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSeedId(List<@Pattern(regexp = "^\\d+$")String> seedId) {
        this.seedId = seedId;
    }

    public AudienceRule url(List<String> url) {
        this.url = url;
        return this;
    }

    public AudienceRule addUrlItem(String urlItem) {
        if (this.url == null) {
            this.url = new ArrayList<>();
        }
        this.url.add(urlItem);
        return this;
    }

    /**
     * Optional for ENGAGEMENT or VISITOR &#x60;audience_type&#x60;. For ENGAGEMENT, it is the engaged pin&#39;s URL. For VISITOR, you can use it as a string or a {operator: value} object for filtering visitors based on conversion tag event URLs. Supported operators are [ &#x3D;, !&#x3D;, contains, not_contains].&lt;br&gt;Example 1:  \&quot;url\&quot;: \&quot;http://www.myonlinestore123.com/view_item/shoe\&quot;&lt;br&gt;Example 2: \&quot;url\&quot;: {\&quot;contains\&quot;: \&quot;/view_item/shoe\&quot;}
     * @return url
     */
    @Nullable
    @Schema(name = "url", description = "Optional for ENGAGEMENT or VISITOR `audience_type`. For ENGAGEMENT, it is the engaged pin's URL. For VISITOR, you can use it as a string or a {operator: value} object for filtering visitors based on conversion tag event URLs. Supported operators are [ =, !=, contains, not_contains].<br>Example 1:  \"url\": \"http://www.myonlinestore123.com/view_item/shoe\"<br>Example 2: \"url\": {\"contains\": \"/view_item/shoe\"}", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getUrl() {
        return url;
    }

    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUrl(List<String> url) {
        this.url = url;
    }

    public AudienceRule visitorSourceId(String visitorSourceId) {
        this.visitorSourceId = visitorSourceId;
        return this;
    }

    /**
     * The conversion tag ID, or the Pinterest tag ID, that you use on your website. For VISITOR &#x60;audience_type&#x60;.
     * @return visitorSourceId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "visitor_source_id", example = "549755885175", description = "The conversion tag ID, or the Pinterest tag ID, that you use on your website. For VISITOR `audience_type`.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_VISITOR_SOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVisitorSourceId() {
        return visitorSourceId;
    }

    @JsonProperty(JSON_PROPERTY_VISITOR_SOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVisitorSourceId(String visitorSourceId) {
        this.visitorSourceId = visitorSourceId;
    }

    public AudienceRule eventSource(Object eventSource) {
        this.eventSource = eventSource;
        return this;
    }

    /**
     * Optional for VISITOR. You can use it as a {&#39;&#x3D;&#39;: [value]}. Supported values are: web, mobile, offline
     * @return eventSource
     */
    @Nullable
    @Schema(name = "event_source", example = "{\"=\":[\"web\",\"mobile\"]}", description = "Optional for VISITOR. You can use it as a {'=': [value]}. Supported values are: web, mobile, offline", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_EVENT_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Object getEventSource() {
        return eventSource;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventSource(Object eventSource) {
        this.eventSource = eventSource;
    }

    public AudienceRule ingestionSource(Object ingestionSource) {
        this.ingestionSource = ingestionSource;
        return this;
    }

    /**
     * Optional for VISITOR. You can use it as a {&#39;&#x3D;&#39;: [value]}. Supported values are: tag, mmp, file_upload, conversions_api
     * @return ingestionSource
     */
    @Nullable
    @Schema(name = "ingestion_source", example = "{\"=\":[\"tag\"]}", description = "Optional for VISITOR. You can use it as a {'=': [value]}. Supported values are: tag, mmp, file_upload, conversions_api", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INGESTION_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Object getIngestionSource() {
        return ingestionSource;
    }

    @JsonProperty(JSON_PROPERTY_INGESTION_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIngestionSource(Object ingestionSource) {
        this.ingestionSource = ingestionSource;
    }

    public AudienceRule engagerType(Integer engagerType) {
        this.engagerType = engagerType;
        return this;
    }

    /**
     * Optional for ENGAGEMENT. Engager type value should be 1-2.
     * @return engagerType
     */
    @Nullable
    @Schema(name = "engager_type", example = "1", description = "Optional for ENGAGEMENT. Engager type value should be 1-2.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ENGAGER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getEngagerType() {
        return engagerType;
    }

    @JsonProperty(JSON_PROPERTY_ENGAGER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEngagerType(Integer engagerType) {
        this.engagerType = engagerType;
    }

    public AudienceRule campaignId(List<@Pattern(regexp = "^\\d+$")String> campaignId) {
        this.campaignId = campaignId;
        return this;
    }

    public AudienceRule addCampaignIdItem(String campaignIdItem) {
        if (this.campaignId == null) {
            this.campaignId = new ArrayList<>();
        }
        this.campaignId.add(campaignIdItem);
        return this;
    }

    /**
     * Campaign ID for engagement audience filter.
     * @return campaignId
     */
    @Nullable
    @Schema(name = "campaign_id", example = "[\"626744528398\"]", description = "Campaign ID for engagement audience filter.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Pattern(regexp = "^\\d+$")String> getCampaignId() {
        return campaignId;
    }

    @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCampaignId(List<@Pattern(regexp = "^\\d+$")String> campaignId) {
        this.campaignId = campaignId;
    }

    public AudienceRule adId(List<@Pattern(regexp = "^\\d+$")String> adId) {
        this.adId = adId;
        return this;
    }

    public AudienceRule addAdIdItem(String adIdItem) {
        if (this.adId == null) {
            this.adId = new ArrayList<>();
        }
        this.adId.add(adIdItem);
        return this;
    }

    /**
     * Ad ID for engagement audience filter.
     * @return adId
     */
    @Nullable
    @Schema(name = "ad_id", example = "[\"687201361754\"]", description = "Ad ID for engagement audience filter.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Pattern(regexp = "^\\d+$")String> getAdId() {
        return adId;
    }

    @JsonProperty(JSON_PROPERTY_AD_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdId(List<@Pattern(regexp = "^\\d+$")String> adId) {
        this.adId = adId;
    }

    public AudienceRule objectiveType(List<ObjectiveType> objectiveType) {
        this.objectiveType = objectiveType;
        return this;
    }

    public AudienceRule addObjectiveTypeItem(ObjectiveType objectiveTypeItem) {
        if (this.objectiveType == null) {
            this.objectiveType = new ArrayList<>();
        }
        this.objectiveType.add(objectiveTypeItem);
        return this;
    }

    /**
     * Objective for engagement audience filter.
     * @return objectiveType
     */
    @Nullable
    @Schema(name = "objective_type", example = "[\"AWARENESS\"]", description = "Objective for engagement audience filter.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OBJECTIVE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<ObjectiveType> getObjectiveType() {
        return objectiveType;
    }

    @JsonProperty(JSON_PROPERTY_OBJECTIVE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setObjectiveType(List<ObjectiveType> objectiveType) {
        this.objectiveType = objectiveType;
    }

    public AudienceRule adAccountId(String adAccountId) {
        this.adAccountId = adAccountId;
        return this;
    }

    /**
     * Ad account ID.
     * @return adAccountId
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "ad_account_id", example = "549755885175", description = "Ad account ID.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AD_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAdAccountId() {
        return adAccountId;
    }

    @JsonProperty(JSON_PROPERTY_AD_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdAccountId(String adAccountId) {
        this.adAccountId = adAccountId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AudienceRule audienceRule = (AudienceRule) o;
        return Objects.equals(this.country, audienceRule.country) &&
            Objects.equals(this.customerListId, audienceRule.customerListId) &&
            Objects.equals(this.engagementDomain, audienceRule.engagementDomain) &&
            Objects.equals(this.engagementType, audienceRule.engagementType) &&
            Objects.equals(this.event, audienceRule.event) &&
            Objects.equals(this.eventData, audienceRule.eventData) &&
            Objects.equals(this.percentage, audienceRule.percentage) &&
            Objects.equals(this.pinId, audienceRule.pinId) &&
            Objects.equals(this.prefill, audienceRule.prefill) &&
            Objects.equals(this.retentionDays, audienceRule.retentionDays) &&
            Objects.equals(this.seedId, audienceRule.seedId) &&
            Objects.equals(this.url, audienceRule.url) &&
            Objects.equals(this.visitorSourceId, audienceRule.visitorSourceId) &&
            Objects.equals(this.eventSource, audienceRule.eventSource) &&
            Objects.equals(this.ingestionSource, audienceRule.ingestionSource) &&
            Objects.equals(this.engagerType, audienceRule.engagerType) &&
            Objects.equals(this.campaignId, audienceRule.campaignId) &&
            Objects.equals(this.adId, audienceRule.adId) &&
            Objects.equals(this.objectiveType, audienceRule.objectiveType) &&
            Objects.equals(this.adAccountId, audienceRule.adAccountId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(country, customerListId, engagementDomain, engagementType, event, eventData, percentage, pinId, prefill, retentionDays, seedId, url, visitorSourceId, eventSource, ingestionSource, engagerType, campaignId, adId, objectiveType, adAccountId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AudienceRule {\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    customerListId: ").append(toIndentedString(customerListId)).append("\n");
        sb.append("    engagementDomain: ").append(toIndentedString(engagementDomain)).append("\n");
        sb.append("    engagementType: ").append(toIndentedString(engagementType)).append("\n");
        sb.append("    event: ").append(toIndentedString(event)).append("\n");
        sb.append("    eventData: ").append(toIndentedString(eventData)).append("\n");
        sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
        sb.append("    pinId: ").append(toIndentedString(pinId)).append("\n");
        sb.append("    prefill: ").append(toIndentedString(prefill)).append("\n");
        sb.append("    retentionDays: ").append(toIndentedString(retentionDays)).append("\n");
        sb.append("    seedId: ").append(toIndentedString(seedId)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    visitorSourceId: ").append(toIndentedString(visitorSourceId)).append("\n");
        sb.append("    eventSource: ").append(toIndentedString(eventSource)).append("\n");
        sb.append("    ingestionSource: ").append(toIndentedString(ingestionSource)).append("\n");
        sb.append("    engagerType: ").append(toIndentedString(engagerType)).append("\n");
        sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
        sb.append("    adId: ").append(toIndentedString(adId)).append("\n");
        sb.append("    objectiveType: ").append(toIndentedString(objectiveType)).append("\n");
        sb.append("    adAccountId: ").append(toIndentedString(adAccountId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

