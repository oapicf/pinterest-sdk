/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Account
 */
@JsonPropertyOrder({
  Account.JSON_PROPERTY_ACCOUNT_TYPE,
  Account.JSON_PROPERTY_ID,
  Account.JSON_PROPERTY_PROFILE_IMAGE,
  Account.JSON_PROPERTY_WEBSITE_URL,
  Account.JSON_PROPERTY_USERNAME,
  Account.JSON_PROPERTY_ABOUT,
  Account.JSON_PROPERTY_BUSINESS_NAME,
  Account.JSON_PROPERTY_BOARD_COUNT,
  Account.JSON_PROPERTY_PIN_COUNT,
  Account.JSON_PROPERTY_FOLLOWER_COUNT,
  Account.JSON_PROPERTY_FOLLOWING_COUNT,
  Account.JSON_PROPERTY_MONTHLY_VIEWS
})
@JsonTypeName("Account")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class Account {
    /**
     * Type of account
     */
    public enum AccountTypeEnum {
        PINNER("PINNER"),
        BUSINESS("BUSINESS");

        private String value;

        AccountTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static AccountTypeEnum fromValue(String value) {
            for (AccountTypeEnum b : AccountTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_ACCOUNT_TYPE = "account_type";
    private AccountTypeEnum accountType;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_PROFILE_IMAGE = "profile_image";
    private String profileImage;

    public static final String JSON_PROPERTY_WEBSITE_URL = "website_url";
    private String websiteUrl;

    public static final String JSON_PROPERTY_USERNAME = "username";
    private String username;

    public static final String JSON_PROPERTY_ABOUT = "about";
    private String about;

    public static final String JSON_PROPERTY_BUSINESS_NAME = "business_name";
    private String businessName;

    public static final String JSON_PROPERTY_BOARD_COUNT = "board_count";
    private Integer boardCount;

    public static final String JSON_PROPERTY_PIN_COUNT = "pin_count";
    private Integer pinCount;

    public static final String JSON_PROPERTY_FOLLOWER_COUNT = "follower_count";
    private Integer followerCount;

    public static final String JSON_PROPERTY_FOLLOWING_COUNT = "following_count";
    private Integer followingCount;

    public static final String JSON_PROPERTY_MONTHLY_VIEWS = "monthly_views";
    private Integer monthlyViews;

    public Account() {
    }

    public Account accountType(AccountTypeEnum accountType) {
        this.accountType = accountType;
        return this;
    }

    /**
     * Type of account
     * @return accountType
     */
    @Nullable
    @Schema(name = "account_type", description = "Type of account", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public AccountTypeEnum getAccountType() {
        return accountType;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccountType(AccountTypeEnum accountType) {
        this.accountType = accountType;
    }

    public Account id(String id) {
        this.id = id;
        return this;
    }

    /**
     * User account ID.
     * @return id
     */
    @Nullable
    @Pattern(regexp="^\\d+$")
    @Schema(name = "id", example = "2783136121146311751", description = "User account ID.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public Account profileImage(String profileImage) {
        this.profileImage = profileImage;
        return this;
    }

    /**
     * Get profileImage
     * @return profileImage
     */
    @Nullable
    @Schema(name = "profile_image", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PROFILE_IMAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProfileImage() {
        return profileImage;
    }

    @JsonProperty(JSON_PROPERTY_PROFILE_IMAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProfileImage(String profileImage) {
        this.profileImage = profileImage;
    }

    public Account websiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }

    /**
     * Get websiteUrl
     * @return websiteUrl
     */
    @Nullable
    @Schema(name = "website_url", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getWebsiteUrl() {
        return websiteUrl;
    }

    @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
    }

    public Account username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get username
     * @return username
     */
    @Nullable
    @Schema(name = "username", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUsername() {
        return username;
    }

    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsername(String username) {
        this.username = username;
    }

    public Account about(String about) {
        this.about = about;
        return this;
    }

    /**
     * Profile about description.
     * @return about
     */
    @Nullable
    @Schema(name = "about", description = "Profile about description.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ABOUT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAbout() {
        return about;
    }

    @JsonProperty(JSON_PROPERTY_ABOUT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAbout(String about) {
        this.about = about;
    }

    public Account businessName(String businessName) {
        this.businessName = businessName;
        return this;
    }

    /**
     * Get businessName
     * @return businessName
     */
    @Nullable
    @Schema(name = "business_name", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BUSINESS_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBusinessName() {
        return businessName;
    }

    @JsonProperty(JSON_PROPERTY_BUSINESS_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBusinessName(String businessName) {
        this.businessName = businessName;
    }

    /**
     * User account board count.&lt;br/&gt;**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
     * @return boardCount
     */
    @Nullable
    @Schema(name = "board_count", accessMode = Schema.AccessMode.READ_ONLY, example = "14", description = "User account board count.<br/>**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BOARD_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getBoardCount() {
        return boardCount;
    }

    /**
     * User account pin count. This includes both created and saved pins.
     * @return pinCount
     */
    @Nullable
    @Schema(name = "pin_count", accessMode = Schema.AccessMode.READ_ONLY, example = "339", description = "User account pin count. This includes both created and saved pins.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PIN_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getPinCount() {
        return pinCount;
    }

    /**
     * User account follower count.
     * @return followerCount
     */
    @Nullable
    @Schema(name = "follower_count", accessMode = Schema.AccessMode.READ_ONLY, example = "10", description = "User account follower count.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FOLLOWER_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFollowerCount() {
        return followerCount;
    }

    /**
     * User account following count.
     * @return followingCount
     */
    @Nullable
    @Schema(name = "following_count", accessMode = Schema.AccessMode.READ_ONLY, example = "347", description = "User account following count.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FOLLOWING_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFollowingCount() {
        return followingCount;
    }

    /**
     * User account monthly views.
     * @return monthlyViews
     */
    @Nullable
    @Schema(name = "monthly_views", accessMode = Schema.AccessMode.READ_ONLY, example = "163", description = "User account monthly views.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MONTHLY_VIEWS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMonthlyViews() {
        return monthlyViews;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Account account = (Account) o;
        return Objects.equals(this.accountType, account.accountType) &&
            Objects.equals(this.id, account.id) &&
            Objects.equals(this.profileImage, account.profileImage) &&
            Objects.equals(this.websiteUrl, account.websiteUrl) &&
            Objects.equals(this.username, account.username) &&
            Objects.equals(this.about, account.about) &&
            Objects.equals(this.businessName, account.businessName) &&
            Objects.equals(this.boardCount, account.boardCount) &&
            Objects.equals(this.pinCount, account.pinCount) &&
            Objects.equals(this.followerCount, account.followerCount) &&
            Objects.equals(this.followingCount, account.followingCount) &&
            Objects.equals(this.monthlyViews, account.monthlyViews);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountType, id, profileImage, websiteUrl, username, about, businessName, boardCount, pinCount, followerCount, followingCount, monthlyViews);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Account {\n");
        sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    profileImage: ").append(toIndentedString(profileImage)).append("\n");
        sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("    about: ").append(toIndentedString(about)).append("\n");
        sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
        sb.append("    boardCount: ").append(toIndentedString(boardCount)).append("\n");
        sb.append("    pinCount: ").append(toIndentedString(pinCount)).append("\n");
        sb.append("    followerCount: ").append(toIndentedString(followerCount)).append("\n");
        sb.append("    followingCount: ").append(toIndentedString(followingCount)).append("\n");
        sb.append("    monthlyViews: ").append(toIndentedString(monthlyViews)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

