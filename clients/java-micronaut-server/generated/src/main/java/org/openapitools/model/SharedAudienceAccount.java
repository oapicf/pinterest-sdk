/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * SharedAudienceAccount
 */
@JsonPropertyOrder({
  SharedAudienceAccount.JSON_PROPERTY_ACCOUNT_ID,
  SharedAudienceAccount.JSON_PROPERTY_ACCOUNT_NAME,
  SharedAudienceAccount.JSON_PROPERTY_ACCOUNT_TYPE,
  SharedAudienceAccount.JSON_PROPERTY_SHARED_ON_TIMESTAMP
})
@JsonTypeName("SharedAudienceAccount")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class SharedAudienceAccount {
    public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
    private String accountId;

    public static final String JSON_PROPERTY_ACCOUNT_NAME = "account_name";
    private String accountName;

    /**
     * account type
     */
    public enum AccountTypeEnum {
        AD_ACCOUNT("AD_ACCOUNT"),
        BUSINESS_ACCOUNT("BUSINESS_ACCOUNT");

        private String value;

        AccountTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static AccountTypeEnum fromValue(String value) {
            for (AccountTypeEnum b : AccountTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_ACCOUNT_TYPE = "account_type";
    private AccountTypeEnum accountType;

    public static final String JSON_PROPERTY_SHARED_ON_TIMESTAMP = "shared_on_timestamp";
    private Integer sharedOnTimestamp;

    public SharedAudienceAccount(String accountId, String accountName, AccountTypeEnum accountType, Integer sharedOnTimestamp) {
        this.accountId = accountId;
        this.accountName = accountName;
        this.accountType = accountType;
        this.sharedOnTimestamp = sharedOnTimestamp;
    }

    public SharedAudienceAccount accountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * Account ID (ad account or business ID).
     * @return accountId
     */
    @NotNull
    @Pattern(regexp="^\\d+$")
    @Schema(name = "account_id", example = "549755885175", description = "Account ID (ad account or business ID).", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountId() {
        return accountId;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    public SharedAudienceAccount accountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /**
     * Account name.
     * @return accountName
     */
    @NotNull
    @Schema(name = "account_name", example = "Home Depot USA", description = "Account name.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountName() {
        return accountName;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    public SharedAudienceAccount accountType(AccountTypeEnum accountType) {
        this.accountType = accountType;
        return this;
    }

    /**
     * account type
     * @return accountType
     */
    @NotNull
    @Schema(name = "account_type", description = "account type", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AccountTypeEnum getAccountType() {
        return accountType;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountType(AccountTypeEnum accountType) {
        this.accountType = accountType;
    }

    public SharedAudienceAccount sharedOnTimestamp(Integer sharedOnTimestamp) {
        this.sharedOnTimestamp = sharedOnTimestamp;
        return this;
    }

    /**
     * Epoch timestamp in seconds for the shared audience event
     * @return sharedOnTimestamp
     */
    @NotNull
    @Schema(name = "shared_on_timestamp", example = "1677003860", description = "Epoch timestamp in seconds for the shared audience event", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHARED_ON_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getSharedOnTimestamp() {
        return sharedOnTimestamp;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_ON_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSharedOnTimestamp(Integer sharedOnTimestamp) {
        this.sharedOnTimestamp = sharedOnTimestamp;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SharedAudienceAccount sharedAudienceAccount = (SharedAudienceAccount) o;
        return Objects.equals(this.accountId, sharedAudienceAccount.accountId) &&
            Objects.equals(this.accountName, sharedAudienceAccount.accountName) &&
            Objects.equals(this.accountType, sharedAudienceAccount.accountType) &&
            Objects.equals(this.sharedOnTimestamp, sharedAudienceAccount.sharedOnTimestamp);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, accountName, accountType, sharedOnTimestamp);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SharedAudienceAccount {\n");
        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
        sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
        sb.append("    sharedOnTimestamp: ").append(toIndentedString(sharedOnTimestamp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

