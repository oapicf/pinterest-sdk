/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * SingleInterestTargetingOptionResponse
 */
@JsonPropertyOrder({
  SingleInterestTargetingOptionResponse.JSON_PROPERTY_ID,
  SingleInterestTargetingOptionResponse.JSON_PROPERTY_NAME,
  SingleInterestTargetingOptionResponse.JSON_PROPERTY_CHILD_INTERESTS,
  SingleInterestTargetingOptionResponse.JSON_PROPERTY_LEVEL
})
@JsonTypeName("SingleInterestTargetingOptionResponse")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class SingleInterestTargetingOptionResponse {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_CHILD_INTERESTS = "child_interests";
    private List<String> childInterests = null;

    public static final String JSON_PROPERTY_LEVEL = "level";
    private Integer level;

    public SingleInterestTargetingOptionResponse() {
    }

    public SingleInterestTargetingOptionResponse id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * @return id
     */
    @Nullable
    @Pattern(regexp="\\d+")
    @Schema(name = "id", example = "945391946569", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public SingleInterestTargetingOptionResponse name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    @Nullable
    @Schema(name = "name", example = "Dress", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public SingleInterestTargetingOptionResponse childInterests(List<String> childInterests) {
        this.childInterests = childInterests;
        return this;
    }

    public SingleInterestTargetingOptionResponse addChildInterestsItem(String childInterestsItem) {
        if (this.childInterests == null) {
            this.childInterests = new ArrayList<>();
        }
        this.childInterests.add(childInterestsItem);
        return this;
    }

    /**
     * Get childInterests
     * @return childInterests
     */
    @Nullable
    @Schema(name = "child_interests", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CHILD_INTERESTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getChildInterests() {
        return childInterests;
    }

    @JsonProperty(JSON_PROPERTY_CHILD_INTERESTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChildInterests(List<String> childInterests) {
        this.childInterests = childInterests;
    }

    public SingleInterestTargetingOptionResponse level(Integer level) {
        this.level = level;
        return this;
    }

    /**
     * Get level
     * @return level
     */
    @Nullable
    @Schema(name = "level", example = "2", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_LEVEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getLevel() {
        return level;
    }

    @JsonProperty(JSON_PROPERTY_LEVEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLevel(Integer level) {
        this.level = level;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SingleInterestTargetingOptionResponse singleInterestTargetingOptionResponse = (SingleInterestTargetingOptionResponse) o;
        return Objects.equals(this.id, singleInterestTargetingOptionResponse.id) &&
            Objects.equals(this.name, singleInterestTargetingOptionResponse.name) &&
            Objects.equals(this.childInterests, singleInterestTargetingOptionResponse.childInterests) &&
            Objects.equals(this.level, singleInterestTargetingOptionResponse.level);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, childInterests, level);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SingleInterestTargetingOptionResponse {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    childInterests: ").append(toIndentedString(childInterests)).append("\n");
        sb.append("    level: ").append(toIndentedString(level)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

