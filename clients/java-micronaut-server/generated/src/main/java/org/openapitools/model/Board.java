/*
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.BoardMedia;
import org.openapitools.model.BoardOwner;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Board
 */
@Schema(name = "Board", description = "Board")
@JsonPropertyOrder({
  Board.JSON_PROPERTY_ID,
  Board.JSON_PROPERTY_CREATED_AT,
  Board.JSON_PROPERTY_BOARD_PINS_MODIFIED_AT,
  Board.JSON_PROPERTY_NAME,
  Board.JSON_PROPERTY_DESCRIPTION,
  Board.JSON_PROPERTY_COLLABORATOR_COUNT,
  Board.JSON_PROPERTY_PIN_COUNT,
  Board.JSON_PROPERTY_FOLLOWER_COUNT,
  Board.JSON_PROPERTY_MEDIA,
  Board.JSON_PROPERTY_OWNER,
  Board.JSON_PROPERTY_PRIVACY
})
@JsonTypeName("Board")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-05T02:03:37.829873561Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class Board {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_BOARD_PINS_MODIFIED_AT = "board_pins_modified_at";
    private OffsetDateTime boardPinsModifiedAt;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_COLLABORATOR_COUNT = "collaborator_count";
    private Integer collaboratorCount;

    public static final String JSON_PROPERTY_PIN_COUNT = "pin_count";
    private Integer pinCount;

    public static final String JSON_PROPERTY_FOLLOWER_COUNT = "follower_count";
    private Integer followerCount;

    public static final String JSON_PROPERTY_MEDIA = "media";
    private BoardMedia media;

    public static final String JSON_PROPERTY_OWNER = "owner";
    private BoardOwner owner;

    /**
     * Privacy setting for a board. Learn more about &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/secret-boards\&quot;&gt;secret boards&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/protected-boards\&quot;&gt;protected boards&lt;/a&gt;
     */
    public enum PrivacyEnum {
        PUBLIC("PUBLIC"),
        PROTECTED("PROTECTED"),
        SECRET("SECRET");

        private String value;

        PrivacyEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static PrivacyEnum fromValue(String value) {
            for (PrivacyEnum b : PrivacyEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_PRIVACY = "privacy";
    private PrivacyEnum privacy = PrivacyEnum.PUBLIC;

    public Board(String name) {
        this.name = name;
    }

    /**
     * Get id
     * @return id
     */
    @Nullable
    @Schema(name = "id", accessMode = Schema.AccessMode.READ_ONLY, example = "549755885175", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    /**
     * Date and time of board creation.
     * @return createdAt
     */
    @Nullable
    @Schema(name = "created_at", accessMode = Schema.AccessMode.READ_ONLY, example = "2020-01-01T20:10:40Z", description = "Date and time of board creation.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Date and time of last board pins modified.
     * @return boardPinsModifiedAt
     */
    @Nullable
    @Schema(name = "board_pins_modified_at", accessMode = Schema.AccessMode.READ_ONLY, example = "2020-01-01T20:10:40Z", description = "Date and time of last board pins modified.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BOARD_PINS_MODIFIED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getBoardPinsModifiedAt() {
        return boardPinsModifiedAt;
    }

    public Board name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    @NotNull
    @Schema(name = "name", example = "Summer Recipes", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }

    public Board description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * @return description
     */
    @Nullable
    @Schema(name = "description", example = "My favorite summer recipes", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Count of collaborators on the board.
     * minimum: 0
     * @return collaboratorCount
     */
    @Nullable
    @Min(0)
    @Schema(name = "collaborator_count", accessMode = Schema.AccessMode.READ_ONLY, example = "17", description = "Count of collaborators on the board.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_COLLABORATOR_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCollaboratorCount() {
        return collaboratorCount;
    }

    /**
     * Count of pins on the board.
     * minimum: 0
     * @return pinCount
     */
    @Nullable
    @Min(0)
    @Schema(name = "pin_count", accessMode = Schema.AccessMode.READ_ONLY, example = "5", description = "Count of pins on the board.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PIN_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getPinCount() {
        return pinCount;
    }

    /**
     * Board follower count.
     * minimum: 0
     * @return followerCount
     */
    @Nullable
    @Min(0)
    @Schema(name = "follower_count", accessMode = Schema.AccessMode.READ_ONLY, example = "13", description = "Board follower count.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FOLLOWER_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getFollowerCount() {
        return followerCount;
    }

    public Board media(BoardMedia media) {
        this.media = media;
        return this;
    }

    /**
     * Get media
     * @return media
     */
    @Valid
    @Nullable
    @Schema(name = "media", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MEDIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BoardMedia getMedia() {
        return media;
    }

    @JsonProperty(JSON_PROPERTY_MEDIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMedia(BoardMedia media) {
        this.media = media;
    }

    /**
     * Get owner
     * @return owner
     */
    @Valid
    @Nullable
    @Schema(name = "owner", accessMode = Schema.AccessMode.READ_ONLY, requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BoardOwner getOwner() {
        return owner;
    }

    public Board privacy(PrivacyEnum privacy) {
        this.privacy = privacy;
        return this;
    }

    /**
     * Privacy setting for a board. Learn more about &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/secret-boards\&quot;&gt;secret boards&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/protected-boards\&quot;&gt;protected boards&lt;/a&gt;
     * @return privacy
     */
    @Nullable
    @Schema(name = "privacy", description = "Privacy setting for a board. Learn more about <a href=\"https://help.pinterest.com/en/article/secret-boards\">secret boards</a> and <a href=\"https://help.pinterest.com/en/business/article/protected-boards\">protected boards</a>", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRIVACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PrivacyEnum getPrivacy() {
        return privacy;
    }

    @JsonProperty(JSON_PROPERTY_PRIVACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrivacy(PrivacyEnum privacy) {
        this.privacy = privacy;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Board board = (Board) o;
        return Objects.equals(this.id, board.id) &&
            Objects.equals(this.createdAt, board.createdAt) &&
            Objects.equals(this.boardPinsModifiedAt, board.boardPinsModifiedAt) &&
            Objects.equals(this.name, board.name) &&
            Objects.equals(this.description, board.description) &&
            Objects.equals(this.collaboratorCount, board.collaboratorCount) &&
            Objects.equals(this.pinCount, board.pinCount) &&
            Objects.equals(this.followerCount, board.followerCount) &&
            Objects.equals(this.media, board.media) &&
            Objects.equals(this.owner, board.owner) &&
            Objects.equals(this.privacy, board.privacy);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, createdAt, boardPinsModifiedAt, name, description, collaboratorCount, pinCount, followerCount, media, owner, privacy);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Board {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    boardPinsModifiedAt: ").append(toIndentedString(boardPinsModifiedAt)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    collaboratorCount: ").append(toIndentedString(collaboratorCount)).append("\n");
        sb.append("    pinCount: ").append(toIndentedString(pinCount)).append("\n");
        sb.append("    followerCount: ").append(toIndentedString(followerCount)).append("\n");
        sb.append("    media: ").append(toIndentedString(media)).append("\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    privacy: ").append(toIndentedString(privacy)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

