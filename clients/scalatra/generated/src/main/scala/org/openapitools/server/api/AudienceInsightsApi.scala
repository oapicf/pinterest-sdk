/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.AudienceDefinitionResponse
import org.openapitools.server.model.AudienceInsightType
import org.openapitools.server.model.AudienceInsightsResponse
import org.openapitools.server.model.Error

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class AudienceInsightsApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "AudienceInsightsApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val audienceInsightsGetOperation = (apiOperation[AudienceInsightsResponse]("audienceInsightsGet")
    summary "Get audience insights"
    parameters(pathParam[String]("adAccountId").description(""), queryParam[AudienceInsightType]("audienceInsightType").description(""))
  )

  get("/ad_accounts/:ad_account_id/audience_insights", operation(audienceInsightsGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val audienceInsightType = params.getAs[AudienceInsightType]("audienceInsightType")

    //println("audienceInsightType: " + audienceInsightType)
  }

  

  val audienceInsightsScopeAndTypeGetOperation = (apiOperation[AudienceDefinitionResponse]("audienceInsightsScopeAndTypeGet")
    summary "Get audience insights scope and type"
    parameters(pathParam[String]("adAccountId").description(""))
  )

  get("/ad_accounts/:ad_account_id/insights/audiences", operation(audienceInsightsScopeAndTypeGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
  }

}
