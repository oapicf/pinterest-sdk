/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.AdAccountCreateSubscriptionRequest
import org.openapitools.server.model.AdAccountCreateSubscriptionResponse
import org.openapitools.server.model.AdAccountGetSubscriptionResponse
import org.openapitools.server.model.AdAccountsSubscriptionsGetList200Response
import org.openapitools.server.model.Error

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class LeadAdsApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "LeadAdsApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val adAccountsSubscriptionsDelByIdOperation = (apiOperation[Unit]("adAccountsSubscriptionsDelById")
    summary "Delete lead ads subscription"
    parameters(pathParam[String]("adAccountId").description(""), pathParam[String]("subscriptionId").description(""))
  )

  delete("/ad_accounts/:ad_account_id/leads/subscriptions/:subscription_id", operation(adAccountsSubscriptionsDelByIdOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    val subscriptionId = params.getOrElse("subscriptionId", halt(400))
    //println("subscriptionId: " + subscriptionId)
  }

  

  val adAccountsSubscriptionsGetByIdOperation = (apiOperation[AdAccountGetSubscriptionResponse]("adAccountsSubscriptionsGetById")
    summary "Get lead ads subscription"
    parameters(pathParam[String]("adAccountId").description(""), pathParam[String]("subscriptionId").description(""))
  )

  get("/ad_accounts/:ad_account_id/leads/subscriptions/:subscription_id", operation(adAccountsSubscriptionsGetByIdOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    val subscriptionId = params.getOrElse("subscriptionId", halt(400))
    //println("subscriptionId: " + subscriptionId)
  }

  

  val adAccountsSubscriptionsGetListOperation = (apiOperation[AdAccountsSubscriptionsGetList200Response]("adAccountsSubscriptionsGetList")
    summary "Get lead ads subscriptions"
    parameters(pathParam[String]("adAccountId").description(""), queryParam[Int]("pageSize").description("").optional.defaultValue(25), queryParam[String]("bookmark").description("").optional)
  )

  get("/ad_accounts/:ad_account_id/leads/subscriptions", operation(adAccountsSubscriptionsGetListOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val pageSize = params.getAs[Int]("pageSize")

    //println("pageSize: " + pageSize)
            val bookmark = params.getAs[String]("bookmark")

    //println("bookmark: " + bookmark)
  }

  

  val adAccountsSubscriptionsPostOperation = (apiOperation[AdAccountCreateSubscriptionResponse]("adAccountsSubscriptionsPost")
    summary "Create lead ads subscription"
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[AdAccountCreateSubscriptionRequest]("adAccountCreateSubscriptionRequest").description(""))
  )

  post("/ad_accounts/:ad_account_id/leads/subscriptions", operation(adAccountsSubscriptionsPostOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("adAccountCreateSubscriptionRequest: " + adAccountCreateSubscriptionRequest)
  }

}
