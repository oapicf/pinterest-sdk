/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.BulkDownloadRequest
import org.openapitools.server.model.BulkDownloadResponse
import org.openapitools.server.model.BulkUpsertRequest
import org.openapitools.server.model.BulkUpsertResponse
import org.openapitools.server.model.BulkUpsertStatusResponse
import org.openapitools.server.model.Error

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class BulkApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "BulkApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val bulkDownloadCreateOperation = (apiOperation[BulkDownloadResponse]("bulkDownloadCreate")
    summary "Get advertiser entities in bulk"
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[BulkDownloadRequest]("bulkDownloadRequest").description(""))
  )

  post("/ad_accounts/:ad_account_id/bulk/download", operation(bulkDownloadCreateOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("bulkDownloadRequest: " + bulkDownloadRequest)
  }

  

  val bulkRequestGetOperation = (apiOperation[BulkUpsertStatusResponse]("bulkRequestGet")
    summary "Download advertiser entities in bulk"
    parameters(pathParam[String]("adAccountId").description(""), pathParam[String]("bulkRequestId").description(""), queryParam[Boolean]("includeDetails").description("").optional.defaultValue(false))
  )

  get("/ad_accounts/:ad_account_id/bulk/:bulk_request_id", operation(bulkRequestGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    val bulkRequestId = params.getOrElse("bulkRequestId", halt(400))
    //println("bulkRequestId: " + bulkRequestId)
            val includeDetails = params.getAs[Boolean]("includeDetails")

    //println("includeDetails: " + includeDetails)
  }

  

  val bulkUpsertCreateOperation = (apiOperation[BulkUpsertResponse]("bulkUpsertCreate")
    summary "Create/update ad entities in bulk"
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[BulkUpsertRequest]("bulkUpsertRequest").description(""))
  )

  post("/ad_accounts/:ad_account_id/bulk/upsert", operation(bulkUpsertCreateOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("bulkUpsertRequest: " + bulkUpsertRequest)
  }

}
