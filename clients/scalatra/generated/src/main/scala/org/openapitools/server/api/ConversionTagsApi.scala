/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.ConversionEventResponse
import org.openapitools.server.model.ConversionTagCreate
import org.openapitools.server.model.ConversionTagListResponse
import org.openapitools.server.model.ConversionTagResponse
import org.openapitools.server.model.Error
import org.openapitools.server.model.PageVisitConversionTagsGet200Response

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class ConversionTagsApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "ConversionTagsApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val conversionTagsCreateOperation = (apiOperation[ConversionTagResponse]("conversionTagsCreate")
    summary "Create conversion tag"
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[ConversionTagCreate]("conversionTagCreate").description(""))
  )

  post("/ad_accounts/:ad_account_id/conversion_tags", operation(conversionTagsCreateOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("conversionTagCreate: " + conversionTagCreate)
  }

  

  val conversionTagsGetOperation = (apiOperation[ConversionTagResponse]("conversionTagsGet")
    summary "Get conversion tag"
    parameters(pathParam[String]("adAccountId").description(""), pathParam[String]("conversionTagId").description(""))
  )

  get("/ad_accounts/:ad_account_id/conversion_tags/:conversion_tag_id", operation(conversionTagsGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    val conversionTagId = params.getOrElse("conversionTagId", halt(400))
    //println("conversionTagId: " + conversionTagId)
  }

  

  val conversionTagsListOperation = (apiOperation[ConversionTagListResponse]("conversionTagsList")
    summary "Get conversion tags"
    parameters(pathParam[String]("adAccountId").description(""), queryParam[Boolean]("filterDeleted").description("").optional.defaultValue(false))
  )

  get("/ad_accounts/:ad_account_id/conversion_tags", operation(conversionTagsListOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val filterDeleted = params.getAs[Boolean]("filterDeleted")

    //println("filterDeleted: " + filterDeleted)
  }

  

  val ocpmEligibleConversionTagsGetOperation = (apiOperation[Map[String, List[ConversionEventResponse]]]("ocpmEligibleConversionTagsGet")
    summary "Get Ocpm eligible conversion tags"
    parameters(pathParam[String]("adAccountId").description(""))
  )

  get("/ad_accounts/:ad_account_id/conversion_tags/ocpm_eligible", operation(ocpmEligibleConversionTagsGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
  }

  

  val pageVisitConversionTagsGetOperation = (apiOperation[PageVisitConversionTagsGet200Response]("pageVisitConversionTagsGet")
    summary "Get page visit conversion tags"
    parameters(pathParam[String]("adAccountId").description(""), queryParam[Int]("pageSize").description("").optional.defaultValue(25), queryParam[String]("order").description("").optional, queryParam[String]("bookmark").description("").optional)
  )

  get("/ad_accounts/:ad_account_id/conversion_tags/page_visit", operation(pageVisitConversionTagsGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val pageSize = params.getAs[Int]("pageSize")

    //println("pageSize: " + pageSize)
            val order = params.getAs[String]("order")

    //println("order: " + order)
            val bookmark = params.getAs[String]("bookmark")

    //println("bookmark: " + bookmark)
  }

}
