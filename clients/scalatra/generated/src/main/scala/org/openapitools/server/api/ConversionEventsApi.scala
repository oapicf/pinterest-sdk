/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.ConversionApiResponse
import org.openapitools.server.model.ConversionEvents
import org.openapitools.server.model.DetailedError
import org.openapitools.server.model.Error

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class ConversionEventsApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "ConversionEventsApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val eventsCreateOperation = (apiOperation[ConversionApiResponse]("eventsCreate")
    summary "Send conversions"
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[ConversionEvents]("conversionEvents").description(""), queryParam[Boolean]("test").description("").optional)
  )

  post("/ad_accounts/:ad_account_id/events", operation(eventsCreateOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("conversionEvents: " + conversionEvents)
            val test = params.getAs[Boolean]("test")

    //println("test: " + test)
  }

}
