/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.AdsCreditRedeemRequest
import org.openapitools.server.model.AdsCreditRedeemResponse
import org.openapitools.server.model.AdsCreditsDiscountsGet200Response
import org.openapitools.server.model.BillingProfilesGet200Response
import org.openapitools.server.model.Error
import org.openapitools.server.model.SSIOAccountResponse
import org.openapitools.server.model.SSIOCreateInsertionOrderRequest
import org.openapitools.server.model.SSIOCreateInsertionOrderResponse
import org.openapitools.server.model.SSIOEditInsertionOrderRequest
import org.openapitools.server.model.SSIOEditInsertionOrderResponse
import org.openapitools.server.model.SSIOInsertionOrderStatusResponse
import org.openapitools.server.model.SsioInsertionOrdersStatusGetByAdAccount200Response
import org.openapitools.server.model.SsioOrderLinesGetByAdAccount200Response

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class BillingApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "BillingApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val adsCreditRedeemOperation = (apiOperation[AdsCreditRedeemResponse]("adsCreditRedeem")
    summary "Redeem ad credits"
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[AdsCreditRedeemRequest]("adsCreditRedeemRequest").description(""))
  )

  post("/ad_accounts/:ad_account_id/ads_credit/redeem", operation(adsCreditRedeemOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("adsCreditRedeemRequest: " + adsCreditRedeemRequest)
  }

  

  val adsCreditsDiscountsGetOperation = (apiOperation[AdsCreditsDiscountsGet200Response]("adsCreditsDiscountsGet")
    summary "Get ads credit discounts"
    parameters(pathParam[String]("adAccountId").description(""), queryParam[String]("bookmark").description("").optional, queryParam[Int]("pageSize").description("").optional.defaultValue(25))
  )

  get("/ad_accounts/:ad_account_id/ads_credit/discounts", operation(adsCreditsDiscountsGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val bookmark = params.getAs[String]("bookmark")

    //println("bookmark: " + bookmark)
            val pageSize = params.getAs[Int]("pageSize")

    //println("pageSize: " + pageSize)
  }

  

  val billingProfilesGetOperation = (apiOperation[BillingProfilesGet200Response]("billingProfilesGet")
    summary "Get billing profiles"
    parameters(pathParam[String]("adAccountId").description(""), queryParam[Boolean]("isActive").description(""), queryParam[String]("bookmark").description("").optional, queryParam[Int]("pageSize").description("").optional.defaultValue(25))
  )

  get("/ad_accounts/:ad_account_id/billing_profiles", operation(billingProfilesGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val isActive = params.getAs[Boolean]("isActive")

    //println("isActive: " + isActive)
            val bookmark = params.getAs[String]("bookmark")

    //println("bookmark: " + bookmark)
            val pageSize = params.getAs[Int]("pageSize")

    //println("pageSize: " + pageSize)
  }

  

  val ssioAccountsGetOperation = (apiOperation[SSIOAccountResponse]("ssioAccountsGet")
    summary "Get Salesforce account details including bill-to information."
    parameters(pathParam[String]("adAccountId").description(""))
  )

  get("/ad_accounts/:ad_account_id/ssio/accounts", operation(ssioAccountsGetOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
  }

  

  val ssioInsertionOrderCreateOperation = (apiOperation[SSIOCreateInsertionOrderResponse]("ssioInsertionOrderCreate")
    summary "Create insertion order through SSIO."
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[SSIOCreateInsertionOrderRequest]("sSIOCreateInsertionOrderRequest").description(""))
  )

  post("/ad_accounts/:ad_account_id/ssio/insertion_orders", operation(ssioInsertionOrderCreateOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("sSIOCreateInsertionOrderRequest: " + sSIOCreateInsertionOrderRequest)
  }

  

  val ssioInsertionOrderEditOperation = (apiOperation[SSIOEditInsertionOrderResponse]("ssioInsertionOrderEdit")
    summary "Edit insertion order through SSIO."
    parameters(pathParam[String]("adAccountId").description(""), bodyParam[SSIOEditInsertionOrderRequest]("sSIOEditInsertionOrderRequest").description(""))
  )

  patch("/ad_accounts/:ad_account_id/ssio/insertion_orders", operation(ssioInsertionOrderEditOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    //println("sSIOEditInsertionOrderRequest: " + sSIOEditInsertionOrderRequest)
  }

  

  val ssioInsertionOrdersStatusGetByAdAccountOperation = (apiOperation[SsioInsertionOrdersStatusGetByAdAccount200Response]("ssioInsertionOrdersStatusGetByAdAccount")
    summary "Get insertion order status by ad account id."
    parameters(pathParam[String]("adAccountId").description(""), queryParam[String]("bookmark").description("").optional, queryParam[Int]("pageSize").description("").optional.defaultValue(25))
  )

  get("/ad_accounts/:ad_account_id/ssio/insertion_orders/status", operation(ssioInsertionOrdersStatusGetByAdAccountOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val bookmark = params.getAs[String]("bookmark")

    //println("bookmark: " + bookmark)
            val pageSize = params.getAs[Int]("pageSize")

    //println("pageSize: " + pageSize)
  }

  

  val ssioInsertionOrdersStatusGetByPinOrderIdOperation = (apiOperation[SSIOInsertionOrderStatusResponse]("ssioInsertionOrdersStatusGetByPinOrderId")
    summary "Get insertion order status by pin order id."
    parameters(pathParam[String]("adAccountId").description(""), pathParam[String]("pinOrderId").description(""))
  )

  get("/ad_accounts/:ad_account_id/ssio/insertion_orders/:pin_order_id/status", operation(ssioInsertionOrdersStatusGetByPinOrderIdOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
    val pinOrderId = params.getOrElse("pinOrderId", halt(400))
    //println("pinOrderId: " + pinOrderId)
  }

  

  val ssioOrderLinesGetByAdAccountOperation = (apiOperation[SsioOrderLinesGetByAdAccount200Response]("ssioOrderLinesGetByAdAccount")
    summary "Get Salesforce order lines by ad account id."
    parameters(pathParam[String]("adAccountId").description(""), queryParam[String]("bookmark").description("").optional, queryParam[Int]("pageSize").description("").optional.defaultValue(25), queryParam[String]("pinOrderId").description("").optional)
  )

  get("/ad_accounts/:ad_account_id/ssio/order_lines", operation(ssioOrderLinesGetByAdAccountOperation)) {
    val adAccountId = params.getOrElse("adAccountId", halt(400))
    //println("adAccountId: " + adAccountId)
            val bookmark = params.getAs[String]("bookmark")

    //println("bookmark: " + bookmark)
            val pageSize = params.getAs[Int]("pageSize")

    //println("pageSize: " + pageSize)
            val pinOrderId = params.getAs[String]("pinOrderId")

    //println("pinOrderId: " + pinOrderId)
  }

}
