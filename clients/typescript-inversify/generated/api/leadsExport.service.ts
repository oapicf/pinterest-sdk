/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from 'rxjs/Observable';

import { map } from 'rxjs/operators';
import IHttpClient from '../IHttpClient';
import { inject, injectable } from 'inversify';
import { IAPIConfiguration } from '../IAPIConfiguration';
import { Headers } from '../Headers';
import HttpResponse from '../HttpResponse';

import { LeadsExportCreateRequest } from '../model/leadsExportCreateRequest';
import { LeadsExportCreateResponse } from '../model/leadsExportCreateResponse';
import { LeadsExportResponseData } from '../model/leadsExportResponseData';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class LeadsExportService {
    private basePath: string = 'https://api.pinterest.com/v5';

    constructor(@inject('IApiHttpClient') private httpClient: IHttpClient,
        @inject('IAPIConfiguration') private APIConfiguration: IAPIConfiguration ) {
        if(this.APIConfiguration.basePath)
            this.basePath = this.APIConfiguration.basePath;
    }

    /**
     * Create a request to export leads collected from a lead ad
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Create an export of leads collected from a lead ad. This returns a lead_export_id  token that you can use to download the export when it is ready.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     * @param adAccountId Unique identifier of an ad account.
     * @param leadsExportCreateRequest 
     
     */
    public leadsExportCreate(adAccountId: string, leadsExportCreateRequest: LeadsExportCreateRequest, observe?: 'body', headers?: Headers): Observable<LeadsExportCreateResponse>;
    public leadsExportCreate(adAccountId: string, leadsExportCreateRequest: LeadsExportCreateRequest, observe?: 'response', headers?: Headers): Observable<HttpResponse<LeadsExportCreateResponse>>;
    public leadsExportCreate(adAccountId: string, leadsExportCreateRequest: LeadsExportCreateRequest, observe: any = 'body', headers: Headers = {}): Observable<any> {
        if (adAccountId === null || adAccountId === undefined){
            throw new Error('Required parameter adAccountId was null or undefined when calling leadsExportCreate.');
        }

        if (leadsExportCreateRequest === null || leadsExportCreateRequest === undefined){
            throw new Error('Required parameter leadsExportCreateRequest was null or undefined when calling leadsExportCreate.');
        }

        // authentication (pinterest_oauth2) required
        if (this.APIConfiguration.accessToken) {
            let accessToken = typeof this.APIConfiguration.accessToken === 'function'
                ? this.APIConfiguration.accessToken()
                : this.APIConfiguration.accessToken;
            headers['Authorization'] = 'Bearer ' + accessToken;
        }
        headers['Accept'] = 'application/json';
        headers['Content-Type'] = 'application/json';

        const response: Observable<HttpResponse<LeadsExportCreateResponse>> = this.httpClient.post(`${this.basePath}/ad_accounts/${encodeURIComponent(String(adAccountId))}/leads_export`, leadsExportCreateRequest , headers);
        if (observe === 'body') {
               return response.pipe(
                   map((httpResponse: HttpResponse) => <LeadsExportCreateResponse>(httpResponse.response))
               );
        }
        return response;
    }


    /**
     * Get the lead export from the lead export create call
     * &lt;strong&gt;This feature is currently in beta and not available to all apps, if you\&#39;re interested in joining the beta, please reach out to your Pinterest account manager.&lt;/strong&gt;  Get the export of leads collected from a lead ad. This returns a URL to a list of lead export given a lead_export_id token returned from the create a lead export call. You can use the URL to download the report.  Note: Lead ad data will be available up to 30 days after the lead has been submitted.  For more, see &lt;a class&#x3D;\&quot;reference external\&quot; href&#x3D;\&quot;https://help.pinterest.com/en/business/article/lead-ads\&quot;&gt;Lead ads&lt;/a&gt;.
     * @param adAccountId Unique identifier of an ad account.
     * @param leadsExportId lead_export_id token returned from the create a lead export endpoint
     
     */
    public leadsExportGet(adAccountId: string, leadsExportId: string, observe?: 'body', headers?: Headers): Observable<LeadsExportResponseData>;
    public leadsExportGet(adAccountId: string, leadsExportId: string, observe?: 'response', headers?: Headers): Observable<HttpResponse<LeadsExportResponseData>>;
    public leadsExportGet(adAccountId: string, leadsExportId: string, observe: any = 'body', headers: Headers = {}): Observable<any> {
        if (adAccountId === null || adAccountId === undefined){
            throw new Error('Required parameter adAccountId was null or undefined when calling leadsExportGet.');
        }

        if (leadsExportId === null || leadsExportId === undefined){
            throw new Error('Required parameter leadsExportId was null or undefined when calling leadsExportGet.');
        }

        // authentication (pinterest_oauth2) required
        if (this.APIConfiguration.accessToken) {
            let accessToken = typeof this.APIConfiguration.accessToken === 'function'
                ? this.APIConfiguration.accessToken()
                : this.APIConfiguration.accessToken;
            headers['Authorization'] = 'Bearer ' + accessToken;
        }
        headers['Accept'] = 'application/json';

        const response: Observable<HttpResponse<LeadsExportResponseData>> = this.httpClient.get(`${this.basePath}/ad_accounts/${encodeURIComponent(String(adAccountId))}/leads_export/${encodeURIComponent(String(leadsExportId))}`, headers);
        if (observe === 'body') {
               return response.pipe(
                   map((httpResponse: HttpResponse) => <LeadsExportResponseData>(httpResponse.response))
               );
        }
        return response;
    }

}
