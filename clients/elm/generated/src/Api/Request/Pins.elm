{-
   Pinterest REST API
   Pinterest's REST API

   The version of the OpenAPI document: 5.14.0
   Contact: blah+oapicf@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Pins exposing
    ( multiPinsAnalytics, AppTypes(..), appTypesVariants
    , pinsAnalytics, AppTypes(..), appTypesVariants, SplitField(..), splitFieldVariants
    , pinsCreate
    , pinsDelete
    , pinsGet
    , pinsList, PinFilter(..), pinFilterVariants, PinType(..), pinTypeVariants, CreativeTypes(..), creativeTypesVariants
    , pinsSave
    , pinsUpdate
    )

import Api
import Api.Data exposing (..)
import Api.Time exposing (Posix)
import Dict
import Http
import Json.Decode
import Json.Encode


type AppTypes
    = AppTypesALL
    | AppTypesMOBILE
    | AppTypesTABLET
    | AppTypesWEB


appTypesVariants : List AppTypes
appTypesVariants =
    [ AppTypesALL
    , AppTypesMOBILE
    , AppTypesTABLET
    , AppTypesWEB
    ]


stringFromAppTypes : AppTypes -> String
stringFromAppTypes model =
    case model of
        AppTypesALL ->
            "ALL"

        AppTypesMOBILE ->
            "MOBILE"

        AppTypesTABLET ->
            "TABLET"

        AppTypesWEB ->
            "WEB"




type AppTypes
    = AppTypesALL
    | AppTypesMOBILE
    | AppTypesTABLET
    | AppTypesWEB


appTypesVariants : List AppTypes
appTypesVariants =
    [ AppTypesALL
    , AppTypesMOBILE
    , AppTypesTABLET
    , AppTypesWEB
    ]


stringFromAppTypes : AppTypes -> String
stringFromAppTypes model =
    case model of
        AppTypesALL ->
            "ALL"

        AppTypesMOBILE ->
            "MOBILE"

        AppTypesTABLET ->
            "TABLET"

        AppTypesWEB ->
            "WEB"




type SplitField
    = SplitFieldNOSPLIT
    | SplitFieldAPPTYPE


splitFieldVariants : List SplitField
splitFieldVariants =
    [ SplitFieldNOSPLIT
    , SplitFieldAPPTYPE
    ]


stringFromSplitField : SplitField -> String
stringFromSplitField model =
    case model of
        SplitFieldNOSPLIT ->
            "NO_SPLIT"

        SplitFieldAPPTYPE ->
            "APP_TYPE"




type PinFilter
    = PinFilterExcludeNative
    | PinFilterExcludeRepins
    | PinFilterHasBeenPromoted


pinFilterVariants : List PinFilter
pinFilterVariants =
    [ PinFilterExcludeNative
    , PinFilterExcludeRepins
    , PinFilterHasBeenPromoted
    ]


stringFromPinFilter : PinFilter -> String
stringFromPinFilter model =
    case model of
        PinFilterExcludeNative ->
            "exclude_native"

        PinFilterExcludeRepins ->
            "exclude_repins"

        PinFilterHasBeenPromoted ->
            "has_been_promoted"




type PinType
    = PinTypePRIVATE


pinTypeVariants : List PinType
pinTypeVariants =
    [ PinTypePRIVATE
    ]


stringFromPinType : PinType -> String
stringFromPinType model =
    case model of
        PinTypePRIVATE ->
            "PRIVATE"




type CreativeTypes
    = CreativeTypesREGULAR
    | CreativeTypesVIDEO
    | CreativeTypesSHOPPING
    | CreativeTypesCAROUSEL
    | CreativeTypesMAXVIDEO
    | CreativeTypesSHOPTHEPIN
    | CreativeTypesCOLLECTION
    | CreativeTypesIDEA


creativeTypesVariants : List CreativeTypes
creativeTypesVariants =
    [ CreativeTypesREGULAR
    , CreativeTypesVIDEO
    , CreativeTypesSHOPPING
    , CreativeTypesCAROUSEL
    , CreativeTypesMAXVIDEO
    , CreativeTypesSHOPTHEPIN
    , CreativeTypesCOLLECTION
    , CreativeTypesIDEA
    ]


stringFromCreativeTypes : CreativeTypes -> String
stringFromCreativeTypes model =
    case model of
        CreativeTypesREGULAR ->
            "REGULAR"

        CreativeTypesVIDEO ->
            "VIDEO"

        CreativeTypesSHOPPING ->
            "SHOPPING"

        CreativeTypesCAROUSEL ->
            "CAROUSEL"

        CreativeTypesMAXVIDEO ->
            "MAX_VIDEO"

        CreativeTypesSHOPTHEPIN ->
            "SHOP_THE_PIN"

        CreativeTypesCOLLECTION ->
            "COLLECTION"

        CreativeTypesIDEA ->
            "IDEA"



{-| <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>  Get analytics for multiple pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - The maximum number of pins supported in a single request is 100. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.  If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
-}
multiPinsAnalytics : List String -> Posix -> Posix -> List Api.Data.PinsAnalyticsMetricTypesParameterInner -> Maybe AppTypes -> Maybe String -> Api.Request (Dict.Dict String Dict)
multiPinsAnalytics pinIds_query startDate_query endDate_query metricTypes_query appTypes_query adAccountId_query =
    Api.request
        "GET"
        "/pins/analytics"
        []
        [ ( "pin_ids", Just <| (String.join "," << List.map identity) pinIds_query ), ( "start_date", Just <| Api.Time.dateToString startDate_query ), ( "end_date", Just <| Api.Time.dateToString endDate_query ), ( "app_types", Maybe.map stringFromAppTypes appTypes_query ), ( "metric_types", Just <| (String.join "," << List.map ) metricTypes_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        (Json.Decode.dict (Json.Decode.dict Api.Data.pinAnalyticsMetricsResponseDecoder))


{-| Get analytics for a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.  If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
-}
pinsAnalytics : String -> Posix -> Posix -> List Api.Data.PinsAnalyticsMetricTypesParameterInner -> Maybe AppTypes -> Maybe SplitField -> Maybe String -> Api.Request (Dict.Dict String Api.Data.PinAnalyticsMetricsResponse)
pinsAnalytics pinId_path startDate_query endDate_query metricTypes_query appTypes_query splitField_query adAccountId_query =
    Api.request
        "GET"
        "/pins/{pin_id}/analytics"
        [ ( "pinId", identity pinId_path ) ]
        [ ( "start_date", Just <| Api.Time.dateToString startDate_query ), ( "end_date", Just <| Api.Time.dateToString endDate_query ), ( "app_types", Maybe.map stringFromAppTypes appTypes_query ), ( "metric_types", Just <| (String.join "," << List.map ) metricTypes_query ), ( "split_field", Maybe.map stringFromSplitField splitField_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        (Json.Decode.dict Api.Data.pinAnalyticsMetricsResponseDecoder)


{-| Create a Pin on a board or board section owned by the \"operation user_account\".  Note: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/web-features/add-ons-overview/'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/api-features/content-overview/'>Content App Solutions Guide</a>.  <strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.
-}
pinsCreate : Maybe String -> Api.Data.PinCreate -> Api.Request Api.Data.Pin
pinsCreate adAccountId_query pinCreate_body =
    Api.request
        "POST"
        "/pins"
        []
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodePinCreate pinCreate_body)))
        Api.Data.pinDecoder


{-| Delete a Pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
-}
pinsDelete : String -> Maybe String -> Api.Request ()
pinsDelete pinId_path adAccountId_query =
    Api.request
        "DELETE"
        "/pins/{pin_id}"
        [ ( "pinId", identity pinId_path ) ]
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        (Json.Decode.succeed ())


{-| Get a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
-}
pinsGet : String -> Maybe Bool -> Maybe String -> Api.Request Api.Data.Pin
pinsGet pinId_path pinMetrics_query adAccountId_query =
    Api.request
        "GET"
        "/pins/{pin_id}"
        [ ( "pinId", identity pinId_path ) ]
        [ ( "pin_metrics", Maybe.map (\val -> if val then "true" else "false") pinMetrics_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.pinDecoder


{-| Get a list of the Pins owned by the \"operation user_account\".   - By default, the \"operation user_account\" is the token user_account.   - All Pins owned by the \"operation user_account\" are included, regardless of who owns the board they are on. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\".  Disclaimer: there are known performance issues when filtering by field <code>creative_type</code> and including protected pins. If your request is timing out in this scenario we encourage you to use <a href='/docs/api/v5/#operation/boards/list_pins'>GET List Pins on Board</a>.
-}
pinsList : Maybe String -> Maybe Int -> Maybe PinFilter -> Maybe Bool -> Maybe PinType -> Maybe (List CreativeTypes) -> Maybe String -> Maybe Bool -> Api.Request Api.Data.PinsList200Response
pinsList bookmark_query pageSize_query pinFilter_query includeProtectedPins_query pinType_query creativeTypes_query adAccountId_query pinMetrics_query =
    Api.request
        "GET"
        "/pins"
        []
        [ ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ), ( "pin_filter", Maybe.map stringFromPinFilter pinFilter_query ), ( "include_protected_pins", Maybe.map (\val -> if val then "true" else "false") includeProtectedPins_query ), ( "pin_type", Maybe.map stringFromPinType pinType_query ), ( "creative_types", Maybe.map (String.join "," << List.map stringFromCreativeTypes) creativeTypes_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ), ( "pin_metrics", Maybe.map (\val -> if val then "true" else "false") pinMetrics_query ) ]
        []
        Nothing
        Api.Data.pinsList200ResponseDecoder


{-| Save a Pin on a board or board section owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account. Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.  - Any Pin type can be saved: image Pin, video Pin, Idea Pin, product Pin, etc. - Any public Pin can be saved given a pin ID.
-}
pinsSave : String -> Maybe String -> Api.Data.PinsSaveRequest -> Api.Request Api.Data.Pin
pinsSave pinId_path adAccountId_query pinsSaveRequest_body =
    Api.request
        "POST"
        "/pins/{pin_id}/save"
        [ ( "pinId", identity pinId_path ) ]
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodePinsSaveRequest pinsSaveRequest_body)))
        Api.Data.pinDecoder


{-| Update a pin owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
-}
pinsUpdate : String -> Maybe String -> Api.Data.PinUpdate -> Api.Request Api.Data.Pin
pinsUpdate pinId_path adAccountId_query pinUpdate_body =
    Api.request
        "PATCH"
        "/pins/{pin_id}"
        [ ( "pinId", identity pinId_path ) ]
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodePinUpdate pinUpdate_body)))
        Api.Data.pinDecoder

