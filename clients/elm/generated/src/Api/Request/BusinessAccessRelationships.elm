{-
   Pinterest REST API
   Pinterest's REST API

   The version of the OpenAPI document: 5.14.0
   Contact: blah+oapicf@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.BusinessAccessRelationships exposing
    ( deleteBusinessMembership
    , deleteBusinessPartners
    , getBusinessEmployers
    , getBusinessMembers
    , getBusinessPartners
    , updateBusinessMemberships
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Terminate memberships between the specified members and your business.
-}
deleteBusinessMembership : String -> Api.Data.MembersToDeleteBody -> Api.Request Api.Data.DeletedMembersResponse
deleteBusinessMembership businessId_path membersToDeleteBody_body =
    Api.request
        "DELETE"
        "/businesses/{business_id}/members"
        [ ( "businessId", identity businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeMembersToDeleteBody membersToDeleteBody_body)))
        Api.Data.deletedMembersResponseDecoder


{-| Terminate partnerships between the specified partners and your business. Note: You may only batch terminate partners of the same partner type.
-}
deleteBusinessPartners : String -> Api.Data.DeletePartnersRequest -> Api.Request Api.Data.DeletePartnersResponse
deleteBusinessPartners businessId_path deletePartnersRequest_body =
    Api.request
        "DELETE"
        "/businesses/{business_id}/partners"
        [ ( "businessId", identity businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeletePartnersRequest deletePartnersRequest_body)))
        Api.Data.deletePartnersResponseDecoder


{-| Get all of the viewing user's business employers.
-}
getBusinessEmployers : Maybe Int -> Maybe String -> Api.Request Api.Data.GetBusinessEmployers200Response
getBusinessEmployers pageSize_query bookmark_query =
    Api.request
        "GET"
        "/businesses/employers"
        []
        [ ( "page_size", Maybe.map String.fromInt pageSize_query ), ( "bookmark", Maybe.map identity bookmark_query ) ]
        []
        Nothing
        Api.Data.getBusinessEmployers200ResponseDecoder


{-| Get all members of the specified business. The return response will include the member's business_role and assets they have access to if assets_summary=TRUE
-}
getBusinessMembers : String -> Maybe Bool -> Maybe (List MemberBusinessRole) -> Maybe String -> Maybe Int -> Maybe String -> Maybe Int -> Api.Request Api.Data.GetBusinessMembers200Response
getBusinessMembers businessId_path assetsSummary_query businessRoles_query memberIds_query startIndex_query bookmark_query pageSize_query =
    Api.request
        "GET"
        "/businesses/{business_id}/members"
        [ ( "businessId", identity businessId_path ) ]
        [ ( "assets_summary", Maybe.map (\val -> if val then "true" else "false") assetsSummary_query ), ( "business_roles", Maybe.map (String.join "," << List.map Api.Data.stringFromMemberBusinessRole) businessRoles_query ), ( "member_ids", Maybe.map identity memberIds_query ), ( "start_index", Maybe.map String.fromInt startIndex_query ), ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getBusinessMembers200ResponseDecoder


{-| Get all partners of the specified business.  If the assets_summary=TRUE and: - partner_type=INTERNAL, the business assets returned are your business assets the partner has access to. - partner_type=EXTERNAL, the business assets returned are your partner's business assets the partner has granted you   access to.
-}
getBusinessPartners : String -> Maybe Bool -> Maybe PartnerType -> Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Api.Request Api.Data.GetBusinessPartners200Response
getBusinessPartners businessId_path assetsSummary_query partnerType_query partnerIds_query startIndex_query pageSize_query bookmark_query =
    Api.request
        "GET"
        "/businesses/{business_id}/partners"
        [ ( "businessId", identity businessId_path ) ]
        [ ( "assets_summary", Maybe.map (\val -> if val then "true" else "false") assetsSummary_query ), ( "partner_type", Maybe.map Api.Data.stringFromPartnerType partnerType_query ), ( "partner_ids", Maybe.map identity partnerIds_query ), ( "start_index", Maybe.map String.fromInt startIndex_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ), ( "bookmark", Maybe.map identity bookmark_query ) ]
        []
        Nothing
        Api.Data.getBusinessPartners200ResponseDecoder


{-| Update a member's business role within the business.
-}
updateBusinessMemberships : String -> List Api.Data.UpdateMemberBusinessRoleBody -> Api.Request Api.Data.UpdateMemberResultsResponseArray
updateBusinessMemberships businessId_path updateMemberBusinessRoleBody_body =
    Api.request
        "PATCH"
        "/businesses/{business_id}/members"
        [ ( "businessId", identity businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Json.Encode.list encodeUpdateMemberBusinessRoleBody updateMemberBusinessRoleBody_body)))
        Api.Data.updateMemberResultsResponseArrayDecoder

