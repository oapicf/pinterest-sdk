{-
   Pinterest REST API
   Pinterest's REST API

   The version of the OpenAPI document: 5.14.0
   Contact: blah+oapicf@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.UserAccount exposing
    ( boardsUserFollowsList
    , followUserUpdate
    , followersList
    , linkedBusinessAccountsGet
    , unverifyWebsiteDelete
    , userAccountAnalytics, FromClaimedContent(..), fromClaimedContentVariants, PinFormat(..), pinFormatVariants, AppTypes(..), appTypesVariants, ContentType(..), contentTypeVariants, Source(..), sourceVariants, MetricTypes(..), metricTypesVariants, SplitField(..), splitFieldVariants
    , userAccountAnalyticsTopPins, SortBy(..), sortByVariants, FromClaimedContent(..), fromClaimedContentVariants, PinFormat(..), pinFormatVariants, AppTypes(..), appTypesVariants, ContentType(..), contentTypeVariants, Source(..), sourceVariants, MetricTypes(..), metricTypesVariants, CreatedInLastNDays(..), createdInLastNDaysVariants
    , userAccountAnalyticsTopVideoPins, SortBy(..), sortByVariants, FromClaimedContent(..), fromClaimedContentVariants, PinFormat(..), pinFormatVariants, AppTypes(..), appTypesVariants, ContentType(..), contentTypeVariants, Source(..), sourceVariants, MetricTypes(..), metricTypesVariants, CreatedInLastNDays(..), createdInLastNDaysVariants
    , userAccountFollowedInterests
    , userAccountGet
    , userFollowingGet
    , userWebsitesGet
    , verifyWebsiteUpdate
    , websiteVerificationGet
    )

import Api
import Api.Data exposing (..)
import Api.Time exposing (Posix)
import Dict
import Http
import Json.Decode
import Json.Encode


type FromClaimedContent
    = FromClaimedContentOTHER
    | FromClaimedContentCLAIMED
    | FromClaimedContentBOTH


fromClaimedContentVariants : List FromClaimedContent
fromClaimedContentVariants =
    [ FromClaimedContentOTHER
    , FromClaimedContentCLAIMED
    , FromClaimedContentBOTH
    ]


stringFromFromClaimedContent : FromClaimedContent -> String
stringFromFromClaimedContent model =
    case model of
        FromClaimedContentOTHER ->
            "OTHER"

        FromClaimedContentCLAIMED ->
            "CLAIMED"

        FromClaimedContentBOTH ->
            "BOTH"




type PinFormat
    = PinFormatALL
    | PinFormatORGANICIMAGE
    | PinFormatORGANICPRODUCT
    | PinFormatORGANICVIDEO
    | PinFormatADSSTANDARD
    | PinFormatADSPRODUCT
    | PinFormatADSVIDEO
    | PinFormatADSIDEA


pinFormatVariants : List PinFormat
pinFormatVariants =
    [ PinFormatALL
    , PinFormatORGANICIMAGE
    , PinFormatORGANICPRODUCT
    , PinFormatORGANICVIDEO
    , PinFormatADSSTANDARD
    , PinFormatADSPRODUCT
    , PinFormatADSVIDEO
    , PinFormatADSIDEA
    ]


stringFromPinFormat : PinFormat -> String
stringFromPinFormat model =
    case model of
        PinFormatALL ->
            "ALL"

        PinFormatORGANICIMAGE ->
            "ORGANIC_IMAGE"

        PinFormatORGANICPRODUCT ->
            "ORGANIC_PRODUCT"

        PinFormatORGANICVIDEO ->
            "ORGANIC_VIDEO"

        PinFormatADSSTANDARD ->
            "ADS_STANDARD"

        PinFormatADSPRODUCT ->
            "ADS_PRODUCT"

        PinFormatADSVIDEO ->
            "ADS_VIDEO"

        PinFormatADSIDEA ->
            "ADS_IDEA"




type AppTypes
    = AppTypesALL
    | AppTypesMOBILE
    | AppTypesTABLET
    | AppTypesWEB


appTypesVariants : List AppTypes
appTypesVariants =
    [ AppTypesALL
    , AppTypesMOBILE
    , AppTypesTABLET
    , AppTypesWEB
    ]


stringFromAppTypes : AppTypes -> String
stringFromAppTypes model =
    case model of
        AppTypesALL ->
            "ALL"

        AppTypesMOBILE ->
            "MOBILE"

        AppTypesTABLET ->
            "TABLET"

        AppTypesWEB ->
            "WEB"




type ContentType
    = ContentTypeALL
    | ContentTypePAID
    | ContentTypeORGANIC


contentTypeVariants : List ContentType
contentTypeVariants =
    [ ContentTypeALL
    , ContentTypePAID
    , ContentTypeORGANIC
    ]


stringFromContentType : ContentType -> String
stringFromContentType model =
    case model of
        ContentTypeALL ->
            "ALL"

        ContentTypePAID ->
            "PAID"

        ContentTypeORGANIC ->
            "ORGANIC"




type Source
    = SourceALL
    | SourceYOURPINS
    | SourceOTHERPINS


sourceVariants : List Source
sourceVariants =
    [ SourceALL
    , SourceYOURPINS
    , SourceOTHERPINS
    ]


stringFromSource : Source -> String
stringFromSource model =
    case model of
        SourceALL ->
            "ALL"

        SourceYOURPINS ->
            "YOUR_PINS"

        SourceOTHERPINS ->
            "OTHER_PINS"




type MetricTypes
    = MetricTypesENGAGEMENT
    | MetricTypesENGAGEMENTRATE
    | MetricTypesIMPRESSION
    | MetricTypesOUTBOUNDCLICK
    | MetricTypesOUTBOUNDCLICKRATE
    | MetricTypesPINCLICK
    | MetricTypesPINCLICKRATE
    | MetricTypesSAVE
    | MetricTypesSAVERATE


metricTypesVariants : List MetricTypes
metricTypesVariants =
    [ MetricTypesENGAGEMENT
    , MetricTypesENGAGEMENTRATE
    , MetricTypesIMPRESSION
    , MetricTypesOUTBOUNDCLICK
    , MetricTypesOUTBOUNDCLICKRATE
    , MetricTypesPINCLICK
    , MetricTypesPINCLICKRATE
    , MetricTypesSAVE
    , MetricTypesSAVERATE
    ]


stringFromMetricTypes : MetricTypes -> String
stringFromMetricTypes model =
    case model of
        MetricTypesENGAGEMENT ->
            "ENGAGEMENT"

        MetricTypesENGAGEMENTRATE ->
            "ENGAGEMENT_RATE"

        MetricTypesIMPRESSION ->
            "IMPRESSION"

        MetricTypesOUTBOUNDCLICK ->
            "OUTBOUND_CLICK"

        MetricTypesOUTBOUNDCLICKRATE ->
            "OUTBOUND_CLICK_RATE"

        MetricTypesPINCLICK ->
            "PIN_CLICK"

        MetricTypesPINCLICKRATE ->
            "PIN_CLICK_RATE"

        MetricTypesSAVE ->
            "SAVE"

        MetricTypesSAVERATE ->
            "SAVE_RATE"




type SplitField
    = SplitFieldNOSPLIT
    | SplitFieldAPPTYPE
    | SplitFieldOWNEDCONTENT
    | SplitFieldSOURCE
    | SplitFieldPINFORMAT


splitFieldVariants : List SplitField
splitFieldVariants =
    [ SplitFieldNOSPLIT
    , SplitFieldAPPTYPE
    , SplitFieldOWNEDCONTENT
    , SplitFieldSOURCE
    , SplitFieldPINFORMAT
    ]


stringFromSplitField : SplitField -> String
stringFromSplitField model =
    case model of
        SplitFieldNOSPLIT ->
            "NO_SPLIT"

        SplitFieldAPPTYPE ->
            "APP_TYPE"

        SplitFieldOWNEDCONTENT ->
            "OWNED_CONTENT"

        SplitFieldSOURCE ->
            "SOURCE"

        SplitFieldPINFORMAT ->
            "PIN_FORMAT"




type SortBy
    = SortByENGAGEMENT
    | SortByIMPRESSION
    | SortByOUTBOUNDCLICK
    | SortByPINCLICK
    | SortBySAVE


sortByVariants : List SortBy
sortByVariants =
    [ SortByENGAGEMENT
    , SortByIMPRESSION
    , SortByOUTBOUNDCLICK
    , SortByPINCLICK
    , SortBySAVE
    ]


stringFromSortBy : SortBy -> String
stringFromSortBy model =
    case model of
        SortByENGAGEMENT ->
            "ENGAGEMENT"

        SortByIMPRESSION ->
            "IMPRESSION"

        SortByOUTBOUNDCLICK ->
            "OUTBOUND_CLICK"

        SortByPINCLICK ->
            "PIN_CLICK"

        SortBySAVE ->
            "SAVE"




type FromClaimedContent
    = FromClaimedContentOTHER
    | FromClaimedContentCLAIMED
    | FromClaimedContentBOTH


fromClaimedContentVariants : List FromClaimedContent
fromClaimedContentVariants =
    [ FromClaimedContentOTHER
    , FromClaimedContentCLAIMED
    , FromClaimedContentBOTH
    ]


stringFromFromClaimedContent : FromClaimedContent -> String
stringFromFromClaimedContent model =
    case model of
        FromClaimedContentOTHER ->
            "OTHER"

        FromClaimedContentCLAIMED ->
            "CLAIMED"

        FromClaimedContentBOTH ->
            "BOTH"




type PinFormat
    = PinFormatALL
    | PinFormatORGANICIMAGE
    | PinFormatORGANICPRODUCT
    | PinFormatORGANICVIDEO
    | PinFormatADSSTANDARD
    | PinFormatADSPRODUCT
    | PinFormatADSVIDEO
    | PinFormatADSIDEA


pinFormatVariants : List PinFormat
pinFormatVariants =
    [ PinFormatALL
    , PinFormatORGANICIMAGE
    , PinFormatORGANICPRODUCT
    , PinFormatORGANICVIDEO
    , PinFormatADSSTANDARD
    , PinFormatADSPRODUCT
    , PinFormatADSVIDEO
    , PinFormatADSIDEA
    ]


stringFromPinFormat : PinFormat -> String
stringFromPinFormat model =
    case model of
        PinFormatALL ->
            "ALL"

        PinFormatORGANICIMAGE ->
            "ORGANIC_IMAGE"

        PinFormatORGANICPRODUCT ->
            "ORGANIC_PRODUCT"

        PinFormatORGANICVIDEO ->
            "ORGANIC_VIDEO"

        PinFormatADSSTANDARD ->
            "ADS_STANDARD"

        PinFormatADSPRODUCT ->
            "ADS_PRODUCT"

        PinFormatADSVIDEO ->
            "ADS_VIDEO"

        PinFormatADSIDEA ->
            "ADS_IDEA"




type AppTypes
    = AppTypesALL
    | AppTypesMOBILE
    | AppTypesTABLET
    | AppTypesWEB


appTypesVariants : List AppTypes
appTypesVariants =
    [ AppTypesALL
    , AppTypesMOBILE
    , AppTypesTABLET
    , AppTypesWEB
    ]


stringFromAppTypes : AppTypes -> String
stringFromAppTypes model =
    case model of
        AppTypesALL ->
            "ALL"

        AppTypesMOBILE ->
            "MOBILE"

        AppTypesTABLET ->
            "TABLET"

        AppTypesWEB ->
            "WEB"




type ContentType
    = ContentTypeALL
    | ContentTypePAID
    | ContentTypeORGANIC


contentTypeVariants : List ContentType
contentTypeVariants =
    [ ContentTypeALL
    , ContentTypePAID
    , ContentTypeORGANIC
    ]


stringFromContentType : ContentType -> String
stringFromContentType model =
    case model of
        ContentTypeALL ->
            "ALL"

        ContentTypePAID ->
            "PAID"

        ContentTypeORGANIC ->
            "ORGANIC"




type Source
    = SourceALL
    | SourceYOURPINS
    | SourceOTHERPINS


sourceVariants : List Source
sourceVariants =
    [ SourceALL
    , SourceYOURPINS
    , SourceOTHERPINS
    ]


stringFromSource : Source -> String
stringFromSource model =
    case model of
        SourceALL ->
            "ALL"

        SourceYOURPINS ->
            "YOUR_PINS"

        SourceOTHERPINS ->
            "OTHER_PINS"




type MetricTypes
    = MetricTypesENGAGEMENT
    | MetricTypesENGAGEMENTRATE
    | MetricTypesIMPRESSION
    | MetricTypesOUTBOUNDCLICK
    | MetricTypesOUTBOUNDCLICKRATE
    | MetricTypesPINCLICK
    | MetricTypesPINCLICKRATE
    | MetricTypesSAVE
    | MetricTypesSAVERATE


metricTypesVariants : List MetricTypes
metricTypesVariants =
    [ MetricTypesENGAGEMENT
    , MetricTypesENGAGEMENTRATE
    , MetricTypesIMPRESSION
    , MetricTypesOUTBOUNDCLICK
    , MetricTypesOUTBOUNDCLICKRATE
    , MetricTypesPINCLICK
    , MetricTypesPINCLICKRATE
    , MetricTypesSAVE
    , MetricTypesSAVERATE
    ]


stringFromMetricTypes : MetricTypes -> String
stringFromMetricTypes model =
    case model of
        MetricTypesENGAGEMENT ->
            "ENGAGEMENT"

        MetricTypesENGAGEMENTRATE ->
            "ENGAGEMENT_RATE"

        MetricTypesIMPRESSION ->
            "IMPRESSION"

        MetricTypesOUTBOUNDCLICK ->
            "OUTBOUND_CLICK"

        MetricTypesOUTBOUNDCLICKRATE ->
            "OUTBOUND_CLICK_RATE"

        MetricTypesPINCLICK ->
            "PIN_CLICK"

        MetricTypesPINCLICKRATE ->
            "PIN_CLICK_RATE"

        MetricTypesSAVE ->
            "SAVE"

        MetricTypesSAVERATE ->
            "SAVE_RATE"




type CreatedInLastNDays
    = CreatedInLastNDays30


createdInLastNDaysVariants : List CreatedInLastNDays
createdInLastNDaysVariants =
    [ CreatedInLastNDays30
    ]


stringFromCreatedInLastNDays : CreatedInLastNDays -> String
stringFromCreatedInLastNDays model =
    case model of
        CreatedInLastNDays30 ->
            30




type SortBy
    = SortByIMPRESSION
    | SortBySAVE
    | SortByOUTBOUNDCLICK
    | SortByVIDEOMRCVIEW
    | SortByVIDEOAVGWATCHTIME
    | SortByVIDEOV50WATCHTIME
    | SortByQUARTILE95PERCENTVIEW
    | SortByVIDEO10SVIEW
    | SortByVIDEOSTART


sortByVariants : List SortBy
sortByVariants =
    [ SortByIMPRESSION
    , SortBySAVE
    , SortByOUTBOUNDCLICK
    , SortByVIDEOMRCVIEW
    , SortByVIDEOAVGWATCHTIME
    , SortByVIDEOV50WATCHTIME
    , SortByQUARTILE95PERCENTVIEW
    , SortByVIDEO10SVIEW
    , SortByVIDEOSTART
    ]


stringFromSortBy : SortBy -> String
stringFromSortBy model =
    case model of
        SortByIMPRESSION ->
            "IMPRESSION"

        SortBySAVE ->
            "SAVE"

        SortByOUTBOUNDCLICK ->
            "OUTBOUND_CLICK"

        SortByVIDEOMRCVIEW ->
            "VIDEO_MRC_VIEW"

        SortByVIDEOAVGWATCHTIME ->
            "VIDEO_AVG_WATCH_TIME"

        SortByVIDEOV50WATCHTIME ->
            "VIDEO_V50_WATCH_TIME"

        SortByQUARTILE95PERCENTVIEW ->
            "QUARTILE_95_PERCENT_VIEW"

        SortByVIDEO10SVIEW ->
            "VIDEO_10S_VIEW"

        SortByVIDEOSTART ->
            "VIDEO_START"




type FromClaimedContent
    = FromClaimedContentOTHER
    | FromClaimedContentCLAIMED
    | FromClaimedContentBOTH


fromClaimedContentVariants : List FromClaimedContent
fromClaimedContentVariants =
    [ FromClaimedContentOTHER
    , FromClaimedContentCLAIMED
    , FromClaimedContentBOTH
    ]


stringFromFromClaimedContent : FromClaimedContent -> String
stringFromFromClaimedContent model =
    case model of
        FromClaimedContentOTHER ->
            "OTHER"

        FromClaimedContentCLAIMED ->
            "CLAIMED"

        FromClaimedContentBOTH ->
            "BOTH"




type PinFormat
    = PinFormatALL
    | PinFormatORGANICIMAGE
    | PinFormatORGANICPRODUCT
    | PinFormatORGANICVIDEO
    | PinFormatADSSTANDARD
    | PinFormatADSPRODUCT
    | PinFormatADSVIDEO
    | PinFormatADSIDEA


pinFormatVariants : List PinFormat
pinFormatVariants =
    [ PinFormatALL
    , PinFormatORGANICIMAGE
    , PinFormatORGANICPRODUCT
    , PinFormatORGANICVIDEO
    , PinFormatADSSTANDARD
    , PinFormatADSPRODUCT
    , PinFormatADSVIDEO
    , PinFormatADSIDEA
    ]


stringFromPinFormat : PinFormat -> String
stringFromPinFormat model =
    case model of
        PinFormatALL ->
            "ALL"

        PinFormatORGANICIMAGE ->
            "ORGANIC_IMAGE"

        PinFormatORGANICPRODUCT ->
            "ORGANIC_PRODUCT"

        PinFormatORGANICVIDEO ->
            "ORGANIC_VIDEO"

        PinFormatADSSTANDARD ->
            "ADS_STANDARD"

        PinFormatADSPRODUCT ->
            "ADS_PRODUCT"

        PinFormatADSVIDEO ->
            "ADS_VIDEO"

        PinFormatADSIDEA ->
            "ADS_IDEA"




type AppTypes
    = AppTypesALL
    | AppTypesMOBILE
    | AppTypesTABLET
    | AppTypesWEB


appTypesVariants : List AppTypes
appTypesVariants =
    [ AppTypesALL
    , AppTypesMOBILE
    , AppTypesTABLET
    , AppTypesWEB
    ]


stringFromAppTypes : AppTypes -> String
stringFromAppTypes model =
    case model of
        AppTypesALL ->
            "ALL"

        AppTypesMOBILE ->
            "MOBILE"

        AppTypesTABLET ->
            "TABLET"

        AppTypesWEB ->
            "WEB"




type ContentType
    = ContentTypeALL
    | ContentTypePAID
    | ContentTypeORGANIC


contentTypeVariants : List ContentType
contentTypeVariants =
    [ ContentTypeALL
    , ContentTypePAID
    , ContentTypeORGANIC
    ]


stringFromContentType : ContentType -> String
stringFromContentType model =
    case model of
        ContentTypeALL ->
            "ALL"

        ContentTypePAID ->
            "PAID"

        ContentTypeORGANIC ->
            "ORGANIC"




type Source
    = SourceALL
    | SourceYOURPINS
    | SourceOTHERPINS


sourceVariants : List Source
sourceVariants =
    [ SourceALL
    , SourceYOURPINS
    , SourceOTHERPINS
    ]


stringFromSource : Source -> String
stringFromSource model =
    case model of
        SourceALL ->
            "ALL"

        SourceYOURPINS ->
            "YOUR_PINS"

        SourceOTHERPINS ->
            "OTHER_PINS"




type MetricTypes
    = MetricTypesIMPRESSION
    | MetricTypesSAVE
    | MetricTypesVIDEOMRCVIEW
    | MetricTypesVIDEOAVGWATCHTIME
    | MetricTypesVIDEOV50WATCHTIME
    | MetricTypesQUARTILE95PERCENTVIEW
    | MetricTypesVIDEO10SVIEW
    | MetricTypesVIDEOSTART
    | MetricTypesOUTBOUNDCLICK


metricTypesVariants : List MetricTypes
metricTypesVariants =
    [ MetricTypesIMPRESSION
    , MetricTypesSAVE
    , MetricTypesVIDEOMRCVIEW
    , MetricTypesVIDEOAVGWATCHTIME
    , MetricTypesVIDEOV50WATCHTIME
    , MetricTypesQUARTILE95PERCENTVIEW
    , MetricTypesVIDEO10SVIEW
    , MetricTypesVIDEOSTART
    , MetricTypesOUTBOUNDCLICK
    ]


stringFromMetricTypes : MetricTypes -> String
stringFromMetricTypes model =
    case model of
        MetricTypesIMPRESSION ->
            "IMPRESSION"

        MetricTypesSAVE ->
            "SAVE"

        MetricTypesVIDEOMRCVIEW ->
            "VIDEO_MRC_VIEW"

        MetricTypesVIDEOAVGWATCHTIME ->
            "VIDEO_AVG_WATCH_TIME"

        MetricTypesVIDEOV50WATCHTIME ->
            "VIDEO_V50_WATCH_TIME"

        MetricTypesQUARTILE95PERCENTVIEW ->
            "QUARTILE_95_PERCENT_VIEW"

        MetricTypesVIDEO10SVIEW ->
            "VIDEO_10S_VIEW"

        MetricTypesVIDEOSTART ->
            "VIDEO_START"

        MetricTypesOUTBOUNDCLICK ->
            "OUTBOUND_CLICK"




type CreatedInLastNDays
    = CreatedInLastNDays30


createdInLastNDaysVariants : List CreatedInLastNDays
createdInLastNDaysVariants =
    [ CreatedInLastNDays30
    ]


stringFromCreatedInLastNDays : CreatedInLastNDays -> String
stringFromCreatedInLastNDays model =
    case model of
        CreatedInLastNDays30 ->
            30



{-| Get a list of the boards a user follows. The request returns a board summary object array.
-}
boardsUserFollowsList : Maybe String -> Maybe Int -> Maybe Bool -> Maybe String -> Api.Request Api.Data.BoardsUserFollowsList200Response
boardsUserFollowsList bookmark_query pageSize_query explicitFollowing_query adAccountId_query =
    Api.request
        "GET"
        "/user_account/following/boards"
        []
        [ ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ), ( "explicit_following", Maybe.map (\val -> if val then "true" else "false") explicitFollowing_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.boardsUserFollowsList200ResponseDecoder


{-| <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>  Use this request, as a signed-in user, to follow another user.
-}
followUserUpdate : String -> Api.Data.FollowUserRequest -> Api.Request Api.Data.UserSummary
followUserUpdate username_path followUserRequest_body =
    Api.request
        "POST"
        "/user_account/following/{username}"
        [ ( "username", identity username_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeFollowUserRequest followUserRequest_body)))
        Api.Data.userSummaryDecoder


{-| Get a list of your followers.
-}
followersList : Maybe String -> Maybe Int -> Api.Request Api.Data.FollowersList200Response
followersList bookmark_query pageSize_query =
    Api.request
        "GET"
        "/user_account/followers"
        []
        [ ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.followersList200ResponseDecoder


{-| Get a list of your linked business accounts.
-}
linkedBusinessAccountsGet : Api.Request (List Api.Data.LinkedBusiness)
linkedBusinessAccountsGet =
    Api.request
        "GET"
        "/user_account/businesses"
        []
        []
        []
        Nothing
        (Json.Decode.list Api.Data.linkedBusinessDecoder)


{-| Unverifu a website verified by the signed-in user.
-}
unverifyWebsiteDelete : String -> Api.Request ()
unverifyWebsiteDelete website_query =
    Api.request
        "DELETE"
        "/user_account/websites"
        []
        [ ( "website", Just <| identity website_query ) ]
        []
        Nothing
        (Json.Decode.succeed ())


{-| Get analytics for the \"operation user_account\" - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\".
-}
userAccountAnalytics : Posix -> Posix -> Maybe FromClaimedContent -> Maybe PinFormat -> Maybe AppTypes -> Maybe ContentType -> Maybe Source -> Maybe (List MetricTypes) -> Maybe SplitField -> Maybe String -> Api.Request (Dict.Dict String Api.Data.AnalyticsMetricsResponse)
userAccountAnalytics startDate_query endDate_query fromClaimedContent_query pinFormat_query appTypes_query contentType_query source_query metricTypes_query splitField_query adAccountId_query =
    Api.request
        "GET"
        "/user_account/analytics"
        []
        [ ( "start_date", Just <| Api.Time.dateToString startDate_query ), ( "end_date", Just <| Api.Time.dateToString endDate_query ), ( "from_claimed_content", Maybe.map stringFromFromClaimedContent fromClaimedContent_query ), ( "pin_format", Maybe.map stringFromPinFormat pinFormat_query ), ( "app_types", Maybe.map stringFromAppTypes appTypes_query ), ( "content_type", Maybe.map stringFromContentType contentType_query ), ( "source", Maybe.map stringFromSource source_query ), ( "metric_types", Maybe.map (String.join "," << List.map stringFromMetricTypes) metricTypes_query ), ( "split_field", Maybe.map stringFromSplitField splitField_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        (Json.Decode.dict Api.Data.analyticsMetricsResponseDecoder)


{-| Gets analytics data about a user's top pins (limited to the top 50). - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\".
-}
userAccountAnalyticsTopPins : Posix -> Posix -> SortBy -> Maybe FromClaimedContent -> Maybe PinFormat -> Maybe AppTypes -> Maybe ContentType -> Maybe Source -> Maybe (List MetricTypes) -> Maybe Int -> Maybe CreatedInLastNDays -> Maybe String -> Api.Request Api.Data.TopPinsAnalyticsResponse
userAccountAnalyticsTopPins startDate_query endDate_query sortBy_query fromClaimedContent_query pinFormat_query appTypes_query contentType_query source_query metricTypes_query numOfPins_query createdInLastNDays_query adAccountId_query =
    Api.request
        "GET"
        "/user_account/analytics/top_pins"
        []
        [ ( "start_date", Just <| Api.Time.dateToString startDate_query ), ( "end_date", Just <| Api.Time.dateToString endDate_query ), ( "sort_by", Just <| stringFromSortBy sortBy_query ), ( "from_claimed_content", Maybe.map stringFromFromClaimedContent fromClaimedContent_query ), ( "pin_format", Maybe.map stringFromPinFormat pinFormat_query ), ( "app_types", Maybe.map stringFromAppTypes appTypes_query ), ( "content_type", Maybe.map stringFromContentType contentType_query ), ( "source", Maybe.map stringFromSource source_query ), ( "metric_types", Maybe.map (String.join "," << List.map stringFromMetricTypes) metricTypes_query ), ( "num_of_pins", Maybe.map String.fromInt numOfPins_query ), ( "created_in_last_n_days", Maybe.map String.fromInt stringFromCreatedInLastNDays createdInLastNDays_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.topPinsAnalyticsResponseDecoder


{-| Gets analytics data about a user's top video pins (limited to the top 50). - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\".
-}
userAccountAnalyticsTopVideoPins : Posix -> Posix -> SortBy -> Maybe FromClaimedContent -> Maybe PinFormat -> Maybe AppTypes -> Maybe ContentType -> Maybe Source -> Maybe (List MetricTypes) -> Maybe Int -> Maybe CreatedInLastNDays -> Maybe String -> Api.Request Api.Data.TopVideoPinsAnalyticsResponse
userAccountAnalyticsTopVideoPins startDate_query endDate_query sortBy_query fromClaimedContent_query pinFormat_query appTypes_query contentType_query source_query metricTypes_query numOfPins_query createdInLastNDays_query adAccountId_query =
    Api.request
        "GET"
        "/user_account/analytics/top_video_pins"
        []
        [ ( "start_date", Just <| Api.Time.dateToString startDate_query ), ( "end_date", Just <| Api.Time.dateToString endDate_query ), ( "sort_by", Just <| stringFromSortBy sortBy_query ), ( "from_claimed_content", Maybe.map stringFromFromClaimedContent fromClaimedContent_query ), ( "pin_format", Maybe.map stringFromPinFormat pinFormat_query ), ( "app_types", Maybe.map stringFromAppTypes appTypes_query ), ( "content_type", Maybe.map stringFromContentType contentType_query ), ( "source", Maybe.map stringFromSource source_query ), ( "metric_types", Maybe.map (String.join "," << List.map stringFromMetricTypes) metricTypes_query ), ( "num_of_pins", Maybe.map String.fromInt numOfPins_query ), ( "created_in_last_n_days", Maybe.map String.fromInt stringFromCreatedInLastNDays createdInLastNDays_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.topVideoPinsAnalyticsResponseDecoder


{-| Get a list of a user's following interests in one place.
-}
userAccountFollowedInterests : String -> Maybe String -> Maybe Int -> Api.Request Api.Data.UserAccountFollowedInterests200Response
userAccountFollowedInterests username_path bookmark_query pageSize_query =
    Api.request
        "GET"
        "/users/{username}/interests/follow"
        [ ( "username", identity username_path ) ]
        [ ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.userAccountFollowedInterests200ResponseDecoder


{-| Get account information for the \"operation user_account\" - By default, the \"operation user_account\" is the token user_account.  If using Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\". See <a href='/docs/getting-started/using-business-access/'>Understanding Business Access</a> for more information.
-}
userAccountGet : Maybe String -> Api.Request Api.Data.Account
userAccountGet adAccountId_query =
    Api.request
        "GET"
        "/user_account"
        []
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.accountDecoder


{-| Get a list of who a certain user follows.
-}
userFollowingGet : Maybe String -> Maybe Int -> Maybe UserFollowingFeedType -> Maybe Bool -> Maybe String -> Api.Request Api.Data.UserFollowingGet200Response
userFollowingGet bookmark_query pageSize_query feedType_query explicitFollowing_query adAccountId_query =
    Api.request
        "GET"
        "/user_account/following"
        []
        [ ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ), ( "feed_type", Maybe.map identity Api.Data.stringFromUserFollowingFeedType feedType_query ), ( "explicit_following", Maybe.map (\val -> if val then "true" else "false") explicitFollowing_query ), ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.userFollowingGet200ResponseDecoder


{-| Get user websites, claimed or not
-}
userWebsitesGet : Maybe String -> Maybe Int -> Api.Request Api.Data.UserWebsitesGet200Response
userWebsitesGet bookmark_query pageSize_query =
    Api.request
        "GET"
        "/user_account/websites"
        []
        [ ( "bookmark", Maybe.map identity bookmark_query ), ( "page_size", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.userWebsitesGet200ResponseDecoder


{-| Verify a website as a signed-in user.
-}
verifyWebsiteUpdate : Maybe String -> Api.Data.UserWebsiteVerifyRequest -> Api.Request Api.Data.UserWebsiteSummary
verifyWebsiteUpdate adAccountId_query userWebsiteVerifyRequest_body =
    Api.request
        "POST"
        "/user_account/websites"
        []
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUserWebsiteVerifyRequest userWebsiteVerifyRequest_body)))
        Api.Data.userWebsiteSummaryDecoder


{-| Get verification code for user to install on the website to claim it.
-}
websiteVerificationGet : Maybe String -> Api.Request Api.Data.UserWebsiteVerificationCode
websiteVerificationGet adAccountId_query =
    Api.request
        "GET"
        "/user_account/websites/verification"
        []
        [ ( "ad_account_id", Maybe.map identity adAccountId_query ) ]
        []
        Nothing
        Api.Data.userWebsiteVerificationCodeDecoder

