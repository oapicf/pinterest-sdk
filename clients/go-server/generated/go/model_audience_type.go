// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// AudienceType : Audience type
type AudienceType string

// List of AudienceType
const (
	CUSTOMER_LIST AudienceType = "CUSTOMER_LIST"
	VISITOR AudienceType = "VISITOR"
	ENGAGEMENT AudienceType = "ENGAGEMENT"
	ACTALIKE AudienceType = "ACTALIKE"
	PERSONA AudienceType = "PERSONA"
)

// AllowedAudienceTypeEnumValues is all the allowed values of AudienceType enum
var AllowedAudienceTypeEnumValues = []AudienceType{
	"CUSTOMER_LIST",
	"VISITOR",
	"ENGAGEMENT",
	"ACTALIKE",
	"PERSONA",
}

// validAudienceTypeEnumValue provides a map of AudienceTypes for fast verification of use input
var validAudienceTypeEnumValues = map[AudienceType]struct{}{
	"CUSTOMER_LIST": {},
	"VISITOR": {},
	"ENGAGEMENT": {},
	"ACTALIKE": {},
	"PERSONA": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AudienceType) IsValid() bool {
	_, ok := validAudienceTypeEnumValues[v]
	return ok
}

// NewAudienceTypeFromValue returns a pointer to a valid AudienceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAudienceTypeFromValue(v string) (AudienceType, error) {
	ev := AudienceType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AudienceType: valid values are %v", v, AllowedAudienceTypeEnumValues)
}



// AssertAudienceTypeRequired checks if the required fields are not zero-ed
func AssertAudienceTypeRequired(obj AudienceType) error {
	return nil
}

// AssertAudienceTypeConstraints checks if the values respects the defined constraints
func AssertAudienceTypeConstraints(obj AudienceType) error {
	return nil
}
