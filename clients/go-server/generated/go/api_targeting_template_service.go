// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// TargetingTemplateAPIService is a service that implements the logic for the TargetingTemplateAPIServicer
// This service should implement the business logic for every endpoint for the TargetingTemplateAPI API.
// Include any external packages or services that will be required by this service.
type TargetingTemplateAPIService struct {
}

// NewTargetingTemplateAPIService creates a default api service
func NewTargetingTemplateAPIService() *TargetingTemplateAPIService {
	return &TargetingTemplateAPIService{}
}

// TargetingTemplateList - List targeting templates
func (s *TargetingTemplateAPIService) TargetingTemplateList(ctx context.Context, adAccountId string, order string, includeSizing bool, searchQuery string, pageSize int32, bookmark string) (ImplResponse, error) {
	// TODO - update TargetingTemplateList with the required logic for this service method.
	// Add api_targeting_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, TargetingTemplateList200Response{}) or use other options such as http.Ok ...
	// return Response(200, TargetingTemplateList200Response{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TargetingTemplateList method not implemented")
}

// TargetingTemplateCreate - Create targeting templates
func (s *TargetingTemplateAPIService) TargetingTemplateCreate(ctx context.Context, adAccountId string, targetingTemplateCreate TargetingTemplateCreate) (ImplResponse, error) {
	// TODO - update TargetingTemplateCreate with the required logic for this service method.
	// Add api_targeting_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, TargetingTemplateGetResponseData{}) or use other options such as http.Ok ...
	// return Response(200, TargetingTemplateGetResponseData{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TargetingTemplateCreate method not implemented")
}

// TargetingTemplateUpdate - Update targeting templates
func (s *TargetingTemplateAPIService) TargetingTemplateUpdate(ctx context.Context, adAccountId string, targetingTemplateUpdateRequest TargetingTemplateUpdateRequest) (ImplResponse, error) {
	// TODO - update TargetingTemplateUpdate with the required logic for this service method.
	// Add api_targeting_template_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TargetingTemplateUpdate method not implemented")
}
