// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// MetricsReportingLevel : Level of the reporting request
type MetricsReportingLevel string

// List of MetricsReportingLevel
const (
	ADVERTISER MetricsReportingLevel = "ADVERTISER"
	ADVERTISER_TARGETING MetricsReportingLevel = "ADVERTISER_TARGETING"
	CAMPAIGN MetricsReportingLevel = "CAMPAIGN"
	CAMPAIGN_TARGETING MetricsReportingLevel = "CAMPAIGN_TARGETING"
	AD_GROUP MetricsReportingLevel = "AD_GROUP"
	AD_GROUP_TARGETING MetricsReportingLevel = "AD_GROUP_TARGETING"
	PIN_PROMOTION MetricsReportingLevel = "PIN_PROMOTION"
	PIN_PROMOTION_TARGETING MetricsReportingLevel = "PIN_PROMOTION_TARGETING"
	KEYWORD MetricsReportingLevel = "KEYWORD"
	PRODUCT_GROUP MetricsReportingLevel = "PRODUCT_GROUP"
	PRODUCT_GROUP_TARGETING MetricsReportingLevel = "PRODUCT_GROUP_TARGETING"
	PRODUCT_ITEM MetricsReportingLevel = "PRODUCT_ITEM"
	PRODUCT_ITEM_TARGETING MetricsReportingLevel = "PRODUCT_ITEM_TARGETING"
)

// AllowedMetricsReportingLevelEnumValues is all the allowed values of MetricsReportingLevel enum
var AllowedMetricsReportingLevelEnumValues = []MetricsReportingLevel{
	"ADVERTISER",
	"ADVERTISER_TARGETING",
	"CAMPAIGN",
	"CAMPAIGN_TARGETING",
	"AD_GROUP",
	"AD_GROUP_TARGETING",
	"PIN_PROMOTION",
	"PIN_PROMOTION_TARGETING",
	"KEYWORD",
	"PRODUCT_GROUP",
	"PRODUCT_GROUP_TARGETING",
	"PRODUCT_ITEM",
	"PRODUCT_ITEM_TARGETING",
}

// validMetricsReportingLevelEnumValue provides a map of MetricsReportingLevels for fast verification of use input
var validMetricsReportingLevelEnumValues = map[MetricsReportingLevel]struct{}{
	"ADVERTISER": {},
	"ADVERTISER_TARGETING": {},
	"CAMPAIGN": {},
	"CAMPAIGN_TARGETING": {},
	"AD_GROUP": {},
	"AD_GROUP_TARGETING": {},
	"PIN_PROMOTION": {},
	"PIN_PROMOTION_TARGETING": {},
	"KEYWORD": {},
	"PRODUCT_GROUP": {},
	"PRODUCT_GROUP_TARGETING": {},
	"PRODUCT_ITEM": {},
	"PRODUCT_ITEM_TARGETING": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricsReportingLevel) IsValid() bool {
	_, ok := validMetricsReportingLevelEnumValues[v]
	return ok
}

// NewMetricsReportingLevelFromValue returns a pointer to a valid MetricsReportingLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricsReportingLevelFromValue(v string) (MetricsReportingLevel, error) {
	ev := MetricsReportingLevel(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MetricsReportingLevel: valid values are %v", v, AllowedMetricsReportingLevelEnumValues)
}



// AssertMetricsReportingLevelRequired checks if the required fields are not zero-ed
func AssertMetricsReportingLevelRequired(obj MetricsReportingLevel) error {
	return nil
}

// AssertMetricsReportingLevelConstraints checks if the values respects the defined constraints
func AssertMetricsReportingLevelConstraints(obj MetricsReportingLevel) error {
	return nil
}
