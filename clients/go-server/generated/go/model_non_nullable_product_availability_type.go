// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// NonNullableProductAvailabilityType : Product availability.
type NonNullableProductAvailabilityType string

// List of NonNullableProductAvailabilityType
const (
	IN_STOCK NonNullableProductAvailabilityType = "IN_STOCK"
	OUT_OF_STOCK NonNullableProductAvailabilityType = "OUT_OF_STOCK"
	PREORDER NonNullableProductAvailabilityType = "PREORDER"
)

// AllowedNonNullableProductAvailabilityTypeEnumValues is all the allowed values of NonNullableProductAvailabilityType enum
var AllowedNonNullableProductAvailabilityTypeEnumValues = []NonNullableProductAvailabilityType{
	"IN_STOCK",
	"OUT_OF_STOCK",
	"PREORDER",
}

// validNonNullableProductAvailabilityTypeEnumValue provides a map of NonNullableProductAvailabilityTypes for fast verification of use input
var validNonNullableProductAvailabilityTypeEnumValues = map[NonNullableProductAvailabilityType]struct{}{
	"IN_STOCK": {},
	"OUT_OF_STOCK": {},
	"PREORDER": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NonNullableProductAvailabilityType) IsValid() bool {
	_, ok := validNonNullableProductAvailabilityTypeEnumValues[v]
	return ok
}

// NewNonNullableProductAvailabilityTypeFromValue returns a pointer to a valid NonNullableProductAvailabilityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNonNullableProductAvailabilityTypeFromValue(v string) (NonNullableProductAvailabilityType, error) {
	ev := NonNullableProductAvailabilityType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NonNullableProductAvailabilityType: valid values are %v", v, AllowedNonNullableProductAvailabilityTypeEnumValues)
}



// AssertNonNullableProductAvailabilityTypeRequired checks if the required fields are not zero-ed
func AssertNonNullableProductAvailabilityTypeRequired(obj NonNullableProductAvailabilityType) error {
	return nil
}

// AssertNonNullableProductAvailabilityTypeConstraints checks if the values respects the defined constraints
func AssertNonNullableProductAvailabilityTypeConstraints(obj NonNullableProductAvailabilityType) error {
	return nil
}
