// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// MmmReportingColumn : Marketing Mix Modeling (MMM) Reporting Columns
type MmmReportingColumn string

// List of MmmReportingColumn
const (
	SPEND_IN_DOLLAR MmmReportingColumn = "SPEND_IN_DOLLAR"
	SPEND_IN_MICRO_DOLLAR MmmReportingColumn = "SPEND_IN_MICRO_DOLLAR"
	ECPC_IN_DOLLAR MmmReportingColumn = "ECPC_IN_DOLLAR"
	ECTR MmmReportingColumn = "ECTR"
	CAMPAIGN_NAME MmmReportingColumn = "CAMPAIGN_NAME"
	TOTAL_ENGAGEMENT MmmReportingColumn = "TOTAL_ENGAGEMENT"
	EENGAGEMENT_RATE MmmReportingColumn = "EENGAGEMENT_RATE"
	ECPM_IN_DOLLAR MmmReportingColumn = "ECPM_IN_DOLLAR"
	CAMPAIGN_ID MmmReportingColumn = "CAMPAIGN_ID"
	ADVERTISER_ID MmmReportingColumn = "ADVERTISER_ID"
	AD_GROUP_ID MmmReportingColumn = "AD_GROUP_ID"
	AD_GROUP_NAME MmmReportingColumn = "AD_GROUP_NAME"
	CLICKTHROUGH_1 MmmReportingColumn = "CLICKTHROUGH_1"
	IMPRESSION_1 MmmReportingColumn = "IMPRESSION_1"
	CLICKTHROUGH_2 MmmReportingColumn = "CLICKTHROUGH_2"
	IMPRESSION_2 MmmReportingColumn = "IMPRESSION_2"
	TOTAL_CLICKTHROUGH MmmReportingColumn = "TOTAL_CLICKTHROUGH"
	TOTAL_IMPRESSION MmmReportingColumn = "TOTAL_IMPRESSION"
	ADVERTISER_NAME MmmReportingColumn = "ADVERTISER_NAME"
	SPEND_ORDER_LINE_PAID_TYPE MmmReportingColumn = "SPEND_ORDER_LINE_PAID_TYPE"
)

// AllowedMmmReportingColumnEnumValues is all the allowed values of MmmReportingColumn enum
var AllowedMmmReportingColumnEnumValues = []MmmReportingColumn{
	"SPEND_IN_DOLLAR",
	"SPEND_IN_MICRO_DOLLAR",
	"ECPC_IN_DOLLAR",
	"ECTR",
	"CAMPAIGN_NAME",
	"TOTAL_ENGAGEMENT",
	"EENGAGEMENT_RATE",
	"ECPM_IN_DOLLAR",
	"CAMPAIGN_ID",
	"ADVERTISER_ID",
	"AD_GROUP_ID",
	"AD_GROUP_NAME",
	"CLICKTHROUGH_1",
	"IMPRESSION_1",
	"CLICKTHROUGH_2",
	"IMPRESSION_2",
	"TOTAL_CLICKTHROUGH",
	"TOTAL_IMPRESSION",
	"ADVERTISER_NAME",
	"SPEND_ORDER_LINE_PAID_TYPE",
}

// validMmmReportingColumnEnumValue provides a map of MmmReportingColumns for fast verification of use input
var validMmmReportingColumnEnumValues = map[MmmReportingColumn]struct{}{
	"SPEND_IN_DOLLAR": {},
	"SPEND_IN_MICRO_DOLLAR": {},
	"ECPC_IN_DOLLAR": {},
	"ECTR": {},
	"CAMPAIGN_NAME": {},
	"TOTAL_ENGAGEMENT": {},
	"EENGAGEMENT_RATE": {},
	"ECPM_IN_DOLLAR": {},
	"CAMPAIGN_ID": {},
	"ADVERTISER_ID": {},
	"AD_GROUP_ID": {},
	"AD_GROUP_NAME": {},
	"CLICKTHROUGH_1": {},
	"IMPRESSION_1": {},
	"CLICKTHROUGH_2": {},
	"IMPRESSION_2": {},
	"TOTAL_CLICKTHROUGH": {},
	"TOTAL_IMPRESSION": {},
	"ADVERTISER_NAME": {},
	"SPEND_ORDER_LINE_PAID_TYPE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MmmReportingColumn) IsValid() bool {
	_, ok := validMmmReportingColumnEnumValues[v]
	return ok
}

// NewMmmReportingColumnFromValue returns a pointer to a valid MmmReportingColumn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMmmReportingColumnFromValue(v string) (MmmReportingColumn, error) {
	ev := MmmReportingColumn(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MmmReportingColumn: valid values are %v", v, AllowedMmmReportingColumnEnumValues)
}



// AssertMmmReportingColumnRequired checks if the required fields are not zero-ed
func AssertMmmReportingColumnRequired(obj MmmReportingColumn) error {
	return nil
}

// AssertMmmReportingColumnConstraints checks if the values respects the defined constraints
func AssertMmmReportingColumnConstraints(obj MmmReportingColumn) error {
	return nil
}
