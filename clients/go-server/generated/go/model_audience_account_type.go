// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)



type AudienceAccountType string

// List of AudienceAccountType
const (
	AD_ACCOUNT AudienceAccountType = "AD_ACCOUNT"
	BUSINESS_ACCOUNT AudienceAccountType = "BUSINESS_ACCOUNT"
)

// AllowedAudienceAccountTypeEnumValues is all the allowed values of AudienceAccountType enum
var AllowedAudienceAccountTypeEnumValues = []AudienceAccountType{
	"AD_ACCOUNT",
	"BUSINESS_ACCOUNT",
}

// validAudienceAccountTypeEnumValue provides a map of AudienceAccountTypes for fast verification of use input
var validAudienceAccountTypeEnumValues = map[AudienceAccountType]struct{}{
	"AD_ACCOUNT": {},
	"BUSINESS_ACCOUNT": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AudienceAccountType) IsValid() bool {
	_, ok := validAudienceAccountTypeEnumValues[v]
	return ok
}

// NewAudienceAccountTypeFromValue returns a pointer to a valid AudienceAccountType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAudienceAccountTypeFromValue(v string) (AudienceAccountType, error) {
	ev := AudienceAccountType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AudienceAccountType: valid values are %v", v, AllowedAudienceAccountTypeEnumValues)
}



// AssertAudienceAccountTypeRequired checks if the required fields are not zero-ed
func AssertAudienceAccountTypeRequired(obj AudienceAccountType) error {
	return nil
}

// AssertAudienceAccountTypeConstraints checks if the values respects the defined constraints
func AssertAudienceAccountTypeConstraints(obj AudienceAccountType) error {
	return nil
}
