// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// UserListOperationType : User list operation type (add or remove)
type UserListOperationType string

// List of UserListOperationType
const (
	ADD UserListOperationType = "ADD"
	REMOVE UserListOperationType = "REMOVE"
)

// AllowedUserListOperationTypeEnumValues is all the allowed values of UserListOperationType enum
var AllowedUserListOperationTypeEnumValues = []UserListOperationType{
	"ADD",
	"REMOVE",
}

// validUserListOperationTypeEnumValue provides a map of UserListOperationTypes for fast verification of use input
var validUserListOperationTypeEnumValues = map[UserListOperationType]struct{}{
	"ADD": {},
	"REMOVE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UserListOperationType) IsValid() bool {
	_, ok := validUserListOperationTypeEnumValues[v]
	return ok
}

// NewUserListOperationTypeFromValue returns a pointer to a valid UserListOperationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUserListOperationTypeFromValue(v string) (UserListOperationType, error) {
	ev := UserListOperationType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for UserListOperationType: valid values are %v", v, AllowedUserListOperationTypeEnumValues)
}



// AssertUserListOperationTypeRequired checks if the required fields are not zero-ed
func AssertUserListOperationTypeRequired(obj UserListOperationType) error {
	return nil
}

// AssertUserListOperationTypeConstraints checks if the values respects the defined constraints
func AssertUserListOperationTypeConstraints(obj UserListOperationType) error {
	return nil
}
