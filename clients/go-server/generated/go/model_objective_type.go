// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// ObjectiveType : Campaign objective type. If set as one of [\"AWARENESS\", \"CONSIDERATION\", \"WEB_CONVERSION\", \"CATALOG_SALES\", \"VIDEO_COMPLETION\"] the campaign is considered as a Campaign Budget Optimization (CBO) campaign, meaning budget needs to be set at the campaign level rather than at the ad group level. [\"WEB_SESSIONS\"] is DEPRECATED. For update, only draft campaigns may update objective type.
type ObjectiveType string

// List of ObjectiveType
const (
	AWARENESS ObjectiveType = "AWARENESS"
	CONSIDERATION ObjectiveType = "CONSIDERATION"
	VIDEO_VIEW ObjectiveType = "VIDEO_VIEW"
	WEB_CONVERSION ObjectiveType = "WEB_CONVERSION"
	CATALOG_SALES ObjectiveType = "CATALOG_SALES"
	WEB_SESSIONS ObjectiveType = "WEB_SESSIONS"
	VIDEO_COMPLETION ObjectiveType = "VIDEO_COMPLETION"
)

// AllowedObjectiveTypeEnumValues is all the allowed values of ObjectiveType enum
var AllowedObjectiveTypeEnumValues = []ObjectiveType{
	"AWARENESS",
	"CONSIDERATION",
	"VIDEO_VIEW",
	"WEB_CONVERSION",
	"CATALOG_SALES",
	"WEB_SESSIONS",
	"VIDEO_COMPLETION",
}

// validObjectiveTypeEnumValue provides a map of ObjectiveTypes for fast verification of use input
var validObjectiveTypeEnumValues = map[ObjectiveType]struct{}{
	"AWARENESS": {},
	"CONSIDERATION": {},
	"VIDEO_VIEW": {},
	"WEB_CONVERSION": {},
	"CATALOG_SALES": {},
	"WEB_SESSIONS": {},
	"VIDEO_COMPLETION": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ObjectiveType) IsValid() bool {
	_, ok := validObjectiveTypeEnumValues[v]
	return ok
}

// NewObjectiveTypeFromValue returns a pointer to a valid ObjectiveType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewObjectiveTypeFromValue(v string) (ObjectiveType, error) {
	ev := ObjectiveType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ObjectiveType: valid values are %v", v, AllowedObjectiveTypeEnumValues)
}



// AssertObjectiveTypeRequired checks if the required fields are not zero-ed
func AssertObjectiveTypeRequired(obj ObjectiveType) error {
	return nil
}

// AssertObjectiveTypeConstraints checks if the values respects the defined constraints
func AssertObjectiveTypeConstraints(obj ObjectiveType) error {
	return nil
}
