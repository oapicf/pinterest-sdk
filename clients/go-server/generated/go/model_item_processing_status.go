// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// ItemProcessingStatus : The status of the item processing record
type ItemProcessingStatus string

// List of ItemProcessingStatus
const (
	SUCCESS ItemProcessingStatus = "SUCCESS"
	FAILURE ItemProcessingStatus = "FAILURE"
	PROCESSING ItemProcessingStatus = "PROCESSING"
)

// AllowedItemProcessingStatusEnumValues is all the allowed values of ItemProcessingStatus enum
var AllowedItemProcessingStatusEnumValues = []ItemProcessingStatus{
	"SUCCESS",
	"FAILURE",
	"PROCESSING",
}

// validItemProcessingStatusEnumValue provides a map of ItemProcessingStatuss for fast verification of use input
var validItemProcessingStatusEnumValues = map[ItemProcessingStatus]struct{}{
	"SUCCESS": {},
	"FAILURE": {},
	"PROCESSING": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ItemProcessingStatus) IsValid() bool {
	_, ok := validItemProcessingStatusEnumValues[v]
	return ok
}

// NewItemProcessingStatusFromValue returns a pointer to a valid ItemProcessingStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewItemProcessingStatusFromValue(v string) (ItemProcessingStatus, error) {
	ev := ItemProcessingStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ItemProcessingStatus: valid values are %v", v, AllowedItemProcessingStatusEnumValues)
}



// AssertItemProcessingStatusRequired checks if the required fields are not zero-ed
func AssertItemProcessingStatusRequired(obj ItemProcessingStatus) error {
	return nil
}

// AssertItemProcessingStatusConstraints checks if the values respects the defined constraints
func AssertItemProcessingStatusConstraints(obj ItemProcessingStatus) error {
	return nil
}
