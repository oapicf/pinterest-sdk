// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi

import (
	"context"
	"net/http"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
	"reflect"
)



// AdAccountsAPIRouter defines the required methods for binding the api requests to a responses for the AdAccountsAPI
// The AdAccountsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AdAccountsAPIServicer to perform the required actions, then write the service results to the http response.
type AdAccountsAPIRouter interface { 
	AdAccountsList(http.ResponseWriter, *http.Request)
	AdAccountsCreate(http.ResponseWriter, *http.Request)
	AdAccountsGet(http.ResponseWriter, *http.Request)
	AdAccountAnalytics(http.ResponseWriter, *http.Request)
	AnalyticsGetMmmReport(http.ResponseWriter, *http.Request)
	AnalyticsCreateMmmReport(http.ResponseWriter, *http.Request)
	AnalyticsGetReport(http.ResponseWriter, *http.Request)
	AnalyticsCreateReport(http.ResponseWriter, *http.Request)
	SandboxDelete(http.ResponseWriter, *http.Request)
	AdAccountTargetingAnalyticsGet(http.ResponseWriter, *http.Request)
	TemplatesList(http.ResponseWriter, *http.Request)
	AnalyticsCreateTemplateReport(http.ResponseWriter, *http.Request)
}
// AdGroupsAPIRouter defines the required methods for binding the api requests to a responses for the AdGroupsAPI
// The AdGroupsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AdGroupsAPIServicer to perform the required actions, then write the service results to the http response.
type AdGroupsAPIRouter interface { 
	AdGroupsList(http.ResponseWriter, *http.Request)
	AdGroupsCreate(http.ResponseWriter, *http.Request)
	AdGroupsUpdate(http.ResponseWriter, *http.Request)
	AdGroupsAnalytics(http.ResponseWriter, *http.Request)
	AdGroupsTargetingAnalyticsGet(http.ResponseWriter, *http.Request)
	AdGroupsAudienceSizing(http.ResponseWriter, *http.Request)
	AdGroupsGet(http.ResponseWriter, *http.Request)
	AdGroupsBidFloorGet(http.ResponseWriter, *http.Request)
}
// AdsAPIRouter defines the required methods for binding the api requests to a responses for the AdsAPI
// The AdsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AdsAPIServicer to perform the required actions, then write the service results to the http response.
type AdsAPIRouter interface { 
	AdPreviewsCreate(http.ResponseWriter, *http.Request)
	AdsList(http.ResponseWriter, *http.Request)
	AdsCreate(http.ResponseWriter, *http.Request)
	AdsUpdate(http.ResponseWriter, *http.Request)
	AdsAnalytics(http.ResponseWriter, *http.Request)
	AdTargetingAnalyticsGet(http.ResponseWriter, *http.Request)
	AdsGet(http.ResponseWriter, *http.Request)
}
// AdvancedAuctionAPIRouter defines the required methods for binding the api requests to a responses for the AdvancedAuctionAPI
// The AdvancedAuctionAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AdvancedAuctionAPIServicer to perform the required actions, then write the service results to the http response.
type AdvancedAuctionAPIRouter interface { 
	AdvancedAuctionItemsGetPost(http.ResponseWriter, *http.Request)
	AdvancedAuctionItemsSubmitPost(http.ResponseWriter, *http.Request)
}
// AudienceInsightsAPIRouter defines the required methods for binding the api requests to a responses for the AudienceInsightsAPI
// The AudienceInsightsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AudienceInsightsAPIServicer to perform the required actions, then write the service results to the http response.
type AudienceInsightsAPIRouter interface { 
	AudienceInsightsGet(http.ResponseWriter, *http.Request)
	AudienceInsightsScopeAndTypeGet(http.ResponseWriter, *http.Request)
}
// AudienceSharingAPIRouter defines the required methods for binding the api requests to a responses for the AudienceSharingAPI
// The AudienceSharingAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AudienceSharingAPIServicer to perform the required actions, then write the service results to the http response.
type AudienceSharingAPIRouter interface { 
	AdAccountsAudiencesSharedAccountsList(http.ResponseWriter, *http.Request)
	UpdateAdAccountToAdAccountSharedAudience(http.ResponseWriter, *http.Request)
	UpdateAdAccountToBusinessSharedAudience(http.ResponseWriter, *http.Request)
	SharedAudiencesForBusinessList(http.ResponseWriter, *http.Request)
	BusinessAccountAudiencesSharedAccountsList(http.ResponseWriter, *http.Request)
	UpdateBusinessToAdAccountSharedAudience(http.ResponseWriter, *http.Request)
	UpdateBusinessToBusinessSharedAudience(http.ResponseWriter, *http.Request)
}
// AudiencesAPIRouter defines the required methods for binding the api requests to a responses for the AudiencesAPI
// The AudiencesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AudiencesAPIServicer to perform the required actions, then write the service results to the http response.
type AudiencesAPIRouter interface { 
	AudiencesList(http.ResponseWriter, *http.Request)
	AudiencesCreate(http.ResponseWriter, *http.Request)
	AudiencesGet(http.ResponseWriter, *http.Request)
	AudiencesUpdate(http.ResponseWriter, *http.Request)
	AudiencesCreateCustom(http.ResponseWriter, *http.Request)
}
// BillingAPIRouter defines the required methods for binding the api requests to a responses for the BillingAPI
// The BillingAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BillingAPIServicer to perform the required actions, then write the service results to the http response.
type BillingAPIRouter interface { 
	AdsCreditsDiscountsGet(http.ResponseWriter, *http.Request)
	AdsCreditRedeem(http.ResponseWriter, *http.Request)
	BillingProfilesGet(http.ResponseWriter, *http.Request)
	SsioAccountsGet(http.ResponseWriter, *http.Request)
	SsioInsertionOrderCreate(http.ResponseWriter, *http.Request)
	SsioInsertionOrderEdit(http.ResponseWriter, *http.Request)
	SsioInsertionOrdersStatusGetByAdAccount(http.ResponseWriter, *http.Request)
	SsioInsertionOrdersStatusGetByPinOrderId(http.ResponseWriter, *http.Request)
	SsioOrderLinesGetByAdAccount(http.ResponseWriter, *http.Request)
}
// BoardsAPIRouter defines the required methods for binding the api requests to a responses for the BoardsAPI
// The BoardsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BoardsAPIServicer to perform the required actions, then write the service results to the http response.
type BoardsAPIRouter interface { 
	BoardsList(http.ResponseWriter, *http.Request)
	BoardsCreate(http.ResponseWriter, *http.Request)
	BoardsGet(http.ResponseWriter, *http.Request)
	BoardsDelete(http.ResponseWriter, *http.Request)
	BoardsUpdate(http.ResponseWriter, *http.Request)
	BoardsListPins(http.ResponseWriter, *http.Request)
	BoardSectionsList(http.ResponseWriter, *http.Request)
	BoardSectionsCreate(http.ResponseWriter, *http.Request)
	BoardSectionsDelete(http.ResponseWriter, *http.Request)
	BoardSectionsUpdate(http.ResponseWriter, *http.Request)
	BoardSectionsListPins(http.ResponseWriter, *http.Request)
}
// BulkAPIRouter defines the required methods for binding the api requests to a responses for the BulkAPI
// The BulkAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BulkAPIServicer to perform the required actions, then write the service results to the http response.
type BulkAPIRouter interface { 
	BulkDownloadCreate(http.ResponseWriter, *http.Request)
	BulkUpsertCreate(http.ResponseWriter, *http.Request)
	BulkRequestGet(http.ResponseWriter, *http.Request)
}
// BusinessAccessAssetsAPIRouter defines the required methods for binding the api requests to a responses for the BusinessAccessAssetsAPI
// The BusinessAccessAssetsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BusinessAccessAssetsAPIServicer to perform the required actions, then write the service results to the http response.
type BusinessAccessAssetsAPIRouter interface { 
	BusinessAssetMembersGet(http.ResponseWriter, *http.Request)
	BusinessAssetPartnersGet(http.ResponseWriter, *http.Request)
	BusinessAssetsGet(http.ResponseWriter, *http.Request)
	BusinessMemberAssetsGet(http.ResponseWriter, *http.Request)
	BusinessMembersAssetAccessDelete(http.ResponseWriter, *http.Request)
	BusinessMembersAssetAccessUpdate(http.ResponseWriter, *http.Request)
	DeletePartnerAssetAccessHandlerImpl(http.ResponseWriter, *http.Request)
	UpdatePartnerAssetAccessHandlerImpl(http.ResponseWriter, *http.Request)
	BusinessPartnerAssetAccessGet(http.ResponseWriter, *http.Request)
	AssetGroupCreate(http.ResponseWriter, *http.Request)
	AssetGroupDelete(http.ResponseWriter, *http.Request)
	AssetGroupUpdate(http.ResponseWriter, *http.Request)
}
// BusinessAccessInviteAPIRouter defines the required methods for binding the api requests to a responses for the BusinessAccessInviteAPI
// The BusinessAccessInviteAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BusinessAccessInviteAPIServicer to perform the required actions, then write the service results to the http response.
type BusinessAccessInviteAPIRouter interface { 
	RespondBusinessAccessInvites(http.ResponseWriter, *http.Request)
	CreateAssetInvites(http.ResponseWriter, *http.Request)
	AssetAccessRequestsCreate(http.ResponseWriter, *http.Request)
	GetInvites(http.ResponseWriter, *http.Request)
	CreateMembershipOrPartnershipInvites(http.ResponseWriter, *http.Request)
	CancelInvitesOrRequests(http.ResponseWriter, *http.Request)
}
// BusinessAccessRelationshipsAPIRouter defines the required methods for binding the api requests to a responses for the BusinessAccessRelationshipsAPI
// The BusinessAccessRelationshipsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a BusinessAccessRelationshipsAPIServicer to perform the required actions, then write the service results to the http response.
type BusinessAccessRelationshipsAPIRouter interface { 
	GetBusinessEmployers(http.ResponseWriter, *http.Request)
	GetBusinessMembers(http.ResponseWriter, *http.Request)
	DeleteBusinessMembership(http.ResponseWriter, *http.Request)
	UpdateBusinessMemberships(http.ResponseWriter, *http.Request)
	GetBusinessPartners(http.ResponseWriter, *http.Request)
	DeleteBusinessPartners(http.ResponseWriter, *http.Request)
}
// CampaignsAPIRouter defines the required methods for binding the api requests to a responses for the CampaignsAPI
// The CampaignsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CampaignsAPIServicer to perform the required actions, then write the service results to the http response.
type CampaignsAPIRouter interface { 
	CampaignsList(http.ResponseWriter, *http.Request)
	CampaignsCreate(http.ResponseWriter, *http.Request)
	CampaignsUpdate(http.ResponseWriter, *http.Request)
	CampaignsAnalytics(http.ResponseWriter, *http.Request)
	CampaignTargetingAnalyticsGet(http.ResponseWriter, *http.Request)
	CampaignsGet(http.ResponseWriter, *http.Request)
}
// CatalogsAPIRouter defines the required methods for binding the api requests to a responses for the CatalogsAPI
// The CatalogsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CatalogsAPIServicer to perform the required actions, then write the service results to the http response.
type CatalogsAPIRouter interface { 
	CatalogsList(http.ResponseWriter, *http.Request)
	CatalogsCreate(http.ResponseWriter, *http.Request)
	FeedsList(http.ResponseWriter, *http.Request)
	FeedsCreate(http.ResponseWriter, *http.Request)
	FeedsGet(http.ResponseWriter, *http.Request)
	FeedsDelete(http.ResponseWriter, *http.Request)
	FeedsUpdate(http.ResponseWriter, *http.Request)
	FeedsIngest(http.ResponseWriter, *http.Request)
	FeedProcessingResultsList(http.ResponseWriter, *http.Request)
	ItemsIssuesList(http.ResponseWriter, *http.Request)
	// Deprecated
	ItemsGet(http.ResponseWriter, *http.Request)
	ItemsPost(http.ResponseWriter, *http.Request)
	ItemsBatchPost(http.ResponseWriter, *http.Request)
	ItemsBatchGet(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsCreateMany(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsDeleteMany(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsList(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsCreate(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsGet(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsDelete(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsUpdate(http.ResponseWriter, *http.Request)
	CatalogsProductGroupsProductCountsGet(http.ResponseWriter, *http.Request)
	CatalogsProductGroupPinsList(http.ResponseWriter, *http.Request)
	ProductsByProductGroupFilterList(http.ResponseWriter, *http.Request)
	ReportsGet(http.ResponseWriter, *http.Request)
	ReportsCreate(http.ResponseWriter, *http.Request)
	ReportsStats(http.ResponseWriter, *http.Request)
}
// ConversionEventsAPIRouter defines the required methods for binding the api requests to a responses for the ConversionEventsAPI
// The ConversionEventsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConversionEventsAPIServicer to perform the required actions, then write the service results to the http response.
type ConversionEventsAPIRouter interface { 
	EventsCreate(http.ResponseWriter, *http.Request)
}
// ConversionTagsAPIRouter defines the required methods for binding the api requests to a responses for the ConversionTagsAPI
// The ConversionTagsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConversionTagsAPIServicer to perform the required actions, then write the service results to the http response.
type ConversionTagsAPIRouter interface { 
	ConversionTagsList(http.ResponseWriter, *http.Request)
	ConversionTagsCreate(http.ResponseWriter, *http.Request)
	OcpmEligibleConversionTagsGet(http.ResponseWriter, *http.Request)
	PageVisitConversionTagsGet(http.ResponseWriter, *http.Request)
	ConversionTagsGet(http.ResponseWriter, *http.Request)
}
// CustomerListsAPIRouter defines the required methods for binding the api requests to a responses for the CustomerListsAPI
// The CustomerListsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CustomerListsAPIServicer to perform the required actions, then write the service results to the http response.
type CustomerListsAPIRouter interface { 
	CustomerListsList(http.ResponseWriter, *http.Request)
	CustomerListsCreate(http.ResponseWriter, *http.Request)
	CustomerListsGet(http.ResponseWriter, *http.Request)
	CustomerListsUpdate(http.ResponseWriter, *http.Request)
}
// IntegrationsAPIRouter defines the required methods for binding the api requests to a responses for the IntegrationsAPI
// The IntegrationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IntegrationsAPIServicer to perform the required actions, then write the service results to the http response.
type IntegrationsAPIRouter interface { 
	IntegrationsCommercePost(http.ResponseWriter, *http.Request)
	IntegrationsCommerceGet(http.ResponseWriter, *http.Request)
	IntegrationsCommerceDel(http.ResponseWriter, *http.Request)
	IntegrationsCommercePatch(http.ResponseWriter, *http.Request)
	IntegrationsLogsPost(http.ResponseWriter, *http.Request)
	IntegrationsGetList(http.ResponseWriter, *http.Request)
	IntegrationsGetById(http.ResponseWriter, *http.Request)
}
// KeywordsAPIRouter defines the required methods for binding the api requests to a responses for the KeywordsAPI
// The KeywordsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a KeywordsAPIServicer to perform the required actions, then write the service results to the http response.
type KeywordsAPIRouter interface { 
	KeywordsGet(http.ResponseWriter, *http.Request)
	KeywordsCreate(http.ResponseWriter, *http.Request)
	KeywordsUpdate(http.ResponseWriter, *http.Request)
	CountryKeywordsMetricsGet(http.ResponseWriter, *http.Request)
	TrendingKeywordsList(http.ResponseWriter, *http.Request)
}
// LeadAdsAPIRouter defines the required methods for binding the api requests to a responses for the LeadAdsAPI
// The LeadAdsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LeadAdsAPIServicer to perform the required actions, then write the service results to the http response.
type LeadAdsAPIRouter interface { 
	AdAccountsSubscriptionsGetList(http.ResponseWriter, *http.Request)
	AdAccountsSubscriptionsPost(http.ResponseWriter, *http.Request)
	AdAccountsSubscriptionsGetById(http.ResponseWriter, *http.Request)
	AdAccountsSubscriptionsDelById(http.ResponseWriter, *http.Request)
}
// LeadFormsAPIRouter defines the required methods for binding the api requests to a responses for the LeadFormsAPI
// The LeadFormsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LeadFormsAPIServicer to perform the required actions, then write the service results to the http response.
type LeadFormsAPIRouter interface { 
	LeadFormsList(http.ResponseWriter, *http.Request)
	LeadFormsCreate(http.ResponseWriter, *http.Request)
	LeadFormsUpdate(http.ResponseWriter, *http.Request)
	LeadFormGet(http.ResponseWriter, *http.Request)
	LeadFormTestCreate(http.ResponseWriter, *http.Request)
}
// LeadsExportAPIRouter defines the required methods for binding the api requests to a responses for the LeadsExportAPI
// The LeadsExportAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LeadsExportAPIServicer to perform the required actions, then write the service results to the http response.
type LeadsExportAPIRouter interface { 
	LeadsExportCreate(http.ResponseWriter, *http.Request)
	LeadsExportGet(http.ResponseWriter, *http.Request)
}
// MediaAPIRouter defines the required methods for binding the api requests to a responses for the MediaAPI
// The MediaAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MediaAPIServicer to perform the required actions, then write the service results to the http response.
type MediaAPIRouter interface { 
	MediaList(http.ResponseWriter, *http.Request)
	MediaCreate(http.ResponseWriter, *http.Request)
	MediaGet(http.ResponseWriter, *http.Request)
}
// OauthAPIRouter defines the required methods for binding the api requests to a responses for the OauthAPI
// The OauthAPIRouter implementation should parse necessary information from the http request,
// pass the data to a OauthAPIServicer to perform the required actions, then write the service results to the http response.
type OauthAPIRouter interface { 
	OauthToken(http.ResponseWriter, *http.Request)
}
// OrderLinesAPIRouter defines the required methods for binding the api requests to a responses for the OrderLinesAPI
// The OrderLinesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a OrderLinesAPIServicer to perform the required actions, then write the service results to the http response.
type OrderLinesAPIRouter interface { 
	OrderLinesList(http.ResponseWriter, *http.Request)
	OrderLinesGet(http.ResponseWriter, *http.Request)
}
// PinsAPIRouter defines the required methods for binding the api requests to a responses for the PinsAPI
// The PinsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PinsAPIServicer to perform the required actions, then write the service results to the http response.
type PinsAPIRouter interface { 
	PinsList(http.ResponseWriter, *http.Request)
	PinsCreate(http.ResponseWriter, *http.Request)
	PinsGet(http.ResponseWriter, *http.Request)
	PinsDelete(http.ResponseWriter, *http.Request)
	PinsUpdate(http.ResponseWriter, *http.Request)
	PinsAnalytics(http.ResponseWriter, *http.Request)
	MultiPinsAnalytics(http.ResponseWriter, *http.Request)
	PinsSave(http.ResponseWriter, *http.Request)
}
// ProductGroupPromotionsAPIRouter defines the required methods for binding the api requests to a responses for the ProductGroupPromotionsAPI
// The ProductGroupPromotionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProductGroupPromotionsAPIServicer to perform the required actions, then write the service results to the http response.
type ProductGroupPromotionsAPIRouter interface { 
	ProductGroupPromotionsList(http.ResponseWriter, *http.Request)
	ProductGroupPromotionsCreate(http.ResponseWriter, *http.Request)
	ProductGroupPromotionsUpdate(http.ResponseWriter, *http.Request)
	ProductGroupPromotionsGet(http.ResponseWriter, *http.Request)
	ProductGroupsAnalytics(http.ResponseWriter, *http.Request)
}
// ResourcesAPIRouter defines the required methods for binding the api requests to a responses for the ResourcesAPI
// The ResourcesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ResourcesAPIServicer to perform the required actions, then write the service results to the http response.
type ResourcesAPIRouter interface { 
	AdAccountCountriesGet(http.ResponseWriter, *http.Request)
	DeliveryMetricsGet(http.ResponseWriter, *http.Request)
	LeadFormQuestionsGet(http.ResponseWriter, *http.Request)
	MetricsReadyStateGet(http.ResponseWriter, *http.Request)
	InterestTargetingOptionsGet(http.ResponseWriter, *http.Request)
	TargetingOptionsGet(http.ResponseWriter, *http.Request)
}
// SearchAPIRouter defines the required methods for binding the api requests to a responses for the SearchAPI
// The SearchAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SearchAPIServicer to perform the required actions, then write the service results to the http response.
type SearchAPIRouter interface { 
	SearchUserBoardsGet(http.ResponseWriter, *http.Request)
	SearchUserPinsList(http.ResponseWriter, *http.Request)
	SearchPartnerPins(http.ResponseWriter, *http.Request)
}
// TargetingTemplateAPIRouter defines the required methods for binding the api requests to a responses for the TargetingTemplateAPI
// The TargetingTemplateAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TargetingTemplateAPIServicer to perform the required actions, then write the service results to the http response.
type TargetingTemplateAPIRouter interface { 
	TargetingTemplateList(http.ResponseWriter, *http.Request)
	TargetingTemplateCreate(http.ResponseWriter, *http.Request)
	TargetingTemplateUpdate(http.ResponseWriter, *http.Request)
}
// TermsAPIRouter defines the required methods for binding the api requests to a responses for the TermsAPI
// The TermsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TermsAPIServicer to perform the required actions, then write the service results to the http response.
type TermsAPIRouter interface { 
	TermsRelatedList(http.ResponseWriter, *http.Request)
	TermsSuggestedList(http.ResponseWriter, *http.Request)
}
// TermsOfServiceAPIRouter defines the required methods for binding the api requests to a responses for the TermsOfServiceAPI
// The TermsOfServiceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TermsOfServiceAPIServicer to perform the required actions, then write the service results to the http response.
type TermsOfServiceAPIRouter interface { 
	TermsOfServiceGet(http.ResponseWriter, *http.Request)
}
// UserAccountAPIRouter defines the required methods for binding the api requests to a responses for the UserAccountAPI
// The UserAccountAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserAccountAPIServicer to perform the required actions, then write the service results to the http response.
type UserAccountAPIRouter interface { 
	UserAccountGet(http.ResponseWriter, *http.Request)
	UserAccountAnalytics(http.ResponseWriter, *http.Request)
	UserAccountAnalyticsTopPins(http.ResponseWriter, *http.Request)
	UserAccountAnalyticsTopVideoPins(http.ResponseWriter, *http.Request)
	LinkedBusinessAccountsGet(http.ResponseWriter, *http.Request)
	FollowersList(http.ResponseWriter, *http.Request)
	UserFollowingGet(http.ResponseWriter, *http.Request)
	BoardsUserFollowsList(http.ResponseWriter, *http.Request)
	FollowUserUpdate(http.ResponseWriter, *http.Request)
	UserWebsitesGet(http.ResponseWriter, *http.Request)
	VerifyWebsiteUpdate(http.ResponseWriter, *http.Request)
	UnverifyWebsiteDelete(http.ResponseWriter, *http.Request)
	WebsiteVerificationGet(http.ResponseWriter, *http.Request)
	UserAccountFollowedInterests(http.ResponseWriter, *http.Request)
}


// AdAccountsAPIServicer defines the api actions for the AdAccountsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AdAccountsAPIServicer interface { 
	AdAccountsList(context.Context, string, int32, bool) (ImplResponse, error)
	AdAccountsCreate(context.Context, AdAccountCreateRequest) (ImplResponse, error)
	AdAccountsGet(context.Context, string) (ImplResponse, error)
	AdAccountAnalytics(context.Context, string, string, string, []string, Granularity, int32, int32, int32, string) (ImplResponse, error)
	AnalyticsGetMmmReport(context.Context, string, string) (ImplResponse, error)
	AnalyticsCreateMmmReport(context.Context, string, CreateMmmReportRequest) (ImplResponse, error)
	AnalyticsGetReport(context.Context, string, string) (ImplResponse, error)
	AnalyticsCreateReport(context.Context, string, AdsAnalyticsCreateAsyncRequest) (ImplResponse, error)
	SandboxDelete(context.Context, string) (ImplResponse, error)
	AdAccountTargetingAnalyticsGet(context.Context, string, string, string, []AdsAnalyticsTargetingType, []string, Granularity, int32, int32, int32, string, ConversionReportAttributionType) (ImplResponse, error)
	TemplatesList(context.Context, string, int32, string, string) (ImplResponse, error)
	AnalyticsCreateTemplateReport(context.Context, string, string, string, string, Granularity) (ImplResponse, error)
}


// AdGroupsAPIServicer defines the api actions for the AdGroupsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AdGroupsAPIServicer interface { 
	AdGroupsList(context.Context, string, []string, []string, []string, int32, string, string, bool) (ImplResponse, error)
	AdGroupsCreate(context.Context, string, []AdGroupCreateRequest) (ImplResponse, error)
	AdGroupsUpdate(context.Context, string, []AdGroupUpdateRequest) (ImplResponse, error)
	AdGroupsAnalytics(context.Context, string, string, string, []string, []string, Granularity, int32, int32, int32, string) (ImplResponse, error)
	AdGroupsTargetingAnalyticsGet(context.Context, string, []string, string, string, []AdsAnalyticsTargetingType, []string, Granularity, int32, int32, int32, string, ConversionReportAttributionType) (ImplResponse, error)
	AdGroupsAudienceSizing(context.Context, string, AdGroupAudienceSizingRequest) (ImplResponse, error)
	AdGroupsGet(context.Context, string, string) (ImplResponse, error)
	AdGroupsBidFloorGet(context.Context, string, BidFloorRequest) (ImplResponse, error)
}


// AdsAPIServicer defines the api actions for the AdsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AdsAPIServicer interface { 
	AdPreviewsCreate(context.Context, string, AdPreviewRequest) (ImplResponse, error)
	AdsList(context.Context, string, []string, []string, []string, []string, int32, string, string) (ImplResponse, error)
	AdsCreate(context.Context, string, []AdCreateRequest) (ImplResponse, error)
	AdsUpdate(context.Context, string, []AdUpdateRequest) (ImplResponse, error)
	AdsAnalytics(context.Context, string, string, string, []string, Granularity, []string, int32, int32, int32, string, []string, []string) (ImplResponse, error)
	AdTargetingAnalyticsGet(context.Context, string, []string, string, string, []AdsAnalyticsAdTargetingType, []string, Granularity, int32, int32, int32, string, ConversionReportAttributionType) (ImplResponse, error)
	AdsGet(context.Context, string, string) (ImplResponse, error)
}


// AdvancedAuctionAPIServicer defines the api actions for the AdvancedAuctionAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AdvancedAuctionAPIServicer interface { 
	AdvancedAuctionItemsGetPost(context.Context, AdvancedAuctionItemsGetRequest, string) (ImplResponse, error)
	AdvancedAuctionItemsSubmitPost(context.Context, AdvancedAuctionItemsSubmitRequest, string) (ImplResponse, error)
}


// AudienceInsightsAPIServicer defines the api actions for the AudienceInsightsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AudienceInsightsAPIServicer interface { 
	AudienceInsightsGet(context.Context, string, AudienceInsightType) (ImplResponse, error)
	AudienceInsightsScopeAndTypeGet(context.Context, string) (ImplResponse, error)
}


// AudienceSharingAPIServicer defines the api actions for the AudienceSharingAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AudienceSharingAPIServicer interface { 
	AdAccountsAudiencesSharedAccountsList(context.Context, string, string, AudienceAccountType, int32, string) (ImplResponse, error)
	UpdateAdAccountToAdAccountSharedAudience(context.Context, string, SharedAudience) (ImplResponse, error)
	UpdateAdAccountToBusinessSharedAudience(context.Context, string, BusinessSharedAudience) (ImplResponse, error)
	SharedAudiencesForBusinessList(context.Context, string, string, string, int32) (ImplResponse, error)
	BusinessAccountAudiencesSharedAccountsList(context.Context, string, string, AudienceAccountType, int32, string) (ImplResponse, error)
	UpdateBusinessToAdAccountSharedAudience(context.Context, string, SharedAudience) (ImplResponse, error)
	UpdateBusinessToBusinessSharedAudience(context.Context, string, BusinessSharedAudience) (ImplResponse, error)
}


// AudiencesAPIServicer defines the api actions for the AudiencesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AudiencesAPIServicer interface { 
	AudiencesList(context.Context, string, string, string, int32, string) (ImplResponse, error)
	AudiencesCreate(context.Context, string, AudienceCreateRequest) (ImplResponse, error)
	AudiencesGet(context.Context, string, string) (ImplResponse, error)
	AudiencesUpdate(context.Context, string, string, AudienceUpdateRequest) (ImplResponse, error)
	AudiencesCreateCustom(context.Context, string, AudienceCreateCustomRequest) (ImplResponse, error)
}


// BillingAPIServicer defines the api actions for the BillingAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BillingAPIServicer interface { 
	AdsCreditsDiscountsGet(context.Context, string, string, int32) (ImplResponse, error)
	AdsCreditRedeem(context.Context, string, AdsCreditRedeemRequest) (ImplResponse, error)
	BillingProfilesGet(context.Context, string, bool, string, int32) (ImplResponse, error)
	SsioAccountsGet(context.Context, string) (ImplResponse, error)
	SsioInsertionOrderCreate(context.Context, string, SsioCreateInsertionOrderRequest) (ImplResponse, error)
	SsioInsertionOrderEdit(context.Context, string, SsioEditInsertionOrderRequest) (ImplResponse, error)
	SsioInsertionOrdersStatusGetByAdAccount(context.Context, string, string, int32) (ImplResponse, error)
	SsioInsertionOrdersStatusGetByPinOrderId(context.Context, string, string) (ImplResponse, error)
	SsioOrderLinesGetByAdAccount(context.Context, string, string, int32, string) (ImplResponse, error)
}


// BoardsAPIServicer defines the api actions for the BoardsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BoardsAPIServicer interface { 
	BoardsList(context.Context, string, string, int32, string) (ImplResponse, error)
	BoardsCreate(context.Context, Board, string) (ImplResponse, error)
	BoardsGet(context.Context, string, string) (ImplResponse, error)
	BoardsDelete(context.Context, string, string) (ImplResponse, error)
	BoardsUpdate(context.Context, string, BoardUpdate, string) (ImplResponse, error)
	BoardsListPins(context.Context, string, string, int32, []string, string, bool) (ImplResponse, error)
	BoardSectionsList(context.Context, string, string, string, int32) (ImplResponse, error)
	BoardSectionsCreate(context.Context, string, BoardSection, string) (ImplResponse, error)
	BoardSectionsDelete(context.Context, string, string, string) (ImplResponse, error)
	BoardSectionsUpdate(context.Context, string, string, BoardSection, string) (ImplResponse, error)
	BoardSectionsListPins(context.Context, string, string, string, string, int32) (ImplResponse, error)
}


// BulkAPIServicer defines the api actions for the BulkAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BulkAPIServicer interface { 
	BulkDownloadCreate(context.Context, string, BulkDownloadRequest) (ImplResponse, error)
	BulkUpsertCreate(context.Context, string, BulkUpsertRequest) (ImplResponse, error)
	BulkRequestGet(context.Context, string, string, bool) (ImplResponse, error)
}


// BusinessAccessAssetsAPIServicer defines the api actions for the BusinessAccessAssetsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BusinessAccessAssetsAPIServicer interface { 
	BusinessAssetMembersGet(context.Context, string, string, string, int32, int32) (ImplResponse, error)
	BusinessAssetPartnersGet(context.Context, string, string, int32, string, int32) (ImplResponse, error)
	BusinessAssetsGet(context.Context, string, []PermissionsWithOwner, string, string, string, int32, string, int32) (ImplResponse, error)
	BusinessMemberAssetsGet(context.Context, string, string, string, int32, string, int32) (ImplResponse, error)
	BusinessMembersAssetAccessDelete(context.Context, string, BusinessMembersAssetAccessDeleteRequest) (ImplResponse, error)
	BusinessMembersAssetAccessUpdate(context.Context, string, UpdateMemberAssetAccessBody) (ImplResponse, error)
	DeletePartnerAssetAccessHandlerImpl(context.Context, string, DeletePartnerAssetAccessBody) (ImplResponse, error)
	UpdatePartnerAssetAccessHandlerImpl(context.Context, string, UpdatePartnerAssetAccessBody) (ImplResponse, error)
	BusinessPartnerAssetAccessGet(context.Context, string, string, PartnerType, string, int32, int32, string) (ImplResponse, error)
	AssetGroupCreate(context.Context, string, CreateAssetGroupBody) (ImplResponse, error)
	AssetGroupDelete(context.Context, string, DeleteAssetGroupBody) (ImplResponse, error)
	AssetGroupUpdate(context.Context, string, UpdateAssetGroupBody) (ImplResponse, error)
}


// BusinessAccessInviteAPIServicer defines the api actions for the BusinessAccessInviteAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BusinessAccessInviteAPIServicer interface { 
	RespondBusinessAccessInvites(context.Context, AuthRespondInvitesBody) (ImplResponse, error)
	CreateAssetInvites(context.Context, string, CreateAssetInvitesRequest) (ImplResponse, error)
	AssetAccessRequestsCreate(context.Context, string, CreateAssetAccessRequestBody) (ImplResponse, error)
	GetInvites(context.Context, string, bool, []string, InviteType, string, int32) (ImplResponse, error)
	CreateMembershipOrPartnershipInvites(context.Context, string, CreateMembershipOrPartnershipInvitesBody) (ImplResponse, error)
	CancelInvitesOrRequests(context.Context, string, CancelInvitesBody) (ImplResponse, error)
}


// BusinessAccessRelationshipsAPIServicer defines the api actions for the BusinessAccessRelationshipsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type BusinessAccessRelationshipsAPIServicer interface { 
	GetBusinessEmployers(context.Context, int32, string) (ImplResponse, error)
	GetBusinessMembers(context.Context, string, bool, []MemberBusinessRole, string, int32, string, int32) (ImplResponse, error)
	DeleteBusinessMembership(context.Context, string, MembersToDeleteBody) (ImplResponse, error)
	UpdateBusinessMemberships(context.Context, string, []UpdateMemberBusinessRoleBody) (ImplResponse, error)
	GetBusinessPartners(context.Context, string, bool, PartnerType, string, int32, int32, string) (ImplResponse, error)
	DeleteBusinessPartners(context.Context, string, DeletePartnersRequest) (ImplResponse, error)
}


// CampaignsAPIServicer defines the api actions for the CampaignsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CampaignsAPIServicer interface { 
	CampaignsList(context.Context, string, []string, []string, int32, string, string) (ImplResponse, error)
	CampaignsCreate(context.Context, string, []CampaignCreateRequest) (ImplResponse, error)
	CampaignsUpdate(context.Context, string, []CampaignUpdateRequest) (ImplResponse, error)
	CampaignsAnalytics(context.Context, string, string, string, []string, []string, Granularity, int32, int32, int32, string) (ImplResponse, error)
	CampaignTargetingAnalyticsGet(context.Context, string, []string, string, string, []AdsAnalyticsCampaignTargetingType, []string, Granularity, int32, int32, int32, string, ConversionReportAttributionType) (ImplResponse, error)
	CampaignsGet(context.Context, string, string) (ImplResponse, error)
}


// CatalogsAPIServicer defines the api actions for the CatalogsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CatalogsAPIServicer interface { 
	CatalogsList(context.Context, string, int32, string) (ImplResponse, error)
	CatalogsCreate(context.Context, CatalogsCreateRequest, string) (ImplResponse, error)
	FeedsList(context.Context, string, int32, string, string) (ImplResponse, error)
	FeedsCreate(context.Context, FeedsCreateRequest, string) (ImplResponse, error)
	FeedsGet(context.Context, string, string) (ImplResponse, error)
	FeedsDelete(context.Context, string, string) (ImplResponse, error)
	FeedsUpdate(context.Context, string, FeedsUpdateRequest, string) (ImplResponse, error)
	FeedsIngest(context.Context, string, string) (ImplResponse, error)
	FeedProcessingResultsList(context.Context, string, string, int32, string) (ImplResponse, error)
	ItemsIssuesList(context.Context, string, string, int32, []int32, CatalogsItemValidationIssue, string) (ImplResponse, error)
	// Deprecated
	ItemsGet(context.Context, string, string, string, []string, CatalogsItemsFilters) (ImplResponse, error)
	ItemsPost(context.Context, CatalogsItemsRequest, string) (ImplResponse, error)
	ItemsBatchPost(context.Context, ItemsBatchPostRequest, string) (ImplResponse, error)
	ItemsBatchGet(context.Context, string, string) (ImplResponse, error)
	CatalogsProductGroupsCreateMany(context.Context, []MultipleProductGroupsInner, string) (ImplResponse, error)
	CatalogsProductGroupsDeleteMany(context.Context, []int32, string) (ImplResponse, error)
	CatalogsProductGroupsList(context.Context, []int32, string, string, string, int32, string) (ImplResponse, error)
	CatalogsProductGroupsCreate(context.Context, MultipleProductGroupsInner, string) (ImplResponse, error)
	CatalogsProductGroupsGet(context.Context, string, string) (ImplResponse, error)
	CatalogsProductGroupsDelete(context.Context, string, string) (ImplResponse, error)
	CatalogsProductGroupsUpdate(context.Context, string, CatalogsProductGroupsUpdateRequest, string) (ImplResponse, error)
	CatalogsProductGroupsProductCountsGet(context.Context, string, string) (ImplResponse, error)
	CatalogsProductGroupPinsList(context.Context, string, string, int32, string, bool) (ImplResponse, error)
	ProductsByProductGroupFilterList(context.Context, CatalogsListProductsByFilterRequest, string, int32, string, bool) (ImplResponse, error)
	ReportsGet(context.Context, string, string) (ImplResponse, error)
	ReportsCreate(context.Context, CatalogsReportParameters, string) (ImplResponse, error)
	ReportsStats(context.Context, CatalogsReportParameters, string, int32, string) (ImplResponse, error)
}


// ConversionEventsAPIServicer defines the api actions for the ConversionEventsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConversionEventsAPIServicer interface { 
	EventsCreate(context.Context, string, ConversionEvents, bool) (ImplResponse, error)
}


// ConversionTagsAPIServicer defines the api actions for the ConversionTagsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConversionTagsAPIServicer interface { 
	ConversionTagsList(context.Context, string, bool) (ImplResponse, error)
	ConversionTagsCreate(context.Context, string, ConversionTagCreate) (ImplResponse, error)
	OcpmEligibleConversionTagsGet(context.Context, string) (ImplResponse, error)
	PageVisitConversionTagsGet(context.Context, string, int32, string, string) (ImplResponse, error)
	ConversionTagsGet(context.Context, string, string) (ImplResponse, error)
}


// CustomerListsAPIServicer defines the api actions for the CustomerListsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CustomerListsAPIServicer interface { 
	CustomerListsList(context.Context, string, int32, string, string) (ImplResponse, error)
	CustomerListsCreate(context.Context, string, CustomerListRequest) (ImplResponse, error)
	CustomerListsGet(context.Context, string, string) (ImplResponse, error)
	CustomerListsUpdate(context.Context, string, string, CustomerListUpdateRequest) (ImplResponse, error)
}


// IntegrationsAPIServicer defines the api actions for the IntegrationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IntegrationsAPIServicer interface { 
	IntegrationsCommercePost(context.Context, IntegrationRequest) (ImplResponse, error)
	IntegrationsCommerceGet(context.Context, string) (ImplResponse, error)
	IntegrationsCommerceDel(context.Context, string) (ImplResponse, error)
	IntegrationsCommercePatch(context.Context, string, IntegrationRequestPatch) (ImplResponse, error)
	IntegrationsLogsPost(context.Context, IntegrationLogsRequest) (ImplResponse, error)
	IntegrationsGetList(context.Context, string, int32) (ImplResponse, error)
	IntegrationsGetById(context.Context, string) (ImplResponse, error)
}


// KeywordsAPIServicer defines the api actions for the KeywordsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type KeywordsAPIServicer interface { 
	KeywordsGet(context.Context, string, string, string, []MatchType, int32, string) (ImplResponse, error)
	KeywordsCreate(context.Context, string, KeywordsRequest) (ImplResponse, error)
	KeywordsUpdate(context.Context, string, KeywordUpdateBody) (ImplResponse, error)
	CountryKeywordsMetricsGet(context.Context, string, string, []string) (ImplResponse, error)
	TrendingKeywordsList(context.Context, TrendsSupportedRegion, TrendType, []string, []string, []string, []string, bool, int32) (ImplResponse, error)
}


// LeadAdsAPIServicer defines the api actions for the LeadAdsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LeadAdsAPIServicer interface { 
	AdAccountsSubscriptionsGetList(context.Context, string, int32, string) (ImplResponse, error)
	AdAccountsSubscriptionsPost(context.Context, string, AdAccountCreateSubscriptionRequest) (ImplResponse, error)
	AdAccountsSubscriptionsGetById(context.Context, string, string) (ImplResponse, error)
	AdAccountsSubscriptionsDelById(context.Context, string, string) (ImplResponse, error)
}


// LeadFormsAPIServicer defines the api actions for the LeadFormsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LeadFormsAPIServicer interface { 
	LeadFormsList(context.Context, string, int32, string, string) (ImplResponse, error)
	LeadFormsCreate(context.Context, string, []LeadFormCreateRequest) (ImplResponse, error)
	LeadFormsUpdate(context.Context, string, []LeadFormUpdateRequest) (ImplResponse, error)
	LeadFormGet(context.Context, string, string) (ImplResponse, error)
	LeadFormTestCreate(context.Context, string, string, LeadFormTestRequest) (ImplResponse, error)
}


// LeadsExportAPIServicer defines the api actions for the LeadsExportAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LeadsExportAPIServicer interface { 
	LeadsExportCreate(context.Context, string, LeadsExportCreateRequest) (ImplResponse, error)
	LeadsExportGet(context.Context, string, string) (ImplResponse, error)
}


// MediaAPIServicer defines the api actions for the MediaAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MediaAPIServicer interface { 
	MediaList(context.Context, string, int32) (ImplResponse, error)
	MediaCreate(context.Context, MediaUploadRequest) (ImplResponse, error)
	MediaGet(context.Context, string) (ImplResponse, error)
}


// OauthAPIServicer defines the api actions for the OauthAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OauthAPIServicer interface { 
	OauthToken(context.Context, string) (ImplResponse, error)
}


// OrderLinesAPIServicer defines the api actions for the OrderLinesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OrderLinesAPIServicer interface { 
	OrderLinesList(context.Context, string, int32, string, string) (ImplResponse, error)
	OrderLinesGet(context.Context, string, string) (ImplResponse, error)
}


// PinsAPIServicer defines the api actions for the PinsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PinsAPIServicer interface { 
	PinsList(context.Context, string, int32, string, bool, string, []string, string, bool) (ImplResponse, error)
	PinsCreate(context.Context, *PinCreate, string) (ImplResponse, error)
	PinsGet(context.Context, string, bool, string) (ImplResponse, error)
	PinsDelete(context.Context, string, string) (ImplResponse, error)
	PinsUpdate(context.Context, string, *PinUpdate, string) (ImplResponse, error)
	PinsAnalytics(context.Context, string, string, string, []PinsAnalyticsMetricTypesParameterInner, string, string, string) (ImplResponse, error)
	MultiPinsAnalytics(context.Context, []string, string, string, []PinsAnalyticsMetricTypesParameterInner, string, string) (ImplResponse, error)
	PinsSave(context.Context, string, PinsSaveRequest, string) (ImplResponse, error)
}


// ProductGroupPromotionsAPIServicer defines the api actions for the ProductGroupPromotionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProductGroupPromotionsAPIServicer interface { 
	ProductGroupPromotionsList(context.Context, string, []string, []string, string, int32, string, string) (ImplResponse, error)
	ProductGroupPromotionsCreate(context.Context, string, ProductGroupPromotionCreateRequest) (ImplResponse, error)
	ProductGroupPromotionsUpdate(context.Context, string, ProductGroupPromotionUpdateRequest) (ImplResponse, error)
	ProductGroupPromotionsGet(context.Context, string, string) (ImplResponse, error)
	ProductGroupsAnalytics(context.Context, string, string, string, []string, []string, Granularity, int32, int32, int32, string) (ImplResponse, error)
}


// ResourcesAPIServicer defines the api actions for the ResourcesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ResourcesAPIServicer interface { 
	AdAccountCountriesGet(context.Context) (ImplResponse, error)
	DeliveryMetricsGet(context.Context, string) (ImplResponse, error)
	LeadFormQuestionsGet(context.Context) (ImplResponse, error)
	MetricsReadyStateGet(context.Context, string) (ImplResponse, error)
	InterestTargetingOptionsGet(context.Context, string) (ImplResponse, error)
	TargetingOptionsGet(context.Context, string, string, string, string, string) (ImplResponse, error)
}


// SearchAPIServicer defines the api actions for the SearchAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SearchAPIServicer interface { 
	SearchUserBoardsGet(context.Context, string, string, int32, string) (ImplResponse, error)
	SearchUserPinsList(context.Context, string, string, string) (ImplResponse, error)
	SearchPartnerPins(context.Context, string, string, string, string, int32) (ImplResponse, error)
}


// TargetingTemplateAPIServicer defines the api actions for the TargetingTemplateAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TargetingTemplateAPIServicer interface { 
	TargetingTemplateList(context.Context, string, string, bool, string, int32, string) (ImplResponse, error)
	TargetingTemplateCreate(context.Context, string, TargetingTemplateCreate) (ImplResponse, error)
	TargetingTemplateUpdate(context.Context, string, TargetingTemplateUpdateRequest) (ImplResponse, error)
}


// TermsAPIServicer defines the api actions for the TermsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TermsAPIServicer interface { 
	TermsRelatedList(context.Context, []string) (ImplResponse, error)
	TermsSuggestedList(context.Context, string, int32) (ImplResponse, error)
}


// TermsOfServiceAPIServicer defines the api actions for the TermsOfServiceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TermsOfServiceAPIServicer interface { 
	TermsOfServiceGet(context.Context, string, bool, string) (ImplResponse, error)
}


// UserAccountAPIServicer defines the api actions for the UserAccountAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserAccountAPIServicer interface { 
	UserAccountGet(context.Context, string) (ImplResponse, error)
	UserAccountAnalytics(context.Context, string, string, string, string, string, string, string, []string, string, string) (ImplResponse, error)
	UserAccountAnalyticsTopPins(context.Context, string, string, string, string, string, string, string, string, []string, int32, int32, string) (ImplResponse, error)
	UserAccountAnalyticsTopVideoPins(context.Context, string, string, string, string, string, string, string, string, []string, int32, int32, string) (ImplResponse, error)
	LinkedBusinessAccountsGet(context.Context) (ImplResponse, error)
	FollowersList(context.Context, string, int32) (ImplResponse, error)
	UserFollowingGet(context.Context, string, int32, UserFollowingFeedType, bool, string) (ImplResponse, error)
	BoardsUserFollowsList(context.Context, string, int32, bool, string) (ImplResponse, error)
	FollowUserUpdate(context.Context, string, FollowUserRequest) (ImplResponse, error)
	UserWebsitesGet(context.Context, string, int32) (ImplResponse, error)
	VerifyWebsiteUpdate(context.Context, UserWebsiteVerifyRequest, string) (ImplResponse, error)
	UnverifyWebsiteDelete(context.Context, string) (ImplResponse, error)
	WebsiteVerificationGet(context.Context, string) (ImplResponse, error)
	UserAccountFollowedInterests(context.Context, string, string, int32) (ImplResponse, error)
}
