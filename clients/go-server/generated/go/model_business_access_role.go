// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// BusinessAccessRole : Permission role for business access.
type BusinessAccessRole string

// List of BusinessAccessRole
const (
	OWNER BusinessAccessRole = "OWNER"
	ADMIN BusinessAccessRole = "ADMIN"
	ANALYST BusinessAccessRole = "ANALYST"
	SOS_READER BusinessAccessRole = "SOS_READER"
	FINANCE_MANAGER BusinessAccessRole = "FINANCE_MANAGER"
	AUDIENCE_MANAGER BusinessAccessRole = "AUDIENCE_MANAGER"
	CAMPAIGN_MANAGER BusinessAccessRole = "CAMPAIGN_MANAGER"
	CATALOGS_MANAGER BusinessAccessRole = "CATALOGS_MANAGER"
	RESTRICTED_OWNER BusinessAccessRole = "RESTRICTED_OWNER"
	PROFILE_MANAGER BusinessAccessRole = "PROFILE_MANAGER"
	PROFILE_PUBLISHER BusinessAccessRole = "PROFILE_PUBLISHER"
	RESOURCE_PINNER_LIST_OWNER BusinessAccessRole = "RESOURCE_PINNER_LIST_OWNER"
	RESOURCE_PINNER_LIST_READER BusinessAccessRole = "RESOURCE_PINNER_LIST_READER"
	BIZ_PINNER_LIST_SHARER BusinessAccessRole = "BIZ_PINNER_LIST_SHARER"
	RESOURCE_CONVERSION_TAGS_READER BusinessAccessRole = "RESOURCE_CONVERSION_TAGS_READER"
)

// AllowedBusinessAccessRoleEnumValues is all the allowed values of BusinessAccessRole enum
var AllowedBusinessAccessRoleEnumValues = []BusinessAccessRole{
	"OWNER",
	"ADMIN",
	"ANALYST",
	"SOS_READER",
	"FINANCE_MANAGER",
	"AUDIENCE_MANAGER",
	"CAMPAIGN_MANAGER",
	"CATALOGS_MANAGER",
	"RESTRICTED_OWNER",
	"PROFILE_MANAGER",
	"PROFILE_PUBLISHER",
	"RESOURCE_PINNER_LIST_OWNER",
	"RESOURCE_PINNER_LIST_READER",
	"BIZ_PINNER_LIST_SHARER",
	"RESOURCE_CONVERSION_TAGS_READER",
}

// validBusinessAccessRoleEnumValue provides a map of BusinessAccessRoles for fast verification of use input
var validBusinessAccessRoleEnumValues = map[BusinessAccessRole]struct{}{
	"OWNER": {},
	"ADMIN": {},
	"ANALYST": {},
	"SOS_READER": {},
	"FINANCE_MANAGER": {},
	"AUDIENCE_MANAGER": {},
	"CAMPAIGN_MANAGER": {},
	"CATALOGS_MANAGER": {},
	"RESTRICTED_OWNER": {},
	"PROFILE_MANAGER": {},
	"PROFILE_PUBLISHER": {},
	"RESOURCE_PINNER_LIST_OWNER": {},
	"RESOURCE_PINNER_LIST_READER": {},
	"BIZ_PINNER_LIST_SHARER": {},
	"RESOURCE_CONVERSION_TAGS_READER": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BusinessAccessRole) IsValid() bool {
	_, ok := validBusinessAccessRoleEnumValues[v]
	return ok
}

// NewBusinessAccessRoleFromValue returns a pointer to a valid BusinessAccessRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBusinessAccessRoleFromValue(v string) (BusinessAccessRole, error) {
	ev := BusinessAccessRole(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for BusinessAccessRole: valid values are %v", v, AllowedBusinessAccessRoleEnumValues)
}



// AssertBusinessAccessRoleRequired checks if the required fields are not zero-ed
func AssertBusinessAccessRoleRequired(obj BusinessAccessRole) error {
	return nil
}

// AssertBusinessAccessRoleConstraints checks if the values respects the defined constraints
func AssertBusinessAccessRoleConstraints(obj BusinessAccessRole) error {
	return nil
}
