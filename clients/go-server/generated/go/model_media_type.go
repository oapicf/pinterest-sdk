// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)



type MediaType string

// List of MediaType
const (
	IMAGE MediaType = "IMAGE"
	VIDEO MediaType = "VIDEO"
)

// AllowedMediaTypeEnumValues is all the allowed values of MediaType enum
var AllowedMediaTypeEnumValues = []MediaType{
	"IMAGE",
	"VIDEO",
}

// validMediaTypeEnumValue provides a map of MediaTypes for fast verification of use input
var validMediaTypeEnumValues = map[MediaType]struct{}{
	"IMAGE": {},
	"VIDEO": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MediaType) IsValid() bool {
	_, ok := validMediaTypeEnumValues[v]
	return ok
}

// NewMediaTypeFromValue returns a pointer to a valid MediaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMediaTypeFromValue(v string) (MediaType, error) {
	ev := MediaType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MediaType: valid values are %v", v, AllowedMediaTypeEnumValues)
}



// AssertMediaTypeRequired checks if the required fields are not zero-ed
func AssertMediaTypeRequired(obj MediaType) error {
	return nil
}

// AssertMediaTypeConstraints checks if the values respects the defined constraints
func AssertMediaTypeConstraints(obj MediaType) error {
	return nil
}
