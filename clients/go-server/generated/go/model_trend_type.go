// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)



type TrendType string

// List of TrendType
const (
	GROWING TrendType = "growing"
	MONTHLY TrendType = "monthly"
	YEARLY TrendType = "yearly"
	SEASONAL TrendType = "seasonal"
)

// AllowedTrendTypeEnumValues is all the allowed values of TrendType enum
var AllowedTrendTypeEnumValues = []TrendType{
	"growing",
	"monthly",
	"yearly",
	"seasonal",
}

// validTrendTypeEnumValue provides a map of TrendTypes for fast verification of use input
var validTrendTypeEnumValues = map[TrendType]struct{}{
	"growing": {},
	"monthly": {},
	"yearly": {},
	"seasonal": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TrendType) IsValid() bool {
	_, ok := validTrendTypeEnumValues[v]
	return ok
}

// NewTrendTypeFromValue returns a pointer to a valid TrendType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTrendTypeFromValue(v string) (TrendType, error) {
	ev := TrendType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for TrendType: valid values are %v", v, AllowedTrendTypeEnumValues)
}



// AssertTrendTypeRequired checks if the required fields are not zero-ed
func AssertTrendTypeRequired(obj TrendType) error {
	return nil
}

// AssertTrendTypeConstraints checks if the values respects the defined constraints
func AssertTrendTypeConstraints(obj TrendType) error {
	return nil
}
