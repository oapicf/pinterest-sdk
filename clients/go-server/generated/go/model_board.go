// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"time"
	"errors"
)



// Board - Board
type Board struct {

	Id string `json:"id,omitempty"`

	// Date and time of board creation.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// Date and time of last board pins modified.
	BoardPinsModifiedAt time.Time `json:"board_pins_modified_at,omitempty"`

	Name string `json:"name"`

	Description *string `json:"description,omitempty"`

	// Count of collaborators on the board.
	CollaboratorCount int32 `json:"collaborator_count,omitempty"`

	// Count of pins on the board.
	PinCount int32 `json:"pin_count,omitempty"`

	// Board follower count.
	FollowerCount int32 `json:"follower_count,omitempty"`

	Media BoardMedia `json:"media,omitempty"`

	Owner BoardOwner `json:"owner,omitempty"`

	// Privacy setting for a board. Learn more about <a href=\"https://help.pinterest.com/en/article/secret-boards\">secret boards</a> and <a href=\"https://help.pinterest.com/en/business/article/protected-boards\">protected boards</a>
	Privacy string `json:"privacy,omitempty"`
}

// AssertBoardRequired checks if the required fields are not zero-ed
func AssertBoardRequired(obj Board) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertBoardMediaRequired(obj.Media); err != nil {
		return err
	}
	if err := AssertBoardOwnerRequired(obj.Owner); err != nil {
		return err
	}
	return nil
}

// AssertBoardConstraints checks if the values respects the defined constraints
func AssertBoardConstraints(obj Board) error {
	if obj.CollaboratorCount < 0 {
		return &ParsingError{Param: "CollaboratorCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.PinCount < 0 {
		return &ParsingError{Param: "PinCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.FollowerCount < 0 {
		return &ParsingError{Param: "FollowerCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertBoardMediaConstraints(obj.Media); err != nil {
		return err
	}
	if err := AssertBoardOwnerConstraints(obj.Owner); err != nil {
		return err
	}
	return nil
}
