// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// InviteType : The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
type InviteType string

// List of InviteType
const (
	MEMBER_INVITE InviteType = "MEMBER_INVITE"
	PARTNER_INVITE InviteType = "PARTNER_INVITE"
	PARTNER_REQUEST InviteType = "PARTNER_REQUEST"
)

// AllowedInviteTypeEnumValues is all the allowed values of InviteType enum
var AllowedInviteTypeEnumValues = []InviteType{
	"MEMBER_INVITE",
	"PARTNER_INVITE",
	"PARTNER_REQUEST",
}

// validInviteTypeEnumValue provides a map of InviteTypes for fast verification of use input
var validInviteTypeEnumValues = map[InviteType]struct{}{
	"MEMBER_INVITE": {},
	"PARTNER_INVITE": {},
	"PARTNER_REQUEST": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v InviteType) IsValid() bool {
	_, ok := validInviteTypeEnumValues[v]
	return ok
}

// NewInviteTypeFromValue returns a pointer to a valid InviteType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInviteTypeFromValue(v string) (InviteType, error) {
	ev := InviteType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for InviteType: valid values are %v", v, AllowedInviteTypeEnumValues)
}



// AssertInviteTypeRequired checks if the required fields are not zero-ed
func AssertInviteTypeRequired(obj InviteType) error {
	return nil
}

// AssertInviteTypeConstraints checks if the values respects the defined constraints
func AssertInviteTypeConstraints(obj InviteType) error {
	return nil
}
