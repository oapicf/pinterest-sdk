// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// ProductAvailabilityType : Default availability for products in a feed.
type ProductAvailabilityType string

// List of ProductAvailabilityType
const (
	IN_STOCK ProductAvailabilityType = "IN_STOCK"
	OUT_OF_STOCK ProductAvailabilityType = "OUT_OF_STOCK"
	PREORDER ProductAvailabilityType = "PREORDER"
)

// AllowedProductAvailabilityTypeEnumValues is all the allowed values of ProductAvailabilityType enum
var AllowedProductAvailabilityTypeEnumValues = []ProductAvailabilityType{
	"IN_STOCK",
	"OUT_OF_STOCK",
	"PREORDER",
}

// validProductAvailabilityTypeEnumValue provides a map of ProductAvailabilityTypes for fast verification of use input
var validProductAvailabilityTypeEnumValues = map[ProductAvailabilityType]struct{}{
	"IN_STOCK": {},
	"OUT_OF_STOCK": {},
	"PREORDER": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProductAvailabilityType) IsValid() bool {
	_, ok := validProductAvailabilityTypeEnumValues[v]
	return ok
}

// NewProductAvailabilityTypeFromValue returns a pointer to a valid ProductAvailabilityType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProductAvailabilityTypeFromValue(v string) (ProductAvailabilityType, error) {
	ev := ProductAvailabilityType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ProductAvailabilityType: valid values are %v", v, AllowedProductAvailabilityTypeEnumValues)
}



// AssertProductAvailabilityTypeRequired checks if the required fields are not zero-ed
func AssertProductAvailabilityTypeRequired(obj ProductAvailabilityType) error {
	return nil
}

// AssertProductAvailabilityTypeConstraints checks if the values respects the defined constraints
func AssertProductAvailabilityTypeConstraints(obj ProductAvailabilityType) error {
	return nil
}
