// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// PacingDeliveryType : Ad group pacing delivery type. With ACCELERATED, an ad group budget is spent as fast as possible. With STANDARD, an ad group budget is spent smoothly over a day. When using CBO, only the STANDARD pacing delivery type is allowed.
type PacingDeliveryType string

// List of PacingDeliveryType
const (
	STANDARD PacingDeliveryType = "STANDARD"
	ACCELERATED PacingDeliveryType = "ACCELERATED"
)

// AllowedPacingDeliveryTypeEnumValues is all the allowed values of PacingDeliveryType enum
var AllowedPacingDeliveryTypeEnumValues = []PacingDeliveryType{
	"STANDARD",
	"ACCELERATED",
}

// validPacingDeliveryTypeEnumValue provides a map of PacingDeliveryTypes for fast verification of use input
var validPacingDeliveryTypeEnumValues = map[PacingDeliveryType]struct{}{
	"STANDARD": {},
	"ACCELERATED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PacingDeliveryType) IsValid() bool {
	_, ok := validPacingDeliveryTypeEnumValues[v]
	return ok
}

// NewPacingDeliveryTypeFromValue returns a pointer to a valid PacingDeliveryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPacingDeliveryTypeFromValue(v string) (PacingDeliveryType, error) {
	ev := PacingDeliveryType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PacingDeliveryType: valid values are %v", v, AllowedPacingDeliveryTypeEnumValues)
}



// AssertPacingDeliveryTypeRequired checks if the required fields are not zero-ed
func AssertPacingDeliveryTypeRequired(obj PacingDeliveryType) error {
	return nil
}

// AssertPacingDeliveryTypeConstraints checks if the values respects the defined constraints
func AssertPacingDeliveryTypeConstraints(obj PacingDeliveryType) error {
	return nil
}
