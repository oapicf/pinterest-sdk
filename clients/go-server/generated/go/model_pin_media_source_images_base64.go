// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"errors"
)



// PinMediaSourceImagesBase64 - Multiple Base64-encoded images media source
type PinMediaSourceImagesBase64 struct {

	SourceType string `json:"source_type,omitempty"`

	// Array with image objects.
	Items []PinMediaSourceImagesBase64ItemsInner `json:"items"`

	Index int32 `json:"index,omitempty"`
}

// AssertPinMediaSourceImagesBase64Required checks if the required fields are not zero-ed
func AssertPinMediaSourceImagesBase64Required(obj PinMediaSourceImagesBase64) error {
	elements := map[string]interface{}{
		"items": obj.Items,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Items {
		if err := AssertPinMediaSourceImagesBase64ItemsInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPinMediaSourceImagesBase64Constraints checks if the values respects the defined constraints
func AssertPinMediaSourceImagesBase64Constraints(obj PinMediaSourceImagesBase64) error {
	for _, el := range obj.Items {
		if err := AssertPinMediaSourceImagesBase64ItemsInnerConstraints(el); err != nil {
			return err
		}
	}
	if obj.Index < 0 {
		return &ParsingError{Param: "Index", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
