// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// UserFollowingFeedType : Specifies the type of followees to be kept when filtering them.
type UserFollowingFeedType string

// List of UserFollowingFeedType
const (
	ALL UserFollowingFeedType = "ALL"
	RANKED UserFollowingFeedType = "RANKED"
	CREATOR_ONLY UserFollowingFeedType = "CREATOR_ONLY"
	RANKED_CREATOR_ONLY UserFollowingFeedType = "RANKED_CREATOR_ONLY"
)

// AllowedUserFollowingFeedTypeEnumValues is all the allowed values of UserFollowingFeedType enum
var AllowedUserFollowingFeedTypeEnumValues = []UserFollowingFeedType{
	"ALL",
	"RANKED",
	"CREATOR_ONLY",
	"RANKED_CREATOR_ONLY",
}

// validUserFollowingFeedTypeEnumValue provides a map of UserFollowingFeedTypes for fast verification of use input
var validUserFollowingFeedTypeEnumValues = map[UserFollowingFeedType]struct{}{
	"ALL": {},
	"RANKED": {},
	"CREATOR_ONLY": {},
	"RANKED_CREATOR_ONLY": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UserFollowingFeedType) IsValid() bool {
	_, ok := validUserFollowingFeedTypeEnumValues[v]
	return ok
}

// NewUserFollowingFeedTypeFromValue returns a pointer to a valid UserFollowingFeedType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUserFollowingFeedTypeFromValue(v string) (UserFollowingFeedType, error) {
	ev := UserFollowingFeedType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for UserFollowingFeedType: valid values are %v", v, AllowedUserFollowingFeedTypeEnumValues)
}



// AssertUserFollowingFeedTypeRequired checks if the required fields are not zero-ed
func AssertUserFollowingFeedTypeRequired(obj UserFollowingFeedType) error {
	return nil
}

// AssertUserFollowingFeedTypeConstraints checks if the values respects the defined constraints
func AssertUserFollowingFeedTypeConstraints(obj UserFollowingFeedType) error {
	return nil
}
