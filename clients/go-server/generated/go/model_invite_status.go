// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// InviteStatus : The current status of the invite.
type InviteStatus string

// List of InviteStatus
const (
	PENDING InviteStatus = "PENDING"
	ACCEPTED InviteStatus = "ACCEPTED"
	DECLINED InviteStatus = "DECLINED"
	CANCELLED InviteStatus = "CANCELLED"
	EXPIRED InviteStatus = "EXPIRED"
)

// AllowedInviteStatusEnumValues is all the allowed values of InviteStatus enum
var AllowedInviteStatusEnumValues = []InviteStatus{
	"PENDING",
	"ACCEPTED",
	"DECLINED",
	"CANCELLED",
	"EXPIRED",
}

// validInviteStatusEnumValue provides a map of InviteStatuss for fast verification of use input
var validInviteStatusEnumValues = map[InviteStatus]struct{}{
	"PENDING": {},
	"ACCEPTED": {},
	"DECLINED": {},
	"CANCELLED": {},
	"EXPIRED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v InviteStatus) IsValid() bool {
	_, ok := validInviteStatusEnumValues[v]
	return ok
}

// NewInviteStatusFromValue returns a pointer to a valid InviteStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInviteStatusFromValue(v string) (InviteStatus, error) {
	ev := InviteStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for InviteStatus: valid values are %v", v, AllowedInviteStatusEnumValues)
}



// AssertInviteStatusRequired checks if the required fields are not zero-ed
func AssertInviteStatusRequired(obj InviteStatus) error {
	return nil
}

// AssertInviteStatusConstraints checks if the values respects the defined constraints
func AssertInviteStatusConstraints(obj InviteStatus) error {
	return nil
}
