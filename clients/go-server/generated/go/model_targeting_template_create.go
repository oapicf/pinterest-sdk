// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi




type TargetingTemplateCreate struct {

	// Name of targeting template.
	Name string `json:"name"`

	// Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
	AutoTargetingEnabled bool `json:"auto_targeting_enabled,omitempty"`

	TargetingAttributes TargetingSpec `json:"targeting_attributes"`

	PlacementGroup PlacementGroupType `json:"placement_group,omitempty"`

	Keywords []TargetingTemplateKeyword `json:"keywords,omitempty"`

	TrackingUrls *TrackingUrls `json:"tracking_urls,omitempty"`
}

// AssertTargetingTemplateCreateRequired checks if the required fields are not zero-ed
func AssertTargetingTemplateCreateRequired(obj TargetingTemplateCreate) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"targeting_attributes": obj.TargetingAttributes,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertTargetingSpecRequired(obj.TargetingAttributes); err != nil {
		return err
	}
	for _, el := range obj.Keywords {
		if err := AssertTargetingTemplateKeywordRequired(el); err != nil {
			return err
		}
	}
	if obj.TrackingUrls != nil {
		if err := AssertTrackingUrlsRequired(*obj.TrackingUrls); err != nil {
			return err
		}
	}
	return nil
}

// AssertTargetingTemplateCreateConstraints checks if the values respects the defined constraints
func AssertTargetingTemplateCreateConstraints(obj TargetingTemplateCreate) error {
	if err := AssertTargetingSpecConstraints(obj.TargetingAttributes); err != nil {
		return err
	}
	for _, el := range obj.Keywords {
		if err := AssertTargetingTemplateKeywordConstraints(el); err != nil {
			return err
		}
	}
    if obj.TrackingUrls != nil {
     	if err := AssertTrackingUrlsConstraints(*obj.TrackingUrls); err != nil {
     		return err
     	}
    }
	return nil
}
