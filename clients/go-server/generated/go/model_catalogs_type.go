// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// CatalogsType : Type of the catalog entity.
type CatalogsType string

// List of CatalogsType
const (
	RETAIL CatalogsType = "RETAIL"
	HOTEL CatalogsType = "HOTEL"
	CREATIVE_ASSETS CatalogsType = "CREATIVE_ASSETS"
)

// AllowedCatalogsTypeEnumValues is all the allowed values of CatalogsType enum
var AllowedCatalogsTypeEnumValues = []CatalogsType{
	"RETAIL",
	"HOTEL",
	"CREATIVE_ASSETS",
}

// validCatalogsTypeEnumValue provides a map of CatalogsTypes for fast verification of use input
var validCatalogsTypeEnumValues = map[CatalogsType]struct{}{
	"RETAIL": {},
	"HOTEL": {},
	"CREATIVE_ASSETS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CatalogsType) IsValid() bool {
	_, ok := validCatalogsTypeEnumValues[v]
	return ok
}

// NewCatalogsTypeFromValue returns a pointer to a valid CatalogsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCatalogsTypeFromValue(v string) (CatalogsType, error) {
	ev := CatalogsType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CatalogsType: valid values are %v", v, AllowedCatalogsTypeEnumValues)
}



// AssertCatalogsTypeRequired checks if the required fields are not zero-ed
func AssertCatalogsTypeRequired(obj CatalogsType) error {
	return nil
}

// AssertCatalogsTypeConstraints checks if the values respects the defined constraints
func AssertCatalogsTypeConstraints(obj CatalogsType) error {
	return nil
}
