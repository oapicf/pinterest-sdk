// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"errors"
)



// CatalogsRetailProductGroupProductCounts - Product counts for a Retail CatalogsProductGroup
type CatalogsRetailProductGroupProductCounts struct {

	CatalogType string `json:"catalog_type"`

	InStock float32 `json:"in_stock"`

	OutOfStock float32 `json:"out_of_stock"`

	Preorder float32 `json:"preorder"`

	Total float32 `json:"total"`

	Videos float32 `json:"videos,omitempty"`
}

// AssertCatalogsRetailProductGroupProductCountsRequired checks if the required fields are not zero-ed
func AssertCatalogsRetailProductGroupProductCountsRequired(obj CatalogsRetailProductGroupProductCounts) error {
	elements := map[string]interface{}{
		"catalog_type": obj.CatalogType,
		"in_stock": obj.InStock,
		"out_of_stock": obj.OutOfStock,
		"preorder": obj.Preorder,
		"total": obj.Total,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertCatalogsRetailProductGroupProductCountsConstraints checks if the values respects the defined constraints
func AssertCatalogsRetailProductGroupProductCountsConstraints(obj CatalogsRetailProductGroupProductCounts) error {
	if obj.InStock < 0 {
		return &ParsingError{Param: "InStock", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.OutOfStock < 0 {
		return &ParsingError{Param: "OutOfStock", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Preorder < 0 {
		return &ParsingError{Param: "Preorder", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Total < 0 {
		return &ParsingError{Param: "Total", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Videos < 0 {
		return &ParsingError{Param: "Videos", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
