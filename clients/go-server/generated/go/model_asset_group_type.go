// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// AssetGroupType : Asset group type
type AssetGroupType string

// List of AssetGroupType
const (
	BRAND AssetGroupType = "BRAND"
	LOCATION_OR_LANGUAGE AssetGroupType = "LOCATION_OR_LANGUAGE"
	PRODUCT_LINE AssetGroupType = "PRODUCT_LINE"
	OTHER AssetGroupType = "OTHER"
)

// AllowedAssetGroupTypeEnumValues is all the allowed values of AssetGroupType enum
var AllowedAssetGroupTypeEnumValues = []AssetGroupType{
	"BRAND",
	"LOCATION_OR_LANGUAGE",
	"PRODUCT_LINE",
	"OTHER",
}

// validAssetGroupTypeEnumValue provides a map of AssetGroupTypes for fast verification of use input
var validAssetGroupTypeEnumValues = map[AssetGroupType]struct{}{
	"BRAND": {},
	"LOCATION_OR_LANGUAGE": {},
	"PRODUCT_LINE": {},
	"OTHER": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AssetGroupType) IsValid() bool {
	_, ok := validAssetGroupTypeEnumValues[v]
	return ok
}

// NewAssetGroupTypeFromValue returns a pointer to a valid AssetGroupType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAssetGroupTypeFromValue(v string) (AssetGroupType, error) {
	ev := AssetGroupType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for AssetGroupType: valid values are %v", v, AllowedAssetGroupTypeEnumValues)
}



// AssertAssetGroupTypeRequired checks if the required fields are not zero-ed
func AssertAssetGroupTypeRequired(obj AssetGroupType) error {
	return nil
}

// AssertAssetGroupTypeConstraints checks if the values respects the defined constraints
func AssertAssetGroupTypeConstraints(obj AssetGroupType) error {
	return nil
}
