// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// BudgetType : Budget type. If DAILY, an ad group's daily spend will not exceed the budget parameter value. If LIFETIME, the end_time parameter is **REQUIRED**, and the ad group spend is spread evenly between the ad group `start_time` and `end_time` range. A CBO campaign automatically generates ad group budgets from its campaign budget to maximize campaign outcome. For CBO campaigns, only \"CBO_ADGROUP\" is allowed. For WEB_SESSIONS campaigns, only \"LIFETIME\" is allowed. For update, only draft ad groups may update budget type.
type BudgetType string

// List of BudgetType
const (
	DAILY BudgetType = "DAILY"
	LIFETIME BudgetType = "LIFETIME"
	CBO_ADGROUP BudgetType = "CBO_ADGROUP"
)

// AllowedBudgetTypeEnumValues is all the allowed values of BudgetType enum
var AllowedBudgetTypeEnumValues = []BudgetType{
	"DAILY",
	"LIFETIME",
	"CBO_ADGROUP",
}

// validBudgetTypeEnumValue provides a map of BudgetTypes for fast verification of use input
var validBudgetTypeEnumValues = map[BudgetType]struct{}{
	"DAILY": {},
	"LIFETIME": {},
	"CBO_ADGROUP": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BudgetType) IsValid() bool {
	_, ok := validBudgetTypeEnumValues[v]
	return ok
}

// NewBudgetTypeFromValue returns a pointer to a valid BudgetType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBudgetTypeFromValue(v string) (BudgetType, error) {
	ev := BudgetType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for BudgetType: valid values are %v", v, AllowedBudgetTypeEnumValues)
}



// AssertBudgetTypeRequired checks if the required fields are not zero-ed
func AssertBudgetTypeRequired(obj BudgetType) error {
	return nil
}

// AssertBudgetTypeConstraints checks if the values respects the defined constraints
func AssertBudgetTypeConstraints(obj BudgetType) error {
	return nil
}
