// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
	"reflect"
)

// TermsAPIService is a service that implements the logic for the TermsAPIServicer
// This service should implement the business logic for every endpoint for the TermsAPI API.
// Include any external packages or services that will be required by this service.
type TermsAPIService struct {
}

// NewTermsAPIService creates a default api service
func NewTermsAPIService() *TermsAPIService {
	return &TermsAPIService{}
}

// TermsRelatedList - List related terms
func (s *TermsAPIService) TermsRelatedList(ctx context.Context, terms []string) (ImplResponse, error) {
	// TODO - update TermsRelatedList with the required logic for this service method.
	// Add api_terms_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RelatedTerms{}) or use other options such as http.Ok ...
	// return Response(200, RelatedTerms{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TermsRelatedList method not implemented")
}

// TermsSuggestedList - List suggested terms
func (s *TermsAPIService) TermsSuggestedList(ctx context.Context, term string, limit int32) (ImplResponse, error) {
	// TODO - update TermsSuggestedList with the required logic for this service method.
	// Add api_terms_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []string{}) or use other options such as http.Ok ...
	// return Response(200, []string{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TermsSuggestedList method not implemented")
}
