// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// BusinessRole : The access level a member/partner has to the business. Values are case-sensitive. <br> - EMPLOYEE: Can only view and access assets you assign to them. They cannot see details about other employees, partners, or other assets. <br> - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. <br> - PARTNER: Can only view and access assets you assign them to/or they assign to you.
type BusinessRole string

// List of BusinessRole
const (
	EMPLOYEE BusinessRole = "EMPLOYEE"
	BIZ_ADMIN BusinessRole = "BIZ_ADMIN"
	PARTNER BusinessRole = "PARTNER"
)

// AllowedBusinessRoleEnumValues is all the allowed values of BusinessRole enum
var AllowedBusinessRoleEnumValues = []BusinessRole{
	"EMPLOYEE",
	"BIZ_ADMIN",
	"PARTNER",
}

// validBusinessRoleEnumValue provides a map of BusinessRoles for fast verification of use input
var validBusinessRoleEnumValues = map[BusinessRole]struct{}{
	"EMPLOYEE": {},
	"BIZ_ADMIN": {},
	"PARTNER": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BusinessRole) IsValid() bool {
	_, ok := validBusinessRoleEnumValues[v]
	return ok
}

// NewBusinessRoleFromValue returns a pointer to a valid BusinessRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBusinessRoleFromValue(v string) (BusinessRole, error) {
	ev := BusinessRole(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for BusinessRole: valid values are %v", v, AllowedBusinessRoleEnumValues)
}



// AssertBusinessRoleRequired checks if the required fields are not zero-ed
func AssertBusinessRoleRequired(obj BusinessRole) error {
	return nil
}

// AssertBusinessRoleConstraints checks if the values respects the defined constraints
func AssertBusinessRoleConstraints(obj BusinessRole) error {
	return nil
}
