// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)



type TargetingSpecAppType string

// List of TargetingSpecAppType
const (
	ANDROID_MOBILE TargetingSpecAppType = "android_mobile"
	ANDROID_TABLET TargetingSpecAppType = "android_tablet"
	IPAD TargetingSpecAppType = "ipad"
	IPHONE TargetingSpecAppType = "iphone"
	WEB TargetingSpecAppType = "web"
	WEB_MOBILE TargetingSpecAppType = "web_mobile"
)

// AllowedTargetingSpecAppTypeEnumValues is all the allowed values of TargetingSpecAppType enum
var AllowedTargetingSpecAppTypeEnumValues = []TargetingSpecAppType{
	"android_mobile",
	"android_tablet",
	"ipad",
	"iphone",
	"web",
	"web_mobile",
}

// validTargetingSpecAppTypeEnumValue provides a map of TargetingSpecAppTypes for fast verification of use input
var validTargetingSpecAppTypeEnumValues = map[TargetingSpecAppType]struct{}{
	"android_mobile": {},
	"android_tablet": {},
	"ipad": {},
	"iphone": {},
	"web": {},
	"web_mobile": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TargetingSpecAppType) IsValid() bool {
	_, ok := validTargetingSpecAppTypeEnumValues[v]
	return ok
}

// NewTargetingSpecAppTypeFromValue returns a pointer to a valid TargetingSpecAppType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTargetingSpecAppTypeFromValue(v string) (TargetingSpecAppType, error) {
	ev := TargetingSpecAppType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for TargetingSpecAppType: valid values are %v", v, AllowedTargetingSpecAppTypeEnumValues)
}



// AssertTargetingSpecAppTypeRequired checks if the required fields are not zero-ed
func AssertTargetingSpecAppTypeRequired(obj TargetingSpecAppType) error {
	return nil
}

// AssertTargetingSpecAppTypeConstraints checks if the values respects the defined constraints
func AssertTargetingSpecAppTypeConstraints(obj TargetingSpecAppType) error {
	return nil
}
