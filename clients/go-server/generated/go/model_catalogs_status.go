// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi


import (
	"fmt"
)


// CatalogsStatus : Status for catalogs entities. Present in catalogs_feed values. When a feed is deleted, the response will inform DELETED as status.
type CatalogsStatus string

// List of CatalogsStatus
const (
	ACTIVE CatalogsStatus = "ACTIVE"
	INACTIVE CatalogsStatus = "INACTIVE"
)

// AllowedCatalogsStatusEnumValues is all the allowed values of CatalogsStatus enum
var AllowedCatalogsStatusEnumValues = []CatalogsStatus{
	"ACTIVE",
	"INACTIVE",
}

// validCatalogsStatusEnumValue provides a map of CatalogsStatuss for fast verification of use input
var validCatalogsStatusEnumValues = map[CatalogsStatus]struct{}{
	"ACTIVE": {},
	"INACTIVE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CatalogsStatus) IsValid() bool {
	_, ok := validCatalogsStatusEnumValues[v]
	return ok
}

// NewCatalogsStatusFromValue returns a pointer to a valid CatalogsStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCatalogsStatusFromValue(v string) (CatalogsStatus, error) {
	ev := CatalogsStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CatalogsStatus: valid values are %v", v, AllowedCatalogsStatusEnumValues)
}



// AssertCatalogsStatusRequired checks if the required fields are not zero-ed
func AssertCatalogsStatusRequired(obj CatalogsStatus) error {
	return nil
}

// AssertCatalogsStatusConstraints checks if the values respects the defined constraints
func AssertCatalogsStatusConstraints(obj CatalogsStatus) error {
	return nil
}
