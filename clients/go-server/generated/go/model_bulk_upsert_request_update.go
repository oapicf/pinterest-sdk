// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * API version: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi




// BulkUpsertRequestUpdate - Request for creation of entities in bulk.
type BulkUpsertRequestUpdate struct {

	Campaigns []CampaignUpdateRequest `json:"campaigns,omitempty"`

	AdGroups []AdGroupUpdateRequest `json:"ad_groups,omitempty"`

	Ads []AdUpdateRequest `json:"ads,omitempty"`

	ProductGroups []ProductGroupPromotionUpdateRequest `json:"product_groups,omitempty"`

	Keywords []KeywordUpdate `json:"keywords,omitempty"`
}

// AssertBulkUpsertRequestUpdateRequired checks if the required fields are not zero-ed
func AssertBulkUpsertRequestUpdateRequired(obj BulkUpsertRequestUpdate) error {
	for _, el := range obj.Campaigns {
		if err := AssertCampaignUpdateRequestRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.AdGroups {
		if err := AssertAdGroupUpdateRequestRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Ads {
		if err := AssertAdUpdateRequestRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ProductGroups {
		if err := AssertProductGroupPromotionUpdateRequestRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Keywords {
		if err := AssertKeywordUpdateRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertBulkUpsertRequestUpdateConstraints checks if the values respects the defined constraints
func AssertBulkUpsertRequestUpdateConstraints(obj BulkUpsertRequestUpdate) error {
	for _, el := range obj.Campaigns {
		if err := AssertCampaignUpdateRequestConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.AdGroups {
		if err := AssertAdGroupUpdateRequestConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Ads {
		if err := AssertAdUpdateRequestConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.ProductGroups {
		if err := AssertProductGroupPromotionUpdateRequestConstraints(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Keywords {
		if err := AssertKeywordUpdateConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
