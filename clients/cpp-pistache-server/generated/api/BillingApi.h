/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * BillingApi.h
 *
 * 
 */

#ifndef BillingApi_H_
#define BillingApi_H_


#include "ApiBase.h"

#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>

#include <optional>
#include <utility>

#include "AdsCreditRedeemRequest.h"
#include "AdsCreditRedeemResponse.h"
#include "Ads_credits_discounts_get_200_response.h"
#include "Billing_profiles_get_200_response.h"
#include "Error.h"
#include "SSIOAccountResponse.h"
#include "SSIOCreateInsertionOrderRequest.h"
#include "SSIOCreateInsertionOrderResponse.h"
#include "SSIOEditInsertionOrderRequest.h"
#include "SSIOEditInsertionOrderResponse.h"
#include "SSIOInsertionOrderStatusResponse.h"
#include "Ssio_insertion_orders_status_get_by_ad_account_200_response.h"
#include "Ssio_order_lines_get_by_ad_account_200_response.h"
#include <string>

namespace org::openapitools::server::api
{

class  BillingApi : public ApiBase {
public:
    explicit BillingApi(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~BillingApi() override = default;
    void init() override;

    static const std::string base;

private:
    void setupRoutes();

    void ads_credit_redeem_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ads_credits_discounts_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void billing_profiles_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ssio_accounts_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ssio_insertion_order_create_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ssio_insertion_order_edit_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ssio_insertion_orders_status_get_by_ad_account_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ssio_insertion_orders_status_get_by_pin_order_id_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void ssio_order_lines_get_by_ad_account_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void billing_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    /// <summary>
    /// Helper function to handle unexpected Exceptions during Parameter parsing and validation.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual void handleParsingException(const std::exception& ex, Pistache::Http::ResponseWriter &response) const noexcept;

    /// <summary>
    /// Helper function to handle unexpected Exceptions during Parameter parsing and validation.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual std::pair<Pistache::Http::Code, std::string> handleParsingException(const std::exception& ex) const noexcept;

    /// <summary>
    /// Helper function to handle unexpected Exceptions during processing of the request in handler functions.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual void handleOperationException(const std::exception& ex, Pistache::Http::ResponseWriter &response) const noexcept;

    /// <summary>
    /// Helper function to handle unexpected Exceptions during processing of the request in handler functions.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual std::pair<Pistache::Http::Code, std::string> handleOperationException(const std::exception& ex) const noexcept;

    /// <summary>
    /// Redeem ad credits
    /// </summary>
    /// <remarks>
    /// Redeem ads credit on behalf of the ad account id and apply it towards billing.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="adsCreditRedeemRequest">Redeem ad credits request.</param>
    virtual void ads_credit_redeem(const std::string &adAccountId, const org::openapitools::server::model::AdsCreditRedeemRequest &adsCreditRedeemRequest, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get ads credit discounts
    /// </summary>
    /// <remarks>
    /// Returns the list of discounts applied to the account.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    virtual void ads_credits_discounts_get(const std::string &adAccountId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get billing profiles
    /// </summary>
    /// <remarks>
    /// Get billing profiles in the advertiser account.  &lt;strong&gt;This endpoint might not be available to all apps. &lt;a href&#x3D;&#39;/docs/getting-started/beta-and-advanced-access/&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="isActive">Return active billing profiles, if false return all billing profiles.</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    virtual void billing_profiles_get(const std::string &adAccountId, const std::optional<bool> &isActive, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get Salesforce account details including bill-to information.
    /// </summary>
    /// <remarks>
    /// Get Salesforce account details including bill-to information to be used in insertion orders process for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    virtual void ssio_accounts_get(const std::string &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Create insertion order through SSIO.
    /// </summary>
    /// <remarks>
    /// Create insertion order through SSIO for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="sSIOCreateInsertionOrderRequest">Order line to create.</param>
    virtual void ssio_insertion_order_create(const std::string &adAccountId, const org::openapitools::server::model::SSIOCreateInsertionOrderRequest &sSIOCreateInsertionOrderRequest, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Edit insertion order through SSIO.
    /// </summary>
    /// <remarks>
    /// Edit insertion order through SSIO for &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="sSIOEditInsertionOrderRequest">Order line to create.</param>
    virtual void ssio_insertion_order_edit(const std::string &adAccountId, const org::openapitools::server::model::SSIOEditInsertionOrderRequest &sSIOEditInsertionOrderRequest, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get insertion order status by ad account id.
    /// </summary>
    /// <remarks>
    /// Get insertion order status for account id &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    virtual void ssio_insertion_orders_status_get_by_ad_account(const std::string &adAccountId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get insertion order status by pin order id.
    /// </summary>
    /// <remarks>
    /// Get insertion order status for pin order id &lt;code&gt;pin_order_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="pinOrderId">The pin order id associated with the ssio insertion order</param>
    virtual void ssio_insertion_orders_status_get_by_pin_order_id(const std::string &adAccountId, const std::string &pinOrderId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get Salesforce order lines by ad account id.
    /// </summary>
    /// <remarks>
    /// Get Salesforce order lines for account id &lt;code&gt;ad_account_id&lt;/code&gt;. - The token&#39;s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt;: Admin, Finance, Campaign.
    /// </remarks>
    /// <param name="adAccountId">Unique identifier of an ad account.</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="pinOrderId">The pin order id associated with the ssio insertino order (optional, default to &quot;&quot;)</param>
    virtual void ssio_order_lines_get_by_ad_account(const std::string &adAccountId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &pinOrderId, Pistache::Http::ResponseWriter &response) = 0;

};

} // namespace org::openapitools::server::api

#endif /* BillingApi_H_ */

