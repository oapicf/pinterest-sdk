/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsApi.h
 *
 * 
 */

#ifndef CatalogsApi_H_
#define CatalogsApi_H_


#include "ApiBase.h"

#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>

#include <optional>
#include <utility>

#include "Catalog.h"
#include "CatalogsCreateReportResponse.h"
#include "CatalogsCreateRequest.h"
#include "CatalogsFeed.h"
#include "CatalogsFeedIngestion.h"
#include "CatalogsItemValidationIssue.h"
#include "CatalogsItems.h"
#include "CatalogsItemsBatch.h"
#include "CatalogsItemsFilters.h"
#include "CatalogsItemsRequest.h"
#include "CatalogsListProductsByFilterRequest.h"
#include "CatalogsProductGroupProductCountsVertical.h"
#include "CatalogsReport.h"
#include "CatalogsReportParameters.h"
#include "CatalogsVerticalProductGroup.h"
#include "Catalogs_list_200_response.h"
#include "Catalogs_product_group_pins_list_200_response.h"
#include "Catalogs_product_groups_list_200_response.h"
#include "Catalogs_product_groups_update_request.h"
#include "Error.h"
#include "Feed_processing_results_list_200_response.h"
#include "Feeds_create_request.h"
#include "Feeds_list_200_response.h"
#include "Feeds_update_request.h"
#include "Items_batch_post_request.h"
#include "Items_issues_list_200_response.h"
#include "Multiple_product_groups_inner.h"
#include "Reports_stats_200_response.h"
#include <string>
#include <vector>

namespace org::openapitools::server::api
{

class  CatalogsApi : public ApiBase {
public:
    explicit CatalogsApi(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~CatalogsApi() override = default;
    void init() override;

    static const std::string base;

private:
    void setupRoutes();

    void catalogs_product_group_pins_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_create_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_create_many_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_delete_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_delete_many_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_product_counts_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_product_groups_update_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_create_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feed_processing_results_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feeds_create_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feeds_delete_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feeds_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feeds_ingest_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feeds_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void feeds_update_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void items_batch_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void items_batch_post_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void items_issues_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void items_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void items_post_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void products_by_product_group_filter_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void reports_create_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void reports_get_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void reports_stats_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void catalogs_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    /// <summary>
    /// Helper function to handle unexpected Exceptions during Parameter parsing and validation.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual void handleParsingException(const std::exception& ex, Pistache::Http::ResponseWriter &response) const noexcept;

    /// <summary>
    /// Helper function to handle unexpected Exceptions during Parameter parsing and validation.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual std::pair<Pistache::Http::Code, std::string> handleParsingException(const std::exception& ex) const noexcept;

    /// <summary>
    /// Helper function to handle unexpected Exceptions during processing of the request in handler functions.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual void handleOperationException(const std::exception& ex, Pistache::Http::ResponseWriter &response) const noexcept;

    /// <summary>
    /// Helper function to handle unexpected Exceptions during processing of the request in handler functions.
    /// May be overridden to return custom error formats. This is called inside a catch block.
    /// Important: When overriding, do not call `throw ex;`, but instead use `throw;`.
    /// </summary>
    virtual std::pair<Pistache::Http::Code, std::string> handleOperationException(const std::exception& ex) const noexcept;

    /// <summary>
    /// List products by product group
    /// </summary>
    /// <remarks>
    /// Get a list of product pins for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="productGroupId">Unique identifier of a product group</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    /// <param name="pinMetrics">Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)</param>
    virtual void catalogs_product_group_pins_list(const std::string &productGroupId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &adAccountId, const std::optional<bool> &pinMetrics, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Create product group
    /// </summary>
    /// <remarks>
    /// Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="multipleProductGroupsInner">Request object used to create a single catalogs product groups.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_create(const org::openapitools::server::model::Multiple_product_groups_inner &multipleProductGroupsInner, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Create product groups
    /// </summary>
    /// <remarks>
    /// Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="multipleProductGroupsInner">Request object used to create one or more catalogs product groups.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_create_many(const std::vector<org::openapitools::server::model::Multiple_product_groups_inner> &multipleProductGroupsInner, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Delete product group
    /// </summary>
    /// <remarks>
    /// Delete a product group owned by the \&quot;operation user_account\&quot; from being in use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="productGroupId">Unique identifier of a product group</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_delete(const std::string &productGroupId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Delete product groups
    /// </summary>
    /// <remarks>
    /// Delete product groups owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="id">Comma-separated list of product group ids</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_delete_many(const std::optional<std::vector<int32_t>> &id, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get product group
    /// </summary>
    /// <remarks>
    /// Get a singe product group for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="productGroupId">Unique identifier of a product group</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_get(const std::string &productGroupId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List product groups
    /// </summary>
    /// <remarks>
    /// Get a list of product groups for a given Catalogs Feed Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="id">Comma-separated list of product group ids (optional, default to std::vector&lt;int32_t&gt;())</param>
    /// <param name="feedId">Filter entities for a given feed_id. If not given, all feeds are considered. (optional, default to &quot;&quot;)</param>
    /// <param name="catalogId">Filter entities for a given catalog_id. If not given, all catalogs are considered. (optional, default to &quot;&quot;)</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_list(const std::optional<std::vector<int32_t>> &id, const std::optional<std::string> &feedId, const std::optional<std::string> &catalogId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get product counts
    /// </summary>
    /// <remarks>
    /// Get a product counts for a given Catalogs Product Group owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="productGroupId">Unique identifier of a product group</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_product_counts_get(const std::string &productGroupId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Update single product group
    /// </summary>
    /// <remarks>
    /// Update product group owned by the \&quot;operation user_account\&quot; to use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="productGroupId">Unique identifier of a product group</param>
    /// <param name="catalogsProductGroupsUpdateRequest">Request object used to Update a catalogs product group.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_product_groups_update(const std::string &productGroupId, const org::openapitools::server::model::Catalogs_product_groups_update_request &catalogsProductGroupsUpdateRequest, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Create catalog
    /// </summary>
    /// <remarks>
    /// Create a new catalog owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: this API only supports the catalog type of HOTEL for now.
    /// </remarks>
    /// <param name="catalogsCreateRequest">Request object used to created a feed.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_create(const org::openapitools::server::model::CatalogsCreateRequest &catalogsCreateRequest, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List catalogs
    /// </summary>
    /// <remarks>
    /// Fetch catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void catalogs_list(const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List feed processing results
    /// </summary>
    /// <remarks>
    /// Fetch a feed processing results owned by the \&quot;operation user_account\&quot;. Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="feedId">Unique identifier of a feed</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feed_processing_results_list(const std::string &feedId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Create feed
    /// </summary>
    /// <remarks>
    /// Create a new feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Please, be aware that \&quot;default_country\&quot; and \&quot;default_locale\&quot; are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="feedsCreateRequest">Request object used to created a feed.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feeds_create(const org::openapitools::server::model::Feeds_create_request &feedsCreateRequest, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Delete feed
    /// </summary>
    /// <remarks>
    /// Delete a feed owned by the \&quot;operating user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
    /// </remarks>
    /// <param name="feedId">Unique identifier of a feed</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feeds_delete(const std::string &feedId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get feed
    /// </summary>
    /// <remarks>
    /// Get a single feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
    /// </remarks>
    /// <param name="feedId">Unique identifier of a feed</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feeds_get(const std::string &feedId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Ingest feed items
    /// </summary>
    /// <remarks>
    /// Ingest items for a given feed owned by the \&quot;operation user_account\&quot;.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="feedId">Unique identifier of a feed</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feeds_ingest(const std::string &feedId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List feeds
    /// </summary>
    /// <remarks>
    /// Fetch feeds owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
    /// </remarks>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="catalogId">Filter entities for a given catalog_id. If not given, all catalogs are considered. (optional, default to &quot;&quot;)</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feeds_list(const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &catalogId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Update feed
    /// </summary>
    /// <remarks>
    /// Update a feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Pinterest API for shopping&lt;/a&gt;.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="feedId">Unique identifier of a feed</param>
    /// <param name="feedsUpdateRequest">Request object used to update a feed.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void feeds_update(const std::string &feedId, const org::openapitools::server::model::Feeds_update_request &feedsUpdateRequest, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get item batch status
    /// </summary>
    /// <remarks>
    /// Get a single catalogs items batch owned by the \&quot;operating user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    /// </remarks>
    /// <param name="batchId">Id of a catalogs items batch to fetch</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void items_batch_get(const std::string &batchId, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Operate on item batch
    /// </summary>
    /// <remarks>
    /// This endpoint supports multiple operations on a set of one or more catalog items owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
    /// </remarks>
    /// <param name="itemsBatchPostRequest">Request object used to create catalogs items in a batch</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void items_batch_post(const org::openapitools::server::model::Items_batch_post_request &itemsBatchPostRequest, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List item issues
    /// </summary>
    /// <remarks>
    /// List item validation issues for a given feed processing result owned by the \&quot;operation user_account\&quot;. Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters &#39;item_numbers&#39; and &#39;item_validation_issue&#39; cannot be used simultaneously until it is implemented in some release in the future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to &lt;a href&#x3D;&#39;/docs/api/v5/#operation/reports/create&#39;&gt;Build catalogs report&lt;/a&gt; and &lt;a href&#x3D;&#39;/docs/api/v5/#operation/reports/get&#39;&gt;Get catalogs report&lt;/a&gt; endpoints. Moreover, they support multiple types of catalogs.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="processingResultId">Unique identifier of a feed processing result. It can be acquired from the \&quot;id\&quot; field of the \&quot;items\&quot; array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list).</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="itemNumbers">Item number based on order of appearance in the Catalogs Feed. For example, &#39;0&#39; refers to first item found in a feed that was downloaded from a &#39;location&#39; specified during feed creation. (optional, default to std::vector&lt;int32_t&gt;())</param>
    /// <param name="itemValidationIssue">Filter item validation issues that have a given type of item validation issue. (optional, default to std::make_shared&lt;CatalogsItemValidationIssue&gt;())</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void items_issues_list(const std::string &processingResultId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::vector<int32_t>> &itemNumbers, const std::optional<org::openapitools::server::model::CatalogsItemValidationIssue> &itemValidationIssue, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get catalogs items
    /// </summary>
    /// <remarks>
    /// Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use &lt;a href&#x3D;&#39;/docs/api/v5/#operation/items/post&#39;&gt;Get catalogs items (POST)&lt;/a&gt; instead.
    /// </remarks>
    /// <param name="country">Country for the Catalogs Items</param>
    /// <param name="language">Language for the Catalogs Items</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    /// <param name="itemIds">This parameter is deprecated. Use filters instead. (optional, default to std::vector&lt;std::shared_ptr&lt;std::string&gt;&gt;())</param>
    /// <param name="filters">Identifies items to be retrieved. This is a required parameter. (optional, default to nullptr)</param>
    virtual void items_get(const std::optional<std::string> &country, const std::optional<std::string> &language, const std::optional<std::string> &adAccountId, const std::optional<std::vector<std::string>> &itemIds, const std::optional<org::openapitools::server::model::CatalogsItemsFilters> &filters, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get catalogs items (POST)
    /// </summary>
    /// <remarks>
    /// Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
    /// </remarks>
    /// <param name="catalogsItemsRequest">Request object used to get catalogs items</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void items_post(const org::openapitools::server::model::CatalogsItemsRequest &catalogsItemsRequest, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List products by filter
    /// </summary>
    /// <remarks>
    /// List products Pins owned by the \&quot;operation user_account\&quot; that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  &lt;a href&#x3D;&#39;/docs/api-features/shopping-overview/&#39;&gt;Learn more&lt;/a&gt;
    /// </remarks>
    /// <param name="catalogsListProductsByFilterRequest">Object holding a group of filters for a catalog product group</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    /// <param name="pinMetrics">Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)</param>
    virtual void products_by_product_group_filter_list(const org::openapitools::server::model::CatalogsListProductsByFilterRequest &catalogsListProductsByFilterRequest, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<std::string> &adAccountId, const std::optional<bool> &pinMetrics, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Build catalogs report
    /// </summary>
    /// <remarks>
    /// Async request to create a report of the catalog owned by the \&quot;operation user_account\&quot;. This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    /// </remarks>
    /// <param name="catalogsReportParameters">Request object to asynchronously create a report.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void reports_create(const org::openapitools::server::model::CatalogsReportParameters &catalogsReportParameters, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// Get catalogs report
    /// </summary>
    /// <remarks>
    /// This returns a URL to a report given a token returned from &lt;a href&#x3D;&#39;/docs/api/v5/#operation/reports/create&#39;&gt;Build catalogs report&lt;/a&gt;. You can use the URL to download the report. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    /// </remarks>
    /// <param name="token">Token returned from async build report call</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    virtual void reports_get(const std::optional<std::string> &token, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) = 0;
    /// <summary>
    /// List report stats
    /// </summary>
    /// <remarks>
    /// List aggregated numbers of issues for a catalog owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;&#39;/docs/api/v5/#operation/ad_accounts/list&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
    /// </remarks>
    /// <param name="parameters">Contains the parameters for report identification.</param>
    /// <param name="adAccountId">Unique identifier of an ad account. (optional, default to &quot;&quot;)</param>
    /// <param name="pageSize">Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)</param>
    /// <param name="bookmark">Cursor used to fetch the next page of items (optional, default to &quot;&quot;)</param>
    virtual void reports_stats(const std::optional<org::openapitools::server::model::CatalogsReportParameters> &parameters, const std::optional<std::string> &adAccountId, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) = 0;

};

} // namespace org::openapitools::server::api

#endif /* CatalogsApi_H_ */

