/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "ProductGroupPromotionsApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

ProductGroupPromotionsApiImpl::ProductGroupPromotionsApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : ProductGroupPromotionsApi(rtr)
{
}

void ProductGroupPromotionsApiImpl::product_group_promotions_create(const std::string &adAccountId, const ProductGroupPromotionCreateRequest &productGroupPromotionCreateRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ProductGroupPromotionsApiImpl::product_group_promotions_get(const std::string &adAccountId, const std::string &productGroupPromotionId, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ProductGroupPromotionsApiImpl::product_group_promotions_list(const std::string &adAccountId, const std::optional<std::vector<std::string>> &productGroupPromotionIds, const std::optional<std::vector<std::string>> &entityStatuses, const std::optional<std::string> &adGroupId, const std::optional<int32_t> &pageSize, const std::optional<std::string> &order, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ProductGroupPromotionsApiImpl::product_group_promotions_update(const std::string &adAccountId, const ProductGroupPromotionUpdateRequest &productGroupPromotionUpdateRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ProductGroupPromotionsApiImpl::product_groups_analytics(const std::string &adAccountId, const std::optional<std::string> &startDate, const std::optional<std::string> &endDate, const std::optional<std::vector<std::string>> &productGroupIds, const std::optional<std::vector<std::string>> &columns, const std::optional<org::openapitools::server::model::Granularity> &granularity, const std::optional<int32_t> &clickWindowDays, const std::optional<int32_t> &engagementWindowDays, const std::optional<int32_t> &viewWindowDays, const std::optional<std::string> &conversionReportTime, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

