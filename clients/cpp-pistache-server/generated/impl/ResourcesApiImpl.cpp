/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "ResourcesApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

ResourcesApiImpl::ResourcesApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : ResourcesApi(rtr)
{
}

void ResourcesApiImpl::ad_account_countries_get(Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ResourcesApiImpl::delivery_metrics_get(const std::optional<std::string> &reportType, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ResourcesApiImpl::interest_targeting_options_get(const std::string &interestId, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ResourcesApiImpl::lead_form_questions_get(Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ResourcesApiImpl::metrics_ready_state_get(const std::optional<std::string> &date, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void ResourcesApiImpl::targeting_options_get(const std::string &targetingType, const std::optional<std::string> &clientId, const std::optional<std::string> &oauthSignature, const std::optional<std::string> &timestamp, const std::optional<std::string> &adAccountId, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

