/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "BusinessAccessAssetsApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

BusinessAccessAssetsApiImpl::BusinessAccessAssetsApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : BusinessAccessAssetsApi(rtr)
{
}

void BusinessAccessAssetsApiImpl::asset_group_create(const std::string &businessId, const CreateAssetGroupBody &createAssetGroupBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::asset_group_delete(const std::string &businessId, const DeleteAssetGroupBody &deleteAssetGroupBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::asset_group_update(const std::string &businessId, const UpdateAssetGroupBody &updateAssetGroupBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_asset_members_get(const std::string &businessId, const std::string &assetId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<int32_t> &startIndex, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_asset_partners_get(const std::string &businessId, const std::string &assetId, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_assets_get(const std::string &businessId, const std::optional<std::vector<org::openapitools::server::model::PermissionsWithOwner>> &permissions, const std::optional<std::string> &childAssetId, const std::optional<std::string> &assetGroupId, const std::optional<std::string> &assetType, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_member_assets_get(const std::string &businessId, const std::string &memberId, const std::optional<std::string> &assetType, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_members_asset_access_delete(const std::string &businessId, const Business_members_asset_access_delete_request &businessMembersAssetAccessDeleteRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_members_asset_access_update(const std::string &businessId, const UpdateMemberAssetAccessBody &updateMemberAssetAccessBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::business_partner_asset_access_get(const std::string &businessId, const std::string &partnerId, const std::optional<org::openapitools::server::model::org::openapitools::server::model::PartnerType> &partnerType, const std::optional<std::string> &assetType, const std::optional<int32_t> &startIndex, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::delete_partner_asset_access_handler_impl(const std::string &businessId, const DeletePartnerAssetAccessBody &deletePartnerAssetAccessBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessAssetsApiImpl::update_partner_asset_access_handler_impl(const std::string &businessId, const UpdatePartnerAssetAccessBody &updatePartnerAssetAccessBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

