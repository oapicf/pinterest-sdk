/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "BusinessAccessInviteApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

BusinessAccessInviteApiImpl::BusinessAccessInviteApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : BusinessAccessInviteApi(rtr)
{
}

void BusinessAccessInviteApiImpl::asset_access_requests_create(const std::string &businessId, const CreateAssetAccessRequestBody &createAssetAccessRequestBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessInviteApiImpl::cancel_invites_or_requests(const std::string &businessId, const CancelInvitesBody &cancelInvitesBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessInviteApiImpl::create_asset_invites(const std::string &businessId, const CreateAssetInvitesRequest &createAssetInvitesRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessInviteApiImpl::create_membership_or_partnership_invites(const std::string &businessId, const CreateMembershipOrPartnershipInvitesBody &createMembershipOrPartnershipInvitesBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessInviteApiImpl::get_invites(const std::string &businessId, const std::optional<bool> &isMember, const std::optional<std::vector<std::string>> &inviteStatus, const std::optional<org::openapitools::server::model::InviteType> &inviteType, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessInviteApiImpl::respond_business_access_invites(const AuthRespondInvitesBody &authRespondInvitesBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

