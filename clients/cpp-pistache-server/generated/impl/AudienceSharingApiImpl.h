/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* AudienceSharingApiImpl.h
*
* 
*/

#ifndef AUDIENCE_SHARING_API_IMPL_H_
#define AUDIENCE_SHARING_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <AudienceSharingApi.h>


#include "Ad_accounts_audiences_shared_accounts_list_200_response.h"
#include "AudienceAccountType.h"
#include "Audiences_list_200_response.h"
#include "BusinessSharedAudience.h"
#include "BusinessSharedAudienceResponse.h"
#include "Error.h"
#include "SharedAudience.h"
#include "SharedAudienceResponse.h"
#include <string>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class  AudienceSharingApiImpl : public org::openapitools::server::api::AudienceSharingApi {
public:
    explicit AudienceSharingApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~AudienceSharingApiImpl() override = default;

    void ad_accounts_audiences_shared_accounts_list(const std::string &adAccountId, const std::optional<std::string> &audienceId, const std::optional<org::openapitools::server::model::AudienceAccountType> &accountType, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response);
    void business_account_audiences_shared_accounts_list(const std::string &businessId, const std::optional<std::string> &audienceId, const std::optional<org::openapitools::server::model::AudienceAccountType> &accountType, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response);
    void shared_audiences_for_business_list(const std::string &businessId, const std::optional<std::string> &bookmark, const std::optional<std::string> &order, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response);
    void update_ad_account_to_ad_account_shared_audience(const std::string &adAccountId, const SharedAudience &sharedAudience, Pistache::Http::ResponseWriter &response);
    void update_ad_account_to_business_shared_audience(const std::string &adAccountId, const BusinessSharedAudience &businessSharedAudience, Pistache::Http::ResponseWriter &response);
    void update_business_to_ad_account_shared_audience(const std::string &businessId, const SharedAudience &sharedAudience, Pistache::Http::ResponseWriter &response);
    void update_business_to_business_shared_audience(const std::string &businessId, const BusinessSharedAudience &businessSharedAudience, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
