/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "BusinessAccessRelationshipsApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

BusinessAccessRelationshipsApiImpl::BusinessAccessRelationshipsApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : BusinessAccessRelationshipsApi(rtr)
{
}

void BusinessAccessRelationshipsApiImpl::delete_business_membership(const std::string &businessId, const MembersToDeleteBody &membersToDeleteBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessRelationshipsApiImpl::delete_business_partners(const std::string &businessId, const DeletePartnersRequest &deletePartnersRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessRelationshipsApiImpl::get_business_employers(const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessRelationshipsApiImpl::get_business_members(const std::string &businessId, const std::optional<bool> &assetsSummary, const std::optional<std::vector<org::openapitools::server::model::MemberBusinessRole>> &businessRoles, const std::optional<std::string> &memberIds, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessRelationshipsApiImpl::get_business_partners(const std::string &businessId, const std::optional<bool> &assetsSummary, const std::optional<org::openapitools::server::model::PartnerType> &partnerType, const std::optional<std::string> &partnerIds, const std::optional<int32_t> &startIndex, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void BusinessAccessRelationshipsApiImpl::update_business_memberships(const std::string &businessId, const std::vector<org::openapitools::server::model::UpdateMemberBusinessRoleBody> &updateMemberBusinessRoleBody, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

