/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* BusinessAccessAssetsApiImpl.h
*
* 
*/

#ifndef BUSINESS_ACCESS_ASSETS_API_IMPL_H_
#define BUSINESS_ACCESS_ASSETS_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <BusinessAccessAssetsApi.h>


#include "Business_asset_members_get_200_response.h"
#include "Business_asset_partners_get_200_response.h"
#include "Business_assets_get_200_response.h"
#include "Business_member_assets_get_200_response.h"
#include "Business_members_asset_access_delete_request.h"
#include "Business_partner_asset_access_get_200_response.h"
#include "CreateAssetGroupBody.h"
#include "CreateAssetGroupResponse.h"
#include "DeleteAssetGroupBody.h"
#include "DeleteAssetGroupResponse.h"
#include "DeleteMemberAccessResultsResponseArray.h"
#include "DeletePartnerAssetAccessBody.h"
#include "DeletePartnerAssetsResultsResponseArray.h"
#include "Error.h"
#include "PartnerType.h"
#include "PermissionsWithOwner.h"
#include "UpdateAssetGroupBody.h"
#include "UpdateAssetGroupResponse.h"
#include "UpdateMemberAssetAccessBody.h"
#include "UpdateMemberAssetsResultsResponseArray.h"
#include "UpdatePartnerAssetAccessBody.h"
#include "UpdatePartnerAssetsResultsResponseArray.h"
#include <string>
#include <vector>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class  BusinessAccessAssetsApiImpl : public org::openapitools::server::api::BusinessAccessAssetsApi {
public:
    explicit BusinessAccessAssetsApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~BusinessAccessAssetsApiImpl() override = default;

    void asset_group_create(const std::string &businessId, const CreateAssetGroupBody &createAssetGroupBody, Pistache::Http::ResponseWriter &response);
    void asset_group_delete(const std::string &businessId, const DeleteAssetGroupBody &deleteAssetGroupBody, Pistache::Http::ResponseWriter &response);
    void asset_group_update(const std::string &businessId, const UpdateAssetGroupBody &updateAssetGroupBody, Pistache::Http::ResponseWriter &response);
    void business_asset_members_get(const std::string &businessId, const std::string &assetId, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, const std::optional<int32_t> &startIndex, Pistache::Http::ResponseWriter &response);
    void business_asset_partners_get(const std::string &businessId, const std::string &assetId, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response);
    void business_assets_get(const std::string &businessId, const std::optional<std::vector<org::openapitools::server::model::PermissionsWithOwner>> &permissions, const std::optional<std::string> &childAssetId, const std::optional<std::string> &assetGroupId, const std::optional<std::string> &assetType, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response);
    void business_member_assets_get(const std::string &businessId, const std::string &memberId, const std::optional<std::string> &assetType, const std::optional<int32_t> &startIndex, const std::optional<std::string> &bookmark, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response);
    void business_members_asset_access_delete(const std::string &businessId, const Business_members_asset_access_delete_request &businessMembersAssetAccessDeleteRequest, Pistache::Http::ResponseWriter &response);
    void business_members_asset_access_update(const std::string &businessId, const UpdateMemberAssetAccessBody &updateMemberAssetAccessBody, Pistache::Http::ResponseWriter &response);
    void business_partner_asset_access_get(const std::string &businessId, const std::string &partnerId, const std::optional<org::openapitools::server::model::org::openapitools::server::model::PartnerType> &partnerType, const std::optional<std::string> &assetType, const std::optional<int32_t> &startIndex, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response);
    void delete_partner_asset_access_handler_impl(const std::string &businessId, const DeletePartnerAssetAccessBody &deletePartnerAssetAccessBody, Pistache::Http::ResponseWriter &response);
    void update_partner_asset_access_handler_impl(const std::string &businessId, const UpdatePartnerAssetAccessBody &updatePartnerAssetAccessBody, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
