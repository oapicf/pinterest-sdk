/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "AudienceSharingApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

AudienceSharingApiImpl::AudienceSharingApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : AudienceSharingApi(rtr)
{
}

void AudienceSharingApiImpl::ad_accounts_audiences_shared_accounts_list(const std::string &adAccountId, const std::optional<std::string> &audienceId, const std::optional<org::openapitools::server::model::AudienceAccountType> &accountType, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AudienceSharingApiImpl::business_account_audiences_shared_accounts_list(const std::string &businessId, const std::optional<std::string> &audienceId, const std::optional<org::openapitools::server::model::AudienceAccountType> &accountType, const std::optional<int32_t> &pageSize, const std::optional<std::string> &bookmark, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AudienceSharingApiImpl::shared_audiences_for_business_list(const std::string &businessId, const std::optional<std::string> &bookmark, const std::optional<std::string> &order, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AudienceSharingApiImpl::update_ad_account_to_ad_account_shared_audience(const std::string &adAccountId, const SharedAudience &sharedAudience, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AudienceSharingApiImpl::update_ad_account_to_business_shared_audience(const std::string &adAccountId, const BusinessSharedAudience &businessSharedAudience, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AudienceSharingApiImpl::update_business_to_ad_account_shared_audience(const std::string &businessId, const SharedAudience &sharedAudience, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AudienceSharingApiImpl::update_business_to_business_shared_audience(const std::string &businessId, const BusinessSharedAudience &businessSharedAudience, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

