/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "KeywordMetricsResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

KeywordMetricsResponse::KeywordMetricsResponse()
{
    m_Keyword = "";
    m_KeywordIsSet = false;
    m_MetricsIsSet = false;
    
}

void KeywordMetricsResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool KeywordMetricsResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool KeywordMetricsResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "KeywordMetricsResponse" : pathPrefix;

            
    return success;
}

bool KeywordMetricsResponse::operator==(const KeywordMetricsResponse& rhs) const
{
    return
    
    
    
    ((!keywordIsSet() && !rhs.keywordIsSet()) || (keywordIsSet() && rhs.keywordIsSet() && getKeyword() == rhs.getKeyword())) &&
    
    
    ((!metricsIsSet() && !rhs.metricsIsSet()) || (metricsIsSet() && rhs.metricsIsSet() && getMetrics() == rhs.getMetrics()))
    
    ;
}

bool KeywordMetricsResponse::operator!=(const KeywordMetricsResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const KeywordMetricsResponse& o)
{
    j = nlohmann::json::object();
    if(o.keywordIsSet())
        j["keyword"] = o.m_Keyword;
    if(o.metricsIsSet())
        j["metrics"] = o.m_Metrics;
    
}

void from_json(const nlohmann::json& j, KeywordMetricsResponse& o)
{
    if(j.find("keyword") != j.end())
    {
        j.at("keyword").get_to(o.m_Keyword);
        o.m_KeywordIsSet = true;
    } 
    if(j.find("metrics") != j.end())
    {
        j.at("metrics").get_to(o.m_Metrics);
        o.m_MetricsIsSet = true;
    } 
    
}

std::string KeywordMetricsResponse::getKeyword() const
{
    return m_Keyword;
}
void KeywordMetricsResponse::setKeyword(std::string const& value)
{
    m_Keyword = value;
    m_KeywordIsSet = true;
}
bool KeywordMetricsResponse::keywordIsSet() const
{
    return m_KeywordIsSet;
}
void KeywordMetricsResponse::unsetKeyword()
{
    m_KeywordIsSet = false;
}
org::openapitools::server::model::KeywordMetrics KeywordMetricsResponse::getMetrics() const
{
    return m_Metrics;
}
void KeywordMetricsResponse::setMetrics(org::openapitools::server::model::KeywordMetrics const& value)
{
    m_Metrics = value;
    m_MetricsIsSet = true;
}
bool KeywordMetricsResponse::metricsIsSet() const
{
    return m_MetricsIsSet;
}
void KeywordMetricsResponse::unsetMetrics()
{
    m_MetricsIsSet = false;
}


} // namespace org::openapitools::server::model

