/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AnalyticsMetricsResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AnalyticsMetricsResponse::AnalyticsMetricsResponse()
{
    m_Summary_metricsIsSet = false;
    m_Daily_metricsIsSet = false;
    
}

void AnalyticsMetricsResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AnalyticsMetricsResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AnalyticsMetricsResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AnalyticsMetricsResponse" : pathPrefix;

             
    if (dailyMetricsIsSet())
    {
        const std::vector<org::openapitools::server::model::AnalyticsDailyMetrics>& value = m_Daily_metrics;
        const std::string currentValuePath = _pathPrefix + ".dailyMetrics";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const org::openapitools::server::model::AnalyticsDailyMetrics& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        success = value.validate(msg, currentValuePath + ".dailyMetrics") && success;
 
                i++;
            }
        }

    }
    
    return success;
}

bool AnalyticsMetricsResponse::operator==(const AnalyticsMetricsResponse& rhs) const
{
    return
    
    
    
    ((!summaryMetricsIsSet() && !rhs.summaryMetricsIsSet()) || (summaryMetricsIsSet() && rhs.summaryMetricsIsSet() && getSummaryMetrics() == rhs.getSummaryMetrics())) &&
    
    
    ((!dailyMetricsIsSet() && !rhs.dailyMetricsIsSet()) || (dailyMetricsIsSet() && rhs.dailyMetricsIsSet() && getDailyMetrics() == rhs.getDailyMetrics()))
    
    ;
}

bool AnalyticsMetricsResponse::operator!=(const AnalyticsMetricsResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AnalyticsMetricsResponse& o)
{
    j = nlohmann::json::object();
    if(o.summaryMetricsIsSet() || !o.m_Summary_metrics.empty())
        j["summary_metrics"] = o.m_Summary_metrics;
    if(o.dailyMetricsIsSet() || !o.m_Daily_metrics.empty())
        j["daily_metrics"] = o.m_Daily_metrics;
    
}

void from_json(const nlohmann::json& j, AnalyticsMetricsResponse& o)
{
    if(j.find("summary_metrics") != j.end())
    {
        j.at("summary_metrics").get_to(o.m_Summary_metrics);
        o.m_Summary_metricsIsSet = true;
    } 
    if(j.find("daily_metrics") != j.end())
    {
        j.at("daily_metrics").get_to(o.m_Daily_metrics);
        o.m_Daily_metricsIsSet = true;
    } 
    
}

std::map<std::string, double> AnalyticsMetricsResponse::getSummaryMetrics() const
{
    return m_Summary_metrics;
}
void AnalyticsMetricsResponse::setSummaryMetrics(std::map<std::string, double> const value)
{
    m_Summary_metrics = value;
    m_Summary_metricsIsSet = true;
}
bool AnalyticsMetricsResponse::summaryMetricsIsSet() const
{
    return m_Summary_metricsIsSet;
}
void AnalyticsMetricsResponse::unsetSummary_metrics()
{
    m_Summary_metricsIsSet = false;
}
std::vector<org::openapitools::server::model::AnalyticsDailyMetrics> AnalyticsMetricsResponse::getDailyMetrics() const
{
    return m_Daily_metrics;
}
void AnalyticsMetricsResponse::setDailyMetrics(std::vector<org::openapitools::server::model::AnalyticsDailyMetrics> const& value)
{
    m_Daily_metrics = value;
    m_Daily_metricsIsSet = true;
}
bool AnalyticsMetricsResponse::dailyMetricsIsSet() const
{
    return m_Daily_metricsIsSet;
}
void AnalyticsMetricsResponse::unsetDaily_metrics()
{
    m_Daily_metricsIsSet = false;
}


} // namespace org::openapitools::server::model

