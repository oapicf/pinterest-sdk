/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsRetailReportParameters.h
 *
 * Parameters for retail report
 */

#ifndef CatalogsRetailReportParameters_H_
#define CatalogsRetailReportParameters_H_


#include "CatalogsHotelReportParameters_report.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Parameters for retail report
/// </summary>
class  CatalogsRetailReportParameters
{
public:
    CatalogsRetailReportParameters();
    virtual ~CatalogsRetailReportParameters() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsRetailReportParameters& rhs) const;
    bool operator!=(const CatalogsRetailReportParameters& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsRetailReportParameters members

    /// <summary>
    /// 
    /// </summary>
    std::string getCatalogType() const;
    void setCatalogType(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsHotelReportParameters_report getReport() const;
    void setReport(org::openapitools::server::model::CatalogsHotelReportParameters_report const& value);

    friend  void to_json(nlohmann::json& j, const CatalogsRetailReportParameters& o);
    friend  void from_json(const nlohmann::json& j, CatalogsRetailReportParameters& o);
protected:
    std::string m_Catalog_type;

    org::openapitools::server::model::CatalogsHotelReportParameters_report m_Report;

    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsRetailReportParameters_H_ */
