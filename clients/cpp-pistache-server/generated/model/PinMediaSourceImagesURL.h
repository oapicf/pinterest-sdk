/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * PinMediaSourceImagesURL.h
 *
 * Multiple images urls-based media source
 */

#ifndef PinMediaSourceImagesURL_H_
#define PinMediaSourceImagesURL_H_


#include "PinMediaSourceImagesURL_items_inner.h"
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Multiple images urls-based media source
/// </summary>
class  PinMediaSourceImagesURL
{
public:
    PinMediaSourceImagesURL();
    virtual ~PinMediaSourceImagesURL() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const PinMediaSourceImagesURL& rhs) const;
    bool operator!=(const PinMediaSourceImagesURL& rhs) const;

    /////////////////////////////////////////////
    /// PinMediaSourceImagesURL members

    /// <summary>
    /// 
    /// </summary>
    std::string getSourceType() const;
    void setSourceType(std::string const& value);
    bool sourceTypeIsSet() const;
    void unsetSource_type();
    /// <summary>
    /// Array with image objects.
    /// </summary>
    std::vector<org::openapitools::server::model::PinMediaSourceImagesURL_items_inner> getItems() const;
    void setItems(std::vector<org::openapitools::server::model::PinMediaSourceImagesURL_items_inner> const& value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getIndex() const;
    void setIndex(int32_t const value);
    bool indexIsSet() const;
    void unsetIndex();

    friend  void to_json(nlohmann::json& j, const PinMediaSourceImagesURL& o);
    friend  void from_json(const nlohmann::json& j, PinMediaSourceImagesURL& o);
protected:
    std::string m_Source_type;
    bool m_Source_typeIsSet;
    std::vector<org::openapitools::server::model::PinMediaSourceImagesURL_items_inner> m_Items;

    int32_t m_Index;
    bool m_IndexIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* PinMediaSourceImagesURL_H_ */
