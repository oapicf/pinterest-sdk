/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UpdateAssetGroupBody_asset_groups_to_update_inner.h
 *
 * 
 */

#ifndef UpdateAssetGroupBody_asset_groups_to_update_inner_H_
#define UpdateAssetGroupBody_asset_groups_to_update_inner_H_


#include "AssetGroupType.h"
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  UpdateAssetGroupBody_asset_groups_to_update_inner
{
public:
    UpdateAssetGroupBody_asset_groups_to_update_inner();
    virtual ~UpdateAssetGroupBody_asset_groups_to_update_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const UpdateAssetGroupBody_asset_groups_to_update_inner& rhs) const;
    bool operator!=(const UpdateAssetGroupBody_asset_groups_to_update_inner& rhs) const;

    /////////////////////////////////////////////
    /// UpdateAssetGroupBody_asset_groups_to_update_inner members

    /// <summary>
    /// Unique identifier of the asset group to update.
    /// </summary>
    std::string getAssetGroupId() const;
    void setAssetGroupId(std::string const& value);
    /// <summary>
    /// Asset Group name
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// Asset group description
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string const& value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
    /// </summary>
    std::vector<org::openapitools::server::model::AssetGroupType> getAssetGroupTypes() const;
    void setAssetGroupTypes(std::vector<org::openapitools::server::model::AssetGroupType> const& value);
    bool assetGroupTypesIsSet() const;
    void unsetAsset_group_types();
    /// <summary>
    /// A list of asset ids to add to the asset group.
    /// </summary>
    std::vector<std::string> getAssetsToAdd() const;
    void setAssetsToAdd(std::vector<std::string> const& value);
    bool assetsToAddIsSet() const;
    void unsetAssets_to_add();
    /// <summary>
    /// A list of asset ids to remove from the asset group.
    /// </summary>
    std::vector<std::string> getAssetsToRemove() const;
    void setAssetsToRemove(std::vector<std::string> const& value);
    bool assetsToRemoveIsSet() const;
    void unsetAssets_to_remove();

    friend  void to_json(nlohmann::json& j, const UpdateAssetGroupBody_asset_groups_to_update_inner& o);
    friend  void from_json(const nlohmann::json& j, UpdateAssetGroupBody_asset_groups_to_update_inner& o);
protected:
    std::string m_Asset_group_id;

    std::string m_Name;
    bool m_NameIsSet;
    std::string m_Description;
    bool m_DescriptionIsSet;
    std::vector<org::openapitools::server::model::AssetGroupType> m_Asset_group_types;
    bool m_Asset_group_typesIsSet;
    std::vector<std::string> m_Assets_to_add;
    bool m_Assets_to_addIsSet;
    std::vector<std::string> m_Assets_to_remove;
    bool m_Assets_to_removeIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* UpdateAssetGroupBody_asset_groups_to_update_inner_H_ */
