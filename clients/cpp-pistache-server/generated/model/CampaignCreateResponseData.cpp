/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CampaignCreateResponseData.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CampaignCreateResponseData::CampaignCreateResponseData()
{
    m_Ad_account_id = "";
    m_Ad_account_idIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    m_StatusIsSet = false;
    m_Lifetime_spend_cap = 0;
    m_Lifetime_spend_capIsSet = false;
    m_Daily_spend_cap = 0;
    m_Daily_spend_capIsSet = false;
    m_Order_line_id = "";
    m_Order_line_idIsSet = false;
    m_Tracking_urlsIsSet = false;
    m_Start_time = 0;
    m_Start_timeIsSet = false;
    m_End_time = 0;
    m_End_timeIsSet = false;
    m_Is_flexible_daily_budgets = false;
    m_Is_flexible_daily_budgetsIsSet = false;
    m_Default_ad_group_budget_in_micro_currency = 0;
    m_Default_ad_group_budget_in_micro_currencyIsSet = false;
    m_Is_automated_campaign = false;
    m_Is_automated_campaignIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_Objective_typeIsSet = false;
    m_Created_time = 0;
    m_Created_timeIsSet = false;
    m_Updated_time = 0;
    m_Updated_timeIsSet = false;
    m_Type = "";
    m_TypeIsSet = false;
    m_Is_campaign_budget_optimization = false;
    m_Is_campaign_budget_optimizationIsSet = false;
    m_Summary_statusIsSet = false;
    
}

void CampaignCreateResponseData::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CampaignCreateResponseData::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CampaignCreateResponseData::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CampaignCreateResponseData" : pathPrefix;

         
    if (adAccountIdIsSet())
    {
        const std::string& value = m_Ad_account_id;
        const std::string currentValuePath = _pathPrefix + ".adAccountId";
                
        

    }
                         
    if (orderLineIdIsSet())
    {
        const std::string& value = m_Order_line_id;
        const std::string currentValuePath = _pathPrefix + ".orderLineId";
                
        

    }
                                 
    if (idIsSet())
    {
        const std::string& value = m_Id;
        const std::string currentValuePath = _pathPrefix + ".id";
                
        

    }
                            
    return success;
}

bool CampaignCreateResponseData::operator==(const CampaignCreateResponseData& rhs) const
{
    return
    
    
    
    ((!adAccountIdIsSet() && !rhs.adAccountIdIsSet()) || (adAccountIdIsSet() && rhs.adAccountIdIsSet() && getAdAccountId() == rhs.getAdAccountId())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!lifetimeSpendCapIsSet() && !rhs.lifetimeSpendCapIsSet()) || (lifetimeSpendCapIsSet() && rhs.lifetimeSpendCapIsSet() && getLifetimeSpendCap() == rhs.getLifetimeSpendCap())) &&
    
    
    ((!dailySpendCapIsSet() && !rhs.dailySpendCapIsSet()) || (dailySpendCapIsSet() && rhs.dailySpendCapIsSet() && getDailySpendCap() == rhs.getDailySpendCap())) &&
    
    
    ((!orderLineIdIsSet() && !rhs.orderLineIdIsSet()) || (orderLineIdIsSet() && rhs.orderLineIdIsSet() && getOrderLineId() == rhs.getOrderLineId())) &&
    
    
    ((!trackingUrlsIsSet() && !rhs.trackingUrlsIsSet()) || (trackingUrlsIsSet() && rhs.trackingUrlsIsSet() && getTrackingUrls() == rhs.getTrackingUrls())) &&
    
    
    ((!startTimeIsSet() && !rhs.startTimeIsSet()) || (startTimeIsSet() && rhs.startTimeIsSet() && getStartTime() == rhs.getStartTime())) &&
    
    
    ((!endTimeIsSet() && !rhs.endTimeIsSet()) || (endTimeIsSet() && rhs.endTimeIsSet() && getEndTime() == rhs.getEndTime())) &&
    
    
    ((!isFlexibleDailyBudgetsIsSet() && !rhs.isFlexibleDailyBudgetsIsSet()) || (isFlexibleDailyBudgetsIsSet() && rhs.isFlexibleDailyBudgetsIsSet() && isIsFlexibleDailyBudgets() == rhs.isIsFlexibleDailyBudgets())) &&
    
    
    ((!defaultAdGroupBudgetInMicroCurrencyIsSet() && !rhs.defaultAdGroupBudgetInMicroCurrencyIsSet()) || (defaultAdGroupBudgetInMicroCurrencyIsSet() && rhs.defaultAdGroupBudgetInMicroCurrencyIsSet() && getDefaultAdGroupBudgetInMicroCurrency() == rhs.getDefaultAdGroupBudgetInMicroCurrency())) &&
    
    
    ((!isAutomatedCampaignIsSet() && !rhs.isAutomatedCampaignIsSet()) || (isAutomatedCampaignIsSet() && rhs.isAutomatedCampaignIsSet() && isIsAutomatedCampaign() == rhs.isIsAutomatedCampaign())) &&
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!objectiveTypeIsSet() && !rhs.objectiveTypeIsSet()) || (objectiveTypeIsSet() && rhs.objectiveTypeIsSet() && getObjectiveType() == rhs.getObjectiveType())) &&
    
    
    ((!createdTimeIsSet() && !rhs.createdTimeIsSet()) || (createdTimeIsSet() && rhs.createdTimeIsSet() && getCreatedTime() == rhs.getCreatedTime())) &&
    
    
    ((!updatedTimeIsSet() && !rhs.updatedTimeIsSet()) || (updatedTimeIsSet() && rhs.updatedTimeIsSet() && getUpdatedTime() == rhs.getUpdatedTime())) &&
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!isCampaignBudgetOptimizationIsSet() && !rhs.isCampaignBudgetOptimizationIsSet()) || (isCampaignBudgetOptimizationIsSet() && rhs.isCampaignBudgetOptimizationIsSet() && isIsCampaignBudgetOptimization() == rhs.isIsCampaignBudgetOptimization())) &&
    
    
    ((!summaryStatusIsSet() && !rhs.summaryStatusIsSet()) || (summaryStatusIsSet() && rhs.summaryStatusIsSet() && getSummaryStatus() == rhs.getSummaryStatus()))
    
    ;
}

bool CampaignCreateResponseData::operator!=(const CampaignCreateResponseData& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CampaignCreateResponseData& o)
{
    j = nlohmann::json::object();
    if(o.adAccountIdIsSet())
        j["ad_account_id"] = o.m_Ad_account_id;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.lifetimeSpendCapIsSet())
        j["lifetime_spend_cap"] = o.m_Lifetime_spend_cap;
    if(o.dailySpendCapIsSet())
        j["daily_spend_cap"] = o.m_Daily_spend_cap;
    if(o.orderLineIdIsSet())
        j["order_line_id"] = o.m_Order_line_id;
    if(o.trackingUrlsIsSet())
        j["tracking_urls"] = o.m_Tracking_urls;
    if(o.startTimeIsSet())
        j["start_time"] = o.m_Start_time;
    if(o.endTimeIsSet())
        j["end_time"] = o.m_End_time;
    if(o.isFlexibleDailyBudgetsIsSet())
        j["is_flexible_daily_budgets"] = o.m_Is_flexible_daily_budgets;
    if(o.defaultAdGroupBudgetInMicroCurrencyIsSet())
        j["default_ad_group_budget_in_micro_currency"] = o.m_Default_ad_group_budget_in_micro_currency;
    if(o.isAutomatedCampaignIsSet())
        j["is_automated_campaign"] = o.m_Is_automated_campaign;
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.objectiveTypeIsSet())
        j["objective_type"] = o.m_Objective_type;
    if(o.createdTimeIsSet())
        j["created_time"] = o.m_Created_time;
    if(o.updatedTimeIsSet())
        j["updated_time"] = o.m_Updated_time;
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.isCampaignBudgetOptimizationIsSet())
        j["is_campaign_budget_optimization"] = o.m_Is_campaign_budget_optimization;
    if(o.summaryStatusIsSet())
        j["summary_status"] = o.m_Summary_status;
    
}

void from_json(const nlohmann::json& j, CampaignCreateResponseData& o)
{
    if(j.find("ad_account_id") != j.end())
    {
        j.at("ad_account_id").get_to(o.m_Ad_account_id);
        o.m_Ad_account_idIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("lifetime_spend_cap") != j.end())
    {
        j.at("lifetime_spend_cap").get_to(o.m_Lifetime_spend_cap);
        o.m_Lifetime_spend_capIsSet = true;
    } 
    if(j.find("daily_spend_cap") != j.end())
    {
        j.at("daily_spend_cap").get_to(o.m_Daily_spend_cap);
        o.m_Daily_spend_capIsSet = true;
    } 
    if(j.find("order_line_id") != j.end())
    {
        j.at("order_line_id").get_to(o.m_Order_line_id);
        o.m_Order_line_idIsSet = true;
    } 
    if(j.find("tracking_urls") != j.end())
    {
        j.at("tracking_urls").get_to(o.m_Tracking_urls);
        o.m_Tracking_urlsIsSet = true;
    } 
    if(j.find("start_time") != j.end())
    {
        j.at("start_time").get_to(o.m_Start_time);
        o.m_Start_timeIsSet = true;
    } 
    if(j.find("end_time") != j.end())
    {
        j.at("end_time").get_to(o.m_End_time);
        o.m_End_timeIsSet = true;
    } 
    if(j.find("is_flexible_daily_budgets") != j.end())
    {
        j.at("is_flexible_daily_budgets").get_to(o.m_Is_flexible_daily_budgets);
        o.m_Is_flexible_daily_budgetsIsSet = true;
    } 
    if(j.find("default_ad_group_budget_in_micro_currency") != j.end())
    {
        j.at("default_ad_group_budget_in_micro_currency").get_to(o.m_Default_ad_group_budget_in_micro_currency);
        o.m_Default_ad_group_budget_in_micro_currencyIsSet = true;
    } 
    if(j.find("is_automated_campaign") != j.end())
    {
        j.at("is_automated_campaign").get_to(o.m_Is_automated_campaign);
        o.m_Is_automated_campaignIsSet = true;
    } 
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("objective_type") != j.end())
    {
        j.at("objective_type").get_to(o.m_Objective_type);
        o.m_Objective_typeIsSet = true;
    } 
    if(j.find("created_time") != j.end())
    {
        j.at("created_time").get_to(o.m_Created_time);
        o.m_Created_timeIsSet = true;
    } 
    if(j.find("updated_time") != j.end())
    {
        j.at("updated_time").get_to(o.m_Updated_time);
        o.m_Updated_timeIsSet = true;
    } 
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("is_campaign_budget_optimization") != j.end())
    {
        j.at("is_campaign_budget_optimization").get_to(o.m_Is_campaign_budget_optimization);
        o.m_Is_campaign_budget_optimizationIsSet = true;
    } 
    if(j.find("summary_status") != j.end())
    {
        j.at("summary_status").get_to(o.m_Summary_status);
        o.m_Summary_statusIsSet = true;
    } 
    
}

std::string CampaignCreateResponseData::getAdAccountId() const
{
    return m_Ad_account_id;
}
void CampaignCreateResponseData::setAdAccountId(std::string const& value)
{
    m_Ad_account_id = value;
    m_Ad_account_idIsSet = true;
}
bool CampaignCreateResponseData::adAccountIdIsSet() const
{
    return m_Ad_account_idIsSet;
}
void CampaignCreateResponseData::unsetAd_account_id()
{
    m_Ad_account_idIsSet = false;
}
std::string CampaignCreateResponseData::getName() const
{
    return m_Name;
}
void CampaignCreateResponseData::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool CampaignCreateResponseData::nameIsSet() const
{
    return m_NameIsSet;
}
void CampaignCreateResponseData::unsetName()
{
    m_NameIsSet = false;
}
org::openapitools::server::model::EntityStatus CampaignCreateResponseData::getStatus() const
{
    return m_Status;
}
void CampaignCreateResponseData::setStatus(org::openapitools::server::model::EntityStatus const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool CampaignCreateResponseData::statusIsSet() const
{
    return m_StatusIsSet;
}
void CampaignCreateResponseData::unsetStatus()
{
    m_StatusIsSet = false;
}
int32_t CampaignCreateResponseData::getLifetimeSpendCap() const
{
    return m_Lifetime_spend_cap;
}
void CampaignCreateResponseData::setLifetimeSpendCap(int32_t const value)
{
    m_Lifetime_spend_cap = value;
    m_Lifetime_spend_capIsSet = true;
}
bool CampaignCreateResponseData::lifetimeSpendCapIsSet() const
{
    return m_Lifetime_spend_capIsSet;
}
void CampaignCreateResponseData::unsetLifetime_spend_cap()
{
    m_Lifetime_spend_capIsSet = false;
}
int32_t CampaignCreateResponseData::getDailySpendCap() const
{
    return m_Daily_spend_cap;
}
void CampaignCreateResponseData::setDailySpendCap(int32_t const value)
{
    m_Daily_spend_cap = value;
    m_Daily_spend_capIsSet = true;
}
bool CampaignCreateResponseData::dailySpendCapIsSet() const
{
    return m_Daily_spend_capIsSet;
}
void CampaignCreateResponseData::unsetDaily_spend_cap()
{
    m_Daily_spend_capIsSet = false;
}
std::string CampaignCreateResponseData::getOrderLineId() const
{
    return m_Order_line_id;
}
void CampaignCreateResponseData::setOrderLineId(std::string const& value)
{
    m_Order_line_id = value;
    m_Order_line_idIsSet = true;
}
bool CampaignCreateResponseData::orderLineIdIsSet() const
{
    return m_Order_line_idIsSet;
}
void CampaignCreateResponseData::unsetOrder_line_id()
{
    m_Order_line_idIsSet = false;
}
org::openapitools::server::model::TrackingUrls CampaignCreateResponseData::getTrackingUrls() const
{
    return m_Tracking_urls;
}
void CampaignCreateResponseData::setTrackingUrls(org::openapitools::server::model::TrackingUrls const& value)
{
    m_Tracking_urls = value;
    m_Tracking_urlsIsSet = true;
}
bool CampaignCreateResponseData::trackingUrlsIsSet() const
{
    return m_Tracking_urlsIsSet;
}
void CampaignCreateResponseData::unsetTracking_urls()
{
    m_Tracking_urlsIsSet = false;
}
int32_t CampaignCreateResponseData::getStartTime() const
{
    return m_Start_time;
}
void CampaignCreateResponseData::setStartTime(int32_t const value)
{
    m_Start_time = value;
    m_Start_timeIsSet = true;
}
bool CampaignCreateResponseData::startTimeIsSet() const
{
    return m_Start_timeIsSet;
}
void CampaignCreateResponseData::unsetStart_time()
{
    m_Start_timeIsSet = false;
}
int32_t CampaignCreateResponseData::getEndTime() const
{
    return m_End_time;
}
void CampaignCreateResponseData::setEndTime(int32_t const value)
{
    m_End_time = value;
    m_End_timeIsSet = true;
}
bool CampaignCreateResponseData::endTimeIsSet() const
{
    return m_End_timeIsSet;
}
void CampaignCreateResponseData::unsetEnd_time()
{
    m_End_timeIsSet = false;
}
bool CampaignCreateResponseData::isIsFlexibleDailyBudgets() const
{
    return m_Is_flexible_daily_budgets;
}
void CampaignCreateResponseData::setIsFlexibleDailyBudgets(bool const value)
{
    m_Is_flexible_daily_budgets = value;
    m_Is_flexible_daily_budgetsIsSet = true;
}
bool CampaignCreateResponseData::isFlexibleDailyBudgetsIsSet() const
{
    return m_Is_flexible_daily_budgetsIsSet;
}
void CampaignCreateResponseData::unsetIs_flexible_daily_budgets()
{
    m_Is_flexible_daily_budgetsIsSet = false;
}
int32_t CampaignCreateResponseData::getDefaultAdGroupBudgetInMicroCurrency() const
{
    return m_Default_ad_group_budget_in_micro_currency;
}
void CampaignCreateResponseData::setDefaultAdGroupBudgetInMicroCurrency(int32_t const value)
{
    m_Default_ad_group_budget_in_micro_currency = value;
    m_Default_ad_group_budget_in_micro_currencyIsSet = true;
}
bool CampaignCreateResponseData::defaultAdGroupBudgetInMicroCurrencyIsSet() const
{
    return m_Default_ad_group_budget_in_micro_currencyIsSet;
}
void CampaignCreateResponseData::unsetDefault_ad_group_budget_in_micro_currency()
{
    m_Default_ad_group_budget_in_micro_currencyIsSet = false;
}
bool CampaignCreateResponseData::isIsAutomatedCampaign() const
{
    return m_Is_automated_campaign;
}
void CampaignCreateResponseData::setIsAutomatedCampaign(bool const value)
{
    m_Is_automated_campaign = value;
    m_Is_automated_campaignIsSet = true;
}
bool CampaignCreateResponseData::isAutomatedCampaignIsSet() const
{
    return m_Is_automated_campaignIsSet;
}
void CampaignCreateResponseData::unsetIs_automated_campaign()
{
    m_Is_automated_campaignIsSet = false;
}
std::string CampaignCreateResponseData::getId() const
{
    return m_Id;
}
void CampaignCreateResponseData::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool CampaignCreateResponseData::idIsSet() const
{
    return m_IdIsSet;
}
void CampaignCreateResponseData::unsetId()
{
    m_IdIsSet = false;
}
org::openapitools::server::model::ObjectiveType CampaignCreateResponseData::getObjectiveType() const
{
    return m_Objective_type;
}
void CampaignCreateResponseData::setObjectiveType(org::openapitools::server::model::ObjectiveType const& value)
{
    m_Objective_type = value;
    m_Objective_typeIsSet = true;
}
bool CampaignCreateResponseData::objectiveTypeIsSet() const
{
    return m_Objective_typeIsSet;
}
void CampaignCreateResponseData::unsetObjective_type()
{
    m_Objective_typeIsSet = false;
}
int32_t CampaignCreateResponseData::getCreatedTime() const
{
    return m_Created_time;
}
void CampaignCreateResponseData::setCreatedTime(int32_t const value)
{
    m_Created_time = value;
    m_Created_timeIsSet = true;
}
bool CampaignCreateResponseData::createdTimeIsSet() const
{
    return m_Created_timeIsSet;
}
void CampaignCreateResponseData::unsetCreated_time()
{
    m_Created_timeIsSet = false;
}
int32_t CampaignCreateResponseData::getUpdatedTime() const
{
    return m_Updated_time;
}
void CampaignCreateResponseData::setUpdatedTime(int32_t const value)
{
    m_Updated_time = value;
    m_Updated_timeIsSet = true;
}
bool CampaignCreateResponseData::updatedTimeIsSet() const
{
    return m_Updated_timeIsSet;
}
void CampaignCreateResponseData::unsetUpdated_time()
{
    m_Updated_timeIsSet = false;
}
std::string CampaignCreateResponseData::getType() const
{
    return m_Type;
}
void CampaignCreateResponseData::setType(std::string const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool CampaignCreateResponseData::typeIsSet() const
{
    return m_TypeIsSet;
}
void CampaignCreateResponseData::unsetType()
{
    m_TypeIsSet = false;
}
bool CampaignCreateResponseData::isIsCampaignBudgetOptimization() const
{
    return m_Is_campaign_budget_optimization;
}
void CampaignCreateResponseData::setIsCampaignBudgetOptimization(bool const value)
{
    m_Is_campaign_budget_optimization = value;
    m_Is_campaign_budget_optimizationIsSet = true;
}
bool CampaignCreateResponseData::isCampaignBudgetOptimizationIsSet() const
{
    return m_Is_campaign_budget_optimizationIsSet;
}
void CampaignCreateResponseData::unsetIs_campaign_budget_optimization()
{
    m_Is_campaign_budget_optimizationIsSet = false;
}
org::openapitools::server::model::CampaignSummaryStatus CampaignCreateResponseData::getSummaryStatus() const
{
    return m_Summary_status;
}
void CampaignCreateResponseData::setSummaryStatus(org::openapitools::server::model::CampaignSummaryStatus const& value)
{
    m_Summary_status = value;
    m_Summary_statusIsSet = true;
}
bool CampaignCreateResponseData::summaryStatusIsSet() const
{
    return m_Summary_statusIsSet;
}
void CampaignCreateResponseData::unsetSummary_status()
{
    m_Summary_statusIsSet = false;
}


} // namespace org::openapitools::server::model

