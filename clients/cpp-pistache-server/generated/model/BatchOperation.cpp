/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "BatchOperation.h"
#include "Helpers.h"
#include <stdexcept>
#include <sstream>

namespace org::openapitools::server::model
{

BatchOperation::BatchOperation()
{
    
}

void BatchOperation::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool BatchOperation::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool BatchOperation::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "BatchOperation" : pathPrefix;

    
    if (m_value == BatchOperation::eBatchOperation::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool BatchOperation::operator==(const BatchOperation& rhs) const
{
    return
    getValue() == rhs.getValue()
    
    ;
}

bool BatchOperation::operator!=(const BatchOperation& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const BatchOperation& o)
{
    j = nlohmann::json::object();
    
    switch (o.getValue())
    {
        case BatchOperation::eBatchOperation::INVALID_VALUE_OPENAPI_GENERATED:
            j = "INVALID_VALUE_OPENAPI_GENERATED";
            break;
        case BatchOperation::eBatchOperation::UPDATE:
            j = "UPDATE";
            break;
        case BatchOperation::eBatchOperation::UPSERT:
            j = "UPSERT";
            break;
        case BatchOperation::eBatchOperation::CREATE:
            j = "CREATE";
            break;
        case BatchOperation::eBatchOperation::DELETE_DISCONTINUED:
            j = "DELETE_DISCONTINUED";
            break;
        case BatchOperation::eBatchOperation::DELETE:
            j = "DELETE";
            break;
    }
}

void from_json(const nlohmann::json& j, BatchOperation& o)
{
    
    auto s = j.get<std::string>();
    if (s == "UPDATE") {
     o.setValue(BatchOperation::eBatchOperation::UPDATE);
    } 
    else if (s == "UPSERT") {
     o.setValue(BatchOperation::eBatchOperation::UPSERT);
    } 
    else if (s == "CREATE") {
     o.setValue(BatchOperation::eBatchOperation::CREATE);
    } 
    else if (s == "DELETE_DISCONTINUED") {
     o.setValue(BatchOperation::eBatchOperation::DELETE_DISCONTINUED);
    } 
    else if (s == "DELETE") {
     o.setValue(BatchOperation::eBatchOperation::DELETE);
    }  else {
     std::stringstream ss;
     ss << "Unexpected value " << s << " in json"
        << " cannot be converted to enum of type"
        << " BatchOperation::eBatchOperation";
     throw std::invalid_argument(ss.str());
    } 

}

BatchOperation::eBatchOperation BatchOperation::getValue() const
{
    return m_value;
}
void BatchOperation::setValue(BatchOperation::eBatchOperation value)
{
    m_value = value;
}

} // namespace org::openapitools::server::model

