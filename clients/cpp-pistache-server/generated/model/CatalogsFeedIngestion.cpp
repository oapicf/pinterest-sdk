/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsFeedIngestion.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsFeedIngestion::CatalogsFeedIngestion()
{
    m_Id = "";
    m_Feed_id = "";
    m_Created_at = "";
    
}

void CatalogsFeedIngestion::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsFeedIngestion::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsFeedIngestion::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsFeedIngestion" : pathPrefix;

                    
    return success;
}

bool CatalogsFeedIngestion::operator==(const CatalogsFeedIngestion& rhs) const
{
    return
    
    
    (getId() == rhs.getId())
     &&
    
    (getFeedId() == rhs.getFeedId())
     &&
    
    (getCreatedAt() == rhs.getCreatedAt())
     &&
    
    (getStatus() == rhs.getStatus())
    
    
    ;
}

bool CatalogsFeedIngestion::operator!=(const CatalogsFeedIngestion& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsFeedIngestion& o)
{
    j = nlohmann::json::object();
    j["id"] = o.m_Id;
    j["feed_id"] = o.m_Feed_id;
    j["created_at"] = o.m_Created_at;
    j["status"] = o.m_Status;
    
}

void from_json(const nlohmann::json& j, CatalogsFeedIngestion& o)
{
    j.at("id").get_to(o.m_Id);
    j.at("feed_id").get_to(o.m_Feed_id);
    j.at("created_at").get_to(o.m_Created_at);
    j.at("status").get_to(o.m_Status);
    
}

std::string CatalogsFeedIngestion::getId() const
{
    return m_Id;
}
void CatalogsFeedIngestion::setId(std::string const& value)
{
    m_Id = value;
}
std::string CatalogsFeedIngestion::getFeedId() const
{
    return m_Feed_id;
}
void CatalogsFeedIngestion::setFeedId(std::string const& value)
{
    m_Feed_id = value;
}
std::string CatalogsFeedIngestion::getCreatedAt() const
{
    return m_Created_at;
}
void CatalogsFeedIngestion::setCreatedAt(std::string const& value)
{
    m_Created_at = value;
}
org::openapitools::server::model::CatalogsFeedProcessingStatus CatalogsFeedIngestion::getStatus() const
{
    return m_Status;
}
void CatalogsFeedIngestion::setStatus(org::openapitools::server::model::CatalogsFeedProcessingStatus const& value)
{
    m_Status = value;
}


} // namespace org::openapitools::server::model

