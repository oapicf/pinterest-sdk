/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "LeadFormCommon_policy_links_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

LeadFormCommon_policy_links_inner::LeadFormCommon_policy_links_inner()
{
    m_Label = "";
    m_LabelIsSet = false;
    m_Link = "";
    m_LinkIsSet = false;
    
}

void LeadFormCommon_policy_links_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool LeadFormCommon_policy_links_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool LeadFormCommon_policy_links_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "LeadFormCommon_policy_links_inner" : pathPrefix;

            
    return success;
}

bool LeadFormCommon_policy_links_inner::operator==(const LeadFormCommon_policy_links_inner& rhs) const
{
    return
    
    
    
    ((!labelIsSet() && !rhs.labelIsSet()) || (labelIsSet() && rhs.labelIsSet() && getLabel() == rhs.getLabel())) &&
    
    
    ((!linkIsSet() && !rhs.linkIsSet()) || (linkIsSet() && rhs.linkIsSet() && getLink() == rhs.getLink()))
    
    ;
}

bool LeadFormCommon_policy_links_inner::operator!=(const LeadFormCommon_policy_links_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const LeadFormCommon_policy_links_inner& o)
{
    j = nlohmann::json::object();
    if(o.labelIsSet())
        j["label"] = o.m_Label;
    if(o.linkIsSet())
        j["link"] = o.m_Link;
    
}

void from_json(const nlohmann::json& j, LeadFormCommon_policy_links_inner& o)
{
    if(j.find("label") != j.end())
    {
        j.at("label").get_to(o.m_Label);
        o.m_LabelIsSet = true;
    } 
    if(j.find("link") != j.end())
    {
        j.at("link").get_to(o.m_Link);
        o.m_LinkIsSet = true;
    } 
    
}

std::string LeadFormCommon_policy_links_inner::getLabel() const
{
    return m_Label;
}
void LeadFormCommon_policy_links_inner::setLabel(std::string const& value)
{
    m_Label = value;
    m_LabelIsSet = true;
}
bool LeadFormCommon_policy_links_inner::labelIsSet() const
{
    return m_LabelIsSet;
}
void LeadFormCommon_policy_links_inner::unsetLabel()
{
    m_LabelIsSet = false;
}
std::string LeadFormCommon_policy_links_inner::getLink() const
{
    return m_Link;
}
void LeadFormCommon_policy_links_inner::setLink(std::string const& value)
{
    m_Link = value;
    m_LinkIsSet = true;
}
bool LeadFormCommon_policy_links_inner::linkIsSet() const
{
    return m_LinkIsSet;
}
void LeadFormCommon_policy_links_inner::unsetLink()
{
    m_LinkIsSet = false;
}


} // namespace org::openapitools::server::model

