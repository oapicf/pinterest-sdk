/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsProductGroupFilterKeys.h
 *
 * 
 */

#ifndef CatalogsProductGroupFilterKeys_H_
#define CatalogsProductGroupFilterKeys_H_


#include "MinPriceFilter.h"
#include "GoogleProductCategory0Filter.h"
#include "GoogleProductCategory6Filter.h"
#include "CustomLabel3Filter.h"
#include "AvailabilityFilter.h"
#include "ProductType4Filter.h"
#include "GoogleProductCategory3Filter.h"
#include "ProductType0Filter.h"
#include "ProductGroupReferenceFilter.h"
#include "CustomLabel4Filter.h"
#include "CatalogsProductGroupCurrencyCriteria.h"
#include "GoogleProductCategory5Filter.h"
#include "BrandFilter.h"
#include "CustomLabel1Filter.h"
#include "GenderFilter.h"
#include "GoogleProductCategory2Filter.h"
#include "CatalogsProductGroupPricingCriteria.h"
#include "CatalogsProductGroupMultipleGenderCriteria.h"
#include "ProductType2Filter.h"
#include "GoogleProductCategory4Filter.h"
#include "ConditionFilter.h"
#include "CatalogsProductGroupMultipleStringListCriteria.h"
#include "CurrencyFilter.h"
#include "ItemIdFilter.h"
#include "CatalogsProductGroupMultipleMediaTypesCriteria.h"
#include "ItemGroupIdFilter.h"
#include "CatalogsProductGroupMultipleStringCriteria.h"
#include "CustomLabel2Filter.h"
#include "MediaTypeFilter.h"
#include "ProductType3Filter.h"
#include "MaxPriceFilter.h"
#include "ProductType1Filter.h"
#include "CustomLabel0Filter.h"
#include "GoogleProductCategory1Filter.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsProductGroupFilterKeys
{
public:
    CatalogsProductGroupFilterKeys();
    virtual ~CatalogsProductGroupFilterKeys() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsProductGroupFilterKeys& rhs) const;
    bool operator!=(const CatalogsProductGroupFilterKeys& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsProductGroupFilterKeys members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupPricingCriteria getMINPRICE() const;
    void setMINPRICE(org::openapitools::server::model::CatalogsProductGroupPricingCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupPricingCriteria getMAXPRICE() const;
    void setMAXPRICE(org::openapitools::server::model::CatalogsProductGroupPricingCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupCurrencyCriteria getCURRENCY() const;
    void setCURRENCY(org::openapitools::server::model::CatalogsProductGroupCurrencyCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getITEMID() const;
    void setITEMID(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getAVAILABILITY() const;
    void setAVAILABILITY(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getBRAND() const;
    void setBRAND(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getCONDITION() const;
    void setCONDITION(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL0() const;
    void setCUSTOMLABEL0(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL1() const;
    void setCUSTOMLABEL1(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL2() const;
    void setCUSTOMLABEL2(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL3() const;
    void setCUSTOMLABEL3(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL4() const;
    void setCUSTOMLABEL4(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getITEMGROUPID() const;
    void setITEMGROUPID(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleGenderCriteria getGENDER() const;
    void setGENDER(org::openapitools::server::model::CatalogsProductGroupMultipleGenderCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleMediaTypesCriteria getMEDIATYPE() const;
    void setMEDIATYPE(org::openapitools::server::model::CatalogsProductGroupMultipleMediaTypesCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getPRODUCTTYPE4() const;
    void setPRODUCTTYPE4(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getPRODUCTTYPE3() const;
    void setPRODUCTTYPE3(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getPRODUCTTYPE2() const;
    void setPRODUCTTYPE2(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getPRODUCTTYPE1() const;
    void setPRODUCTTYPE1(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getPRODUCTTYPE0() const;
    void setPRODUCTTYPE0(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY6() const;
    void setGOOGLEPRODUCTCATEGORY6(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY5() const;
    void setGOOGLEPRODUCTCATEGORY5(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY4() const;
    void setGOOGLEPRODUCTCATEGORY4(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY3() const;
    void setGOOGLEPRODUCTCATEGORY3(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY2() const;
    void setGOOGLEPRODUCTCATEGORY2(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY1() const;
    void setGOOGLEPRODUCTCATEGORY1(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY0() const;
    void setGOOGLEPRODUCTCATEGORY0(org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria getPRODUCTGROUP() const;
    void setPRODUCTGROUP(org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria const& value);

    friend  void to_json(nlohmann::json& j, const CatalogsProductGroupFilterKeys& o);
    friend  void from_json(const nlohmann::json& j, CatalogsProductGroupFilterKeys& o);
protected:
    org::openapitools::server::model::CatalogsProductGroupPricingCriteria m_MIN_PRICE;

    org::openapitools::server::model::CatalogsProductGroupPricingCriteria m_MAX_PRICE;

    org::openapitools::server::model::CatalogsProductGroupCurrencyCriteria m_CURRENCY;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_ITEM_ID;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_AVAILABILITY;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_BRAND;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_CONDITION;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_0;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_1;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_2;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_3;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_4;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_ITEM_GROUP_ID;

    org::openapitools::server::model::CatalogsProductGroupMultipleGenderCriteria m_GENDER;

    org::openapitools::server::model::CatalogsProductGroupMultipleMediaTypesCriteria m_MEDIA_TYPE;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_PRODUCT_TYPE_4;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_PRODUCT_TYPE_3;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_PRODUCT_TYPE_2;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_PRODUCT_TYPE_1;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_PRODUCT_TYPE_0;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_6;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_5;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_4;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_3;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_2;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_1;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_0;

    org::openapitools::server::model::CatalogsProductGroupMultipleStringCriteria m_PRODUCT_GROUP;

    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsProductGroupFilterKeys_H_ */
