/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "BulkUpsertStatusResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

BulkUpsertStatusResponse::BulkUpsertStatusResponse()
{
    m_StatusIsSet = false;
    m_Result_url = "";
    m_Result_urlIsSet = false;
    
}

void BulkUpsertStatusResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool BulkUpsertStatusResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool BulkUpsertStatusResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "BulkUpsertStatusResponse" : pathPrefix;

            
    return success;
}

bool BulkUpsertStatusResponse::operator==(const BulkUpsertStatusResponse& rhs) const
{
    return
    
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!resultUrlIsSet() && !rhs.resultUrlIsSet()) || (resultUrlIsSet() && rhs.resultUrlIsSet() && getResultUrl() == rhs.getResultUrl()))
    
    ;
}

bool BulkUpsertStatusResponse::operator!=(const BulkUpsertStatusResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const BulkUpsertStatusResponse& o)
{
    j = nlohmann::json::object();
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.resultUrlIsSet())
        j["result_url"] = o.m_Result_url;
    
}

void from_json(const nlohmann::json& j, BulkUpsertStatusResponse& o)
{
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("result_url") != j.end())
    {
        j.at("result_url").get_to(o.m_Result_url);
        o.m_Result_urlIsSet = true;
    } 
    
}

org::openapitools::server::model::BulkUpsertStatus BulkUpsertStatusResponse::getStatus() const
{
    return m_Status;
}
void BulkUpsertStatusResponse::setStatus(org::openapitools::server::model::BulkUpsertStatus const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool BulkUpsertStatusResponse::statusIsSet() const
{
    return m_StatusIsSet;
}
void BulkUpsertStatusResponse::unsetStatus()
{
    m_StatusIsSet = false;
}
std::string BulkUpsertStatusResponse::getResultUrl() const
{
    return m_Result_url;
}
void BulkUpsertStatusResponse::setResultUrl(std::string const& value)
{
    m_Result_url = value;
    m_Result_urlIsSet = true;
}
bool BulkUpsertStatusResponse::resultUrlIsSet() const
{
    return m_Result_urlIsSet;
}
void BulkUpsertStatusResponse::unsetResult_url()
{
    m_Result_urlIsSet = false;
}


} // namespace org::openapitools::server::model

