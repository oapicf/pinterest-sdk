/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsHotelGuestRatings.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsHotelGuestRatings::CatalogsHotelGuestRatings()
{
    m_Score = 0.0;
    m_ScoreIsSet = false;
    m_Number_of_reviewers = 0;
    m_Number_of_reviewersIsSet = false;
    m_Max_score = 0.0;
    m_Max_scoreIsSet = false;
    m_Rating_system = "";
    m_Rating_systemIsSet = false;
    
}

void CatalogsHotelGuestRatings::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsHotelGuestRatings::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsHotelGuestRatings::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsHotelGuestRatings" : pathPrefix;

                    
    return success;
}

bool CatalogsHotelGuestRatings::operator==(const CatalogsHotelGuestRatings& rhs) const
{
    return
    
    
    
    ((!scoreIsSet() && !rhs.scoreIsSet()) || (scoreIsSet() && rhs.scoreIsSet() && getScore() == rhs.getScore())) &&
    
    
    ((!numberOfReviewersIsSet() && !rhs.numberOfReviewersIsSet()) || (numberOfReviewersIsSet() && rhs.numberOfReviewersIsSet() && getNumberOfReviewers() == rhs.getNumberOfReviewers())) &&
    
    
    ((!maxScoreIsSet() && !rhs.maxScoreIsSet()) || (maxScoreIsSet() && rhs.maxScoreIsSet() && getMaxScore() == rhs.getMaxScore())) &&
    
    
    ((!ratingSystemIsSet() && !rhs.ratingSystemIsSet()) || (ratingSystemIsSet() && rhs.ratingSystemIsSet() && getRatingSystem() == rhs.getRatingSystem()))
    
    ;
}

bool CatalogsHotelGuestRatings::operator!=(const CatalogsHotelGuestRatings& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsHotelGuestRatings& o)
{
    j = nlohmann::json::object();
    if(o.scoreIsSet())
        j["score"] = o.m_Score;
    if(o.numberOfReviewersIsSet())
        j["number_of_reviewers"] = o.m_Number_of_reviewers;
    if(o.maxScoreIsSet())
        j["max_score"] = o.m_Max_score;
    if(o.ratingSystemIsSet())
        j["rating_system"] = o.m_Rating_system;
    
}

void from_json(const nlohmann::json& j, CatalogsHotelGuestRatings& o)
{
    if(j.find("score") != j.end())
    {
        j.at("score").get_to(o.m_Score);
        o.m_ScoreIsSet = true;
    } 
    if(j.find("number_of_reviewers") != j.end())
    {
        j.at("number_of_reviewers").get_to(o.m_Number_of_reviewers);
        o.m_Number_of_reviewersIsSet = true;
    } 
    if(j.find("max_score") != j.end())
    {
        j.at("max_score").get_to(o.m_Max_score);
        o.m_Max_scoreIsSet = true;
    } 
    if(j.find("rating_system") != j.end())
    {
        j.at("rating_system").get_to(o.m_Rating_system);
        o.m_Rating_systemIsSet = true;
    } 
    
}

double CatalogsHotelGuestRatings::getScore() const
{
    return m_Score;
}
void CatalogsHotelGuestRatings::setScore(double const value)
{
    m_Score = value;
    m_ScoreIsSet = true;
}
bool CatalogsHotelGuestRatings::scoreIsSet() const
{
    return m_ScoreIsSet;
}
void CatalogsHotelGuestRatings::unsetScore()
{
    m_ScoreIsSet = false;
}
int32_t CatalogsHotelGuestRatings::getNumberOfReviewers() const
{
    return m_Number_of_reviewers;
}
void CatalogsHotelGuestRatings::setNumberOfReviewers(int32_t const value)
{
    m_Number_of_reviewers = value;
    m_Number_of_reviewersIsSet = true;
}
bool CatalogsHotelGuestRatings::numberOfReviewersIsSet() const
{
    return m_Number_of_reviewersIsSet;
}
void CatalogsHotelGuestRatings::unsetNumber_of_reviewers()
{
    m_Number_of_reviewersIsSet = false;
}
double CatalogsHotelGuestRatings::getMaxScore() const
{
    return m_Max_score;
}
void CatalogsHotelGuestRatings::setMaxScore(double const value)
{
    m_Max_score = value;
    m_Max_scoreIsSet = true;
}
bool CatalogsHotelGuestRatings::maxScoreIsSet() const
{
    return m_Max_scoreIsSet;
}
void CatalogsHotelGuestRatings::unsetMax_score()
{
    m_Max_scoreIsSet = false;
}
std::string CatalogsHotelGuestRatings::getRatingSystem() const
{
    return m_Rating_system;
}
void CatalogsHotelGuestRatings::setRatingSystem(std::string const& value)
{
    m_Rating_system = value;
    m_Rating_systemIsSet = true;
}
bool CatalogsHotelGuestRatings::ratingSystemIsSet() const
{
    return m_Rating_systemIsSet;
}
void CatalogsHotelGuestRatings::unsetRating_system()
{
    m_Rating_systemIsSet = false;
}


} // namespace org::openapitools::server::model

