/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "UserWebsiteVerifyRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

UserWebsiteVerifyRequest::UserWebsiteVerifyRequest()
{
    m_Website = "";
    m_WebsiteIsSet = false;
    m_Verification_method = "METATAG";
    m_Verification_methodIsSet = false;
    
}

void UserWebsiteVerifyRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool UserWebsiteVerifyRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool UserWebsiteVerifyRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "UserWebsiteVerifyRequest" : pathPrefix;

            
    return success;
}

bool UserWebsiteVerifyRequest::operator==(const UserWebsiteVerifyRequest& rhs) const
{
    return
    
    
    
    ((!websiteIsSet() && !rhs.websiteIsSet()) || (websiteIsSet() && rhs.websiteIsSet() && getWebsite() == rhs.getWebsite())) &&
    
    
    ((!verificationMethodIsSet() && !rhs.verificationMethodIsSet()) || (verificationMethodIsSet() && rhs.verificationMethodIsSet() && getVerificationMethod() == rhs.getVerificationMethod()))
    
    ;
}

bool UserWebsiteVerifyRequest::operator!=(const UserWebsiteVerifyRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const UserWebsiteVerifyRequest& o)
{
    j = nlohmann::json::object();
    if(o.websiteIsSet())
        j["website"] = o.m_Website;
    if(o.verificationMethodIsSet())
        j["verification_method"] = o.m_Verification_method;
    
}

void from_json(const nlohmann::json& j, UserWebsiteVerifyRequest& o)
{
    if(j.find("website") != j.end())
    {
        j.at("website").get_to(o.m_Website);
        o.m_WebsiteIsSet = true;
    } 
    if(j.find("verification_method") != j.end())
    {
        j.at("verification_method").get_to(o.m_Verification_method);
        o.m_Verification_methodIsSet = true;
    } 
    
}

std::string UserWebsiteVerifyRequest::getWebsite() const
{
    return m_Website;
}
void UserWebsiteVerifyRequest::setWebsite(std::string const& value)
{
    m_Website = value;
    m_WebsiteIsSet = true;
}
bool UserWebsiteVerifyRequest::websiteIsSet() const
{
    return m_WebsiteIsSet;
}
void UserWebsiteVerifyRequest::unsetWebsite()
{
    m_WebsiteIsSet = false;
}
std::string UserWebsiteVerifyRequest::getVerificationMethod() const
{
    return m_Verification_method;
}
void UserWebsiteVerifyRequest::setVerificationMethod(std::string const& value)
{
    m_Verification_method = value;
    m_Verification_methodIsSet = true;
}
bool UserWebsiteVerifyRequest::verificationMethodIsSet() const
{
    return m_Verification_methodIsSet;
}
void UserWebsiteVerifyRequest::unsetVerification_method()
{
    m_Verification_methodIsSet = false;
}


} // namespace org::openapitools::server::model

