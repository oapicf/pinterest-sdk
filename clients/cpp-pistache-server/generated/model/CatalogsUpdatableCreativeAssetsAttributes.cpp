/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsUpdatableCreativeAssetsAttributes.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsUpdatableCreativeAssetsAttributes::CatalogsUpdatableCreativeAssetsAttributes()
{
    m_Title = "";
    m_TitleIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m_Link = "";
    m_LinkIsSet = false;
    m_Ios_deep_link = "";
    m_Ios_deep_linkIsSet = false;
    m_Android_deep_link = "";
    m_Android_deep_linkIsSet = false;
    m_Google_product_category = "";
    m_Google_product_categoryIsSet = false;
    m_Custom_label_0 = "";
    m_Custom_label_0IsSet = false;
    m_Custom_label_1 = "";
    m_Custom_label_1IsSet = false;
    m_Custom_label_2 = "";
    m_Custom_label_2IsSet = false;
    m_Custom_label_3 = "";
    m_Custom_label_3IsSet = false;
    m_Custom_label_4 = "";
    m_Custom_label_4IsSet = false;
    m_Visibility = "";
    m_VisibilityIsSet = false;
    
}

void CatalogsUpdatableCreativeAssetsAttributes::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsUpdatableCreativeAssetsAttributes::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsUpdatableCreativeAssetsAttributes::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsUpdatableCreativeAssetsAttributes" : pathPrefix;

                                                    
    return success;
}

bool CatalogsUpdatableCreativeAssetsAttributes::operator==(const CatalogsUpdatableCreativeAssetsAttributes& rhs) const
{
    return
    
    
    
    ((!titleIsSet() && !rhs.titleIsSet()) || (titleIsSet() && rhs.titleIsSet() && getTitle() == rhs.getTitle())) &&
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    
    ((!linkIsSet() && !rhs.linkIsSet()) || (linkIsSet() && rhs.linkIsSet() && getLink() == rhs.getLink())) &&
    
    
    ((!iosDeepLinkIsSet() && !rhs.iosDeepLinkIsSet()) || (iosDeepLinkIsSet() && rhs.iosDeepLinkIsSet() && getIosDeepLink() == rhs.getIosDeepLink())) &&
    
    
    ((!androidDeepLinkIsSet() && !rhs.androidDeepLinkIsSet()) || (androidDeepLinkIsSet() && rhs.androidDeepLinkIsSet() && getAndroidDeepLink() == rhs.getAndroidDeepLink())) &&
    
    
    ((!googleProductCategoryIsSet() && !rhs.googleProductCategoryIsSet()) || (googleProductCategoryIsSet() && rhs.googleProductCategoryIsSet() && getGoogleProductCategory() == rhs.getGoogleProductCategory())) &&
    
    
    ((!customLabel0IsSet() && !rhs.customLabel0IsSet()) || (customLabel0IsSet() && rhs.customLabel0IsSet() && getCustomLabel0() == rhs.getCustomLabel0())) &&
    
    
    ((!customLabel1IsSet() && !rhs.customLabel1IsSet()) || (customLabel1IsSet() && rhs.customLabel1IsSet() && getCustomLabel1() == rhs.getCustomLabel1())) &&
    
    
    ((!customLabel2IsSet() && !rhs.customLabel2IsSet()) || (customLabel2IsSet() && rhs.customLabel2IsSet() && getCustomLabel2() == rhs.getCustomLabel2())) &&
    
    
    ((!customLabel3IsSet() && !rhs.customLabel3IsSet()) || (customLabel3IsSet() && rhs.customLabel3IsSet() && getCustomLabel3() == rhs.getCustomLabel3())) &&
    
    
    ((!customLabel4IsSet() && !rhs.customLabel4IsSet()) || (customLabel4IsSet() && rhs.customLabel4IsSet() && getCustomLabel4() == rhs.getCustomLabel4())) &&
    
    
    ((!visibilityIsSet() && !rhs.visibilityIsSet()) || (visibilityIsSet() && rhs.visibilityIsSet() && getVisibility() == rhs.getVisibility()))
    
    ;
}

bool CatalogsUpdatableCreativeAssetsAttributes::operator!=(const CatalogsUpdatableCreativeAssetsAttributes& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsUpdatableCreativeAssetsAttributes& o)
{
    j = nlohmann::json::object();
    if(o.titleIsSet())
        j["title"] = o.m_Title;
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.linkIsSet())
        j["link"] = o.m_Link;
    if(o.iosDeepLinkIsSet())
        j["ios_deep_link"] = o.m_Ios_deep_link;
    if(o.androidDeepLinkIsSet())
        j["android_deep_link"] = o.m_Android_deep_link;
    if(o.googleProductCategoryIsSet())
        j["google_product_category"] = o.m_Google_product_category;
    if(o.customLabel0IsSet())
        j["custom_label_0"] = o.m_Custom_label_0;
    if(o.customLabel1IsSet())
        j["custom_label_1"] = o.m_Custom_label_1;
    if(o.customLabel2IsSet())
        j["custom_label_2"] = o.m_Custom_label_2;
    if(o.customLabel3IsSet())
        j["custom_label_3"] = o.m_Custom_label_3;
    if(o.customLabel4IsSet())
        j["custom_label_4"] = o.m_Custom_label_4;
    if(o.visibilityIsSet())
        j["visibility"] = o.m_Visibility;
    
}

void from_json(const nlohmann::json& j, CatalogsUpdatableCreativeAssetsAttributes& o)
{
    if(j.find("title") != j.end())
    {
        j.at("title").get_to(o.m_Title);
        o.m_TitleIsSet = true;
    } 
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("link") != j.end())
    {
        j.at("link").get_to(o.m_Link);
        o.m_LinkIsSet = true;
    } 
    if(j.find("ios_deep_link") != j.end())
    {
        j.at("ios_deep_link").get_to(o.m_Ios_deep_link);
        o.m_Ios_deep_linkIsSet = true;
    } 
    if(j.find("android_deep_link") != j.end())
    {
        j.at("android_deep_link").get_to(o.m_Android_deep_link);
        o.m_Android_deep_linkIsSet = true;
    } 
    if(j.find("google_product_category") != j.end())
    {
        j.at("google_product_category").get_to(o.m_Google_product_category);
        o.m_Google_product_categoryIsSet = true;
    } 
    if(j.find("custom_label_0") != j.end())
    {
        j.at("custom_label_0").get_to(o.m_Custom_label_0);
        o.m_Custom_label_0IsSet = true;
    } 
    if(j.find("custom_label_1") != j.end())
    {
        j.at("custom_label_1").get_to(o.m_Custom_label_1);
        o.m_Custom_label_1IsSet = true;
    } 
    if(j.find("custom_label_2") != j.end())
    {
        j.at("custom_label_2").get_to(o.m_Custom_label_2);
        o.m_Custom_label_2IsSet = true;
    } 
    if(j.find("custom_label_3") != j.end())
    {
        j.at("custom_label_3").get_to(o.m_Custom_label_3);
        o.m_Custom_label_3IsSet = true;
    } 
    if(j.find("custom_label_4") != j.end())
    {
        j.at("custom_label_4").get_to(o.m_Custom_label_4);
        o.m_Custom_label_4IsSet = true;
    } 
    if(j.find("visibility") != j.end())
    {
        j.at("visibility").get_to(o.m_Visibility);
        o.m_VisibilityIsSet = true;
    } 
    
}

std::string CatalogsUpdatableCreativeAssetsAttributes::getTitle() const
{
    return m_Title;
}
void CatalogsUpdatableCreativeAssetsAttributes::setTitle(std::string const& value)
{
    m_Title = value;
    m_TitleIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::titleIsSet() const
{
    return m_TitleIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetTitle()
{
    m_TitleIsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getDescription() const
{
    return m_Description;
}
void CatalogsUpdatableCreativeAssetsAttributes::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetDescription()
{
    m_DescriptionIsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getLink() const
{
    return m_Link;
}
void CatalogsUpdatableCreativeAssetsAttributes::setLink(std::string const& value)
{
    m_Link = value;
    m_LinkIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::linkIsSet() const
{
    return m_LinkIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetLink()
{
    m_LinkIsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getIosDeepLink() const
{
    return m_Ios_deep_link;
}
void CatalogsUpdatableCreativeAssetsAttributes::setIosDeepLink(std::string const& value)
{
    m_Ios_deep_link = value;
    m_Ios_deep_linkIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::iosDeepLinkIsSet() const
{
    return m_Ios_deep_linkIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetIos_deep_link()
{
    m_Ios_deep_linkIsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getAndroidDeepLink() const
{
    return m_Android_deep_link;
}
void CatalogsUpdatableCreativeAssetsAttributes::setAndroidDeepLink(std::string const& value)
{
    m_Android_deep_link = value;
    m_Android_deep_linkIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::androidDeepLinkIsSet() const
{
    return m_Android_deep_linkIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetAndroid_deep_link()
{
    m_Android_deep_linkIsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getGoogleProductCategory() const
{
    return m_Google_product_category;
}
void CatalogsUpdatableCreativeAssetsAttributes::setGoogleProductCategory(std::string const& value)
{
    m_Google_product_category = value;
    m_Google_product_categoryIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::googleProductCategoryIsSet() const
{
    return m_Google_product_categoryIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetGoogle_product_category()
{
    m_Google_product_categoryIsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getCustomLabel0() const
{
    return m_Custom_label_0;
}
void CatalogsUpdatableCreativeAssetsAttributes::setCustomLabel0(std::string const& value)
{
    m_Custom_label_0 = value;
    m_Custom_label_0IsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::customLabel0IsSet() const
{
    return m_Custom_label_0IsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetCustom_label_0()
{
    m_Custom_label_0IsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getCustomLabel1() const
{
    return m_Custom_label_1;
}
void CatalogsUpdatableCreativeAssetsAttributes::setCustomLabel1(std::string const& value)
{
    m_Custom_label_1 = value;
    m_Custom_label_1IsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::customLabel1IsSet() const
{
    return m_Custom_label_1IsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetCustom_label_1()
{
    m_Custom_label_1IsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getCustomLabel2() const
{
    return m_Custom_label_2;
}
void CatalogsUpdatableCreativeAssetsAttributes::setCustomLabel2(std::string const& value)
{
    m_Custom_label_2 = value;
    m_Custom_label_2IsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::customLabel2IsSet() const
{
    return m_Custom_label_2IsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetCustom_label_2()
{
    m_Custom_label_2IsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getCustomLabel3() const
{
    return m_Custom_label_3;
}
void CatalogsUpdatableCreativeAssetsAttributes::setCustomLabel3(std::string const& value)
{
    m_Custom_label_3 = value;
    m_Custom_label_3IsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::customLabel3IsSet() const
{
    return m_Custom_label_3IsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetCustom_label_3()
{
    m_Custom_label_3IsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getCustomLabel4() const
{
    return m_Custom_label_4;
}
void CatalogsUpdatableCreativeAssetsAttributes::setCustomLabel4(std::string const& value)
{
    m_Custom_label_4 = value;
    m_Custom_label_4IsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::customLabel4IsSet() const
{
    return m_Custom_label_4IsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetCustom_label_4()
{
    m_Custom_label_4IsSet = false;
}
std::string CatalogsUpdatableCreativeAssetsAttributes::getVisibility() const
{
    return m_Visibility;
}
void CatalogsUpdatableCreativeAssetsAttributes::setVisibility(std::string const& value)
{
    m_Visibility = value;
    m_VisibilityIsSet = true;
}
bool CatalogsUpdatableCreativeAssetsAttributes::visibilityIsSet() const
{
    return m_VisibilityIsSet;
}
void CatalogsUpdatableCreativeAssetsAttributes::unsetVisibility()
{
    m_VisibilityIsSet = false;
}


} // namespace org::openapitools::server::model

