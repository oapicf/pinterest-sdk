/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsHotelProductGroupProductCounts.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsHotelProductGroupProductCounts::CatalogsHotelProductGroupProductCounts()
{
    m_Catalog_type = "";
    m_Total = 0.0;
    
}

void CatalogsHotelProductGroupProductCounts::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsHotelProductGroupProductCounts::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsHotelProductGroupProductCounts::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsHotelProductGroupProductCounts" : pathPrefix;

             
    
    /* Total */ {
        const double& value = m_Total;
        const std::string currentValuePath = _pathPrefix + ".total";
                
        
        if (value < 0)
        {
            success = false;
            msg << currentValuePath << ": must be greater than or equal to 0;";
        }

    }
    
    return success;
}

bool CatalogsHotelProductGroupProductCounts::operator==(const CatalogsHotelProductGroupProductCounts& rhs) const
{
    return
    
    
    (getCatalogType() == rhs.getCatalogType())
     &&
    
    (getTotal() == rhs.getTotal())
    
    
    ;
}

bool CatalogsHotelProductGroupProductCounts::operator!=(const CatalogsHotelProductGroupProductCounts& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsHotelProductGroupProductCounts& o)
{
    j = nlohmann::json::object();
    j["catalog_type"] = o.m_Catalog_type;
    j["total"] = o.m_Total;
    
}

void from_json(const nlohmann::json& j, CatalogsHotelProductGroupProductCounts& o)
{
    j.at("catalog_type").get_to(o.m_Catalog_type);
    j.at("total").get_to(o.m_Total);
    
}

std::string CatalogsHotelProductGroupProductCounts::getCatalogType() const
{
    return m_Catalog_type;
}
void CatalogsHotelProductGroupProductCounts::setCatalogType(std::string const& value)
{
    m_Catalog_type = value;
}
double CatalogsHotelProductGroupProductCounts::getTotal() const
{
    return m_Total;
}
void CatalogsHotelProductGroupProductCounts::setTotal(double const value)
{
    m_Total = value;
}


} // namespace org::openapitools::server::model

