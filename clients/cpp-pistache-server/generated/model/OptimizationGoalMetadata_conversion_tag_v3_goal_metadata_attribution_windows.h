/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows.h
 *
 * 
 */

#ifndef OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows_H_
#define OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows
{
public:
    OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows();
    virtual ~OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows& rhs) const;
    bool operator!=(const OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows& rhs) const;

    /////////////////////////////////////////////
    /// OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows members

    /// <summary>
    /// 
    /// </summary>
    int32_t getClickWindowDays() const;
    void setClickWindowDays(int32_t const value);
    bool clickWindowDaysIsSet() const;
    void unsetClick_window_days();
    /// <summary>
    /// 
    /// </summary>
    int32_t getEngagementWindowDays() const;
    void setEngagementWindowDays(int32_t const value);
    bool engagementWindowDaysIsSet() const;
    void unsetEngagement_window_days();
    /// <summary>
    /// 
    /// </summary>
    int32_t getViewWindowDays() const;
    void setViewWindowDays(int32_t const value);
    bool viewWindowDaysIsSet() const;
    void unsetView_window_days();

    friend  void to_json(nlohmann::json& j, const OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows& o);
    friend  void from_json(const nlohmann::json& j, OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows& o);
protected:
    int32_t m_Click_window_days;
    bool m_Click_window_daysIsSet;
    int32_t m_Engagement_window_days;
    bool m_Engagement_window_daysIsSet;
    int32_t m_View_window_days;
    bool m_View_window_daysIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows_H_ */
