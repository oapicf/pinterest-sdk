/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CustomerListUpdateRequest.h
 *
 * 
 */

#ifndef CustomerListUpdateRequest_H_
#define CustomerListUpdateRequest_H_


#include <string>
#include "Exception.h"
#include "UserListOperationType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CustomerListUpdateRequest
{
public:
    CustomerListUpdateRequest();
    virtual ~CustomerListUpdateRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CustomerListUpdateRequest& rhs) const;
    bool operator!=(const CustomerListUpdateRequest& rhs) const;

    /////////////////////////////////////////////
    /// CustomerListUpdateRequest members

    /// <summary>
    /// Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
    /// </summary>
    std::string getRecords() const;
    void setRecords(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::UserListOperationType getOperationType() const;
    void setOperationType(org::openapitools::server::model::UserListOperationType const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::Exception getExceptions() const;
    void setExceptions(org::openapitools::server::model::Exception const& value);
    bool exceptionsIsSet() const;
    void unsetExceptions();

    friend  void to_json(nlohmann::json& j, const CustomerListUpdateRequest& o);
    friend  void from_json(const nlohmann::json& j, CustomerListUpdateRequest& o);
protected:
    std::string m_Records;

    org::openapitools::server::model::UserListOperationType m_Operation_type;

    org::openapitools::server::model::Exception m_Exceptions;
    bool m_ExceptionsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CustomerListUpdateRequest_H_ */
