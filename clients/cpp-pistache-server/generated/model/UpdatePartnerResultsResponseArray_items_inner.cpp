/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "UpdatePartnerResultsResponseArray_items_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

UpdatePartnerResultsResponseArray_items_inner::UpdatePartnerResultsResponseArray_items_inner()
{
    m_ExceptionIsSet = false;
    m_Member_or_partner_id = "";
    m_Member_or_partner_idIsSet = false;
    
}

void UpdatePartnerResultsResponseArray_items_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool UpdatePartnerResultsResponseArray_items_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool UpdatePartnerResultsResponseArray_items_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "UpdatePartnerResultsResponseArray_items_inner" : pathPrefix;

             
    if (memberOrPartnerIdIsSet())
    {
        const std::string& value = m_Member_or_partner_id;
        const std::string currentValuePath = _pathPrefix + ".memberOrPartnerId";
                
        
        if (value.length() > 18)
        {
            success = false;
            msg << currentValuePath << ": must be at most 18 characters long;";
        }

    }
    
    return success;
}

bool UpdatePartnerResultsResponseArray_items_inner::operator==(const UpdatePartnerResultsResponseArray_items_inner& rhs) const
{
    return
    
    
    
    ((!exceptionIsSet() && !rhs.exceptionIsSet()) || (exceptionIsSet() && rhs.exceptionIsSet() && getException() == rhs.getException())) &&
    
    
    ((!memberOrPartnerIdIsSet() && !rhs.memberOrPartnerIdIsSet()) || (memberOrPartnerIdIsSet() && rhs.memberOrPartnerIdIsSet() && getMemberOrPartnerId() == rhs.getMemberOrPartnerId()))
    
    ;
}

bool UpdatePartnerResultsResponseArray_items_inner::operator!=(const UpdatePartnerResultsResponseArray_items_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const UpdatePartnerResultsResponseArray_items_inner& o)
{
    j = nlohmann::json::object();
    if(o.exceptionIsSet())
        j["exception"] = o.m_Exception;
    if(o.memberOrPartnerIdIsSet())
        j["member_or_partner_id"] = o.m_Member_or_partner_id;
    
}

void from_json(const nlohmann::json& j, UpdatePartnerResultsResponseArray_items_inner& o)
{
    if(j.find("exception") != j.end())
    {
        j.at("exception").get_to(o.m_Exception);
        o.m_ExceptionIsSet = true;
    } 
    if(j.find("member_or_partner_id") != j.end())
    {
        j.at("member_or_partner_id").get_to(o.m_Member_or_partner_id);
        o.m_Member_or_partner_idIsSet = true;
    } 
    
}

org::openapitools::server::model::BusinessAccessError UpdatePartnerResultsResponseArray_items_inner::getException() const
{
    return m_Exception;
}
void UpdatePartnerResultsResponseArray_items_inner::setException(org::openapitools::server::model::BusinessAccessError const& value)
{
    m_Exception = value;
    m_ExceptionIsSet = true;
}
bool UpdatePartnerResultsResponseArray_items_inner::exceptionIsSet() const
{
    return m_ExceptionIsSet;
}
void UpdatePartnerResultsResponseArray_items_inner::unsetException()
{
    m_ExceptionIsSet = false;
}
std::string UpdatePartnerResultsResponseArray_items_inner::getMemberOrPartnerId() const
{
    return m_Member_or_partner_id;
}
void UpdatePartnerResultsResponseArray_items_inner::setMemberOrPartnerId(std::string const& value)
{
    m_Member_or_partner_id = value;
    m_Member_or_partner_idIsSet = true;
}
bool UpdatePartnerResultsResponseArray_items_inner::memberOrPartnerIdIsSet() const
{
    return m_Member_or_partner_idIsSet;
}
void UpdatePartnerResultsResponseArray_items_inner::unsetMember_or_partner_id()
{
    m_Member_or_partner_idIsSet = false;
}


} // namespace org::openapitools::server::model

