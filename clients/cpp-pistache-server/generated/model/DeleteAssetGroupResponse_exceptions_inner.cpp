/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DeleteAssetGroupResponse_exceptions_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DeleteAssetGroupResponse_exceptions_inner::DeleteAssetGroupResponse_exceptions_inner()
{
    m_Code = 0;
    m_CodeIsSet = false;
    m_Message = "";
    m_MessageIsSet = false;
    m_Asset_group_id = "";
    m_Asset_group_idIsSet = false;
    
}

void DeleteAssetGroupResponse_exceptions_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DeleteAssetGroupResponse_exceptions_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DeleteAssetGroupResponse_exceptions_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DeleteAssetGroupResponse_exceptions_inner" : pathPrefix;

                
    return success;
}

bool DeleteAssetGroupResponse_exceptions_inner::operator==(const DeleteAssetGroupResponse_exceptions_inner& rhs) const
{
    return
    
    
    
    ((!codeIsSet() && !rhs.codeIsSet()) || (codeIsSet() && rhs.codeIsSet() && getCode() == rhs.getCode())) &&
    
    
    ((!messageIsSet() && !rhs.messageIsSet()) || (messageIsSet() && rhs.messageIsSet() && getMessage() == rhs.getMessage())) &&
    
    
    ((!assetGroupIdIsSet() && !rhs.assetGroupIdIsSet()) || (assetGroupIdIsSet() && rhs.assetGroupIdIsSet() && getAssetGroupId() == rhs.getAssetGroupId()))
    
    ;
}

bool DeleteAssetGroupResponse_exceptions_inner::operator!=(const DeleteAssetGroupResponse_exceptions_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DeleteAssetGroupResponse_exceptions_inner& o)
{
    j = nlohmann::json::object();
    if(o.codeIsSet())
        j["code"] = o.m_Code;
    if(o.messageIsSet())
        j["message"] = o.m_Message;
    if(o.assetGroupIdIsSet())
        j["asset_group_id"] = o.m_Asset_group_id;
    
}

void from_json(const nlohmann::json& j, DeleteAssetGroupResponse_exceptions_inner& o)
{
    if(j.find("code") != j.end())
    {
        j.at("code").get_to(o.m_Code);
        o.m_CodeIsSet = true;
    } 
    if(j.find("message") != j.end())
    {
        j.at("message").get_to(o.m_Message);
        o.m_MessageIsSet = true;
    } 
    if(j.find("asset_group_id") != j.end())
    {
        j.at("asset_group_id").get_to(o.m_Asset_group_id);
        o.m_Asset_group_idIsSet = true;
    } 
    
}

int32_t DeleteAssetGroupResponse_exceptions_inner::getCode() const
{
    return m_Code;
}
void DeleteAssetGroupResponse_exceptions_inner::setCode(int32_t const value)
{
    m_Code = value;
    m_CodeIsSet = true;
}
bool DeleteAssetGroupResponse_exceptions_inner::codeIsSet() const
{
    return m_CodeIsSet;
}
void DeleteAssetGroupResponse_exceptions_inner::unsetCode()
{
    m_CodeIsSet = false;
}
std::string DeleteAssetGroupResponse_exceptions_inner::getMessage() const
{
    return m_Message;
}
void DeleteAssetGroupResponse_exceptions_inner::setMessage(std::string const& value)
{
    m_Message = value;
    m_MessageIsSet = true;
}
bool DeleteAssetGroupResponse_exceptions_inner::messageIsSet() const
{
    return m_MessageIsSet;
}
void DeleteAssetGroupResponse_exceptions_inner::unsetMessage()
{
    m_MessageIsSet = false;
}
std::string DeleteAssetGroupResponse_exceptions_inner::getAssetGroupId() const
{
    return m_Asset_group_id;
}
void DeleteAssetGroupResponse_exceptions_inner::setAssetGroupId(std::string const& value)
{
    m_Asset_group_id = value;
    m_Asset_group_idIsSet = true;
}
bool DeleteAssetGroupResponse_exceptions_inner::assetGroupIdIsSet() const
{
    return m_Asset_group_idIsSet;
}
void DeleteAssetGroupResponse_exceptions_inner::unsetAsset_group_id()
{
    m_Asset_group_idIsSet = false;
}


} // namespace org::openapitools::server::model

