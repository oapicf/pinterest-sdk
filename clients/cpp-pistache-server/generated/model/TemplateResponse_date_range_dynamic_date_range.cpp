/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "TemplateResponse_date_range_dynamic_date_range.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

TemplateResponse_date_range_dynamic_date_range::TemplateResponse_date_range_dynamic_date_range()
{
    m_Type = "";
    m_TypeIsSet = false;
    m_Range = "";
    m_RangeIsSet = false;
    
}

void TemplateResponse_date_range_dynamic_date_range::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool TemplateResponse_date_range_dynamic_date_range::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool TemplateResponse_date_range_dynamic_date_range::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "TemplateResponse_date_range_dynamic_date_range" : pathPrefix;

            
    return success;
}

bool TemplateResponse_date_range_dynamic_date_range::operator==(const TemplateResponse_date_range_dynamic_date_range& rhs) const
{
    return
    
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!rangeIsSet() && !rhs.rangeIsSet()) || (rangeIsSet() && rhs.rangeIsSet() && getRange() == rhs.getRange()))
    
    ;
}

bool TemplateResponse_date_range_dynamic_date_range::operator!=(const TemplateResponse_date_range_dynamic_date_range& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const TemplateResponse_date_range_dynamic_date_range& o)
{
    j = nlohmann::json::object();
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.rangeIsSet())
        j["range"] = o.m_Range;
    
}

void from_json(const nlohmann::json& j, TemplateResponse_date_range_dynamic_date_range& o)
{
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("range") != j.end())
    {
        j.at("range").get_to(o.m_Range);
        o.m_RangeIsSet = true;
    } 
    
}

std::string TemplateResponse_date_range_dynamic_date_range::getType() const
{
    return m_Type;
}
void TemplateResponse_date_range_dynamic_date_range::setType(std::string const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool TemplateResponse_date_range_dynamic_date_range::typeIsSet() const
{
    return m_TypeIsSet;
}
void TemplateResponse_date_range_dynamic_date_range::unsetType()
{
    m_TypeIsSet = false;
}
std::string TemplateResponse_date_range_dynamic_date_range::getRange() const
{
    return m_Range;
}
void TemplateResponse_date_range_dynamic_date_range::setRange(std::string const& value)
{
    m_Range = value;
    m_RangeIsSet = true;
}
bool TemplateResponse_date_range_dynamic_date_range::rangeIsSet() const
{
    return m_RangeIsSet;
}
void TemplateResponse_date_range_dynamic_date_range::unsetRange()
{
    m_RangeIsSet = false;
}


} // namespace org::openapitools::server::model

