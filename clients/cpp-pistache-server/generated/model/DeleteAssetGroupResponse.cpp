/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DeleteAssetGroupResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DeleteAssetGroupResponse::DeleteAssetGroupResponse()
{
    m_Deleted_asset_groupsIsSet = false;
    m_ExceptionsIsSet = false;
    
}

void DeleteAssetGroupResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DeleteAssetGroupResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DeleteAssetGroupResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DeleteAssetGroupResponse" : pathPrefix;

         
    if (deletedAssetGroupsIsSet())
    {
        const std::vector<std::string>& value = m_Deleted_asset_groups;
        const std::string currentValuePath = _pathPrefix + ".deletedAssetGroups";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const std::string& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        
 
                i++;
            }
        }

    }
         
    if (exceptionsIsSet())
    {
        const std::vector<org::openapitools::server::model::DeleteAssetGroupResponse_exceptions_inner>& value = m_Exceptions;
        const std::string currentValuePath = _pathPrefix + ".exceptions";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const org::openapitools::server::model::DeleteAssetGroupResponse_exceptions_inner& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        success = value.validate(msg, currentValuePath + ".exceptions") && success;
 
                i++;
            }
        }

    }
    
    return success;
}

bool DeleteAssetGroupResponse::operator==(const DeleteAssetGroupResponse& rhs) const
{
    return
    
    
    
    ((!deletedAssetGroupsIsSet() && !rhs.deletedAssetGroupsIsSet()) || (deletedAssetGroupsIsSet() && rhs.deletedAssetGroupsIsSet() && getDeletedAssetGroups() == rhs.getDeletedAssetGroups())) &&
    
    
    ((!exceptionsIsSet() && !rhs.exceptionsIsSet()) || (exceptionsIsSet() && rhs.exceptionsIsSet() && getExceptions() == rhs.getExceptions()))
    
    ;
}

bool DeleteAssetGroupResponse::operator!=(const DeleteAssetGroupResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DeleteAssetGroupResponse& o)
{
    j = nlohmann::json::object();
    if(o.deletedAssetGroupsIsSet() || !o.m_Deleted_asset_groups.empty())
        j["deleted_asset_groups"] = o.m_Deleted_asset_groups;
    if(o.exceptionsIsSet() || !o.m_Exceptions.empty())
        j["exceptions"] = o.m_Exceptions;
    
}

void from_json(const nlohmann::json& j, DeleteAssetGroupResponse& o)
{
    if(j.find("deleted_asset_groups") != j.end())
    {
        j.at("deleted_asset_groups").get_to(o.m_Deleted_asset_groups);
        o.m_Deleted_asset_groupsIsSet = true;
    } 
    if(j.find("exceptions") != j.end())
    {
        j.at("exceptions").get_to(o.m_Exceptions);
        o.m_ExceptionsIsSet = true;
    } 
    
}

std::vector<std::string> DeleteAssetGroupResponse::getDeletedAssetGroups() const
{
    return m_Deleted_asset_groups;
}
void DeleteAssetGroupResponse::setDeletedAssetGroups(std::vector<std::string> const& value)
{
    m_Deleted_asset_groups = value;
    m_Deleted_asset_groupsIsSet = true;
}
bool DeleteAssetGroupResponse::deletedAssetGroupsIsSet() const
{
    return m_Deleted_asset_groupsIsSet;
}
void DeleteAssetGroupResponse::unsetDeleted_asset_groups()
{
    m_Deleted_asset_groupsIsSet = false;
}
std::vector<org::openapitools::server::model::DeleteAssetGroupResponse_exceptions_inner> DeleteAssetGroupResponse::getExceptions() const
{
    return m_Exceptions;
}
void DeleteAssetGroupResponse::setExceptions(std::vector<org::openapitools::server::model::DeleteAssetGroupResponse_exceptions_inner> const& value)
{
    m_Exceptions = value;
    m_ExceptionsIsSet = true;
}
bool DeleteAssetGroupResponse::exceptionsIsSet() const
{
    return m_ExceptionsIsSet;
}
void DeleteAssetGroupResponse::unsetExceptions()
{
    m_ExceptionsIsSet = false;
}


} // namespace org::openapitools::server::model

