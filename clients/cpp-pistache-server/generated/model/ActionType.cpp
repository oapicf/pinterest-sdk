/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ActionType.h"
#include "Helpers.h"
#include <stdexcept>
#include <sstream>

namespace org::openapitools::server::model
{

ActionType::ActionType()
{
    
}

void ActionType::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ActionType::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ActionType::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ActionType" : pathPrefix;

    
    if (m_value == ActionType::eActionType::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool ActionType::operator==(const ActionType& rhs) const
{
    return
    getValue() == rhs.getValue()
    
    ;
}

bool ActionType::operator!=(const ActionType& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ActionType& o)
{
    j = nlohmann::json::object();
    
    switch (o.getValue())
    {
        case ActionType::eActionType::INVALID_VALUE_OPENAPI_GENERATED:
            j = "INVALID_VALUE_OPENAPI_GENERATED";
            break;
        case ActionType::eActionType::CLICKTHROUGH:
            j = "CLICKTHROUGH";
            break;
        case ActionType::eActionType::IMPRESSION:
            j = "IMPRESSION";
            break;
        case ActionType::eActionType::VIDEO_V_50_MRC:
            j = "VIDEO_V_50_MRC";
            break;
    }
}

void from_json(const nlohmann::json& j, ActionType& o)
{
    
    auto s = j.get<std::string>();
    if (s == "CLICKTHROUGH") {
     o.setValue(ActionType::eActionType::CLICKTHROUGH);
    } 
    else if (s == "IMPRESSION") {
     o.setValue(ActionType::eActionType::IMPRESSION);
    } 
    else if (s == "VIDEO_V_50_MRC") {
     o.setValue(ActionType::eActionType::VIDEO_V_50_MRC);
    }  else {
     std::stringstream ss;
     ss << "Unexpected value " << s << " in json"
        << " cannot be converted to enum of type"
        << " ActionType::eActionType";
     throw std::invalid_argument(ss.str());
    } 

}

ActionType::eActionType ActionType::getValue() const
{
    return m_value;
}
void ActionType::setValue(ActionType::eActionType value)
{
    m_value = value;
}

} // namespace org::openapitools::server::model

