/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AuthRespondInvitesBody_invites_inner_action.h
 *
 * 
 */

#ifndef AuthRespondInvitesBody_invites_inner_action_H_
#define AuthRespondInvitesBody_invites_inner_action_H_


#include "Permissions.h"
#include <map>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  AuthRespondInvitesBody_invites_inner_action
{
public:
    AuthRespondInvitesBody_invites_inner_action();
    virtual ~AuthRespondInvitesBody_invites_inner_action() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AuthRespondInvitesBody_invites_inner_action& rhs) const;
    bool operator!=(const AuthRespondInvitesBody_invites_inner_action& rhs) const;

    /////////////////////////////////////////////
    /// AuthRespondInvitesBody_invites_inner_action members

    /// <summary>
    /// Whether the invite/request is accepted.
    /// </summary>
    bool isAcceptInvite() const;
    void setAcceptInvite(bool const value);
    /// <summary>
    /// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
    /// </summary>
    std::map<std::string, std::vector<org::openapitools::server::model::Permissions>> getAssetIdToPermissions() const;
    void setAssetIdToPermissions(std::map<std::string, std::vector<org::openapitools::server::model::Permissions>> const& value);
    bool assetIdToPermissionsIsSet() const;
    void unsetAsset_id_to_permissions();

    friend  void to_json(nlohmann::json& j, const AuthRespondInvitesBody_invites_inner_action& o);
    friend  void from_json(const nlohmann::json& j, AuthRespondInvitesBody_invites_inner_action& o);
protected:
    bool m_Accept_invite;

    std::map<std::string, std::vector<org::openapitools::server::model::Permissions>> m_Asset_id_to_permissions;
    bool m_Asset_id_to_permissionsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* AuthRespondInvitesBody_invites_inner_action_H_ */
