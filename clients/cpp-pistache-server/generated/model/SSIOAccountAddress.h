/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SSIOAccountAddress.h
 *
 * 
 */

#ifndef SSIOAccountAddress_H_
#define SSIOAccountAddress_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  SSIOAccountAddress
{
public:
    SSIOAccountAddress();
    virtual ~SSIOAccountAddress() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SSIOAccountAddress& rhs) const;
    bool operator!=(const SSIOAccountAddress& rhs) const;

    /////////////////////////////////////////////
    /// SSIOAccountAddress members

    /// <summary>
    /// Address display
    /// </summary>
    std::string getDisplay() const;
    void setDisplay(std::string const& value);
    bool displayIsSet() const;
    void unsetDisplay();
    /// <summary>
    /// Purpose for which the address is used, usually Billing or Businness
    /// </summary>
    std::string getPurpose() const;
    void setPurpose(std::string const& value);
    bool purposeIsSet() const;
    void unsetPurpose();
    /// <summary>
    /// Salesforce id for address
    /// </summary>
    std::string getAddressId() const;
    void setAddressId(std::string const& value);
    bool addressIdIsSet() const;
    void unsetAddress_id();
    /// <summary>
    /// Legal entity for this insertion order
    /// </summary>
    std::string getOrderLegalEntity() const;
    void setOrderLegalEntity(std::string const& value);
    bool orderLegalEntityIsSet() const;
    void unsetOrder_legal_entity();

    friend  void to_json(nlohmann::json& j, const SSIOAccountAddress& o);
    friend  void from_json(const nlohmann::json& j, SSIOAccountAddress& o);
protected:
    std::string m_Display;
    bool m_DisplayIsSet;
    std::string m_Purpose;
    bool m_PurposeIsSet;
    std::string m_Address_id;
    bool m_Address_idIsSet;
    std::string m_Order_legal_entity;
    bool m_Order_legal_entityIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* SSIOAccountAddress_H_ */
