/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * LeadFormQuestion.h
 *
 * 
 */

#ifndef LeadFormQuestion_H_
#define LeadFormQuestion_H_


#include "LeadFormQuestionFieldType.h"
#include <string>
#include <vector>
#include "LeadFormQuestionType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  LeadFormQuestion
{
public:
    LeadFormQuestion();
    virtual ~LeadFormQuestion() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const LeadFormQuestion& rhs) const;
    bool operator!=(const LeadFormQuestion& rhs) const;

    /////////////////////////////////////////////
    /// LeadFormQuestion members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::LeadFormQuestionType getQuestionType() const;
    void setQuestionType(org::openapitools::server::model::LeadFormQuestionType const& value);
    bool questionTypeIsSet() const;
    void unsetQuestion_type();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::LeadFormQuestionFieldType getCustomQuestionFieldType() const;
    void setCustomQuestionFieldType(org::openapitools::server::model::LeadFormQuestionFieldType const& value);
    bool customQuestionFieldTypeIsSet() const;
    void unsetCustom_question_field_type();
    /// <summary>
    /// Question label for a custom question.
    /// </summary>
    std::string getCustomQuestionLabel() const;
    void setCustomQuestionLabel(std::string const& value);
    bool customQuestionLabelIsSet() const;
    void unsetCustom_question_label();
    /// <summary>
    /// Question options for a custom question.
    /// </summary>
    std::vector<std::string> getCustomQuestionOptions() const;
    void setCustomQuestionOptions(std::vector<std::string> const& value);
    bool customQuestionOptionsIsSet() const;
    void unsetCustom_question_options();

    friend  void to_json(nlohmann::json& j, const LeadFormQuestion& o);
    friend  void from_json(const nlohmann::json& j, LeadFormQuestion& o);
protected:
    org::openapitools::server::model::LeadFormQuestionType m_Question_type;
    bool m_Question_typeIsSet;
    org::openapitools::server::model::LeadFormQuestionFieldType m_Custom_question_field_type;
    bool m_Custom_question_field_typeIsSet;
    std::string m_Custom_question_label;
    bool m_Custom_question_labelIsSet;
    std::vector<std::string> m_Custom_question_options;
    bool m_Custom_question_optionsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* LeadFormQuestion_H_ */
