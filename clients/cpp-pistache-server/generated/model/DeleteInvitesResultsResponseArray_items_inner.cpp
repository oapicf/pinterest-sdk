/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DeleteInvitesResultsResponseArray_items_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DeleteInvitesResultsResponseArray_items_inner::DeleteInvitesResultsResponseArray_items_inner()
{
    m_ExceptionIsSet = false;
    m_InviteIsSet = false;
    
}

void DeleteInvitesResultsResponseArray_items_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DeleteInvitesResultsResponseArray_items_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DeleteInvitesResultsResponseArray_items_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DeleteInvitesResultsResponseArray_items_inner" : pathPrefix;

            
    return success;
}

bool DeleteInvitesResultsResponseArray_items_inner::operator==(const DeleteInvitesResultsResponseArray_items_inner& rhs) const
{
    return
    
    
    
    ((!exceptionIsSet() && !rhs.exceptionIsSet()) || (exceptionIsSet() && rhs.exceptionIsSet() && getException() == rhs.getException())) &&
    
    
    ((!inviteIsSet() && !rhs.inviteIsSet()) || (inviteIsSet() && rhs.inviteIsSet() && getInvite() == rhs.getInvite()))
    
    ;
}

bool DeleteInvitesResultsResponseArray_items_inner::operator!=(const DeleteInvitesResultsResponseArray_items_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DeleteInvitesResultsResponseArray_items_inner& o)
{
    j = nlohmann::json::object();
    if(o.exceptionIsSet())
        j["exception"] = o.m_Exception;
    if(o.inviteIsSet())
        j["invite"] = o.m_Invite;
    
}

void from_json(const nlohmann::json& j, DeleteInvitesResultsResponseArray_items_inner& o)
{
    if(j.find("exception") != j.end())
    {
        j.at("exception").get_to(o.m_Exception);
        o.m_ExceptionIsSet = true;
    } 
    if(j.find("invite") != j.end())
    {
        j.at("invite").get_to(o.m_Invite);
        o.m_InviteIsSet = true;
    } 
    
}

org::openapitools::server::model::DeleteInvitesResultsResponseArray_items_inner_exception DeleteInvitesResultsResponseArray_items_inner::getException() const
{
    return m_Exception;
}
void DeleteInvitesResultsResponseArray_items_inner::setException(org::openapitools::server::model::DeleteInvitesResultsResponseArray_items_inner_exception const& value)
{
    m_Exception = value;
    m_ExceptionIsSet = true;
}
bool DeleteInvitesResultsResponseArray_items_inner::exceptionIsSet() const
{
    return m_ExceptionIsSet;
}
void DeleteInvitesResultsResponseArray_items_inner::unsetException()
{
    m_ExceptionIsSet = false;
}
org::openapitools::server::model::BaseInviteDataResponse DeleteInvitesResultsResponseArray_items_inner::getInvite() const
{
    return m_Invite;
}
void DeleteInvitesResultsResponseArray_items_inner::setInvite(org::openapitools::server::model::BaseInviteDataResponse const& value)
{
    m_Invite = value;
    m_InviteIsSet = true;
}
bool DeleteInvitesResultsResponseArray_items_inner::inviteIsSet() const
{
    return m_InviteIsSet;
}
void DeleteInvitesResultsResponseArray_items_inner::unsetInvite()
{
    m_InviteIsSet = false;
}


} // namespace org::openapitools::server::model

