/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CreateMMMReportRequest.h
 *
 * 
 */

#ifndef CreateMMMReportRequest_H_
#define CreateMMMReportRequest_H_


#include "TargetingAdvertiserCountry.h"
#include "MMMReportingTargetingType.h"
#include <string>
#include "MMMReportingColumn.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CreateMMMReportRequest
{
public:
    CreateMMMReportRequest();
    virtual ~CreateMMMReportRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CreateMMMReportRequest& rhs) const;
    bool operator!=(const CreateMMMReportRequest& rhs) const;

    /////////////////////////////////////////////
    /// CreateMMMReportRequest members

    /// <summary>
    /// Name of the Marketing Mix Modeling (MMM) report
    /// </summary>
    std::string getReportName() const;
    void setReportName(std::string const& value);
    /// <summary>
    /// Metric report start date (UTC). Format: YYYY-MM-DD
    /// </summary>
    std::string getStartDate() const;
    void setStartDate(std::string const& value);
    /// <summary>
    /// Metric report end date (UTC). Format: YYYY-MM-DD
    /// </summary>
    std::string getEndDate() const;
    void setEndDate(std::string const& value);
    /// <summary>
    /// DAY - metrics are broken down daily.&lt;br&gt; WEEK - metrics are broken down weekly.
    /// </summary>
    std::string getGranularity() const;
    void setGranularity(std::string const& value);
    /// <summary>
    /// Level of the report
    /// </summary>
    std::string getLevel() const;
    void setLevel(std::string const& value);
    /// <summary>
    /// List of targeting types
    /// </summary>
    std::vector<org::openapitools::server::model::MMMReportingTargetingType> getTargetingTypes() const;
    void setTargetingTypes(std::vector<org::openapitools::server::model::MMMReportingTargetingType> const& value);
    /// <summary>
    /// Metric and entity columns
    /// </summary>
    std::vector<org::openapitools::server::model::MMMReportingColumn> getColumns() const;
    void setColumns(std::vector<org::openapitools::server::model::MMMReportingColumn> const& value);
    /// <summary>
    /// A List of countries for filtering
    /// </summary>
    std::vector<org::openapitools::server::model::TargetingAdvertiserCountry> getCountries() const;
    void setCountries(std::vector<org::openapitools::server::model::TargetingAdvertiserCountry> const& value);
    bool countriesIsSet() const;
    void unsetCountries();

    friend  void to_json(nlohmann::json& j, const CreateMMMReportRequest& o);
    friend  void from_json(const nlohmann::json& j, CreateMMMReportRequest& o);
protected:
    std::string m_Report_name;

    std::string m_Start_date;

    std::string m_End_date;

    std::string m_Granularity;

    std::string m_Level;

    std::vector<org::openapitools::server::model::MMMReportingTargetingType> m_Targeting_types;

    std::vector<org::openapitools::server::model::MMMReportingColumn> m_Columns;

    std::vector<org::openapitools::server::model::TargetingAdvertiserCountry> m_Countries;
    bool m_CountriesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CreateMMMReportRequest_H_ */
