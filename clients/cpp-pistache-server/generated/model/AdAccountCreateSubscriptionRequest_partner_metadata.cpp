/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AdAccountCreateSubscriptionRequest_partner_metadata.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AdAccountCreateSubscriptionRequest_partner_metadata::AdAccountCreateSubscriptionRequest_partner_metadata()
{
    m_Subscriber_key = "";
    m_Subscriber_keyIsSet = false;
    
}

void AdAccountCreateSubscriptionRequest_partner_metadata::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AdAccountCreateSubscriptionRequest_partner_metadata::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AdAccountCreateSubscriptionRequest_partner_metadata::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AdAccountCreateSubscriptionRequest_partner_metadata" : pathPrefix;

        
    return success;
}

bool AdAccountCreateSubscriptionRequest_partner_metadata::operator==(const AdAccountCreateSubscriptionRequest_partner_metadata& rhs) const
{
    return
    
    
    
    ((!subscriberKeyIsSet() && !rhs.subscriberKeyIsSet()) || (subscriberKeyIsSet() && rhs.subscriberKeyIsSet() && getSubscriberKey() == rhs.getSubscriberKey()))
    
    ;
}

bool AdAccountCreateSubscriptionRequest_partner_metadata::operator!=(const AdAccountCreateSubscriptionRequest_partner_metadata& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AdAccountCreateSubscriptionRequest_partner_metadata& o)
{
    j = nlohmann::json::object();
    if(o.subscriberKeyIsSet())
        j["subscriber_key"] = o.m_Subscriber_key;
    
}

void from_json(const nlohmann::json& j, AdAccountCreateSubscriptionRequest_partner_metadata& o)
{
    if(j.find("subscriber_key") != j.end())
    {
        j.at("subscriber_key").get_to(o.m_Subscriber_key);
        o.m_Subscriber_keyIsSet = true;
    } 
    
}

std::string AdAccountCreateSubscriptionRequest_partner_metadata::getSubscriberKey() const
{
    return m_Subscriber_key;
}
void AdAccountCreateSubscriptionRequest_partner_metadata::setSubscriberKey(std::string const& value)
{
    m_Subscriber_key = value;
    m_Subscriber_keyIsSet = true;
}
bool AdAccountCreateSubscriptionRequest_partner_metadata::subscriberKeyIsSet() const
{
    return m_Subscriber_keyIsSet;
}
void AdAccountCreateSubscriptionRequest_partner_metadata::unsetSubscriber_key()
{
    m_Subscriber_keyIsSet = false;
}


} // namespace org::openapitools::server::model

