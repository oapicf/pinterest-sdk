/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "UserBusinessRoleBinding.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

UserBusinessRoleBinding::UserBusinessRoleBinding()
{
    m_Assets_summaryIsSet = false;
    m_Business_rolesIsSet = false;
    m_Created_by_businessIsSet = false;
    m_Created_by_userIsSet = false;
    m_Created_time = 0;
    m_Created_timeIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_Is_shared_partner = false;
    m_Is_shared_partnerIsSet = false;
    m_UserIsSet = false;
    
}

void UserBusinessRoleBinding::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool UserBusinessRoleBinding::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool UserBusinessRoleBinding::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "UserBusinessRoleBinding" : pathPrefix;

             
    if (businessRolesIsSet())
    {
        const std::vector<std::string>& value = m_Business_roles;
        const std::string currentValuePath = _pathPrefix + ".businessRoles";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const std::string& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        
 
                i++;
            }
        }

    }
                     
    if (idIsSet())
    {
        const std::string& value = m_Id;
        const std::string currentValuePath = _pathPrefix + ".id";
                
        

    }
            
    return success;
}

bool UserBusinessRoleBinding::operator==(const UserBusinessRoleBinding& rhs) const
{
    return
    
    
    
    ((!assetsSummaryIsSet() && !rhs.assetsSummaryIsSet()) || (assetsSummaryIsSet() && rhs.assetsSummaryIsSet() && getAssetsSummary() == rhs.getAssetsSummary())) &&
    
    
    ((!businessRolesIsSet() && !rhs.businessRolesIsSet()) || (businessRolesIsSet() && rhs.businessRolesIsSet() && getBusinessRoles() == rhs.getBusinessRoles())) &&
    
    
    ((!createdByBusinessIsSet() && !rhs.createdByBusinessIsSet()) || (createdByBusinessIsSet() && rhs.createdByBusinessIsSet() && getCreatedByBusiness() == rhs.getCreatedByBusiness())) &&
    
    
    ((!createdByUserIsSet() && !rhs.createdByUserIsSet()) || (createdByUserIsSet() && rhs.createdByUserIsSet() && getCreatedByUser() == rhs.getCreatedByUser())) &&
    
    
    ((!createdTimeIsSet() && !rhs.createdTimeIsSet()) || (createdTimeIsSet() && rhs.createdTimeIsSet() && getCreatedTime() == rhs.getCreatedTime())) &&
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!isSharedPartnerIsSet() && !rhs.isSharedPartnerIsSet()) || (isSharedPartnerIsSet() && rhs.isSharedPartnerIsSet() && isIsSharedPartner() == rhs.isIsSharedPartner())) &&
    
    
    ((!userIsSet() && !rhs.userIsSet()) || (userIsSet() && rhs.userIsSet() && getUser() == rhs.getUser()))
    
    ;
}

bool UserBusinessRoleBinding::operator!=(const UserBusinessRoleBinding& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const UserBusinessRoleBinding& o)
{
    j = nlohmann::json::object();
    if(o.assetsSummaryIsSet())
        j["assets_summary"] = o.m_Assets_summary;
    if(o.businessRolesIsSet() || !o.m_Business_roles.empty())
        j["business_roles"] = o.m_Business_roles;
    if(o.createdByBusinessIsSet())
        j["created_by_business"] = o.m_Created_by_business;
    if(o.createdByUserIsSet())
        j["created_by_user"] = o.m_Created_by_user;
    if(o.createdTimeIsSet())
        j["created_time"] = o.m_Created_time;
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.isSharedPartnerIsSet())
        j["is_shared_partner"] = o.m_Is_shared_partner;
    if(o.userIsSet())
        j["user"] = o.m_User;
    
}

void from_json(const nlohmann::json& j, UserBusinessRoleBinding& o)
{
    if(j.find("assets_summary") != j.end())
    {
        j.at("assets_summary").get_to(o.m_Assets_summary);
        o.m_Assets_summaryIsSet = true;
    } 
    if(j.find("business_roles") != j.end())
    {
        j.at("business_roles").get_to(o.m_Business_roles);
        o.m_Business_rolesIsSet = true;
    } 
    if(j.find("created_by_business") != j.end())
    {
        j.at("created_by_business").get_to(o.m_Created_by_business);
        o.m_Created_by_businessIsSet = true;
    } 
    if(j.find("created_by_user") != j.end())
    {
        j.at("created_by_user").get_to(o.m_Created_by_user);
        o.m_Created_by_userIsSet = true;
    } 
    if(j.find("created_time") != j.end())
    {
        j.at("created_time").get_to(o.m_Created_time);
        o.m_Created_timeIsSet = true;
    } 
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("is_shared_partner") != j.end())
    {
        j.at("is_shared_partner").get_to(o.m_Is_shared_partner);
        o.m_Is_shared_partnerIsSet = true;
    } 
    if(j.find("user") != j.end())
    {
        j.at("user").get_to(o.m_User);
        o.m_UserIsSet = true;
    } 
    
}

org::openapitools::server::model::BusinessMemberAssetsSummary UserBusinessRoleBinding::getAssetsSummary() const
{
    return m_Assets_summary;
}
void UserBusinessRoleBinding::setAssetsSummary(org::openapitools::server::model::BusinessMemberAssetsSummary const& value)
{
    m_Assets_summary = value;
    m_Assets_summaryIsSet = true;
}
bool UserBusinessRoleBinding::assetsSummaryIsSet() const
{
    return m_Assets_summaryIsSet;
}
void UserBusinessRoleBinding::unsetAssets_summary()
{
    m_Assets_summaryIsSet = false;
}
std::vector<std::string> UserBusinessRoleBinding::getBusinessRoles() const
{
    return m_Business_roles;
}
void UserBusinessRoleBinding::setBusinessRoles(std::vector<std::string> const& value)
{
    m_Business_roles = value;
    m_Business_rolesIsSet = true;
}
bool UserBusinessRoleBinding::businessRolesIsSet() const
{
    return m_Business_rolesIsSet;
}
void UserBusinessRoleBinding::unsetBusiness_roles()
{
    m_Business_rolesIsSet = false;
}
org::openapitools::server::model::BusinessAccessUserSummary UserBusinessRoleBinding::getCreatedByBusiness() const
{
    return m_Created_by_business;
}
void UserBusinessRoleBinding::setCreatedByBusiness(org::openapitools::server::model::BusinessAccessUserSummary const& value)
{
    m_Created_by_business = value;
    m_Created_by_businessIsSet = true;
}
bool UserBusinessRoleBinding::createdByBusinessIsSet() const
{
    return m_Created_by_businessIsSet;
}
void UserBusinessRoleBinding::unsetCreated_by_business()
{
    m_Created_by_businessIsSet = false;
}
org::openapitools::server::model::BusinessAccessUserSummary UserBusinessRoleBinding::getCreatedByUser() const
{
    return m_Created_by_user;
}
void UserBusinessRoleBinding::setCreatedByUser(org::openapitools::server::model::BusinessAccessUserSummary const& value)
{
    m_Created_by_user = value;
    m_Created_by_userIsSet = true;
}
bool UserBusinessRoleBinding::createdByUserIsSet() const
{
    return m_Created_by_userIsSet;
}
void UserBusinessRoleBinding::unsetCreated_by_user()
{
    m_Created_by_userIsSet = false;
}
int32_t UserBusinessRoleBinding::getCreatedTime() const
{
    return m_Created_time;
}
void UserBusinessRoleBinding::setCreatedTime(int32_t const value)
{
    m_Created_time = value;
    m_Created_timeIsSet = true;
}
bool UserBusinessRoleBinding::createdTimeIsSet() const
{
    return m_Created_timeIsSet;
}
void UserBusinessRoleBinding::unsetCreated_time()
{
    m_Created_timeIsSet = false;
}
std::string UserBusinessRoleBinding::getId() const
{
    return m_Id;
}
void UserBusinessRoleBinding::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool UserBusinessRoleBinding::idIsSet() const
{
    return m_IdIsSet;
}
void UserBusinessRoleBinding::unsetId()
{
    m_IdIsSet = false;
}
bool UserBusinessRoleBinding::isIsSharedPartner() const
{
    return m_Is_shared_partner;
}
void UserBusinessRoleBinding::setIsSharedPartner(bool const value)
{
    m_Is_shared_partner = value;
    m_Is_shared_partnerIsSet = true;
}
bool UserBusinessRoleBinding::isSharedPartnerIsSet() const
{
    return m_Is_shared_partnerIsSet;
}
void UserBusinessRoleBinding::unsetIs_shared_partner()
{
    m_Is_shared_partnerIsSet = false;
}
org::openapitools::server::model::BusinessAccessUserSummary UserBusinessRoleBinding::getUser() const
{
    return m_User;
}
void UserBusinessRoleBinding::setUser(org::openapitools::server::model::BusinessAccessUserSummary const& value)
{
    m_User = value;
    m_UserIsSet = true;
}
bool UserBusinessRoleBinding::userIsSet() const
{
    return m_UserIsSet;
}
void UserBusinessRoleBinding::unsetUser()
{
    m_UserIsSet = false;
}


} // namespace org::openapitools::server::model

