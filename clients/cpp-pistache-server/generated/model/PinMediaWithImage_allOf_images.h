/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * PinMediaWithImage_allOf_images.h
 *
 * 
 */

#ifndef PinMediaWithImage_allOf_images_H_
#define PinMediaWithImage_allOf_images_H_


#include <nlohmann/json.hpp>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  PinMediaWithImage_allOf_images
{
public:
    PinMediaWithImage_allOf_images();
    virtual ~PinMediaWithImage_allOf_images() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const PinMediaWithImage_allOf_images& rhs) const;
    bool operator!=(const PinMediaWithImage_allOf_images& rhs) const;

    /////////////////////////////////////////////
    /// PinMediaWithImage_allOf_images members

    /// <summary>
    /// 
    /// </summary>
    nlohmann::json getR150x150() const;
    void setR150x150(nlohmann::json const& value);
    bool r150x150IsSet() const;
    void unsetr_150x150();
    /// <summary>
    /// 
    /// </summary>
    nlohmann::json getR400x300() const;
    void setR400x300(nlohmann::json const& value);
    bool r400x300IsSet() const;
    void unsetr_400x300();
    /// <summary>
    /// 
    /// </summary>
    nlohmann::json getR600x() const;
    void setR600x(nlohmann::json const& value);
    bool r600xIsSet() const;
    void unsetr_600x();
    /// <summary>
    /// 
    /// </summary>
    nlohmann::json getR1200x() const;
    void setR1200x(nlohmann::json const& value);
    bool r1200xIsSet() const;
    void unsetr_1200x();

    friend  void to_json(nlohmann::json& j, const PinMediaWithImage_allOf_images& o);
    friend  void from_json(const nlohmann::json& j, PinMediaWithImage_allOf_images& o);
protected:
    nlohmann::json m_r_150x150;
    bool m_r_150x150IsSet;
    nlohmann::json m_r_400x300;
    bool m_r_400x300IsSet;
    nlohmann::json m_r_600x;
    bool m_r_600xIsSet;
    nlohmann::json m_r_1200x;
    bool m_r_1200xIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* PinMediaWithImage_allOf_images_H_ */
