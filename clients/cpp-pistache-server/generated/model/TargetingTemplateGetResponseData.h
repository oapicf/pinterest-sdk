/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * TargetingTemplateGetResponseData.h
 *
 * 
 */

#ifndef TargetingTemplateGetResponseData_H_
#define TargetingTemplateGetResponseData_H_


#include "TargetingSpec.h"
#include "PlacementGroupType.h"
#include "TargetingTemplateAudienceSizing.h"
#include <string>
#include "TrackingUrls.h"
#include "TargetingTemplateKeyword.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  TargetingTemplateGetResponseData
{
public:
    TargetingTemplateGetResponseData();
    virtual ~TargetingTemplateGetResponseData() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const TargetingTemplateGetResponseData& rhs) const;
    bool operator!=(const TargetingTemplateGetResponseData& rhs) const;

    /////////////////////////////////////////////
    /// TargetingTemplateGetResponseData members

    /// <summary>
    /// targeting template name
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// Enable auto-targeting for ad group. Also known as &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/expanded-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;\&quot;expanded targeting\&quot;&lt;/a&gt;.
    /// </summary>
    bool isAutoTargetingEnabled() const;
    void setAutoTargetingEnabled(bool const value);
    bool autoTargetingEnabledIsSet() const;
    void unsetAuto_targeting_enabled();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::TargetingSpec getTargetingAttributes() const;
    void setTargetingAttributes(org::openapitools::server::model::TargetingSpec const& value);
    bool targetingAttributesIsSet() const;
    void unsetTargeting_attributes();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::PlacementGroupType getPlacementGroup() const;
    void setPlacementGroup(org::openapitools::server::model::PlacementGroupType const& value);
    bool placementGroupIsSet() const;
    void unsetPlacement_group();
    /// <summary>
    /// 
    /// </summary>
    std::vector<org::openapitools::server::model::TargetingTemplateKeyword> getKeywords() const;
    void setKeywords(std::vector<org::openapitools::server::model::TargetingTemplateKeyword> const& value);
    bool keywordsIsSet() const;
    void unsetKeywords();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::TrackingUrls getTrackingUrls() const;
    void setTrackingUrls(org::openapitools::server::model::TrackingUrls const& value);
    bool trackingUrlsIsSet() const;
    void unsetTracking_urls();
    /// <summary>
    /// Targeting template ID.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Targeting template created time. Unix timestamp in seconds.
    /// </summary>
    int32_t getCreatedTime() const;
    void setCreatedTime(int32_t const value);
    bool createdTimeIsSet() const;
    void unsetCreated_time();
    /// <summary>
    /// Targeting template updated time.Unix timestamp in seconds.
    /// </summary>
    int32_t getUpdatedTime() const;
    void setUpdatedTime(int32_t const value);
    bool updatedTimeIsSet() const;
    void unsetUpdated_time();
    /// <summary>
    /// The ID of the advertiser that this targeting template belongs to.
    /// </summary>
    std::string getAdAccountId() const;
    void setAdAccountId(std::string const& value);
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();
    /// <summary>
    /// Indicate targeting template is active or Deleted
    /// </summary>
    std::string getStatus() const;
    void setStatus(std::string const& value);
    bool statusIsSet() const;
    void unsetStatus();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::TargetingTemplateAudienceSizing getSizing() const;
    void setSizing(org::openapitools::server::model::TargetingTemplateAudienceSizing const& value);
    bool sizingIsSet() const;
    void unsetSizing();
    /// <summary>
    /// Inform if the targeting template is valid (ex. would be false if has revoked audience)
    /// </summary>
    bool isValid() const;
    void setValid(bool const value);
    bool validIsSet() const;
    void unsetValid();

    friend  void to_json(nlohmann::json& j, const TargetingTemplateGetResponseData& o);
    friend  void from_json(const nlohmann::json& j, TargetingTemplateGetResponseData& o);
protected:
    std::string m_Name;
    bool m_NameIsSet;
    bool m_Auto_targeting_enabled;
    bool m_Auto_targeting_enabledIsSet;
    org::openapitools::server::model::TargetingSpec m_Targeting_attributes;
    bool m_Targeting_attributesIsSet;
    org::openapitools::server::model::PlacementGroupType m_Placement_group;
    bool m_Placement_groupIsSet;
    std::vector<org::openapitools::server::model::TargetingTemplateKeyword> m_Keywords;
    bool m_KeywordsIsSet;
    org::openapitools::server::model::TrackingUrls m_Tracking_urls;
    bool m_Tracking_urlsIsSet;
    std::string m_Id;
    bool m_IdIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
    int32_t m_Updated_time;
    bool m_Updated_timeIsSet;
    std::string m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    std::string m_Status;
    bool m_StatusIsSet;
    org::openapitools::server::model::TargetingTemplateAudienceSizing m_Sizing;
    bool m_SizingIsSet;
    bool m_Valid;
    bool m_ValidIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* TargetingTemplateGetResponseData_H_ */
