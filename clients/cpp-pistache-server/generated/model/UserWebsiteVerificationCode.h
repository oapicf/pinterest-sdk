/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UserWebsiteVerificationCode.h
 *
 * 
 */

#ifndef UserWebsiteVerificationCode_H_
#define UserWebsiteVerificationCode_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  UserWebsiteVerificationCode
{
public:
    UserWebsiteVerificationCode();
    virtual ~UserWebsiteVerificationCode() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const UserWebsiteVerificationCode& rhs) const;
    bool operator!=(const UserWebsiteVerificationCode& rhs) const;

    /////////////////////////////////////////////
    /// UserWebsiteVerificationCode members

    /// <summary>
    /// Code to check against the user claiming the website
    /// </summary>
    std::string getVerificationCode() const;
    void setVerificationCode(std::string const& value);
    bool verificationCodeIsSet() const;
    void unsetVerification_code();
    /// <summary>
    /// DNS TXT record to check against for the website to be claimed
    /// </summary>
    std::string getDnsTxtRecord() const;
    void setDnsTxtRecord(std::string const& value);
    bool dnsTxtRecordIsSet() const;
    void unsetDns_txt_record();
    /// <summary>
    /// Metatag the verification process searchs for the website to be claimed
    /// </summary>
    std::string getMetatag() const;
    void setMetatag(std::string const& value);
    bool metatagIsSet() const;
    void unsetMetatag();
    /// <summary>
    /// File expected to find on the website being claimed
    /// </summary>
    std::string getFilename() const;
    void setFilename(std::string const& value);
    bool filenameIsSet() const;
    void unsetFilename();
    /// <summary>
    /// A full html file to upload to the website in order for it to be claimed
    /// </summary>
    std::string getFileContent() const;
    void setFileContent(std::string const& value);
    bool fileContentIsSet() const;
    void unsetFile_content();

    friend  void to_json(nlohmann::json& j, const UserWebsiteVerificationCode& o);
    friend  void from_json(const nlohmann::json& j, UserWebsiteVerificationCode& o);
protected:
    std::string m_Verification_code;
    bool m_Verification_codeIsSet;
    std::string m_Dns_txt_record;
    bool m_Dns_txt_recordIsSet;
    std::string m_Metatag;
    bool m_MetatagIsSet;
    std::string m_Filename;
    bool m_FilenameIsSet;
    std::string m_File_content;
    bool m_File_contentIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* UserWebsiteVerificationCode_H_ */
