/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "BillingProfilesResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

BillingProfilesResponse::BillingProfilesResponse()
{
    m_Id = "";
    m_IdIsSet = false;
    m_Card_type = "";
    m_Card_typeIsSet = false;
    m_Status = "";
    m_StatusIsSet = false;
    m_Advertiser_id = "";
    m_Advertiser_idIsSet = false;
    m_Payment_method_brand = "";
    m_Payment_method_brandIsSet = false;
    
}

void BillingProfilesResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool BillingProfilesResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool BillingProfilesResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "BillingProfilesResponse" : pathPrefix;

         
    if (idIsSet())
    {
        const std::string& value = m_Id;
        const std::string currentValuePath = _pathPrefix + ".id";
                
        

    }
                 
    if (advertiserIdIsSet())
    {
        const std::string& value = m_Advertiser_id;
        const std::string currentValuePath = _pathPrefix + ".advertiserId";
                
        

    }
        
    return success;
}

bool BillingProfilesResponse::operator==(const BillingProfilesResponse& rhs) const
{
    return
    
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!cardTypeIsSet() && !rhs.cardTypeIsSet()) || (cardTypeIsSet() && rhs.cardTypeIsSet() && getCardType() == rhs.getCardType())) &&
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!advertiserIdIsSet() && !rhs.advertiserIdIsSet()) || (advertiserIdIsSet() && rhs.advertiserIdIsSet() && getAdvertiserId() == rhs.getAdvertiserId())) &&
    
    
    ((!paymentMethodBrandIsSet() && !rhs.paymentMethodBrandIsSet()) || (paymentMethodBrandIsSet() && rhs.paymentMethodBrandIsSet() && getPaymentMethodBrand() == rhs.getPaymentMethodBrand()))
    
    ;
}

bool BillingProfilesResponse::operator!=(const BillingProfilesResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const BillingProfilesResponse& o)
{
    j = nlohmann::json::object();
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.cardTypeIsSet())
        j["card_type"] = o.m_Card_type;
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.advertiserIdIsSet())
        j["advertiser_id"] = o.m_Advertiser_id;
    if(o.paymentMethodBrandIsSet())
        j["payment_method_brand"] = o.m_Payment_method_brand;
    
}

void from_json(const nlohmann::json& j, BillingProfilesResponse& o)
{
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("card_type") != j.end())
    {
        j.at("card_type").get_to(o.m_Card_type);
        o.m_Card_typeIsSet = true;
    } 
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("advertiser_id") != j.end())
    {
        j.at("advertiser_id").get_to(o.m_Advertiser_id);
        o.m_Advertiser_idIsSet = true;
    } 
    if(j.find("payment_method_brand") != j.end())
    {
        j.at("payment_method_brand").get_to(o.m_Payment_method_brand);
        o.m_Payment_method_brandIsSet = true;
    } 
    
}

std::string BillingProfilesResponse::getId() const
{
    return m_Id;
}
void BillingProfilesResponse::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool BillingProfilesResponse::idIsSet() const
{
    return m_IdIsSet;
}
void BillingProfilesResponse::unsetId()
{
    m_IdIsSet = false;
}
std::string BillingProfilesResponse::getCardType() const
{
    return m_Card_type;
}
void BillingProfilesResponse::setCardType(std::string const& value)
{
    m_Card_type = value;
    m_Card_typeIsSet = true;
}
bool BillingProfilesResponse::cardTypeIsSet() const
{
    return m_Card_typeIsSet;
}
void BillingProfilesResponse::unsetCard_type()
{
    m_Card_typeIsSet = false;
}
std::string BillingProfilesResponse::getStatus() const
{
    return m_Status;
}
void BillingProfilesResponse::setStatus(std::string const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool BillingProfilesResponse::statusIsSet() const
{
    return m_StatusIsSet;
}
void BillingProfilesResponse::unsetStatus()
{
    m_StatusIsSet = false;
}
std::string BillingProfilesResponse::getAdvertiserId() const
{
    return m_Advertiser_id;
}
void BillingProfilesResponse::setAdvertiserId(std::string const& value)
{
    m_Advertiser_id = value;
    m_Advertiser_idIsSet = true;
}
bool BillingProfilesResponse::advertiserIdIsSet() const
{
    return m_Advertiser_idIsSet;
}
void BillingProfilesResponse::unsetAdvertiser_id()
{
    m_Advertiser_idIsSet = false;
}
std::string BillingProfilesResponse::getPaymentMethodBrand() const
{
    return m_Payment_method_brand;
}
void BillingProfilesResponse::setPaymentMethodBrand(std::string const& value)
{
    m_Payment_method_brand = value;
    m_Payment_method_brandIsSet = true;
}
bool BillingProfilesResponse::paymentMethodBrandIsSet() const
{
    return m_Payment_method_brandIsSet;
}
void BillingProfilesResponse::unsetPayment_method_brand()
{
    m_Payment_method_brandIsSet = false;
}


} // namespace org::openapitools::server::model

