/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OptimizationGoalMetadata_conversion_tag_v3_goal_metadata.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::OptimizationGoalMetadata_conversion_tag_v3_goal_metadata()
{
    m_Attribution_windowsIsSet = false;
    m_Conversion_event = "";
    m_Conversion_eventIsSet = false;
    m_Conversion_tag_id = "";
    m_Conversion_tag_idIsSet = false;
    m_Cpa_goal_value_in_micro_currency = "";
    m_Cpa_goal_value_in_micro_currencyIsSet = false;
    m_Is_roas_optimized = false;
    m_Is_roas_optimizedIsSet = false;
    m_Learning_mode_type = "";
    m_Learning_mode_typeIsSet = false;
    
}

void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OptimizationGoalMetadata_conversion_tag_v3_goal_metadata" : pathPrefix;

                 
    if (conversionTagIdIsSet())
    {
        const std::string& value = m_Conversion_tag_id;
        const std::string currentValuePath = _pathPrefix + ".conversionTagId";
                
        

    }
         
    if (cpaGoalValueInMicroCurrencyIsSet())
    {
        const std::string& value = m_Cpa_goal_value_in_micro_currency;
        const std::string currentValuePath = _pathPrefix + ".cpaGoalValueInMicroCurrency";
                
        

    }
            
    return success;
}

bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::operator==(const OptimizationGoalMetadata_conversion_tag_v3_goal_metadata& rhs) const
{
    return
    
    
    
    ((!attributionWindowsIsSet() && !rhs.attributionWindowsIsSet()) || (attributionWindowsIsSet() && rhs.attributionWindowsIsSet() && getAttributionWindows() == rhs.getAttributionWindows())) &&
    
    
    ((!conversionEventIsSet() && !rhs.conversionEventIsSet()) || (conversionEventIsSet() && rhs.conversionEventIsSet() && getConversionEvent() == rhs.getConversionEvent())) &&
    
    
    ((!conversionTagIdIsSet() && !rhs.conversionTagIdIsSet()) || (conversionTagIdIsSet() && rhs.conversionTagIdIsSet() && getConversionTagId() == rhs.getConversionTagId())) &&
    
    
    ((!cpaGoalValueInMicroCurrencyIsSet() && !rhs.cpaGoalValueInMicroCurrencyIsSet()) || (cpaGoalValueInMicroCurrencyIsSet() && rhs.cpaGoalValueInMicroCurrencyIsSet() && getCpaGoalValueInMicroCurrency() == rhs.getCpaGoalValueInMicroCurrency())) &&
    
    
    ((!isRoasOptimizedIsSet() && !rhs.isRoasOptimizedIsSet()) || (isRoasOptimizedIsSet() && rhs.isRoasOptimizedIsSet() && isIsRoasOptimized() == rhs.isIsRoasOptimized())) &&
    
    
    ((!learningModeTypeIsSet() && !rhs.learningModeTypeIsSet()) || (learningModeTypeIsSet() && rhs.learningModeTypeIsSet() && getLearningModeType() == rhs.getLearningModeType()))
    
    ;
}

bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::operator!=(const OptimizationGoalMetadata_conversion_tag_v3_goal_metadata& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OptimizationGoalMetadata_conversion_tag_v3_goal_metadata& o)
{
    j = nlohmann::json::object();
    if(o.attributionWindowsIsSet())
        j["attribution_windows"] = o.m_Attribution_windows;
    if(o.conversionEventIsSet())
        j["conversion_event"] = o.m_Conversion_event;
    if(o.conversionTagIdIsSet())
        j["conversion_tag_id"] = o.m_Conversion_tag_id;
    if(o.cpaGoalValueInMicroCurrencyIsSet())
        j["cpa_goal_value_in_micro_currency"] = o.m_Cpa_goal_value_in_micro_currency;
    if(o.isRoasOptimizedIsSet())
        j["is_roas_optimized"] = o.m_Is_roas_optimized;
    if(o.learningModeTypeIsSet())
        j["learning_mode_type"] = o.m_Learning_mode_type;
    
}

void from_json(const nlohmann::json& j, OptimizationGoalMetadata_conversion_tag_v3_goal_metadata& o)
{
    if(j.find("attribution_windows") != j.end())
    {
        j.at("attribution_windows").get_to(o.m_Attribution_windows);
        o.m_Attribution_windowsIsSet = true;
    } 
    if(j.find("conversion_event") != j.end())
    {
        j.at("conversion_event").get_to(o.m_Conversion_event);
        o.m_Conversion_eventIsSet = true;
    } 
    if(j.find("conversion_tag_id") != j.end())
    {
        j.at("conversion_tag_id").get_to(o.m_Conversion_tag_id);
        o.m_Conversion_tag_idIsSet = true;
    } 
    if(j.find("cpa_goal_value_in_micro_currency") != j.end())
    {
        j.at("cpa_goal_value_in_micro_currency").get_to(o.m_Cpa_goal_value_in_micro_currency);
        o.m_Cpa_goal_value_in_micro_currencyIsSet = true;
    } 
    if(j.find("is_roas_optimized") != j.end())
    {
        j.at("is_roas_optimized").get_to(o.m_Is_roas_optimized);
        o.m_Is_roas_optimizedIsSet = true;
    } 
    if(j.find("learning_mode_type") != j.end())
    {
        j.at("learning_mode_type").get_to(o.m_Learning_mode_type);
        o.m_Learning_mode_typeIsSet = true;
    } 
    
}

org::openapitools::server::model::OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::getAttributionWindows() const
{
    return m_Attribution_windows;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::setAttributionWindows(org::openapitools::server::model::OptimizationGoalMetadata_conversion_tag_v3_goal_metadata_attribution_windows const& value)
{
    m_Attribution_windows = value;
    m_Attribution_windowsIsSet = true;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::attributionWindowsIsSet() const
{
    return m_Attribution_windowsIsSet;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::unsetAttribution_windows()
{
    m_Attribution_windowsIsSet = false;
}
std::string OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::getConversionEvent() const
{
    return m_Conversion_event;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::setConversionEvent(std::string const& value)
{
    m_Conversion_event = value;
    m_Conversion_eventIsSet = true;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::conversionEventIsSet() const
{
    return m_Conversion_eventIsSet;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::unsetConversion_event()
{
    m_Conversion_eventIsSet = false;
}
std::string OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::getConversionTagId() const
{
    return m_Conversion_tag_id;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::setConversionTagId(std::string const& value)
{
    m_Conversion_tag_id = value;
    m_Conversion_tag_idIsSet = true;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::conversionTagIdIsSet() const
{
    return m_Conversion_tag_idIsSet;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::unsetConversion_tag_id()
{
    m_Conversion_tag_idIsSet = false;
}
std::string OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::getCpaGoalValueInMicroCurrency() const
{
    return m_Cpa_goal_value_in_micro_currency;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::setCpaGoalValueInMicroCurrency(std::string const& value)
{
    m_Cpa_goal_value_in_micro_currency = value;
    m_Cpa_goal_value_in_micro_currencyIsSet = true;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::cpaGoalValueInMicroCurrencyIsSet() const
{
    return m_Cpa_goal_value_in_micro_currencyIsSet;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::unsetCpa_goal_value_in_micro_currency()
{
    m_Cpa_goal_value_in_micro_currencyIsSet = false;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::isIsRoasOptimized() const
{
    return m_Is_roas_optimized;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::setIsRoasOptimized(bool const value)
{
    m_Is_roas_optimized = value;
    m_Is_roas_optimizedIsSet = true;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::isRoasOptimizedIsSet() const
{
    return m_Is_roas_optimizedIsSet;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::unsetIs_roas_optimized()
{
    m_Is_roas_optimizedIsSet = false;
}
std::string OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::getLearningModeType() const
{
    return m_Learning_mode_type;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::setLearningModeType(std::string const& value)
{
    m_Learning_mode_type = value;
    m_Learning_mode_typeIsSet = true;
}
bool OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::learningModeTypeIsSet() const
{
    return m_Learning_mode_typeIsSet;
}
void OptimizationGoalMetadata_conversion_tag_v3_goal_metadata::unsetLearning_mode_type()
{
    m_Learning_mode_typeIsSet = false;
}


} // namespace org::openapitools::server::model

