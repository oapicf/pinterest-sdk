/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AdvancedAuctionItemsSubmitDeleteRecord.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AdvancedAuctionItemsSubmitDeleteRecord::AdvancedAuctionItemsSubmitDeleteRecord()
{
    m_Item_id = "";
    
}

void AdvancedAuctionItemsSubmitDeleteRecord::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AdvancedAuctionItemsSubmitDeleteRecord::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AdvancedAuctionItemsSubmitDeleteRecord::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AdvancedAuctionItemsSubmitDeleteRecord" : pathPrefix;

                
    return success;
}

bool AdvancedAuctionItemsSubmitDeleteRecord::operator==(const AdvancedAuctionItemsSubmitDeleteRecord& rhs) const
{
    return
    
    
    (getItemId() == rhs.getItemId())
     &&
    
    (getCountry() == rhs.getCountry())
     &&
    
    (getLanguage() == rhs.getLanguage())
    
    
    ;
}

bool AdvancedAuctionItemsSubmitDeleteRecord::operator!=(const AdvancedAuctionItemsSubmitDeleteRecord& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AdvancedAuctionItemsSubmitDeleteRecord& o)
{
    j = nlohmann::json::object();
    j["item_id"] = o.m_Item_id;
    j["country"] = o.m_Country;
    j["language"] = o.m_Language;
    
}

void from_json(const nlohmann::json& j, AdvancedAuctionItemsSubmitDeleteRecord& o)
{
    j.at("item_id").get_to(o.m_Item_id);
    j.at("country").get_to(o.m_Country);
    j.at("language").get_to(o.m_Language);
    
}

std::string AdvancedAuctionItemsSubmitDeleteRecord::getItemId() const
{
    return m_Item_id;
}
void AdvancedAuctionItemsSubmitDeleteRecord::setItemId(std::string const& value)
{
    m_Item_id = value;
}
org::openapitools::server::model::Country AdvancedAuctionItemsSubmitDeleteRecord::getCountry() const
{
    return m_Country;
}
void AdvancedAuctionItemsSubmitDeleteRecord::setCountry(org::openapitools::server::model::Country const& value)
{
    m_Country = value;
}
org::openapitools::server::model::Language AdvancedAuctionItemsSubmitDeleteRecord::getLanguage() const
{
    return m_Language;
}
void AdvancedAuctionItemsSubmitDeleteRecord::setLanguage(org::openapitools::server::model::Language const& value)
{
    m_Language = value;
}


} // namespace org::openapitools::server::model

