/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsHotelAttributes_allOf_main_image.h
 *
 * The main hotel image
 */

#ifndef CatalogsHotelAttributes_allOf_main_image_H_
#define CatalogsHotelAttributes_allOf_main_image_H_


#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// The main hotel image
/// </summary>
class  CatalogsHotelAttributes_allOf_main_image
{
public:
    CatalogsHotelAttributes_allOf_main_image();
    virtual ~CatalogsHotelAttributes_allOf_main_image() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsHotelAttributes_allOf_main_image& rhs) const;
    bool operator!=(const CatalogsHotelAttributes_allOf_main_image& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsHotelAttributes_allOf_main_image members

    /// <summary>
    /// &lt;p&gt;&lt;&#x3D; 2000 characters&lt;/p&gt; &lt;p&gt;The link to the main hotel image. Image should be at least 75x75 pixels to avoid errors. Use the additional_image_link field to add more images of your hotel. The URL of your main_image.link must be accessible by the Pinterest user-agent, and send the accurate image. Please make sure there is no template or placeholder image at the link. Must start with http:// or https://.&lt;/p&gt;
    /// </summary>
    std::string getLink() const;
    void setLink(std::string const& value);
    bool linkIsSet() const;
    void unsetLink();
    /// <summary>
    /// Tag appended to the image that identifies image category or details. There can be multiple tags associated with an image
    /// </summary>
    std::vector<std::string> getTag() const;
    void setTag(std::vector<std::string> const& value);
    bool tagIsSet() const;
    void unsetTag();

    friend  void to_json(nlohmann::json& j, const CatalogsHotelAttributes_allOf_main_image& o);
    friend  void from_json(const nlohmann::json& j, CatalogsHotelAttributes_allOf_main_image& o);
protected:
    std::string m_Link;
    bool m_LinkIsSet;
    std::vector<std::string> m_Tag;
    bool m_TagIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsHotelAttributes_allOf_main_image_H_ */
