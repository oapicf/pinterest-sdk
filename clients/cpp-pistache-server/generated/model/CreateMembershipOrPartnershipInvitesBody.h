/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CreateMembershipOrPartnershipInvitesBody.h
 *
 * Body to be used on path to send Members or Partners Invite or Request
 */

#ifndef CreateMembershipOrPartnershipInvitesBody_H_
#define CreateMembershipOrPartnershipInvitesBody_H_


#include "InviteType.h"
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Body to be used on path to send Members or Partners Invite or Request
/// </summary>
class  CreateMembershipOrPartnershipInvitesBody
{
public:
    CreateMembershipOrPartnershipInvitesBody();
    virtual ~CreateMembershipOrPartnershipInvitesBody() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CreateMembershipOrPartnershipInvitesBody& rhs) const;
    bool operator!=(const CreateMembershipOrPartnershipInvitesBody& rhs) const;

    /////////////////////////////////////////////
    /// CreateMembershipOrPartnershipInvitesBody members

    /// <summary>
    /// The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
    /// </summary>
    std::string getBusinessRole() const;
    void setBusinessRole(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::InviteType getInviteType() const;
    void setInviteType(org::openapitools::server::model::InviteType const& value);
    /// <summary>
    /// A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE
    /// </summary>
    std::vector<std::string> getMembers() const;
    void setMembers(std::vector<std::string> const& value);
    bool membersIsSet() const;
    void unsetMembers();
    /// <summary>
    /// A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST
    /// </summary>
    std::vector<std::string> getPartners() const;
    void setPartners(std::vector<std::string> const& value);
    bool partnersIsSet() const;
    void unsetPartners();

    friend  void to_json(nlohmann::json& j, const CreateMembershipOrPartnershipInvitesBody& o);
    friend  void from_json(const nlohmann::json& j, CreateMembershipOrPartnershipInvitesBody& o);
protected:
    std::string m_Business_role;

    org::openapitools::server::model::InviteType m_Invite_type;

    std::vector<std::string> m_Members;
    bool m_MembersIsSet;
    std::vector<std::string> m_Partners;
    bool m_PartnersIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CreateMembershipOrPartnershipInvitesBody_H_ */
