/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsFeedIngestionInfo.h
 *
 * 
 */

#ifndef CatalogsFeedIngestionInfo_H_
#define CatalogsFeedIngestionInfo_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsFeedIngestionInfo
{
public:
    CatalogsFeedIngestionInfo();
    virtual ~CatalogsFeedIngestionInfo() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsFeedIngestionInfo& rhs) const;
    bool operator!=(const CatalogsFeedIngestionInfo& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsFeedIngestionInfo members

    /// <summary>
    /// The number of ingested products that are in stock.
    /// </summary>
    int32_t getINSTOCK() const;
    void setINSTOCK(int32_t const value);
    bool iNSTOCKIsSet() const;
    void unsetIN_STOCK();
    /// <summary>
    /// The number of ingested products that are in out of stock.
    /// </summary>
    int32_t getOUTOFSTOCK() const;
    void setOUTOFSTOCK(int32_t const value);
    bool oUTOFSTOCKIsSet() const;
    void unsetOUT_OF_STOCK();
    /// <summary>
    /// The number of ingested products that are in preorder.
    /// </summary>
    int32_t getPREORDER() const;
    void setPREORDER(int32_t const value);
    bool pREORDERIsSet() const;
    void unsetPREORDER();

    friend  void to_json(nlohmann::json& j, const CatalogsFeedIngestionInfo& o);
    friend  void from_json(const nlohmann::json& j, CatalogsFeedIngestionInfo& o);
protected:
    int32_t m_IN_STOCK;
    bool m_IN_STOCKIsSet;
    int32_t m_OUT_OF_STOCK;
    bool m_OUT_OF_STOCKIsSet;
    int32_t m_PREORDER;
    bool m_PREORDERIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsFeedIngestionInfo_H_ */
