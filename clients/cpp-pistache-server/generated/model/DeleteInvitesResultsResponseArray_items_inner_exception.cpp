/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DeleteInvitesResultsResponseArray_items_inner_exception.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DeleteInvitesResultsResponseArray_items_inner_exception::DeleteInvitesResultsResponseArray_items_inner_exception()
{
    m_Invite_id = "";
    m_Invite_idIsSet = false;
    m_Message = "";
    m_MessageIsSet = false;
    
}

void DeleteInvitesResultsResponseArray_items_inner_exception::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DeleteInvitesResultsResponseArray_items_inner_exception::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DeleteInvitesResultsResponseArray_items_inner_exception::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DeleteInvitesResultsResponseArray_items_inner_exception" : pathPrefix;

         
    if (inviteIdIsSet())
    {
        const std::string& value = m_Invite_id;
        const std::string currentValuePath = _pathPrefix + ".inviteId";
                
        

    }
        
    return success;
}

bool DeleteInvitesResultsResponseArray_items_inner_exception::operator==(const DeleteInvitesResultsResponseArray_items_inner_exception& rhs) const
{
    return
    
    
    
    ((!inviteIdIsSet() && !rhs.inviteIdIsSet()) || (inviteIdIsSet() && rhs.inviteIdIsSet() && getInviteId() == rhs.getInviteId())) &&
    
    
    ((!messageIsSet() && !rhs.messageIsSet()) || (messageIsSet() && rhs.messageIsSet() && getMessage() == rhs.getMessage()))
    
    ;
}

bool DeleteInvitesResultsResponseArray_items_inner_exception::operator!=(const DeleteInvitesResultsResponseArray_items_inner_exception& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DeleteInvitesResultsResponseArray_items_inner_exception& o)
{
    j = nlohmann::json::object();
    if(o.inviteIdIsSet())
        j["invite_id"] = o.m_Invite_id;
    if(o.messageIsSet())
        j["message"] = o.m_Message;
    
}

void from_json(const nlohmann::json& j, DeleteInvitesResultsResponseArray_items_inner_exception& o)
{
    if(j.find("invite_id") != j.end())
    {
        j.at("invite_id").get_to(o.m_Invite_id);
        o.m_Invite_idIsSet = true;
    } 
    if(j.find("message") != j.end())
    {
        j.at("message").get_to(o.m_Message);
        o.m_MessageIsSet = true;
    } 
    
}

std::string DeleteInvitesResultsResponseArray_items_inner_exception::getInviteId() const
{
    return m_Invite_id;
}
void DeleteInvitesResultsResponseArray_items_inner_exception::setInviteId(std::string const& value)
{
    m_Invite_id = value;
    m_Invite_idIsSet = true;
}
bool DeleteInvitesResultsResponseArray_items_inner_exception::inviteIdIsSet() const
{
    return m_Invite_idIsSet;
}
void DeleteInvitesResultsResponseArray_items_inner_exception::unsetInvite_id()
{
    m_Invite_idIsSet = false;
}
std::string DeleteInvitesResultsResponseArray_items_inner_exception::getMessage() const
{
    return m_Message;
}
void DeleteInvitesResultsResponseArray_items_inner_exception::setMessage(std::string const& value)
{
    m_Message = value;
    m_MessageIsSet = true;
}
bool DeleteInvitesResultsResponseArray_items_inner_exception::messageIsSet() const
{
    return m_MessageIsSet;
}
void DeleteInvitesResultsResponseArray_items_inner_exception::unsetMessage()
{
    m_MessageIsSet = false;
}


} // namespace org::openapitools::server::model

