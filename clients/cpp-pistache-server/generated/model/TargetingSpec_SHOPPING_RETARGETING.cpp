/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "TargetingSpec_SHOPPING_RETARGETING.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

TargetingSpec_SHOPPING_RETARGETING::TargetingSpec_SHOPPING_RETARGETING()
{
    m_Lookback_window = 0;
    m_Lookback_windowIsSet = false;
    m_Tag_typesIsSet = false;
    m_Exclusion_window = 0;
    m_Exclusion_windowIsSet = false;
    
}

void TargetingSpec_SHOPPING_RETARGETING::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool TargetingSpec_SHOPPING_RETARGETING::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool TargetingSpec_SHOPPING_RETARGETING::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "TargetingSpec_SHOPPING_RETARGETING" : pathPrefix;

             
    if (tagTypesIsSet())
    {
        const std::vector<int32_t>& value = m_Tag_types;
        const std::string currentValuePath = _pathPrefix + ".tagTypes";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const int32_t& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        
 
                i++;
            }
        }

    }
        
    return success;
}

bool TargetingSpec_SHOPPING_RETARGETING::operator==(const TargetingSpec_SHOPPING_RETARGETING& rhs) const
{
    return
    
    
    
    ((!lookbackWindowIsSet() && !rhs.lookbackWindowIsSet()) || (lookbackWindowIsSet() && rhs.lookbackWindowIsSet() && getLookbackWindow() == rhs.getLookbackWindow())) &&
    
    
    ((!tagTypesIsSet() && !rhs.tagTypesIsSet()) || (tagTypesIsSet() && rhs.tagTypesIsSet() && getTagTypes() == rhs.getTagTypes())) &&
    
    
    ((!exclusionWindowIsSet() && !rhs.exclusionWindowIsSet()) || (exclusionWindowIsSet() && rhs.exclusionWindowIsSet() && getExclusionWindow() == rhs.getExclusionWindow()))
    
    ;
}

bool TargetingSpec_SHOPPING_RETARGETING::operator!=(const TargetingSpec_SHOPPING_RETARGETING& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const TargetingSpec_SHOPPING_RETARGETING& o)
{
    j = nlohmann::json::object();
    if(o.lookbackWindowIsSet())
        j["lookback_window"] = o.m_Lookback_window;
    if(o.tagTypesIsSet() || !o.m_Tag_types.empty())
        j["tag_types"] = o.m_Tag_types;
    if(o.exclusionWindowIsSet())
        j["exclusion_window"] = o.m_Exclusion_window;
    
}

void from_json(const nlohmann::json& j, TargetingSpec_SHOPPING_RETARGETING& o)
{
    if(j.find("lookback_window") != j.end())
    {
        j.at("lookback_window").get_to(o.m_Lookback_window);
        o.m_Lookback_windowIsSet = true;
    } 
    if(j.find("tag_types") != j.end())
    {
        j.at("tag_types").get_to(o.m_Tag_types);
        o.m_Tag_typesIsSet = true;
    } 
    if(j.find("exclusion_window") != j.end())
    {
        j.at("exclusion_window").get_to(o.m_Exclusion_window);
        o.m_Exclusion_windowIsSet = true;
    } 
    
}

int32_t TargetingSpec_SHOPPING_RETARGETING::getLookbackWindow() const
{
    return m_Lookback_window;
}
void TargetingSpec_SHOPPING_RETARGETING::setLookbackWindow(int32_t const value)
{
    m_Lookback_window = value;
    m_Lookback_windowIsSet = true;
}
bool TargetingSpec_SHOPPING_RETARGETING::lookbackWindowIsSet() const
{
    return m_Lookback_windowIsSet;
}
void TargetingSpec_SHOPPING_RETARGETING::unsetLookback_window()
{
    m_Lookback_windowIsSet = false;
}
std::vector<int32_t> TargetingSpec_SHOPPING_RETARGETING::getTagTypes() const
{
    return m_Tag_types;
}
void TargetingSpec_SHOPPING_RETARGETING::setTagTypes(std::vector<int32_t> const value)
{
    m_Tag_types = value;
    m_Tag_typesIsSet = true;
}
bool TargetingSpec_SHOPPING_RETARGETING::tagTypesIsSet() const
{
    return m_Tag_typesIsSet;
}
void TargetingSpec_SHOPPING_RETARGETING::unsetTag_types()
{
    m_Tag_typesIsSet = false;
}
int32_t TargetingSpec_SHOPPING_RETARGETING::getExclusionWindow() const
{
    return m_Exclusion_window;
}
void TargetingSpec_SHOPPING_RETARGETING::setExclusionWindow(int32_t const value)
{
    m_Exclusion_window = value;
    m_Exclusion_windowIsSet = true;
}
bool TargetingSpec_SHOPPING_RETARGETING::exclusionWindowIsSet() const
{
    return m_Exclusion_windowIsSet;
}
void TargetingSpec_SHOPPING_RETARGETING::unsetExclusion_window()
{
    m_Exclusion_windowIsSet = false;
}


} // namespace org::openapitools::server::model

