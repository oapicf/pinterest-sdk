/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * TrendingKeywordsResponse_trends_inner.h
 *
 * 
 */

#ifndef TrendingKeywordsResponse_trends_inner_H_
#define TrendingKeywordsResponse_trends_inner_H_


#include "TrendingKeywordsResponse_trends_inner_time_series.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  TrendingKeywordsResponse_trends_inner
{
public:
    TrendingKeywordsResponse_trends_inner();
    virtual ~TrendingKeywordsResponse_trends_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const TrendingKeywordsResponse_trends_inner& rhs) const;
    bool operator!=(const TrendingKeywordsResponse_trends_inner& rhs) const;

    /////////////////////////////////////////////
    /// TrendingKeywordsResponse_trends_inner members

    /// <summary>
    /// The keyword that is trending.
    /// </summary>
    std::string getKeyword() const;
    void setKeyword(std::string const& value);
    bool keywordIsSet() const;
    void unsetKeyword();
    /// <summary>
    /// The week-over-week percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;50\&quot; would represent a 50% increase in searches in the last seven days compared to the week prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% week-over-week growth.
    /// </summary>
    int32_t getPctGrowthWow() const;
    void setPctGrowthWow(int32_t const value);
    bool pctGrowthWowIsSet() const;
    void unsetPct_growth_wow();
    /// <summary>
    /// The month-over-month percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;400\&quot; would represent a 400% increase in searches in the last 30 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% month-over-month growth.
    /// </summary>
    int32_t getPctGrowthMom() const;
    void setPctGrowthMom(int32_t const value);
    bool pctGrowthMomIsSet() const;
    void unsetPct_growth_mom();
    /// <summary>
    /// The year-over-year percent change in search volume for this keyword.&lt;br /&gt; For example, a value of \&quot;-5\&quot; would represent a 5% decrease in searches in the last 365 days compared to the month prior.&lt;br /&gt; **Note**: growth rates are rounded, with a maximum of +/- 10000% change.  A value of 10001 indicates that this keyword experienced &gt; 10000% year-over-year growth.
    /// </summary>
    int32_t getPctGrowthYoy() const;
    void setPctGrowthYoy(int32_t const value);
    bool pctGrowthYoyIsSet() const;
    void unsetPct_growth_yoy();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::TrendingKeywordsResponse_trends_inner_time_series getTimeSeries() const;
    void setTimeSeries(org::openapitools::server::model::TrendingKeywordsResponse_trends_inner_time_series const& value);
    bool timeSeriesIsSet() const;
    void unsetTime_series();

    friend  void to_json(nlohmann::json& j, const TrendingKeywordsResponse_trends_inner& o);
    friend  void from_json(const nlohmann::json& j, TrendingKeywordsResponse_trends_inner& o);
protected:
    std::string m_Keyword;
    bool m_KeywordIsSet;
    int32_t m_Pct_growth_wow;
    bool m_Pct_growth_wowIsSet;
    int32_t m_Pct_growth_mom;
    bool m_Pct_growth_momIsSet;
    int32_t m_Pct_growth_yoy;
    bool m_Pct_growth_yoyIsSet;
    org::openapitools::server::model::TrendingKeywordsResponse_trends_inner_time_series m_Time_series;
    bool m_Time_seriesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* TrendingKeywordsResponse_trends_inner_H_ */
