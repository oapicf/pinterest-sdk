/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * DeleteInvitesResultsResponseArray_items_inner_exception.h
 *
 * An exception object if there is an error performing the cancellation. It will only be provided if there is an error.
 */

#ifndef DeleteInvitesResultsResponseArray_items_inner_exception_H_
#define DeleteInvitesResultsResponseArray_items_inner_exception_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// An exception object if there is an error performing the cancellation. It will only be provided if there is an error.
/// </summary>
class  DeleteInvitesResultsResponseArray_items_inner_exception
{
public:
    DeleteInvitesResultsResponseArray_items_inner_exception();
    virtual ~DeleteInvitesResultsResponseArray_items_inner_exception() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const DeleteInvitesResultsResponseArray_items_inner_exception& rhs) const;
    bool operator!=(const DeleteInvitesResultsResponseArray_items_inner_exception& rhs) const;

    /////////////////////////////////////////////
    /// DeleteInvitesResultsResponseArray_items_inner_exception members

    /// <summary>
    /// Unique identifier of an invite.
    /// </summary>
    std::string getInviteId() const;
    void setInviteId(std::string const& value);
    bool inviteIdIsSet() const;
    void unsetInvite_id();
    /// <summary>
    /// Error message associated with the error in performing the action on the invite/request.
    /// </summary>
    std::string getMessage() const;
    void setMessage(std::string const& value);
    bool messageIsSet() const;
    void unsetMessage();

    friend  void to_json(nlohmann::json& j, const DeleteInvitesResultsResponseArray_items_inner_exception& o);
    friend  void from_json(const nlohmann::json& j, DeleteInvitesResultsResponseArray_items_inner_exception& o);
protected:
    std::string m_Invite_id;
    bool m_Invite_idIsSet;
    std::string m_Message;
    bool m_MessageIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* DeleteInvitesResultsResponseArray_items_inner_exception_H_ */
