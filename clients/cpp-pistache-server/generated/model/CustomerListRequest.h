/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CustomerListRequest.h
 *
 * 
 */

#ifndef CustomerListRequest_H_
#define CustomerListRequest_H_


#include "UserListType.h"
#include <nlohmann/json.hpp>
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CustomerListRequest
{
public:
    CustomerListRequest();
    virtual ~CustomerListRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CustomerListRequest& rhs) const;
    bool operator!=(const CustomerListRequest& rhs) const;

    /////////////////////////////////////////////
    /// CustomerListRequest members

    /// <summary>
    /// Customer list name.
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    /// <summary>
    /// Records list. Can be any combination of emails, MAIDs, or IDFAs. Emails must be lowercase and can be plain text or hashed using SHA1, SHA256, or MD5. MAIDs and IDFAs must be hashed with SHA1, SHA256, or MD5.
    /// </summary>
    std::string getRecords() const;
    void setRecords(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::UserListType getListType() const;
    void setListType(org::openapitools::server::model::UserListType const& value);
    bool listTypeIsSet() const;
    void unsetList_type();
    /// <summary>
    /// Customer list errors.
    /// </summary>
    nlohmann::json getExceptions() const;
    void setExceptions(nlohmann::json const& value);
    bool exceptionsIsSet() const;
    void unsetExceptions();

    friend  void to_json(nlohmann::json& j, const CustomerListRequest& o);
    friend  void from_json(const nlohmann::json& j, CustomerListRequest& o);
protected:
    std::string m_Name;

    std::string m_Records;

    org::openapitools::server::model::UserListType m_List_type;
    bool m_List_typeIsSet;
    nlohmann::json m_Exceptions;
    bool m_ExceptionsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CustomerListRequest_H_ */
