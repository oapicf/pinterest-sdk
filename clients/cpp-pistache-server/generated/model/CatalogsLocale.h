/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsLocale.h
 *
 * 
 */

#ifndef CatalogsLocale_H_
#define CatalogsLocale_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsLocale
{
public:
    CatalogsLocale();
    virtual ~CatalogsLocale() = default;

    enum class eCatalogsLocale {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    AF_ZA, 
    AR_SA, 
    BG_BG, 
    BN_IN, 
    CS_CZ, 
    DA_DK, 
    DE, 
    EL_GR, 
    EN_AU, 
    EN_CA, 
    EN_GB, 
    EN_IN, 
    EN_US, 
    ES_419, 
    ES_AR, 
    ES_ES, 
    ES_MX, 
    FI_FI, 
    FR, 
    FR_CA, 
    HE_IL, 
    HI_IN, 
    HR_HR, 
    HU_HU, 
    ID_ID, 
    IT, 
    JA, 
    KO_KR, 
    MS_MY, 
    NB_NO, 
    NL, 
    PL_PL, 
    PT_BR, 
    PT_PT, 
    RO_RO, 
    RU_RU, 
    SK_SK, 
    SV_SE, 
    TE_IN, 
    TH_TH, 
    TL_PH, 
    TR, 
    UK_UA, 
    VI_VN, 
    ZH_CN, 
    ZH_TW
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsLocale& rhs) const;
    bool operator!=(const CatalogsLocale& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsLocale members

    CatalogsLocale::eCatalogsLocale getValue() const;
    void setValue(CatalogsLocale::eCatalogsLocale value);
    
    friend  void to_json(nlohmann::json& j, const CatalogsLocale& o);
    friend  void from_json(const nlohmann::json& j, CatalogsLocale& o);
protected:
    CatalogsLocale::eCatalogsLocale m_value = CatalogsLocale::eCatalogsLocale::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* CatalogsLocale_H_ */
