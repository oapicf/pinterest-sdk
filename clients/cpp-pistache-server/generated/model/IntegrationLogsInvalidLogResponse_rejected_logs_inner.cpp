/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "IntegrationLogsInvalidLogResponse_rejected_logs_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

IntegrationLogsInvalidLogResponse_rejected_logs_inner::IntegrationLogsInvalidLogResponse_rejected_logs_inner()
{
    m_Log_index = 0;
    m_Log_indexIsSet = false;
    m_Field = "";
    m_Value = "";
    m_Reason = "";
    
}

void IntegrationLogsInvalidLogResponse_rejected_logs_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool IntegrationLogsInvalidLogResponse_rejected_logs_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool IntegrationLogsInvalidLogResponse_rejected_logs_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "IntegrationLogsInvalidLogResponse_rejected_logs_inner" : pathPrefix;

                    
    return success;
}

bool IntegrationLogsInvalidLogResponse_rejected_logs_inner::operator==(const IntegrationLogsInvalidLogResponse_rejected_logs_inner& rhs) const
{
    return
    
    
    
    ((!logIndexIsSet() && !rhs.logIndexIsSet()) || (logIndexIsSet() && rhs.logIndexIsSet() && getLogIndex() == rhs.getLogIndex())) &&
    
    (getField() == rhs.getField())
     &&
    
    (getValue() == rhs.getValue())
     &&
    
    (getReason() == rhs.getReason())
    
    
    ;
}

bool IntegrationLogsInvalidLogResponse_rejected_logs_inner::operator!=(const IntegrationLogsInvalidLogResponse_rejected_logs_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const IntegrationLogsInvalidLogResponse_rejected_logs_inner& o)
{
    j = nlohmann::json::object();
    if(o.logIndexIsSet())
        j["log_index"] = o.m_Log_index;
    j["field"] = o.m_Field;
    j["value"] = o.m_Value;
    j["reason"] = o.m_Reason;
    
}

void from_json(const nlohmann::json& j, IntegrationLogsInvalidLogResponse_rejected_logs_inner& o)
{
    if(j.find("log_index") != j.end())
    {
        j.at("log_index").get_to(o.m_Log_index);
        o.m_Log_indexIsSet = true;
    } 
    j.at("field").get_to(o.m_Field);
    j.at("value").get_to(o.m_Value);
    j.at("reason").get_to(o.m_Reason);
    
}

int32_t IntegrationLogsInvalidLogResponse_rejected_logs_inner::getLogIndex() const
{
    return m_Log_index;
}
void IntegrationLogsInvalidLogResponse_rejected_logs_inner::setLogIndex(int32_t const value)
{
    m_Log_index = value;
    m_Log_indexIsSet = true;
}
bool IntegrationLogsInvalidLogResponse_rejected_logs_inner::logIndexIsSet() const
{
    return m_Log_indexIsSet;
}
void IntegrationLogsInvalidLogResponse_rejected_logs_inner::unsetLog_index()
{
    m_Log_indexIsSet = false;
}
std::string IntegrationLogsInvalidLogResponse_rejected_logs_inner::getField() const
{
    return m_Field;
}
void IntegrationLogsInvalidLogResponse_rejected_logs_inner::setField(std::string const& value)
{
    m_Field = value;
}
std::string IntegrationLogsInvalidLogResponse_rejected_logs_inner::getValue() const
{
    return m_Value;
}
void IntegrationLogsInvalidLogResponse_rejected_logs_inner::setValue(std::string const& value)
{
    m_Value = value;
}
std::string IntegrationLogsInvalidLogResponse_rejected_logs_inner::getReason() const
{
    return m_Reason;
}
void IntegrationLogsInvalidLogResponse_rejected_logs_inner::setReason(std::string const& value)
{
    m_Reason = value;
}


} // namespace org::openapitools::server::model

