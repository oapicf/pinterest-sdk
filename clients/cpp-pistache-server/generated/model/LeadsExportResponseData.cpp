/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "LeadsExportResponseData.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

LeadsExportResponseData::LeadsExportResponseData()
{
    m_Export_statusIsSet = false;
    m_Download_url = "";
    m_Download_urlIsSet = false;
    
}

void LeadsExportResponseData::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool LeadsExportResponseData::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool LeadsExportResponseData::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "LeadsExportResponseData" : pathPrefix;

            
    return success;
}

bool LeadsExportResponseData::operator==(const LeadsExportResponseData& rhs) const
{
    return
    
    
    
    ((!exportStatusIsSet() && !rhs.exportStatusIsSet()) || (exportStatusIsSet() && rhs.exportStatusIsSet() && getExportStatus() == rhs.getExportStatus())) &&
    
    
    ((!downloadUrlIsSet() && !rhs.downloadUrlIsSet()) || (downloadUrlIsSet() && rhs.downloadUrlIsSet() && getDownloadUrl() == rhs.getDownloadUrl()))
    
    ;
}

bool LeadsExportResponseData::operator!=(const LeadsExportResponseData& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const LeadsExportResponseData& o)
{
    j = nlohmann::json::object();
    if(o.exportStatusIsSet())
        j["export_status"] = o.m_Export_status;
    if(o.downloadUrlIsSet())
        j["download_url"] = o.m_Download_url;
    
}

void from_json(const nlohmann::json& j, LeadsExportResponseData& o)
{
    if(j.find("export_status") != j.end())
    {
        j.at("export_status").get_to(o.m_Export_status);
        o.m_Export_statusIsSet = true;
    } 
    if(j.find("download_url") != j.end())
    {
        j.at("download_url").get_to(o.m_Download_url);
        o.m_Download_urlIsSet = true;
    } 
    
}

org::openapitools::server::model::LeadsExportStatus LeadsExportResponseData::getExportStatus() const
{
    return m_Export_status;
}
void LeadsExportResponseData::setExportStatus(org::openapitools::server::model::LeadsExportStatus const& value)
{
    m_Export_status = value;
    m_Export_statusIsSet = true;
}
bool LeadsExportResponseData::exportStatusIsSet() const
{
    return m_Export_statusIsSet;
}
void LeadsExportResponseData::unsetExport_status()
{
    m_Export_statusIsSet = false;
}
std::string LeadsExportResponseData::getDownloadUrl() const
{
    return m_Download_url;
}
void LeadsExportResponseData::setDownloadUrl(std::string const& value)
{
    m_Download_url = value;
    m_Download_urlIsSet = true;
}
bool LeadsExportResponseData::downloadUrlIsSet() const
{
    return m_Download_urlIsSet;
}
void LeadsExportResponseData::unsetDownload_url()
{
    m_Download_urlIsSet = false;
}


} // namespace org::openapitools::server::model

