/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ConversionEvents_data_inner_custom_data.h
 *
 * Object containing other custom data.
 */

#ifndef ConversionEvents_data_inner_custom_data_H_
#define ConversionEvents_data_inner_custom_data_H_


#include <string>
#include <vector>
#include "ConversionEvents_data_inner_custom_data_contents_inner.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Object containing other custom data.
/// </summary>
class  ConversionEvents_data_inner_custom_data
{
public:
    ConversionEvents_data_inner_custom_data();
    virtual ~ConversionEvents_data_inner_custom_data() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ConversionEvents_data_inner_custom_data& rhs) const;
    bool operator!=(const ConversionEvents_data_inner_custom_data& rhs) const;

    /////////////////////////////////////////////
    /// ConversionEvents_data_inner_custom_data members

    /// <summary>
    /// The ISO-4217 currency code. If not provided, we will default to the advertiser&#39;s currency set during account creation. Your campaign performance needs this field to report right ROAS/CPA.
    /// </summary>
    std::string getCurrency() const;
    void setCurrency(std::string const& value);
    bool currencyIsSet() const;
    void unsetCurrency();
    /// <summary>
    /// Total value of the event. Accepted as a string in the request; it will be parsed into a double. For example, if there are two items in a checkout event, the value should be the total price. We recommend to use pre-tax, pre-shipping final value.
    /// </summary>
    std::string getValue() const;
    void setValue(std::string const& value);
    bool valueIsSet() const;
    void unsetValue();
    /// <summary>
    /// List of products IDs. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
    /// </summary>
    std::vector<std::string> getContentIds() const;
    void setContentIds(std::vector<std::string> const& value);
    bool contentIdsIsSet() const;
    void unsetContent_ids();
    /// <summary>
    /// The name of the page or product associated with the event.
    /// </summary>
    std::string getContentName() const;
    void setContentName(std::string const& value);
    bool contentNameIsSet() const;
    void unsetContent_name();
    /// <summary>
    /// The category of the content associated with the event.
    /// </summary>
    std::string getContentCategory() const;
    void setContentCategory(std::string const& value);
    bool contentCategoryIsSet() const;
    void unsetContent_category();
    /// <summary>
    /// The brand of the content associated with the event.
    /// </summary>
    std::string getContentBrand() const;
    void setContentBrand(std::string const& value);
    bool contentBrandIsSet() const;
    void unsetContent_brand();
    /// <summary>
    /// A list of objects containing information about products, such as price and quantity. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
    /// </summary>
    std::vector<org::openapitools::server::model::ConversionEvents_data_inner_custom_data_contents_inner> getContents() const;
    void setContents(std::vector<org::openapitools::server::model::ConversionEvents_data_inner_custom_data_contents_inner> const& value);
    bool contentsIsSet() const;
    void unsetContents();
    /// <summary>
    /// Total number of products of the event. For example, the total number of items purchased in a checkout event. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&quot; target&#x3D;\&quot;_blank\&quot;&gt;here&lt;/a&gt; (Install the Pinterest tag section).
    /// </summary>
    int64_t getNumItems() const;
    void setNumItems(int64_t const value);
    bool numItemsIsSet() const;
    void unsetNum_items();
    /// <summary>
    /// The order ID. We recommend sending order_id to help us deduplicate events when necessary. This also helps to run other measurement products at Pinterest.
    /// </summary>
    std::string getOrderId() const;
    void setOrderId(std::string const& value);
    bool orderIdIsSet() const;
    void unsetOrder_id();
    /// <summary>
    /// The search string related to the user conversion event.
    /// </summary>
    std::string getSearchString() const;
    void setSearchString(std::string const& value);
    bool searchStringIsSet() const;
    void unsetSearch_string();
    /// <summary>
    /// Flags for different privacy rights laws to opt out users of sharing personal information. Values should be comma separated. Please follow the &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/limited-data-processing\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Help Center&lt;/a&gt; and &lt;a href&#x3D;\&quot;/docs/api-features/conversion-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;dev site&lt;/a&gt; for specific opt_out_type set up.
    /// </summary>
    std::string getOptOutType() const;
    void setOptOutType(std::string const& value);
    bool optOutTypeIsSet() const;
    void unsetOpt_out_type();
    /// <summary>
    /// Named partner. Not required, this is for Pinterest internal use only. Please do not use this unless specifically guided.
    /// </summary>
    std::string getNp() const;
    void setNp(std::string const& value);
    bool npIsSet() const;
    void unsetNp();

    friend  void to_json(nlohmann::json& j, const ConversionEvents_data_inner_custom_data& o);
    friend  void from_json(const nlohmann::json& j, ConversionEvents_data_inner_custom_data& o);
protected:
    std::string m_Currency;
    bool m_CurrencyIsSet;
    std::string m_Value;
    bool m_ValueIsSet;
    std::vector<std::string> m_Content_ids;
    bool m_Content_idsIsSet;
    std::string m_Content_name;
    bool m_Content_nameIsSet;
    std::string m_Content_category;
    bool m_Content_categoryIsSet;
    std::string m_Content_brand;
    bool m_Content_brandIsSet;
    std::vector<org::openapitools::server::model::ConversionEvents_data_inner_custom_data_contents_inner> m_Contents;
    bool m_ContentsIsSet;
    int64_t m_Num_items;
    bool m_Num_itemsIsSet;
    std::string m_Order_id;
    bool m_Order_idIsSet;
    std::string m_Search_string;
    bool m_Search_stringIsSet;
    std::string m_Opt_out_type;
    bool m_Opt_out_typeIsSet;
    std::string m_Np;
    bool m_NpIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ConversionEvents_data_inner_custom_data_H_ */
