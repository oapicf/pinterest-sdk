/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsFeedProcessingSchedule.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsFeedProcessingSchedule::CatalogsFeedProcessingSchedule()
{
    m_Time = "";
    m_Timezone = "";
    
}

void CatalogsFeedProcessingSchedule::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsFeedProcessingSchedule::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsFeedProcessingSchedule::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsFeedProcessingSchedule" : pathPrefix;

         
    
    /* Time */ {
        const std::string& value = m_Time;
        const std::string currentValuePath = _pathPrefix + ".time";
                
        

    }
        
    return success;
}

bool CatalogsFeedProcessingSchedule::operator==(const CatalogsFeedProcessingSchedule& rhs) const
{
    return
    
    
    (getTime() == rhs.getTime())
     &&
    
    (getTimezone() == rhs.getTimezone())
    
    
    ;
}

bool CatalogsFeedProcessingSchedule::operator!=(const CatalogsFeedProcessingSchedule& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsFeedProcessingSchedule& o)
{
    j = nlohmann::json::object();
    j["time"] = o.m_Time;
    j["timezone"] = o.m_Timezone;
    
}

void from_json(const nlohmann::json& j, CatalogsFeedProcessingSchedule& o)
{
    j.at("time").get_to(o.m_Time);
    j.at("timezone").get_to(o.m_Timezone);
    
}

std::string CatalogsFeedProcessingSchedule::getTime() const
{
    return m_Time;
}
void CatalogsFeedProcessingSchedule::setTime(std::string const& value)
{
    m_Time = value;
}
std::string CatalogsFeedProcessingSchedule::getTimezone() const
{
    return m_Timezone;
}
void CatalogsFeedProcessingSchedule::setTimezone(std::string const& value)
{
    m_Timezone = value;
}


} // namespace org::openapitools::server::model

