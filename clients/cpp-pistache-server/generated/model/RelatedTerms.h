/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * RelatedTerms.h
 *
 * 
 */

#ifndef RelatedTerms_H_
#define RelatedTerms_H_


#include "RelatedTerms_related_terms_list_inner.h"
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  RelatedTerms
{
public:
    RelatedTerms();
    virtual ~RelatedTerms() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const RelatedTerms& rhs) const;
    bool operator!=(const RelatedTerms& rhs) const;

    /////////////////////////////////////////////
    /// RelatedTerms members

    /// <summary>
    /// First input term. For example, if you pass \&quot;?terms&#x3D;clothes,workout\&quot;, then id will be \&quot;clothes\&quot;
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Total number of related terms returned
    /// </summary>
    int32_t getRelatedTermCount() const;
    void setRelatedTermCount(int32_t const value);
    bool relatedTermCountIsSet() const;
    void unsetRelated_term_count();
    /// <summary>
    /// The id of the advertiser.
    /// </summary>
    std::vector<org::openapitools::server::model::RelatedTerms_related_terms_list_inner> getRelatedTermsList() const;
    void setRelatedTermsList(std::vector<org::openapitools::server::model::RelatedTerms_related_terms_list_inner> const& value);
    bool relatedTermsListIsSet() const;
    void unsetRelated_terms_list();

    friend  void to_json(nlohmann::json& j, const RelatedTerms& o);
    friend  void from_json(const nlohmann::json& j, RelatedTerms& o);
protected:
    std::string m_Id;
    bool m_IdIsSet;
    int32_t m_Related_term_count;
    bool m_Related_term_countIsSet;
    std::vector<org::openapitools::server::model::RelatedTerms_related_terms_list_inner> m_Related_terms_list;
    bool m_Related_terms_listIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* RelatedTerms_H_ */
