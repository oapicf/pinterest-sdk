/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Keyword.h
 *
 * 
 */

#ifndef Keyword_H_
#define Keyword_H_


#include <string>
#include "MatchTypeResponse.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  Keyword
{
public:
    Keyword();
    virtual ~Keyword() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Keyword& rhs) const;
    bool operator!=(const Keyword& rhs) const;

    /////////////////////////////////////////////
    /// Keyword members

    /// <summary>
    /// &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; bid field has been deprecated. Input will not be set and field will return null. Keyword custom bid in microcurrency - null if inherited from parent ad group.
    /// </summary>
    int32_t getBid() const;
    void setBid(int32_t const value);
    bool bidIsSet() const;
    void unsetBid();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::MatchTypeResponse getMatchType() const;
    void setMatchType(org::openapitools::server::model::MatchTypeResponse const& value);
    /// <summary>
    /// Keyword value (120 chars max).
    /// </summary>
    std::string getValue() const;
    void setValue(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    bool isArchived() const;
    void setArchived(bool const value);
    bool archivedIsSet() const;
    void unsetArchived();
    /// <summary>
    /// Keyword ID .
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Keyword parent entity ID (advertiser, campaign, ad group).
    /// </summary>
    std::string getParentId() const;
    void setParentId(std::string const& value);
    bool parentIdIsSet() const;
    void unsetParent_id();
    /// <summary>
    /// Parent entity type
    /// </summary>
    std::string getParentType() const;
    void setParentType(std::string const& value);
    bool parentTypeIsSet() const;
    void unsetParent_type();
    /// <summary>
    /// Always keyword
    /// </summary>
    std::string getType() const;
    void setType(std::string const& value);
    bool typeIsSet() const;
    void unsetType();

    friend  void to_json(nlohmann::json& j, const Keyword& o);
    friend  void from_json(const nlohmann::json& j, Keyword& o);
protected:
    int32_t m_Bid;
    bool m_BidIsSet;
    org::openapitools::server::model::MatchTypeResponse m_Match_type;

    std::string m_Value;

    bool m_Archived;
    bool m_ArchivedIsSet;
    std::string m_Id;
    bool m_IdIsSet;
    std::string m_Parent_id;
    bool m_Parent_idIsSet;
    std::string m_Parent_type;
    bool m_Parent_typeIsSet;
    std::string m_Type;
    bool m_TypeIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* Keyword_H_ */
