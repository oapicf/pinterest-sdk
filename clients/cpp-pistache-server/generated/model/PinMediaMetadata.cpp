/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PinMediaMetadata.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

PinMediaMetadata::PinMediaMetadata()
{
    m_Item_type = "";
    m_Item_typeIsSet = false;
    m_Title = "";
    m_TitleIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m_Link = "";
    m_LinkIsSet = false;
    m_ImagesIsSet = false;
    m_Cover_image_url = "";
    m_Cover_image_urlIsSet = false;
    m_Video_url = "";
    m_Video_urlIsSet = false;
    m_Duration = 0.0;
    m_DurationIsSet = false;
    m_Height = 0;
    m_HeightIsSet = false;
    m_Width = 0;
    m_WidthIsSet = false;
    
}

void PinMediaMetadata::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool PinMediaMetadata::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool PinMediaMetadata::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "PinMediaMetadata" : pathPrefix;

                                            
    return success;
}

bool PinMediaMetadata::operator==(const PinMediaMetadata& rhs) const
{
    return
    
    
    
    ((!itemTypeIsSet() && !rhs.itemTypeIsSet()) || (itemTypeIsSet() && rhs.itemTypeIsSet() && getItemType() == rhs.getItemType())) &&
    
    
    ((!titleIsSet() && !rhs.titleIsSet()) || (titleIsSet() && rhs.titleIsSet() && getTitle() == rhs.getTitle())) &&
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    
    ((!linkIsSet() && !rhs.linkIsSet()) || (linkIsSet() && rhs.linkIsSet() && getLink() == rhs.getLink())) &&
    
    
    ((!imagesIsSet() && !rhs.imagesIsSet()) || (imagesIsSet() && rhs.imagesIsSet() && getImages() == rhs.getImages())) &&
    
    
    ((!coverImageUrlIsSet() && !rhs.coverImageUrlIsSet()) || (coverImageUrlIsSet() && rhs.coverImageUrlIsSet() && getCoverImageUrl() == rhs.getCoverImageUrl())) &&
    
    
    ((!videoUrlIsSet() && !rhs.videoUrlIsSet()) || (videoUrlIsSet() && rhs.videoUrlIsSet() && getVideoUrl() == rhs.getVideoUrl())) &&
    
    
    ((!durationIsSet() && !rhs.durationIsSet()) || (durationIsSet() && rhs.durationIsSet() && getDuration() == rhs.getDuration())) &&
    
    
    ((!heightIsSet() && !rhs.heightIsSet()) || (heightIsSet() && rhs.heightIsSet() && getHeight() == rhs.getHeight())) &&
    
    
    ((!widthIsSet() && !rhs.widthIsSet()) || (widthIsSet() && rhs.widthIsSet() && getWidth() == rhs.getWidth()))
    
    ;
}

bool PinMediaMetadata::operator!=(const PinMediaMetadata& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const PinMediaMetadata& o)
{
    j = nlohmann::json::object();
    if(o.itemTypeIsSet())
        j["item_type"] = o.m_Item_type;
    if(o.titleIsSet())
        j["title"] = o.m_Title;
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.linkIsSet())
        j["link"] = o.m_Link;
    if(o.imagesIsSet())
        j["images"] = o.m_Images;
    if(o.coverImageUrlIsSet())
        j["cover_image_url"] = o.m_Cover_image_url;
    if(o.videoUrlIsSet())
        j["video_url"] = o.m_Video_url;
    if(o.durationIsSet())
        j["duration"] = o.m_Duration;
    if(o.heightIsSet())
        j["height"] = o.m_Height;
    if(o.widthIsSet())
        j["width"] = o.m_Width;
    
}

void from_json(const nlohmann::json& j, PinMediaMetadata& o)
{
    if(j.find("item_type") != j.end())
    {
        j.at("item_type").get_to(o.m_Item_type);
        o.m_Item_typeIsSet = true;
    } 
    if(j.find("title") != j.end())
    {
        j.at("title").get_to(o.m_Title);
        o.m_TitleIsSet = true;
    } 
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("link") != j.end())
    {
        j.at("link").get_to(o.m_Link);
        o.m_LinkIsSet = true;
    } 
    if(j.find("images") != j.end())
    {
        j.at("images").get_to(o.m_Images);
        o.m_ImagesIsSet = true;
    } 
    if(j.find("cover_image_url") != j.end())
    {
        j.at("cover_image_url").get_to(o.m_Cover_image_url);
        o.m_Cover_image_urlIsSet = true;
    } 
    if(j.find("video_url") != j.end())
    {
        j.at("video_url").get_to(o.m_Video_url);
        o.m_Video_urlIsSet = true;
    } 
    if(j.find("duration") != j.end())
    {
        j.at("duration").get_to(o.m_Duration);
        o.m_DurationIsSet = true;
    } 
    if(j.find("height") != j.end())
    {
        j.at("height").get_to(o.m_Height);
        o.m_HeightIsSet = true;
    } 
    if(j.find("width") != j.end())
    {
        j.at("width").get_to(o.m_Width);
        o.m_WidthIsSet = true;
    } 
    
}

std::string PinMediaMetadata::getItemType() const
{
    return m_Item_type;
}
void PinMediaMetadata::setItemType(std::string const& value)
{
    m_Item_type = value;
    m_Item_typeIsSet = true;
}
bool PinMediaMetadata::itemTypeIsSet() const
{
    return m_Item_typeIsSet;
}
void PinMediaMetadata::unsetItem_type()
{
    m_Item_typeIsSet = false;
}
std::string PinMediaMetadata::getTitle() const
{
    return m_Title;
}
void PinMediaMetadata::setTitle(std::string const& value)
{
    m_Title = value;
    m_TitleIsSet = true;
}
bool PinMediaMetadata::titleIsSet() const
{
    return m_TitleIsSet;
}
void PinMediaMetadata::unsetTitle()
{
    m_TitleIsSet = false;
}
std::string PinMediaMetadata::getDescription() const
{
    return m_Description;
}
void PinMediaMetadata::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool PinMediaMetadata::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void PinMediaMetadata::unsetDescription()
{
    m_DescriptionIsSet = false;
}
std::string PinMediaMetadata::getLink() const
{
    return m_Link;
}
void PinMediaMetadata::setLink(std::string const& value)
{
    m_Link = value;
    m_LinkIsSet = true;
}
bool PinMediaMetadata::linkIsSet() const
{
    return m_LinkIsSet;
}
void PinMediaMetadata::unsetLink()
{
    m_LinkIsSet = false;
}
org::openapitools::server::model::ImageMetadata_images PinMediaMetadata::getImages() const
{
    return m_Images;
}
void PinMediaMetadata::setImages(org::openapitools::server::model::ImageMetadata_images const& value)
{
    m_Images = value;
    m_ImagesIsSet = true;
}
bool PinMediaMetadata::imagesIsSet() const
{
    return m_ImagesIsSet;
}
void PinMediaMetadata::unsetImages()
{
    m_ImagesIsSet = false;
}
std::string PinMediaMetadata::getCoverImageUrl() const
{
    return m_Cover_image_url;
}
void PinMediaMetadata::setCoverImageUrl(std::string const& value)
{
    m_Cover_image_url = value;
    m_Cover_image_urlIsSet = true;
}
bool PinMediaMetadata::coverImageUrlIsSet() const
{
    return m_Cover_image_urlIsSet;
}
void PinMediaMetadata::unsetCover_image_url()
{
    m_Cover_image_urlIsSet = false;
}
std::string PinMediaMetadata::getVideoUrl() const
{
    return m_Video_url;
}
void PinMediaMetadata::setVideoUrl(std::string const& value)
{
    m_Video_url = value;
    m_Video_urlIsSet = true;
}
bool PinMediaMetadata::videoUrlIsSet() const
{
    return m_Video_urlIsSet;
}
void PinMediaMetadata::unsetVideo_url()
{
    m_Video_urlIsSet = false;
}
double PinMediaMetadata::getDuration() const
{
    return m_Duration;
}
void PinMediaMetadata::setDuration(double const value)
{
    m_Duration = value;
    m_DurationIsSet = true;
}
bool PinMediaMetadata::durationIsSet() const
{
    return m_DurationIsSet;
}
void PinMediaMetadata::unsetDuration()
{
    m_DurationIsSet = false;
}
int32_t PinMediaMetadata::getHeight() const
{
    return m_Height;
}
void PinMediaMetadata::setHeight(int32_t const value)
{
    m_Height = value;
    m_HeightIsSet = true;
}
bool PinMediaMetadata::heightIsSet() const
{
    return m_HeightIsSet;
}
void PinMediaMetadata::unsetHeight()
{
    m_HeightIsSet = false;
}
int32_t PinMediaMetadata::getWidth() const
{
    return m_Width;
}
void PinMediaMetadata::setWidth(int32_t const value)
{
    m_Width = value;
    m_WidthIsSet = true;
}
bool PinMediaMetadata::widthIsSet() const
{
    return m_WidthIsSet;
}
void PinMediaMetadata::unsetWidth()
{
    m_WidthIsSet = false;
}


} // namespace org::openapitools::server::model

