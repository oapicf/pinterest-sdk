/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsFeedCredentials.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsFeedCredentials::CatalogsFeedCredentials()
{
    m_Password = "";
    m_Username = "";
    
}

void CatalogsFeedCredentials::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsFeedCredentials::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsFeedCredentials::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsFeedCredentials" : pathPrefix;

            
    return success;
}

bool CatalogsFeedCredentials::operator==(const CatalogsFeedCredentials& rhs) const
{
    return
    
    
    (getPassword() == rhs.getPassword())
     &&
    
    (getUsername() == rhs.getUsername())
    
    
    ;
}

bool CatalogsFeedCredentials::operator!=(const CatalogsFeedCredentials& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsFeedCredentials& o)
{
    j = nlohmann::json::object();
    j["password"] = o.m_Password;
    j["username"] = o.m_Username;
    
}

void from_json(const nlohmann::json& j, CatalogsFeedCredentials& o)
{
    j.at("password").get_to(o.m_Password);
    j.at("username").get_to(o.m_Username);
    
}

std::string CatalogsFeedCredentials::getPassword() const
{
    return m_Password;
}
void CatalogsFeedCredentials::setPassword(std::string const& value)
{
    m_Password = value;
}
std::string CatalogsFeedCredentials::getUsername() const
{
    return m_Username;
}
void CatalogsFeedCredentials::setUsername(std::string const& value)
{
    m_Username = value;
}


} // namespace org::openapitools::server::model

