/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsCreativeAssetsAttributes.h
 *
 * 
 */

#ifndef CatalogsCreativeAssetsAttributes_H_
#define CatalogsCreativeAssetsAttributes_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsCreativeAssetsAttributes
{
public:
    CatalogsCreativeAssetsAttributes();
    virtual ~CatalogsCreativeAssetsAttributes() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsCreativeAssetsAttributes& rhs) const;
    bool operator!=(const CatalogsCreativeAssetsAttributes& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsCreativeAssetsAttributes members

    /// <summary>
    /// The name of the creative assets.
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string const& value);
    bool titleIsSet() const;
    void unsetTitle();
    /// <summary>
    /// Brief description of the creative assets.
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string const& value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// Link to the creative assets page.
    /// </summary>
    std::string getLink() const;
    void setLink(std::string const& value);
    bool linkIsSet() const;
    void unsetLink();
    /// <summary>
    /// IOS deep link to the creative assets page.
    /// </summary>
    std::string getIosDeepLink() const;
    void setIosDeepLink(std::string const& value);
    bool iosDeepLinkIsSet() const;
    void unsetIos_deep_link();
    /// <summary>
    /// Link to the creative assets page.
    /// </summary>
    std::string getAndroidDeepLink() const;
    void setAndroidDeepLink(std::string const& value);
    bool androidDeepLinkIsSet() const;
    void unsetAndroid_deep_link();
    /// <summary>
    /// The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
    /// </summary>
    std::string getGoogleProductCategory() const;
    void setGoogleProductCategory(std::string const& value);
    bool googleProductCategoryIsSet() const;
    void unsetGoogle_product_category();
    /// <summary>
    /// Custom grouping of creative assets.
    /// </summary>
    std::string getCustomLabel0() const;
    void setCustomLabel0(std::string const& value);
    bool customLabel0IsSet() const;
    void unsetCustom_label_0();
    /// <summary>
    /// Custom grouping of creative assets.
    /// </summary>
    std::string getCustomLabel1() const;
    void setCustomLabel1(std::string const& value);
    bool customLabel1IsSet() const;
    void unsetCustom_label_1();
    /// <summary>
    /// Custom grouping of creative assets.
    /// </summary>
    std::string getCustomLabel2() const;
    void setCustomLabel2(std::string const& value);
    bool customLabel2IsSet() const;
    void unsetCustom_label_2();
    /// <summary>
    /// Custom grouping of creative assets.
    /// </summary>
    std::string getCustomLabel3() const;
    void setCustomLabel3(std::string const& value);
    bool customLabel3IsSet() const;
    void unsetCustom_label_3();
    /// <summary>
    /// Custom grouping of creative assets.
    /// </summary>
    std::string getCustomLabel4() const;
    void setCustomLabel4(std::string const& value);
    bool customLabel4IsSet() const;
    void unsetCustom_label_4();
    /// <summary>
    /// Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.
    /// </summary>
    std::string getVisibility() const;
    void setVisibility(std::string const& value);
    bool visibilityIsSet() const;
    void unsetVisibility();
    /// <summary>
    /// The creative assets image.
    /// </summary>
    std::string getImageLink() const;
    void setImageLink(std::string const& value);
    bool imageLinkIsSet() const;
    void unsetImage_link();
    /// <summary>
    /// The creative assets video.
    /// </summary>
    std::string getVideoLink() const;
    void setVideoLink(std::string const& value);
    bool videoLinkIsSet() const;
    void unsetVideo_link();

    friend  void to_json(nlohmann::json& j, const CatalogsCreativeAssetsAttributes& o);
    friend  void from_json(const nlohmann::json& j, CatalogsCreativeAssetsAttributes& o);
protected:
    std::string m_Title;
    bool m_TitleIsSet;
    std::string m_Description;
    bool m_DescriptionIsSet;
    std::string m_Link;
    bool m_LinkIsSet;
    std::string m_Ios_deep_link;
    bool m_Ios_deep_linkIsSet;
    std::string m_Android_deep_link;
    bool m_Android_deep_linkIsSet;
    std::string m_Google_product_category;
    bool m_Google_product_categoryIsSet;
    std::string m_Custom_label_0;
    bool m_Custom_label_0IsSet;
    std::string m_Custom_label_1;
    bool m_Custom_label_1IsSet;
    std::string m_Custom_label_2;
    bool m_Custom_label_2IsSet;
    std::string m_Custom_label_3;
    bool m_Custom_label_3IsSet;
    std::string m_Custom_label_4;
    bool m_Custom_label_4IsSet;
    std::string m_Visibility;
    bool m_VisibilityIsSet;
    std::string m_Image_link;
    bool m_Image_linkIsSet;
    std::string m_Video_link;
    bool m_Video_linkIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsCreativeAssetsAttributes_H_ */
