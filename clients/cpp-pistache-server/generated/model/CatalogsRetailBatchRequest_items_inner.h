/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsRetailBatchRequest_items_inner.h
 *
 * 
 */

#ifndef CatalogsRetailBatchRequest_items_inner_H_
#define CatalogsRetailBatchRequest_items_inner_H_


#include "CatalogsUpdateRetailItem.h"
#include "ItemAttributesRequest.h"
#include <string>
#include "CatalogsCreateRetailItem.h"
#include "CatalogsDeleteRetailItem.h"
#include <vector>
#include "UpdateMaskFieldType.h"
#include "CatalogsUpsertRetailItem.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsRetailBatchRequest_items_inner
{
public:
    CatalogsRetailBatchRequest_items_inner();
    virtual ~CatalogsRetailBatchRequest_items_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsRetailBatchRequest_items_inner& rhs) const;
    bool operator!=(const CatalogsRetailBatchRequest_items_inner& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsRetailBatchRequest_items_inner members

    /// <summary>
    /// The catalog item id in the merchant namespace
    /// </summary>
    std::string getItemId() const;
    void setItemId(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    std::string getOperation() const;
    void setOperation(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::ItemAttributesRequest getAttributes() const;
    void setAttributes(org::openapitools::server::model::ItemAttributesRequest const& value);
    /// <summary>
    /// The list of product attributes to be updated. Attributes specified in the update mask without a value specified in the body will be deleted from the product item.
    /// </summary>
    std::vector<org::openapitools::server::model::UpdateMaskFieldType> getUpdateMask() const;
    void setUpdateMask(std::vector<org::openapitools::server::model::UpdateMaskFieldType> const& value);
    bool updateMaskIsSet() const;
    void unsetUpdate_mask();

    friend  void to_json(nlohmann::json& j, const CatalogsRetailBatchRequest_items_inner& o);
    friend  void from_json(const nlohmann::json& j, CatalogsRetailBatchRequest_items_inner& o);
protected:
    std::string m_Item_id;

    std::string m_Operation;

    org::openapitools::server::model::ItemAttributesRequest m_Attributes;

    std::vector<org::openapitools::server::model::UpdateMaskFieldType> m_Update_mask;
    bool m_Update_maskIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsRetailBatchRequest_items_inner_H_ */
