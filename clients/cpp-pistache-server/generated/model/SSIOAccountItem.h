/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SSIOAccountItem.h
 *
 * 
 */

#ifndef SSIOAccountItem_H_
#define SSIOAccountItem_H_


#include <string>
#include "SSIOAccountAddress.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  SSIOAccountItem
{
public:
    SSIOAccountItem();
    virtual ~SSIOAccountItem() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SSIOAccountItem& rhs) const;
    bool operator!=(const SSIOAccountItem& rhs) const;

    /////////////////////////////////////////////
    /// SSIOAccountItem members

    /// <summary>
    /// Salesforce id for billto_info
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Salesforce id for IO Terms and Conditions
    /// </summary>
    std::string getIoTermsId() const;
    void setIoTermsId(std::string const& value);
    bool ioTermsIdIsSet() const;
    void unsetIo_terms_id();
    /// <summary>
    /// Salesforce text for IO Terms and Conditions
    /// </summary>
    std::string getIoTerms() const;
    void setIoTerms(std::string const& value);
    bool ioTermsIsSet() const;
    void unsetIo_terms();
    /// <summary>
    /// Salesforce id for US Terms and Conditions
    /// </summary>
    std::string getUsTermsId() const;
    void setUsTermsId(std::string const& value);
    bool usTermsIdIsSet() const;
    void unsetUs_terms_id();
    /// <summary>
    /// Salesforce text for US Terms and Conditions
    /// </summary>
    std::string getUsTerms() const;
    void setUsTerms(std::string const& value);
    bool usTermsIsSet() const;
    void unsetUs_terms();
    /// <summary>
    /// Salesforce id for Rest of the World Terms and Conditions
    /// </summary>
    std::string getRowTermsId() const;
    void setRowTermsId(std::string const& value);
    bool rowTermsIdIsSet() const;
    void unsetRow_terms_id();
    /// <summary>
    /// Salesforce text for Rest of the World Terms and Conditions
    /// </summary>
    std::string getRowTerms() const;
    void setRowTerms(std::string const& value);
    bool rowTermsIsSet() const;
    void unsetRow_terms();
    /// <summary>
    /// Insertion Order Type - Pinterest Paper or Agency Paper
    /// </summary>
    std::string getIoType() const;
    void setIoType(std::string const& value);
    bool ioTypeIsSet() const;
    void unsetIo_type();
    /// <summary>
    /// Address information that is associated with this account.
    /// </summary>
    std::vector<org::openapitools::server::model::SSIOAccountAddress> getAddresses() const;
    void setAddresses(std::vector<org::openapitools::server::model::SSIOAccountAddress> const& value);
    bool addressesIsSet() const;
    void unsetAddresses();

    friend  void to_json(nlohmann::json& j, const SSIOAccountItem& o);
    friend  void from_json(const nlohmann::json& j, SSIOAccountItem& o);
protected:
    std::string m_Id;
    bool m_IdIsSet;
    std::string m_Io_terms_id;
    bool m_Io_terms_idIsSet;
    std::string m_Io_terms;
    bool m_Io_termsIsSet;
    std::string m_Us_terms_id;
    bool m_Us_terms_idIsSet;
    std::string m_Us_terms;
    bool m_Us_termsIsSet;
    std::string m_Row_terms_id;
    bool m_Row_terms_idIsSet;
    std::string m_Row_terms;
    bool m_Row_termsIsSet;
    std::string m_Io_type;
    bool m_Io_typeIsSet;
    std::vector<org::openapitools::server::model::SSIOAccountAddress> m_Addresses;
    bool m_AddressesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* SSIOAccountItem_H_ */
