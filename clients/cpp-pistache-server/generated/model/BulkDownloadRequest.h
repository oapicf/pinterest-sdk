/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * BulkDownloadRequest.h
 *
 * Ad entities to get in bulk request.
 */

#ifndef BulkDownloadRequest_H_
#define BulkDownloadRequest_H_


#include "BulkEntityType.h"
#include <string>
#include "BulkOutputFormat.h"
#include "BulkDownloadRequest_campaign_filter.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Ad entities to get in bulk request.
/// </summary>
class  BulkDownloadRequest
{
public:
    BulkDownloadRequest();
    virtual ~BulkDownloadRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const BulkDownloadRequest& rhs) const;
    bool operator!=(const BulkDownloadRequest& rhs) const;

    /////////////////////////////////////////////
    /// BulkDownloadRequest members

    /// <summary>
    /// All entity types specified will be downloaded. Fewer types result in faster downloads.
    /// </summary>
    std::vector<BulkEntityType> getEntityTypes() const;
    void setEntityTypes(std::vector<BulkEntityType> const& value);
    bool entityTypesIsSet() const;
    void unsetEntity_types();
    /// <summary>
    /// All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
    /// </summary>
    std::vector<std::string> getEntityIds() const;
    void setEntityIds(std::vector<std::string> const& value);
    bool entityIdsIsSet() const;
    void unsetEntity_ids();
    /// <summary>
    /// Unix UTC timestamp to retrieve all entities that have changed since this time.
    /// </summary>
    std::string getUpdatedSince() const;
    void setUpdatedSince(std::string const& value);
    bool updatedSinceIsSet() const;
    void unsetUpdated_since();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::BulkDownloadRequest_campaign_filter getCampaignFilter() const;
    void setCampaignFilter(org::openapitools::server::model::BulkDownloadRequest_campaign_filter const& value);
    bool campaignFilterIsSet() const;
    void unsetCampaign_filter();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::BulkOutputFormat getOutputFormat() const;
    void setOutputFormat(org::openapitools::server::model::BulkOutputFormat const& value);
    bool outputFormatIsSet() const;
    void unsetOutput_format();

    friend  void to_json(nlohmann::json& j, const BulkDownloadRequest& o);
    friend  void from_json(const nlohmann::json& j, BulkDownloadRequest& o);
protected:
    std::vector<BulkEntityType> m_Entity_types;
    bool m_Entity_typesIsSet;
    std::vector<std::string> m_Entity_ids;
    bool m_Entity_idsIsSet;
    std::string m_Updated_since;
    bool m_Updated_sinceIsSet;
    org::openapitools::server::model::BulkDownloadRequest_campaign_filter m_Campaign_filter;
    bool m_Campaign_filterIsSet;
    org::openapitools::server::model::BulkOutputFormat m_Output_format;
    bool m_Output_formatIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* BulkDownloadRequest_H_ */
