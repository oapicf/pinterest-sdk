/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AudienceCreateRequest.h
 *
 * 
 */

#ifndef AudienceCreateRequest_H_
#define AudienceCreateRequest_H_


#include "AudienceCreateRequest_1_audience_type.h"
#include "AudienceRule.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  AudienceCreateRequest
{
public:
    AudienceCreateRequest();
    virtual ~AudienceCreateRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AudienceCreateRequest& rhs) const;
    bool operator!=(const AudienceCreateRequest& rhs) const;

    /////////////////////////////////////////////
    /// AudienceCreateRequest members

    /// <summary>
    /// Ad account ID.
    /// </summary>
    std::string getAdAccountId() const;
    void setAdAccountId(std::string const& value);
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();
    /// <summary>
    /// Audience name.
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::AudienceRule getRule() const;
    void setRule(org::openapitools::server::model::AudienceRule const& value);
    /// <summary>
    /// Audience description.
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string const& value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::AudienceCreateRequest_1_audience_type getAudienceType() const;
    void setAudienceType(org::openapitools::server::model::AudienceCreateRequest_1_audience_type const& value);

    friend  void to_json(nlohmann::json& j, const AudienceCreateRequest& o);
    friend  void from_json(const nlohmann::json& j, AudienceCreateRequest& o);
protected:
    std::string m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    std::string m_Name;

    org::openapitools::server::model::AudienceRule m_Rule;

    std::string m_Description;
    bool m_DescriptionIsSet;
    org::openapitools::server::model::AudienceCreateRequest_1_audience_type m_Audience_type;

    
};

} // namespace org::openapitools::server::model

#endif /* AudienceCreateRequest_H_ */
