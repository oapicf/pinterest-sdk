/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * DeletePartnerAssetAccessBody_accesses_inner.h
 *
 * 
 */

#ifndef DeletePartnerAssetAccessBody_accesses_inner_H_
#define DeletePartnerAssetAccessBody_accesses_inner_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  DeletePartnerAssetAccessBody_accesses_inner
{
public:
    DeletePartnerAssetAccessBody_accesses_inner();
    virtual ~DeletePartnerAssetAccessBody_accesses_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const DeletePartnerAssetAccessBody_accesses_inner& rhs) const;
    bool operator!=(const DeletePartnerAssetAccessBody_accesses_inner& rhs) const;

    /////////////////////////////////////////////
    /// DeletePartnerAssetAccessBody_accesses_inner members

    /// <summary>
    /// Unique identifier of a business partner to update asset access to.
    /// </summary>
    std::string getPartnerId() const;
    void setPartnerId(std::string const& value);
    /// <summary>
    /// Unique identifier of the business asset.
    /// </summary>
    std::string getAssetId() const;
    void setAssetId(std::string const& value);
    /// <summary>
    /// If partner_type&#x3D;INTERNAL, the deleted asset access is for the access the partner has to your business asset.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the deleted asset access is for the access you have to the partner&#39;s business asset.
    /// </summary>
    std::string getPartnerType() const;
    void setPartnerType(std::string const& value);
    bool partnerTypeIsSet() const;
    void unsetPartner_type();

    friend  void to_json(nlohmann::json& j, const DeletePartnerAssetAccessBody_accesses_inner& o);
    friend  void from_json(const nlohmann::json& j, DeletePartnerAssetAccessBody_accesses_inner& o);
protected:
    std::string m_Partner_id;

    std::string m_Asset_id;

    std::string m_Partner_type;
    bool m_Partner_typeIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* DeletePartnerAssetAccessBody_accesses_inner_H_ */
