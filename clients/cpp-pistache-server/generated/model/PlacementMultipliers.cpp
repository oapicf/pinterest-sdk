/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PlacementMultipliers.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

PlacementMultipliers::PlacementMultipliers()
{
    m_PLACEMENT = "";
    m_PLACEMENTIsSet = false;
    
}

void PlacementMultipliers::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool PlacementMultipliers::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool PlacementMultipliers::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "PlacementMultipliers" : pathPrefix;

        
    return success;
}

bool PlacementMultipliers::operator==(const PlacementMultipliers& rhs) const
{
    return
    
    
    
    ((!pLACEMENTIsSet() && !rhs.pLACEMENTIsSet()) || (pLACEMENTIsSet() && rhs.pLACEMENTIsSet() && getPLACEMENT() == rhs.getPLACEMENT()))
    
    ;
}

bool PlacementMultipliers::operator!=(const PlacementMultipliers& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const PlacementMultipliers& o)
{
    j = nlohmann::json::object();
    if(o.pLACEMENTIsSet())
        j["PLACEMENT"] = o.m_PLACEMENT;
    
}

void from_json(const nlohmann::json& j, PlacementMultipliers& o)
{
    if(j.find("PLACEMENT") != j.end())
    {
        j.at("PLACEMENT").get_to(o.m_PLACEMENT);
        o.m_PLACEMENTIsSet = true;
    } 
    
}

std::string PlacementMultipliers::getPLACEMENT() const
{
    return m_PLACEMENT;
}
void PlacementMultipliers::setPLACEMENT(std::string const& value)
{
    m_PLACEMENT = value;
    m_PLACEMENTIsSet = true;
}
bool PlacementMultipliers::pLACEMENTIsSet() const
{
    return m_PLACEMENTIsSet;
}
void PlacementMultipliers::unsetPLACEMENT()
{
    m_PLACEMENTIsSet = false;
}


} // namespace org::openapitools::server::model

