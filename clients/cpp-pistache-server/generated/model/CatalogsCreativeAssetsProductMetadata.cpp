/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsCreativeAssetsProductMetadata.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsCreativeAssetsProductMetadata::CatalogsCreativeAssetsProductMetadata()
{
    m_Creative_assets_id = "";
    
}

void CatalogsCreativeAssetsProductMetadata::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsCreativeAssetsProductMetadata::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsCreativeAssetsProductMetadata::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsCreativeAssetsProductMetadata" : pathPrefix;

            
    return success;
}

bool CatalogsCreativeAssetsProductMetadata::operator==(const CatalogsCreativeAssetsProductMetadata& rhs) const
{
    return
    
    
    (getCreativeAssetsId() == rhs.getCreativeAssetsId())
     &&
    
    (getVisibility() == rhs.getVisibility())
    
    
    ;
}

bool CatalogsCreativeAssetsProductMetadata::operator!=(const CatalogsCreativeAssetsProductMetadata& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsCreativeAssetsProductMetadata& o)
{
    j = nlohmann::json::object();
    j["creative_assets_id"] = o.m_Creative_assets_id;
    j["visibility"] = o.m_Visibility;
    
}

void from_json(const nlohmann::json& j, CatalogsCreativeAssetsProductMetadata& o)
{
    j.at("creative_assets_id").get_to(o.m_Creative_assets_id);
    j.at("visibility").get_to(o.m_Visibility);
    
}

std::string CatalogsCreativeAssetsProductMetadata::getCreativeAssetsId() const
{
    return m_Creative_assets_id;
}
void CatalogsCreativeAssetsProductMetadata::setCreativeAssetsId(std::string const& value)
{
    m_Creative_assets_id = value;
}
org::openapitools::server::model::CreativeAssetsVisibilityType CatalogsCreativeAssetsProductMetadata::getVisibility() const
{
    return m_Visibility;
}
void CatalogsCreativeAssetsProductMetadata::setVisibility(org::openapitools::server::model::CreativeAssetsVisibilityType const& value)
{
    m_Visibility = value;
}


} // namespace org::openapitools::server::model

