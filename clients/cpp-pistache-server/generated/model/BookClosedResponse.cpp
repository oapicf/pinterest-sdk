/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "BookClosedResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

BookClosedResponse::BookClosedResponse()
{
    m_Conversion_metrics_ready = false;
    m_Conversion_metrics_readyIsSet = false;
    m_Non_conversion_metrics_ready = false;
    m_Non_conversion_metrics_readyIsSet = false;
    
}

void BookClosedResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool BookClosedResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool BookClosedResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "BookClosedResponse" : pathPrefix;

            
    return success;
}

bool BookClosedResponse::operator==(const BookClosedResponse& rhs) const
{
    return
    
    
    
    ((!conversionMetricsReadyIsSet() && !rhs.conversionMetricsReadyIsSet()) || (conversionMetricsReadyIsSet() && rhs.conversionMetricsReadyIsSet() && isConversionMetricsReady() == rhs.isConversionMetricsReady())) &&
    
    
    ((!nonConversionMetricsReadyIsSet() && !rhs.nonConversionMetricsReadyIsSet()) || (nonConversionMetricsReadyIsSet() && rhs.nonConversionMetricsReadyIsSet() && isNonConversionMetricsReady() == rhs.isNonConversionMetricsReady()))
    
    ;
}

bool BookClosedResponse::operator!=(const BookClosedResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const BookClosedResponse& o)
{
    j = nlohmann::json::object();
    if(o.conversionMetricsReadyIsSet())
        j["conversion_metrics_ready"] = o.m_Conversion_metrics_ready;
    if(o.nonConversionMetricsReadyIsSet())
        j["non_conversion_metrics_ready"] = o.m_Non_conversion_metrics_ready;
    
}

void from_json(const nlohmann::json& j, BookClosedResponse& o)
{
    if(j.find("conversion_metrics_ready") != j.end())
    {
        j.at("conversion_metrics_ready").get_to(o.m_Conversion_metrics_ready);
        o.m_Conversion_metrics_readyIsSet = true;
    } 
    if(j.find("non_conversion_metrics_ready") != j.end())
    {
        j.at("non_conversion_metrics_ready").get_to(o.m_Non_conversion_metrics_ready);
        o.m_Non_conversion_metrics_readyIsSet = true;
    } 
    
}

bool BookClosedResponse::isConversionMetricsReady() const
{
    return m_Conversion_metrics_ready;
}
void BookClosedResponse::setConversionMetricsReady(bool const value)
{
    m_Conversion_metrics_ready = value;
    m_Conversion_metrics_readyIsSet = true;
}
bool BookClosedResponse::conversionMetricsReadyIsSet() const
{
    return m_Conversion_metrics_readyIsSet;
}
void BookClosedResponse::unsetConversion_metrics_ready()
{
    m_Conversion_metrics_readyIsSet = false;
}
bool BookClosedResponse::isNonConversionMetricsReady() const
{
    return m_Non_conversion_metrics_ready;
}
void BookClosedResponse::setNonConversionMetricsReady(bool const value)
{
    m_Non_conversion_metrics_ready = value;
    m_Non_conversion_metrics_readyIsSet = true;
}
bool BookClosedResponse::nonConversionMetricsReadyIsSet() const
{
    return m_Non_conversion_metrics_readyIsSet;
}
void BookClosedResponse::unsetNon_conversion_metrics_ready()
{
    m_Non_conversion_metrics_readyIsSet = false;
}


} // namespace org::openapitools::server::model

