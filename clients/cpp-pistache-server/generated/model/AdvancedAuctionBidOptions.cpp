/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AdvancedAuctionBidOptions.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AdvancedAuctionBidOptions::AdvancedAuctionBidOptions()
{
    m_Bid_in_micro_currency = 0L;
    m_Bid_in_micro_currencyIsSet = false;
    m_App_type_multipliersIsSet = false;
    m_Placement_multipliersIsSet = false;
    
}

void AdvancedAuctionBidOptions::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AdvancedAuctionBidOptions::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AdvancedAuctionBidOptions::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AdvancedAuctionBidOptions" : pathPrefix;

                
    return success;
}

bool AdvancedAuctionBidOptions::operator==(const AdvancedAuctionBidOptions& rhs) const
{
    return
    
    
    
    ((!bidInMicroCurrencyIsSet() && !rhs.bidInMicroCurrencyIsSet()) || (bidInMicroCurrencyIsSet() && rhs.bidInMicroCurrencyIsSet() && getBidInMicroCurrency() == rhs.getBidInMicroCurrency())) &&
    
    
    ((!appTypeMultipliersIsSet() && !rhs.appTypeMultipliersIsSet()) || (appTypeMultipliersIsSet() && rhs.appTypeMultipliersIsSet() && getAppTypeMultipliers() == rhs.getAppTypeMultipliers())) &&
    
    
    ((!placementMultipliersIsSet() && !rhs.placementMultipliersIsSet()) || (placementMultipliersIsSet() && rhs.placementMultipliersIsSet() && getPlacementMultipliers() == rhs.getPlacementMultipliers()))
    
    ;
}

bool AdvancedAuctionBidOptions::operator!=(const AdvancedAuctionBidOptions& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AdvancedAuctionBidOptions& o)
{
    j = nlohmann::json::object();
    if(o.bidInMicroCurrencyIsSet())
        j["bid_in_micro_currency"] = o.m_Bid_in_micro_currency;
    if(o.appTypeMultipliersIsSet())
        j["app_type_multipliers"] = o.m_App_type_multipliers;
    if(o.placementMultipliersIsSet())
        j["placement_multipliers"] = o.m_Placement_multipliers;
    
}

void from_json(const nlohmann::json& j, AdvancedAuctionBidOptions& o)
{
    if(j.find("bid_in_micro_currency") != j.end())
    {
        j.at("bid_in_micro_currency").get_to(o.m_Bid_in_micro_currency);
        o.m_Bid_in_micro_currencyIsSet = true;
    } 
    if(j.find("app_type_multipliers") != j.end())
    {
        j.at("app_type_multipliers").get_to(o.m_App_type_multipliers);
        o.m_App_type_multipliersIsSet = true;
    } 
    if(j.find("placement_multipliers") != j.end())
    {
        j.at("placement_multipliers").get_to(o.m_Placement_multipliers);
        o.m_Placement_multipliersIsSet = true;
    } 
    
}

int64_t AdvancedAuctionBidOptions::getBidInMicroCurrency() const
{
    return m_Bid_in_micro_currency;
}
void AdvancedAuctionBidOptions::setBidInMicroCurrency(int64_t const value)
{
    m_Bid_in_micro_currency = value;
    m_Bid_in_micro_currencyIsSet = true;
}
bool AdvancedAuctionBidOptions::bidInMicroCurrencyIsSet() const
{
    return m_Bid_in_micro_currencyIsSet;
}
void AdvancedAuctionBidOptions::unsetBid_in_micro_currency()
{
    m_Bid_in_micro_currencyIsSet = false;
}
org::openapitools::server::model::AppTypeMultipliers AdvancedAuctionBidOptions::getAppTypeMultipliers() const
{
    return m_App_type_multipliers;
}
void AdvancedAuctionBidOptions::setAppTypeMultipliers(org::openapitools::server::model::AppTypeMultipliers const& value)
{
    m_App_type_multipliers = value;
    m_App_type_multipliersIsSet = true;
}
bool AdvancedAuctionBidOptions::appTypeMultipliersIsSet() const
{
    return m_App_type_multipliersIsSet;
}
void AdvancedAuctionBidOptions::unsetApp_type_multipliers()
{
    m_App_type_multipliersIsSet = false;
}
org::openapitools::server::model::PlacementMultipliers AdvancedAuctionBidOptions::getPlacementMultipliers() const
{
    return m_Placement_multipliers;
}
void AdvancedAuctionBidOptions::setPlacementMultipliers(org::openapitools::server::model::PlacementMultipliers const& value)
{
    m_Placement_multipliers = value;
    m_Placement_multipliersIsSet = true;
}
bool AdvancedAuctionBidOptions::placementMultipliersIsSet() const
{
    return m_Placement_multipliersIsSet;
}
void AdvancedAuctionBidOptions::unsetPlacement_multipliers()
{
    m_Placement_multipliersIsSet = false;
}


} // namespace org::openapitools::server::model

