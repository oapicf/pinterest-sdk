/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsFeedValidationErrors.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsFeedValidationErrors::CatalogsFeedValidationErrors()
{
    m_FETCH_ERROR = 0;
    m_FETCH_ERRORIsSet = false;
    m_FETCH_INACTIVE_FEED_ERROR = 0;
    m_FETCH_INACTIVE_FEED_ERRORIsSet = false;
    m_ENCODING_ERROR = 0;
    m_ENCODING_ERRORIsSet = false;
    m_DELIMITER_ERROR = 0;
    m_DELIMITER_ERRORIsSet = false;
    m_REQUIRED_COLUMNS_MISSING = 0;
    m_REQUIRED_COLUMNS_MISSINGIsSet = false;
    m_DUPLICATE_PRODUCTS = 0;
    m_DUPLICATE_PRODUCTSIsSet = false;
    m_IMAGE_LINK_INVALID = 0;
    m_IMAGE_LINK_INVALIDIsSet = false;
    m_ITEMID_MISSING = 0;
    m_ITEMID_MISSINGIsSet = false;
    m_TITLE_MISSING = 0;
    m_TITLE_MISSINGIsSet = false;
    m_DESCRIPTION_MISSING = 0;
    m_DESCRIPTION_MISSINGIsSet = false;
    m_PRODUCT_LINK_MISSING = 0;
    m_PRODUCT_LINK_MISSINGIsSet = false;
    m_IMAGE_LINK_MISSING = 0;
    m_IMAGE_LINK_MISSINGIsSet = false;
    m_AVAILABILITY_INVALID = 0;
    m_AVAILABILITY_INVALIDIsSet = false;
    m_PRODUCT_PRICE_INVALID = 0;
    m_PRODUCT_PRICE_INVALIDIsSet = false;
    m_LINK_FORMAT_INVALID = 0;
    m_LINK_FORMAT_INVALIDIsSet = false;
    m_PARSE_LINE_ERROR = 0;
    m_PARSE_LINE_ERRORIsSet = false;
    m_ADWORDS_FORMAT_INVALID = 0;
    m_ADWORDS_FORMAT_INVALIDIsSet = false;
    m_INTERNAL_SERVICE_ERROR = 0;
    m_INTERNAL_SERVICE_ERRORIsSet = false;
    m_NO_VERIFIED_DOMAIN = 0;
    m_NO_VERIFIED_DOMAINIsSet = false;
    m_ADULT_INVALID = 0;
    m_ADULT_INVALIDIsSet = false;
    m_IMAGE_LINK_LENGTH_TOO_LONG = 0;
    m_IMAGE_LINK_LENGTH_TOO_LONGIsSet = false;
    m_INVALID_DOMAIN = 0;
    m_INVALID_DOMAINIsSet = false;
    m_FEED_LENGTH_TOO_LONG = 0;
    m_FEED_LENGTH_TOO_LONGIsSet = false;
    m_LINK_LENGTH_TOO_LONG = 0;
    m_LINK_LENGTH_TOO_LONGIsSet = false;
    m_MALFORMED_XML = 0;
    m_MALFORMED_XMLIsSet = false;
    m_PRICE_MISSING = 0;
    m_PRICE_MISSINGIsSet = false;
    m_FEED_TOO_SMALL = 0;
    m_FEED_TOO_SMALLIsSet = false;
    m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = 0;
    m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDEDIsSet = false;
    m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = 0;
    m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILUREIsSet = false;
    m_PINJOIN_CONTENT_UNSAFE = 0;
    m_PINJOIN_CONTENT_UNSAFEIsSet = false;
    m_BLOCKLISTED_IMAGE_SIGNATURE = 0;
    m_BLOCKLISTED_IMAGE_SIGNATUREIsSet = false;
    m_LIST_PRICE_INVALID = 0;
    m_LIST_PRICE_INVALIDIsSet = false;
    m_PRICE_CANNOT_BE_DETERMINED = 0;
    m_PRICE_CANNOT_BE_DETERMINEDIsSet = false;
    
}

void CatalogsFeedValidationErrors::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsFeedValidationErrors::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsFeedValidationErrors::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsFeedValidationErrors" : pathPrefix;

                                                                                                                                        
    return success;
}

bool CatalogsFeedValidationErrors::operator==(const CatalogsFeedValidationErrors& rhs) const
{
    return
    
    
    
    ((!fETCHERRORIsSet() && !rhs.fETCHERRORIsSet()) || (fETCHERRORIsSet() && rhs.fETCHERRORIsSet() && getFETCHERROR() == rhs.getFETCHERROR())) &&
    
    
    ((!fETCHINACTIVEFEEDERRORIsSet() && !rhs.fETCHINACTIVEFEEDERRORIsSet()) || (fETCHINACTIVEFEEDERRORIsSet() && rhs.fETCHINACTIVEFEEDERRORIsSet() && getFETCHINACTIVEFEEDERROR() == rhs.getFETCHINACTIVEFEEDERROR())) &&
    
    
    ((!eNCODINGERRORIsSet() && !rhs.eNCODINGERRORIsSet()) || (eNCODINGERRORIsSet() && rhs.eNCODINGERRORIsSet() && getENCODINGERROR() == rhs.getENCODINGERROR())) &&
    
    
    ((!dELIMITERERRORIsSet() && !rhs.dELIMITERERRORIsSet()) || (dELIMITERERRORIsSet() && rhs.dELIMITERERRORIsSet() && getDELIMITERERROR() == rhs.getDELIMITERERROR())) &&
    
    
    ((!rEQUIREDCOLUMNSMISSINGIsSet() && !rhs.rEQUIREDCOLUMNSMISSINGIsSet()) || (rEQUIREDCOLUMNSMISSINGIsSet() && rhs.rEQUIREDCOLUMNSMISSINGIsSet() && getREQUIREDCOLUMNSMISSING() == rhs.getREQUIREDCOLUMNSMISSING())) &&
    
    
    ((!dUPLICATEPRODUCTSIsSet() && !rhs.dUPLICATEPRODUCTSIsSet()) || (dUPLICATEPRODUCTSIsSet() && rhs.dUPLICATEPRODUCTSIsSet() && getDUPLICATEPRODUCTS() == rhs.getDUPLICATEPRODUCTS())) &&
    
    
    ((!iMAGELINKINVALIDIsSet() && !rhs.iMAGELINKINVALIDIsSet()) || (iMAGELINKINVALIDIsSet() && rhs.iMAGELINKINVALIDIsSet() && getIMAGELINKINVALID() == rhs.getIMAGELINKINVALID())) &&
    
    
    ((!iTEMIDMISSINGIsSet() && !rhs.iTEMIDMISSINGIsSet()) || (iTEMIDMISSINGIsSet() && rhs.iTEMIDMISSINGIsSet() && getITEMIDMISSING() == rhs.getITEMIDMISSING())) &&
    
    
    ((!tITLEMISSINGIsSet() && !rhs.tITLEMISSINGIsSet()) || (tITLEMISSINGIsSet() && rhs.tITLEMISSINGIsSet() && getTITLEMISSING() == rhs.getTITLEMISSING())) &&
    
    
    ((!dESCRIPTIONMISSINGIsSet() && !rhs.dESCRIPTIONMISSINGIsSet()) || (dESCRIPTIONMISSINGIsSet() && rhs.dESCRIPTIONMISSINGIsSet() && getDESCRIPTIONMISSING() == rhs.getDESCRIPTIONMISSING())) &&
    
    
    ((!pRODUCTLINKMISSINGIsSet() && !rhs.pRODUCTLINKMISSINGIsSet()) || (pRODUCTLINKMISSINGIsSet() && rhs.pRODUCTLINKMISSINGIsSet() && getPRODUCTLINKMISSING() == rhs.getPRODUCTLINKMISSING())) &&
    
    
    ((!iMAGELINKMISSINGIsSet() && !rhs.iMAGELINKMISSINGIsSet()) || (iMAGELINKMISSINGIsSet() && rhs.iMAGELINKMISSINGIsSet() && getIMAGELINKMISSING() == rhs.getIMAGELINKMISSING())) &&
    
    
    ((!aVAILABILITYINVALIDIsSet() && !rhs.aVAILABILITYINVALIDIsSet()) || (aVAILABILITYINVALIDIsSet() && rhs.aVAILABILITYINVALIDIsSet() && getAVAILABILITYINVALID() == rhs.getAVAILABILITYINVALID())) &&
    
    
    ((!pRODUCTPRICEINVALIDIsSet() && !rhs.pRODUCTPRICEINVALIDIsSet()) || (pRODUCTPRICEINVALIDIsSet() && rhs.pRODUCTPRICEINVALIDIsSet() && getPRODUCTPRICEINVALID() == rhs.getPRODUCTPRICEINVALID())) &&
    
    
    ((!lINKFORMATINVALIDIsSet() && !rhs.lINKFORMATINVALIDIsSet()) || (lINKFORMATINVALIDIsSet() && rhs.lINKFORMATINVALIDIsSet() && getLINKFORMATINVALID() == rhs.getLINKFORMATINVALID())) &&
    
    
    ((!pARSELINEERRORIsSet() && !rhs.pARSELINEERRORIsSet()) || (pARSELINEERRORIsSet() && rhs.pARSELINEERRORIsSet() && getPARSELINEERROR() == rhs.getPARSELINEERROR())) &&
    
    
    ((!aDWORDSFORMATINVALIDIsSet() && !rhs.aDWORDSFORMATINVALIDIsSet()) || (aDWORDSFORMATINVALIDIsSet() && rhs.aDWORDSFORMATINVALIDIsSet() && getADWORDSFORMATINVALID() == rhs.getADWORDSFORMATINVALID())) &&
    
    
    ((!iNTERNALSERVICEERRORIsSet() && !rhs.iNTERNALSERVICEERRORIsSet()) || (iNTERNALSERVICEERRORIsSet() && rhs.iNTERNALSERVICEERRORIsSet() && getINTERNALSERVICEERROR() == rhs.getINTERNALSERVICEERROR())) &&
    
    
    ((!nOVERIFIEDDOMAINIsSet() && !rhs.nOVERIFIEDDOMAINIsSet()) || (nOVERIFIEDDOMAINIsSet() && rhs.nOVERIFIEDDOMAINIsSet() && getNOVERIFIEDDOMAIN() == rhs.getNOVERIFIEDDOMAIN())) &&
    
    
    ((!aDULTINVALIDIsSet() && !rhs.aDULTINVALIDIsSet()) || (aDULTINVALIDIsSet() && rhs.aDULTINVALIDIsSet() && getADULTINVALID() == rhs.getADULTINVALID())) &&
    
    
    ((!iMAGELINKLENGTHTOOLONGIsSet() && !rhs.iMAGELINKLENGTHTOOLONGIsSet()) || (iMAGELINKLENGTHTOOLONGIsSet() && rhs.iMAGELINKLENGTHTOOLONGIsSet() && getIMAGELINKLENGTHTOOLONG() == rhs.getIMAGELINKLENGTHTOOLONG())) &&
    
    
    ((!iNVALIDDOMAINIsSet() && !rhs.iNVALIDDOMAINIsSet()) || (iNVALIDDOMAINIsSet() && rhs.iNVALIDDOMAINIsSet() && getINVALIDDOMAIN() == rhs.getINVALIDDOMAIN())) &&
    
    
    ((!fEEDLENGTHTOOLONGIsSet() && !rhs.fEEDLENGTHTOOLONGIsSet()) || (fEEDLENGTHTOOLONGIsSet() && rhs.fEEDLENGTHTOOLONGIsSet() && getFEEDLENGTHTOOLONG() == rhs.getFEEDLENGTHTOOLONG())) &&
    
    
    ((!lINKLENGTHTOOLONGIsSet() && !rhs.lINKLENGTHTOOLONGIsSet()) || (lINKLENGTHTOOLONGIsSet() && rhs.lINKLENGTHTOOLONGIsSet() && getLINKLENGTHTOOLONG() == rhs.getLINKLENGTHTOOLONG())) &&
    
    
    ((!mALFORMEDXMLIsSet() && !rhs.mALFORMEDXMLIsSet()) || (mALFORMEDXMLIsSet() && rhs.mALFORMEDXMLIsSet() && getMALFORMEDXML() == rhs.getMALFORMEDXML())) &&
    
    
    ((!pRICEMISSINGIsSet() && !rhs.pRICEMISSINGIsSet()) || (pRICEMISSINGIsSet() && rhs.pRICEMISSINGIsSet() && getPRICEMISSING() == rhs.getPRICEMISSING())) &&
    
    
    ((!fEEDTOOSMALLIsSet() && !rhs.fEEDTOOSMALLIsSet()) || (fEEDTOOSMALLIsSet() && rhs.fEEDTOOSMALLIsSet() && getFEEDTOOSMALL() == rhs.getFEEDTOOSMALL())) &&
    
    
    ((!mAXITEMSPERITEMGROUPEXCEEDEDIsSet() && !rhs.mAXITEMSPERITEMGROUPEXCEEDEDIsSet()) || (mAXITEMSPERITEMGROUPEXCEEDEDIsSet() && rhs.mAXITEMSPERITEMGROUPEXCEEDEDIsSet() && getMAXITEMSPERITEMGROUPEXCEEDED() == rhs.getMAXITEMSPERITEMGROUPEXCEEDED())) &&
    
    
    ((!iTEMMAINIMAGEDOWNLOADFAILUREIsSet() && !rhs.iTEMMAINIMAGEDOWNLOADFAILUREIsSet()) || (iTEMMAINIMAGEDOWNLOADFAILUREIsSet() && rhs.iTEMMAINIMAGEDOWNLOADFAILUREIsSet() && getITEMMAINIMAGEDOWNLOADFAILURE() == rhs.getITEMMAINIMAGEDOWNLOADFAILURE())) &&
    
    
    ((!pINJOINCONTENTUNSAFEIsSet() && !rhs.pINJOINCONTENTUNSAFEIsSet()) || (pINJOINCONTENTUNSAFEIsSet() && rhs.pINJOINCONTENTUNSAFEIsSet() && getPINJOINCONTENTUNSAFE() == rhs.getPINJOINCONTENTUNSAFE())) &&
    
    
    ((!bLOCKLISTEDIMAGESIGNATUREIsSet() && !rhs.bLOCKLISTEDIMAGESIGNATUREIsSet()) || (bLOCKLISTEDIMAGESIGNATUREIsSet() && rhs.bLOCKLISTEDIMAGESIGNATUREIsSet() && getBLOCKLISTEDIMAGESIGNATURE() == rhs.getBLOCKLISTEDIMAGESIGNATURE())) &&
    
    
    ((!lISTPRICEINVALIDIsSet() && !rhs.lISTPRICEINVALIDIsSet()) || (lISTPRICEINVALIDIsSet() && rhs.lISTPRICEINVALIDIsSet() && getLISTPRICEINVALID() == rhs.getLISTPRICEINVALID())) &&
    
    
    ((!pRICECANNOTBEDETERMINEDIsSet() && !rhs.pRICECANNOTBEDETERMINEDIsSet()) || (pRICECANNOTBEDETERMINEDIsSet() && rhs.pRICECANNOTBEDETERMINEDIsSet() && getPRICECANNOTBEDETERMINED() == rhs.getPRICECANNOTBEDETERMINED()))
    
    ;
}

bool CatalogsFeedValidationErrors::operator!=(const CatalogsFeedValidationErrors& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsFeedValidationErrors& o)
{
    j = nlohmann::json::object();
    if(o.fETCHERRORIsSet())
        j["FETCH_ERROR"] = o.m_FETCH_ERROR;
    if(o.fETCHINACTIVEFEEDERRORIsSet())
        j["FETCH_INACTIVE_FEED_ERROR"] = o.m_FETCH_INACTIVE_FEED_ERROR;
    if(o.eNCODINGERRORIsSet())
        j["ENCODING_ERROR"] = o.m_ENCODING_ERROR;
    if(o.dELIMITERERRORIsSet())
        j["DELIMITER_ERROR"] = o.m_DELIMITER_ERROR;
    if(o.rEQUIREDCOLUMNSMISSINGIsSet())
        j["REQUIRED_COLUMNS_MISSING"] = o.m_REQUIRED_COLUMNS_MISSING;
    if(o.dUPLICATEPRODUCTSIsSet())
        j["DUPLICATE_PRODUCTS"] = o.m_DUPLICATE_PRODUCTS;
    if(o.iMAGELINKINVALIDIsSet())
        j["IMAGE_LINK_INVALID"] = o.m_IMAGE_LINK_INVALID;
    if(o.iTEMIDMISSINGIsSet())
        j["ITEMID_MISSING"] = o.m_ITEMID_MISSING;
    if(o.tITLEMISSINGIsSet())
        j["TITLE_MISSING"] = o.m_TITLE_MISSING;
    if(o.dESCRIPTIONMISSINGIsSet())
        j["DESCRIPTION_MISSING"] = o.m_DESCRIPTION_MISSING;
    if(o.pRODUCTLINKMISSINGIsSet())
        j["PRODUCT_LINK_MISSING"] = o.m_PRODUCT_LINK_MISSING;
    if(o.iMAGELINKMISSINGIsSet())
        j["IMAGE_LINK_MISSING"] = o.m_IMAGE_LINK_MISSING;
    if(o.aVAILABILITYINVALIDIsSet())
        j["AVAILABILITY_INVALID"] = o.m_AVAILABILITY_INVALID;
    if(o.pRODUCTPRICEINVALIDIsSet())
        j["PRODUCT_PRICE_INVALID"] = o.m_PRODUCT_PRICE_INVALID;
    if(o.lINKFORMATINVALIDIsSet())
        j["LINK_FORMAT_INVALID"] = o.m_LINK_FORMAT_INVALID;
    if(o.pARSELINEERRORIsSet())
        j["PARSE_LINE_ERROR"] = o.m_PARSE_LINE_ERROR;
    if(o.aDWORDSFORMATINVALIDIsSet())
        j["ADWORDS_FORMAT_INVALID"] = o.m_ADWORDS_FORMAT_INVALID;
    if(o.iNTERNALSERVICEERRORIsSet())
        j["INTERNAL_SERVICE_ERROR"] = o.m_INTERNAL_SERVICE_ERROR;
    if(o.nOVERIFIEDDOMAINIsSet())
        j["NO_VERIFIED_DOMAIN"] = o.m_NO_VERIFIED_DOMAIN;
    if(o.aDULTINVALIDIsSet())
        j["ADULT_INVALID"] = o.m_ADULT_INVALID;
    if(o.iMAGELINKLENGTHTOOLONGIsSet())
        j["IMAGE_LINK_LENGTH_TOO_LONG"] = o.m_IMAGE_LINK_LENGTH_TOO_LONG;
    if(o.iNVALIDDOMAINIsSet())
        j["INVALID_DOMAIN"] = o.m_INVALID_DOMAIN;
    if(o.fEEDLENGTHTOOLONGIsSet())
        j["FEED_LENGTH_TOO_LONG"] = o.m_FEED_LENGTH_TOO_LONG;
    if(o.lINKLENGTHTOOLONGIsSet())
        j["LINK_LENGTH_TOO_LONG"] = o.m_LINK_LENGTH_TOO_LONG;
    if(o.mALFORMEDXMLIsSet())
        j["MALFORMED_XML"] = o.m_MALFORMED_XML;
    if(o.pRICEMISSINGIsSet())
        j["PRICE_MISSING"] = o.m_PRICE_MISSING;
    if(o.fEEDTOOSMALLIsSet())
        j["FEED_TOO_SMALL"] = o.m_FEED_TOO_SMALL;
    if(o.mAXITEMSPERITEMGROUPEXCEEDEDIsSet())
        j["MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED"] = o.m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED;
    if(o.iTEMMAINIMAGEDOWNLOADFAILUREIsSet())
        j["ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE"] = o.m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE;
    if(o.pINJOINCONTENTUNSAFEIsSet())
        j["PINJOIN_CONTENT_UNSAFE"] = o.m_PINJOIN_CONTENT_UNSAFE;
    if(o.bLOCKLISTEDIMAGESIGNATUREIsSet())
        j["BLOCKLISTED_IMAGE_SIGNATURE"] = o.m_BLOCKLISTED_IMAGE_SIGNATURE;
    if(o.lISTPRICEINVALIDIsSet())
        j["LIST_PRICE_INVALID"] = o.m_LIST_PRICE_INVALID;
    if(o.pRICECANNOTBEDETERMINEDIsSet())
        j["PRICE_CANNOT_BE_DETERMINED"] = o.m_PRICE_CANNOT_BE_DETERMINED;
    
}

void from_json(const nlohmann::json& j, CatalogsFeedValidationErrors& o)
{
    if(j.find("FETCH_ERROR") != j.end())
    {
        j.at("FETCH_ERROR").get_to(o.m_FETCH_ERROR);
        o.m_FETCH_ERRORIsSet = true;
    } 
    if(j.find("FETCH_INACTIVE_FEED_ERROR") != j.end())
    {
        j.at("FETCH_INACTIVE_FEED_ERROR").get_to(o.m_FETCH_INACTIVE_FEED_ERROR);
        o.m_FETCH_INACTIVE_FEED_ERRORIsSet = true;
    } 
    if(j.find("ENCODING_ERROR") != j.end())
    {
        j.at("ENCODING_ERROR").get_to(o.m_ENCODING_ERROR);
        o.m_ENCODING_ERRORIsSet = true;
    } 
    if(j.find("DELIMITER_ERROR") != j.end())
    {
        j.at("DELIMITER_ERROR").get_to(o.m_DELIMITER_ERROR);
        o.m_DELIMITER_ERRORIsSet = true;
    } 
    if(j.find("REQUIRED_COLUMNS_MISSING") != j.end())
    {
        j.at("REQUIRED_COLUMNS_MISSING").get_to(o.m_REQUIRED_COLUMNS_MISSING);
        o.m_REQUIRED_COLUMNS_MISSINGIsSet = true;
    } 
    if(j.find("DUPLICATE_PRODUCTS") != j.end())
    {
        j.at("DUPLICATE_PRODUCTS").get_to(o.m_DUPLICATE_PRODUCTS);
        o.m_DUPLICATE_PRODUCTSIsSet = true;
    } 
    if(j.find("IMAGE_LINK_INVALID") != j.end())
    {
        j.at("IMAGE_LINK_INVALID").get_to(o.m_IMAGE_LINK_INVALID);
        o.m_IMAGE_LINK_INVALIDIsSet = true;
    } 
    if(j.find("ITEMID_MISSING") != j.end())
    {
        j.at("ITEMID_MISSING").get_to(o.m_ITEMID_MISSING);
        o.m_ITEMID_MISSINGIsSet = true;
    } 
    if(j.find("TITLE_MISSING") != j.end())
    {
        j.at("TITLE_MISSING").get_to(o.m_TITLE_MISSING);
        o.m_TITLE_MISSINGIsSet = true;
    } 
    if(j.find("DESCRIPTION_MISSING") != j.end())
    {
        j.at("DESCRIPTION_MISSING").get_to(o.m_DESCRIPTION_MISSING);
        o.m_DESCRIPTION_MISSINGIsSet = true;
    } 
    if(j.find("PRODUCT_LINK_MISSING") != j.end())
    {
        j.at("PRODUCT_LINK_MISSING").get_to(o.m_PRODUCT_LINK_MISSING);
        o.m_PRODUCT_LINK_MISSINGIsSet = true;
    } 
    if(j.find("IMAGE_LINK_MISSING") != j.end())
    {
        j.at("IMAGE_LINK_MISSING").get_to(o.m_IMAGE_LINK_MISSING);
        o.m_IMAGE_LINK_MISSINGIsSet = true;
    } 
    if(j.find("AVAILABILITY_INVALID") != j.end())
    {
        j.at("AVAILABILITY_INVALID").get_to(o.m_AVAILABILITY_INVALID);
        o.m_AVAILABILITY_INVALIDIsSet = true;
    } 
    if(j.find("PRODUCT_PRICE_INVALID") != j.end())
    {
        j.at("PRODUCT_PRICE_INVALID").get_to(o.m_PRODUCT_PRICE_INVALID);
        o.m_PRODUCT_PRICE_INVALIDIsSet = true;
    } 
    if(j.find("LINK_FORMAT_INVALID") != j.end())
    {
        j.at("LINK_FORMAT_INVALID").get_to(o.m_LINK_FORMAT_INVALID);
        o.m_LINK_FORMAT_INVALIDIsSet = true;
    } 
    if(j.find("PARSE_LINE_ERROR") != j.end())
    {
        j.at("PARSE_LINE_ERROR").get_to(o.m_PARSE_LINE_ERROR);
        o.m_PARSE_LINE_ERRORIsSet = true;
    } 
    if(j.find("ADWORDS_FORMAT_INVALID") != j.end())
    {
        j.at("ADWORDS_FORMAT_INVALID").get_to(o.m_ADWORDS_FORMAT_INVALID);
        o.m_ADWORDS_FORMAT_INVALIDIsSet = true;
    } 
    if(j.find("INTERNAL_SERVICE_ERROR") != j.end())
    {
        j.at("INTERNAL_SERVICE_ERROR").get_to(o.m_INTERNAL_SERVICE_ERROR);
        o.m_INTERNAL_SERVICE_ERRORIsSet = true;
    } 
    if(j.find("NO_VERIFIED_DOMAIN") != j.end())
    {
        j.at("NO_VERIFIED_DOMAIN").get_to(o.m_NO_VERIFIED_DOMAIN);
        o.m_NO_VERIFIED_DOMAINIsSet = true;
    } 
    if(j.find("ADULT_INVALID") != j.end())
    {
        j.at("ADULT_INVALID").get_to(o.m_ADULT_INVALID);
        o.m_ADULT_INVALIDIsSet = true;
    } 
    if(j.find("IMAGE_LINK_LENGTH_TOO_LONG") != j.end())
    {
        j.at("IMAGE_LINK_LENGTH_TOO_LONG").get_to(o.m_IMAGE_LINK_LENGTH_TOO_LONG);
        o.m_IMAGE_LINK_LENGTH_TOO_LONGIsSet = true;
    } 
    if(j.find("INVALID_DOMAIN") != j.end())
    {
        j.at("INVALID_DOMAIN").get_to(o.m_INVALID_DOMAIN);
        o.m_INVALID_DOMAINIsSet = true;
    } 
    if(j.find("FEED_LENGTH_TOO_LONG") != j.end())
    {
        j.at("FEED_LENGTH_TOO_LONG").get_to(o.m_FEED_LENGTH_TOO_LONG);
        o.m_FEED_LENGTH_TOO_LONGIsSet = true;
    } 
    if(j.find("LINK_LENGTH_TOO_LONG") != j.end())
    {
        j.at("LINK_LENGTH_TOO_LONG").get_to(o.m_LINK_LENGTH_TOO_LONG);
        o.m_LINK_LENGTH_TOO_LONGIsSet = true;
    } 
    if(j.find("MALFORMED_XML") != j.end())
    {
        j.at("MALFORMED_XML").get_to(o.m_MALFORMED_XML);
        o.m_MALFORMED_XMLIsSet = true;
    } 
    if(j.find("PRICE_MISSING") != j.end())
    {
        j.at("PRICE_MISSING").get_to(o.m_PRICE_MISSING);
        o.m_PRICE_MISSINGIsSet = true;
    } 
    if(j.find("FEED_TOO_SMALL") != j.end())
    {
        j.at("FEED_TOO_SMALL").get_to(o.m_FEED_TOO_SMALL);
        o.m_FEED_TOO_SMALLIsSet = true;
    } 
    if(j.find("MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED") != j.end())
    {
        j.at("MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED").get_to(o.m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED);
        o.m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDEDIsSet = true;
    } 
    if(j.find("ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE") != j.end())
    {
        j.at("ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE").get_to(o.m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE);
        o.m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILUREIsSet = true;
    } 
    if(j.find("PINJOIN_CONTENT_UNSAFE") != j.end())
    {
        j.at("PINJOIN_CONTENT_UNSAFE").get_to(o.m_PINJOIN_CONTENT_UNSAFE);
        o.m_PINJOIN_CONTENT_UNSAFEIsSet = true;
    } 
    if(j.find("BLOCKLISTED_IMAGE_SIGNATURE") != j.end())
    {
        j.at("BLOCKLISTED_IMAGE_SIGNATURE").get_to(o.m_BLOCKLISTED_IMAGE_SIGNATURE);
        o.m_BLOCKLISTED_IMAGE_SIGNATUREIsSet = true;
    } 
    if(j.find("LIST_PRICE_INVALID") != j.end())
    {
        j.at("LIST_PRICE_INVALID").get_to(o.m_LIST_PRICE_INVALID);
        o.m_LIST_PRICE_INVALIDIsSet = true;
    } 
    if(j.find("PRICE_CANNOT_BE_DETERMINED") != j.end())
    {
        j.at("PRICE_CANNOT_BE_DETERMINED").get_to(o.m_PRICE_CANNOT_BE_DETERMINED);
        o.m_PRICE_CANNOT_BE_DETERMINEDIsSet = true;
    } 
    
}

int32_t CatalogsFeedValidationErrors::getFETCHERROR() const
{
    return m_FETCH_ERROR;
}
void CatalogsFeedValidationErrors::setFETCHERROR(int32_t const value)
{
    m_FETCH_ERROR = value;
    m_FETCH_ERRORIsSet = true;
}
bool CatalogsFeedValidationErrors::fETCHERRORIsSet() const
{
    return m_FETCH_ERRORIsSet;
}
void CatalogsFeedValidationErrors::unsetFETCH_ERROR()
{
    m_FETCH_ERRORIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getFETCHINACTIVEFEEDERROR() const
{
    return m_FETCH_INACTIVE_FEED_ERROR;
}
void CatalogsFeedValidationErrors::setFETCHINACTIVEFEEDERROR(int32_t const value)
{
    m_FETCH_INACTIVE_FEED_ERROR = value;
    m_FETCH_INACTIVE_FEED_ERRORIsSet = true;
}
bool CatalogsFeedValidationErrors::fETCHINACTIVEFEEDERRORIsSet() const
{
    return m_FETCH_INACTIVE_FEED_ERRORIsSet;
}
void CatalogsFeedValidationErrors::unsetFETCH_INACTIVE_FEED_ERROR()
{
    m_FETCH_INACTIVE_FEED_ERRORIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getENCODINGERROR() const
{
    return m_ENCODING_ERROR;
}
void CatalogsFeedValidationErrors::setENCODINGERROR(int32_t const value)
{
    m_ENCODING_ERROR = value;
    m_ENCODING_ERRORIsSet = true;
}
bool CatalogsFeedValidationErrors::eNCODINGERRORIsSet() const
{
    return m_ENCODING_ERRORIsSet;
}
void CatalogsFeedValidationErrors::unsetENCODING_ERROR()
{
    m_ENCODING_ERRORIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getDELIMITERERROR() const
{
    return m_DELIMITER_ERROR;
}
void CatalogsFeedValidationErrors::setDELIMITERERROR(int32_t const value)
{
    m_DELIMITER_ERROR = value;
    m_DELIMITER_ERRORIsSet = true;
}
bool CatalogsFeedValidationErrors::dELIMITERERRORIsSet() const
{
    return m_DELIMITER_ERRORIsSet;
}
void CatalogsFeedValidationErrors::unsetDELIMITER_ERROR()
{
    m_DELIMITER_ERRORIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getREQUIREDCOLUMNSMISSING() const
{
    return m_REQUIRED_COLUMNS_MISSING;
}
void CatalogsFeedValidationErrors::setREQUIREDCOLUMNSMISSING(int32_t const value)
{
    m_REQUIRED_COLUMNS_MISSING = value;
    m_REQUIRED_COLUMNS_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::rEQUIREDCOLUMNSMISSINGIsSet() const
{
    return m_REQUIRED_COLUMNS_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetREQUIRED_COLUMNS_MISSING()
{
    m_REQUIRED_COLUMNS_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getDUPLICATEPRODUCTS() const
{
    return m_DUPLICATE_PRODUCTS;
}
void CatalogsFeedValidationErrors::setDUPLICATEPRODUCTS(int32_t const value)
{
    m_DUPLICATE_PRODUCTS = value;
    m_DUPLICATE_PRODUCTSIsSet = true;
}
bool CatalogsFeedValidationErrors::dUPLICATEPRODUCTSIsSet() const
{
    return m_DUPLICATE_PRODUCTSIsSet;
}
void CatalogsFeedValidationErrors::unsetDUPLICATE_PRODUCTS()
{
    m_DUPLICATE_PRODUCTSIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getIMAGELINKINVALID() const
{
    return m_IMAGE_LINK_INVALID;
}
void CatalogsFeedValidationErrors::setIMAGELINKINVALID(int32_t const value)
{
    m_IMAGE_LINK_INVALID = value;
    m_IMAGE_LINK_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::iMAGELINKINVALIDIsSet() const
{
    return m_IMAGE_LINK_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetIMAGE_LINK_INVALID()
{
    m_IMAGE_LINK_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getITEMIDMISSING() const
{
    return m_ITEMID_MISSING;
}
void CatalogsFeedValidationErrors::setITEMIDMISSING(int32_t const value)
{
    m_ITEMID_MISSING = value;
    m_ITEMID_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::iTEMIDMISSINGIsSet() const
{
    return m_ITEMID_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetITEMID_MISSING()
{
    m_ITEMID_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getTITLEMISSING() const
{
    return m_TITLE_MISSING;
}
void CatalogsFeedValidationErrors::setTITLEMISSING(int32_t const value)
{
    m_TITLE_MISSING = value;
    m_TITLE_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::tITLEMISSINGIsSet() const
{
    return m_TITLE_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetTITLE_MISSING()
{
    m_TITLE_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getDESCRIPTIONMISSING() const
{
    return m_DESCRIPTION_MISSING;
}
void CatalogsFeedValidationErrors::setDESCRIPTIONMISSING(int32_t const value)
{
    m_DESCRIPTION_MISSING = value;
    m_DESCRIPTION_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::dESCRIPTIONMISSINGIsSet() const
{
    return m_DESCRIPTION_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetDESCRIPTION_MISSING()
{
    m_DESCRIPTION_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getPRODUCTLINKMISSING() const
{
    return m_PRODUCT_LINK_MISSING;
}
void CatalogsFeedValidationErrors::setPRODUCTLINKMISSING(int32_t const value)
{
    m_PRODUCT_LINK_MISSING = value;
    m_PRODUCT_LINK_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::pRODUCTLINKMISSINGIsSet() const
{
    return m_PRODUCT_LINK_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetPRODUCT_LINK_MISSING()
{
    m_PRODUCT_LINK_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getIMAGELINKMISSING() const
{
    return m_IMAGE_LINK_MISSING;
}
void CatalogsFeedValidationErrors::setIMAGELINKMISSING(int32_t const value)
{
    m_IMAGE_LINK_MISSING = value;
    m_IMAGE_LINK_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::iMAGELINKMISSINGIsSet() const
{
    return m_IMAGE_LINK_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetIMAGE_LINK_MISSING()
{
    m_IMAGE_LINK_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getAVAILABILITYINVALID() const
{
    return m_AVAILABILITY_INVALID;
}
void CatalogsFeedValidationErrors::setAVAILABILITYINVALID(int32_t const value)
{
    m_AVAILABILITY_INVALID = value;
    m_AVAILABILITY_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::aVAILABILITYINVALIDIsSet() const
{
    return m_AVAILABILITY_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetAVAILABILITY_INVALID()
{
    m_AVAILABILITY_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getPRODUCTPRICEINVALID() const
{
    return m_PRODUCT_PRICE_INVALID;
}
void CatalogsFeedValidationErrors::setPRODUCTPRICEINVALID(int32_t const value)
{
    m_PRODUCT_PRICE_INVALID = value;
    m_PRODUCT_PRICE_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::pRODUCTPRICEINVALIDIsSet() const
{
    return m_PRODUCT_PRICE_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetPRODUCT_PRICE_INVALID()
{
    m_PRODUCT_PRICE_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getLINKFORMATINVALID() const
{
    return m_LINK_FORMAT_INVALID;
}
void CatalogsFeedValidationErrors::setLINKFORMATINVALID(int32_t const value)
{
    m_LINK_FORMAT_INVALID = value;
    m_LINK_FORMAT_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::lINKFORMATINVALIDIsSet() const
{
    return m_LINK_FORMAT_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetLINK_FORMAT_INVALID()
{
    m_LINK_FORMAT_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getPARSELINEERROR() const
{
    return m_PARSE_LINE_ERROR;
}
void CatalogsFeedValidationErrors::setPARSELINEERROR(int32_t const value)
{
    m_PARSE_LINE_ERROR = value;
    m_PARSE_LINE_ERRORIsSet = true;
}
bool CatalogsFeedValidationErrors::pARSELINEERRORIsSet() const
{
    return m_PARSE_LINE_ERRORIsSet;
}
void CatalogsFeedValidationErrors::unsetPARSE_LINE_ERROR()
{
    m_PARSE_LINE_ERRORIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getADWORDSFORMATINVALID() const
{
    return m_ADWORDS_FORMAT_INVALID;
}
void CatalogsFeedValidationErrors::setADWORDSFORMATINVALID(int32_t const value)
{
    m_ADWORDS_FORMAT_INVALID = value;
    m_ADWORDS_FORMAT_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::aDWORDSFORMATINVALIDIsSet() const
{
    return m_ADWORDS_FORMAT_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetADWORDS_FORMAT_INVALID()
{
    m_ADWORDS_FORMAT_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getINTERNALSERVICEERROR() const
{
    return m_INTERNAL_SERVICE_ERROR;
}
void CatalogsFeedValidationErrors::setINTERNALSERVICEERROR(int32_t const value)
{
    m_INTERNAL_SERVICE_ERROR = value;
    m_INTERNAL_SERVICE_ERRORIsSet = true;
}
bool CatalogsFeedValidationErrors::iNTERNALSERVICEERRORIsSet() const
{
    return m_INTERNAL_SERVICE_ERRORIsSet;
}
void CatalogsFeedValidationErrors::unsetINTERNAL_SERVICE_ERROR()
{
    m_INTERNAL_SERVICE_ERRORIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getNOVERIFIEDDOMAIN() const
{
    return m_NO_VERIFIED_DOMAIN;
}
void CatalogsFeedValidationErrors::setNOVERIFIEDDOMAIN(int32_t const value)
{
    m_NO_VERIFIED_DOMAIN = value;
    m_NO_VERIFIED_DOMAINIsSet = true;
}
bool CatalogsFeedValidationErrors::nOVERIFIEDDOMAINIsSet() const
{
    return m_NO_VERIFIED_DOMAINIsSet;
}
void CatalogsFeedValidationErrors::unsetNO_VERIFIED_DOMAIN()
{
    m_NO_VERIFIED_DOMAINIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getADULTINVALID() const
{
    return m_ADULT_INVALID;
}
void CatalogsFeedValidationErrors::setADULTINVALID(int32_t const value)
{
    m_ADULT_INVALID = value;
    m_ADULT_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::aDULTINVALIDIsSet() const
{
    return m_ADULT_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetADULT_INVALID()
{
    m_ADULT_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getIMAGELINKLENGTHTOOLONG() const
{
    return m_IMAGE_LINK_LENGTH_TOO_LONG;
}
void CatalogsFeedValidationErrors::setIMAGELINKLENGTHTOOLONG(int32_t const value)
{
    m_IMAGE_LINK_LENGTH_TOO_LONG = value;
    m_IMAGE_LINK_LENGTH_TOO_LONGIsSet = true;
}
bool CatalogsFeedValidationErrors::iMAGELINKLENGTHTOOLONGIsSet() const
{
    return m_IMAGE_LINK_LENGTH_TOO_LONGIsSet;
}
void CatalogsFeedValidationErrors::unsetIMAGE_LINK_LENGTH_TOO_LONG()
{
    m_IMAGE_LINK_LENGTH_TOO_LONGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getINVALIDDOMAIN() const
{
    return m_INVALID_DOMAIN;
}
void CatalogsFeedValidationErrors::setINVALIDDOMAIN(int32_t const value)
{
    m_INVALID_DOMAIN = value;
    m_INVALID_DOMAINIsSet = true;
}
bool CatalogsFeedValidationErrors::iNVALIDDOMAINIsSet() const
{
    return m_INVALID_DOMAINIsSet;
}
void CatalogsFeedValidationErrors::unsetINVALID_DOMAIN()
{
    m_INVALID_DOMAINIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getFEEDLENGTHTOOLONG() const
{
    return m_FEED_LENGTH_TOO_LONG;
}
void CatalogsFeedValidationErrors::setFEEDLENGTHTOOLONG(int32_t const value)
{
    m_FEED_LENGTH_TOO_LONG = value;
    m_FEED_LENGTH_TOO_LONGIsSet = true;
}
bool CatalogsFeedValidationErrors::fEEDLENGTHTOOLONGIsSet() const
{
    return m_FEED_LENGTH_TOO_LONGIsSet;
}
void CatalogsFeedValidationErrors::unsetFEED_LENGTH_TOO_LONG()
{
    m_FEED_LENGTH_TOO_LONGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getLINKLENGTHTOOLONG() const
{
    return m_LINK_LENGTH_TOO_LONG;
}
void CatalogsFeedValidationErrors::setLINKLENGTHTOOLONG(int32_t const value)
{
    m_LINK_LENGTH_TOO_LONG = value;
    m_LINK_LENGTH_TOO_LONGIsSet = true;
}
bool CatalogsFeedValidationErrors::lINKLENGTHTOOLONGIsSet() const
{
    return m_LINK_LENGTH_TOO_LONGIsSet;
}
void CatalogsFeedValidationErrors::unsetLINK_LENGTH_TOO_LONG()
{
    m_LINK_LENGTH_TOO_LONGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getMALFORMEDXML() const
{
    return m_MALFORMED_XML;
}
void CatalogsFeedValidationErrors::setMALFORMEDXML(int32_t const value)
{
    m_MALFORMED_XML = value;
    m_MALFORMED_XMLIsSet = true;
}
bool CatalogsFeedValidationErrors::mALFORMEDXMLIsSet() const
{
    return m_MALFORMED_XMLIsSet;
}
void CatalogsFeedValidationErrors::unsetMALFORMED_XML()
{
    m_MALFORMED_XMLIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getPRICEMISSING() const
{
    return m_PRICE_MISSING;
}
void CatalogsFeedValidationErrors::setPRICEMISSING(int32_t const value)
{
    m_PRICE_MISSING = value;
    m_PRICE_MISSINGIsSet = true;
}
bool CatalogsFeedValidationErrors::pRICEMISSINGIsSet() const
{
    return m_PRICE_MISSINGIsSet;
}
void CatalogsFeedValidationErrors::unsetPRICE_MISSING()
{
    m_PRICE_MISSINGIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getFEEDTOOSMALL() const
{
    return m_FEED_TOO_SMALL;
}
void CatalogsFeedValidationErrors::setFEEDTOOSMALL(int32_t const value)
{
    m_FEED_TOO_SMALL = value;
    m_FEED_TOO_SMALLIsSet = true;
}
bool CatalogsFeedValidationErrors::fEEDTOOSMALLIsSet() const
{
    return m_FEED_TOO_SMALLIsSet;
}
void CatalogsFeedValidationErrors::unsetFEED_TOO_SMALL()
{
    m_FEED_TOO_SMALLIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getMAXITEMSPERITEMGROUPEXCEEDED() const
{
    return m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED;
}
void CatalogsFeedValidationErrors::setMAXITEMSPERITEMGROUPEXCEEDED(int32_t const value)
{
    m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED = value;
    m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDEDIsSet = true;
}
bool CatalogsFeedValidationErrors::mAXITEMSPERITEMGROUPEXCEEDEDIsSet() const
{
    return m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDEDIsSet;
}
void CatalogsFeedValidationErrors::unsetMAX_ITEMS_PER_ITEM_GROUP_EXCEEDED()
{
    m_MAX_ITEMS_PER_ITEM_GROUP_EXCEEDEDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getITEMMAINIMAGEDOWNLOADFAILURE() const
{
    return m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE;
}
void CatalogsFeedValidationErrors::setITEMMAINIMAGEDOWNLOADFAILURE(int32_t const value)
{
    m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE = value;
    m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILUREIsSet = true;
}
bool CatalogsFeedValidationErrors::iTEMMAINIMAGEDOWNLOADFAILUREIsSet() const
{
    return m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILUREIsSet;
}
void CatalogsFeedValidationErrors::unsetITEM_MAIN_IMAGE_DOWNLOAD_FAILURE()
{
    m_ITEM_MAIN_IMAGE_DOWNLOAD_FAILUREIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getPINJOINCONTENTUNSAFE() const
{
    return m_PINJOIN_CONTENT_UNSAFE;
}
void CatalogsFeedValidationErrors::setPINJOINCONTENTUNSAFE(int32_t const value)
{
    m_PINJOIN_CONTENT_UNSAFE = value;
    m_PINJOIN_CONTENT_UNSAFEIsSet = true;
}
bool CatalogsFeedValidationErrors::pINJOINCONTENTUNSAFEIsSet() const
{
    return m_PINJOIN_CONTENT_UNSAFEIsSet;
}
void CatalogsFeedValidationErrors::unsetPINJOIN_CONTENT_UNSAFE()
{
    m_PINJOIN_CONTENT_UNSAFEIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getBLOCKLISTEDIMAGESIGNATURE() const
{
    return m_BLOCKLISTED_IMAGE_SIGNATURE;
}
void CatalogsFeedValidationErrors::setBLOCKLISTEDIMAGESIGNATURE(int32_t const value)
{
    m_BLOCKLISTED_IMAGE_SIGNATURE = value;
    m_BLOCKLISTED_IMAGE_SIGNATUREIsSet = true;
}
bool CatalogsFeedValidationErrors::bLOCKLISTEDIMAGESIGNATUREIsSet() const
{
    return m_BLOCKLISTED_IMAGE_SIGNATUREIsSet;
}
void CatalogsFeedValidationErrors::unsetBLOCKLISTED_IMAGE_SIGNATURE()
{
    m_BLOCKLISTED_IMAGE_SIGNATUREIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getLISTPRICEINVALID() const
{
    return m_LIST_PRICE_INVALID;
}
void CatalogsFeedValidationErrors::setLISTPRICEINVALID(int32_t const value)
{
    m_LIST_PRICE_INVALID = value;
    m_LIST_PRICE_INVALIDIsSet = true;
}
bool CatalogsFeedValidationErrors::lISTPRICEINVALIDIsSet() const
{
    return m_LIST_PRICE_INVALIDIsSet;
}
void CatalogsFeedValidationErrors::unsetLIST_PRICE_INVALID()
{
    m_LIST_PRICE_INVALIDIsSet = false;
}
int32_t CatalogsFeedValidationErrors::getPRICECANNOTBEDETERMINED() const
{
    return m_PRICE_CANNOT_BE_DETERMINED;
}
void CatalogsFeedValidationErrors::setPRICECANNOTBEDETERMINED(int32_t const value)
{
    m_PRICE_CANNOT_BE_DETERMINED = value;
    m_PRICE_CANNOT_BE_DETERMINEDIsSet = true;
}
bool CatalogsFeedValidationErrors::pRICECANNOTBEDETERMINEDIsSet() const
{
    return m_PRICE_CANNOT_BE_DETERMINEDIsSet;
}
void CatalogsFeedValidationErrors::unsetPRICE_CANNOT_BE_DETERMINED()
{
    m_PRICE_CANNOT_BE_DETERMINEDIsSet = false;
}


} // namespace org::openapitools::server::model

