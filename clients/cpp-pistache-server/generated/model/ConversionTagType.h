/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ConversionTagType.h
 *
 * conversion tag type
 */

#ifndef ConversionTagType_H_
#define ConversionTagType_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// conversion tag type
/// </summary>
class  ConversionTagType
{
public:
    ConversionTagType();
    virtual ~ConversionTagType() = default;

    enum class eConversionTagType {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    PAGE_LOAD, 
    UNKNOWN, 
    INITIALIZED, 
    PAGE_VISIT, 
    SIGNUP, 
    CHECKOUT, 
    CUSTOM, 
    VIEW_CATEGORY, 
    SEARCH, 
    ADD_TO_CART, 
    WATCH_VIDEO, 
    LEAD, 
    APP_INSTALL, 
    WEB_SESSION, 
    EXTERNAL_MEASUREMENT
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ConversionTagType& rhs) const;
    bool operator!=(const ConversionTagType& rhs) const;

    /////////////////////////////////////////////
    /// ConversionTagType members

    ConversionTagType::eConversionTagType getValue() const;
    void setValue(ConversionTagType::eConversionTagType value);
    
    friend  void to_json(nlohmann::json& j, const ConversionTagType& o);
    friend  void from_json(const nlohmann::json& j, ConversionTagType& o);
protected:
    ConversionTagType::eConversionTagType m_value = ConversionTagType::eConversionTagType::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* ConversionTagType_H_ */
