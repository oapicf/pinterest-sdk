/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GetMMMReportResponse.h
 *
 * 
 */

#ifndef GetMMMReportResponse_H_
#define GetMMMReportResponse_H_


#include "GetMMMReportResponseData.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  GetMMMReportResponse
{
public:
    GetMMMReportResponse();
    virtual ~GetMMMReportResponse() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GetMMMReportResponse& rhs) const;
    bool operator!=(const GetMMMReportResponse& rhs) const;

    /////////////////////////////////////////////
    /// GetMMMReportResponse members

    /// <summary>
    /// 
    /// </summary>
    double getCode() const;
    void setCode(double const value);
    bool codeIsSet() const;
    void unsetCode();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GetMMMReportResponseData getData() const;
    void setData(org::openapitools::server::model::GetMMMReportResponseData const& value);
    bool dataIsSet() const;
    void unsetData();
    /// <summary>
    /// 
    /// </summary>
    std::string getMessage() const;
    void setMessage(std::string const& value);
    bool messageIsSet() const;
    void unsetMessage();
    /// <summary>
    /// 
    /// </summary>
    std::string getStatus() const;
    void setStatus(std::string const& value);
    bool statusIsSet() const;
    void unsetStatus();

    friend  void to_json(nlohmann::json& j, const GetMMMReportResponse& o);
    friend  void from_json(const nlohmann::json& j, GetMMMReportResponse& o);
protected:
    double m_Code;
    bool m_CodeIsSet;
    org::openapitools::server::model::GetMMMReportResponseData m_Data;
    bool m_DataIsSet;
    std::string m_Message;
    bool m_MessageIsSet;
    std::string m_Status;
    bool m_StatusIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* GetMMMReportResponse_H_ */
