/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsItemValidationIssue.h
 *
 * 
 */

#ifndef CatalogsItemValidationIssue_H_
#define CatalogsItemValidationIssue_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  CatalogsItemValidationIssue
{
public:
    CatalogsItemValidationIssue();
    virtual ~CatalogsItemValidationIssue() = default;

    enum class eCatalogsItemValidationIssue {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    AD_LINK_FORMAT_WARNING, 
    AD_LINK_SAME_AS_LINK, 
    ADDITIONAL_IMAGE_LINK_LENGTH_TOO_LONG, 
    ADDITIONAL_IMAGE_LINK_WARNING, 
    ADULT_INVALID, 
    ADWORDS_FORMAT_INVALID, 
    ADWORDS_FORMAT_WARNING, 
    ADWORDS_SAME_AS_LINK, 
    AGE_GROUP_INVALID, 
    ANDROID_DEEP_LINK_INVALID, 
    AVAILABILITY_DATE_INVALID, 
    AVAILABILITY_INVALID, 
    BLOCKLISTED_IMAGE_SIGNATURE, 
    COUNTRY_DOES_NOT_MAP_TO_CURRENCY, 
    CUSTOM_LABEL_LENGTH_TOO_LONG, 
    DESCRIPTION_LENGTH_TOO_LONG, 
    DESCRIPTION_MISSING, 
    DUPLICATE_PRODUCTS, 
    EXPIRATION_DATE_INVALID, 
    GENDER_INVALID, 
    GTIN_INVALID, 
    IMAGE_LINK_INVALID, 
    IMAGE_LINK_LENGTH_TOO_LONG, 
    IMAGE_LINK_MISSING, 
    IMAGE_LINK_WARNING, 
    INVALID_DOMAIN, 
    IOS_DEEP_LINK_INVALID, 
    IS_BUNDLE_INVALID, 
    ITEM_ADDITIONAL_IMAGE_DOWNLOAD_FAILURE, 
    ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE, 
    ITEMID_MISSING, 
    LINK_FORMAT_INVALID, 
    LINK_FORMAT_WARNING, 
    LINK_LENGTH_TOO_LONG, 
    LIST_PRICE_INVALID, 
    MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED, 
    MIN_AD_PRICE_INVALID, 
    MPN_INVALID, 
    MULTIPACK_INVALID, 
    OPTIONAL_CONDITION_INVALID, 
    OPTIONAL_CONDITION_MISSING, 
    OPTIONAL_PRODUCT_CATEGORY_INVALID, 
    OPTIONAL_PRODUCT_CATEGORY_MISSING, 
    PARSE_LINE_ERROR, 
    PINJOIN_CONTENT_UNSAFE, 
    PRICE_CANNOT_BE_DETERMINED, 
    PRICE_MISSING, 
    PRODUCT_CATEGORY_DEPTH_WARNING, 
    PRODUCT_LINK_MISSING, 
    PRODUCT_PRICE_INVALID, 
    PRODUCT_TYPE_LENGTH_TOO_LONG, 
    SALE_DATE_INVALID, 
    SALES_PRICE_INVALID, 
    SALES_PRICE_TOO_HIGH, 
    SALES_PRICE_TOO_LOW, 
    SHIPPING_INVALID, 
    SHIPPING_HEIGHT_INVALID, 
    SHIPPING_WEIGHT_INVALID, 
    SHIPPING_WIDTH_INVALID, 
    SIZE_SYSTEM_INVALID, 
    SIZE_TYPE_INVALID, 
    TAX_INVALID, 
    TITLE_LENGTH_TOO_LONG, 
    TITLE_MISSING, 
    TOO_MANY_ADDITIONAL_IMAGE_LINKS, 
    UTM_SOURCE_AUTO_CORRECTED, 
    WEIGHT_UNIT_INVALID
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsItemValidationIssue& rhs) const;
    bool operator!=(const CatalogsItemValidationIssue& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsItemValidationIssue members

    CatalogsItemValidationIssue::eCatalogsItemValidationIssue getValue() const;
    void setValue(CatalogsItemValidationIssue::eCatalogsItemValidationIssue value);
    
    friend  void to_json(nlohmann::json& j, const CatalogsItemValidationIssue& o);
    friend  void from_json(const nlohmann::json& j, CatalogsItemValidationIssue& o);
protected:
    CatalogsItemValidationIssue::eCatalogsItemValidationIssue m_value = CatalogsItemValidationIssue::eCatalogsItemValidationIssue::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* CatalogsItemValidationIssue_H_ */
