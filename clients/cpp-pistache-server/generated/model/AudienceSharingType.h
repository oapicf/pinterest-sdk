/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AudienceSharingType.h
 *
 * Audience sharing type: [\&quot;CUSTOM\&quot;, \&quot;SYNDICATED\&quot;]
 */

#ifndef AudienceSharingType_H_
#define AudienceSharingType_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Audience sharing type: [\&quot;CUSTOM\&quot;, \&quot;SYNDICATED\&quot;]
/// </summary>
class  AudienceSharingType
{
public:
    AudienceSharingType();
    virtual ~AudienceSharingType() = default;

    enum class eAudienceSharingType {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    CUSTOM, 
    SYNDICATED
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AudienceSharingType& rhs) const;
    bool operator!=(const AudienceSharingType& rhs) const;

    /////////////////////////////////////////////
    /// AudienceSharingType members

    AudienceSharingType::eAudienceSharingType getValue() const;
    void setValue(AudienceSharingType::eAudienceSharingType value);
    
    friend  void to_json(nlohmann::json& j, const AudienceSharingType& o);
    friend  void from_json(const nlohmann::json& j, AudienceSharingType& o);
protected:
    AudienceSharingType::eAudienceSharingType m_value = AudienceSharingType::eAudienceSharingType::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* AudienceSharingType_H_ */
