/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CatalogsFeedProductCounts.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

CatalogsFeedProductCounts::CatalogsFeedProductCounts()
{
    m_Original = 0;
    m_OriginalIsSet = false;
    m_Ingested = 0;
    m_IngestedIsSet = false;
    
}

void CatalogsFeedProductCounts::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CatalogsFeedProductCounts::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CatalogsFeedProductCounts::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CatalogsFeedProductCounts" : pathPrefix;

            
    return success;
}

bool CatalogsFeedProductCounts::operator==(const CatalogsFeedProductCounts& rhs) const
{
    return
    
    
    
    ((!originalIsSet() && !rhs.originalIsSet()) || (originalIsSet() && rhs.originalIsSet() && getOriginal() == rhs.getOriginal())) &&
    
    
    ((!ingestedIsSet() && !rhs.ingestedIsSet()) || (ingestedIsSet() && rhs.ingestedIsSet() && getIngested() == rhs.getIngested()))
    
    ;
}

bool CatalogsFeedProductCounts::operator!=(const CatalogsFeedProductCounts& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CatalogsFeedProductCounts& o)
{
    j = nlohmann::json::object();
    if(o.originalIsSet())
        j["original"] = o.m_Original;
    if(o.ingestedIsSet())
        j["ingested"] = o.m_Ingested;
    
}

void from_json(const nlohmann::json& j, CatalogsFeedProductCounts& o)
{
    if(j.find("original") != j.end())
    {
        j.at("original").get_to(o.m_Original);
        o.m_OriginalIsSet = true;
    } 
    if(j.find("ingested") != j.end())
    {
        j.at("ingested").get_to(o.m_Ingested);
        o.m_IngestedIsSet = true;
    } 
    
}

int32_t CatalogsFeedProductCounts::getOriginal() const
{
    return m_Original;
}
void CatalogsFeedProductCounts::setOriginal(int32_t const value)
{
    m_Original = value;
    m_OriginalIsSet = true;
}
bool CatalogsFeedProductCounts::originalIsSet() const
{
    return m_OriginalIsSet;
}
void CatalogsFeedProductCounts::unsetOriginal()
{
    m_OriginalIsSet = false;
}
int32_t CatalogsFeedProductCounts::getIngested() const
{
    return m_Ingested;
}
void CatalogsFeedProductCounts::setIngested(int32_t const value)
{
    m_Ingested = value;
    m_IngestedIsSet = true;
}
bool CatalogsFeedProductCounts::ingestedIsSet() const
{
    return m_IngestedIsSet;
}
void CatalogsFeedProductCounts::unsetIngested()
{
    m_IngestedIsSet = false;
}


} // namespace org::openapitools::server::model

