/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AppTypeMultipliers.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AppTypeMultipliers::AppTypeMultipliers()
{
    m_APP_TYPEIsSet = false;
    
}

void AppTypeMultipliers::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AppTypeMultipliers::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AppTypeMultipliers::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AppTypeMultipliers" : pathPrefix;

        
    return success;
}

bool AppTypeMultipliers::operator==(const AppTypeMultipliers& rhs) const
{
    return
    
    
    
    ((!aPPTYPEIsSet() && !rhs.aPPTYPEIsSet()) || (aPPTYPEIsSet() && rhs.aPPTYPEIsSet() && getAPPTYPE() == rhs.getAPPTYPE()))
    
    ;
}

bool AppTypeMultipliers::operator!=(const AppTypeMultipliers& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AppTypeMultipliers& o)
{
    j = nlohmann::json::object();
    if(o.aPPTYPEIsSet())
        j["APP_TYPE"] = o.m_APP_TYPE;
    
}

void from_json(const nlohmann::json& j, AppTypeMultipliers& o)
{
    if(j.find("APP_TYPE") != j.end())
    {
        j.at("APP_TYPE").get_to(o.m_APP_TYPE);
        o.m_APP_TYPEIsSet = true;
    } 
    
}

org::openapitools::server::model::TargetingSpecAppType AppTypeMultipliers::getAPPTYPE() const
{
    return m_APP_TYPE;
}
void AppTypeMultipliers::setAPPTYPE(org::openapitools::server::model::TargetingSpecAppType const& value)
{
    m_APP_TYPE = value;
    m_APP_TYPEIsSet = true;
}
bool AppTypeMultipliers::aPPTYPEIsSet() const
{
    return m_APP_TYPEIsSet;
}
void AppTypeMultipliers::unsetAPP_TYPE()
{
    m_APP_TYPEIsSet = false;
}


} // namespace org::openapitools::server::model

