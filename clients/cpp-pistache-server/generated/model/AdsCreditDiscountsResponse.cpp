/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AdsCreditDiscountsResponse.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AdsCreditDiscountsResponse::AdsCreditDiscountsResponse()
{
    m_Active = false;
    m_ActiveIsSet = false;
    m_Advertiser_id = "";
    m_Advertiser_idIsSet = false;
    m_DiscountType = "";
    m_DiscountTypeIsSet = false;
    m_DiscountInMicroCurrency = 0.0;
    m_DiscountInMicroCurrencyIsSet = false;
    m_DiscountCurrency = "";
    m_DiscountCurrencyIsSet = false;
    m_Title = "";
    m_TitleIsSet = false;
    m_RemainingDiscountInMicroCurrency = 0.0;
    m_RemainingDiscountInMicroCurrencyIsSet = false;
    
}

void AdsCreditDiscountsResponse::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AdsCreditDiscountsResponse::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AdsCreditDiscountsResponse::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AdsCreditDiscountsResponse" : pathPrefix;

             
    if (advertiserIdIsSet())
    {
        const std::string& value = m_Advertiser_id;
        const std::string currentValuePath = _pathPrefix + ".advertiserId";
                
        

    }
                        
    return success;
}

bool AdsCreditDiscountsResponse::operator==(const AdsCreditDiscountsResponse& rhs) const
{
    return
    
    
    
    ((!activeIsSet() && !rhs.activeIsSet()) || (activeIsSet() && rhs.activeIsSet() && isActive() == rhs.isActive())) &&
    
    
    ((!advertiserIdIsSet() && !rhs.advertiserIdIsSet()) || (advertiserIdIsSet() && rhs.advertiserIdIsSet() && getAdvertiserId() == rhs.getAdvertiserId())) &&
    
    
    ((!discountTypeIsSet() && !rhs.discountTypeIsSet()) || (discountTypeIsSet() && rhs.discountTypeIsSet() && getDiscountType() == rhs.getDiscountType())) &&
    
    
    ((!discountInMicroCurrencyIsSet() && !rhs.discountInMicroCurrencyIsSet()) || (discountInMicroCurrencyIsSet() && rhs.discountInMicroCurrencyIsSet() && getDiscountInMicroCurrency() == rhs.getDiscountInMicroCurrency())) &&
    
    
    ((!discountCurrencyIsSet() && !rhs.discountCurrencyIsSet()) || (discountCurrencyIsSet() && rhs.discountCurrencyIsSet() && getDiscountCurrency() == rhs.getDiscountCurrency())) &&
    
    
    ((!titleIsSet() && !rhs.titleIsSet()) || (titleIsSet() && rhs.titleIsSet() && getTitle() == rhs.getTitle())) &&
    
    
    ((!remainingDiscountInMicroCurrencyIsSet() && !rhs.remainingDiscountInMicroCurrencyIsSet()) || (remainingDiscountInMicroCurrencyIsSet() && rhs.remainingDiscountInMicroCurrencyIsSet() && getRemainingDiscountInMicroCurrency() == rhs.getRemainingDiscountInMicroCurrency()))
    
    ;
}

bool AdsCreditDiscountsResponse::operator!=(const AdsCreditDiscountsResponse& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AdsCreditDiscountsResponse& o)
{
    j = nlohmann::json::object();
    if(o.activeIsSet())
        j["active"] = o.m_Active;
    if(o.advertiserIdIsSet())
        j["advertiser_id"] = o.m_Advertiser_id;
    if(o.discountTypeIsSet())
        j["discountType"] = o.m_DiscountType;
    if(o.discountInMicroCurrencyIsSet())
        j["discountInMicroCurrency"] = o.m_DiscountInMicroCurrency;
    if(o.discountCurrencyIsSet())
        j["discountCurrency"] = o.m_DiscountCurrency;
    if(o.titleIsSet())
        j["title"] = o.m_Title;
    if(o.remainingDiscountInMicroCurrencyIsSet())
        j["remainingDiscountInMicroCurrency"] = o.m_RemainingDiscountInMicroCurrency;
    
}

void from_json(const nlohmann::json& j, AdsCreditDiscountsResponse& o)
{
    if(j.find("active") != j.end())
    {
        j.at("active").get_to(o.m_Active);
        o.m_ActiveIsSet = true;
    } 
    if(j.find("advertiser_id") != j.end())
    {
        j.at("advertiser_id").get_to(o.m_Advertiser_id);
        o.m_Advertiser_idIsSet = true;
    } 
    if(j.find("discountType") != j.end())
    {
        j.at("discountType").get_to(o.m_DiscountType);
        o.m_DiscountTypeIsSet = true;
    } 
    if(j.find("discountInMicroCurrency") != j.end())
    {
        j.at("discountInMicroCurrency").get_to(o.m_DiscountInMicroCurrency);
        o.m_DiscountInMicroCurrencyIsSet = true;
    } 
    if(j.find("discountCurrency") != j.end())
    {
        j.at("discountCurrency").get_to(o.m_DiscountCurrency);
        o.m_DiscountCurrencyIsSet = true;
    } 
    if(j.find("title") != j.end())
    {
        j.at("title").get_to(o.m_Title);
        o.m_TitleIsSet = true;
    } 
    if(j.find("remainingDiscountInMicroCurrency") != j.end())
    {
        j.at("remainingDiscountInMicroCurrency").get_to(o.m_RemainingDiscountInMicroCurrency);
        o.m_RemainingDiscountInMicroCurrencyIsSet = true;
    } 
    
}

bool AdsCreditDiscountsResponse::isActive() const
{
    return m_Active;
}
void AdsCreditDiscountsResponse::setActive(bool const value)
{
    m_Active = value;
    m_ActiveIsSet = true;
}
bool AdsCreditDiscountsResponse::activeIsSet() const
{
    return m_ActiveIsSet;
}
void AdsCreditDiscountsResponse::unsetActive()
{
    m_ActiveIsSet = false;
}
std::string AdsCreditDiscountsResponse::getAdvertiserId() const
{
    return m_Advertiser_id;
}
void AdsCreditDiscountsResponse::setAdvertiserId(std::string const& value)
{
    m_Advertiser_id = value;
    m_Advertiser_idIsSet = true;
}
bool AdsCreditDiscountsResponse::advertiserIdIsSet() const
{
    return m_Advertiser_idIsSet;
}
void AdsCreditDiscountsResponse::unsetAdvertiser_id()
{
    m_Advertiser_idIsSet = false;
}
std::string AdsCreditDiscountsResponse::getDiscountType() const
{
    return m_DiscountType;
}
void AdsCreditDiscountsResponse::setDiscountType(std::string const& value)
{
    m_DiscountType = value;
    m_DiscountTypeIsSet = true;
}
bool AdsCreditDiscountsResponse::discountTypeIsSet() const
{
    return m_DiscountTypeIsSet;
}
void AdsCreditDiscountsResponse::unsetDiscountType()
{
    m_DiscountTypeIsSet = false;
}
double AdsCreditDiscountsResponse::getDiscountInMicroCurrency() const
{
    return m_DiscountInMicroCurrency;
}
void AdsCreditDiscountsResponse::setDiscountInMicroCurrency(double const value)
{
    m_DiscountInMicroCurrency = value;
    m_DiscountInMicroCurrencyIsSet = true;
}
bool AdsCreditDiscountsResponse::discountInMicroCurrencyIsSet() const
{
    return m_DiscountInMicroCurrencyIsSet;
}
void AdsCreditDiscountsResponse::unsetDiscountInMicroCurrency()
{
    m_DiscountInMicroCurrencyIsSet = false;
}
std::string AdsCreditDiscountsResponse::getDiscountCurrency() const
{
    return m_DiscountCurrency;
}
void AdsCreditDiscountsResponse::setDiscountCurrency(std::string const& value)
{
    m_DiscountCurrency = value;
    m_DiscountCurrencyIsSet = true;
}
bool AdsCreditDiscountsResponse::discountCurrencyIsSet() const
{
    return m_DiscountCurrencyIsSet;
}
void AdsCreditDiscountsResponse::unsetDiscountCurrency()
{
    m_DiscountCurrencyIsSet = false;
}
std::string AdsCreditDiscountsResponse::getTitle() const
{
    return m_Title;
}
void AdsCreditDiscountsResponse::setTitle(std::string const& value)
{
    m_Title = value;
    m_TitleIsSet = true;
}
bool AdsCreditDiscountsResponse::titleIsSet() const
{
    return m_TitleIsSet;
}
void AdsCreditDiscountsResponse::unsetTitle()
{
    m_TitleIsSet = false;
}
double AdsCreditDiscountsResponse::getRemainingDiscountInMicroCurrency() const
{
    return m_RemainingDiscountInMicroCurrency;
}
void AdsCreditDiscountsResponse::setRemainingDiscountInMicroCurrency(double const value)
{
    m_RemainingDiscountInMicroCurrency = value;
    m_RemainingDiscountInMicroCurrencyIsSet = true;
}
bool AdsCreditDiscountsResponse::remainingDiscountInMicroCurrencyIsSet() const
{
    return m_RemainingDiscountInMicroCurrencyIsSet;
}
void AdsCreditDiscountsResponse::unsetRemainingDiscountInMicroCurrency()
{
    m_RemainingDiscountInMicroCurrencyIsSet = false;
}


} // namespace org::openapitools::server::model

