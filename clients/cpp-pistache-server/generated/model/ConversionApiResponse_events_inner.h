/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ConversionApiResponse_events_inner.h
 *
 * 
 */

#ifndef ConversionApiResponse_events_inner_H_
#define ConversionApiResponse_events_inner_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  ConversionApiResponse_events_inner
{
public:
    ConversionApiResponse_events_inner();
    virtual ~ConversionApiResponse_events_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ConversionApiResponse_events_inner& rhs) const;
    bool operator!=(const ConversionApiResponse_events_inner& rhs) const;

    /////////////////////////////////////////////
    /// ConversionApiResponse_events_inner members

    /// <summary>
    /// Whether the event was processed successfully.
    /// </summary>
    std::string getStatus() const;
    void setStatus(std::string const& value);
    /// <summary>
    /// Error message containing more information about why the event failed to be processed.
    /// </summary>
    std::string getErrorMessage() const;
    void setErrorMessage(std::string const& value);
    bool errorMessageIsSet() const;
    void unsetError_message();
    /// <summary>
    /// Warning messages about any fields in the event which are not standard. These are not critical to event processing.
    /// </summary>
    std::string getWarningMessage() const;
    void setWarningMessage(std::string const& value);
    bool warningMessageIsSet() const;
    void unsetWarning_message();

    friend  void to_json(nlohmann::json& j, const ConversionApiResponse_events_inner& o);
    friend  void from_json(const nlohmann::json& j, ConversionApiResponse_events_inner& o);
protected:
    std::string m_Status;

    std::string m_Error_message;
    bool m_Error_messageIsSet;
    std::string m_Warning_message;
    bool m_Warning_messageIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ConversionApiResponse_events_inner_H_ */
