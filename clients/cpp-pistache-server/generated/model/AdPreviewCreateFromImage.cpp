/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AdPreviewCreateFromImage.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AdPreviewCreateFromImage::AdPreviewCreateFromImage()
{
    m_Image_url = "";
    m_Title = "";
    
}

void AdPreviewCreateFromImage::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AdPreviewCreateFromImage::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AdPreviewCreateFromImage::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AdPreviewCreateFromImage" : pathPrefix;

            
    return success;
}

bool AdPreviewCreateFromImage::operator==(const AdPreviewCreateFromImage& rhs) const
{
    return
    
    
    (getImageUrl() == rhs.getImageUrl())
     &&
    
    (getTitle() == rhs.getTitle())
    
    
    ;
}

bool AdPreviewCreateFromImage::operator!=(const AdPreviewCreateFromImage& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AdPreviewCreateFromImage& o)
{
    j = nlohmann::json::object();
    j["image_url"] = o.m_Image_url;
    j["title"] = o.m_Title;
    
}

void from_json(const nlohmann::json& j, AdPreviewCreateFromImage& o)
{
    j.at("image_url").get_to(o.m_Image_url);
    j.at("title").get_to(o.m_Title);
    
}

std::string AdPreviewCreateFromImage::getImageUrl() const
{
    return m_Image_url;
}
void AdPreviewCreateFromImage::setImageUrl(std::string const& value)
{
    m_Image_url = value;
}
std::string AdPreviewCreateFromImage::getTitle() const
{
    return m_Title;
}
void AdPreviewCreateFromImage::setTitle(std::string const& value)
{
    m_Title = value;
}


} // namespace org::openapitools::server::model

