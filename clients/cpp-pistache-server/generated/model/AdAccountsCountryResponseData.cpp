/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AdAccountsCountryResponseData.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AdAccountsCountryResponseData::AdAccountsCountryResponseData()
{
    m_Code = "";
    m_CodeIsSet = false;
    m_Currency = "";
    m_CurrencyIsSet = false;
    m_Index = 0.0;
    m_IndexIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    
}

void AdAccountsCountryResponseData::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AdAccountsCountryResponseData::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AdAccountsCountryResponseData::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AdAccountsCountryResponseData" : pathPrefix;

                    
    return success;
}

bool AdAccountsCountryResponseData::operator==(const AdAccountsCountryResponseData& rhs) const
{
    return
    
    
    
    ((!codeIsSet() && !rhs.codeIsSet()) || (codeIsSet() && rhs.codeIsSet() && getCode() == rhs.getCode())) &&
    
    
    ((!currencyIsSet() && !rhs.currencyIsSet()) || (currencyIsSet() && rhs.currencyIsSet() && getCurrency() == rhs.getCurrency())) &&
    
    
    ((!indexIsSet() && !rhs.indexIsSet()) || (indexIsSet() && rhs.indexIsSet() && getIndex() == rhs.getIndex())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName()))
    
    ;
}

bool AdAccountsCountryResponseData::operator!=(const AdAccountsCountryResponseData& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AdAccountsCountryResponseData& o)
{
    j = nlohmann::json::object();
    if(o.codeIsSet())
        j["code"] = o.m_Code;
    if(o.currencyIsSet())
        j["currency"] = o.m_Currency;
    if(o.indexIsSet())
        j["index"] = o.m_Index;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    
}

void from_json(const nlohmann::json& j, AdAccountsCountryResponseData& o)
{
    if(j.find("code") != j.end())
    {
        j.at("code").get_to(o.m_Code);
        o.m_CodeIsSet = true;
    } 
    if(j.find("currency") != j.end())
    {
        j.at("currency").get_to(o.m_Currency);
        o.m_CurrencyIsSet = true;
    } 
    if(j.find("index") != j.end())
    {
        j.at("index").get_to(o.m_Index);
        o.m_IndexIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    
}

AdCountry AdAccountsCountryResponseData::getCode() const
{
    return m_Code;
}
void AdAccountsCountryResponseData::setCode(AdCountry const& value)
{
    m_Code = value;
    m_CodeIsSet = true;
}
bool AdAccountsCountryResponseData::codeIsSet() const
{
    return m_CodeIsSet;
}
void AdAccountsCountryResponseData::unsetCode()
{
    m_CodeIsSet = false;
}
std::string AdAccountsCountryResponseData::getCurrency() const
{
    return m_Currency;
}
void AdAccountsCountryResponseData::setCurrency(std::string const& value)
{
    m_Currency = value;
    m_CurrencyIsSet = true;
}
bool AdAccountsCountryResponseData::currencyIsSet() const
{
    return m_CurrencyIsSet;
}
void AdAccountsCountryResponseData::unsetCurrency()
{
    m_CurrencyIsSet = false;
}
double AdAccountsCountryResponseData::getIndex() const
{
    return m_Index;
}
void AdAccountsCountryResponseData::setIndex(double const value)
{
    m_Index = value;
    m_IndexIsSet = true;
}
bool AdAccountsCountryResponseData::indexIsSet() const
{
    return m_IndexIsSet;
}
void AdAccountsCountryResponseData::unsetIndex()
{
    m_IndexIsSet = false;
}
std::string AdAccountsCountryResponseData::getName() const
{
    return m_Name;
}
void AdAccountsCountryResponseData::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool AdAccountsCountryResponseData::nameIsSet() const
{
    return m_NameIsSet;
}
void AdAccountsCountryResponseData::unsetName()
{
    m_NameIsSet = false;
}


} // namespace org::openapitools::server::model

