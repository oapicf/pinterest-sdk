/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsHotelGuestRatings.h
 *
 * If specified, you must provide all properties
 */

#ifndef CatalogsHotelGuestRatings_H_
#define CatalogsHotelGuestRatings_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// If specified, you must provide all properties
/// </summary>
class  CatalogsHotelGuestRatings
{
public:
    CatalogsHotelGuestRatings();
    virtual ~CatalogsHotelGuestRatings() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsHotelGuestRatings& rhs) const;
    bool operator!=(const CatalogsHotelGuestRatings& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsHotelGuestRatings members

    /// <summary>
    /// Your hotel&#39;s rating.
    /// </summary>
    double getScore() const;
    void setScore(double const value);
    bool scoreIsSet() const;
    void unsetScore();
    /// <summary>
    /// Total number of people who have rated this hotel.
    /// </summary>
    int32_t getNumberOfReviewers() const;
    void setNumberOfReviewers(int32_t const value);
    bool numberOfReviewersIsSet() const;
    void unsetNumber_of_reviewers();
    /// <summary>
    /// Max value for the hotel rating score.
    /// </summary>
    double getMaxScore() const;
    void setMaxScore(double const value);
    bool maxScoreIsSet() const;
    void unsetMax_score();
    /// <summary>
    /// System you use for guest reviews.
    /// </summary>
    std::string getRatingSystem() const;
    void setRatingSystem(std::string const& value);
    bool ratingSystemIsSet() const;
    void unsetRating_system();

    friend  void to_json(nlohmann::json& j, const CatalogsHotelGuestRatings& o);
    friend  void from_json(const nlohmann::json& j, CatalogsHotelGuestRatings& o);
protected:
    double m_Score;
    bool m_ScoreIsSet;
    int32_t m_Number_of_reviewers;
    bool m_Number_of_reviewersIsSet;
    double m_Max_score;
    bool m_Max_scoreIsSet;
    std::string m_Rating_system;
    bool m_Rating_systemIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsHotelGuestRatings_H_ */
