/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AdsCreditDiscountsResponse.h
 *
 * 
 */

#ifndef AdsCreditDiscountsResponse_H_
#define AdsCreditDiscountsResponse_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  AdsCreditDiscountsResponse
{
public:
    AdsCreditDiscountsResponse();
    virtual ~AdsCreditDiscountsResponse() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AdsCreditDiscountsResponse& rhs) const;
    bool operator!=(const AdsCreditDiscountsResponse& rhs) const;

    /////////////////////////////////////////////
    /// AdsCreditDiscountsResponse members

    /// <summary>
    /// True if the offer code is currently active.
    /// </summary>
    bool isActive() const;
    void setActive(bool const value);
    bool activeIsSet() const;
    void unsetActive();
    /// <summary>
    /// Advertiser ID the offer was applied to.
    /// </summary>
    std::string getAdvertiserId() const;
    void setAdvertiserId(std::string const& value);
    bool advertiserIdIsSet() const;
    void unsetAdvertiser_id();
    /// <summary>
    /// The type of discount of this credit
    /// </summary>
    std::string getDiscountType() const;
    void setDiscountType(std::string const& value);
    bool discountTypeIsSet() const;
    void unsetDiscountType();
    /// <summary>
    /// The discount applied in the offerâ€™s currency value.
    /// </summary>
    double getDiscountInMicroCurrency() const;
    void setDiscountInMicroCurrency(double const value);
    bool discountInMicroCurrencyIsSet() const;
    void unsetDiscountInMicroCurrency();
    /// <summary>
    /// Currency value for the discount.
    /// </summary>
    std::string getDiscountCurrency() const;
    void setDiscountCurrency(std::string const& value);
    bool discountCurrencyIsSet() const;
    void unsetDiscountCurrency();
    /// <summary>
    /// Human readable title of the offer code.
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string const& value);
    bool titleIsSet() const;
    void unsetTitle();
    /// <summary>
    /// The credits left to spend.
    /// </summary>
    double getRemainingDiscountInMicroCurrency() const;
    void setRemainingDiscountInMicroCurrency(double const value);
    bool remainingDiscountInMicroCurrencyIsSet() const;
    void unsetRemainingDiscountInMicroCurrency();

    friend  void to_json(nlohmann::json& j, const AdsCreditDiscountsResponse& o);
    friend  void from_json(const nlohmann::json& j, AdsCreditDiscountsResponse& o);
protected:
    bool m_Active;
    bool m_ActiveIsSet;
    std::string m_Advertiser_id;
    bool m_Advertiser_idIsSet;
    std::string m_DiscountType;
    bool m_DiscountTypeIsSet;
    double m_DiscountInMicroCurrency;
    bool m_DiscountInMicroCurrencyIsSet;
    std::string m_DiscountCurrency;
    bool m_DiscountCurrencyIsSet;
    std::string m_Title;
    bool m_TitleIsSet;
    double m_RemainingDiscountInMicroCurrency;
    bool m_RemainingDiscountInMicroCurrencyIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* AdsCreditDiscountsResponse_H_ */
