/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CatalogsRetailProductGroupProductCounts.h
 *
 * Product counts for a Retail CatalogsProductGroup
 */

#ifndef CatalogsRetailProductGroupProductCounts_H_
#define CatalogsRetailProductGroupProductCounts_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Product counts for a Retail CatalogsProductGroup
/// </summary>
class  CatalogsRetailProductGroupProductCounts
{
public:
    CatalogsRetailProductGroupProductCounts();
    virtual ~CatalogsRetailProductGroupProductCounts() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CatalogsRetailProductGroupProductCounts& rhs) const;
    bool operator!=(const CatalogsRetailProductGroupProductCounts& rhs) const;

    /////////////////////////////////////////////
    /// CatalogsRetailProductGroupProductCounts members

    /// <summary>
    /// 
    /// </summary>
    std::string getCatalogType() const;
    void setCatalogType(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    double getInStock() const;
    void setInStock(double const value);
    /// <summary>
    /// 
    /// </summary>
    double getOutOfStock() const;
    void setOutOfStock(double const value);
    /// <summary>
    /// 
    /// </summary>
    double getPreorder() const;
    void setPreorder(double const value);
    /// <summary>
    /// 
    /// </summary>
    double getTotal() const;
    void setTotal(double const value);
    /// <summary>
    /// 
    /// </summary>
    double getVideos() const;
    void setVideos(double const value);
    bool videosIsSet() const;
    void unsetVideos();

    friend  void to_json(nlohmann::json& j, const CatalogsRetailProductGroupProductCounts& o);
    friend  void from_json(const nlohmann::json& j, CatalogsRetailProductGroupProductCounts& o);
protected:
    std::string m_Catalog_type;

    double m_In_stock;

    double m_Out_of_stock;

    double m_Preorder;

    double m_Total;

    double m_Videos;
    bool m_VideosIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* CatalogsRetailProductGroupProductCounts_H_ */
