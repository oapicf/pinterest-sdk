/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * PinMediaSourceVideoID.h
 *
 * Video ID-based media source
 */

#ifndef PinMediaSourceVideoID_H_
#define PinMediaSourceVideoID_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Video ID-based media source
/// </summary>
class  PinMediaSourceVideoID
{
public:
    PinMediaSourceVideoID();
    virtual ~PinMediaSourceVideoID() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const PinMediaSourceVideoID& rhs) const;
    bool operator!=(const PinMediaSourceVideoID& rhs) const;

    /////////////////////////////////////////////
    /// PinMediaSourceVideoID members

    /// <summary>
    /// 
    /// </summary>
    std::string getSourceType() const;
    void setSourceType(std::string const& value);
    /// <summary>
    /// Cover image url.
    /// </summary>
    std::string getCoverImageUrl() const;
    void setCoverImageUrl(std::string const& value);
    bool coverImageUrlIsSet() const;
    void unsetCover_image_url();
    /// <summary>
    /// Content type for cover image Base64.
    /// </summary>
    std::string getCoverImageContentType() const;
    void setCoverImageContentType(std::string const& value);
    bool coverImageContentTypeIsSet() const;
    void unsetCover_image_content_type();
    /// <summary>
    /// Cover image Base64.
    /// </summary>
    std::string getCoverImageData() const;
    void setCoverImageData(std::string const& value);
    bool coverImageDataIsSet() const;
    void unsetCover_image_data();
    /// <summary>
    /// 
    /// </summary>
    std::string getMediaId() const;
    void setMediaId(std::string const& value);
    /// <summary>
    /// Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
    /// </summary>
    bool isIsStandard() const;
    void setIsStandard(bool const value);
    bool isStandardIsSet() const;
    void unsetIs_standard();

    friend  void to_json(nlohmann::json& j, const PinMediaSourceVideoID& o);
    friend  void from_json(const nlohmann::json& j, PinMediaSourceVideoID& o);
protected:
    std::string m_Source_type;

    std::string m_Cover_image_url;
    bool m_Cover_image_urlIsSet;
    std::string m_Cover_image_content_type;
    bool m_Cover_image_content_typeIsSet;
    std::string m_Cover_image_data;
    bool m_Cover_image_dataIsSet;
    std::string m_Media_id;

    bool m_Is_standard;
    bool m_Is_standardIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* PinMediaSourceVideoID_H_ */
