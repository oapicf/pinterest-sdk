/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AdAccountGetSubscriptionResponse.h
 *
 * 
 */

#ifndef AdAccountGetSubscriptionResponse_H_
#define AdAccountGetSubscriptionResponse_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  AdAccountGetSubscriptionResponse
{
public:
    AdAccountGetSubscriptionResponse();
    virtual ~AdAccountGetSubscriptionResponse() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AdAccountGetSubscriptionResponse& rhs) const;
    bool operator!=(const AdAccountGetSubscriptionResponse& rhs) const;

    /////////////////////////////////////////////
    /// AdAccountGetSubscriptionResponse members

    /// <summary>
    /// Lead form ID.
    /// </summary>
    std::string getLeadFormId() const;
    void setLeadFormId(std::string const& value);
    bool leadFormIdIsSet() const;
    void unsetLead_form_id();
    /// <summary>
    /// Standard HTTPS webhook URL.
    /// </summary>
    std::string getWebhookUrl() const;
    void setWebhookUrl(std::string const& value);
    bool webhookUrlIsSet() const;
    void unsetWebhook_url();
    /// <summary>
    /// Subscription ID.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// User account used to subscribe lead data.
    /// </summary>
    std::string getUserAccountId() const;
    void setUserAccountId(std::string const& value);
    bool userAccountIdIsSet() const;
    void unsetUser_account_id();
    /// <summary>
    /// The Ad Account ID that this lead form belongs to.
    /// </summary>
    std::string getAdAccountId() const;
    void setAdAccountId(std::string const& value);
    bool adAccountIdIsSet() const;
    void unsetAd_account_id();
    /// <summary>
    /// API version.
    /// </summary>
    std::string getApiVersion() const;
    void setApiVersion(std::string const& value);
    bool apiVersionIsSet() const;
    void unsetApi_version();
    /// <summary>
    /// Base64 encoded key for client to decrypt lead data.
    /// </summary>
    std::string getCryptographicKey() const;
    void setCryptographicKey(std::string const& value);
    bool cryptographicKeyIsSet() const;
    void unsetCryptographic_key();
    /// <summary>
    /// Lead data encryption algorithm.
    /// </summary>
    std::string getCryptographicAlgorithm() const;
    void setCryptographicAlgorithm(std::string const& value);
    bool cryptographicAlgorithmIsSet() const;
    void unsetCryptographic_algorithm();
    /// <summary>
    /// Lead form creation time. Unix timestamp in milliseconds.
    /// </summary>
    int32_t getCreatedTime() const;
    void setCreatedTime(int32_t const value);
    bool createdTimeIsSet() const;
    void unsetCreated_time();

    friend  void to_json(nlohmann::json& j, const AdAccountGetSubscriptionResponse& o);
    friend  void from_json(const nlohmann::json& j, AdAccountGetSubscriptionResponse& o);
protected:
    std::string m_Lead_form_id;
    bool m_Lead_form_idIsSet;
    std::string m_Webhook_url;
    bool m_Webhook_urlIsSet;
    std::string m_Id;
    bool m_IdIsSet;
    std::string m_User_account_id;
    bool m_User_account_idIsSet;
    std::string m_Ad_account_id;
    bool m_Ad_account_idIsSet;
    std::string m_Api_version;
    bool m_Api_versionIsSet;
    std::string m_Cryptographic_key;
    bool m_Cryptographic_keyIsSet;
    std::string m_Cryptographic_algorithm;
    bool m_Cryptographic_algorithmIsSet;
    int32_t m_Created_time;
    bool m_Created_timeIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* AdAccountGetSubscriptionResponse_H_ */
