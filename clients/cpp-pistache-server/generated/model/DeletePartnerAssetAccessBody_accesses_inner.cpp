/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DeletePartnerAssetAccessBody_accesses_inner.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DeletePartnerAssetAccessBody_accesses_inner::DeletePartnerAssetAccessBody_accesses_inner()
{
    m_Partner_id = "";
    m_Asset_id = "";
    m_Partner_type = "INTERNAL";
    m_Partner_typeIsSet = false;
    
}

void DeletePartnerAssetAccessBody_accesses_inner::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DeletePartnerAssetAccessBody_accesses_inner::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DeletePartnerAssetAccessBody_accesses_inner::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DeletePartnerAssetAccessBody_accesses_inner" : pathPrefix;

         
    
    /* Partner_id */ {
        const std::string& value = m_Partner_id;
        const std::string currentValuePath = _pathPrefix + ".partnerId";
                
        
        if (value.length() > 25)
        {
            success = false;
            msg << currentValuePath << ": must be at most 25 characters long;";
        }

    }
         
    
    /* Asset_id */ {
        const std::string& value = m_Asset_id;
        const std::string currentValuePath = _pathPrefix + ".assetId";
                
        
        if (value.length() > 25)
        {
            success = false;
            msg << currentValuePath << ": must be at most 25 characters long;";
        }

    }
        
    return success;
}

bool DeletePartnerAssetAccessBody_accesses_inner::operator==(const DeletePartnerAssetAccessBody_accesses_inner& rhs) const
{
    return
    
    
    (getPartnerId() == rhs.getPartnerId())
     &&
    
    (getAssetId() == rhs.getAssetId())
     &&
    
    
    ((!partnerTypeIsSet() && !rhs.partnerTypeIsSet()) || (partnerTypeIsSet() && rhs.partnerTypeIsSet() && getPartnerType() == rhs.getPartnerType()))
    
    ;
}

bool DeletePartnerAssetAccessBody_accesses_inner::operator!=(const DeletePartnerAssetAccessBody_accesses_inner& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DeletePartnerAssetAccessBody_accesses_inner& o)
{
    j = nlohmann::json::object();
    j["partner_id"] = o.m_Partner_id;
    j["asset_id"] = o.m_Asset_id;
    if(o.partnerTypeIsSet())
        j["partner_type"] = o.m_Partner_type;
    
}

void from_json(const nlohmann::json& j, DeletePartnerAssetAccessBody_accesses_inner& o)
{
    j.at("partner_id").get_to(o.m_Partner_id);
    j.at("asset_id").get_to(o.m_Asset_id);
    if(j.find("partner_type") != j.end())
    {
        j.at("partner_type").get_to(o.m_Partner_type);
        o.m_Partner_typeIsSet = true;
    } 
    
}

std::string DeletePartnerAssetAccessBody_accesses_inner::getPartnerId() const
{
    return m_Partner_id;
}
void DeletePartnerAssetAccessBody_accesses_inner::setPartnerId(std::string const& value)
{
    m_Partner_id = value;
}
std::string DeletePartnerAssetAccessBody_accesses_inner::getAssetId() const
{
    return m_Asset_id;
}
void DeletePartnerAssetAccessBody_accesses_inner::setAssetId(std::string const& value)
{
    m_Asset_id = value;
}
std::string DeletePartnerAssetAccessBody_accesses_inner::getPartnerType() const
{
    return m_Partner_type;
}
void DeletePartnerAssetAccessBody_accesses_inner::setPartnerType(std::string const& value)
{
    m_Partner_type = value;
    m_Partner_typeIsSet = true;
}
bool DeletePartnerAssetAccessBody_accesses_inner::partnerTypeIsSet() const
{
    return m_Partner_typeIsSet;
}
void DeletePartnerAssetAccessBody_accesses_inner::unsetPartner_type()
{
    m_Partner_typeIsSet = false;
}


} // namespace org::openapitools::server::model

