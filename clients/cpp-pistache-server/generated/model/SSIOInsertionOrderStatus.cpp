/**
* Pinterest REST API
* Pinterest's REST API
*
* The version of the OpenAPI document: 5.14.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SSIOInsertionOrderStatus.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

SSIOInsertionOrderStatus::SSIOInsertionOrderStatus()
{
    m_Pin_order_id = "";
    m_Pin_order_idIsSet = false;
    m_Status = "";
    m_StatusIsSet = false;
    m_Creation_time = "";
    m_Creation_timeIsSet = false;
    
}

void SSIOInsertionOrderStatus::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool SSIOInsertionOrderStatus::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool SSIOInsertionOrderStatus::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "SSIOInsertionOrderStatus" : pathPrefix;

                
    return success;
}

bool SSIOInsertionOrderStatus::operator==(const SSIOInsertionOrderStatus& rhs) const
{
    return
    
    
    
    ((!pinOrderIdIsSet() && !rhs.pinOrderIdIsSet()) || (pinOrderIdIsSet() && rhs.pinOrderIdIsSet() && getPinOrderId() == rhs.getPinOrderId())) &&
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!creationTimeIsSet() && !rhs.creationTimeIsSet()) || (creationTimeIsSet() && rhs.creationTimeIsSet() && getCreationTime() == rhs.getCreationTime()))
    
    ;
}

bool SSIOInsertionOrderStatus::operator!=(const SSIOInsertionOrderStatus& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SSIOInsertionOrderStatus& o)
{
    j = nlohmann::json::object();
    if(o.pinOrderIdIsSet())
        j["pin_order_id"] = o.m_Pin_order_id;
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.creationTimeIsSet())
        j["creation_time"] = o.m_Creation_time;
    
}

void from_json(const nlohmann::json& j, SSIOInsertionOrderStatus& o)
{
    if(j.find("pin_order_id") != j.end())
    {
        j.at("pin_order_id").get_to(o.m_Pin_order_id);
        o.m_Pin_order_idIsSet = true;
    } 
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("creation_time") != j.end())
    {
        j.at("creation_time").get_to(o.m_Creation_time);
        o.m_Creation_timeIsSet = true;
    } 
    
}

std::string SSIOInsertionOrderStatus::getPinOrderId() const
{
    return m_Pin_order_id;
}
void SSIOInsertionOrderStatus::setPinOrderId(std::string const& value)
{
    m_Pin_order_id = value;
    m_Pin_order_idIsSet = true;
}
bool SSIOInsertionOrderStatus::pinOrderIdIsSet() const
{
    return m_Pin_order_idIsSet;
}
void SSIOInsertionOrderStatus::unsetPin_order_id()
{
    m_Pin_order_idIsSet = false;
}
std::string SSIOInsertionOrderStatus::getStatus() const
{
    return m_Status;
}
void SSIOInsertionOrderStatus::setStatus(std::string const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool SSIOInsertionOrderStatus::statusIsSet() const
{
    return m_StatusIsSet;
}
void SSIOInsertionOrderStatus::unsetStatus()
{
    m_StatusIsSet = false;
}
std::string SSIOInsertionOrderStatus::getCreationTime() const
{
    return m_Creation_time;
}
void SSIOInsertionOrderStatus::setCreationTime(std::string const& value)
{
    m_Creation_time = value;
    m_Creation_timeIsSet = true;
}
bool SSIOInsertionOrderStatus::creationTimeIsSet() const
{
    return m_Creation_timeIsSet;
}
void SSIOInsertionOrderStatus::unsetCreation_time()
{
    m_Creation_timeIsSet = false;
}


} // namespace org::openapitools::server::model

