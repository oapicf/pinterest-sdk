#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

List accounts with access to an audience owned by an ad account

.DESCRIPTION

No description available.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER AudienceId
Unique identifier of the audience to use to filter the results.

.PARAMETER AccountType
Filter accounts by account type.

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

AdAccountsAudiencesSharedAccountsList200Response
#>
function Invoke-AdAccountsAudiencesSharedAccountsList {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AudienceId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${AccountType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-AdAccountsAudiencesSharedAccountsList' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/ad_accounts/{ad_account_id}/audiences/shared/accounts'
        if (!$AdAccountId) {
            throw "Error! The required parameter `AdAccountId` missing when calling adAccountsAudiencesSharedAccounts_list."
        }
        $LocalVarUri = $LocalVarUri.replace('{ad_account_id}', [System.Web.HTTPUtility]::UrlEncode($AdAccountId))

        if (!$AudienceId) {
            throw "Error! The required parameter `AudienceId` missing when calling adAccountsAudiencesSharedAccounts_list."
        }
        $LocalVarQueryParameters['audience_id'] = $AudienceId

        if (!$AccountType) {
            throw "Error! The required parameter `AccountType` missing when calling adAccountsAudiencesSharedAccounts_list."
        }
        $LocalVarQueryParameters['account_type'] = $AccountType

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "AdAccountsAudiencesSharedAccountsList200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List accounts with access to an audience owned by a business

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER AudienceId
Unique identifier of the audience to use to filter the results.

.PARAMETER AccountType
Filter accounts by account type.

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

AdAccountsAudiencesSharedAccountsList200Response
#>
function Invoke-BusinessAccountAudiencesSharedAccountsList {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AudienceId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${AccountType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-BusinessAccountAudiencesSharedAccountsList' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/audiences/shared/accounts'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling businessAccountAudiencesSharedAccounts_list."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if (!$AudienceId) {
            throw "Error! The required parameter `AudienceId` missing when calling businessAccountAudiencesSharedAccounts_list."
        }
        $LocalVarQueryParameters['audience_id'] = $AudienceId

        if (!$AccountType) {
            throw "Error! The required parameter `AccountType` missing when calling businessAccountAudiencesSharedAccounts_list."
        }
        $LocalVarQueryParameters['account_type'] = $AccountType

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "AdAccountsAudiencesSharedAccountsList200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List received audiences for a business

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER Order
The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

AudiencesList200Response
#>
function Invoke-SharedAudiencesForBusinessList {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ASCENDING", "DESCENDING")]
        [String]
        ${Order},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-SharedAudiencesForBusinessList' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/audiences'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling sharedAudiencesForBusiness_list."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($Order) {
            $LocalVarQueryParameters['order'] = $Order
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "AudiencesList200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Update audience sharing between ad accounts

.DESCRIPTION

No description available.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER SharedAudience
No description available.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

SharedAudienceResponse
#>
function Update-AdAccountToAdAccountSharedAudience {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${SharedAudience},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Update-AdAccountToAdAccountSharedAudience' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared'
        if (!$AdAccountId) {
            throw "Error! The required parameter `AdAccountId` missing when calling updateAdAccountToAdAccountSharedAudience."
        }
        $LocalVarUri = $LocalVarUri.replace('{ad_account_id}', [System.Web.HTTPUtility]::UrlEncode($AdAccountId))

        if (!$SharedAudience) {
            throw "Error! The required parameter `SharedAudience` missing when calling updateAdAccountToAdAccountSharedAudience."
        }

        $LocalVarBodyParameter = $SharedAudience | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'PATCH' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "SharedAudienceResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Update audience sharing from an ad account to businesses

.DESCRIPTION

No description available.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER BusinessSharedAudience
No description available.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

BusinessSharedAudienceResponse
#>
function Update-AdAccountToBusinessSharedAudience {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${BusinessSharedAudience},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Update-AdAccountToBusinessSharedAudience' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/ad_accounts/{ad_account_id}/audiences/businesses/shared'
        if (!$AdAccountId) {
            throw "Error! The required parameter `AdAccountId` missing when calling updateAdAccountToBusinessSharedAudience."
        }
        $LocalVarUri = $LocalVarUri.replace('{ad_account_id}', [System.Web.HTTPUtility]::UrlEncode($AdAccountId))

        if (!$BusinessSharedAudience) {
            throw "Error! The required parameter `BusinessSharedAudience` missing when calling updateAdAccountToBusinessSharedAudience."
        }

        $LocalVarBodyParameter = $BusinessSharedAudience | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'PATCH' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "BusinessSharedAudienceResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Update audience sharing from a business to ad accounts

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER SharedAudience
No description available.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

SharedAudienceResponse
#>
function Update-BusinessToAdAccountSharedAudience {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${SharedAudience},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Update-BusinessToAdAccountSharedAudience' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/audiences/ad_accounts/shared'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling updateBusinessToAdAccountSharedAudience."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if (!$SharedAudience) {
            throw "Error! The required parameter `SharedAudience` missing when calling updateBusinessToAdAccountSharedAudience."
        }

        $LocalVarBodyParameter = $SharedAudience | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'PATCH' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "SharedAudienceResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Update audience sharing between businesses

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER BusinessSharedAudience
No description available.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

BusinessSharedAudienceResponse
#>
function Update-BusinessToBusinessSharedAudience {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${BusinessSharedAudience},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Update-BusinessToBusinessSharedAudience' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/audiences/businesses/shared'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling updateBusinessToBusinessSharedAudience."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if (!$BusinessSharedAudience) {
            throw "Error! The required parameter `BusinessSharedAudience` missing when calling updateBusinessToBusinessSharedAudience."
        }

        $LocalVarBodyParameter = $BusinessSharedAudience | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'PATCH' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "BusinessSharedAudienceResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

