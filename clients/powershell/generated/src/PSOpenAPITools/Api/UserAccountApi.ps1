#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

List following boards

.DESCRIPTION

No description available.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER ExplicitFollowing
Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

BoardsUserFollowsList200Response
#>
function Invoke-BoardsUserFollowsList {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Boolean]]
        ${ExplicitFollowing},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-BoardsUserFollowsList' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/following/boards'

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($ExplicitFollowing) {
            $LocalVarQueryParameters['explicit_following'] = $ExplicitFollowing
        }

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "BoardsUserFollowsList200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Follow user

.DESCRIPTION

No description available.

.PARAMETER Username
A valid username

.PARAMETER FollowUserRequest
Follow a user.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UserSummary
#>
function Trace-UserUpdate {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Username},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${FollowUserRequest},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Trace-UserUpdate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/user_account/following/{username}'
        if (!$Username) {
            throw "Error! The required parameter `Username` missing when calling followUser_update."
        }
        $LocalVarUri = $LocalVarUri.replace('{username}', [System.Web.HTTPUtility]::UrlEncode($Username))

        if (!$FollowUserRequest) {
            throw "Error! The required parameter `FollowUserRequest` missing when calling followUser_update."
        }

        $LocalVarBodyParameter = $FollowUserRequest | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'POST' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UserSummary" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List followers

.DESCRIPTION

No description available.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

FollowersList200Response
#>
function Trace-ersList {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Trace-ersList' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/followers'

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "FollowersList200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List linked businesses

.DESCRIPTION

No description available.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

LinkedBusiness[]
#>
function Invoke-LinkedBusinessAccountsGet {
    [CmdletBinding()]
    Param (
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-LinkedBusinessAccountsGet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/businesses'



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "LinkedBusiness[]" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Unverify website

.DESCRIPTION

No description available.

.PARAMETER Website
Website with path or domain only

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

None
#>
function Invoke-UnverifyWebsiteDelete {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Website},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-UnverifyWebsiteDelete' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/websites'

        if (!$Website) {
            throw "Error! The required parameter `Website` missing when calling unverifyWebsite_delete."
        }
        $LocalVarQueryParameters['website'] = $Website


        $LocalVarResult = Invoke-ApiClient -Method 'DELETE' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get user account analytics

.DESCRIPTION

No description available.

.PARAMETER StartDate
Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.

.PARAMETER EndDate
Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.

.PARAMETER FromClaimedContent
Filter on Pins that match your claimed domain.

.PARAMETER PinFormat
Pin formats to get data for, default is all.

.PARAMETER AppTypes
Apps or devices to get data for, default is all.

.PARAMETER ContentType
Filter to paid or organic data. Default is all.

.PARAMETER Source
Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts

.PARAMETER MetricTypes
Metric types to get data for, default is all. 

.PARAMETER SplitField
How to split the data into groups. Not including this param means data won't be split.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

System.Collections.Hashtable
#>
function Use-rAccountAnalytics {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.DateTime]
        ${StartDate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.DateTime]
        ${EndDate},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("OTHER", "CLAIMED", "BOTH")]
        [String]
        ${FromClaimedContent},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "ORGANIC_IMAGE", "ORGANIC_PRODUCT", "ORGANIC_VIDEO", "ADS_STANDARD", "ADS_PRODUCT", "ADS_VIDEO", "ADS_IDEA")]
        [String]
        ${PinFormat},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "MOBILE", "TABLET", "WEB")]
        [String]
        ${AppTypes},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "PAID", "ORGANIC")]
        [String]
        ${ContentType},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "YOUR_PINS", "OTHER_PINS")]
        [String]
        ${Source},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ENGAGEMENT", "ENGAGEMENT_RATE", "IMPRESSION", "OUTBOUND_CLICK", "OUTBOUND_CLICK_RATE", "PIN_CLICK", "PIN_CLICK_RATE", "SAVE", "SAVE_RATE")]
        [String[]]
        ${MetricTypes},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("NO_SPLIT", "APP_TYPE", "OWNED_CONTENT", "SOURCE", "PIN_FORMAT")]
        [String]
        ${SplitField},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rAccountAnalytics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/analytics'

        if (!$StartDate) {
            throw "Error! The required parameter `StartDate` missing when calling userAccount_analytics."
        }
        $LocalVarQueryParameters['start_date'] = $StartDate

        if (!$EndDate) {
            throw "Error! The required parameter `EndDate` missing when calling userAccount_analytics."
        }
        $LocalVarQueryParameters['end_date'] = $EndDate

        if ($FromClaimedContent) {
            $LocalVarQueryParameters['from_claimed_content'] = $FromClaimedContent
        }

        if ($PinFormat) {
            $LocalVarQueryParameters['pin_format'] = $PinFormat
        }

        if ($AppTypes) {
            $LocalVarQueryParameters['app_types'] = $AppTypes
        }

        if ($ContentType) {
            $LocalVarQueryParameters['content_type'] = $ContentType
        }

        if ($Source) {
            $LocalVarQueryParameters['source'] = $Source
        }

        if ($MetricTypes) {
            $LocalVarQueryParameters['metric_types'] = $MetricTypes
        }

        if ($SplitField) {
            $LocalVarQueryParameters['split_field'] = $SplitField
        }

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "System.Collections.Hashtable" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get user account top pins analytics

.DESCRIPTION

No description available.

.PARAMETER StartDate
Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.

.PARAMETER EndDate
Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.

.PARAMETER SortBy
Specify sorting order for metrics

.PARAMETER FromClaimedContent
Filter on Pins that match your claimed domain.

.PARAMETER PinFormat
Pin formats to get data for, default is all.

.PARAMETER AppTypes
Apps or devices to get data for, default is all.

.PARAMETER ContentType
Filter to paid or organic data. Default is all.

.PARAMETER Source
Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts

.PARAMETER MetricTypes
Metric types to get data for, default is all. 

.PARAMETER NumOfPins
Number of pins to include, default is 10. Max is 50.

.PARAMETER CreatedInLastNDays
Get metrics for pins created in the last ""n"" days.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

TopPinsAnalyticsResponse
#>
function Use-rAccountAnalyticsTopPins {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.DateTime]
        ${StartDate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.DateTime]
        ${EndDate},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ENGAGEMENT", "IMPRESSION", "OUTBOUND_CLICK", "PIN_CLICK", "SAVE")]
        [String]
        ${SortBy},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("OTHER", "CLAIMED", "BOTH")]
        [String]
        ${FromClaimedContent},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "ORGANIC_IMAGE", "ORGANIC_PRODUCT", "ORGANIC_VIDEO", "ADS_STANDARD", "ADS_PRODUCT", "ADS_VIDEO", "ADS_IDEA")]
        [String]
        ${PinFormat},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "MOBILE", "TABLET", "WEB")]
        [String]
        ${AppTypes},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "PAID", "ORGANIC")]
        [String]
        ${ContentType},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "YOUR_PINS", "OTHER_PINS")]
        [String]
        ${Source},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ENGAGEMENT", "ENGAGEMENT_RATE", "IMPRESSION", "OUTBOUND_CLICK", "OUTBOUND_CLICK_RATE", "PIN_CLICK", "PIN_CLICK_RATE", "SAVE", "SAVE_RATE")]
        [String[]]
        ${MetricTypes},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${NumOfPins},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("30")]
        [System.Nullable[Int32]]
        ${CreatedInLastNDays},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rAccountAnalyticsTopPins' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/analytics/top_pins'

        if (!$StartDate) {
            throw "Error! The required parameter `StartDate` missing when calling userAccount_analytics_topPins."
        }
        $LocalVarQueryParameters['start_date'] = $StartDate

        if (!$EndDate) {
            throw "Error! The required parameter `EndDate` missing when calling userAccount_analytics_topPins."
        }
        $LocalVarQueryParameters['end_date'] = $EndDate

        if (!$SortBy) {
            throw "Error! The required parameter `SortBy` missing when calling userAccount_analytics_topPins."
        }
        $LocalVarQueryParameters['sort_by'] = $SortBy

        if ($FromClaimedContent) {
            $LocalVarQueryParameters['from_claimed_content'] = $FromClaimedContent
        }

        if ($PinFormat) {
            $LocalVarQueryParameters['pin_format'] = $PinFormat
        }

        if ($AppTypes) {
            $LocalVarQueryParameters['app_types'] = $AppTypes
        }

        if ($ContentType) {
            $LocalVarQueryParameters['content_type'] = $ContentType
        }

        if ($Source) {
            $LocalVarQueryParameters['source'] = $Source
        }

        if ($MetricTypes) {
            $LocalVarQueryParameters['metric_types'] = $MetricTypes
        }

        if ($NumOfPins) {
            $LocalVarQueryParameters['num_of_pins'] = $NumOfPins
        }

        if ($CreatedInLastNDays) {
            $LocalVarQueryParameters['created_in_last_n_days'] = $CreatedInLastNDays
        }

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "TopPinsAnalyticsResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get user account top video pins analytics

.DESCRIPTION

No description available.

.PARAMETER StartDate
Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today.

.PARAMETER EndDate
Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date.

.PARAMETER SortBy
Specify sorting order for video metrics

.PARAMETER FromClaimedContent
Filter on Pins that match your claimed domain.

.PARAMETER PinFormat
Pin formats to get data for, default is all.

.PARAMETER AppTypes
Apps or devices to get data for, default is all.

.PARAMETER ContentType
Filter to paid or organic data. Default is all.

.PARAMETER Source
Filter to activity from Pins created and saved by your, or activity created and saved by others from your claimed accounts

.PARAMETER MetricTypes
Metric types to get video data for, default is all. 

.PARAMETER NumOfPins
Number of pins to include, default is 10. Max is 50.

.PARAMETER CreatedInLastNDays
Get metrics for pins created in the last ""n"" days.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

TopVideoPinsAnalyticsResponse
#>
function Use-rAccountAnalyticsTopVideoPins {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.DateTime]
        ${StartDate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.DateTime]
        ${EndDate},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("IMPRESSION", "SAVE", "OUTBOUND_CLICK", "VIDEO_MRC_VIEW", "VIDEO_AVG_WATCH_TIME", "VIDEO_V50_WATCH_TIME", "QUARTILE_95_PERCENT_VIEW", "VIDEO_10S_VIEW", "VIDEO_START")]
        [String]
        ${SortBy},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("OTHER", "CLAIMED", "BOTH")]
        [String]
        ${FromClaimedContent},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "ORGANIC_IMAGE", "ORGANIC_PRODUCT", "ORGANIC_VIDEO", "ADS_STANDARD", "ADS_PRODUCT", "ADS_VIDEO", "ADS_IDEA")]
        [String]
        ${PinFormat},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "MOBILE", "TABLET", "WEB")]
        [String]
        ${AppTypes},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "PAID", "ORGANIC")]
        [String]
        ${ContentType},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("ALL", "YOUR_PINS", "OTHER_PINS")]
        [String]
        ${Source},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("IMPRESSION", "SAVE", "VIDEO_MRC_VIEW", "VIDEO_AVG_WATCH_TIME", "VIDEO_V50_WATCH_TIME", "QUARTILE_95_PERCENT_VIEW", "VIDEO_10S_VIEW", "VIDEO_START", "OUTBOUND_CLICK")]
        [String[]]
        ${MetricTypes},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${NumOfPins},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [ValidateSet("30")]
        [System.Nullable[Int32]]
        ${CreatedInLastNDays},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rAccountAnalyticsTopVideoPins' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/analytics/top_video_pins'

        if (!$StartDate) {
            throw "Error! The required parameter `StartDate` missing when calling userAccount_analytics_topVideoPins."
        }
        $LocalVarQueryParameters['start_date'] = $StartDate

        if (!$EndDate) {
            throw "Error! The required parameter `EndDate` missing when calling userAccount_analytics_topVideoPins."
        }
        $LocalVarQueryParameters['end_date'] = $EndDate

        if (!$SortBy) {
            throw "Error! The required parameter `SortBy` missing when calling userAccount_analytics_topVideoPins."
        }
        $LocalVarQueryParameters['sort_by'] = $SortBy

        if ($FromClaimedContent) {
            $LocalVarQueryParameters['from_claimed_content'] = $FromClaimedContent
        }

        if ($PinFormat) {
            $LocalVarQueryParameters['pin_format'] = $PinFormat
        }

        if ($AppTypes) {
            $LocalVarQueryParameters['app_types'] = $AppTypes
        }

        if ($ContentType) {
            $LocalVarQueryParameters['content_type'] = $ContentType
        }

        if ($Source) {
            $LocalVarQueryParameters['source'] = $Source
        }

        if ($MetricTypes) {
            $LocalVarQueryParameters['metric_types'] = $MetricTypes
        }

        if ($NumOfPins) {
            $LocalVarQueryParameters['num_of_pins'] = $NumOfPins
        }

        if ($CreatedInLastNDays) {
            $LocalVarQueryParameters['created_in_last_n_days'] = $CreatedInLastNDays
        }

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "TopVideoPinsAnalyticsResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List following interests

.DESCRIPTION

No description available.

.PARAMETER Username
A valid username

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UserAccountFollowedInterests200Response
#>
function Use-rAccountFollowedInterests {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Username},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rAccountFollowedInterests' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/users/{username}/interests/follow'
        if (!$Username) {
            throw "Error! The required parameter `Username` missing when calling userAccount_followedInterests."
        }
        $LocalVarUri = $LocalVarUri.replace('{username}', [System.Web.HTTPUtility]::UrlEncode($Username))

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UserAccountFollowedInterests200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get user account

.DESCRIPTION

No description available.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

Account
#>
function Use-rAccountGet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rAccountGet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account'

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "Account" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List following

.DESCRIPTION

No description available.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER FeedType
Thrift param specifying what type of followees will be kept. Default to include all followees.

.PARAMETER ExplicitFollowing
Whether or not to include implicit user follows, which means followees with board follows. When explicit_following is True, it means we only want explicit user follows.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UserFollowingGet200Response
#>
function Use-rFollowingGet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [UserFollowingFeedType]
        ${FeedType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Boolean]]
        ${ExplicitFollowing},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rFollowingGet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/following'

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($FeedType) {
            $LocalVarQueryParameters['feed_type'] = $FeedType
        }

        if ($ExplicitFollowing) {
            $LocalVarQueryParameters['explicit_following'] = $ExplicitFollowing
        }

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UserFollowingGet200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get user websites

.DESCRIPTION

No description available.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UserWebsitesGet200Response
#>
function Use-rWebsitesGet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Use-rWebsitesGet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/websites'

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UserWebsitesGet200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Verify website

.DESCRIPTION

No description available.

.PARAMETER UserWebsiteVerifyRequest
Verify a website.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UserWebsiteSummary
#>
function Test-WebsiteUpdate {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${UserWebsiteVerifyRequest},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Test-WebsiteUpdate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/user_account/websites'

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }

        if (!$UserWebsiteVerifyRequest) {
            throw "Error! The required parameter `UserWebsiteVerifyRequest` missing when calling verifyWebsite_update."
        }

        $LocalVarBodyParameter = $UserWebsiteVerifyRequest | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'POST' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UserWebsiteSummary" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get user verification code for website claiming

.DESCRIPTION

No description available.

.PARAMETER AdAccountId
Unique identifier of an ad account.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UserWebsiteVerificationCode
#>
function Invoke-WebsiteVerificationGet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${AdAccountId},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-WebsiteVerificationGet' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/user_account/websites/verification'

        if ($AdAccountId) {
            $LocalVarQueryParameters['ad_account_id'] = $AdAccountId
        }



        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UserWebsiteVerificationCode" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

