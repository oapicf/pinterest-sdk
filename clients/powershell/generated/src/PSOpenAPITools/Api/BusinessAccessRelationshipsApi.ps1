#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

Terminate business memberships

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Business id

.PARAMETER MembersToDeleteBody
List of members with role to delete.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

DeletedMembersResponse
#>
function Invoke-DeleteBusinessMembership {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${MembersToDeleteBody},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-DeleteBusinessMembership' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/members'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling deleteBusinessMembership."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if (!$MembersToDeleteBody) {
            throw "Error! The required parameter `MembersToDeleteBody` missing when calling deleteBusinessMembership."
        }

        $LocalVarBodyParameter = $MembersToDeleteBody | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'DELETE' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "DeletedMembersResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Terminate business partnerships

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER DeletePartnersRequest
An object containing a ""partner_ids"" property composed of a list of partner IDs and a ""partners_type"" property specifying the type of partners to delete. 

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

DeletePartnersResponse
#>
function Invoke-DeleteBusinessPartners {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${DeletePartnersRequest},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Invoke-DeleteBusinessPartners' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/partners'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling deleteBusinessPartners."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if (!$DeletePartnersRequest) {
            throw "Error! The required parameter `DeletePartnersRequest` missing when calling deleteBusinessPartners."
        }

        $LocalVarBodyParameter = $DeletePartnersRequest | ConvertTo-Json -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'DELETE' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "DeletePartnersResponse" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

List business employers for user

.DESCRIPTION

No description available.

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

GetBusinessEmployers200Response
#>
function Get-BusinessEmployers {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Get-BusinessEmployers' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/businesses/employers'

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "GetBusinessEmployers200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get business members

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER AssetsSummary
Include assets summary in the response if this is true.  The assets summary returns a dictionary representing a summary of the assets for the business user ID, with information like the ad accounts and profiles the user has permissions for and what those permissions are

.PARAMETER BusinessRoles
A list of business roles to filter the members by. Only members whose roles are in the specified roles will be returned.

.PARAMETER MemberIds
A list of business members ids separated by comma.

.PARAMETER StartIndex
An index to start fetching the results from. Only the results starting from this index will be returned.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

GetBusinessMembers200Response
#>
function Get-BusinessMembers {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Boolean]]
        ${AssetsSummary},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject[]]
        ${BusinessRoles},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${MemberIds},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${StartIndex},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Get-BusinessMembers' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/members'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling get_businessMembers."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if ($AssetsSummary) {
            $LocalVarQueryParameters['assets_summary'] = $AssetsSummary
        }

        if ($BusinessRoles) {
            $LocalVarQueryParameters['business_roles'] = $BusinessRoles
        }

        if ($MemberIds) {
            $LocalVarQueryParameters['member_ids'] = $MemberIds
        }

        if ($StartIndex) {
            $LocalVarQueryParameters['start_index'] = $StartIndex
        }

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "GetBusinessMembers200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Get business partners

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Unique identifier of the requesting business.

.PARAMETER AssetsSummary
Include assets summary in the response if this is true.  The assets summary returns a dictionary representing a summary of the assets for the business user ID, with information like the ad accounts and profiles the user has permissions for and what those permissions are

.PARAMETER PartnerType
Specifies whether to fetch internal or external (shared) partners. If partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br> If partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset.

.PARAMETER PartnerIds
A list of business partner ids separated by commas used to filter the results. Only partners with the specified ids will be returned.

.PARAMETER StartIndex
An index to start fetching the results from. Only the results starting from this index will be returned.

.PARAMETER PageSize
Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.

.PARAMETER Bookmark
Cursor used to fetch the next page of items

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

GetBusinessPartners200Response
#>
function Get-BusinessPartners {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Boolean]]
        ${AssetsSummary},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject]
        ${PartnerType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${PartnerIds},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${StartIndex},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Bookmark},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Get-BusinessPartners' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/partners'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling get_businessPartners."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if ($AssetsSummary) {
            $LocalVarQueryParameters['assets_summary'] = $AssetsSummary
        }

        if ($PartnerType) {
            $LocalVarQueryParameters['partner_type'] = $PartnerType
        }

        if ($PartnerIds) {
            $LocalVarQueryParameters['partner_ids'] = $PartnerIds
        }

        if ($StartIndex) {
            $LocalVarQueryParameters['start_index'] = $StartIndex
        }

        if ($PageSize) {
            $LocalVarQueryParameters['page_size'] = $PageSize
        }

        if ($Bookmark) {
            $LocalVarQueryParameters['bookmark'] = $Bookmark
        }


        $LocalVarResult = Invoke-ApiClient -Method 'GET' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "GetBusinessPartners200Response" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

<#
.SYNOPSIS

Update member's business role

.DESCRIPTION

No description available.

.PARAMETER BusinessId
Business id

.PARAMETER UpdateMemberBusinessRoleBody
List of objects with the member id and the business_role.

.PARAMETER WithHttpInfo

A switch when turned on will return a hash table of Response, StatusCode and Headers instead of just the Response

.OUTPUTS

UpdateMemberResultsResponseArray
#>
function Update-BusinessMemberships {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [PSCustomObject[]]
        ${UpdateMemberBusinessRoleBody},
        [Switch]
        $WithHttpInfo
    )

    Process {
        'Calling method: Update-BusinessMemberships' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @()
        $LocalVarContentTypes = @()
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}
        $LocalVarBodyParameter = $null

        $Configuration = Get-Configuration
        # HTTP header 'Accept' (if needed)
        $LocalVarAccepts = @('application/json')

        # HTTP header 'Content-Type'
        $LocalVarContentTypes = @('application/json')

        $LocalVarUri = '/businesses/{business_id}/members'
        if (!$BusinessId) {
            throw "Error! The required parameter `BusinessId` missing when calling update_businessMemberships."
        }
        $LocalVarUri = $LocalVarUri.replace('{business_id}', [System.Web.HTTPUtility]::UrlEncode($BusinessId))

        if (!$UpdateMemberBusinessRoleBody) {
            throw "Error! The required parameter `UpdateMemberBusinessRoleBody` missing when calling update_businessMemberships."
        }

        $LocalVarBodyParameter = ConvertTo-Json @($UpdateMemberBusinessRoleBody) -Depth 100


        $LocalVarResult = Invoke-ApiClient -Method 'PATCH' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameter `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "UpdateMemberResultsResponseArray" `
                                -IsBodyNullable $false

        if ($WithHttpInfo.IsPresent) {
            return $LocalVarResult
        } else {
            return $LocalVarResult["Response"]
        }
    }
}

