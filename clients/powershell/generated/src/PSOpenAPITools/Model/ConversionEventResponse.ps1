#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ConversionEvent
No description available.
.PARAMETER ConversionTagId
Id of the tag.
.PARAMETER AdAccountId
Id of the ad account.
.PARAMETER CreatedTime
Creation date in epoch format.
.OUTPUTS

ConversionEventResponse<PSCustomObject>
#>

function Initialize-ConversionEventResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PAGE_LOAD", "UNKNOWN", "INITIALIZED", "PAGE_VISIT", "SIGNUP", "CHECKOUT", "CUSTOM", "VIEW_CATEGORY", "SEARCH", "ADD_TO_CART", "WATCH_VIDEO", "LEAD", "APP_INSTALL", "WEB_SESSION", "EXTERNAL_MEASUREMENT")]
        [PSCustomObject]
        ${ConversionEvent},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${ConversionTagId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AdAccountId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CreatedTime}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ConversionEventResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "conversion_event" = ${ConversionEvent}
            "conversion_tag_id" = ${ConversionTagId}
            "ad_account_id" = ${AdAccountId}
            "created_time" = ${CreatedTime}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ConversionEventResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to ConversionEventResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ConversionEventResponse<PSCustomObject>
#>
function ConvertFrom-JsonToConversionEventResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ConversionEventResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ConversionEventResponse
        $AllProperties = ("conversion_event", "conversion_tag_id", "ad_account_id", "created_time")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "conversion_event"))) { #optional property not found
            $ConversionEvent = $null
        } else {
            $ConversionEvent = $JsonParameters.PSobject.Properties["conversion_event"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "conversion_tag_id"))) { #optional property not found
            $ConversionTagId = $null
        } else {
            $ConversionTagId = $JsonParameters.PSobject.Properties["conversion_tag_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_account_id"))) { #optional property not found
            $AdAccountId = $null
        } else {
            $AdAccountId = $JsonParameters.PSobject.Properties["ad_account_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created_time"))) { #optional property not found
            $CreatedTime = $null
        } else {
            $CreatedTime = $JsonParameters.PSobject.Properties["created_time"].value
        }

        $PSO = [PSCustomObject]@{
            "conversion_event" = ${ConversionEvent}
            "conversion_tag_id" = ${ConversionTagId}
            "ad_account_id" = ${AdAccountId}
            "created_time" = ${CreatedTime}
        }

        return $PSO
    }

}

