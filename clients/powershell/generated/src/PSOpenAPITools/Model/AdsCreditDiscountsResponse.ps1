#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Active
True if the offer code is currently active.
.PARAMETER AdvertiserId
Advertiser ID the offer was applied to.
.PARAMETER DiscountType
The type of discount of this credit
.PARAMETER DiscountInMicroCurrency
The discount applied in the offerâ€™s currency value.
.PARAMETER DiscountCurrency
Currency value for the discount.
.PARAMETER Title
Human readable title of the offer code.
.PARAMETER RemainingDiscountInMicroCurrency
The credits left to spend.
.OUTPUTS

AdsCreditDiscountsResponse<PSCustomObject>
#>

function Initialize-AdsCreditDiscountsResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Active},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AdvertiserId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("COUPON", "CREDIT", "COUPON_APPLIED", "CREDIT_APPLIED", "MARKETING_OFFER_CREDIT", "MARKETING_OFFER_CREDIT_APPLIED", "GOODWILL_CREDIT", "GOODWILL_CREDIT_APPLIED", "INTERNAL_CREDIT", "INTERNAL_CREDIT_APPLIED", "PREPAID_CREDIT", "PREPAID_CREDIT_APPLIED", "SALES_INCENTIVE_CREDIT", "SALES_INCENTIVE_CREDIT_APPLIED", "CREDIT_EXPIRED", "FUTURE_CREDIT", "REFERRAL_CREDIT", "INVOICE_SALES_INCENTIVE_CREDIT", "INVOICE_SALES_INCENTIVE_CREDIT_APPLIED", "PREPAID_CREDIT_REFUND", "")]
        [String]
        ${DiscountType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${DiscountInMicroCurrency},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountCurrency},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Title},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${RemainingDiscountInMicroCurrency}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdsCreditDiscountsResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "active" = ${Active}
            "advertiser_id" = ${AdvertiserId}
            "discountType" = ${DiscountType}
            "discountInMicroCurrency" = ${DiscountInMicroCurrency}
            "discountCurrency" = ${DiscountCurrency}
            "title" = ${Title}
            "remainingDiscountInMicroCurrency" = ${RemainingDiscountInMicroCurrency}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdsCreditDiscountsResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdsCreditDiscountsResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdsCreditDiscountsResponse<PSCustomObject>
#>
function ConvertFrom-JsonToAdsCreditDiscountsResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdsCreditDiscountsResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdsCreditDiscountsResponse
        $AllProperties = ("active", "advertiser_id", "discountType", "discountInMicroCurrency", "discountCurrency", "title", "remainingDiscountInMicroCurrency")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "active"))) { #optional property not found
            $Active = $null
        } else {
            $Active = $JsonParameters.PSobject.Properties["active"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "advertiser_id"))) { #optional property not found
            $AdvertiserId = $null
        } else {
            $AdvertiserId = $JsonParameters.PSobject.Properties["advertiser_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountType"))) { #optional property not found
            $DiscountType = $null
        } else {
            $DiscountType = $JsonParameters.PSobject.Properties["discountType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountInMicroCurrency"))) { #optional property not found
            $DiscountInMicroCurrency = $null
        } else {
            $DiscountInMicroCurrency = $JsonParameters.PSobject.Properties["discountInMicroCurrency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountCurrency"))) { #optional property not found
            $DiscountCurrency = $null
        } else {
            $DiscountCurrency = $JsonParameters.PSobject.Properties["discountCurrency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "title"))) { #optional property not found
            $Title = $null
        } else {
            $Title = $JsonParameters.PSobject.Properties["title"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remainingDiscountInMicroCurrency"))) { #optional property not found
            $RemainingDiscountInMicroCurrency = $null
        } else {
            $RemainingDiscountInMicroCurrency = $JsonParameters.PSobject.Properties["remainingDiscountInMicroCurrency"].value
        }

        $PSO = [PSCustomObject]@{
            "active" = ${Active}
            "advertiser_id" = ${AdvertiserId}
            "discountType" = ${DiscountType}
            "discountInMicroCurrency" = ${DiscountInMicroCurrency}
            "discountCurrency" = ${DiscountCurrency}
            "title" = ${Title}
            "remainingDiscountInMicroCurrency" = ${RemainingDiscountInMicroCurrency}
        }

        return $PSO
    }

}

