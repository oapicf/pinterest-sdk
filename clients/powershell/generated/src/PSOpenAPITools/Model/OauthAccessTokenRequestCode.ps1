#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A request to exchange an authorization code for an access token.

.PARAMETER GrantType
No description available.
.PARAMETER Code
No description available.
.PARAMETER RedirectUri
No description available.
.OUTPUTS

OauthAccessTokenRequestCode<PSCustomObject>
#>

function Initialize-OauthAccessTokenRequestCode {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("authorization_code", "refresh_token", "client_credentials")]
        [String]
        ${GrantType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Code},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RedirectUri}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => OauthAccessTokenRequestCode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $GrantType) {
            throw "invalid value for 'GrantType', 'GrantType' cannot be null."
        }

        if ($null -eq $Code) {
            throw "invalid value for 'Code', 'Code' cannot be null."
        }

        if ($null -eq $RedirectUri) {
            throw "invalid value for 'RedirectUri', 'RedirectUri' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "grant_type" = ${GrantType}
            "code" = ${Code}
            "redirect_uri" = ${RedirectUri}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OauthAccessTokenRequestCode<PSCustomObject>

.DESCRIPTION

Convert from JSON to OauthAccessTokenRequestCode<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OauthAccessTokenRequestCode<PSCustomObject>
#>
function ConvertFrom-JsonToOauthAccessTokenRequestCode {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => OauthAccessTokenRequestCode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OauthAccessTokenRequestCode
        $AllProperties = ("grant_type", "code", "redirect_uri")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'grant_type' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "grant_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'grant_type' missing."
        } else {
            $GrantType = $JsonParameters.PSobject.Properties["grant_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) {
            throw "Error! JSON cannot be serialized due to the required property 'code' missing."
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "redirect_uri"))) {
            throw "Error! JSON cannot be serialized due to the required property 'redirect_uri' missing."
        } else {
            $RedirectUri = $JsonParameters.PSobject.Properties["redirect_uri"].value
        }

        $PSO = [PSCustomObject]@{
            "grant_type" = ${GrantType}
            "code" = ${Code}
            "redirect_uri" = ${RedirectUri}
        }

        return $PSO
    }

}

