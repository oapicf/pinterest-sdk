#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Pin with video.

.PARAMETER MediaType
No description available.
.PARAMETER Images
No description available.
.PARAMETER CoverImageUrl
No description available.
.PARAMETER VideoUrl
Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
.PARAMETER Duration
Duration (in milliseconds)
.PARAMETER Height
Height (in pixels)
.PARAMETER Width
Width (in pixels)
.OUTPUTS

PinMediaWithVideo<PSCustomObject>
#>

function Initialize-PinMediaWithVideo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MediaType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Images},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CoverImageUrl},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VideoUrl},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Duration},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Height},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Width}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PinMediaWithVideo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "media_type" = ${MediaType}
            "images" = ${Images}
            "cover_image_url" = ${CoverImageUrl}
            "video_url" = ${VideoUrl}
            "duration" = ${Duration}
            "height" = ${Height}
            "width" = ${Width}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PinMediaWithVideo<PSCustomObject>

.DESCRIPTION

Convert from JSON to PinMediaWithVideo<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PinMediaWithVideo<PSCustomObject>
#>
function ConvertFrom-JsonToPinMediaWithVideo {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PinMediaWithVideo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PinMediaWithVideo
        $AllProperties = ("media_type", "images", "cover_image_url", "video_url", "duration", "height", "width")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "media_type"))) { #optional property not found
            $MediaType = $null
        } else {
            $MediaType = $JsonParameters.PSobject.Properties["media_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "images"))) { #optional property not found
            $Images = $null
        } else {
            $Images = $JsonParameters.PSobject.Properties["images"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cover_image_url"))) { #optional property not found
            $CoverImageUrl = $null
        } else {
            $CoverImageUrl = $JsonParameters.PSobject.Properties["cover_image_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "video_url"))) { #optional property not found
            $VideoUrl = $null
        } else {
            $VideoUrl = $JsonParameters.PSobject.Properties["video_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "duration"))) { #optional property not found
            $Duration = $null
        } else {
            $Duration = $JsonParameters.PSobject.Properties["duration"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "height"))) { #optional property not found
            $Height = $null
        } else {
            $Height = $JsonParameters.PSobject.Properties["height"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "width"))) { #optional property not found
            $Width = $null
        } else {
            $Width = $JsonParameters.PSobject.Properties["width"].value
        }

        $PSO = [PSCustomObject]@{
            "media_type" = ${MediaType}
            "images" = ${Images}
            "cover_image_url" = ${CoverImageUrl}
            "video_url" = ${VideoUrl}
            "duration" = ${Duration}
            "height" = ${Height}
            "width" = ${Width}
        }

        return $PSO
    }

}

