#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Status
Whether the event was processed successfully.
.PARAMETER ErrorMessage
Error message containing more information about why the event failed to be processed.
.PARAMETER WarningMessage
Warning messages about any fields in the event which are not standard. These are not critical to event processing.
.OUTPUTS

ConversionApiResponseEventsInner<PSCustomObject>
#>

function Initialize-ConversionApiResponseEventsInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("failed", "processed")]
        [String]
        ${Status},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ErrorMessage},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WarningMessage}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ConversionApiResponseEventsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Status) {
            throw "invalid value for 'Status', 'Status' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "status" = ${Status}
            "error_message" = ${ErrorMessage}
            "warning_message" = ${WarningMessage}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ConversionApiResponseEventsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to ConversionApiResponseEventsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ConversionApiResponseEventsInner<PSCustomObject>
#>
function ConvertFrom-JsonToConversionApiResponseEventsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ConversionApiResponseEventsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ConversionApiResponseEventsInner
        $AllProperties = ("status", "error_message", "warning_message")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'status' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) {
            throw "Error! JSON cannot be serialized due to the required property 'status' missing."
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "error_message"))) { #optional property not found
            $ErrorMessage = $null
        } else {
            $ErrorMessage = $JsonParameters.PSobject.Properties["error_message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "warning_message"))) { #optional property not found
            $WarningMessage = $null
        } else {
            $WarningMessage = $JsonParameters.PSobject.Properties["warning_message"].value
        }

        $PSO = [PSCustomObject]@{
            "status" = ${Status}
            "error_message" = ${ErrorMessage}
            "warning_message" = ${WarningMessage}
        }

        return $PSO
    }

}

