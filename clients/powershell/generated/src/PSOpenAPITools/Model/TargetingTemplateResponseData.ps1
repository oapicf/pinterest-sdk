#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
targeting template name
.PARAMETER AutoTargetingEnabled
Enable auto-targeting for ad group. Also known as <a href=""https://help.pinterest.com/en/business/article/expanded-targeting"" target=""_blank"">""expanded targeting""</a>.
.PARAMETER TargetingAttributes
No description available.
.PARAMETER PlacementGroup
No description available.
.PARAMETER Keywords
No description available.
.PARAMETER TrackingUrls
No description available.
.PARAMETER Id
Targeting template ID.
.PARAMETER CreatedTime
Targeting template created time. Unix timestamp in seconds.
.PARAMETER UpdatedTime
Targeting template updated time.Unix timestamp in seconds.
.PARAMETER AdAccountId
The ID of the advertiser that this targeting template belongs to.
.PARAMETER Status
Indicate targeting template is active or Deleted
.PARAMETER Sizing
No description available.
.OUTPUTS

TargetingTemplateResponseData<PSCustomObject>
#>

function Initialize-TargetingTemplateResponseData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AutoTargetingEnabled} = $true,
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TargetingAttributes},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ALL", "SEARCH", "BROWSE", "OTHER")]
        [PSCustomObject]
        ${PlacementGroup},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Keywords},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TrackingUrls},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CreatedTime},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${UpdatedTime},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AdAccountId},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ACTIVE", "DELETED")]
        [String]
        ${Status} = "ACTIVE",
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Sizing}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TargetingTemplateResponseData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "auto_targeting_enabled" = ${AutoTargetingEnabled}
            "targeting_attributes" = ${TargetingAttributes}
            "placement_group" = ${PlacementGroup}
            "keywords" = ${Keywords}
            "tracking_urls" = ${TrackingUrls}
            "id" = ${Id}
            "created_time" = ${CreatedTime}
            "updated_time" = ${UpdatedTime}
            "ad_account_id" = ${AdAccountId}
            "status" = ${Status}
            "sizing" = ${Sizing}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TargetingTemplateResponseData<PSCustomObject>

.DESCRIPTION

Convert from JSON to TargetingTemplateResponseData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TargetingTemplateResponseData<PSCustomObject>
#>
function ConvertFrom-JsonToTargetingTemplateResponseData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TargetingTemplateResponseData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TargetingTemplateResponseData
        $AllProperties = ("name", "auto_targeting_enabled", "targeting_attributes", "placement_group", "keywords", "tracking_urls", "id", "created_time", "updated_time", "ad_account_id", "status", "sizing")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "auto_targeting_enabled"))) { #optional property not found
            $AutoTargetingEnabled = $null
        } else {
            $AutoTargetingEnabled = $JsonParameters.PSobject.Properties["auto_targeting_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "targeting_attributes"))) { #optional property not found
            $TargetingAttributes = $null
        } else {
            $TargetingAttributes = $JsonParameters.PSobject.Properties["targeting_attributes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "placement_group"))) { #optional property not found
            $PlacementGroup = $null
        } else {
            $PlacementGroup = $JsonParameters.PSobject.Properties["placement_group"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywords"))) { #optional property not found
            $Keywords = $null
        } else {
            $Keywords = $JsonParameters.PSobject.Properties["keywords"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tracking_urls"))) { #optional property not found
            $TrackingUrls = $null
        } else {
            $TrackingUrls = $JsonParameters.PSobject.Properties["tracking_urls"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created_time"))) { #optional property not found
            $CreatedTime = $null
        } else {
            $CreatedTime = $JsonParameters.PSobject.Properties["created_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "updated_time"))) { #optional property not found
            $UpdatedTime = $null
        } else {
            $UpdatedTime = $JsonParameters.PSobject.Properties["updated_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_account_id"))) { #optional property not found
            $AdAccountId = $null
        } else {
            $AdAccountId = $JsonParameters.PSobject.Properties["ad_account_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sizing"))) { #optional property not found
            $Sizing = $null
        } else {
            $Sizing = $JsonParameters.PSobject.Properties["sizing"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "auto_targeting_enabled" = ${AutoTargetingEnabled}
            "targeting_attributes" = ${TargetingAttributes}
            "placement_group" = ${PlacementGroup}
            "keywords" = ${Keywords}
            "tracking_urls" = ${TrackingUrls}
            "id" = ${Id}
            "created_time" = ${CreatedTime}
            "updated_time" = ${UpdatedTime}
            "ad_account_id" = ${AdAccountId}
            "status" = ${Status}
            "sizing" = ${Sizing}
        }

        return $PSO
    }

}

