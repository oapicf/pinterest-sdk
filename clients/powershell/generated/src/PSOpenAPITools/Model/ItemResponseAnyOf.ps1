#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Json

JSON object

.OUTPUTS

ItemResponseAnyOf<PSCustomObject>
#>
function ConvertFrom-JsonToItemResponseAnyOf {
    [CmdletBinding()]
    Param (
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        $match = 0
        $matchType = $null
        $matchInstance = $null

        # try to match CatalogsCreativeAssetsItemResponse defined in the oneOf schemas
        try {
            $matchInstance = ConvertFrom-JsonToCatalogsCreativeAssetsItemResponse $Json

            foreach($property in $matchInstance.PsObject.Properties) {
                if ($null -ne $property.Value) {
                    $matchType = "CatalogsCreativeAssetsItemResponse"
                    $match++
                    break
                }
            }
        } catch {
            # fail to match the schema defined in oneOf, proceed to the next one
            Write-Debug "Failed to match 'CatalogsCreativeAssetsItemResponse' defined in oneOf (ItemResponseAnyOf). Proceeding to the next one if any."
        }

        # try to match CatalogsHotelItemResponse defined in the oneOf schemas
        try {
            $matchInstance = ConvertFrom-JsonToCatalogsHotelItemResponse $Json

            foreach($property in $matchInstance.PsObject.Properties) {
                if ($null -ne $property.Value) {
                    $matchType = "CatalogsHotelItemResponse"
                    $match++
                    break
                }
            }
        } catch {
            # fail to match the schema defined in oneOf, proceed to the next one
            Write-Debug "Failed to match 'CatalogsHotelItemResponse' defined in oneOf (ItemResponseAnyOf). Proceeding to the next one if any."
        }

        # try to match CatalogsRetailItemResponse defined in the oneOf schemas
        try {
            $matchInstance = ConvertFrom-JsonToCatalogsRetailItemResponse $Json

            foreach($property in $matchInstance.PsObject.Properties) {
                if ($null -ne $property.Value) {
                    $matchType = "CatalogsRetailItemResponse"
                    $match++
                    break
                }
            }
        } catch {
            # fail to match the schema defined in oneOf, proceed to the next one
            Write-Debug "Failed to match 'CatalogsRetailItemResponse' defined in oneOf (ItemResponseAnyOf). Proceeding to the next one if any."
        }

        if ($match -gt 1) {
            throw "Error! The JSON payload matches more than one type defined in oneOf schemas ([CatalogsCreativeAssetsItemResponse, CatalogsHotelItemResponse, CatalogsRetailItemResponse]). JSON Payload: $($Json)"
        } elseif ($match -eq 1) {
            return [PSCustomObject]@{
                "ActualType" = ${matchType}
                "ActualInstance" = ${matchInstance}
                "OneOfSchemas" = @("CatalogsCreativeAssetsItemResponse", "CatalogsHotelItemResponse", "CatalogsRetailItemResponse")
            }
        } else {
            throw "Error! The JSON payload doesn't matches any type defined in oneOf schemas ([CatalogsCreativeAssetsItemResponse, CatalogsHotelItemResponse, CatalogsRetailItemResponse]). JSON Payload: $($Json)"
        }
    }
}

