#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER StartDate
Starting date of time period. Format: YYYY-MM-DD
.PARAMETER EndDate
End date of time period. Format: YYYY-MM-DD
.PARAMETER PoNumber
The po number
.PARAMETER BudgetAmount
If Budget order line, the budget amount.
.PARAMETER BillingContactFirstname
The billing contact first name
.PARAMETER BillingContactLastname
The billing contact last name
.PARAMETER BillingContactEmail
The billing contact email
.PARAMETER MediaContactFirstname
The media contact first name
.PARAMETER MediaContactLastname
The media contact last name
.PARAMETER MediaContactEmail
The media contact email
.PARAMETER AgencyLink
URL link for agency
.PARAMETER UserEmail
The email of user submitting the insertion order
.PARAMETER AcceptedTermsTime
The UTC timestamp (to the nearest sec) of when terms were accepted
.PARAMETER PmpId
The pmp id
.PARAMETER OrderName
The order name
.PARAMETER OrderLineType
Type can be Budget or Perpetual
.PARAMETER AcceptedTermsId
The SFDC id for the terms
.PARAMETER BilltoCompanyId
The bill-to company id
.PARAMETER BilltoBusinessAddressId
The bill-to business address id
.PARAMETER BilltoBillingAddressId
The bill-to billing address id
.PARAMETER EstimatedMonthlySpend
If Ongoing (perpetual) order line, the estimated monthly spend
.PARAMETER CurrencyInfo
No description available.
.OUTPUTS

SSIOCreateInsertionOrderRequest<PSCustomObject>
#>

function Initialize-SSIOCreateInsertionOrderRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^(\d{4})-(\d{2})-(\d{2})$")]
        [String]
        ${StartDate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^(\d{4})-(\d{2})-(\d{2})$")]
        [String]
        ${EndDate},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PoNumber},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${BudgetAmount},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingContactFirstname},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingContactLastname},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingContactEmail},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MediaContactFirstname},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MediaContactLastname},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MediaContactEmail},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AgencyLink},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UserEmail},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${AcceptedTermsTime},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PmpId},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OrderName},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("BUDGET", "PERPETUALS")]
        [String]
        ${OrderLineType},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AcceptedTermsId},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BilltoCompanyId},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BilltoBusinessAddressId},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BilltoBillingAddressId},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${EstimatedMonthlySpend},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("UNK", "USD", "GBP", "CAD", "EUR", "AUD", "NZD", "SEK", "ILS", "CHF", "HKD", "JPY", "SGD", "KRW", "NOK", "DKK", "PLN", "RON", "HUF", "CZK", "BRL", "MXN", "ARS", "CLP", "COP", "INR", "TRY")]
        [PSCustomObject]
        ${CurrencyInfo}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SSIOCreateInsertionOrderRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $StartDate) {
            throw "invalid value for 'StartDate', 'StartDate' cannot be null."
        }

        if ($null -eq $PoNumber) {
            throw "invalid value for 'PoNumber', 'PoNumber' cannot be null."
        }

        if ($null -eq $BillingContactFirstname) {
            throw "invalid value for 'BillingContactFirstname', 'BillingContactFirstname' cannot be null."
        }

        if ($null -eq $BillingContactLastname) {
            throw "invalid value for 'BillingContactLastname', 'BillingContactLastname' cannot be null."
        }

        if ($null -eq $BillingContactEmail) {
            throw "invalid value for 'BillingContactEmail', 'BillingContactEmail' cannot be null."
        }

        if ($null -eq $MediaContactFirstname) {
            throw "invalid value for 'MediaContactFirstname', 'MediaContactFirstname' cannot be null."
        }

        if ($null -eq $MediaContactLastname) {
            throw "invalid value for 'MediaContactLastname', 'MediaContactLastname' cannot be null."
        }

        if ($null -eq $MediaContactEmail) {
            throw "invalid value for 'MediaContactEmail', 'MediaContactEmail' cannot be null."
        }

        if ($null -eq $PmpId) {
            throw "invalid value for 'PmpId', 'PmpId' cannot be null."
        }

        if ($null -eq $OrderName) {
            throw "invalid value for 'OrderName', 'OrderName' cannot be null."
        }

        if ($null -eq $OrderLineType) {
            throw "invalid value for 'OrderLineType', 'OrderLineType' cannot be null."
        }

        if ($null -eq $AcceptedTermsId) {
            throw "invalid value for 'AcceptedTermsId', 'AcceptedTermsId' cannot be null."
        }

        if ($null -eq $BilltoCompanyId) {
            throw "invalid value for 'BilltoCompanyId', 'BilltoCompanyId' cannot be null."
        }

        if ($null -eq $BilltoBusinessAddressId) {
            throw "invalid value for 'BilltoBusinessAddressId', 'BilltoBusinessAddressId' cannot be null."
        }

        if ($null -eq $BilltoBillingAddressId) {
            throw "invalid value for 'BilltoBillingAddressId', 'BilltoBillingAddressId' cannot be null."
        }

        if ($null -eq $CurrencyInfo) {
            throw "invalid value for 'CurrencyInfo', 'CurrencyInfo' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "start_date" = ${StartDate}
            "end_date" = ${EndDate}
            "po_number" = ${PoNumber}
            "budget_amount" = ${BudgetAmount}
            "billing_contact_firstname" = ${BillingContactFirstname}
            "billing_contact_lastname" = ${BillingContactLastname}
            "billing_contact_email" = ${BillingContactEmail}
            "media_contact_firstname" = ${MediaContactFirstname}
            "media_contact_lastname" = ${MediaContactLastname}
            "media_contact_email" = ${MediaContactEmail}
            "agency_link" = ${AgencyLink}
            "user_email" = ${UserEmail}
            "accepted_terms_time" = ${AcceptedTermsTime}
            "pmp_id" = ${PmpId}
            "order_name" = ${OrderName}
            "order_line_type" = ${OrderLineType}
            "accepted_terms_id" = ${AcceptedTermsId}
            "billto_company_id" = ${BilltoCompanyId}
            "billto_business_address_id" = ${BilltoBusinessAddressId}
            "billto_billing_address_id" = ${BilltoBillingAddressId}
            "estimated_monthly_spend" = ${EstimatedMonthlySpend}
            "currency_info" = ${CurrencyInfo}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SSIOCreateInsertionOrderRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to SSIOCreateInsertionOrderRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SSIOCreateInsertionOrderRequest<PSCustomObject>
#>
function ConvertFrom-JsonToSSIOCreateInsertionOrderRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SSIOCreateInsertionOrderRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SSIOCreateInsertionOrderRequest
        $AllProperties = ("start_date", "end_date", "po_number", "budget_amount", "billing_contact_firstname", "billing_contact_lastname", "billing_contact_email", "media_contact_firstname", "media_contact_lastname", "media_contact_email", "agency_link", "user_email", "accepted_terms_time", "pmp_id", "order_name", "order_line_type", "accepted_terms_id", "billto_company_id", "billto_business_address_id", "billto_billing_address_id", "estimated_monthly_spend", "currency_info")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'start_date' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "start_date"))) {
            throw "Error! JSON cannot be serialized due to the required property 'start_date' missing."
        } else {
            $StartDate = $JsonParameters.PSobject.Properties["start_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "po_number"))) {
            throw "Error! JSON cannot be serialized due to the required property 'po_number' missing."
        } else {
            $PoNumber = $JsonParameters.PSobject.Properties["po_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billing_contact_firstname"))) {
            throw "Error! JSON cannot be serialized due to the required property 'billing_contact_firstname' missing."
        } else {
            $BillingContactFirstname = $JsonParameters.PSobject.Properties["billing_contact_firstname"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billing_contact_lastname"))) {
            throw "Error! JSON cannot be serialized due to the required property 'billing_contact_lastname' missing."
        } else {
            $BillingContactLastname = $JsonParameters.PSobject.Properties["billing_contact_lastname"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billing_contact_email"))) {
            throw "Error! JSON cannot be serialized due to the required property 'billing_contact_email' missing."
        } else {
            $BillingContactEmail = $JsonParameters.PSobject.Properties["billing_contact_email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "media_contact_firstname"))) {
            throw "Error! JSON cannot be serialized due to the required property 'media_contact_firstname' missing."
        } else {
            $MediaContactFirstname = $JsonParameters.PSobject.Properties["media_contact_firstname"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "media_contact_lastname"))) {
            throw "Error! JSON cannot be serialized due to the required property 'media_contact_lastname' missing."
        } else {
            $MediaContactLastname = $JsonParameters.PSobject.Properties["media_contact_lastname"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "media_contact_email"))) {
            throw "Error! JSON cannot be serialized due to the required property 'media_contact_email' missing."
        } else {
            $MediaContactEmail = $JsonParameters.PSobject.Properties["media_contact_email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pmp_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'pmp_id' missing."
        } else {
            $PmpId = $JsonParameters.PSobject.Properties["pmp_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "order_name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'order_name' missing."
        } else {
            $OrderName = $JsonParameters.PSobject.Properties["order_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "order_line_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'order_line_type' missing."
        } else {
            $OrderLineType = $JsonParameters.PSobject.Properties["order_line_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accepted_terms_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'accepted_terms_id' missing."
        } else {
            $AcceptedTermsId = $JsonParameters.PSobject.Properties["accepted_terms_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billto_company_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'billto_company_id' missing."
        } else {
            $BilltoCompanyId = $JsonParameters.PSobject.Properties["billto_company_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billto_business_address_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'billto_business_address_id' missing."
        } else {
            $BilltoBusinessAddressId = $JsonParameters.PSobject.Properties["billto_business_address_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billto_billing_address_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'billto_billing_address_id' missing."
        } else {
            $BilltoBillingAddressId = $JsonParameters.PSobject.Properties["billto_billing_address_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currency_info"))) {
            throw "Error! JSON cannot be serialized due to the required property 'currency_info' missing."
        } else {
            $CurrencyInfo = $JsonParameters.PSobject.Properties["currency_info"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "end_date"))) { #optional property not found
            $EndDate = $null
        } else {
            $EndDate = $JsonParameters.PSobject.Properties["end_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "budget_amount"))) { #optional property not found
            $BudgetAmount = $null
        } else {
            $BudgetAmount = $JsonParameters.PSobject.Properties["budget_amount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "agency_link"))) { #optional property not found
            $AgencyLink = $null
        } else {
            $AgencyLink = $JsonParameters.PSobject.Properties["agency_link"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "user_email"))) { #optional property not found
            $UserEmail = $null
        } else {
            $UserEmail = $JsonParameters.PSobject.Properties["user_email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accepted_terms_time"))) { #optional property not found
            $AcceptedTermsTime = $null
        } else {
            $AcceptedTermsTime = $JsonParameters.PSobject.Properties["accepted_terms_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "estimated_monthly_spend"))) { #optional property not found
            $EstimatedMonthlySpend = $null
        } else {
            $EstimatedMonthlySpend = $JsonParameters.PSobject.Properties["estimated_monthly_spend"].value
        }

        $PSO = [PSCustomObject]@{
            "start_date" = ${StartDate}
            "end_date" = ${EndDate}
            "po_number" = ${PoNumber}
            "budget_amount" = ${BudgetAmount}
            "billing_contact_firstname" = ${BillingContactFirstname}
            "billing_contact_lastname" = ${BillingContactLastname}
            "billing_contact_email" = ${BillingContactEmail}
            "media_contact_firstname" = ${MediaContactFirstname}
            "media_contact_lastname" = ${MediaContactLastname}
            "media_contact_email" = ${MediaContactEmail}
            "agency_link" = ${AgencyLink}
            "user_email" = ${UserEmail}
            "accepted_terms_time" = ${AcceptedTermsTime}
            "pmp_id" = ${PmpId}
            "order_name" = ${OrderName}
            "order_line_type" = ${OrderLineType}
            "accepted_terms_id" = ${AcceptedTermsId}
            "billto_company_id" = ${BilltoCompanyId}
            "billto_business_address_id" = ${BilltoBusinessAddressId}
            "billto_billing_address_id" = ${BilltoBillingAddressId}
            "estimated_monthly_spend" = ${EstimatedMonthlySpend}
            "currency_info" = ${CurrencyInfo}
        }

        return $PSO
    }

}

