#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AutoTargetingEnabled
Enable auto-targeting for ad group. Also known as <a href=""https://help.pinterest.com/en/business/article/expanded-targeting"" target=""_blank"">""expanded targeting""</a>.
.PARAMETER PlacementGroup
<a href=""/docs/redoc/#section/Placement-group"">Placement group</a>.
.PARAMETER CreativeTypes
Pin creative types filter. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead.
.PARAMETER TargetingSpec
No description available.
.PARAMETER ProductGroupIds
Targeted product group IDs. </p><strong>Note:</strong> This can only be combined with shopping/catalog sales campaigns. For more information, <a href=""https://help.pinterest.com/en/business/article/shopping-ads#section-14571"" target=""_blank"">click here</a>. SHOPPING_RETARGETING must be included in targeting_spec object or this field will be ignored.
.PARAMETER Keywords
Array of keyword objects. If the keywords field is missing, all keywords will be targeted.
.OUTPUTS

AdGroupAudienceSizingRequest<PSCustomObject>
#>

function Initialize-AdGroupAudienceSizingRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AutoTargetingEnabled} = $true,
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ALL", "SEARCH", "BROWSE", "OTHER")]
        [PSCustomObject]
        ${PlacementGroup} = "ALL",
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("REGULAR", "VIDEO", "SHOPPING", "CAROUSEL", "MAX_VIDEO", "SHOP_THE_PIN", "COLLECTION", "IDEA")]
        [String[]]
        ${CreativeTypes},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TargetingSpec},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${ProductGroupIds},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Keywords}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdGroupAudienceSizingRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "auto_targeting_enabled" = ${AutoTargetingEnabled}
            "placement_group" = ${PlacementGroup}
            "creative_types" = ${CreativeTypes}
            "targeting_spec" = ${TargetingSpec}
            "product_group_ids" = ${ProductGroupIds}
            "keywords" = ${Keywords}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdGroupAudienceSizingRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdGroupAudienceSizingRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdGroupAudienceSizingRequest<PSCustomObject>
#>
function ConvertFrom-JsonToAdGroupAudienceSizingRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdGroupAudienceSizingRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdGroupAudienceSizingRequest
        $AllProperties = ("auto_targeting_enabled", "placement_group", "creative_types", "targeting_spec", "product_group_ids", "keywords")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "auto_targeting_enabled"))) { #optional property not found
            $AutoTargetingEnabled = $null
        } else {
            $AutoTargetingEnabled = $JsonParameters.PSobject.Properties["auto_targeting_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "placement_group"))) { #optional property not found
            $PlacementGroup = $null
        } else {
            $PlacementGroup = $JsonParameters.PSobject.Properties["placement_group"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creative_types"))) { #optional property not found
            $CreativeTypes = $null
        } else {
            $CreativeTypes = $JsonParameters.PSobject.Properties["creative_types"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "targeting_spec"))) { #optional property not found
            $TargetingSpec = $null
        } else {
            $TargetingSpec = $JsonParameters.PSobject.Properties["targeting_spec"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_group_ids"))) { #optional property not found
            $ProductGroupIds = $null
        } else {
            $ProductGroupIds = $JsonParameters.PSobject.Properties["product_group_ids"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywords"))) { #optional property not found
            $Keywords = $null
        } else {
            $Keywords = $JsonParameters.PSobject.Properties["keywords"].value
        }

        $PSO = [PSCustomObject]@{
            "auto_targeting_enabled" = ${AutoTargetingEnabled}
            "placement_group" = ${PlacementGroup}
            "creative_types" = ${CreativeTypes}
            "targeting_spec" = ${TargetingSpec}
            "product_group_ids" = ${ProductGroupIds}
            "keywords" = ${Keywords}
        }

        return $PSO
    }

}

