#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AccountId
Account ID (ad account or business ID).
.PARAMETER AccountName
Account name.
.PARAMETER AccountType
account type
.PARAMETER SharedOnTimestamp
Epoch timestamp in seconds for the shared audience event
.OUTPUTS

SharedAudienceAccount<PSCustomObject>
#>

function Initialize-SharedAudienceAccount {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AccountId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AccountName},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("AD_ACCOUNT", "BUSINESS_ACCOUNT")]
        [String]
        ${AccountType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${SharedOnTimestamp}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SharedAudienceAccount' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $AccountId) {
            throw "invalid value for 'AccountId', 'AccountId' cannot be null."
        }

        if ($null -eq $AccountName) {
            throw "invalid value for 'AccountName', 'AccountName' cannot be null."
        }

        if ($null -eq $AccountType) {
            throw "invalid value for 'AccountType', 'AccountType' cannot be null."
        }

        if ($null -eq $SharedOnTimestamp) {
            throw "invalid value for 'SharedOnTimestamp', 'SharedOnTimestamp' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "account_id" = ${AccountId}
            "account_name" = ${AccountName}
            "account_type" = ${AccountType}
            "shared_on_timestamp" = ${SharedOnTimestamp}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SharedAudienceAccount<PSCustomObject>

.DESCRIPTION

Convert from JSON to SharedAudienceAccount<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SharedAudienceAccount<PSCustomObject>
#>
function ConvertFrom-JsonToSharedAudienceAccount {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SharedAudienceAccount' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SharedAudienceAccount
        $AllProperties = ("account_id", "account_name", "account_type", "shared_on_timestamp")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'account_id' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "account_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'account_id' missing."
        } else {
            $AccountId = $JsonParameters.PSobject.Properties["account_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "account_name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'account_name' missing."
        } else {
            $AccountName = $JsonParameters.PSobject.Properties["account_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "account_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'account_type' missing."
        } else {
            $AccountType = $JsonParameters.PSobject.Properties["account_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "shared_on_timestamp"))) {
            throw "Error! JSON cannot be serialized due to the required property 'shared_on_timestamp' missing."
        } else {
            $SharedOnTimestamp = $JsonParameters.PSobject.Properties["shared_on_timestamp"].value
        }

        $PSO = [PSCustomObject]@{
            "account_id" = ${AccountId}
            "account_name" = ${AccountName}
            "account_type" = ${AccountType}
            "shared_on_timestamp" = ${SharedOnTimestamp}
        }

        return $PSO
    }

}

