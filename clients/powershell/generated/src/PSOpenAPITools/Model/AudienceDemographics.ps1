#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Audience demographics

.PARAMETER Ages
Ages distribution.
.PARAMETER Genders
Gender distribution.
.PARAMETER Devices
Device usage distribution.
.PARAMETER Metros
Geographic metro area distribution.
.PARAMETER Countries
Country area distribution.
.OUTPUTS

AudienceDemographics<PSCustomObject>
#>

function Initialize-AudienceDemographics {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Ages},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Genders},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Devices},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Metros},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Countries}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AudienceDemographics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "ages" = ${Ages}
            "genders" = ${Genders}
            "devices" = ${Devices}
            "metros" = ${Metros}
            "countries" = ${Countries}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AudienceDemographics<PSCustomObject>

.DESCRIPTION

Convert from JSON to AudienceDemographics<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AudienceDemographics<PSCustomObject>
#>
function ConvertFrom-JsonToAudienceDemographics {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AudienceDemographics' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AudienceDemographics
        $AllProperties = ("ages", "genders", "devices", "metros", "countries")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ages"))) { #optional property not found
            $Ages = $null
        } else {
            $Ages = $JsonParameters.PSobject.Properties["ages"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "genders"))) { #optional property not found
            $Genders = $null
        } else {
            $Genders = $JsonParameters.PSobject.Properties["genders"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "devices"))) { #optional property not found
            $Devices = $null
        } else {
            $Devices = $JsonParameters.PSobject.Properties["devices"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "metros"))) { #optional property not found
            $Metros = $null
        } else {
            $Metros = $JsonParameters.PSobject.Properties["metros"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "countries"))) { #optional property not found
            $Countries = $null
        } else {
            $Countries = $JsonParameters.PSobject.Properties["countries"].value
        }

        $PSO = [PSCustomObject]@{
            "ages" = ${Ages}
            "genders" = ${Genders}
            "devices" = ${Devices}
            "metros" = ${Metros}
            "countries" = ${Countries}
        }

        return $PSO
    }

}

