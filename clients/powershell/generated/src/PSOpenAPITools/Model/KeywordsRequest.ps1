#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Keywords
Keyword JSON array. Each array element has 3 fields
.PARAMETER ParentId
Keyword parent entity ID (advertiser, campaign, ad group).
.OUTPUTS

KeywordsRequest<PSCustomObject>
#>

function Initialize-KeywordsRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Keywords},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^((AG)|C)?\d+$")]
        [String]
        ${ParentId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => KeywordsRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Keywords) {
            throw "invalid value for 'Keywords', 'Keywords' cannot be null."
        }

        if ($null -eq $ParentId) {
            throw "invalid value for 'ParentId', 'ParentId' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "keywords" = ${Keywords}
            "parent_id" = ${ParentId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to KeywordsRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to KeywordsRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

KeywordsRequest<PSCustomObject>
#>
function ConvertFrom-JsonToKeywordsRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => KeywordsRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in KeywordsRequest
        $AllProperties = ("keywords", "parent_id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'keywords' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywords"))) {
            throw "Error! JSON cannot be serialized due to the required property 'keywords' missing."
        } else {
            $Keywords = $JsonParameters.PSobject.Properties["keywords"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parent_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'parent_id' missing."
        } else {
            $ParentId = $JsonParameters.PSobject.Properties["parent_id"].value
        }

        $PSO = [PSCustomObject]@{
            "keywords" = ${Keywords}
            "parent_id" = ${ParentId}
        }

        return $PSO
    }

}

