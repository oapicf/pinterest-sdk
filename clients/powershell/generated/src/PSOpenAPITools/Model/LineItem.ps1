#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ProductBrand
Product brand. For example, ""Parker"".
.PARAMETER ProductCategory
Product category. For example, ""Shoes"".
.PARAMETER ProductId
Product ID. For example, 1414.
.PARAMETER ProductName
Product name. For example, ""Parker Boots"".
.PARAMETER ProductPrice
Product price. For example, ""99.99"".
.PARAMETER ProductQuantity
Product quantity. For example, 2.
.PARAMETER ProductVariant
Product variant. For example, ""Red"".
.PARAMETER ProductVariantId
Product variant ID. For example, ""1414-34832"".
.OUTPUTS

LineItem<PSCustomObject>
#>

function Initialize-LineItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProductBrand},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProductCategory},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ProductId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProductName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProductPrice},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ProductQuantity},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProductVariant},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProductVariantId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => LineItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "product_brand" = ${ProductBrand}
            "product_category" = ${ProductCategory}
            "product_id" = ${ProductId}
            "product_name" = ${ProductName}
            "product_price" = ${ProductPrice}
            "product_quantity" = ${ProductQuantity}
            "product_variant" = ${ProductVariant}
            "product_variant_id" = ${ProductVariantId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to LineItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to LineItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

LineItem<PSCustomObject>
#>
function ConvertFrom-JsonToLineItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => LineItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in LineItem
        $AllProperties = ("product_brand", "product_category", "product_id", "product_name", "product_price", "product_quantity", "product_variant", "product_variant_id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_brand"))) { #optional property not found
            $ProductBrand = $null
        } else {
            $ProductBrand = $JsonParameters.PSobject.Properties["product_brand"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_category"))) { #optional property not found
            $ProductCategory = $null
        } else {
            $ProductCategory = $JsonParameters.PSobject.Properties["product_category"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_id"))) { #optional property not found
            $ProductId = $null
        } else {
            $ProductId = $JsonParameters.PSobject.Properties["product_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_name"))) { #optional property not found
            $ProductName = $null
        } else {
            $ProductName = $JsonParameters.PSobject.Properties["product_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_price"))) { #optional property not found
            $ProductPrice = $null
        } else {
            $ProductPrice = $JsonParameters.PSobject.Properties["product_price"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_quantity"))) { #optional property not found
            $ProductQuantity = $null
        } else {
            $ProductQuantity = $JsonParameters.PSobject.Properties["product_quantity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_variant"))) { #optional property not found
            $ProductVariant = $null
        } else {
            $ProductVariant = $JsonParameters.PSobject.Properties["product_variant"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "product_variant_id"))) { #optional property not found
            $ProductVariantId = $null
        } else {
            $ProductVariantId = $JsonParameters.PSobject.Properties["product_variant_id"].value
        }

        $PSO = [PSCustomObject]@{
            "product_brand" = ${ProductBrand}
            "product_category" = ${ProductCategory}
            "product_id" = ${ProductId}
            "product_name" = ${ProductName}
            "product_price" = ${ProductPrice}
            "product_quantity" = ${ProductQuantity}
            "product_variant" = ${ProductVariant}
            "product_variant_id" = ${ProductVariantId}
        }

        return $PSO
    }

}

