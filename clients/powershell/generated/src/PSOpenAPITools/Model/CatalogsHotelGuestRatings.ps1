#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

If specified, you must provide all properties

.PARAMETER Score
Your hotel's rating.
.PARAMETER NumberOfReviewers
Total number of people who have rated this hotel.
.PARAMETER MaxScore
Max value for the hotel rating score.
.PARAMETER RatingSystem
System you use for guest reviews.
.OUTPUTS

CatalogsHotelGuestRatings<PSCustomObject>
#>

function Initialize-CatalogsHotelGuestRatings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Score},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${NumberOfReviewers},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${MaxScore},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RatingSystem}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsHotelGuestRatings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "score" = ${Score}
            "number_of_reviewers" = ${NumberOfReviewers}
            "max_score" = ${MaxScore}
            "rating_system" = ${RatingSystem}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsHotelGuestRatings<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsHotelGuestRatings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsHotelGuestRatings<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsHotelGuestRatings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsHotelGuestRatings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsHotelGuestRatings
        $AllProperties = ("score", "number_of_reviewers", "max_score", "rating_system")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "score"))) { #optional property not found
            $Score = $null
        } else {
            $Score = $JsonParameters.PSobject.Properties["score"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "number_of_reviewers"))) { #optional property not found
            $NumberOfReviewers = $null
        } else {
            $NumberOfReviewers = $JsonParameters.PSobject.Properties["number_of_reviewers"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "max_score"))) { #optional property not found
            $MaxScore = $null
        } else {
            $MaxScore = $JsonParameters.PSobject.Properties["max_score"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "rating_system"))) { #optional property not found
            $RatingSystem = $null
        } else {
            $RatingSystem = $JsonParameters.PSobject.Properties["rating_system"].value
        }

        $PSO = [PSCustomObject]@{
            "score" = ${Score}
            "number_of_reviewers" = ${NumberOfReviewers}
            "max_score" = ${MaxScore}
            "rating_system" = ${RatingSystem}
        }

        return $PSO
    }

}

