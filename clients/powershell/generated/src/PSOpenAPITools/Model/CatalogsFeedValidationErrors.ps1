#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER FETCHERROR
Pinterest couldn't download your feed.
.PARAMETER FETCHINACTIVEFEEDERROR
Your feed wasn't ingested because it hasnâ€™t changed in the previous 90 days.
.PARAMETER ENCODINGERROR
Your feed includes data with an unsupported encoding format.
.PARAMETER DELIMITERERROR
Your feed includes data with formatting errors.
.PARAMETER REQUIREDCOLUMNSMISSING
Your feed is missing some required column headers.
.PARAMETER DUPLICATEPRODUCTS
Some products are duplicated.
.PARAMETER IMAGELINKINVALID
Some image links are formatted incorrectly.
.PARAMETER ITEMIDMISSING
Some items are missing an item id in their product metadata, those items will not be published.
.PARAMETER TITLEMISSING
Some items are missing a title in their product metadata, those items will not be published.
.PARAMETER DESCRIPTIONMISSING
Some items are missing a description in their product metadata, those items will not be published.
.PARAMETER PRODUCTLINKMISSING
Some items are missing a link URL in their product metadata, those items will not be published.
.PARAMETER IMAGELINKMISSING
Some items are missing an image link URL in their product metadata, those items will not be published.
.PARAMETER AVAILABILITYINVALID
Some items are missing an availability value in their product metadata, those items will not be published.
.PARAMETER PRODUCTPRICEINVALID
Some items have price formatting errors in their product metadata, those items will not be published.
.PARAMETER LINKFORMATINVALID
Some link values are formatted incorrectly.
.PARAMETER PARSELINEERROR
Your feed contains formatting errors for some items.
.PARAMETER ADWORDSFORMATINVALID
Some adwords links contain too many characters.
.PARAMETER INTERNALSERVICEERROR
We experienced a technical difficulty and were unable to ingest your feed. The next ingestion will happen in 24 hours.
.PARAMETER NOVERIFIEDDOMAIN
Your merchant domain needs to be claimed.
.PARAMETER ADULTINVALID
Some items have invalid adult values.
.PARAMETER IMAGELINKLENGTHTOOLONG
Some items have image_link URLs that contain too many characters, so those items will not be published.
.PARAMETER INVALIDDOMAIN
Some of your product link values don't match the verified domain associated with this account.
.PARAMETER FEEDLENGTHTOOLONG
Your feed contains too many items, some items will not be published.
.PARAMETER LINKLENGTHTOOLONG
Some product links contain too many characters, those items will not be published.
.PARAMETER MALFORMEDXML
Your feed couldn't be validated because the xml file is formatted incorrectly.
.PARAMETER PRICEMISSING
Some products are missing a price, those items will not be published.
.PARAMETER FEEDTOOSMALL
Your feed couldn't be validated because the file doesn't contain the minimum number of lines required.
.PARAMETER MAXITEMSPERITEMGROUPEXCEEDED
Some items exceed the maximum number of items per item group, those items will not be published.
.PARAMETER ITEMMAINIMAGEDOWNLOADFAILURE
Some items' main images can't be found.
.PARAMETER PINJOINCONTENTUNSAFE
Some items were not published because they don't meet Pinterest's Merchant Guidelines.
.PARAMETER BLOCKLISTEDIMAGESIGNATURE
Some items were not published because they don't meet Pinterest's Merchant Guidelines.
.PARAMETER LISTPRICEINVALID
Some items have list price formatting errors in their product metadata, those items will not be published.
.PARAMETER PRICECANNOTBEDETERMINED
Some items were not published because price cannot be determined. The price, list price, and sale price are all different, so those items will not be published.
.OUTPUTS

CatalogsFeedValidationErrors<PSCustomObject>
#>

function Initialize-CatalogsFeedValidationErrors {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FETCHERROR},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FETCHINACTIVEFEEDERROR},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ENCODINGERROR},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${DELIMITERERROR},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${REQUIREDCOLUMNSMISSING},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${DUPLICATEPRODUCTS},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${IMAGELINKINVALID},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ITEMIDMISSING},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${TITLEMISSING},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${DESCRIPTIONMISSING},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PRODUCTLINKMISSING},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${IMAGELINKMISSING},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${AVAILABILITYINVALID},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PRODUCTPRICEINVALID},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LINKFORMATINVALID},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PARSELINEERROR},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ADWORDSFORMATINVALID},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${INTERNALSERVICEERROR},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${NOVERIFIEDDOMAIN},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ADULTINVALID},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${IMAGELINKLENGTHTOOLONG},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${INVALIDDOMAIN},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FEEDLENGTHTOOLONG},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LINKLENGTHTOOLONG},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MALFORMEDXML},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PRICEMISSING},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FEEDTOOSMALL},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MAXITEMSPERITEMGROUPEXCEEDED},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ITEMMAINIMAGEDOWNLOADFAILURE},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PINJOINCONTENTUNSAFE},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${BLOCKLISTEDIMAGESIGNATURE},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LISTPRICEINVALID},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PRICECANNOTBEDETERMINED}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsFeedValidationErrors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "FETCH_ERROR" = ${FETCHERROR}
            "FETCH_INACTIVE_FEED_ERROR" = ${FETCHINACTIVEFEEDERROR}
            "ENCODING_ERROR" = ${ENCODINGERROR}
            "DELIMITER_ERROR" = ${DELIMITERERROR}
            "REQUIRED_COLUMNS_MISSING" = ${REQUIREDCOLUMNSMISSING}
            "DUPLICATE_PRODUCTS" = ${DUPLICATEPRODUCTS}
            "IMAGE_LINK_INVALID" = ${IMAGELINKINVALID}
            "ITEMID_MISSING" = ${ITEMIDMISSING}
            "TITLE_MISSING" = ${TITLEMISSING}
            "DESCRIPTION_MISSING" = ${DESCRIPTIONMISSING}
            "PRODUCT_LINK_MISSING" = ${PRODUCTLINKMISSING}
            "IMAGE_LINK_MISSING" = ${IMAGELINKMISSING}
            "AVAILABILITY_INVALID" = ${AVAILABILITYINVALID}
            "PRODUCT_PRICE_INVALID" = ${PRODUCTPRICEINVALID}
            "LINK_FORMAT_INVALID" = ${LINKFORMATINVALID}
            "PARSE_LINE_ERROR" = ${PARSELINEERROR}
            "ADWORDS_FORMAT_INVALID" = ${ADWORDSFORMATINVALID}
            "INTERNAL_SERVICE_ERROR" = ${INTERNALSERVICEERROR}
            "NO_VERIFIED_DOMAIN" = ${NOVERIFIEDDOMAIN}
            "ADULT_INVALID" = ${ADULTINVALID}
            "IMAGE_LINK_LENGTH_TOO_LONG" = ${IMAGELINKLENGTHTOOLONG}
            "INVALID_DOMAIN" = ${INVALIDDOMAIN}
            "FEED_LENGTH_TOO_LONG" = ${FEEDLENGTHTOOLONG}
            "LINK_LENGTH_TOO_LONG" = ${LINKLENGTHTOOLONG}
            "MALFORMED_XML" = ${MALFORMEDXML}
            "PRICE_MISSING" = ${PRICEMISSING}
            "FEED_TOO_SMALL" = ${FEEDTOOSMALL}
            "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED" = ${MAXITEMSPERITEMGROUPEXCEEDED}
            "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE" = ${ITEMMAINIMAGEDOWNLOADFAILURE}
            "PINJOIN_CONTENT_UNSAFE" = ${PINJOINCONTENTUNSAFE}
            "BLOCKLISTED_IMAGE_SIGNATURE" = ${BLOCKLISTEDIMAGESIGNATURE}
            "LIST_PRICE_INVALID" = ${LISTPRICEINVALID}
            "PRICE_CANNOT_BE_DETERMINED" = ${PRICECANNOTBEDETERMINED}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsFeedValidationErrors<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsFeedValidationErrors<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsFeedValidationErrors<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsFeedValidationErrors {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsFeedValidationErrors' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsFeedValidationErrors
        $AllProperties = ("FETCH_ERROR", "FETCH_INACTIVE_FEED_ERROR", "ENCODING_ERROR", "DELIMITER_ERROR", "REQUIRED_COLUMNS_MISSING", "DUPLICATE_PRODUCTS", "IMAGE_LINK_INVALID", "ITEMID_MISSING", "TITLE_MISSING", "DESCRIPTION_MISSING", "PRODUCT_LINK_MISSING", "IMAGE_LINK_MISSING", "AVAILABILITY_INVALID", "PRODUCT_PRICE_INVALID", "LINK_FORMAT_INVALID", "PARSE_LINE_ERROR", "ADWORDS_FORMAT_INVALID", "INTERNAL_SERVICE_ERROR", "NO_VERIFIED_DOMAIN", "ADULT_INVALID", "IMAGE_LINK_LENGTH_TOO_LONG", "INVALID_DOMAIN", "FEED_LENGTH_TOO_LONG", "LINK_LENGTH_TOO_LONG", "MALFORMED_XML", "PRICE_MISSING", "FEED_TOO_SMALL", "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED", "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE", "PINJOIN_CONTENT_UNSAFE", "BLOCKLISTED_IMAGE_SIGNATURE", "LIST_PRICE_INVALID", "PRICE_CANNOT_BE_DETERMINED")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "FETCH_ERROR"))) { #optional property not found
            $FETCHERROR = $null
        } else {
            $FETCHERROR = $JsonParameters.PSobject.Properties["FETCH_ERROR"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "FETCH_INACTIVE_FEED_ERROR"))) { #optional property not found
            $FETCHINACTIVEFEEDERROR = $null
        } else {
            $FETCHINACTIVEFEEDERROR = $JsonParameters.PSobject.Properties["FETCH_INACTIVE_FEED_ERROR"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ENCODING_ERROR"))) { #optional property not found
            $ENCODINGERROR = $null
        } else {
            $ENCODINGERROR = $JsonParameters.PSobject.Properties["ENCODING_ERROR"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DELIMITER_ERROR"))) { #optional property not found
            $DELIMITERERROR = $null
        } else {
            $DELIMITERERROR = $JsonParameters.PSobject.Properties["DELIMITER_ERROR"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "REQUIRED_COLUMNS_MISSING"))) { #optional property not found
            $REQUIREDCOLUMNSMISSING = $null
        } else {
            $REQUIREDCOLUMNSMISSING = $JsonParameters.PSobject.Properties["REQUIRED_COLUMNS_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DUPLICATE_PRODUCTS"))) { #optional property not found
            $DUPLICATEPRODUCTS = $null
        } else {
            $DUPLICATEPRODUCTS = $JsonParameters.PSobject.Properties["DUPLICATE_PRODUCTS"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "IMAGE_LINK_INVALID"))) { #optional property not found
            $IMAGELINKINVALID = $null
        } else {
            $IMAGELINKINVALID = $JsonParameters.PSobject.Properties["IMAGE_LINK_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ITEMID_MISSING"))) { #optional property not found
            $ITEMIDMISSING = $null
        } else {
            $ITEMIDMISSING = $JsonParameters.PSobject.Properties["ITEMID_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "TITLE_MISSING"))) { #optional property not found
            $TITLEMISSING = $null
        } else {
            $TITLEMISSING = $JsonParameters.PSobject.Properties["TITLE_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DESCRIPTION_MISSING"))) { #optional property not found
            $DESCRIPTIONMISSING = $null
        } else {
            $DESCRIPTIONMISSING = $JsonParameters.PSobject.Properties["DESCRIPTION_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PRODUCT_LINK_MISSING"))) { #optional property not found
            $PRODUCTLINKMISSING = $null
        } else {
            $PRODUCTLINKMISSING = $JsonParameters.PSobject.Properties["PRODUCT_LINK_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "IMAGE_LINK_MISSING"))) { #optional property not found
            $IMAGELINKMISSING = $null
        } else {
            $IMAGELINKMISSING = $JsonParameters.PSobject.Properties["IMAGE_LINK_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "AVAILABILITY_INVALID"))) { #optional property not found
            $AVAILABILITYINVALID = $null
        } else {
            $AVAILABILITYINVALID = $JsonParameters.PSobject.Properties["AVAILABILITY_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PRODUCT_PRICE_INVALID"))) { #optional property not found
            $PRODUCTPRICEINVALID = $null
        } else {
            $PRODUCTPRICEINVALID = $JsonParameters.PSobject.Properties["PRODUCT_PRICE_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LINK_FORMAT_INVALID"))) { #optional property not found
            $LINKFORMATINVALID = $null
        } else {
            $LINKFORMATINVALID = $JsonParameters.PSobject.Properties["LINK_FORMAT_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PARSE_LINE_ERROR"))) { #optional property not found
            $PARSELINEERROR = $null
        } else {
            $PARSELINEERROR = $JsonParameters.PSobject.Properties["PARSE_LINE_ERROR"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ADWORDS_FORMAT_INVALID"))) { #optional property not found
            $ADWORDSFORMATINVALID = $null
        } else {
            $ADWORDSFORMATINVALID = $JsonParameters.PSobject.Properties["ADWORDS_FORMAT_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "INTERNAL_SERVICE_ERROR"))) { #optional property not found
            $INTERNALSERVICEERROR = $null
        } else {
            $INTERNALSERVICEERROR = $JsonParameters.PSobject.Properties["INTERNAL_SERVICE_ERROR"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "NO_VERIFIED_DOMAIN"))) { #optional property not found
            $NOVERIFIEDDOMAIN = $null
        } else {
            $NOVERIFIEDDOMAIN = $JsonParameters.PSobject.Properties["NO_VERIFIED_DOMAIN"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ADULT_INVALID"))) { #optional property not found
            $ADULTINVALID = $null
        } else {
            $ADULTINVALID = $JsonParameters.PSobject.Properties["ADULT_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "IMAGE_LINK_LENGTH_TOO_LONG"))) { #optional property not found
            $IMAGELINKLENGTHTOOLONG = $null
        } else {
            $IMAGELINKLENGTHTOOLONG = $JsonParameters.PSobject.Properties["IMAGE_LINK_LENGTH_TOO_LONG"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "INVALID_DOMAIN"))) { #optional property not found
            $INVALIDDOMAIN = $null
        } else {
            $INVALIDDOMAIN = $JsonParameters.PSobject.Properties["INVALID_DOMAIN"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "FEED_LENGTH_TOO_LONG"))) { #optional property not found
            $FEEDLENGTHTOOLONG = $null
        } else {
            $FEEDLENGTHTOOLONG = $JsonParameters.PSobject.Properties["FEED_LENGTH_TOO_LONG"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LINK_LENGTH_TOO_LONG"))) { #optional property not found
            $LINKLENGTHTOOLONG = $null
        } else {
            $LINKLENGTHTOOLONG = $JsonParameters.PSobject.Properties["LINK_LENGTH_TOO_LONG"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "MALFORMED_XML"))) { #optional property not found
            $MALFORMEDXML = $null
        } else {
            $MALFORMEDXML = $JsonParameters.PSobject.Properties["MALFORMED_XML"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PRICE_MISSING"))) { #optional property not found
            $PRICEMISSING = $null
        } else {
            $PRICEMISSING = $JsonParameters.PSobject.Properties["PRICE_MISSING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "FEED_TOO_SMALL"))) { #optional property not found
            $FEEDTOOSMALL = $null
        } else {
            $FEEDTOOSMALL = $JsonParameters.PSobject.Properties["FEED_TOO_SMALL"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED"))) { #optional property not found
            $MAXITEMSPERITEMGROUPEXCEEDED = $null
        } else {
            $MAXITEMSPERITEMGROUPEXCEEDED = $JsonParameters.PSobject.Properties["MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE"))) { #optional property not found
            $ITEMMAINIMAGEDOWNLOADFAILURE = $null
        } else {
            $ITEMMAINIMAGEDOWNLOADFAILURE = $JsonParameters.PSobject.Properties["ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PINJOIN_CONTENT_UNSAFE"))) { #optional property not found
            $PINJOINCONTENTUNSAFE = $null
        } else {
            $PINJOINCONTENTUNSAFE = $JsonParameters.PSobject.Properties["PINJOIN_CONTENT_UNSAFE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "BLOCKLISTED_IMAGE_SIGNATURE"))) { #optional property not found
            $BLOCKLISTEDIMAGESIGNATURE = $null
        } else {
            $BLOCKLISTEDIMAGESIGNATURE = $JsonParameters.PSobject.Properties["BLOCKLISTED_IMAGE_SIGNATURE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LIST_PRICE_INVALID"))) { #optional property not found
            $LISTPRICEINVALID = $null
        } else {
            $LISTPRICEINVALID = $JsonParameters.PSobject.Properties["LIST_PRICE_INVALID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PRICE_CANNOT_BE_DETERMINED"))) { #optional property not found
            $PRICECANNOTBEDETERMINED = $null
        } else {
            $PRICECANNOTBEDETERMINED = $JsonParameters.PSobject.Properties["PRICE_CANNOT_BE_DETERMINED"].value
        }

        $PSO = [PSCustomObject]@{
            "FETCH_ERROR" = ${FETCHERROR}
            "FETCH_INACTIVE_FEED_ERROR" = ${FETCHINACTIVEFEEDERROR}
            "ENCODING_ERROR" = ${ENCODINGERROR}
            "DELIMITER_ERROR" = ${DELIMITERERROR}
            "REQUIRED_COLUMNS_MISSING" = ${REQUIREDCOLUMNSMISSING}
            "DUPLICATE_PRODUCTS" = ${DUPLICATEPRODUCTS}
            "IMAGE_LINK_INVALID" = ${IMAGELINKINVALID}
            "ITEMID_MISSING" = ${ITEMIDMISSING}
            "TITLE_MISSING" = ${TITLEMISSING}
            "DESCRIPTION_MISSING" = ${DESCRIPTIONMISSING}
            "PRODUCT_LINK_MISSING" = ${PRODUCTLINKMISSING}
            "IMAGE_LINK_MISSING" = ${IMAGELINKMISSING}
            "AVAILABILITY_INVALID" = ${AVAILABILITYINVALID}
            "PRODUCT_PRICE_INVALID" = ${PRODUCTPRICEINVALID}
            "LINK_FORMAT_INVALID" = ${LINKFORMATINVALID}
            "PARSE_LINE_ERROR" = ${PARSELINEERROR}
            "ADWORDS_FORMAT_INVALID" = ${ADWORDSFORMATINVALID}
            "INTERNAL_SERVICE_ERROR" = ${INTERNALSERVICEERROR}
            "NO_VERIFIED_DOMAIN" = ${NOVERIFIEDDOMAIN}
            "ADULT_INVALID" = ${ADULTINVALID}
            "IMAGE_LINK_LENGTH_TOO_LONG" = ${IMAGELINKLENGTHTOOLONG}
            "INVALID_DOMAIN" = ${INVALIDDOMAIN}
            "FEED_LENGTH_TOO_LONG" = ${FEEDLENGTHTOOLONG}
            "LINK_LENGTH_TOO_LONG" = ${LINKLENGTHTOOLONG}
            "MALFORMED_XML" = ${MALFORMEDXML}
            "PRICE_MISSING" = ${PRICEMISSING}
            "FEED_TOO_SMALL" = ${FEEDTOOSMALL}
            "MAX_ITEMS_PER_ITEM_GROUP_EXCEEDED" = ${MAXITEMSPERITEMGROUPEXCEEDED}
            "ITEM_MAIN_IMAGE_DOWNLOAD_FAILURE" = ${ITEMMAINIMAGEDOWNLOADFAILURE}
            "PINJOIN_CONTENT_UNSAFE" = ${PINJOINCONTENTUNSAFE}
            "BLOCKLISTED_IMAGE_SIGNATURE" = ${BLOCKLISTEDIMAGESIGNATURE}
            "LIST_PRICE_INVALID" = ${LISTPRICEINVALID}
            "PRICE_CANNOT_BE_DETERMINED" = ${PRICECANNOTBEDETERMINED}
        }

        return $PSO
    }

}

