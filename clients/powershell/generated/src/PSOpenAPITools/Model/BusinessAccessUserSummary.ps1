#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Metadata of the member/partner that has access to the asset.

.PARAMETER Email
Email of the business member/partner.
.PARAMETER Id
Unique identifier of the business member/partner.
.PARAMETER Username
Username of the business member/partner.
.OUTPUTS

BusinessAccessUserSummary<PSCustomObject>
#>

function Initialize-BusinessAccessUserSummary {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Email},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Username}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BusinessAccessUserSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Id -and $Id.length -gt 20) {
            throw "invalid value for 'Id', the character length must be smaller than or equal to 20."
        }

        if (!$Id -and $Id.length -lt 1) {
            throw "invalid value for 'Id', the character length must be great than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "email" = ${Email}
            "id" = ${Id}
            "username" = ${Username}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BusinessAccessUserSummary<PSCustomObject>

.DESCRIPTION

Convert from JSON to BusinessAccessUserSummary<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BusinessAccessUserSummary<PSCustomObject>
#>
function ConvertFrom-JsonToBusinessAccessUserSummary {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BusinessAccessUserSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BusinessAccessUserSummary
        $AllProperties = ("email", "id", "username")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "email"))) { #optional property not found
            $Email = $null
        } else {
            $Email = $JsonParameters.PSobject.Properties["email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "username"))) { #optional property not found
            $Username = $null
        } else {
            $Username = $JsonParameters.PSobject.Properties["username"].value
        }

        $PSO = [PSCustomObject]@{
            "email" = ${Email}
            "id" = ${Id}
            "username" = ${Username}
        }

        return $PSO
    }

}

