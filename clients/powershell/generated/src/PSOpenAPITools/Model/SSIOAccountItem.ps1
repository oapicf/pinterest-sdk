#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
Salesforce id for billto_info
.PARAMETER IoTermsId
Salesforce id for IO Terms and Conditions
.PARAMETER IoTerms
Salesforce text for IO Terms and Conditions
.PARAMETER UsTermsId
Salesforce id for US Terms and Conditions
.PARAMETER UsTerms
Salesforce text for US Terms and Conditions
.PARAMETER RowTermsId
Salesforce id for Rest of the World Terms and Conditions
.PARAMETER RowTerms
Salesforce text for Rest of the World Terms and Conditions
.PARAMETER IoType
Insertion Order Type - Pinterest Paper or Agency Paper
.PARAMETER Addresses
Address information that is associated with this account.
.OUTPUTS

SSIOAccountItem<PSCustomObject>
#>

function Initialize-SSIOAccountItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IoTermsId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IoTerms},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UsTermsId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UsTerms},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RowTermsId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RowTerms},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IoType},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Addresses}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SSIOAccountItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "io_terms_id" = ${IoTermsId}
            "io_terms" = ${IoTerms}
            "us_terms_id" = ${UsTermsId}
            "us_terms" = ${UsTerms}
            "row_terms_id" = ${RowTermsId}
            "row_terms" = ${RowTerms}
            "io_type" = ${IoType}
            "addresses" = ${Addresses}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SSIOAccountItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to SSIOAccountItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SSIOAccountItem<PSCustomObject>
#>
function ConvertFrom-JsonToSSIOAccountItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SSIOAccountItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SSIOAccountItem
        $AllProperties = ("id", "io_terms_id", "io_terms", "us_terms_id", "us_terms", "row_terms_id", "row_terms", "io_type", "addresses")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "io_terms_id"))) { #optional property not found
            $IoTermsId = $null
        } else {
            $IoTermsId = $JsonParameters.PSobject.Properties["io_terms_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "io_terms"))) { #optional property not found
            $IoTerms = $null
        } else {
            $IoTerms = $JsonParameters.PSobject.Properties["io_terms"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "us_terms_id"))) { #optional property not found
            $UsTermsId = $null
        } else {
            $UsTermsId = $JsonParameters.PSobject.Properties["us_terms_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "us_terms"))) { #optional property not found
            $UsTerms = $null
        } else {
            $UsTerms = $JsonParameters.PSobject.Properties["us_terms"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "row_terms_id"))) { #optional property not found
            $RowTermsId = $null
        } else {
            $RowTermsId = $JsonParameters.PSobject.Properties["row_terms_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "row_terms"))) { #optional property not found
            $RowTerms = $null
        } else {
            $RowTerms = $JsonParameters.PSobject.Properties["row_terms"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "io_type"))) { #optional property not found
            $IoType = $null
        } else {
            $IoType = $JsonParameters.PSobject.Properties["io_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "addresses"))) { #optional property not found
            $Addresses = $null
        } else {
            $Addresses = $JsonParameters.PSobject.Properties["addresses"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "io_terms_id" = ${IoTermsId}
            "io_terms" = ${IoTerms}
            "us_terms_id" = ${UsTermsId}
            "us_terms" = ${UsTerms}
            "row_terms_id" = ${RowTermsId}
            "row_terms" = ${RowTerms}
            "io_type" = ${IoType}
            "addresses" = ${Addresses}
        }

        return $PSO
    }

}

