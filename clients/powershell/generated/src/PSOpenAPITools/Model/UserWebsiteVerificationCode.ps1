#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER VerificationCode
Code to check against the user claiming the website
.PARAMETER DnsTxtRecord
DNS TXT record to check against for the website to be claimed
.PARAMETER Metatag
Metatag the verification process searchs for the website to be claimed
.PARAMETER Filename
File expected to find on the website being claimed
.PARAMETER FileContent
A full html file to upload to the website in order for it to be claimed
.OUTPUTS

UserWebsiteVerificationCode<PSCustomObject>
#>

function Initialize-UserWebsiteVerificationCode {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VerificationCode},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DnsTxtRecord},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Metatag},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Filename},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FileContent}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => UserWebsiteVerificationCode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "verification_code" = ${VerificationCode}
            "dns_txt_record" = ${DnsTxtRecord}
            "metatag" = ${Metatag}
            "filename" = ${Filename}
            "file_content" = ${FileContent}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UserWebsiteVerificationCode<PSCustomObject>

.DESCRIPTION

Convert from JSON to UserWebsiteVerificationCode<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UserWebsiteVerificationCode<PSCustomObject>
#>
function ConvertFrom-JsonToUserWebsiteVerificationCode {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => UserWebsiteVerificationCode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UserWebsiteVerificationCode
        $AllProperties = ("verification_code", "dns_txt_record", "metatag", "filename", "file_content")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "verification_code"))) { #optional property not found
            $VerificationCode = $null
        } else {
            $VerificationCode = $JsonParameters.PSobject.Properties["verification_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dns_txt_record"))) { #optional property not found
            $DnsTxtRecord = $null
        } else {
            $DnsTxtRecord = $JsonParameters.PSobject.Properties["dns_txt_record"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "metatag"))) { #optional property not found
            $Metatag = $null
        } else {
            $Metatag = $JsonParameters.PSobject.Properties["metatag"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "filename"))) { #optional property not found
            $Filename = $null
        } else {
            $Filename = $JsonParameters.PSobject.Properties["filename"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "file_content"))) { #optional property not found
            $FileContent = $null
        } else {
            $FileContent = $JsonParameters.PSobject.Properties["file_content"].value
        }

        $PSO = [PSCustomObject]@{
            "verification_code" = ${VerificationCode}
            "dns_txt_record" = ${DnsTxtRecord}
            "metatag" = ${Metatag}
            "filename" = ${Filename}
            "file_content" = ${FileContent}
        }

        return $PSO
    }

}

