#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
The hotel's name.
.PARAMETER Link
Link to the product page
.PARAMETER Description
Brief description of the hotel.
.PARAMETER Brand
The brand to which this hotel belongs to.
.PARAMETER Latitude
Latitude of the hotel.
.PARAMETER Longitude
Longitude of the hotel.
.PARAMETER Neighborhood
A list of neighborhoods where the hotel is located
.PARAMETER Address
No description available.
.PARAMETER CustomLabel0
Custom grouping of hotels
.PARAMETER CustomLabel1
Custom grouping of hotels
.PARAMETER CustomLabel2
Custom grouping of hotels
.PARAMETER CustomLabel3
Custom grouping of hotels
.PARAMETER CustomLabel4
Custom grouping of hotels
.PARAMETER Category
The type of property. The category can be any type of internal description desired.
.PARAMETER BasePrice
Base price of the hotel room per night followed by the ISO currency code
.PARAMETER SalePrice
Sale price of a hotel room per night. Used to advertise discounts off the regular price of the hotel.
.PARAMETER GuestRatings
No description available.
.PARAMETER MainImage
No description available.
.PARAMETER AdditionalImageLink
<p><= 2000 characters</p> <p>The links to additional images for your hotel. Up to ten additional images can be used to show a hotel from different angles. Must begin with http:// or https://.</p>
.OUTPUTS

CatalogsHotelAttributes<PSCustomObject>
#>

function Initialize-CatalogsHotelAttributes {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Link},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Brand},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Latitude},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Longitude},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Neighborhood},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Address},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomLabel0},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomLabel1},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomLabel2},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomLabel3},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomLabel4},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Category},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BasePrice},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SalePrice},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${GuestRatings},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${MainImage},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${AdditionalImageLink}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsHotelAttributes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "link" = ${Link}
            "description" = ${Description}
            "brand" = ${Brand}
            "latitude" = ${Latitude}
            "longitude" = ${Longitude}
            "neighborhood" = ${Neighborhood}
            "address" = ${Address}
            "custom_label_0" = ${CustomLabel0}
            "custom_label_1" = ${CustomLabel1}
            "custom_label_2" = ${CustomLabel2}
            "custom_label_3" = ${CustomLabel3}
            "custom_label_4" = ${CustomLabel4}
            "category" = ${Category}
            "base_price" = ${BasePrice}
            "sale_price" = ${SalePrice}
            "guest_ratings" = ${GuestRatings}
            "main_image" = ${MainImage}
            "additional_image_link" = ${AdditionalImageLink}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsHotelAttributes<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsHotelAttributes<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsHotelAttributes<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsHotelAttributes {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsHotelAttributes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsHotelAttributes
        $AllProperties = ("name", "link", "description", "brand", "latitude", "longitude", "neighborhood", "address", "custom_label_0", "custom_label_1", "custom_label_2", "custom_label_3", "custom_label_4", "category", "base_price", "sale_price", "guest_ratings", "main_image", "additional_image_link")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "link"))) { #optional property not found
            $Link = $null
        } else {
            $Link = $JsonParameters.PSobject.Properties["link"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "brand"))) { #optional property not found
            $Brand = $null
        } else {
            $Brand = $JsonParameters.PSobject.Properties["brand"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "latitude"))) { #optional property not found
            $Latitude = $null
        } else {
            $Latitude = $JsonParameters.PSobject.Properties["latitude"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "longitude"))) { #optional property not found
            $Longitude = $null
        } else {
            $Longitude = $JsonParameters.PSobject.Properties["longitude"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "neighborhood"))) { #optional property not found
            $Neighborhood = $null
        } else {
            $Neighborhood = $JsonParameters.PSobject.Properties["neighborhood"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "address"))) { #optional property not found
            $Address = $null
        } else {
            $Address = $JsonParameters.PSobject.Properties["address"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custom_label_0"))) { #optional property not found
            $CustomLabel0 = $null
        } else {
            $CustomLabel0 = $JsonParameters.PSobject.Properties["custom_label_0"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custom_label_1"))) { #optional property not found
            $CustomLabel1 = $null
        } else {
            $CustomLabel1 = $JsonParameters.PSobject.Properties["custom_label_1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custom_label_2"))) { #optional property not found
            $CustomLabel2 = $null
        } else {
            $CustomLabel2 = $JsonParameters.PSobject.Properties["custom_label_2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custom_label_3"))) { #optional property not found
            $CustomLabel3 = $null
        } else {
            $CustomLabel3 = $JsonParameters.PSobject.Properties["custom_label_3"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custom_label_4"))) { #optional property not found
            $CustomLabel4 = $null
        } else {
            $CustomLabel4 = $JsonParameters.PSobject.Properties["custom_label_4"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "category"))) { #optional property not found
            $Category = $null
        } else {
            $Category = $JsonParameters.PSobject.Properties["category"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "base_price"))) { #optional property not found
            $BasePrice = $null
        } else {
            $BasePrice = $JsonParameters.PSobject.Properties["base_price"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sale_price"))) { #optional property not found
            $SalePrice = $null
        } else {
            $SalePrice = $JsonParameters.PSobject.Properties["sale_price"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "guest_ratings"))) { #optional property not found
            $GuestRatings = $null
        } else {
            $GuestRatings = $JsonParameters.PSobject.Properties["guest_ratings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "main_image"))) { #optional property not found
            $MainImage = $null
        } else {
            $MainImage = $JsonParameters.PSobject.Properties["main_image"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "additional_image_link"))) { #optional property not found
            $AdditionalImageLink = $null
        } else {
            $AdditionalImageLink = $JsonParameters.PSobject.Properties["additional_image_link"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "link" = ${Link}
            "description" = ${Description}
            "brand" = ${Brand}
            "latitude" = ${Latitude}
            "longitude" = ${Longitude}
            "neighborhood" = ${Neighborhood}
            "address" = ${Address}
            "custom_label_0" = ${CustomLabel0}
            "custom_label_1" = ${CustomLabel1}
            "custom_label_2" = ${CustomLabel2}
            "custom_label_3" = ${CustomLabel3}
            "custom_label_4" = ${CustomLabel4}
            "category" = ${Category}
            "base_price" = ${BasePrice}
            "sale_price" = ${SalePrice}
            "guest_ratings" = ${GuestRatings}
            "main_image" = ${MainImage}
            "additional_image_link" = ${AdditionalImageLink}
        }

        return $PSO
    }

}

