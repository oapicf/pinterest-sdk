#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Success
Returns true if the offer code was successfully applied(validateOnly=false) or can be applied(validateOnly=true).
.PARAMETER ErrorCode
Error code type if error occurs
.PARAMETER ErrorMessage
Reason for failure
.OUTPUTS

AdsCreditRedeemResponse<PSCustomObject>
#>

function Initialize-AdsCreditRedeemResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Success},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ErrorCode},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ErrorMessage}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdsCreditRedeemResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "success" = ${Success}
            "errorCode" = ${ErrorCode}
            "errorMessage" = ${ErrorMessage}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdsCreditRedeemResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdsCreditRedeemResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdsCreditRedeemResponse<PSCustomObject>
#>
function ConvertFrom-JsonToAdsCreditRedeemResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdsCreditRedeemResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdsCreditRedeemResponse
        $AllProperties = ("success", "errorCode", "errorMessage")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "success"))) { #optional property not found
            $Success = $null
        } else {
            $Success = $JsonParameters.PSobject.Properties["success"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "errorCode"))) { #optional property not found
            $ErrorCode = $null
        } else {
            $ErrorCode = $JsonParameters.PSobject.Properties["errorCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "errorMessage"))) { #optional property not found
            $ErrorMessage = $null
        } else {
            $ErrorMessage = $JsonParameters.PSobject.Properties["errorMessage"].value
        }

        $PSO = [PSCustomObject]@{
            "success" = ${Success}
            "errorCode" = ${ErrorCode}
            "errorMessage" = ${ErrorMessage}
        }

        return $PSO
    }

}

