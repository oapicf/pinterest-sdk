#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The counts can be null early in the process.

.PARAMETER Original
The number of products in the feed file.
.PARAMETER Ingested
The number of products successfully ingested from the feed file.
.OUTPUTS

CatalogsFeedProductCounts<PSCustomObject>
#>

function Initialize-CatalogsFeedProductCounts {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Original},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Ingested}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsFeedProductCounts' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "original" = ${Original}
            "ingested" = ${Ingested}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsFeedProductCounts<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsFeedProductCounts<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsFeedProductCounts<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsFeedProductCounts {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsFeedProductCounts' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsFeedProductCounts
        $AllProperties = ("original", "ingested")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "original"))) { #optional property not found
            $Original = $null
        } else {
            $Original = $JsonParameters.PSobject.Properties["original"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ingested"))) { #optional property not found
            $Ingested = $null
        } else {
            $Ingested = $JsonParameters.PSobject.Properties["ingested"].value
        }

        $PSO = [PSCustomObject]@{
            "original" = ${Original}
            "ingested" = ${Ingested}
        }

        return $PSO
    }

}

