#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Field
No description available.
.PARAMETER Operator
No description available.
.PARAMETER Values
List of values for filtering
.OUTPUTS

AdsAnalyticsMetricsFilter<PSCustomObject>
#>

function Initialize-AdsAnalyticsMetricsFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("SPEND_IN_DOLLAR", "TOTAL_IMPRESSION")]
        [PSCustomObject]
        ${Field},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("LESS_THAN", "GREATER_THAN")]
        [PSCustomObject]
        ${Operator},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [Decimal[]]
        ${Values}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdsAnalyticsMetricsFilter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Field) {
            throw "invalid value for 'Field', 'Field' cannot be null."
        }

        if ($null -eq $Operator) {
            throw "invalid value for 'Operator', 'Operator' cannot be null."
        }

        if ($null -eq $Values) {
            throw "invalid value for 'Values', 'Values' cannot be null."
        }

        if ($Values.length -lt 1) {
            throw "invalid value for 'Values', number of items must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "field" = ${Field}
            "operator" = ${Operator}
            "values" = ${Values}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdsAnalyticsMetricsFilter<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdsAnalyticsMetricsFilter<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdsAnalyticsMetricsFilter<PSCustomObject>
#>
function ConvertFrom-JsonToAdsAnalyticsMetricsFilter {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdsAnalyticsMetricsFilter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdsAnalyticsMetricsFilter
        $AllProperties = ("field", "operator", "values")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'field' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "field"))) {
            throw "Error! JSON cannot be serialized due to the required property 'field' missing."
        } else {
            $Field = $JsonParameters.PSobject.Properties["field"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "operator"))) {
            throw "Error! JSON cannot be serialized due to the required property 'operator' missing."
        } else {
            $Operator = $JsonParameters.PSobject.Properties["operator"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "values"))) {
            throw "Error! JSON cannot be serialized due to the required property 'values' missing."
        } else {
            $Values = $JsonParameters.PSobject.Properties["values"].value
        }

        $PSO = [PSCustomObject]@{
            "field" = ${Field}
            "operator" = ${Operator}
            "values" = ${Values}
        }

        return $PSO
    }

}

