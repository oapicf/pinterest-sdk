#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER WebhookUrl
Standard HTTPS webhook URL.
.PARAMETER LeadFormId
Lead form ID.
.PARAMETER PartnerAccessToken
Partner access token. Only for clients that requires authentication. We recommend to avoid this param.
.PARAMETER PartnerRefreshToken
Partner refresh token. Only for clients that requires authentication. We recommend to avoid this param.
.PARAMETER PartnerMetadata
No description available.
.OUTPUTS

AdAccountCreateSubscriptionRequest<PSCustomObject>
#>

function Initialize-AdAccountCreateSubscriptionRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebhookUrl},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${LeadFormId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PartnerAccessToken},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PartnerRefreshToken},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${PartnerMetadata}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdAccountCreateSubscriptionRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $WebhookUrl) {
            throw "invalid value for 'WebhookUrl', 'WebhookUrl' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "webhook_url" = ${WebhookUrl}
            "lead_form_id" = ${LeadFormId}
            "partner_access_token" = ${PartnerAccessToken}
            "partner_refresh_token" = ${PartnerRefreshToken}
            "partner_metadata" = ${PartnerMetadata}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdAccountCreateSubscriptionRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdAccountCreateSubscriptionRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdAccountCreateSubscriptionRequest<PSCustomObject>
#>
function ConvertFrom-JsonToAdAccountCreateSubscriptionRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdAccountCreateSubscriptionRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdAccountCreateSubscriptionRequest
        $AllProperties = ("webhook_url", "lead_form_id", "partner_access_token", "partner_refresh_token", "partner_metadata")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'webhook_url' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "webhook_url"))) {
            throw "Error! JSON cannot be serialized due to the required property 'webhook_url' missing."
        } else {
            $WebhookUrl = $JsonParameters.PSobject.Properties["webhook_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lead_form_id"))) { #optional property not found
            $LeadFormId = $null
        } else {
            $LeadFormId = $JsonParameters.PSobject.Properties["lead_form_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "partner_access_token"))) { #optional property not found
            $PartnerAccessToken = $null
        } else {
            $PartnerAccessToken = $JsonParameters.PSobject.Properties["partner_access_token"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "partner_refresh_token"))) { #optional property not found
            $PartnerRefreshToken = $null
        } else {
            $PartnerRefreshToken = $JsonParameters.PSobject.Properties["partner_refresh_token"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "partner_metadata"))) { #optional property not found
            $PartnerMetadata = $null
        } else {
            $PartnerMetadata = $JsonParameters.PSobject.Properties["partner_metadata"].value
        }

        $PSO = [PSCustomObject]@{
            "webhook_url" = ${WebhookUrl}
            "lead_form_id" = ${LeadFormId}
            "partner_access_token" = ${PartnerAccessToken}
            "partner_refresh_token" = ${PartnerRefreshToken}
            "partner_metadata" = ${PartnerMetadata}
        }

        return $PSO
    }

}

