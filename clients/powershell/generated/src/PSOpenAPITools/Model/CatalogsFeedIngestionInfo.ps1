#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER INSTOCK
The number of ingested products that are in stock.
.PARAMETER OUTOFSTOCK
The number of ingested products that are in out of stock.
.PARAMETER PREORDER
The number of ingested products that are in preorder.
.OUTPUTS

CatalogsFeedIngestionInfo<PSCustomObject>
#>

function Initialize-CatalogsFeedIngestionInfo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${INSTOCK},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${OUTOFSTOCK},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PREORDER}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsFeedIngestionInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "IN_STOCK" = ${INSTOCK}
            "OUT_OF_STOCK" = ${OUTOFSTOCK}
            "PREORDER" = ${PREORDER}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsFeedIngestionInfo<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsFeedIngestionInfo<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsFeedIngestionInfo<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsFeedIngestionInfo {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsFeedIngestionInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsFeedIngestionInfo
        $AllProperties = ("IN_STOCK", "OUT_OF_STOCK", "PREORDER")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "IN_STOCK"))) { #optional property not found
            $INSTOCK = $null
        } else {
            $INSTOCK = $JsonParameters.PSobject.Properties["IN_STOCK"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "OUT_OF_STOCK"))) { #optional property not found
            $OUTOFSTOCK = $null
        } else {
            $OUTOFSTOCK = $JsonParameters.PSobject.Properties["OUT_OF_STOCK"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PREORDER"))) { #optional property not found
            $PREORDER = $null
        } else {
            $PREORDER = $JsonParameters.PSobject.Properties["PREORDER"].value
        }

        $PSO = [PSCustomObject]@{
            "IN_STOCK" = ${INSTOCK}
            "OUT_OF_STOCK" = ${OUTOFSTOCK}
            "PREORDER" = ${PREORDER}
        }

        return $PSO
    }

}

