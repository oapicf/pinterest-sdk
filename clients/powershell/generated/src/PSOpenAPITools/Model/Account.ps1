#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AccountType
Type of account
.PARAMETER Id
User account ID.
.PARAMETER ProfileImage
No description available.
.PARAMETER WebsiteUrl
No description available.
.PARAMETER Username
No description available.
.PARAMETER About
Profile about description.
.PARAMETER BusinessName
No description available.
.PARAMETER BoardCount
User account board count.<br/>**Note**: Board count on user account level may differ from counts found elsewhere due to attribution of collaborative Boards.
.PARAMETER PinCount
User account pin count. This includes both created and saved pins.
.PARAMETER FollowerCount
User account follower count.
.PARAMETER FollowingCount
User account following count.
.PARAMETER MonthlyViews
User account monthly views.
.OUTPUTS

Account<PSCustomObject>
#>

function Initialize-Account {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PINNER", "BUSINESS")]
        [String]
        ${AccountType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProfileImage},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebsiteUrl},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Username},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${About},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BusinessName},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${BoardCount},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PinCount},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FollowerCount},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${FollowingCount},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MonthlyViews}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => Account' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "account_type" = ${AccountType}
            "id" = ${Id}
            "profile_image" = ${ProfileImage}
            "website_url" = ${WebsiteUrl}
            "username" = ${Username}
            "about" = ${About}
            "business_name" = ${BusinessName}
            "board_count" = ${BoardCount}
            "pin_count" = ${PinCount}
            "follower_count" = ${FollowerCount}
            "following_count" = ${FollowingCount}
            "monthly_views" = ${MonthlyViews}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Account<PSCustomObject>

.DESCRIPTION

Convert from JSON to Account<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Account<PSCustomObject>
#>
function ConvertFrom-JsonToAccount {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => Account' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Account
        $AllProperties = ("account_type", "id", "profile_image", "website_url", "username", "about", "business_name", "board_count", "pin_count", "follower_count", "following_count", "monthly_views")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "account_type"))) { #optional property not found
            $AccountType = $null
        } else {
            $AccountType = $JsonParameters.PSobject.Properties["account_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "profile_image"))) { #optional property not found
            $ProfileImage = $null
        } else {
            $ProfileImage = $JsonParameters.PSobject.Properties["profile_image"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "website_url"))) { #optional property not found
            $WebsiteUrl = $null
        } else {
            $WebsiteUrl = $JsonParameters.PSobject.Properties["website_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "username"))) { #optional property not found
            $Username = $null
        } else {
            $Username = $JsonParameters.PSobject.Properties["username"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "about"))) { #optional property not found
            $About = $null
        } else {
            $About = $JsonParameters.PSobject.Properties["about"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "business_name"))) { #optional property not found
            $BusinessName = $null
        } else {
            $BusinessName = $JsonParameters.PSobject.Properties["business_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "board_count"))) { #optional property not found
            $BoardCount = $null
        } else {
            $BoardCount = $JsonParameters.PSobject.Properties["board_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pin_count"))) { #optional property not found
            $PinCount = $null
        } else {
            $PinCount = $JsonParameters.PSobject.Properties["pin_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "follower_count"))) { #optional property not found
            $FollowerCount = $null
        } else {
            $FollowerCount = $JsonParameters.PSobject.Properties["follower_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "following_count"))) { #optional property not found
            $FollowingCount = $null
        } else {
            $FollowingCount = $JsonParameters.PSobject.Properties["following_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "monthly_views"))) { #optional property not found
            $MonthlyViews = $null
        } else {
            $MonthlyViews = $JsonParameters.PSobject.Properties["monthly_views"].value
        }

        $PSO = [PSCustomObject]@{
            "account_type" = ${AccountType}
            "id" = ${Id}
            "profile_image" = ${ProfileImage}
            "website_url" = ${WebsiteUrl}
            "username" = ${Username}
            "about" = ${About}
            "business_name" = ${BusinessName}
            "board_count" = ${BoardCount}
            "pin_count" = ${PinCount}
            "follower_count" = ${FollowerCount}
            "following_count" = ${FollowingCount}
            "monthly_views" = ${MonthlyViews}
        }

        return $PSO
    }

}

