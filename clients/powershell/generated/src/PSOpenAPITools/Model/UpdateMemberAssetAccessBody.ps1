#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

An object with a list of all the new accesses.

.PARAMETER Accesses
No description available.
.OUTPUTS

UpdateMemberAssetAccessBody<PSCustomObject>
#>

function Initialize-UpdateMemberAssetAccessBody {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Accesses}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => UpdateMemberAssetAccessBody' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Accesses) {
            throw "invalid value for 'Accesses', 'Accesses' cannot be null."
        }

        if ($Accesses.length -gt 50) {
            throw "invalid value for 'Accesses', number of items must be less than or equal to 50."
        }

        if ($Accesses.length -lt 1) {
            throw "invalid value for 'Accesses', number of items must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "accesses" = ${Accesses}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateMemberAssetAccessBody<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateMemberAssetAccessBody<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateMemberAssetAccessBody<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateMemberAssetAccessBody {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => UpdateMemberAssetAccessBody' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateMemberAssetAccessBody
        $AllProperties = ("accesses")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'accesses' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accesses"))) {
            throw "Error! JSON cannot be serialized due to the required property 'accesses' missing."
        } else {
            $Accesses = $JsonParameters.PSobject.Properties["accesses"].value
        }

        $PSO = [PSCustomObject]@{
            "accesses" = ${Accesses}
        }

        return $PSO
    }

}

