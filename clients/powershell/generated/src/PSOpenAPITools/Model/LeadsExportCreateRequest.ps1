#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER StartDate
Export leads collected on and after start date (UTC). Format: YYYY-MM-DD
.PARAMETER EndDate
Export leads collected on and before end date (UTC). Format: YYYY-MM-DD
.PARAMETER AdId
ID for the ad collecting leads
.OUTPUTS

LeadsExportCreateRequest<PSCustomObject>
#>

function Initialize-LeadsExportCreateRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^(\d{4})-(\d{2})-(\d{2})$")]
        [String]
        ${StartDate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^(\d{4})-(\d{2})-(\d{2})$")]
        [String]
        ${EndDate},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AdId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => LeadsExportCreateRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $StartDate) {
            throw "invalid value for 'StartDate', 'StartDate' cannot be null."
        }

        if ($null -eq $EndDate) {
            throw "invalid value for 'EndDate', 'EndDate' cannot be null."
        }

        if ($null -eq $AdId) {
            throw "invalid value for 'AdId', 'AdId' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "start_date" = ${StartDate}
            "end_date" = ${EndDate}
            "ad_id" = ${AdId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to LeadsExportCreateRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to LeadsExportCreateRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

LeadsExportCreateRequest<PSCustomObject>
#>
function ConvertFrom-JsonToLeadsExportCreateRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => LeadsExportCreateRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in LeadsExportCreateRequest
        $AllProperties = ("start_date", "end_date", "ad_id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'start_date' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "start_date"))) {
            throw "Error! JSON cannot be serialized due to the required property 'start_date' missing."
        } else {
            $StartDate = $JsonParameters.PSobject.Properties["start_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "end_date"))) {
            throw "Error! JSON cannot be serialized due to the required property 'end_date' missing."
        } else {
            $EndDate = $JsonParameters.PSobject.Properties["end_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'ad_id' missing."
        } else {
            $AdId = $JsonParameters.PSobject.Properties["ad_id"].value
        }

        $PSO = [PSCustomObject]@{
            "start_date" = ${StartDate}
            "end_date" = ${EndDate}
            "ad_id" = ${AdId}
        }

        return $PSO
    }

}

