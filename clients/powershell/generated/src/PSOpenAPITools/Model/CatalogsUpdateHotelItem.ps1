#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Object describing an hotel item batch record

.PARAMETER HotelId
The catalog hotel item id in the merchant namespace
.PARAMETER Operation
No description available.
.PARAMETER Attributes
No description available.
.OUTPUTS

CatalogsUpdateHotelItem<PSCustomObject>
#>

function Initialize-CatalogsUpdateHotelItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HotelId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("UPDATE")]
        [String]
        ${Operation},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Attributes}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsUpdateHotelItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $HotelId) {
            throw "invalid value for 'HotelId', 'HotelId' cannot be null."
        }

        if ($null -eq $Operation) {
            throw "invalid value for 'Operation', 'Operation' cannot be null."
        }

        if ($null -eq $Attributes) {
            throw "invalid value for 'Attributes', 'Attributes' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "hotel_id" = ${HotelId}
            "operation" = ${Operation}
            "attributes" = ${Attributes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsUpdateHotelItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsUpdateHotelItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsUpdateHotelItem<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsUpdateHotelItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsUpdateHotelItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsUpdateHotelItem
        $AllProperties = ("hotel_id", "operation", "attributes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'hotel_id' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hotel_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'hotel_id' missing."
        } else {
            $HotelId = $JsonParameters.PSobject.Properties["hotel_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "operation"))) {
            throw "Error! JSON cannot be serialized due to the required property 'operation' missing."
        } else {
            $Operation = $JsonParameters.PSobject.Properties["operation"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attributes"))) {
            throw "Error! JSON cannot be serialized due to the required property 'attributes' missing."
        } else {
            $Attributes = $JsonParameters.PSobject.Properties["attributes"].value
        }

        $PSO = [PSCustomObject]@{
            "hotel_id" = ${HotelId}
            "operation" = ${Operation}
            "attributes" = ${Attributes}
        }

        return $PSO
    }

}

