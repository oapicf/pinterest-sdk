#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

This represents a mapping from placement to a bid price adjustment.  Multiplier values must be between 0 and 10. A value of 10 represents a 900% increase in bid price (from $1 to $10 for example). A value of 0 will stop distribution for this item on the specified placement in `MAX_BID` ad groups in `CATALOG_SALES` campaigns. All placement multipliers must be set at the same time. If a multiplier is not provided it is assumed to be 1 (no bid adjustment).

.PARAMETER PLACEMENT
No description available.
.OUTPUTS

PlacementMultipliers<PSCustomObject>
#>

function Initialize-PlacementMultipliers {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("SEARCH", "BROWSE")]
        [String]
        ${PLACEMENT}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PlacementMultipliers' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "PLACEMENT" = ${PLACEMENT}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PlacementMultipliers<PSCustomObject>

.DESCRIPTION

Convert from JSON to PlacementMultipliers<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PlacementMultipliers<PSCustomObject>
#>
function ConvertFrom-JsonToPlacementMultipliers {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PlacementMultipliers' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $PlacementMultipliersAdditionalProperties = @{}

        # check if Json contains properties not defined in PlacementMultipliers
        $AllProperties = ("PLACEMENT")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $PlacementMultipliersAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PLACEMENT"))) { #optional property not found
            $PLACEMENT = $null
        } else {
            $PLACEMENT = $JsonParameters.PSobject.Properties["PLACEMENT"].value
        }

        $PSO = [PSCustomObject]@{
            "PLACEMENT" = ${PLACEMENT}
            "AdditionalProperties" = $PlacementMultipliersAdditionalProperties
        }

        return $PSO
    }

}

