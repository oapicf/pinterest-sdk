#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The terminated asset access.

.PARAMETER AssetId
Unique identifier of the business asset.
.PARAMETER MemberId
Unique identifier of the business member.
.OUTPUTS

DeleteMemberAccessResult<PSCustomObject>
#>

function Initialize-DeleteMemberAccessResult {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AssetId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${MemberId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DeleteMemberAccessResult' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "asset_id" = ${AssetId}
            "member_id" = ${MemberId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DeleteMemberAccessResult<PSCustomObject>

.DESCRIPTION

Convert from JSON to DeleteMemberAccessResult<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DeleteMemberAccessResult<PSCustomObject>
#>
function ConvertFrom-JsonToDeleteMemberAccessResult {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DeleteMemberAccessResult' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DeleteMemberAccessResult
        $AllProperties = ("asset_id", "member_id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "asset_id"))) { #optional property not found
            $AssetId = $null
        } else {
            $AssetId = $JsonParameters.PSobject.Properties["asset_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "member_id"))) { #optional property not found
            $MemberId = $null
        } else {
            $MemberId = $JsonParameters.PSobject.Properties["member_id"].value
        }

        $PSO = [PSCustomObject]@{
            "asset_id" = ${AssetId}
            "member_id" = ${MemberId}
        }

        return $PSO
    }

}

