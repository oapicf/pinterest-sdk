#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Ad group targeting specification defining the ad group target audience. For example, `{""APPTYPE"":[""iphone""], ""GENDER"":[""male""], ""LOCALE"":[""en-US""], ""LOCATION"":[""501""], ""AGE_BUCKET"":[""25-34""]}`

.PARAMETER AGEBUCKET
Age ranges. If the AGE_BUCKET field is missing, the default behavior in terms of ad delivery is that **All age buckets** will be targeted.
.PARAMETER APPTYPE
Allowed devices. If the APPTYPE field is missing, the default behavior in terms of ad delivery is that **All devices/apptypes** will be targeted.
.PARAMETER AUDIENCEEXCLUDE
Excluded customer list IDs. Used to drive new customer acquisition goals. For example: [""2542620905475""]. Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_EXCLUDE field is missing, the default behavior in terms of ad delivery is that **No users will be excluded**.
.PARAMETER AUDIENCEINCLUDE
Targeted customer list IDs. For example: [""2542620905473""]. Audience lists need to have at least 100 people with Pinterest accounts in them Audience lists need to have at least 100 people with Pinterest accounts in them. If the AUDIENCE_INCLUDE field is missing, the default behavior in terms of ad delivery is that **All users will be included**.
.PARAMETER GENDER
Targeted genders. Values: [""unknown"",""male"",""female""]. If the GENDER field is missing, the default behavior in terms of ad delivery is that **All genders will be targeted**.
.PARAMETER GEO
Location region codes, e.g., ""BE-VOV"" (East Flanders, Belgium) For complete list, <a href=""https://help.pinterest.com/sub/helpcenter/partner/pinterest_location_targeting_codes.xlsx"" target=""_blank"">click here</a> or postal codes, e.g., ""US-94107"". Use either region codes or postal codes but not both. At least one of LOCATION or GEO must be specified. If the GEO field is missing, then only LOCATION values will be targeted (see LOCATION field below).
.PARAMETER INTEREST
Array of interest object IDs. If the INTEREST field is missing, the default behavior in terms of ad delivery is that **All interests will be targeted**.
.PARAMETER LOCALE
24 ISO 639-1 two letter language codes. If the LOCALE field is missing, the default behavior in terms of ad delivery is that **All languages will be targeted, only english non-sublanguage will be targeted**.
.PARAMETER LOCATION
22 ISO Alpha 2 two letter country codes or US Nielsen DMA (Designated Market Area) codes (location region codes) (e.g., [""US"", ""807""]). For complete list, click here. Location-Country and Location-Metro codes apply. At least one of LOCATION or GEO must be specified. If the LOCATION field is missing, then only GEO values will be targeted (see GEO field above).
.PARAMETER SHOPPINGRETARGETING
Array of object: lookback_window [Integer]: Number of days ago to start lookback timeframe for dynamic retargeting tag_types [Array of integer]: Event types to target for dynamic retargeting exclusion_window [Integer]: Number of days ago to stop lookback timeframe for dynamic retargeting
.PARAMETER TARGETINGSTRATEGY

.OUTPUTS

TargetingSpec<PSCustomObject>
#>

function Initialize-TargetingSpec {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("18-24", "21+", "25-34", "35-44", "45-49", "50-54", "55-64", "65+")]
        [String[]]
        ${AGEBUCKET},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("android_mobile", "android_tablet", "ipad", "iphone", "web", "web_mobile")]
        [String[]]
        ${APPTYPE},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${AUDIENCEEXCLUDE},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${AUDIENCEINCLUDE},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("unknown", "male", "female")]
        [String[]]
        ${GENDER},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${GEO},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${INTEREST},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${LOCALE},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${LOCATION},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${SHOPPINGRETARGETING},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("CHOOSE_YOUR_OWN", "FIND_NEW_CUSTOMERS", "RECONNECT_WITH_USERS")]
        [String[]]
        ${TARGETINGSTRATEGY}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TargetingSpec' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "AGE_BUCKET" = ${AGEBUCKET}
            "APPTYPE" = ${APPTYPE}
            "AUDIENCE_EXCLUDE" = ${AUDIENCEEXCLUDE}
            "AUDIENCE_INCLUDE" = ${AUDIENCEINCLUDE}
            "GENDER" = ${GENDER}
            "GEO" = ${GEO}
            "INTEREST" = ${INTEREST}
            "LOCALE" = ${LOCALE}
            "LOCATION" = ${LOCATION}
            "SHOPPING_RETARGETING" = ${SHOPPINGRETARGETING}
            "TARGETING_STRATEGY" = ${TARGETINGSTRATEGY}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TargetingSpec<PSCustomObject>

.DESCRIPTION

Convert from JSON to TargetingSpec<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TargetingSpec<PSCustomObject>
#>
function ConvertFrom-JsonToTargetingSpec {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TargetingSpec' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TargetingSpec
        $AllProperties = ("AGE_BUCKET", "APPTYPE", "AUDIENCE_EXCLUDE", "AUDIENCE_INCLUDE", "GENDER", "GEO", "INTEREST", "LOCALE", "LOCATION", "SHOPPING_RETARGETING", "TARGETING_STRATEGY")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "AGE_BUCKET"))) { #optional property not found
            $AGEBUCKET = $null
        } else {
            $AGEBUCKET = $JsonParameters.PSobject.Properties["AGE_BUCKET"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "APPTYPE"))) { #optional property not found
            $APPTYPE = $null
        } else {
            $APPTYPE = $JsonParameters.PSobject.Properties["APPTYPE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "AUDIENCE_EXCLUDE"))) { #optional property not found
            $AUDIENCEEXCLUDE = $null
        } else {
            $AUDIENCEEXCLUDE = $JsonParameters.PSobject.Properties["AUDIENCE_EXCLUDE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "AUDIENCE_INCLUDE"))) { #optional property not found
            $AUDIENCEINCLUDE = $null
        } else {
            $AUDIENCEINCLUDE = $JsonParameters.PSobject.Properties["AUDIENCE_INCLUDE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "GENDER"))) { #optional property not found
            $GENDER = $null
        } else {
            $GENDER = $JsonParameters.PSobject.Properties["GENDER"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "GEO"))) { #optional property not found
            $GEO = $null
        } else {
            $GEO = $JsonParameters.PSobject.Properties["GEO"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "INTEREST"))) { #optional property not found
            $INTEREST = $null
        } else {
            $INTEREST = $JsonParameters.PSobject.Properties["INTEREST"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LOCALE"))) { #optional property not found
            $LOCALE = $null
        } else {
            $LOCALE = $JsonParameters.PSobject.Properties["LOCALE"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LOCATION"))) { #optional property not found
            $LOCATION = $null
        } else {
            $LOCATION = $JsonParameters.PSobject.Properties["LOCATION"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "SHOPPING_RETARGETING"))) { #optional property not found
            $SHOPPINGRETARGETING = $null
        } else {
            $SHOPPINGRETARGETING = $JsonParameters.PSobject.Properties["SHOPPING_RETARGETING"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "TARGETING_STRATEGY"))) { #optional property not found
            $TARGETINGSTRATEGY = $null
        } else {
            $TARGETINGSTRATEGY = $JsonParameters.PSobject.Properties["TARGETING_STRATEGY"].value
        }

        $PSO = [PSCustomObject]@{
            "AGE_BUCKET" = ${AGEBUCKET}
            "APPTYPE" = ${APPTYPE}
            "AUDIENCE_EXCLUDE" = ${AUDIENCEEXCLUDE}
            "AUDIENCE_INCLUDE" = ${AUDIENCEINCLUDE}
            "GENDER" = ${GENDER}
            "GEO" = ${GEO}
            "INTEREST" = ${INTEREST}
            "LOCALE" = ${LOCALE}
            "LOCATION" = ${LOCATION}
            "SHOPPING_RETARGETING" = ${SHOPPINGRETARGETING}
            "TARGETING_STRATEGY" = ${TARGETINGSTRATEGY}
        }

        return $PSO
    }

}

