#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Json

JSON object

.OUTPUTS

CatalogsProductGroupFilterKeys<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsProductGroupFilterKeys {
    [CmdletBinding()]
    Param (
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        $match = 0
        $matchType = $null
        $matchInstance = $null

        if ($match -ne 0) { # no match yet
            # try to match AvailabilityFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToAvailabilityFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "AvailabilityFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'AvailabilityFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match BrandFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToBrandFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "BrandFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'BrandFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ConditionFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToConditionFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ConditionFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ConditionFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match CurrencyFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCurrencyFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CurrencyFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'CurrencyFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match CustomLabel0Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCustomLabel0Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CustomLabel0Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'CustomLabel0Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match CustomLabel1Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCustomLabel1Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CustomLabel1Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'CustomLabel1Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match CustomLabel2Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCustomLabel2Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CustomLabel2Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'CustomLabel2Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match CustomLabel3Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCustomLabel3Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CustomLabel3Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'CustomLabel3Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match CustomLabel4Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCustomLabel4Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CustomLabel4Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'CustomLabel4Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GenderFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGenderFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GenderFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GenderFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory0Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory0Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory0Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory0Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory1Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory1Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory1Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory1Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory2Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory2Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory2Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory2Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory3Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory3Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory3Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory3Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory4Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory4Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory4Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory4Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory5Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory5Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory5Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory5Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match GoogleProductCategory6Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToGoogleProductCategory6Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "GoogleProductCategory6Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'GoogleProductCategory6Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ItemGroupIdFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToItemGroupIdFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ItemGroupIdFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ItemGroupIdFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ItemIdFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToItemIdFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ItemIdFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ItemIdFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match MaxPriceFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToMaxPriceFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "MaxPriceFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'MaxPriceFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match MediaTypeFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToMediaTypeFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "MediaTypeFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'MediaTypeFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match MinPriceFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToMinPriceFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "MinPriceFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'MinPriceFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ProductGroupReferenceFilter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToProductGroupReferenceFilter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ProductGroupReferenceFilter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ProductGroupReferenceFilter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ProductType0Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToProductType0Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ProductType0Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ProductType0Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ProductType1Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToProductType1Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ProductType1Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ProductType1Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ProductType2Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToProductType2Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ProductType2Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ProductType2Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ProductType3Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToProductType3Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ProductType3Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ProductType3Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ProductType4Filter defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToProductType4Filter $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ProductType4Filter"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ProductType4Filter' defined in anyOf (CatalogsProductGroupFilterKeys). Proceeding to the next one if any."
            }
        }

        if ($match -eq 1) {
            return [PSCustomObject]@{
                "ActualType" = ${matchType}
                "ActualInstance" = ${matchInstance}
                "anyOfSchemas" = @("AvailabilityFilter", "BrandFilter", "ConditionFilter", "CurrencyFilter", "CustomLabel0Filter", "CustomLabel1Filter", "CustomLabel2Filter", "CustomLabel3Filter", "CustomLabel4Filter", "GenderFilter", "GoogleProductCategory0Filter", "GoogleProductCategory1Filter", "GoogleProductCategory2Filter", "GoogleProductCategory3Filter", "GoogleProductCategory4Filter", "GoogleProductCategory5Filter", "GoogleProductCategory6Filter", "ItemGroupIdFilter", "ItemIdFilter", "MaxPriceFilter", "MediaTypeFilter", "MinPriceFilter", "ProductGroupReferenceFilter", "ProductType0Filter", "ProductType1Filter", "ProductType2Filter", "ProductType3Filter", "ProductType4Filter")
            }
        } else {
            throw "Error! The JSON payload doesn't matches any type defined in anyOf schemas ([AvailabilityFilter, BrandFilter, ConditionFilter, CurrencyFilter, CustomLabel0Filter, CustomLabel1Filter, CustomLabel2Filter, CustomLabel3Filter, CustomLabel4Filter, GenderFilter, GoogleProductCategory0Filter, GoogleProductCategory1Filter, GoogleProductCategory2Filter, GoogleProductCategory3Filter, GoogleProductCategory4Filter, GoogleProductCategory5Filter, GoogleProductCategory6Filter, ItemGroupIdFilter, ItemIdFilter, MaxPriceFilter, MediaTypeFilter, MinPriceFilter, ProductGroupReferenceFilter, ProductType0Filter, ProductType1Filter, ProductType2Filter, ProductType3Filter, ProductType4Filter]). JSON Payload: $($Json)"
        }
    }
}

