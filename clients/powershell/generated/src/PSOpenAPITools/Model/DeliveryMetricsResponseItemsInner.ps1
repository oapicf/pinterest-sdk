#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
Metric's name.
.PARAMETER Category
Category name
.PARAMETER Definition
How the metric is defined.
.PARAMETER DisplayName
Display name, when available. If unavaible it will not be returned. Matches how the metric is named in our native tools like Pinterest Ads Manager.
.OUTPUTS

DeliveryMetricsResponseItemsInner<PSCustomObject>
#>

function Initialize-DeliveryMetricsResponseItemsInner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ADS", "ORGANIC")]
        [String]
        ${Category},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Definition},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DisplayName}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DeliveryMetricsResponseItemsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "category" = ${Category}
            "definition" = ${Definition}
            "display_name" = ${DisplayName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DeliveryMetricsResponseItemsInner<PSCustomObject>

.DESCRIPTION

Convert from JSON to DeliveryMetricsResponseItemsInner<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DeliveryMetricsResponseItemsInner<PSCustomObject>
#>
function ConvertFrom-JsonToDeliveryMetricsResponseItemsInner {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DeliveryMetricsResponseItemsInner' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DeliveryMetricsResponseItemsInner
        $AllProperties = ("name", "category", "definition", "display_name")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "category"))) { #optional property not found
            $Category = $null
        } else {
            $Category = $JsonParameters.PSobject.Properties["category"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "definition"))) { #optional property not found
            $Definition = $null
        } else {
            $Definition = $JsonParameters.PSobject.Properties["definition"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "display_name"))) { #optional property not found
            $DisplayName = $null
        } else {
            $DisplayName = $JsonParameters.PSobject.Properties["display_name"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "category" = ${Category}
            "definition" = ${Definition}
            "display_name" = ${DisplayName}
        }

        return $PSO
    }

}

