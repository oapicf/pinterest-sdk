#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AssetGroupName
Asset Group name
.PARAMETER AssetGroupDescription
Asset group description
.PARAMETER AssetGroupTypes
Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
.OUTPUTS

CreateAssetGroupBody<PSCustomObject>
#>

function Initialize-CreateAssetGroupBody {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AssetGroupName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AssetGroupDescription},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${AssetGroupTypes}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CreateAssetGroupBody' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $AssetGroupName) {
            throw "invalid value for 'AssetGroupName', 'AssetGroupName' cannot be null."
        }

        if ($null -eq $AssetGroupDescription) {
            throw "invalid value for 'AssetGroupDescription', 'AssetGroupDescription' cannot be null."
        }

        if ($null -eq $AssetGroupTypes) {
            throw "invalid value for 'AssetGroupTypes', 'AssetGroupTypes' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "asset_group_name" = ${AssetGroupName}
            "asset_group_description" = ${AssetGroupDescription}
            "asset_group_types" = ${AssetGroupTypes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreateAssetGroupBody<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreateAssetGroupBody<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreateAssetGroupBody<PSCustomObject>
#>
function ConvertFrom-JsonToCreateAssetGroupBody {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CreateAssetGroupBody' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CreateAssetGroupBody
        $AllProperties = ("asset_group_name", "asset_group_description", "asset_group_types")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'asset_group_name' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "asset_group_name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'asset_group_name' missing."
        } else {
            $AssetGroupName = $JsonParameters.PSobject.Properties["asset_group_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "asset_group_description"))) {
            throw "Error! JSON cannot be serialized due to the required property 'asset_group_description' missing."
        } else {
            $AssetGroupDescription = $JsonParameters.PSobject.Properties["asset_group_description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "asset_group_types"))) {
            throw "Error! JSON cannot be serialized due to the required property 'asset_group_types' missing."
        } else {
            $AssetGroupTypes = $JsonParameters.PSobject.Properties["asset_group_types"].value
        }

        $PSO = [PSCustomObject]@{
            "asset_group_name" = ${AssetGroupName}
            "asset_group_description" = ${AssetGroupDescription}
            "asset_group_types" = ${AssetGroupTypes}
        }

        return $PSO
    }

}

