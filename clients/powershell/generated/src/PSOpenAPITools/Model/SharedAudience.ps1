#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AudienceId
Unique identifier of an audience
.PARAMETER OperationType
No description available.
.PARAMETER RecipientAccountIds
List of ad account IDs to share with or revoke from.
.OUTPUTS

SharedAudience<PSCustomObject>
#>

function Initialize-SharedAudience {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AudienceId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("SHARE", "REVOKE")]
        [PSCustomObject]
        ${OperationType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${RecipientAccountIds}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SharedAudience' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $AudienceId) {
            throw "invalid value for 'AudienceId', 'AudienceId' cannot be null."
        }

        if ($null -eq $OperationType) {
            throw "invalid value for 'OperationType', 'OperationType' cannot be null."
        }

        if ($null -eq $RecipientAccountIds) {
            throw "invalid value for 'RecipientAccountIds', 'RecipientAccountIds' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "audience_id" = ${AudienceId}
            "operation_type" = ${OperationType}
            "recipient_account_ids" = ${RecipientAccountIds}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SharedAudience<PSCustomObject>

.DESCRIPTION

Convert from JSON to SharedAudience<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SharedAudience<PSCustomObject>
#>
function ConvertFrom-JsonToSharedAudience {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SharedAudience' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SharedAudience
        $AllProperties = ("audience_id", "operation_type", "recipient_account_ids")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'audience_id' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "audience_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'audience_id' missing."
        } else {
            $AudienceId = $JsonParameters.PSobject.Properties["audience_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "operation_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'operation_type' missing."
        } else {
            $OperationType = $JsonParameters.PSobject.Properties["operation_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "recipient_account_ids"))) {
            throw "Error! JSON cannot be serialized due to the required property 'recipient_account_ids' missing."
        } else {
            $RecipientAccountIds = $JsonParameters.PSobject.Properties["recipient_account_ids"].value
        }

        $PSO = [PSCustomObject]@{
            "audience_id" = ${AudienceId}
            "operation_type" = ${OperationType}
            "recipient_account_ids" = ${RecipientAccountIds}
        }

        return $PSO
    }

}

