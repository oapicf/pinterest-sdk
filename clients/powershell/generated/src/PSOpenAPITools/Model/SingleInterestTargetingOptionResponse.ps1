#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Name
No description available.
.PARAMETER ChildInterests
No description available.
.PARAMETER Level
No description available.
.OUTPUTS

SingleInterestTargetingOptionResponse<PSCustomObject>
#>

function Initialize-SingleInterestTargetingOptionResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("\d+")]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${ChildInterests},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Level}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SingleInterestTargetingOptionResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "child_interests" = ${ChildInterests}
            "level" = ${Level}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SingleInterestTargetingOptionResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to SingleInterestTargetingOptionResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SingleInterestTargetingOptionResponse<PSCustomObject>
#>
function ConvertFrom-JsonToSingleInterestTargetingOptionResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SingleInterestTargetingOptionResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SingleInterestTargetingOptionResponse
        $AllProperties = ("id", "name", "child_interests", "level")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "child_interests"))) { #optional property not found
            $ChildInterests = $null
        } else {
            $ChildInterests = $JsonParameters.PSobject.Properties["child_interests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "level"))) { #optional property not found
            $Level = $null
        } else {
            $Level = $JsonParameters.PSobject.Properties["level"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "child_interests" = ${ChildInterests}
            "level" = ${Level}
        }

        return $PSO
    }

}

