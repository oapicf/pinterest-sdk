#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
ID of the product group promotion.
.PARAMETER AdGroupId
ID of the ad group the product group belongs to.
.PARAMETER BidInMicroCurrency
The bid in micro currency.
.PARAMETER Included
True if the group is BIDDABLE, false if it should be EXCLUDED from serving ads.
.PARAMETER Definition
The full product group definition path
.PARAMETER RelativeDefinition
The definition of the product group, relative to its parent - an attribute name/value pair
.PARAMETER ParentId
The parent Product Group ID of this Product Group
.PARAMETER SlideshowCollectionsTitle
Slideshow Collections Title
.PARAMETER SlideshowCollectionsDescription
Slideshow Collections Description
.PARAMETER IsMdl
If set to true products promoted in this product group will use the Mobile Deep Link specified in your catalog
.PARAMETER Status
No description available.
.PARAMETER TrackingUrl
Tracking template for proudct group promotions. 4000 limit
.PARAMETER CatalogProductGroupId
ID of the catalogs product group that this product group promotion references
.PARAMETER CatalogProductGroupName
Catalogs product group name
.PARAMETER CollectionsHeroPinId
Hero Pin ID if this PG is promoted as a Collection
.PARAMETER CollectionsHeroDestinationUrl
Collections Hero Destination Url
.PARAMETER GridClickType
No description available.
.OUTPUTS

ProductGroupPromotion<PSCustomObject>
#>

function Initialize-ProductGroupPromotion {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^(AG)?\d+$")]
        [String]
        ${AdGroupId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${BidInMicroCurrency},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Included},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Definition},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RelativeDefinition},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${ParentId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SlideshowCollectionsTitle},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SlideshowCollectionsDescription},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsMdl},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ACTIVE", "PAUSED", "ARCHIVED", "DRAFT", "DELETED_DRAFT")]
        [PSCustomObject]
        ${Status},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TrackingUrl},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${CatalogProductGroupId},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CatalogProductGroupName},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${CollectionsHeroPinId},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CollectionsHeroDestinationUrl},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("CLOSEUP", "DIRECT_TO_DESTINATION")]
        [PSCustomObject]
        ${GridClickType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ProductGroupPromotion' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "ad_group_id" = ${AdGroupId}
            "bid_in_micro_currency" = ${BidInMicroCurrency}
            "included" = ${Included}
            "definition" = ${Definition}
            "relative_definition" = ${RelativeDefinition}
            "parent_id" = ${ParentId}
            "slideshow_collections_title" = ${SlideshowCollectionsTitle}
            "slideshow_collections_description" = ${SlideshowCollectionsDescription}
            "is_mdl" = ${IsMdl}
            "status" = ${Status}
            "tracking_url" = ${TrackingUrl}
            "catalog_product_group_id" = ${CatalogProductGroupId}
            "catalog_product_group_name" = ${CatalogProductGroupName}
            "collections_hero_pin_id" = ${CollectionsHeroPinId}
            "collections_hero_destination_url" = ${CollectionsHeroDestinationUrl}
            "grid_click_type" = ${GridClickType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ProductGroupPromotion<PSCustomObject>

.DESCRIPTION

Convert from JSON to ProductGroupPromotion<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ProductGroupPromotion<PSCustomObject>
#>
function ConvertFrom-JsonToProductGroupPromotion {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ProductGroupPromotion' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ProductGroupPromotion
        $AllProperties = ("id", "ad_group_id", "bid_in_micro_currency", "included", "definition", "relative_definition", "parent_id", "slideshow_collections_title", "slideshow_collections_description", "is_mdl", "status", "tracking_url", "catalog_product_group_id", "catalog_product_group_name", "collections_hero_pin_id", "collections_hero_destination_url", "grid_click_type")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_group_id"))) { #optional property not found
            $AdGroupId = $null
        } else {
            $AdGroupId = $JsonParameters.PSobject.Properties["ad_group_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bid_in_micro_currency"))) { #optional property not found
            $BidInMicroCurrency = $null
        } else {
            $BidInMicroCurrency = $JsonParameters.PSobject.Properties["bid_in_micro_currency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "included"))) { #optional property not found
            $Included = $null
        } else {
            $Included = $JsonParameters.PSobject.Properties["included"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "definition"))) { #optional property not found
            $Definition = $null
        } else {
            $Definition = $JsonParameters.PSobject.Properties["definition"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "relative_definition"))) { #optional property not found
            $RelativeDefinition = $null
        } else {
            $RelativeDefinition = $JsonParameters.PSobject.Properties["relative_definition"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parent_id"))) { #optional property not found
            $ParentId = $null
        } else {
            $ParentId = $JsonParameters.PSobject.Properties["parent_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "slideshow_collections_title"))) { #optional property not found
            $SlideshowCollectionsTitle = $null
        } else {
            $SlideshowCollectionsTitle = $JsonParameters.PSobject.Properties["slideshow_collections_title"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "slideshow_collections_description"))) { #optional property not found
            $SlideshowCollectionsDescription = $null
        } else {
            $SlideshowCollectionsDescription = $JsonParameters.PSobject.Properties["slideshow_collections_description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_mdl"))) { #optional property not found
            $IsMdl = $null
        } else {
            $IsMdl = $JsonParameters.PSobject.Properties["is_mdl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tracking_url"))) { #optional property not found
            $TrackingUrl = $null
        } else {
            $TrackingUrl = $JsonParameters.PSobject.Properties["tracking_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "catalog_product_group_id"))) { #optional property not found
            $CatalogProductGroupId = $null
        } else {
            $CatalogProductGroupId = $JsonParameters.PSobject.Properties["catalog_product_group_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "catalog_product_group_name"))) { #optional property not found
            $CatalogProductGroupName = $null
        } else {
            $CatalogProductGroupName = $JsonParameters.PSobject.Properties["catalog_product_group_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "collections_hero_pin_id"))) { #optional property not found
            $CollectionsHeroPinId = $null
        } else {
            $CollectionsHeroPinId = $JsonParameters.PSobject.Properties["collections_hero_pin_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "collections_hero_destination_url"))) { #optional property not found
            $CollectionsHeroDestinationUrl = $null
        } else {
            $CollectionsHeroDestinationUrl = $JsonParameters.PSobject.Properties["collections_hero_destination_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "grid_click_type"))) { #optional property not found
            $GridClickType = $null
        } else {
            $GridClickType = $JsonParameters.PSobject.Properties["grid_click_type"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "ad_group_id" = ${AdGroupId}
            "bid_in_micro_currency" = ${BidInMicroCurrency}
            "included" = ${Included}
            "definition" = ${Definition}
            "relative_definition" = ${RelativeDefinition}
            "parent_id" = ${ParentId}
            "slideshow_collections_title" = ${SlideshowCollectionsTitle}
            "slideshow_collections_description" = ${SlideshowCollectionsDescription}
            "is_mdl" = ${IsMdl}
            "status" = ${Status}
            "tracking_url" = ${TrackingUrl}
            "catalog_product_group_id" = ${CatalogProductGroupId}
            "catalog_product_group_name" = ${CatalogProductGroupName}
            "collections_hero_pin_id" = ${CollectionsHeroPinId}
            "collections_hero_destination_url" = ${CollectionsHeroDestinationUrl}
            "grid_click_type" = ${GridClickType}
        }

        return $PSO
    }

}

