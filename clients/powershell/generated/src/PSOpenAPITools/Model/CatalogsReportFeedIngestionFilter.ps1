#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ReportType
No description available.
.PARAMETER FeedId
ID of the feed entity.
.PARAMETER ProcessingResultId
Unique identifier of a feed processing result. It can be acquired from the ""id"" field of the ""items"" array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list). If not provided, default to most recent completed processing result.
.OUTPUTS

CatalogsReportFeedIngestionFilter<PSCustomObject>
#>

function Initialize-CatalogsReportFeedIngestionFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("FEED_INGESTION_ISSUES")]
        [String]
        ${ReportType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${FeedId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${ProcessingResultId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsReportFeedIngestionFilter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $ReportType) {
            throw "invalid value for 'ReportType', 'ReportType' cannot be null."
        }

        if ($null -eq $FeedId) {
            throw "invalid value for 'FeedId', 'FeedId' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "report_type" = ${ReportType}
            "feed_id" = ${FeedId}
            "processing_result_id" = ${ProcessingResultId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsReportFeedIngestionFilter<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsReportFeedIngestionFilter<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsReportFeedIngestionFilter<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsReportFeedIngestionFilter {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsReportFeedIngestionFilter' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsReportFeedIngestionFilter
        $AllProperties = ("report_type", "feed_id", "processing_result_id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'report_type' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "report_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'report_type' missing."
        } else {
            $ReportType = $JsonParameters.PSobject.Properties["report_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "feed_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'feed_id' missing."
        } else {
            $FeedId = $JsonParameters.PSobject.Properties["feed_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "processing_result_id"))) { #optional property not found
            $ProcessingResultId = $null
        } else {
            $ProcessingResultId = $JsonParameters.PSobject.Properties["processing_result_id"].value
        }

        $PSO = [PSCustomObject]@{
            "report_type" = ${ReportType}
            "feed_id" = ${FeedId}
            "processing_result_id" = ${ProcessingResultId}
        }

        return $PSO
    }

}

