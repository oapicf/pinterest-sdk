#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
Name of targeting template.
.PARAMETER AutoTargetingEnabled
Enable auto-targeting for ad group. Also known as <a href=""https://help.pinterest.com/en/business/article/expanded-targeting"" target=""_blank"">""expanded targeting""</a>.
.PARAMETER TargetingAttributes
No description available.
.PARAMETER PlacementGroup
No description available.
.PARAMETER Keywords
No description available.
.PARAMETER TrackingUrls
No description available.
.OUTPUTS

TargetingTemplateCreate<PSCustomObject>
#>

function Initialize-TargetingTemplateCreate {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AutoTargetingEnabled} = $true,
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TargetingAttributes},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ALL", "SEARCH", "BROWSE", "OTHER")]
        [PSCustomObject]
        ${PlacementGroup},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Keywords},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TrackingUrls}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TargetingTemplateCreate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Name) {
            throw "invalid value for 'Name', 'Name' cannot be null."
        }

        if ($null -eq $TargetingAttributes) {
            throw "invalid value for 'TargetingAttributes', 'TargetingAttributes' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "auto_targeting_enabled" = ${AutoTargetingEnabled}
            "targeting_attributes" = ${TargetingAttributes}
            "placement_group" = ${PlacementGroup}
            "keywords" = ${Keywords}
            "tracking_urls" = ${TrackingUrls}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TargetingTemplateCreate<PSCustomObject>

.DESCRIPTION

Convert from JSON to TargetingTemplateCreate<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TargetingTemplateCreate<PSCustomObject>
#>
function ConvertFrom-JsonToTargetingTemplateCreate {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TargetingTemplateCreate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TargetingTemplateCreate
        $AllProperties = ("name", "auto_targeting_enabled", "targeting_attributes", "placement_group", "keywords", "tracking_urls")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'name' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'name' missing."
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "targeting_attributes"))) {
            throw "Error! JSON cannot be serialized due to the required property 'targeting_attributes' missing."
        } else {
            $TargetingAttributes = $JsonParameters.PSobject.Properties["targeting_attributes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "auto_targeting_enabled"))) { #optional property not found
            $AutoTargetingEnabled = $null
        } else {
            $AutoTargetingEnabled = $JsonParameters.PSobject.Properties["auto_targeting_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "placement_group"))) { #optional property not found
            $PlacementGroup = $null
        } else {
            $PlacementGroup = $JsonParameters.PSobject.Properties["placement_group"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "keywords"))) { #optional property not found
            $Keywords = $null
        } else {
            $Keywords = $JsonParameters.PSobject.Properties["keywords"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tracking_urls"))) { #optional property not found
            $TrackingUrls = $null
        } else {
            $TrackingUrls = $JsonParameters.PSobject.Properties["tracking_urls"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "auto_targeting_enabled" = ${AutoTargetingEnabled}
            "targeting_attributes" = ${TargetingAttributes}
            "placement_group" = ${PlacementGroup}
            "keywords" = ${Keywords}
            "tracking_urls" = ${TrackingUrls}
        }

        return $PSO
    }

}

