#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER LeadFormId
Lead form ID.
.PARAMETER WebhookUrl
Standard HTTPS webhook URL.
.PARAMETER Id
Subscription ID.
.PARAMETER UserAccountId
User account used to subscribe lead data.
.PARAMETER AdAccountId
The Ad Account ID that this lead form belongs to.
.PARAMETER ApiVersion
API version.
.PARAMETER CryptographicKey
Base64 encoded key for client to decrypt lead data.
.PARAMETER CryptographicAlgorithm
Lead data encryption algorithm.
.PARAMETER CreatedTime
Lead form creation time. Unix timestamp in milliseconds.
.OUTPUTS

AdAccountGetSubscriptionResponse<PSCustomObject>
#>

function Initialize-AdAccountGetSubscriptionResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${LeadFormId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebhookUrl},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${UserAccountId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AdAccountId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ApiVersion},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CryptographicKey},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CryptographicAlgorithm},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CreatedTime}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AdAccountGetSubscriptionResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "lead_form_id" = ${LeadFormId}
            "webhook_url" = ${WebhookUrl}
            "id" = ${Id}
            "user_account_id" = ${UserAccountId}
            "ad_account_id" = ${AdAccountId}
            "api_version" = ${ApiVersion}
            "cryptographic_key" = ${CryptographicKey}
            "cryptographic_algorithm" = ${CryptographicAlgorithm}
            "created_time" = ${CreatedTime}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AdAccountGetSubscriptionResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to AdAccountGetSubscriptionResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AdAccountGetSubscriptionResponse<PSCustomObject>
#>
function ConvertFrom-JsonToAdAccountGetSubscriptionResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AdAccountGetSubscriptionResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AdAccountGetSubscriptionResponse
        $AllProperties = ("lead_form_id", "webhook_url", "id", "user_account_id", "ad_account_id", "api_version", "cryptographic_key", "cryptographic_algorithm", "created_time")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lead_form_id"))) { #optional property not found
            $LeadFormId = $null
        } else {
            $LeadFormId = $JsonParameters.PSobject.Properties["lead_form_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "webhook_url"))) { #optional property not found
            $WebhookUrl = $null
        } else {
            $WebhookUrl = $JsonParameters.PSobject.Properties["webhook_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "user_account_id"))) { #optional property not found
            $UserAccountId = $null
        } else {
            $UserAccountId = $JsonParameters.PSobject.Properties["user_account_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_account_id"))) { #optional property not found
            $AdAccountId = $null
        } else {
            $AdAccountId = $JsonParameters.PSobject.Properties["ad_account_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "api_version"))) { #optional property not found
            $ApiVersion = $null
        } else {
            $ApiVersion = $JsonParameters.PSobject.Properties["api_version"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cryptographic_key"))) { #optional property not found
            $CryptographicKey = $null
        } else {
            $CryptographicKey = $JsonParameters.PSobject.Properties["cryptographic_key"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cryptographic_algorithm"))) { #optional property not found
            $CryptographicAlgorithm = $null
        } else {
            $CryptographicAlgorithm = $JsonParameters.PSobject.Properties["cryptographic_algorithm"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created_time"))) { #optional property not found
            $CreatedTime = $null
        } else {
            $CreatedTime = $JsonParameters.PSobject.Properties["created_time"].value
        }

        $PSO = [PSCustomObject]@{
            "lead_form_id" = ${LeadFormId}
            "webhook_url" = ${WebhookUrl}
            "id" = ${Id}
            "user_account_id" = ${UserAccountId}
            "ad_account_id" = ${AdAccountId}
            "api_version" = ${ApiVersion}
            "cryptographic_key" = ${CryptographicKey}
            "cryptographic_algorithm" = ${CryptographicAlgorithm}
            "created_time" = ${CreatedTime}
        }

        return $PSO
    }

}

