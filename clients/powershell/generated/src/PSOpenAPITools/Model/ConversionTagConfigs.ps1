#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AemEnabled
Whether Automatic Enhanced Match email is enabled. See <a href=""https://help.pinterest.com/en/business/article/enhanced-match"" target=""_blank"">Enhanced match</a> for more information.
.PARAMETER MdFrequency
Metadata ingestion frequency.
.PARAMETER AemFnlnEnabled
Whether Automatic Enhanced Match name is enabled. See <a href=""https://help.pinterest.com/en/business/article/enhanced-match"" target=""_blank"">Enhanced match</a> for more information.
.PARAMETER AemPhEnabled
Whether Automatic Enhanced Match phone is enabled. See <a href=""https://help.pinterest.com/en/business/article/enhanced-match"" target=""_blank"">Enhanced match</a> for more information.
.PARAMETER AemGeEnabled
Whether Automatic Enhanced Match gender is enabled. See <a href=""https://help.pinterest.com/en/business/article/enhanced-match"" target=""_blank"">Enhanced match</a> for more information.
.PARAMETER AemDbEnabled
Whether Automatic Enhanced Match birthdate is enabled. See <a href=""https://help.pinterest.com/en/business/article/enhanced-match"" target=""_blank"">Enhanced match</a> for more information.
.PARAMETER AemLocEnabled
Whether Automatic Enhanced Match location is enabled. See <a href=""https://help.pinterest.com/en/business/article/enhanced-match"" target=""_blank"">Enhanced match</a> for more information.
.OUTPUTS

ConversionTagConfigs<PSCustomObject>
#>

function Initialize-ConversionTagConfigs {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AemEnabled} = $false,
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${MdFrequency} = 1,
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AemFnlnEnabled} = $false,
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AemPhEnabled} = $false,
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AemGeEnabled} = $false,
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AemDbEnabled} = $false,
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AemLocEnabled} = $false
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ConversionTagConfigs' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "aem_enabled" = ${AemEnabled}
            "md_frequency" = ${MdFrequency}
            "aem_fnln_enabled" = ${AemFnlnEnabled}
            "aem_ph_enabled" = ${AemPhEnabled}
            "aem_ge_enabled" = ${AemGeEnabled}
            "aem_db_enabled" = ${AemDbEnabled}
            "aem_loc_enabled" = ${AemLocEnabled}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ConversionTagConfigs<PSCustomObject>

.DESCRIPTION

Convert from JSON to ConversionTagConfigs<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ConversionTagConfigs<PSCustomObject>
#>
function ConvertFrom-JsonToConversionTagConfigs {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ConversionTagConfigs' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ConversionTagConfigs
        $AllProperties = ("aem_enabled", "md_frequency", "aem_fnln_enabled", "aem_ph_enabled", "aem_ge_enabled", "aem_db_enabled", "aem_loc_enabled")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aem_enabled"))) { #optional property not found
            $AemEnabled = $null
        } else {
            $AemEnabled = $JsonParameters.PSobject.Properties["aem_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "md_frequency"))) { #optional property not found
            $MdFrequency = $null
        } else {
            $MdFrequency = $JsonParameters.PSobject.Properties["md_frequency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aem_fnln_enabled"))) { #optional property not found
            $AemFnlnEnabled = $null
        } else {
            $AemFnlnEnabled = $JsonParameters.PSobject.Properties["aem_fnln_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aem_ph_enabled"))) { #optional property not found
            $AemPhEnabled = $null
        } else {
            $AemPhEnabled = $JsonParameters.PSobject.Properties["aem_ph_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aem_ge_enabled"))) { #optional property not found
            $AemGeEnabled = $null
        } else {
            $AemGeEnabled = $JsonParameters.PSobject.Properties["aem_ge_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aem_db_enabled"))) { #optional property not found
            $AemDbEnabled = $null
        } else {
            $AemDbEnabled = $JsonParameters.PSobject.Properties["aem_db_enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aem_loc_enabled"))) { #optional property not found
            $AemLocEnabled = $null
        } else {
            $AemLocEnabled = $JsonParameters.PSobject.Properties["aem_loc_enabled"].value
        }

        $PSO = [PSCustomObject]@{
            "aem_enabled" = ${AemEnabled}
            "md_frequency" = ${MdFrequency}
            "aem_fnln_enabled" = ${AemFnlnEnabled}
            "aem_ph_enabled" = ${AemPhEnabled}
            "aem_ge_enabled" = ${AemGeEnabled}
            "aem_db_enabled" = ${AemDbEnabled}
            "aem_loc_enabled" = ${AemLocEnabled}
        }

        return $PSO
    }

}

