#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The main hotel image

.PARAMETER Link
<p><= 2000 characters</p> <p>The link to the main hotel image. Image should be at least 75x75 pixels to avoid errors. Use the additional_image_link field to add more images of your hotel. The URL of your main_image.link must be accessible by the Pinterest user-agent, and send the accurate image. Please make sure there is no template or placeholder image at the link. Must start with http:// or https://.</p>
.PARAMETER Tag
Tag appended to the image that identifies image category or details. There can be multiple tags associated with an image
.OUTPUTS

CatalogsHotelAttributesAllOfMainImage<PSCustomObject>
#>

function Initialize-CatalogsHotelAttributesAllOfMainImage {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Link},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Tag}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsHotelAttributesAllOfMainImage' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "link" = ${Link}
            "tag" = ${Tag}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsHotelAttributesAllOfMainImage<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsHotelAttributesAllOfMainImage<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsHotelAttributesAllOfMainImage<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsHotelAttributesAllOfMainImage {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsHotelAttributesAllOfMainImage' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsHotelAttributesAllOfMainImage
        $AllProperties = ("link", "tag")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "link"))) { #optional property not found
            $Link = $null
        } else {
            $Link = $JsonParameters.PSobject.Properties["link"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tag"))) { #optional property not found
            $Tag = $null
        } else {
            $Tag = $JsonParameters.PSobject.Properties["tag"].value
        }

        $PSO = [PSCustomObject]@{
            "link" = ${Link}
            "tag" = ${Tag}
        }

        return $PSO
    }

}

