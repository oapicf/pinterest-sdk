#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

An item to be created

.PARAMETER ItemId
The catalog item id in the merchant namespace
.PARAMETER Operation
No description available.
.PARAMETER Attributes
No description available.
.OUTPUTS

CatalogsCreateRetailItem<PSCustomObject>
#>

function Initialize-CatalogsCreateRetailItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ItemId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("CREATE")]
        [String]
        ${Operation},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Attributes}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogsCreateRetailItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $ItemId) {
            throw "invalid value for 'ItemId', 'ItemId' cannot be null."
        }

        if ($null -eq $Operation) {
            throw "invalid value for 'Operation', 'Operation' cannot be null."
        }

        if ($null -eq $Attributes) {
            throw "invalid value for 'Attributes', 'Attributes' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "item_id" = ${ItemId}
            "operation" = ${Operation}
            "attributes" = ${Attributes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogsCreateRetailItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogsCreateRetailItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogsCreateRetailItem<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogsCreateRetailItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogsCreateRetailItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogsCreateRetailItem
        $AllProperties = ("item_id", "operation", "attributes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'item_id' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "item_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'item_id' missing."
        } else {
            $ItemId = $JsonParameters.PSobject.Properties["item_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "operation"))) {
            throw "Error! JSON cannot be serialized due to the required property 'operation' missing."
        } else {
            $Operation = $JsonParameters.PSobject.Properties["operation"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attributes"))) {
            throw "Error! JSON cannot be serialized due to the required property 'attributes' missing."
        } else {
            $Attributes = $JsonParameters.PSobject.Properties["attributes"].value
        }

        $PSO = [PSCustomObject]@{
            "item_id" = ${ItemId}
            "operation" = ${Operation}
            "attributes" = ${Attributes}
        }

        return $PSO
    }

}

