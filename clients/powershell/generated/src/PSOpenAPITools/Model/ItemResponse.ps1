#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Object describing an item record

.PARAMETER Json

JSON object

.OUTPUTS

ItemResponse<PSCustomObject>
#>
function ConvertFrom-JsonToItemResponse {
    [CmdletBinding()]
    Param (
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        $match = 0
        $matchType = $null
        $matchInstance = $null

        $JsonData = ConvertFrom-Json -InputObject $Json
        # check if the discriminator value is 'CREATIVE_ASSETS'
        if ($JsonData.PSobject.Properties["catalog_type"].value -eq "CREATIVE_ASSETS") {
            # try to match CatalogsCreativeAssetsItemErrorResponse defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCatalogsCreativeAssetsItemErrorResponse $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CatalogsCreativeAssetsItemErrorResponse"
                        return [PSCustomObject]@{
                            "ActualType" = ${matchType}
                            "ActualInstance" = ${matchInstance}
                            "anyOfSchemas" = @("ItemResponseAnyOf", "ItemResponseAnyOf1")
                        }
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf with the discriminator lookup, proceed to the next one
                Write-Debug "Failed to match 'CatalogsCreativeAssetsItemErrorResponse' defined in anyOf (ItemResponse) using the discriminator lookup (CREATIVE_ASSETS). Proceeding with the typical anyOf type matching."
            }
        }

        # check if the discriminator value is 'HOTEL'
        if ($JsonData.PSobject.Properties["catalog_type"].value -eq "HOTEL") {
            # try to match CatalogsHotelItemErrorResponse defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCatalogsHotelItemErrorResponse $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CatalogsHotelItemErrorResponse"
                        return [PSCustomObject]@{
                            "ActualType" = ${matchType}
                            "ActualInstance" = ${matchInstance}
                            "anyOfSchemas" = @("ItemResponseAnyOf", "ItemResponseAnyOf1")
                        }
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf with the discriminator lookup, proceed to the next one
                Write-Debug "Failed to match 'CatalogsHotelItemErrorResponse' defined in anyOf (ItemResponse) using the discriminator lookup (HOTEL). Proceeding with the typical anyOf type matching."
            }
        }

        # check if the discriminator value is 'RETAIL'
        if ($JsonData.PSobject.Properties["catalog_type"].value -eq "RETAIL") {
            # try to match CatalogsRetailItemErrorResponse defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToCatalogsRetailItemErrorResponse $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "CatalogsRetailItemErrorResponse"
                        return [PSCustomObject]@{
                            "ActualType" = ${matchType}
                            "ActualInstance" = ${matchInstance}
                            "anyOfSchemas" = @("ItemResponseAnyOf", "ItemResponseAnyOf1")
                        }
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf with the discriminator lookup, proceed to the next one
                Write-Debug "Failed to match 'CatalogsRetailItemErrorResponse' defined in anyOf (ItemResponse) using the discriminator lookup (RETAIL). Proceeding with the typical anyOf type matching."
            }
        }

        # check if the discriminator value is 'ItemResponse_anyOf'
        if ($JsonData.PSobject.Properties["catalog_type"].value -eq "ItemResponse_anyOf") {
            # try to match ItemResponseAnyOf defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToItemResponseAnyOf $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ItemResponseAnyOf"
                        return [PSCustomObject]@{
                            "ActualType" = ${matchType}
                            "ActualInstance" = ${matchInstance}
                            "anyOfSchemas" = @("ItemResponseAnyOf", "ItemResponseAnyOf1")
                        }
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf with the discriminator lookup, proceed to the next one
                Write-Debug "Failed to match 'ItemResponseAnyOf' defined in anyOf (ItemResponse) using the discriminator lookup (ItemResponse_anyOf). Proceeding with the typical anyOf type matching."
            }
        }

        # check if the discriminator value is 'ItemResponse_anyOf_1'
        if ($JsonData.PSobject.Properties["catalog_type"].value -eq "ItemResponse_anyOf_1") {
            # try to match ItemResponseAnyOf1 defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToItemResponseAnyOf1 $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ItemResponseAnyOf1"
                        return [PSCustomObject]@{
                            "ActualType" = ${matchType}
                            "ActualInstance" = ${matchInstance}
                            "anyOfSchemas" = @("ItemResponseAnyOf", "ItemResponseAnyOf1")
                        }
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf with the discriminator lookup, proceed to the next one
                Write-Debug "Failed to match 'ItemResponseAnyOf1' defined in anyOf (ItemResponse) using the discriminator lookup (ItemResponse_anyOf_1). Proceeding with the typical anyOf type matching."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ItemResponseAnyOf defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToItemResponseAnyOf $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ItemResponseAnyOf"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ItemResponseAnyOf' defined in anyOf (ItemResponse). Proceeding to the next one if any."
            }
        }

        if ($match -ne 0) { # no match yet
            # try to match ItemResponseAnyOf1 defined in the anyOf schemas
            try {
                $matchInstance = ConvertFrom-JsonToItemResponseAnyOf1 $Json

                foreach($property in $matchInstance.PsObject.Properties) {
                    if ($null -ne $property.Value) {
                        $matchType = "ItemResponseAnyOf1"
                        $match++
                        break
                    }
                }
            } catch {
                # fail to match the schema defined in anyOf, proceed to the next one
                Write-Debug "Failed to match 'ItemResponseAnyOf1' defined in anyOf (ItemResponse). Proceeding to the next one if any."
            }
        }

        if ($match -eq 1) {
            return [PSCustomObject]@{
                "ActualType" = ${matchType}
                "ActualInstance" = ${matchInstance}
                "anyOfSchemas" = @("ItemResponseAnyOf", "ItemResponseAnyOf1")
            }
        } else {
            throw "Error! The JSON payload doesn't matches any type defined in anyOf schemas ([ItemResponseAnyOf, ItemResponseAnyOf1]). JSON Payload: $($Json)"
        }
    }
}

