#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Schema for log sent from an integration application.

.PARAMETER ClientTimestamp
Timestamp in milliseconds of when the log was executed at the client.
.PARAMETER EventType
Log event type
.PARAMETER LogLevel
Log level type
.PARAMETER ExternalBusinessId
No description available.
.PARAMETER AdvertiserId
No description available.
.PARAMETER MerchantId
No description available.
.PARAMETER TagId
No description available.
.PARAMETER FeedProfileId
No description available.
.PARAMETER Message
Explanation of the event that occured.
.PARAMETER AppVersionNumber
Version number of the integration application.
.PARAMETER PlatformVersionNumber
Version number of the platform the integration application is running on.
.PARAMETER VarError
No description available.
.PARAMETER Request
No description available.
.OUTPUTS

IntegrationLog<PSCustomObject>
#>

function Initialize-IntegrationLog {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${ClientTimestamp},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("APP", "API")]
        [String]
        ${EventType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("INFO", "WARN", "ERROR")]
        [String]
        ${LogLevel},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ExternalBusinessId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AdvertiserId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MerchantId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TagId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FeedProfileId},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AppVersionNumber},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PlatformVersionNumber},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${VarError},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Request}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => IntegrationLog' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $ClientTimestamp) {
            throw "invalid value for 'ClientTimestamp', 'ClientTimestamp' cannot be null."
        }

        if ($null -eq $EventType) {
            throw "invalid value for 'EventType', 'EventType' cannot be null."
        }

        if ($null -eq $LogLevel) {
            throw "invalid value for 'LogLevel', 'LogLevel' cannot be null."
        }

        if (!$ExternalBusinessId -and $ExternalBusinessId.length -gt 2048) {
            throw "invalid value for 'ExternalBusinessId', the character length must be smaller than or equal to 2048."
        }

        if (!$AdvertiserId -and $AdvertiserId.length -gt 128) {
            throw "invalid value for 'AdvertiserId', the character length must be smaller than or equal to 128."
        }

        if (!$MerchantId -and $MerchantId.length -gt 128) {
            throw "invalid value for 'MerchantId', the character length must be smaller than or equal to 128."
        }

        if (!$TagId -and $TagId.length -gt 128) {
            throw "invalid value for 'TagId', the character length must be smaller than or equal to 128."
        }

        if (!$FeedProfileId -and $FeedProfileId.length -gt 128) {
            throw "invalid value for 'FeedProfileId', the character length must be smaller than or equal to 128."
        }

        if (!$Message -and $Message.length -gt 2048) {
            throw "invalid value for 'Message', the character length must be smaller than or equal to 2048."
        }

        if (!$AppVersionNumber -and $AppVersionNumber.length -gt 20) {
            throw "invalid value for 'AppVersionNumber', the character length must be smaller than or equal to 20."
        }

        if (!$PlatformVersionNumber -and $PlatformVersionNumber.length -gt 20) {
            throw "invalid value for 'PlatformVersionNumber', the character length must be smaller than or equal to 20."
        }


        $PSO = [PSCustomObject]@{
            "client_timestamp" = ${ClientTimestamp}
            "event_type" = ${EventType}
            "log_level" = ${LogLevel}
            "external_business_id" = ${ExternalBusinessId}
            "advertiser_id" = ${AdvertiserId}
            "merchant_id" = ${MerchantId}
            "tag_id" = ${TagId}
            "feed_profile_id" = ${FeedProfileId}
            "message" = ${Message}
            "app_version_number" = ${AppVersionNumber}
            "platform_version_number" = ${PlatformVersionNumber}
            "error" = ${VarError}
            "request" = ${Request}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IntegrationLog<PSCustomObject>

.DESCRIPTION

Convert from JSON to IntegrationLog<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IntegrationLog<PSCustomObject>
#>
function ConvertFrom-JsonToIntegrationLog {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => IntegrationLog' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IntegrationLog
        $AllProperties = ("client_timestamp", "event_type", "log_level", "external_business_id", "advertiser_id", "merchant_id", "tag_id", "feed_profile_id", "message", "app_version_number", "platform_version_number", "error", "request")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'client_timestamp' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "client_timestamp"))) {
            throw "Error! JSON cannot be serialized due to the required property 'client_timestamp' missing."
        } else {
            $ClientTimestamp = $JsonParameters.PSobject.Properties["client_timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "event_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'event_type' missing."
        } else {
            $EventType = $JsonParameters.PSobject.Properties["event_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "log_level"))) {
            throw "Error! JSON cannot be serialized due to the required property 'log_level' missing."
        } else {
            $LogLevel = $JsonParameters.PSobject.Properties["log_level"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "external_business_id"))) { #optional property not found
            $ExternalBusinessId = $null
        } else {
            $ExternalBusinessId = $JsonParameters.PSobject.Properties["external_business_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "advertiser_id"))) { #optional property not found
            $AdvertiserId = $null
        } else {
            $AdvertiserId = $JsonParameters.PSobject.Properties["advertiser_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "merchant_id"))) { #optional property not found
            $MerchantId = $null
        } else {
            $MerchantId = $JsonParameters.PSobject.Properties["merchant_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tag_id"))) { #optional property not found
            $TagId = $null
        } else {
            $TagId = $JsonParameters.PSobject.Properties["tag_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "feed_profile_id"))) { #optional property not found
            $FeedProfileId = $null
        } else {
            $FeedProfileId = $JsonParameters.PSobject.Properties["feed_profile_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "app_version_number"))) { #optional property not found
            $AppVersionNumber = $null
        } else {
            $AppVersionNumber = $JsonParameters.PSobject.Properties["app_version_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "platform_version_number"))) { #optional property not found
            $PlatformVersionNumber = $null
        } else {
            $PlatformVersionNumber = $JsonParameters.PSobject.Properties["platform_version_number"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "error"))) { #optional property not found
            $VarError = $null
        } else {
            $VarError = $JsonParameters.PSobject.Properties["error"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "request"))) { #optional property not found
            $Request = $null
        } else {
            $Request = $JsonParameters.PSobject.Properties["request"].value
        }

        $PSO = [PSCustomObject]@{
            "client_timestamp" = ${ClientTimestamp}
            "event_type" = ${EventType}
            "log_level" = ${LogLevel}
            "external_business_id" = ${ExternalBusinessId}
            "advertiser_id" = ${AdvertiserId}
            "merchant_id" = ${MerchantId}
            "tag_id" = ${TagId}
            "feed_profile_id" = ${FeedProfileId}
            "message" = ${Message}
            "app_version_number" = ${AppVersionNumber}
            "platform_version_number" = ${PlatformVersionNumber}
            "error" = ${VarError}
            "request" = ${Request}
        }

        return $PSO
    }

}

