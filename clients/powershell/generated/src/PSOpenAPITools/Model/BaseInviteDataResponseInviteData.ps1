#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Metadata for the invite/request.

.PARAMETER InviteExpiration
The date and time when the invite/request will expire. Returned in milliseconds.
.PARAMETER InviteStatus
The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
.PARAMETER InviteType
The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
.PARAMETER LastUpdatedTime
The date and time the invite/request was last updated. Returned in milliseconds.
.PARAMETER SentAt
The date and time the invite/request was sent/created. Returned in milliseconds.
.OUTPUTS

BaseInviteDataResponseInviteData<PSCustomObject>
#>

function Initialize-BaseInviteDataResponseInviteData {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${InviteExpiration},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InviteStatus},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InviteType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LastUpdatedTime},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${SentAt}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BaseInviteDataResponseInviteData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "invite_expiration" = ${InviteExpiration}
            "invite_status" = ${InviteStatus}
            "invite_type" = ${InviteType}
            "last_updated_time" = ${LastUpdatedTime}
            "sent_at" = ${SentAt}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BaseInviteDataResponseInviteData<PSCustomObject>

.DESCRIPTION

Convert from JSON to BaseInviteDataResponseInviteData<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BaseInviteDataResponseInviteData<PSCustomObject>
#>
function ConvertFrom-JsonToBaseInviteDataResponseInviteData {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BaseInviteDataResponseInviteData' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BaseInviteDataResponseInviteData
        $AllProperties = ("invite_expiration", "invite_status", "invite_type", "last_updated_time", "sent_at")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invite_expiration"))) { #optional property not found
            $InviteExpiration = $null
        } else {
            $InviteExpiration = $JsonParameters.PSobject.Properties["invite_expiration"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invite_status"))) { #optional property not found
            $InviteStatus = $null
        } else {
            $InviteStatus = $JsonParameters.PSobject.Properties["invite_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invite_type"))) { #optional property not found
            $InviteType = $null
        } else {
            $InviteType = $JsonParameters.PSobject.Properties["invite_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "last_updated_time"))) { #optional property not found
            $LastUpdatedTime = $null
        } else {
            $LastUpdatedTime = $JsonParameters.PSobject.Properties["last_updated_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sent_at"))) { #optional property not found
            $SentAt = $null
        } else {
            $SentAt = $JsonParameters.PSobject.Properties["sent_at"].value
        }

        $PSO = [PSCustomObject]@{
            "invite_expiration" = ${InviteExpiration}
            "invite_status" = ${InviteStatus}
            "invite_type" = ${InviteType}
            "last_updated_time" = ${LastUpdatedTime}
            "sent_at" = ${SentAt}
        }

        return $PSO
    }

}

