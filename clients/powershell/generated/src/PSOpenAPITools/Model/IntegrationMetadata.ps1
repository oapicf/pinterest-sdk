#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Integration metadata

.PARAMETER Id
No description available.
.PARAMETER ExternalBusinessId
No description available.
.PARAMETER ConnectedMerchantId
No description available.
.PARAMETER ConnectedUserId
No description available.
.PARAMETER ConnectedAdvertiserId
No description available.
.PARAMETER ConnectedLbaId
No description available.
.PARAMETER ConnectedTagId
No description available.
.PARAMETER PartnerAccessTokenExpiry
No description available.
.PARAMETER PartnerRefreshTokenExpiry
No description available.
.PARAMETER Scopes
No description available.
.PARAMETER CreatedTimestamp
No description available.
.PARAMETER UpdatedTimestamp
No description available.
.PARAMETER AdditionalId1
No description available.
.PARAMETER PartnerMetadata
No description available.
.OUTPUTS

IntegrationMetadata<PSCustomObject>
#>

function Initialize-IntegrationMetadata {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ExternalBusinessId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectedMerchantId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectedUserId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectedAdvertiserId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectedLbaId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectedTagId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${PartnerAccessTokenExpiry},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${PartnerRefreshTokenExpiry},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Scopes},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${CreatedTimestamp},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${UpdatedTimestamp},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AdditionalId1},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PartnerMetadata}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => IntegrationMetadata' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "external_business_id" = ${ExternalBusinessId}
            "connected_merchant_id" = ${ConnectedMerchantId}
            "connected_user_id" = ${ConnectedUserId}
            "connected_advertiser_id" = ${ConnectedAdvertiserId}
            "connected_lba_id" = ${ConnectedLbaId}
            "connected_tag_id" = ${ConnectedTagId}
            "partner_access_token_expiry" = ${PartnerAccessTokenExpiry}
            "partner_refresh_token_expiry" = ${PartnerRefreshTokenExpiry}
            "scopes" = ${Scopes}
            "created_timestamp" = ${CreatedTimestamp}
            "updated_timestamp" = ${UpdatedTimestamp}
            "additional_id_1" = ${AdditionalId1}
            "partner_metadata" = ${PartnerMetadata}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IntegrationMetadata<PSCustomObject>

.DESCRIPTION

Convert from JSON to IntegrationMetadata<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IntegrationMetadata<PSCustomObject>
#>
function ConvertFrom-JsonToIntegrationMetadata {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => IntegrationMetadata' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IntegrationMetadata
        $AllProperties = ("id", "external_business_id", "connected_merchant_id", "connected_user_id", "connected_advertiser_id", "connected_lba_id", "connected_tag_id", "partner_access_token_expiry", "partner_refresh_token_expiry", "scopes", "created_timestamp", "updated_timestamp", "additional_id_1", "partner_metadata")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "external_business_id"))) { #optional property not found
            $ExternalBusinessId = $null
        } else {
            $ExternalBusinessId = $JsonParameters.PSobject.Properties["external_business_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "connected_merchant_id"))) { #optional property not found
            $ConnectedMerchantId = $null
        } else {
            $ConnectedMerchantId = $JsonParameters.PSobject.Properties["connected_merchant_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "connected_user_id"))) { #optional property not found
            $ConnectedUserId = $null
        } else {
            $ConnectedUserId = $JsonParameters.PSobject.Properties["connected_user_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "connected_advertiser_id"))) { #optional property not found
            $ConnectedAdvertiserId = $null
        } else {
            $ConnectedAdvertiserId = $JsonParameters.PSobject.Properties["connected_advertiser_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "connected_lba_id"))) { #optional property not found
            $ConnectedLbaId = $null
        } else {
            $ConnectedLbaId = $JsonParameters.PSobject.Properties["connected_lba_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "connected_tag_id"))) { #optional property not found
            $ConnectedTagId = $null
        } else {
            $ConnectedTagId = $JsonParameters.PSobject.Properties["connected_tag_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "partner_access_token_expiry"))) { #optional property not found
            $PartnerAccessTokenExpiry = $null
        } else {
            $PartnerAccessTokenExpiry = $JsonParameters.PSobject.Properties["partner_access_token_expiry"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "partner_refresh_token_expiry"))) { #optional property not found
            $PartnerRefreshTokenExpiry = $null
        } else {
            $PartnerRefreshTokenExpiry = $JsonParameters.PSobject.Properties["partner_refresh_token_expiry"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "scopes"))) { #optional property not found
            $Scopes = $null
        } else {
            $Scopes = $JsonParameters.PSobject.Properties["scopes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created_timestamp"))) { #optional property not found
            $CreatedTimestamp = $null
        } else {
            $CreatedTimestamp = $JsonParameters.PSobject.Properties["created_timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "updated_timestamp"))) { #optional property not found
            $UpdatedTimestamp = $null
        } else {
            $UpdatedTimestamp = $JsonParameters.PSobject.Properties["updated_timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "additional_id_1"))) { #optional property not found
            $AdditionalId1 = $null
        } else {
            $AdditionalId1 = $JsonParameters.PSobject.Properties["additional_id_1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "partner_metadata"))) { #optional property not found
            $PartnerMetadata = $null
        } else {
            $PartnerMetadata = $JsonParameters.PSobject.Properties["partner_metadata"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "external_business_id" = ${ExternalBusinessId}
            "connected_merchant_id" = ${ConnectedMerchantId}
            "connected_user_id" = ${ConnectedUserId}
            "connected_advertiser_id" = ${ConnectedAdvertiserId}
            "connected_lba_id" = ${ConnectedLbaId}
            "connected_tag_id" = ${ConnectedTagId}
            "partner_access_token_expiry" = ${PartnerAccessTokenExpiry}
            "partner_refresh_token_expiry" = ${PartnerRefreshTokenExpiry}
            "scopes" = ${Scopes}
            "created_timestamp" = ${CreatedTimestamp}
            "updated_timestamp" = ${UpdatedTimestamp}
            "additional_id_1" = ${AdditionalId1}
            "partner_metadata" = ${PartnerMetadata}
        }

        return $PSO
    }

}

