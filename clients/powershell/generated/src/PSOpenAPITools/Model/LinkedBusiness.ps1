#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Username
Username
.PARAMETER ImageSmallUrl
image_small_url
.PARAMETER ImageMediumUrl
image_medium_url
.PARAMETER ImageLargeUrl
image_large_url
.PARAMETER ImageXlargeUrl
image_xlarge_url
.OUTPUTS

LinkedBusiness<PSCustomObject>
#>

function Initialize-LinkedBusiness {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Username},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ImageSmallUrl},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ImageMediumUrl},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ImageLargeUrl},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ImageXlargeUrl}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => LinkedBusiness' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "username" = ${Username}
            "image_small_url" = ${ImageSmallUrl}
            "image_medium_url" = ${ImageMediumUrl}
            "image_large_url" = ${ImageLargeUrl}
            "image_xlarge_url" = ${ImageXlargeUrl}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to LinkedBusiness<PSCustomObject>

.DESCRIPTION

Convert from JSON to LinkedBusiness<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

LinkedBusiness<PSCustomObject>
#>
function ConvertFrom-JsonToLinkedBusiness {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => LinkedBusiness' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in LinkedBusiness
        $AllProperties = ("username", "image_small_url", "image_medium_url", "image_large_url", "image_xlarge_url")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "username"))) { #optional property not found
            $Username = $null
        } else {
            $Username = $JsonParameters.PSobject.Properties["username"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "image_small_url"))) { #optional property not found
            $ImageSmallUrl = $null
        } else {
            $ImageSmallUrl = $JsonParameters.PSobject.Properties["image_small_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "image_medium_url"))) { #optional property not found
            $ImageMediumUrl = $null
        } else {
            $ImageMediumUrl = $JsonParameters.PSobject.Properties["image_medium_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "image_large_url"))) { #optional property not found
            $ImageLargeUrl = $null
        } else {
            $ImageLargeUrl = $JsonParameters.PSobject.Properties["image_large_url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "image_xlarge_url"))) { #optional property not found
            $ImageXlargeUrl = $null
        } else {
            $ImageXlargeUrl = $JsonParameters.PSobject.Properties["image_xlarge_url"].value
        }

        $PSO = [PSCustomObject]@{
            "username" = ${Username}
            "image_small_url" = ${ImageSmallUrl}
            "image_medium_url" = ${ImageMediumUrl}
            "image_large_url" = ${ImageLargeUrl}
            "image_xlarge_url" = ${ImageXlargeUrl}
        }

        return $PSO
    }

}

