#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AttributionWindows
No description available.
.PARAMETER ConversionEvent
No description available.
.PARAMETER ConversionTagId
No description available.
.PARAMETER CpaGoalValueInMicroCurrency
No description available.
.PARAMETER IsRoasOptimized
ROAS optimization is not supported
.PARAMETER LearningModeType
Conversion learning model type
.OUTPUTS

OptimizationGoalMetadataConversionTagV3GoalMetadata<PSCustomObject>
#>

function Initialize-OptimizationGoalMetadataConversionTagV3GoalMetadata {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${AttributionWindows},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PAGE_VISIT", "SIGNUP", "CHECKOUT", "CUSTOM", "VIEW_CATEGORY", "SEARCH", "ADD_TO_CART", "WATCH_VIDEO", "LEAD", "APP_INSTALL")]
        [String]
        ${ConversionEvent},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^[0-9]+$")]
        [String]
        ${ConversionTagId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^[0-9]+$")]
        [String]
        ${CpaGoalValueInMicroCurrency},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsRoasOptimized},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("NOT_ACTIVE", "ACTIVE", "")]
        [String]
        ${LearningModeType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => OptimizationGoalMetadataConversionTagV3GoalMetadata' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "attribution_windows" = ${AttributionWindows}
            "conversion_event" = ${ConversionEvent}
            "conversion_tag_id" = ${ConversionTagId}
            "cpa_goal_value_in_micro_currency" = ${CpaGoalValueInMicroCurrency}
            "is_roas_optimized" = ${IsRoasOptimized}
            "learning_mode_type" = ${LearningModeType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OptimizationGoalMetadataConversionTagV3GoalMetadata<PSCustomObject>

.DESCRIPTION

Convert from JSON to OptimizationGoalMetadataConversionTagV3GoalMetadata<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OptimizationGoalMetadataConversionTagV3GoalMetadata<PSCustomObject>
#>
function ConvertFrom-JsonToOptimizationGoalMetadataConversionTagV3GoalMetadata {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => OptimizationGoalMetadataConversionTagV3GoalMetadata' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OptimizationGoalMetadataConversionTagV3GoalMetadata
        $AllProperties = ("attribution_windows", "conversion_event", "conversion_tag_id", "cpa_goal_value_in_micro_currency", "is_roas_optimized", "learning_mode_type")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attribution_windows"))) { #optional property not found
            $AttributionWindows = $null
        } else {
            $AttributionWindows = $JsonParameters.PSobject.Properties["attribution_windows"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "conversion_event"))) { #optional property not found
            $ConversionEvent = $null
        } else {
            $ConversionEvent = $JsonParameters.PSobject.Properties["conversion_event"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "conversion_tag_id"))) { #optional property not found
            $ConversionTagId = $null
        } else {
            $ConversionTagId = $JsonParameters.PSobject.Properties["conversion_tag_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cpa_goal_value_in_micro_currency"))) { #optional property not found
            $CpaGoalValueInMicroCurrency = $null
        } else {
            $CpaGoalValueInMicroCurrency = $JsonParameters.PSobject.Properties["cpa_goal_value_in_micro_currency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "is_roas_optimized"))) { #optional property not found
            $IsRoasOptimized = $null
        } else {
            $IsRoasOptimized = $JsonParameters.PSobject.Properties["is_roas_optimized"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "learning_mode_type"))) { #optional property not found
            $LearningModeType = $null
        } else {
            $LearningModeType = $JsonParameters.PSobject.Properties["learning_mode_type"].value
        }

        $PSO = [PSCustomObject]@{
            "attribution_windows" = ${AttributionWindows}
            "conversion_event" = ${ConversionEvent}
            "conversion_tag_id" = ${ConversionTagId}
            "cpa_goal_value_in_micro_currency" = ${CpaGoalValueInMicroCurrency}
            "is_roas_optimized" = ${IsRoasOptimized}
            "learning_mode_type" = ${LearningModeType}
        }

        return $PSO
    }

}

