#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
The ID of the terms of service
.PARAMETER Html
The terms of service content
.PARAMETER HasAccepted
Whether the ad account has accepted terms of service.
.PARAMETER AdAccountId
The ID of the ad account.
.OUTPUTS

TermsOfService<PSCustomObject>
#>

function Initialize-TermsOfService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Html},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${HasAccepted},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AdAccountId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TermsOfService' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "html" = ${Html}
            "has_accepted" = ${HasAccepted}
            "ad_account_id" = ${AdAccountId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TermsOfService<PSCustomObject>

.DESCRIPTION

Convert from JSON to TermsOfService<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TermsOfService<PSCustomObject>
#>
function ConvertFrom-JsonToTermsOfService {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TermsOfService' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TermsOfService
        $AllProperties = ("id", "html", "has_accepted", "ad_account_id")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "html"))) { #optional property not found
            $Html = $null
        } else {
            $Html = $JsonParameters.PSobject.Properties["html"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "has_accepted"))) { #optional property not found
            $HasAccepted = $null
        } else {
            $HasAccepted = $JsonParameters.PSobject.Properties["has_accepted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_account_id"))) { #optional property not found
            $AdAccountId = $null
        } else {
            $AdAccountId = $JsonParameters.PSobject.Properties["ad_account_id"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "html" = ${Html}
            "has_accepted" = ${HasAccepted}
            "ad_account_id" = ${AdAccountId}
        }

        return $PSO
    }

}

