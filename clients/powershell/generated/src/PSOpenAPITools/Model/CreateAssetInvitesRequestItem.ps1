#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Object declaring an asset role update to an invite.

.PARAMETER InviteId
Unique identifier of an invite.
.PARAMETER InviteType
No description available.
.PARAMETER AssetIdToPermissions
An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
.OUTPUTS

CreateAssetInvitesRequestItem<PSCustomObject>
#>

function Initialize-CreateAssetInvitesRequestItem {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${InviteId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("MEMBER_INVITE", "PARTNER_INVITE", "PARTNER_REQUEST")]
        [PSCustomObject]
        ${InviteType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${AssetIdToPermissions}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CreateAssetInvitesRequestItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $InviteId) {
            throw "invalid value for 'InviteId', 'InviteId' cannot be null."
        }

        if ($null -eq $InviteType) {
            throw "invalid value for 'InviteType', 'InviteType' cannot be null."
        }

        if ($null -eq $AssetIdToPermissions) {
            throw "invalid value for 'AssetIdToPermissions', 'AssetIdToPermissions' cannot be null."
        }

        if ($AssetIdToPermissions.length -lt 1) {
            throw "invalid value for 'AssetIdToPermissions', number of items must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "invite_id" = ${InviteId}
            "invite_type" = ${InviteType}
            "asset_id_to_permissions" = ${AssetIdToPermissions}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreateAssetInvitesRequestItem<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreateAssetInvitesRequestItem<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreateAssetInvitesRequestItem<PSCustomObject>
#>
function ConvertFrom-JsonToCreateAssetInvitesRequestItem {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CreateAssetInvitesRequestItem' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CreateAssetInvitesRequestItem
        $AllProperties = ("invite_id", "invite_type", "asset_id_to_permissions")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'invite_id' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invite_id"))) {
            throw "Error! JSON cannot be serialized due to the required property 'invite_id' missing."
        } else {
            $InviteId = $JsonParameters.PSobject.Properties["invite_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invite_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'invite_type' missing."
        } else {
            $InviteType = $JsonParameters.PSobject.Properties["invite_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "asset_id_to_permissions"))) {
            throw "Error! JSON cannot be serialized due to the required property 'asset_id_to_permissions' missing."
        } else {
            $AssetIdToPermissions = $JsonParameters.PSobject.Properties["asset_id_to_permissions"].value
        }

        $PSO = [PSCustomObject]@{
            "invite_id" = ${InviteId}
            "invite_type" = ${InviteType}
            "asset_id_to_permissions" = ${AssetIdToPermissions}
        }

        return $PSO
    }

}

