#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Order Line

.PARAMETER Id
Order line ID.
.PARAMETER Type
Always ""orderline"".
.PARAMETER AdAccountId
Ad account ID.
.PARAMETER PurchaseOrderId
Purchase order ID.
.PARAMETER StartTime
Start time. Unix timestamp.
.PARAMETER EndTime
End time. Unix timestamp.
.PARAMETER Budget
Order line budget in micro currency.
.PARAMETER PaidBudget
Order line paid budget in micro currency.
.PARAMETER Status
Order line status.
.PARAMETER Name
Order line name.
.PARAMETER PaidType
Order line paid type.
.OUTPUTS

OrderLines<PSCustomObject>
#>

function Initialize-OrderLines {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AdAccountId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PurchaseOrderId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${StartTime},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${EndTime},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${Budget},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${PaidBudget},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ACTIVE", "PAUSED", "DELETED")]
        [PSCustomObject]
        ${Status},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PAID", "BONUS", "MAKE_GOOD", "TEST", "")]
        [PSCustomObject]
        ${PaidType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => OrderLines' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "type" = ${Type}
            "ad_account_id" = ${AdAccountId}
            "purchase_order_id" = ${PurchaseOrderId}
            "start_time" = ${StartTime}
            "end_time" = ${EndTime}
            "budget" = ${Budget}
            "paid_budget" = ${PaidBudget}
            "status" = ${Status}
            "name" = ${Name}
            "paid_type" = ${PaidType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OrderLines<PSCustomObject>

.DESCRIPTION

Convert from JSON to OrderLines<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OrderLines<PSCustomObject>
#>
function ConvertFrom-JsonToOrderLines {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => OrderLines' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OrderLines
        $AllProperties = ("id", "type", "ad_account_id", "purchase_order_id", "start_time", "end_time", "budget", "paid_budget", "status", "name", "paid_type")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ad_account_id"))) { #optional property not found
            $AdAccountId = $null
        } else {
            $AdAccountId = $JsonParameters.PSobject.Properties["ad_account_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "purchase_order_id"))) { #optional property not found
            $PurchaseOrderId = $null
        } else {
            $PurchaseOrderId = $JsonParameters.PSobject.Properties["purchase_order_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "start_time"))) { #optional property not found
            $StartTime = $null
        } else {
            $StartTime = $JsonParameters.PSobject.Properties["start_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "end_time"))) { #optional property not found
            $EndTime = $null
        } else {
            $EndTime = $JsonParameters.PSobject.Properties["end_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "budget"))) { #optional property not found
            $Budget = $null
        } else {
            $Budget = $JsonParameters.PSobject.Properties["budget"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "paid_budget"))) { #optional property not found
            $PaidBudget = $null
        } else {
            $PaidBudget = $JsonParameters.PSobject.Properties["paid_budget"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "paid_type"))) { #optional property not found
            $PaidType = $null
        } else {
            $PaidType = $JsonParameters.PSobject.Properties["paid_type"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "type" = ${Type}
            "ad_account_id" = ${AdAccountId}
            "purchase_order_id" = ${PurchaseOrderId}
            "start_time" = ${StartTime}
            "end_time" = ${EndTime}
            "budget" = ${Budget}
            "paid_budget" = ${PaidBudget}
            "status" = ${Status}
            "name" = ${Name}
            "paid_type" = ${PaidType}
        }

        return $PSO
    }

}

