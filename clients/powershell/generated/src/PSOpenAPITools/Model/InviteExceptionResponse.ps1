#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

An exception object if there is an error performing the action. Will only be provided if there is an error.

.PARAMETER InviteOrRequestId
Unique identifier of the invite/request.
.PARAMETER Code
Error code associated with the error in performing the action on the invite/request.
.PARAMETER Message
Error message associated with the error in performing the action on the invite/request.
.PARAMETER UsersOrPartnerIds
A list of users' usernames or emails OR a list of partner ids that caused the error.
.OUTPUTS

InviteExceptionResponse<PSCustomObject>
#>

function Initialize-InviteExceptionResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${InviteOrRequestId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Code},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${UsersOrPartnerIds}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => InviteExceptionResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "invite_or_request_id" = ${InviteOrRequestId}
            "code" = ${Code}
            "message" = ${Message}
            "users_or_partner_ids" = ${UsersOrPartnerIds}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InviteExceptionResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to InviteExceptionResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InviteExceptionResponse<PSCustomObject>
#>
function ConvertFrom-JsonToInviteExceptionResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => InviteExceptionResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in InviteExceptionResponse
        $AllProperties = ("invite_or_request_id", "code", "message", "users_or_partner_ids")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invite_or_request_id"))) { #optional property not found
            $InviteOrRequestId = $null
        } else {
            $InviteOrRequestId = $JsonParameters.PSobject.Properties["invite_or_request_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) { #optional property not found
            $Code = $null
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "users_or_partner_ids"))) { #optional property not found
            $UsersOrPartnerIds = $null
        } else {
            $UsersOrPartnerIds = $JsonParameters.PSobject.Properties["users_or_partner_ids"].value
        }

        $PSO = [PSCustomObject]@{
            "invite_or_request_id" = ${InviteOrRequestId}
            "code" = ${Code}
            "message" = ${Message}
            "users_or_partner_ids" = ${UsersOrPartnerIds}
        }

        return $PSO
    }

}

