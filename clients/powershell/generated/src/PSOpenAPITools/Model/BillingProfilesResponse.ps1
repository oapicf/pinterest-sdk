#
# Pinterest REST API
# Pinterest's REST API
# Version: 5.14.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
Billing ID.
.PARAMETER CardType
Type of the card.
.PARAMETER Status
Status of the billing.
.PARAMETER AdvertiserId
Advertiser ID of the billing.
.PARAMETER PaymentMethodBrand
Brand of the payment method.
.OUTPUTS

BillingProfilesResponse<PSCustomObject>
#>

function Initialize-BillingProfilesResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("UNKNOWN", "VISA", "MASTERCARD", "AMERICAN_EXPRESS", "DISCOVER", "ELO")]
        [String]
        ${CardType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("UNSPECIFIED", "VALID", "INVALID", "PENDING", "DELETED", "SECONDARY", "PENDING_SECONDARY")]
        [String]
        ${Status},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^\d+$")]
        [String]
        ${AdvertiserId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("UNKNOWN", "VISA", "MASTERCARD", "AMERICAN_EXPRESS", "DISCOVER", "SOFORT", "DINERS_CLUB", "ELO", "CARTE_BANCAIRE")]
        [String]
        ${PaymentMethodBrand}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BillingProfilesResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "card_type" = ${CardType}
            "status" = ${Status}
            "advertiser_id" = ${AdvertiserId}
            "payment_method_brand" = ${PaymentMethodBrand}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BillingProfilesResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to BillingProfilesResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BillingProfilesResponse<PSCustomObject>
#>
function ConvertFrom-JsonToBillingProfilesResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BillingProfilesResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BillingProfilesResponse
        $AllProperties = ("id", "card_type", "status", "advertiser_id", "payment_method_brand")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "card_type"))) { #optional property not found
            $CardType = $null
        } else {
            $CardType = $JsonParameters.PSobject.Properties["card_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "advertiser_id"))) { #optional property not found
            $AdvertiserId = $null
        } else {
            $AdvertiserId = $JsonParameters.PSobject.Properties["advertiser_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "payment_method_brand"))) { #optional property not found
            $PaymentMethodBrand = $null
        } else {
            $PaymentMethodBrand = $JsonParameters.PSobject.Properties["payment_method_brand"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "card_type" = ${CardType}
            "status" = ${Status}
            "advertiser_id" = ${AdvertiserId}
            "payment_method_brand" = ${PaymentMethodBrand}
        }

        return $PSO
    }

}

