=begin
#Pinterest REST API

#Pinterest's REST API

The version of the OpenAPI document: 5.14.0
Contact: blah+oapicf@cliffano.com
Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for PinterestSdkClient::TargetingSpec
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe PinterestSdkClient::TargetingSpec do
  let(:instance) { PinterestSdkClient::TargetingSpec.new }

  describe 'test an instance of TargetingSpec' do
    it 'should create an instance of TargetingSpec' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(PinterestSdkClient::TargetingSpec)
    end
  end

  describe 'test attribute "age_bucket"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["18-24", "21+", "25-34", "35-44", "45-49", "50-54", "55-64", "65+"])
      # validator.allowable_values.each do |value|
      #   expect { instance.age_bucket = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "apptype"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["android_mobile", "android_tablet", "ipad", "iphone", "web", "web_mobile"])
      # validator.allowable_values.each do |value|
      #   expect { instance.apptype = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "audience_exclude"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "audience_include"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "gender"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["unknown", "male", "female"])
      # validator.allowable_values.each do |value|
      #   expect { instance.gender = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "geo"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "interest"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "locale"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "location"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "shopping_retargeting"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "targeting_strategy"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["CHOOSE_YOUR_OWN", "FIND_NEW_CUSTOMERS", "RECONNECT_WITH_USERS"])
      # validator.allowable_values.each do |value|
      #   expect { instance.targeting_strategy = value }.not_to raise_error
      # end
    end
  end

end
