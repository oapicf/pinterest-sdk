/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GoogleProductCategory1Filter.h
 *
 * 
 */

#ifndef GoogleProductCategory1Filter_H_
#define GoogleProductCategory1Filter_H_



#include "CatalogsProductGroupMultipleStringListCriteria.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GoogleProductCategory1Filter 
{
public:
    GoogleProductCategory1Filter() = default;
    explicit GoogleProductCategory1Filter(boost::property_tree::ptree const& pt);
    virtual ~GoogleProductCategory1Filter() = default;

    GoogleProductCategory1Filter(const GoogleProductCategory1Filter& other) = default; // copy constructor
    GoogleProductCategory1Filter(GoogleProductCategory1Filter&& other) noexcept = default; // move constructor

    GoogleProductCategory1Filter& operator=(const GoogleProductCategory1Filter& other) = default; // copy assignment
    GoogleProductCategory1Filter& operator=(GoogleProductCategory1Filter&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GoogleProductCategory1Filter members

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY1() const;
    void setGOOGLEPRODUCTCATEGORY1(CatalogsProductGroupMultipleStringListCriteria value);

protected:
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_1 = CatalogsProductGroupMultipleStringListCriteria{};
};

std::vector<GoogleProductCategory1Filter> createGoogleProductCategory1FilterVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GoogleProductCategory1Filter>(const GoogleProductCategory1Filter& val) {
    return val.toPropertyTree();
}

template<>
inline GoogleProductCategory1Filter fromPt<GoogleProductCategory1Filter>(const boost::property_tree::ptree& pt) {
    GoogleProductCategory1Filter ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GoogleProductCategory1Filter_H_ */
