/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdvancedAuctionItemsSubmitRecord.h
 *
 * Object describing an item bid option operation
 */

#ifndef AdvancedAuctionItemsSubmitRecord_H_
#define AdvancedAuctionItemsSubmitRecord_H_



#include "Country.h"
#include "AdvancedAuctionItemsSubmitDeleteRecord.h"
#include "AdvancedAuctionItemsSubmitUpsertRecord.h"
#include <string>
#include "Language.h"
#include "AdvancedAuctionBidOptions.h"
#include "UpdateMaskBidOptionField.h"
#include "AdvancedAuctionOperation.h"
#include <vector>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "AdvancedAuctionItemsSubmitUpsertRecord.h"
#include "AdvancedAuctionItemsSubmitDeleteRecord.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Object describing an item bid option operation
/// </summary>
class  AdvancedAuctionItemsSubmitRecord : public AdvancedAuctionItemsSubmitUpsertRecord, public AdvancedAuctionItemsSubmitDeleteRecord
{
public:
    AdvancedAuctionItemsSubmitRecord() = default;
    explicit AdvancedAuctionItemsSubmitRecord(boost::property_tree::ptree const& pt);
    virtual ~AdvancedAuctionItemsSubmitRecord() = default;

    AdvancedAuctionItemsSubmitRecord(const AdvancedAuctionItemsSubmitRecord& other) = default; // copy constructor
    AdvancedAuctionItemsSubmitRecord(AdvancedAuctionItemsSubmitRecord&& other) noexcept = default; // move constructor

    AdvancedAuctionItemsSubmitRecord& operator=(const AdvancedAuctionItemsSubmitRecord& other) = default; // copy assignment
    AdvancedAuctionItemsSubmitRecord& operator=(AdvancedAuctionItemsSubmitRecord&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdvancedAuctionItemsSubmitRecord members

    /// <summary>
    /// 
    /// </summary>
    AdvancedAuctionOperation getOperation() const;
    void setOperation(AdvancedAuctionOperation value);

    /// <summary>
    /// The catalog retail item id in the merchant namespace
    /// </summary>
    std::string getItemId() const;
    void setItemId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    Country getCountry() const;
    void setCountry(Country value);

    /// <summary>
    /// 
    /// </summary>
    Language getLanguage() const;
    void setLanguage(Language value);

    /// <summary>
    /// 
    /// </summary>
    AdvancedAuctionBidOptions getBidOptions() const;
    void setBidOptions(AdvancedAuctionBidOptions value);

    /// <summary>
    /// The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the &#x60;bid_options&#x60; object in the body will be set to &#x60;null&#x60;. If an item bid option record is being created, fields not specified in the update mask will be initialized to &#x60;null&#x60;.
    /// </summary>
    std::vector<UpdateMaskBidOptionField> getUpdateMask() const;
    void setUpdateMask(std::vector<UpdateMaskBidOptionField> value);

protected:
    AdvancedAuctionOperation m_Operation = AdvancedAuctionOperation{};
    std::string m_Item_id = "";
    Country m_Country = Country{};
    Language m_Language = Language{};
    AdvancedAuctionBidOptions m_Bid_options;
    std::vector<UpdateMaskBidOptionField> m_Update_mask;
};

std::vector<AdvancedAuctionItemsSubmitRecord> createAdvancedAuctionItemsSubmitRecordVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdvancedAuctionItemsSubmitRecord>(const AdvancedAuctionItemsSubmitRecord& val) {
    return val.toPropertyTree();
}

template<>
inline AdvancedAuctionItemsSubmitRecord fromPt<AdvancedAuctionItemsSubmitRecord>(const boost::property_tree::ptree& pt) {
    AdvancedAuctionItemsSubmitRecord ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdvancedAuctionItemsSubmitRecord_H_ */
