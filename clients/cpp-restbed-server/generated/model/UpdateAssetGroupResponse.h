/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpdateAssetGroupResponse.h
 *
 * 
 */

#ifndef UpdateAssetGroupResponse_H_
#define UpdateAssetGroupResponse_H_



#include "AssetGroupBinding.h"
#include <vector>
#include "UpdateAssetGroupResponse_exceptions_inner.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  UpdateAssetGroupResponse 
{
public:
    UpdateAssetGroupResponse() = default;
    explicit UpdateAssetGroupResponse(boost::property_tree::ptree const& pt);
    virtual ~UpdateAssetGroupResponse() = default;

    UpdateAssetGroupResponse(const UpdateAssetGroupResponse& other) = default; // copy constructor
    UpdateAssetGroupResponse(UpdateAssetGroupResponse&& other) noexcept = default; // move constructor

    UpdateAssetGroupResponse& operator=(const UpdateAssetGroupResponse& other) = default; // copy assignment
    UpdateAssetGroupResponse& operator=(UpdateAssetGroupResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// UpdateAssetGroupResponse members

    /// <summary>
    /// A list of successfully edited asset groups.
    /// </summary>
    std::vector<AssetGroupBinding> getUpdatedAssetGroups() const;
    void setUpdatedAssetGroups(std::vector<AssetGroupBinding> value);

    /// <summary>
    /// A list of errors associated with the asset groups. Will be returned if there is an error.
    /// </summary>
    std::vector<UpdateAssetGroupResponse_exceptions_inner> getExceptions() const;
    void setExceptions(std::vector<UpdateAssetGroupResponse_exceptions_inner> value);

protected:
    std::vector<AssetGroupBinding> m_Updated_asset_groups;
    std::vector<UpdateAssetGroupResponse_exceptions_inner> m_Exceptions;
};

std::vector<UpdateAssetGroupResponse> createUpdateAssetGroupResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<UpdateAssetGroupResponse>(const UpdateAssetGroupResponse& val) {
    return val.toPropertyTree();
}

template<>
inline UpdateAssetGroupResponse fromPt<UpdateAssetGroupResponse>(const boost::property_tree::ptree& pt) {
    UpdateAssetGroupResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* UpdateAssetGroupResponse_H_ */
