/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdvancedAuctionBidOptions.h
 *
 * Object describing a retail catalog item&#39;s bid options (bid price and bid multipliers).
 */

#ifndef AdvancedAuctionBidOptions_H_
#define AdvancedAuctionBidOptions_H_



#include "AppTypeMultipliers.h"
#include "PlacementMultipliers.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Object describing a retail catalog item&#39;s bid options (bid price and bid multipliers).
/// </summary>
class  AdvancedAuctionBidOptions 
{
public:
    AdvancedAuctionBidOptions() = default;
    explicit AdvancedAuctionBidOptions(boost::property_tree::ptree const& pt);
    virtual ~AdvancedAuctionBidOptions() = default;

    AdvancedAuctionBidOptions(const AdvancedAuctionBidOptions& other) = default; // copy constructor
    AdvancedAuctionBidOptions(AdvancedAuctionBidOptions&& other) noexcept = default; // move constructor

    AdvancedAuctionBidOptions& operator=(const AdvancedAuctionBidOptions& other) = default; // copy assignment
    AdvancedAuctionBidOptions& operator=(AdvancedAuctionBidOptions&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdvancedAuctionBidOptions members

    /// <summary>
    /// Bid price in micro currency. A value of 0 will stop distribution for this item in &#x60;MAX_BID&#x60; ad groups in &#x60;CATALOG_SALES&#x60; campaigns. A value of &#x60;null&#x60; will fallback to the ad group&#39;s &#x60;bid_in_micro_currency&#x60;.
    /// </summary>
    int64_t getBidInMicroCurrency() const;
    void setBidInMicroCurrency(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    AppTypeMultipliers getAppTypeMultipliers() const;
    void setAppTypeMultipliers(AppTypeMultipliers value);

    /// <summary>
    /// 
    /// </summary>
    PlacementMultipliers getPlacementMultipliers() const;
    void setPlacementMultipliers(PlacementMultipliers value);

protected:
    int64_t m_Bid_in_micro_currency = 0L;
    AppTypeMultipliers m_App_type_multipliers = AppTypeMultipliers{};
    PlacementMultipliers m_Placement_multipliers = PlacementMultipliers{};
};

std::vector<AdvancedAuctionBidOptions> createAdvancedAuctionBidOptionsVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdvancedAuctionBidOptions>(const AdvancedAuctionBidOptions& val) {
    return val.toPropertyTree();
}

template<>
inline AdvancedAuctionBidOptions fromPt<AdvancedAuctionBidOptions>(const boost::property_tree::ptree& pt) {
    AdvancedAuctionBidOptions ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdvancedAuctionBidOptions_H_ */
