/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OptimizationGoalMetadata.h
 *
 * 
 */

#ifndef OptimizationGoalMetadata_H_
#define OptimizationGoalMetadata_H_



#include "OptimizationGoalMetadata_conversion_tag_v3_goal_metadata.h"
#include "OptimizationGoalMetadata_scrollup_goal_metadata.h"
#include "OptimizationGoalMetadata_frequency_goal_metadata.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OptimizationGoalMetadata 
{
public:
    OptimizationGoalMetadata() = default;
    explicit OptimizationGoalMetadata(boost::property_tree::ptree const& pt);
    virtual ~OptimizationGoalMetadata() = default;

    OptimizationGoalMetadata(const OptimizationGoalMetadata& other) = default; // copy constructor
    OptimizationGoalMetadata(OptimizationGoalMetadata&& other) noexcept = default; // move constructor

    OptimizationGoalMetadata& operator=(const OptimizationGoalMetadata& other) = default; // copy assignment
    OptimizationGoalMetadata& operator=(OptimizationGoalMetadata&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OptimizationGoalMetadata members

    /// <summary>
    /// 
    /// </summary>
    OptimizationGoalMetadata_conversion_tag_v3_goal_metadata getConversionTagV3GoalMetadata() const;
    void setConversionTagV3GoalMetadata(OptimizationGoalMetadata_conversion_tag_v3_goal_metadata value);

    /// <summary>
    /// 
    /// </summary>
    OptimizationGoalMetadata_frequency_goal_metadata getFrequencyGoalMetadata() const;
    void setFrequencyGoalMetadata(OptimizationGoalMetadata_frequency_goal_metadata value);

    /// <summary>
    /// 
    /// </summary>
    OptimizationGoalMetadata_scrollup_goal_metadata getScrollupGoalMetadata() const;
    void setScrollupGoalMetadata(OptimizationGoalMetadata_scrollup_goal_metadata value);

protected:
    OptimizationGoalMetadata_conversion_tag_v3_goal_metadata m_Conversion_tag_v3_goal_metadata;
    OptimizationGoalMetadata_frequency_goal_metadata m_Frequency_goal_metadata;
    OptimizationGoalMetadata_scrollup_goal_metadata m_Scrollup_goal_metadata;
};

std::vector<OptimizationGoalMetadata> createOptimizationGoalMetadataVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OptimizationGoalMetadata>(const OptimizationGoalMetadata& val) {
    return val.toPropertyTree();
}

template<>
inline OptimizationGoalMetadata fromPt<OptimizationGoalMetadata>(const boost::property_tree::ptree& pt) {
    OptimizationGoalMetadata ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OptimizationGoalMetadata_H_ */
