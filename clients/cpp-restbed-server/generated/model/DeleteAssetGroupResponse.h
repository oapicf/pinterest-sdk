/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DeleteAssetGroupResponse.h
 *
 * 
 */

#ifndef DeleteAssetGroupResponse_H_
#define DeleteAssetGroupResponse_H_



#include <string>
#include "DeleteAssetGroupResponse_exceptions_inner.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  DeleteAssetGroupResponse 
{
public:
    DeleteAssetGroupResponse() = default;
    explicit DeleteAssetGroupResponse(boost::property_tree::ptree const& pt);
    virtual ~DeleteAssetGroupResponse() = default;

    DeleteAssetGroupResponse(const DeleteAssetGroupResponse& other) = default; // copy constructor
    DeleteAssetGroupResponse(DeleteAssetGroupResponse&& other) noexcept = default; // move constructor

    DeleteAssetGroupResponse& operator=(const DeleteAssetGroupResponse& other) = default; // copy assignment
    DeleteAssetGroupResponse& operator=(DeleteAssetGroupResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// DeleteAssetGroupResponse members

    /// <summary>
    /// A list of ids of successfully deleted asset groups.
    /// </summary>
    std::vector<std::string> getDeletedAssetGroups() const;
    void setDeletedAssetGroups(std::vector<std::string> value);

    /// <summary>
    /// A list of errors associated with the asset groups. Will be returned if there is an error.
    /// </summary>
    std::vector<DeleteAssetGroupResponse_exceptions_inner> getExceptions() const;
    void setExceptions(std::vector<DeleteAssetGroupResponse_exceptions_inner> value);

protected:
    std::vector<std::string> m_Deleted_asset_groups;
    std::vector<DeleteAssetGroupResponse_exceptions_inner> m_Exceptions;
};

std::vector<DeleteAssetGroupResponse> createDeleteAssetGroupResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<DeleteAssetGroupResponse>(const DeleteAssetGroupResponse& val) {
    return val.toPropertyTree();
}

template<>
inline DeleteAssetGroupResponse fromPt<DeleteAssetGroupResponse>(const boost::property_tree::ptree& pt) {
    DeleteAssetGroupResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* DeleteAssetGroupResponse_H_ */
