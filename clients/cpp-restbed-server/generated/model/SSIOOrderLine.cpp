/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "SSIOOrderLine.h"

#include <string>
#include <vector>
#include <map>
#include <sstream>
#include <stdexcept>
#include <regex>
#include <algorithm>
#include <boost/lexical_cast.hpp>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>
#include "helpers.h"

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

SSIOOrderLine::SSIOOrderLine(boost::property_tree::ptree const& pt)
{
        fromPropertyTree(pt);
}


std::string SSIOOrderLine::toJsonString(bool prettyJson /* = false */) const
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
    // workaround inspired by: https://stackoverflow.com/a/56395440
    std::regex reg("\\\"([0-9]+\\.{0,1}[0-9]*)\\\"");
    std::string result = std::regex_replace(ss.str(), reg, "$1");
    return result;
}

void SSIOOrderLine::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree SSIOOrderLine::toPropertyTree() const
{
	ptree pt;
	ptree tmp_node;
	pt.put("salesforce_order_line_id", m_Salesforce_order_line_id);
	pt.put("ads_manager_order_line_id", m_Ads_manager_order_line_id);
	pt.put("pin_order_id", m_Pin_order_id);
	pt.put("last_modified_date_time", m_Last_modified_date_time);
	pt.put("start_date", m_Start_date);
	pt.put("end_date", m_End_date);
	pt.put("bill_to_company_name", m_Bill_to_company_name);
	pt.put("billing_contact_firstname", m_Billing_contact_firstname);
	pt.put("billing_contact_lastname", m_Billing_contact_lastname);
	pt.put("billing_contact_email", m_Billing_contact_email);
	pt.put("media_contact_email", m_Media_contact_email);
	pt.put("media_contact_firstname", m_Media_contact_firstname);
	pt.put("media_contact_lastname", m_Media_contact_lastname);
	pt.put("agency_link", m_Agency_link);
	pt.put("po_number", m_Po_number);
	pt.put("order_name", m_Order_name);
	pt.put("pmp_name", m_Pmp_name);
	pt.put("accepted_terms_id", m_Accepted_terms_id);
	pt.put("accepted_terms_time", m_Accepted_terms_time);
	pt.put("budget_amount", m_Budget_amount);
	pt.put("estimated_monthly_spend", m_Estimated_monthly_spend);
	return pt;
}

void SSIOOrderLine::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Salesforce_order_line_id = pt.get("salesforce_order_line_id", "");
	m_Ads_manager_order_line_id = pt.get("ads_manager_order_line_id", "");
	m_Pin_order_id = pt.get("pin_order_id", "");
	m_Last_modified_date_time = pt.get("last_modified_date_time", "");
	m_Start_date = pt.get("start_date", "");
	m_End_date = pt.get("end_date", "");
	m_Bill_to_company_name = pt.get("bill_to_company_name", "");
	m_Billing_contact_firstname = pt.get("billing_contact_firstname", "");
	m_Billing_contact_lastname = pt.get("billing_contact_lastname", "");
	m_Billing_contact_email = pt.get("billing_contact_email", "");
	m_Media_contact_email = pt.get("media_contact_email", "");
	m_Media_contact_firstname = pt.get("media_contact_firstname", "");
	m_Media_contact_lastname = pt.get("media_contact_lastname", "");
	m_Agency_link = pt.get("agency_link", "");
	m_Po_number = pt.get("po_number", "");
	m_Order_name = pt.get("order_name", "");
	m_Pmp_name = pt.get("pmp_name", "");
	m_Accepted_terms_id = pt.get("accepted_terms_id", "");
	m_Accepted_terms_time = pt.get("accepted_terms_time", "");
	m_Budget_amount = pt.get("budget_amount", 0.0);
	m_Estimated_monthly_spend = pt.get("estimated_monthly_spend", 0.0);
}

std::string SSIOOrderLine::getSalesforceOrderLineId() const
{
    return m_Salesforce_order_line_id;
}

void SSIOOrderLine::setSalesforceOrderLineId(std::string value)
{
    m_Salesforce_order_line_id = value;
}


std::string SSIOOrderLine::getAdsManagerOrderLineId() const
{
    return m_Ads_manager_order_line_id;
}

void SSIOOrderLine::setAdsManagerOrderLineId(std::string value)
{
    m_Ads_manager_order_line_id = value;
}


std::string SSIOOrderLine::getPinOrderId() const
{
    return m_Pin_order_id;
}

void SSIOOrderLine::setPinOrderId(std::string value)
{
    m_Pin_order_id = value;
}


std::string SSIOOrderLine::getLastModifiedDateTime() const
{
    return m_Last_modified_date_time;
}

void SSIOOrderLine::setLastModifiedDateTime(std::string value)
{
    m_Last_modified_date_time = value;
}


std::string SSIOOrderLine::getStartDate() const
{
    return m_Start_date;
}

void SSIOOrderLine::setStartDate(std::string value)
{
    m_Start_date = value;
}


std::string SSIOOrderLine::getEndDate() const
{
    return m_End_date;
}

void SSIOOrderLine::setEndDate(std::string value)
{
    m_End_date = value;
}


std::string SSIOOrderLine::getBillToCompanyName() const
{
    return m_Bill_to_company_name;
}

void SSIOOrderLine::setBillToCompanyName(std::string value)
{
    m_Bill_to_company_name = value;
}


std::string SSIOOrderLine::getBillingContactFirstname() const
{
    return m_Billing_contact_firstname;
}

void SSIOOrderLine::setBillingContactFirstname(std::string value)
{
    m_Billing_contact_firstname = value;
}


std::string SSIOOrderLine::getBillingContactLastname() const
{
    return m_Billing_contact_lastname;
}

void SSIOOrderLine::setBillingContactLastname(std::string value)
{
    m_Billing_contact_lastname = value;
}


std::string SSIOOrderLine::getBillingContactEmail() const
{
    return m_Billing_contact_email;
}

void SSIOOrderLine::setBillingContactEmail(std::string value)
{
    m_Billing_contact_email = value;
}


std::string SSIOOrderLine::getMediaContactEmail() const
{
    return m_Media_contact_email;
}

void SSIOOrderLine::setMediaContactEmail(std::string value)
{
    m_Media_contact_email = value;
}


std::string SSIOOrderLine::getMediaContactFirstname() const
{
    return m_Media_contact_firstname;
}

void SSIOOrderLine::setMediaContactFirstname(std::string value)
{
    m_Media_contact_firstname = value;
}


std::string SSIOOrderLine::getMediaContactLastname() const
{
    return m_Media_contact_lastname;
}

void SSIOOrderLine::setMediaContactLastname(std::string value)
{
    m_Media_contact_lastname = value;
}


Currency SSIOOrderLine::getCurrencyInfo() const
{
    return m_Currency_info;
}

void SSIOOrderLine::setCurrencyInfo(Currency value)
{
    m_Currency_info = value;
}


std::string SSIOOrderLine::getAgencyLink() const
{
    return m_Agency_link;
}

void SSIOOrderLine::setAgencyLink(std::string value)
{
    m_Agency_link = value;
}


std::string SSIOOrderLine::getPoNumber() const
{
    return m_Po_number;
}

void SSIOOrderLine::setPoNumber(std::string value)
{
    m_Po_number = value;
}


std::string SSIOOrderLine::getOrderName() const
{
    return m_Order_name;
}

void SSIOOrderLine::setOrderName(std::string value)
{
    m_Order_name = value;
}


std::string SSIOOrderLine::getPmpName() const
{
    return m_Pmp_name;
}

void SSIOOrderLine::setPmpName(std::string value)
{
    m_Pmp_name = value;
}


std::string SSIOOrderLine::getAcceptedTermsId() const
{
    return m_Accepted_terms_id;
}

void SSIOOrderLine::setAcceptedTermsId(std::string value)
{
    m_Accepted_terms_id = value;
}


std::string SSIOOrderLine::getAcceptedTermsTime() const
{
    return m_Accepted_terms_time;
}

void SSIOOrderLine::setAcceptedTermsTime(std::string value)
{
    m_Accepted_terms_time = value;
}


double SSIOOrderLine::getBudgetAmount() const
{
    return m_Budget_amount;
}

void SSIOOrderLine::setBudgetAmount(double value)
{
    m_Budget_amount = value;
}


double SSIOOrderLine::getEstimatedMonthlySpend() const
{
    return m_Estimated_monthly_spend;
}

void SSIOOrderLine::setEstimatedMonthlySpend(double value)
{
    m_Estimated_monthly_spend = value;
}



std::vector<SSIOOrderLine> createSSIOOrderLineVectorFromJsonString(const std::string& json)
{
    std::stringstream sstream(json);
    boost::property_tree::ptree pt;
    boost::property_tree::json_parser::read_json(sstream,pt);

    auto vec = std::vector<SSIOOrderLine>();
    for (const auto& child: pt) {
        vec.emplace_back(SSIOOrderLine(child.second));
    }

    return vec;
}

}
}
}
}

