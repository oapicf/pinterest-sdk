/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdAccountGetSubscriptionResponse.h
 *
 * 
 */

#ifndef AdAccountGetSubscriptionResponse_H_
#define AdAccountGetSubscriptionResponse_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AdAccountGetSubscriptionResponse 
{
public:
    AdAccountGetSubscriptionResponse() = default;
    explicit AdAccountGetSubscriptionResponse(boost::property_tree::ptree const& pt);
    virtual ~AdAccountGetSubscriptionResponse() = default;

    AdAccountGetSubscriptionResponse(const AdAccountGetSubscriptionResponse& other) = default; // copy constructor
    AdAccountGetSubscriptionResponse(AdAccountGetSubscriptionResponse&& other) noexcept = default; // move constructor

    AdAccountGetSubscriptionResponse& operator=(const AdAccountGetSubscriptionResponse& other) = default; // copy assignment
    AdAccountGetSubscriptionResponse& operator=(AdAccountGetSubscriptionResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdAccountGetSubscriptionResponse members

    /// <summary>
    /// Lead form ID.
    /// </summary>
    std::string getLeadFormId() const;
    void setLeadFormId(std::string value);

    /// <summary>
    /// Standard HTTPS webhook URL.
    /// </summary>
    std::string getWebhookUrl() const;
    void setWebhookUrl(std::string value);

    /// <summary>
    /// Subscription ID.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// User account used to subscribe lead data.
    /// </summary>
    std::string getUserAccountId() const;
    void setUserAccountId(std::string value);

    /// <summary>
    /// The Ad Account ID that this lead form belongs to.
    /// </summary>
    std::string getAdAccountId() const;
    void setAdAccountId(std::string value);

    /// <summary>
    /// API version.
    /// </summary>
    std::string getApiVersion() const;
    void setApiVersion(std::string value);

    /// <summary>
    /// Base64 encoded key for client to decrypt lead data.
    /// </summary>
    std::string getCryptographicKey() const;
    void setCryptographicKey(std::string value);

    /// <summary>
    /// Lead data encryption algorithm.
    /// </summary>
    std::string getCryptographicAlgorithm() const;
    void setCryptographicAlgorithm(std::string value);

    /// <summary>
    /// Lead form creation time. Unix timestamp in milliseconds.
    /// </summary>
    int32_t getCreatedTime() const;
    void setCreatedTime(int32_t value);

protected:
    std::string m_Lead_form_id = "";
    std::string m_Webhook_url = "";
    std::string m_Id = "";
    std::string m_User_account_id = "";
    std::string m_Ad_account_id = "";
    std::string m_Api_version = "";
    std::string m_Cryptographic_key = "";
    std::string m_Cryptographic_algorithm = "";
    int32_t m_Created_time = 0;
};

std::vector<AdAccountGetSubscriptionResponse> createAdAccountGetSubscriptionResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdAccountGetSubscriptionResponse>(const AdAccountGetSubscriptionResponse& val) {
    return val.toPropertyTree();
}

template<>
inline AdAccountGetSubscriptionResponse fromPt<AdAccountGetSubscriptionResponse>(const boost::property_tree::ptree& pt) {
    AdAccountGetSubscriptionResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdAccountGetSubscriptionResponse_H_ */
