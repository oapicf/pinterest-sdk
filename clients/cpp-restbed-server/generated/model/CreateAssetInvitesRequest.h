/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateAssetInvitesRequest.h
 *
 * Request body for updating asset roles for existing invites.
 */

#ifndef CreateAssetInvitesRequest_H_
#define CreateAssetInvitesRequest_H_



#include "CreateAssetInvitesRequestItem.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Request body for updating asset roles for existing invites.
/// </summary>
class  CreateAssetInvitesRequest 
{
public:
    CreateAssetInvitesRequest() = default;
    explicit CreateAssetInvitesRequest(boost::property_tree::ptree const& pt);
    virtual ~CreateAssetInvitesRequest() = default;

    CreateAssetInvitesRequest(const CreateAssetInvitesRequest& other) = default; // copy constructor
    CreateAssetInvitesRequest(CreateAssetInvitesRequest&& other) noexcept = default; // move constructor

    CreateAssetInvitesRequest& operator=(const CreateAssetInvitesRequest& other) = default; // copy assignment
    CreateAssetInvitesRequest& operator=(CreateAssetInvitesRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateAssetInvitesRequest members

    /// <summary>
    /// 
    /// </summary>
    std::vector<CreateAssetInvitesRequestItem> getInvites() const;
    void setInvites(std::vector<CreateAssetInvitesRequestItem> value);

protected:
    std::vector<CreateAssetInvitesRequestItem> m_Invites;
};

std::vector<CreateAssetInvitesRequest> createCreateAssetInvitesRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateAssetInvitesRequest>(const CreateAssetInvitesRequest& val) {
    return val.toPropertyTree();
}

template<>
inline CreateAssetInvitesRequest fromPt<CreateAssetInvitesRequest>(const boost::property_tree::ptree& pt) {
    CreateAssetInvitesRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateAssetInvitesRequest_H_ */
