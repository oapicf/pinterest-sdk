/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConversionEventResponse.h
 *
 * 
 */

#ifndef ConversionEventResponse_H_
#define ConversionEventResponse_H_



#include "ConversionTagType.h"
#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ConversionEventResponse 
{
public:
    ConversionEventResponse() = default;
    explicit ConversionEventResponse(boost::property_tree::ptree const& pt);
    virtual ~ConversionEventResponse() = default;

    ConversionEventResponse(const ConversionEventResponse& other) = default; // copy constructor
    ConversionEventResponse(ConversionEventResponse&& other) noexcept = default; // move constructor

    ConversionEventResponse& operator=(const ConversionEventResponse& other) = default; // copy assignment
    ConversionEventResponse& operator=(ConversionEventResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// ConversionEventResponse members

    /// <summary>
    /// 
    /// </summary>
    ConversionTagType getConversionEvent() const;
    void setConversionEvent(ConversionTagType value);

    /// <summary>
    /// Id of the tag.
    /// </summary>
    std::string getConversionTagId() const;
    void setConversionTagId(std::string value);

    /// <summary>
    /// Id of the ad account.
    /// </summary>
    std::string getAdAccountId() const;
    void setAdAccountId(std::string value);

    /// <summary>
    /// Creation date in epoch format.
    /// </summary>
    int32_t getCreatedTime() const;
    void setCreatedTime(int32_t value);

protected:
    ConversionTagType m_Conversion_event = "";
    std::string m_Conversion_tag_id = "";
    std::string m_Ad_account_id = "";
    int32_t m_Created_time = 0;
};

std::vector<ConversionEventResponse> createConversionEventResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<ConversionEventResponse>(const ConversionEventResponse& val) {
    return val.toPropertyTree();
}

template<>
inline ConversionEventResponse fromPt<ConversionEventResponse>(const boost::property_tree::ptree& pt) {
    ConversionEventResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* ConversionEventResponse_H_ */
