/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CustomLabel3Filter.h
 *
 * 
 */

#ifndef CustomLabel3Filter_H_
#define CustomLabel3Filter_H_



#include "CatalogsProductGroupMultipleStringCriteria.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CustomLabel3Filter 
{
public:
    CustomLabel3Filter() = default;
    explicit CustomLabel3Filter(boost::property_tree::ptree const& pt);
    virtual ~CustomLabel3Filter() = default;

    CustomLabel3Filter(const CustomLabel3Filter& other) = default; // copy constructor
    CustomLabel3Filter(CustomLabel3Filter&& other) noexcept = default; // move constructor

    CustomLabel3Filter& operator=(const CustomLabel3Filter& other) = default; // copy assignment
    CustomLabel3Filter& operator=(CustomLabel3Filter&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CustomLabel3Filter members

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL3() const;
    void setCUSTOMLABEL3(CatalogsProductGroupMultipleStringCriteria value);

protected:
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_3 = CatalogsProductGroupMultipleStringCriteria{};
};

std::vector<CustomLabel3Filter> createCustomLabel3FilterVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CustomLabel3Filter>(const CustomLabel3Filter& val) {
    return val.toPropertyTree();
}

template<>
inline CustomLabel3Filter fromPt<CustomLabel3Filter>(const boost::property_tree::ptree& pt) {
    CustomLabel3Filter ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CustomLabel3Filter_H_ */
