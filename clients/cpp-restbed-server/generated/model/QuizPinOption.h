/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * QuizPinOption.h
 *
 *  This field contains multiple options to a quiz question.
 */

#ifndef QuizPinOption_H_
#define QuizPinOption_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///  This field contains multiple options to a quiz question.
/// </summary>
class  QuizPinOption 
{
public:
    QuizPinOption() = default;
    explicit QuizPinOption(boost::property_tree::ptree const& pt);
    virtual ~QuizPinOption() = default;

    QuizPinOption(const QuizPinOption& other) = default; // copy constructor
    QuizPinOption(QuizPinOption&& other) noexcept = default; // move constructor

    QuizPinOption& operator=(const QuizPinOption& other) = default; // copy assignment
    QuizPinOption& operator=(QuizPinOption&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// QuizPinOption members

    /// <summary>
    /// 
    /// </summary>
    double getId() const;
    void setId(double value);

    /// <summary>
    /// 
    /// </summary>
    std::string getText() const;
    void setText(std::string value);

protected:
    double m_Id = 0.0;
    std::string m_Text = "";
};

std::vector<QuizPinOption> createQuizPinOptionVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<QuizPinOption>(const QuizPinOption& val) {
    return val.toPropertyTree();
}

template<>
inline QuizPinOption fromPt<QuizPinOption>(const boost::property_tree::ptree& pt) {
    QuizPinOption ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* QuizPinOption_H_ */
