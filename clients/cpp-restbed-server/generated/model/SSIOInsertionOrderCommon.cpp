/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "SSIOInsertionOrderCommon.h"

#include <string>
#include <vector>
#include <map>
#include <sstream>
#include <stdexcept>
#include <regex>
#include <boost/lexical_cast.hpp>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>
#include "helpers.h"

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

SSIOInsertionOrderCommon::SSIOInsertionOrderCommon(boost::property_tree::ptree const& pt)
{
        fromPropertyTree(pt);
}


std::string SSIOInsertionOrderCommon::toJsonString(bool prettyJson /* = false */) const
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
    // workaround inspired by: https://stackoverflow.com/a/56395440
    std::regex reg("\\\"([0-9]+\\.{0,1}[0-9]*)\\\"");
    std::string result = std::regex_replace(ss.str(), reg, "$1");
    return result;
}

void SSIOInsertionOrderCommon::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree SSIOInsertionOrderCommon::toPropertyTree() const
{
	ptree pt;
	ptree tmp_node;
	pt.put("start_date", m_Start_date);
	pt.put("end_date", m_End_date);
	pt.put("po_number", m_Po_number);
	pt.put("budget_amount", m_Budget_amount);
	pt.put("billing_contact_firstname", m_Billing_contact_firstname);
	pt.put("billing_contact_lastname", m_Billing_contact_lastname);
	pt.put("billing_contact_email", m_Billing_contact_email);
	pt.put("media_contact_firstname", m_Media_contact_firstname);
	pt.put("media_contact_lastname", m_Media_contact_lastname);
	pt.put("media_contact_email", m_Media_contact_email);
	pt.put("agency_link", m_Agency_link);
	pt.put("user_email", m_User_email);
	return pt;
}

void SSIOInsertionOrderCommon::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Start_date = pt.get("start_date", "");
	m_End_date = pt.get("end_date", "");
	m_Po_number = pt.get("po_number", "");
	m_Budget_amount = pt.get("budget_amount", 0.0);
	m_Billing_contact_firstname = pt.get("billing_contact_firstname", "");
	m_Billing_contact_lastname = pt.get("billing_contact_lastname", "");
	m_Billing_contact_email = pt.get("billing_contact_email", "");
	m_Media_contact_firstname = pt.get("media_contact_firstname", "");
	m_Media_contact_lastname = pt.get("media_contact_lastname", "");
	m_Media_contact_email = pt.get("media_contact_email", "");
	m_Agency_link = pt.get("agency_link", "");
	m_User_email = pt.get("user_email", "");
}

std::string SSIOInsertionOrderCommon::getStartDate() const
{
    return m_Start_date;
}

void SSIOInsertionOrderCommon::setStartDate(std::string value)
{
    m_Start_date = value;
}


std::string SSIOInsertionOrderCommon::getEndDate() const
{
    return m_End_date;
}

void SSIOInsertionOrderCommon::setEndDate(std::string value)
{
    m_End_date = value;
}


std::string SSIOInsertionOrderCommon::getPoNumber() const
{
    return m_Po_number;
}

void SSIOInsertionOrderCommon::setPoNumber(std::string value)
{
    m_Po_number = value;
}


double SSIOInsertionOrderCommon::getBudgetAmount() const
{
    return m_Budget_amount;
}

void SSIOInsertionOrderCommon::setBudgetAmount(double value)
{
    m_Budget_amount = value;
}


std::string SSIOInsertionOrderCommon::getBillingContactFirstname() const
{
    return m_Billing_contact_firstname;
}

void SSIOInsertionOrderCommon::setBillingContactFirstname(std::string value)
{
    m_Billing_contact_firstname = value;
}


std::string SSIOInsertionOrderCommon::getBillingContactLastname() const
{
    return m_Billing_contact_lastname;
}

void SSIOInsertionOrderCommon::setBillingContactLastname(std::string value)
{
    m_Billing_contact_lastname = value;
}


std::string SSIOInsertionOrderCommon::getBillingContactEmail() const
{
    return m_Billing_contact_email;
}

void SSIOInsertionOrderCommon::setBillingContactEmail(std::string value)
{
    m_Billing_contact_email = value;
}


std::string SSIOInsertionOrderCommon::getMediaContactFirstname() const
{
    return m_Media_contact_firstname;
}

void SSIOInsertionOrderCommon::setMediaContactFirstname(std::string value)
{
    m_Media_contact_firstname = value;
}


std::string SSIOInsertionOrderCommon::getMediaContactLastname() const
{
    return m_Media_contact_lastname;
}

void SSIOInsertionOrderCommon::setMediaContactLastname(std::string value)
{
    m_Media_contact_lastname = value;
}


std::string SSIOInsertionOrderCommon::getMediaContactEmail() const
{
    return m_Media_contact_email;
}

void SSIOInsertionOrderCommon::setMediaContactEmail(std::string value)
{
    m_Media_contact_email = value;
}


std::string SSIOInsertionOrderCommon::getAgencyLink() const
{
    return m_Agency_link;
}

void SSIOInsertionOrderCommon::setAgencyLink(std::string value)
{
    m_Agency_link = value;
}


std::string SSIOInsertionOrderCommon::getUserEmail() const
{
    return m_User_email;
}

void SSIOInsertionOrderCommon::setUserEmail(std::string value)
{
    m_User_email = value;
}



std::vector<SSIOInsertionOrderCommon> createSSIOInsertionOrderCommonVectorFromJsonString(const std::string& json)
{
    std::stringstream sstream(json);
    boost::property_tree::ptree pt;
    boost::property_tree::json_parser::read_json(sstream,pt);

    auto vec = std::vector<SSIOInsertionOrderCommon>();
    for (const auto& child: pt) {
        vec.emplace_back(SSIOInsertionOrderCommon(child.second));
    }

    return vec;
}

}
}
}
}

