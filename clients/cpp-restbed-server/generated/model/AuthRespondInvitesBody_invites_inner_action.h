/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AuthRespondInvitesBody_invites_inner_action.h
 *
 * 
 */

#ifndef AuthRespondInvitesBody_invites_inner_action_H_
#define AuthRespondInvitesBody_invites_inner_action_H_



#include "Permissions.h"
#include <map>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AuthRespondInvitesBody_invites_inner_action 
{
public:
    AuthRespondInvitesBody_invites_inner_action() = default;
    explicit AuthRespondInvitesBody_invites_inner_action(boost::property_tree::ptree const& pt);
    virtual ~AuthRespondInvitesBody_invites_inner_action() = default;

    AuthRespondInvitesBody_invites_inner_action(const AuthRespondInvitesBody_invites_inner_action& other) = default; // copy constructor
    AuthRespondInvitesBody_invites_inner_action(AuthRespondInvitesBody_invites_inner_action&& other) noexcept = default; // move constructor

    AuthRespondInvitesBody_invites_inner_action& operator=(const AuthRespondInvitesBody_invites_inner_action& other) = default; // copy assignment
    AuthRespondInvitesBody_invites_inner_action& operator=(AuthRespondInvitesBody_invites_inner_action&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AuthRespondInvitesBody_invites_inner_action members

    /// <summary>
    /// Whether the invite/request is accepted.
    /// </summary>
    bool isAcceptInvite() const;
    void setAcceptInvite(bool value);

    /// <summary>
    /// An object mapping asset ids to lists of business permissions. This can be used to setting/requesting permissions on various assets. If accepting an invite or request, this object would be used to grant asset permissions to the member or partner. 
    /// </summary>
    std::map<std::string, std::vector<Permissions>> getAssetIdToPermissions() const;
    void setAssetIdToPermissions(std::map<std::string, std::vector<Permissions>> value);

protected:
    bool m_Accept_invite = false;
    std::map<std::string, std::vector<Permissions>> m_Asset_id_to_permissions;
};

std::vector<AuthRespondInvitesBody_invites_inner_action> createAuthRespondInvitesBody_invites_inner_actionVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AuthRespondInvitesBody_invites_inner_action>(const AuthRespondInvitesBody_invites_inner_action& val) {
    return val.toPropertyTree();
}

template<>
inline AuthRespondInvitesBody_invites_inner_action fromPt<AuthRespondInvitesBody_invites_inner_action>(const boost::property_tree::ptree& pt) {
    AuthRespondInvitesBody_invites_inner_action ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AuthRespondInvitesBody_invites_inner_action_H_ */
