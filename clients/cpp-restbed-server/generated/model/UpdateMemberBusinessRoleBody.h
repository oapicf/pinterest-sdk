/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpdateMemberBusinessRoleBody.h
 *
 * Single instance of a business member to have its role updated
 */

#ifndef UpdateMemberBusinessRoleBody_H_
#define UpdateMemberBusinessRoleBody_H_



#include "BusinessRoleForMembers.h"
#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Single instance of a business member to have its role updated
/// </summary>
class  UpdateMemberBusinessRoleBody 
{
public:
    UpdateMemberBusinessRoleBody() = default;
    explicit UpdateMemberBusinessRoleBody(boost::property_tree::ptree const& pt);
    virtual ~UpdateMemberBusinessRoleBody() = default;

    UpdateMemberBusinessRoleBody(const UpdateMemberBusinessRoleBody& other) = default; // copy constructor
    UpdateMemberBusinessRoleBody(UpdateMemberBusinessRoleBody&& other) noexcept = default; // move constructor

    UpdateMemberBusinessRoleBody& operator=(const UpdateMemberBusinessRoleBody& other) = default; // copy assignment
    UpdateMemberBusinessRoleBody& operator=(UpdateMemberBusinessRoleBody&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// UpdateMemberBusinessRoleBody members

    /// <summary>
    /// 
    /// </summary>
    BusinessRoleForMembers getBusinessRole() const;
    void setBusinessRole(BusinessRoleForMembers value);

    /// <summary>
    /// Unique identifier of the member
    /// </summary>
    std::string getMemberId() const;
    void setMemberId(std::string value);

protected:
    BusinessRoleForMembers m_Business_role = BusinessRoleForMembers{};
    std::string m_Member_id = "";
};

std::vector<UpdateMemberBusinessRoleBody> createUpdateMemberBusinessRoleBodyVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<UpdateMemberBusinessRoleBody>(const UpdateMemberBusinessRoleBody& val) {
    return val.toPropertyTree();
}

template<>
inline UpdateMemberBusinessRoleBody fromPt<UpdateMemberBusinessRoleBody>(const boost::property_tree::ptree& pt) {
    UpdateMemberBusinessRoleBody ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* UpdateMemberBusinessRoleBody_H_ */
