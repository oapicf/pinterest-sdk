/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LeadsExportCreateRequest.h
 *
 * 
 */

#ifndef LeadsExportCreateRequest_H_
#define LeadsExportCreateRequest_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  LeadsExportCreateRequest 
{
public:
    LeadsExportCreateRequest() = default;
    explicit LeadsExportCreateRequest(boost::property_tree::ptree const& pt);
    virtual ~LeadsExportCreateRequest() = default;

    LeadsExportCreateRequest(const LeadsExportCreateRequest& other) = default; // copy constructor
    LeadsExportCreateRequest(LeadsExportCreateRequest&& other) noexcept = default; // move constructor

    LeadsExportCreateRequest& operator=(const LeadsExportCreateRequest& other) = default; // copy assignment
    LeadsExportCreateRequest& operator=(LeadsExportCreateRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// LeadsExportCreateRequest members

    /// <summary>
    /// Export leads collected on and after start date (UTC). Format: YYYY-MM-DD
    /// </summary>
    std::string getStartDate() const;
    void setStartDate(std::string value);

    /// <summary>
    /// Export leads collected on and before end date (UTC). Format: YYYY-MM-DD
    /// </summary>
    std::string getEndDate() const;
    void setEndDate(std::string value);

    /// <summary>
    /// ID for the ad collecting leads
    /// </summary>
    std::string getAdId() const;
    void setAdId(std::string value);

protected:
    std::string m_Start_date = "";
    std::string m_End_date = "";
    std::string m_Ad_id = "";
};

std::vector<LeadsExportCreateRequest> createLeadsExportCreateRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<LeadsExportCreateRequest>(const LeadsExportCreateRequest& val) {
    return val.toPropertyTree();
}

template<>
inline LeadsExportCreateRequest fromPt<LeadsExportCreateRequest>(const boost::property_tree::ptree& pt) {
    LeadsExportCreateRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* LeadsExportCreateRequest_H_ */
