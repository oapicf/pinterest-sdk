/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LeadsExportStatus.h
 *
 * Status of a leads export job
 */

#ifndef LeadsExportStatus_H_
#define LeadsExportStatus_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Status of a leads export job
/// </summary>
class  LeadsExportStatus 
{
public:
    LeadsExportStatus() = default;
    explicit LeadsExportStatus(boost::property_tree::ptree const& pt);
    virtual ~LeadsExportStatus() = default;

    LeadsExportStatus(const LeadsExportStatus& other) = default; // copy constructor
    LeadsExportStatus(LeadsExportStatus&& other) noexcept = default; // move constructor

    LeadsExportStatus& operator=(const LeadsExportStatus& other) = default; // copy assignment
    LeadsExportStatus& operator=(LeadsExportStatus&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    std::string toString() const;
    void fromString(const std::string& str);

    /////////////////////////////////////////////
    /// LeadsExportStatus members
    std::string getEnumValue() const;
    void setEnumValue(const std::string& val);

protected:
    std::string m_LeadsExportStatusEnumValue;
};

std::vector<LeadsExportStatus> createLeadsExportStatusVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<LeadsExportStatus>(const LeadsExportStatus& val) {
    return val.toPropertyTree();
}

template<>
inline LeadsExportStatus fromPt<LeadsExportStatus>(const boost::property_tree::ptree& pt) {
    LeadsExportStatus ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* LeadsExportStatus_H_ */
