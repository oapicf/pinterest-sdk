/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateAssetAccessRequestResponse.h
 *
 * 
 */

#ifndef CreateAssetAccessRequestResponse_H_
#define CreateAssetAccessRequestResponse_H_



#include <string>
#include "CreateAssetAccessRequestErrorMessage_inner.h"
#include <map>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreateAssetAccessRequestResponse 
{
public:
    CreateAssetAccessRequestResponse() = default;
    explicit CreateAssetAccessRequestResponse(boost::property_tree::ptree const& pt);
    virtual ~CreateAssetAccessRequestResponse() = default;

    CreateAssetAccessRequestResponse(const CreateAssetAccessRequestResponse& other) = default; // copy constructor
    CreateAssetAccessRequestResponse(CreateAssetAccessRequestResponse&& other) noexcept = default; // move constructor

    CreateAssetAccessRequestResponse& operator=(const CreateAssetAccessRequestResponse& other) = default; // copy assignment
    CreateAssetAccessRequestResponse& operator=(CreateAssetAccessRequestResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CreateAssetAccessRequestResponse members

    /// <summary>
    /// A list of errors associated with the asset access requests. Will be returned if there is an error.
    /// </summary>
    std::vector<CreateAssetAccessRequestErrorMessage_inner> getExceptions() const;
    void setExceptions(std::vector<CreateAssetAccessRequestErrorMessage_inner> value);

    /// <summary>
    /// 
    /// </summary>
    std::map<std::string, std::string> getInvites() const;
    void setInvites(std::map<std::string, std::string> value);

protected:
    std::vector<CreateAssetAccessRequestErrorMessage_inner> m_Exceptions;
    std::map<std::string, std::string> m_Invites;
};

std::vector<CreateAssetAccessRequestResponse> createCreateAssetAccessRequestResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CreateAssetAccessRequestResponse>(const CreateAssetAccessRequestResponse& val) {
    return val.toPropertyTree();
}

template<>
inline CreateAssetAccessRequestResponse fromPt<CreateAssetAccessRequestResponse>(const boost::property_tree::ptree& pt) {
    CreateAssetAccessRequestResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CreateAssetAccessRequestResponse_H_ */
