/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BulkDownloadRequest_campaign_filter.h
 *
 * 
 */

#ifndef BulkDownloadRequest_campaign_filter_H_
#define BulkDownloadRequest_campaign_filter_H_



#include "CampaignSummaryStatus.h"
#include "ObjectiveType.h"
#include <string>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  BulkDownloadRequest_campaign_filter 
{
public:
    BulkDownloadRequest_campaign_filter() = default;
    explicit BulkDownloadRequest_campaign_filter(boost::property_tree::ptree const& pt);
    virtual ~BulkDownloadRequest_campaign_filter() = default;

    BulkDownloadRequest_campaign_filter(const BulkDownloadRequest_campaign_filter& other) = default; // copy constructor
    BulkDownloadRequest_campaign_filter(BulkDownloadRequest_campaign_filter&& other) noexcept = default; // move constructor

    BulkDownloadRequest_campaign_filter& operator=(const BulkDownloadRequest_campaign_filter& other) = default; // copy assignment
    BulkDownloadRequest_campaign_filter& operator=(BulkDownloadRequest_campaign_filter&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// BulkDownloadRequest_campaign_filter members

    /// <summary>
    /// Unix UTC timestamp.
    /// </summary>
    std::string getStartTime() const;
    void setStartTime(std::string value);

    /// <summary>
    /// Unix UTC timestamp.
    /// </summary>
    std::string getEndTime() const;
    void setEndTime(std::string value);

    /// <summary>
    /// Campaign name
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<CampaignSummaryStatus> getCampaignStatus() const;
    void setCampaignStatus(std::vector<CampaignSummaryStatus> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<ObjectiveType> getObjectiveType() const;
    void setObjectiveType(std::vector<ObjectiveType> value);

protected:
    std::string m_Start_time = "";
    std::string m_End_time = "";
    std::string m_Name = "";
    std::vector<CampaignSummaryStatus> m_Campaign_status;
    std::vector<ObjectiveType> m_Objective_type;
};

std::vector<BulkDownloadRequest_campaign_filter> createBulkDownloadRequest_campaign_filterVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<BulkDownloadRequest_campaign_filter>(const BulkDownloadRequest_campaign_filter& val) {
    return val.toPropertyTree();
}

template<>
inline BulkDownloadRequest_campaign_filter fromPt<BulkDownloadRequest_campaign_filter>(const boost::property_tree::ptree& pt) {
    BulkDownloadRequest_campaign_filter ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* BulkDownloadRequest_campaign_filter_H_ */
