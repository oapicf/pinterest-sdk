/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AssetGroupBinding.h
 *
 * 
 */

#ifndef AssetGroupBinding_H_
#define AssetGroupBinding_H_



#include <string>
#include <vector>
#include "BusinessAccessUserSummary.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AssetGroupBinding 
{
public:
    AssetGroupBinding() = default;
    explicit AssetGroupBinding(boost::property_tree::ptree const& pt);
    virtual ~AssetGroupBinding() = default;

    AssetGroupBinding(const AssetGroupBinding& other) = default; // copy constructor
    AssetGroupBinding(AssetGroupBinding&& other) noexcept = default; // move constructor

    AssetGroupBinding& operator=(const AssetGroupBinding& other) = default; // copy assignment
    AssetGroupBinding& operator=(AssetGroupBinding&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AssetGroupBinding members

    /// <summary>
    /// Asset Group ID.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// Asset Group name
    /// </summary>
    std::string getAssetGroupName() const;
    void setAssetGroupName(std::string value);

    /// <summary>
    /// Asset group description
    /// </summary>
    std::string getAssetGroupDescription() const;
    void setAssetGroupDescription(std::string value);

    /// <summary>
    /// Asset group types
    /// </summary>
    std::vector<std::string> getAssetGroupTypes() const;
    void setAssetGroupTypes(std::vector<std::string> value);

    /// <summary>
    /// A list of ad account IDs under the asset group
    /// </summary>
    std::vector<std::string> getAdAccountsIds() const;
    void setAdAccountsIds(std::vector<std::string> value);

    /// <summary>
    /// A list of profile IDs under asset group
    /// </summary>
    std::vector<std::string> getProfilesIds() const;
    void setProfilesIds(std::vector<std::string> value);

    /// <summary>
    /// The creation time of the asset group
    /// </summary>
    int32_t getCreatedTime() const;
    void setCreatedTime(int32_t value);

    /// <summary>
    /// The last update time of the asset group
    /// </summary>
    int32_t getUpdatedTime() const;
    void setUpdatedTime(int32_t value);

    /// <summary>
    /// The data of the business that owns the asset group.
    /// </summary>
    BusinessAccessUserSummary getOwner() const;
    void setOwner(BusinessAccessUserSummary value);

    /// <summary>
    /// The data of the user that created the asset group.
    /// </summary>
    BusinessAccessUserSummary getCreatedBy() const;
    void setCreatedBy(BusinessAccessUserSummary value);

protected:
    std::string m_Id = "";
    std::string m_Asset_group_name = "";
    std::string m_Asset_group_description = "";
    std::vector<std::string> m_Asset_group_types;
    std::vector<std::string> m_Ad_accounts_ids;
    std::vector<std::string> m_Profiles_ids;
    int32_t m_Created_time = 0;
    int32_t m_Updated_time = 0;
    BusinessAccessUserSummary m_Owner;
    BusinessAccessUserSummary m_Created_by;
};

std::vector<AssetGroupBinding> createAssetGroupBindingVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AssetGroupBinding>(const AssetGroupBinding& val) {
    return val.toPropertyTree();
}

template<>
inline AssetGroupBinding fromPt<AssetGroupBinding>(const boost::property_tree::ptree& pt) {
    AssetGroupBinding ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AssetGroupBinding_H_ */
