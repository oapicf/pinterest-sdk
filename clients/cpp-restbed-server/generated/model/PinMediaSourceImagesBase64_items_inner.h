/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PinMediaSourceImagesBase64_items_inner.h
 *
 * 
 */

#ifndef PinMediaSourceImagesBase64_items_inner_H_
#define PinMediaSourceImagesBase64_items_inner_H_



#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  PinMediaSourceImagesBase64_items_inner 
{
public:
    PinMediaSourceImagesBase64_items_inner() = default;
    explicit PinMediaSourceImagesBase64_items_inner(boost::property_tree::ptree const& pt);
    virtual ~PinMediaSourceImagesBase64_items_inner() = default;

    PinMediaSourceImagesBase64_items_inner(const PinMediaSourceImagesBase64_items_inner& other) = default; // copy constructor
    PinMediaSourceImagesBase64_items_inner(PinMediaSourceImagesBase64_items_inner&& other) noexcept = default; // move constructor

    PinMediaSourceImagesBase64_items_inner& operator=(const PinMediaSourceImagesBase64_items_inner& other) = default; // copy assignment
    PinMediaSourceImagesBase64_items_inner& operator=(PinMediaSourceImagesBase64_items_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// PinMediaSourceImagesBase64_items_inner members

    /// <summary>
    /// 
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string value);

    /// <summary>
    /// Destination link for the image.
    /// </summary>
    std::string getLink() const;
    void setLink(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getContentType() const;
    void setContentType(std::string value);

    /// <summary>
    /// Image to upload as base64 string.
    /// </summary>
    std::string getData() const;
    void setData(std::string value);

protected:
    std::string m_Title = "";
    std::string m_Description = "";
    std::string m_Link = "";
    std::string m_Content_type = "";
    std::string m_Data = "";
};

std::vector<PinMediaSourceImagesBase64_items_inner> createPinMediaSourceImagesBase64_items_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<PinMediaSourceImagesBase64_items_inner>(const PinMediaSourceImagesBase64_items_inner& val) {
    return val.toPropertyTree();
}

template<>
inline PinMediaSourceImagesBase64_items_inner fromPt<PinMediaSourceImagesBase64_items_inner>(const boost::property_tree::ptree& pt) {
    PinMediaSourceImagesBase64_items_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* PinMediaSourceImagesBase64_items_inner_H_ */
