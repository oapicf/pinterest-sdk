/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BillingProfilesResponse.h
 *
 * 
 */

#ifndef BillingProfilesResponse_H_
#define BillingProfilesResponse_H_



#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  BillingProfilesResponse 
{
public:
    BillingProfilesResponse() = default;
    explicit BillingProfilesResponse(boost::property_tree::ptree const& pt);
    virtual ~BillingProfilesResponse() = default;

    BillingProfilesResponse(const BillingProfilesResponse& other) = default; // copy constructor
    BillingProfilesResponse(BillingProfilesResponse&& other) noexcept = default; // move constructor

    BillingProfilesResponse& operator=(const BillingProfilesResponse& other) = default; // copy assignment
    BillingProfilesResponse& operator=(BillingProfilesResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// BillingProfilesResponse members

    /// <summary>
    /// Billing ID.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// Type of the card.
    /// </summary>
    std::string getCardType() const;
    void setCardType(std::string value);

    /// <summary>
    /// Status of the billing.
    /// </summary>
    std::string getStatus() const;
    void setStatus(std::string value);

    /// <summary>
    /// Advertiser ID of the billing.
    /// </summary>
    std::string getAdvertiserId() const;
    void setAdvertiserId(std::string value);

    /// <summary>
    /// Brand of the payment method.
    /// </summary>
    std::string getPaymentMethodBrand() const;
    void setPaymentMethodBrand(std::string value);

protected:
    std::string m_Id = "";
    std::string m_Card_type = "";
    std::string m_Status = "";
    std::string m_Advertiser_id = "";
    std::string m_Payment_method_brand = "";
};

std::vector<BillingProfilesResponse> createBillingProfilesResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<BillingProfilesResponse>(const BillingProfilesResponse& val) {
    return val.toPropertyTree();
}

template<>
inline BillingProfilesResponse fromPt<BillingProfilesResponse>(const boost::property_tree::ptree& pt) {
    BillingProfilesResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* BillingProfilesResponse_H_ */
