/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdGroupArrayResponseElement.h
 *
 * 
 */

#ifndef AdGroupArrayResponseElement_H_
#define AdGroupArrayResponseElement_H_



#include "AdGroupResponse.h"
#include "Exception.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AdGroupArrayResponseElement 
{
public:
    AdGroupArrayResponseElement() = default;
    explicit AdGroupArrayResponseElement(boost::property_tree::ptree const& pt);
    virtual ~AdGroupArrayResponseElement() = default;

    AdGroupArrayResponseElement(const AdGroupArrayResponseElement& other) = default; // copy constructor
    AdGroupArrayResponseElement(AdGroupArrayResponseElement&& other) noexcept = default; // move constructor

    AdGroupArrayResponseElement& operator=(const AdGroupArrayResponseElement& other) = default; // copy assignment
    AdGroupArrayResponseElement& operator=(AdGroupArrayResponseElement&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdGroupArrayResponseElement members

    /// <summary>
    /// 
    /// </summary>
    AdGroupResponse getData() const;
    void setData(AdGroupResponse value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<Exception> getExceptions() const;
    void setExceptions(std::vector<Exception> value);

protected:
    AdGroupResponse m_Data;
    std::vector<Exception> m_Exceptions;
};

std::vector<AdGroupArrayResponseElement> createAdGroupArrayResponseElementVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdGroupArrayResponseElement>(const AdGroupArrayResponseElement& val) {
    return val.toPropertyTree();
}

template<>
inline AdGroupArrayResponseElement fromPt<AdGroupArrayResponseElement>(const boost::property_tree::ptree& pt) {
    AdGroupArrayResponseElement ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdGroupArrayResponseElement_H_ */
