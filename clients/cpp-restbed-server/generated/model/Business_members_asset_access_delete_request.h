/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Business_members_asset_access_delete_request.h
 *
 * 
 */

#ifndef Business_members_asset_access_delete_request_H_
#define Business_members_asset_access_delete_request_H_



#include "Business_members_asset_access_delete_request_accesses_inner.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Business_members_asset_access_delete_request 
{
public:
    Business_members_asset_access_delete_request() = default;
    explicit Business_members_asset_access_delete_request(boost::property_tree::ptree const& pt);
    virtual ~Business_members_asset_access_delete_request() = default;

    Business_members_asset_access_delete_request(const Business_members_asset_access_delete_request& other) = default; // copy constructor
    Business_members_asset_access_delete_request(Business_members_asset_access_delete_request&& other) noexcept = default; // move constructor

    Business_members_asset_access_delete_request& operator=(const Business_members_asset_access_delete_request& other) = default; // copy assignment
    Business_members_asset_access_delete_request& operator=(Business_members_asset_access_delete_request&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// Business_members_asset_access_delete_request members

    /// <summary>
    /// List of members asset access to be deleted
    /// </summary>
    std::vector<Business_members_asset_access_delete_request_accesses_inner> getAccesses() const;
    void setAccesses(std::vector<Business_members_asset_access_delete_request_accesses_inner> value);

protected:
    std::vector<Business_members_asset_access_delete_request_accesses_inner> m_Accesses;
};

std::vector<Business_members_asset_access_delete_request> createBusiness_members_asset_access_delete_requestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<Business_members_asset_access_delete_request>(const Business_members_asset_access_delete_request& val) {
    return val.toPropertyTree();
}

template<>
inline Business_members_asset_access_delete_request fromPt<Business_members_asset_access_delete_request>(const boost::property_tree::ptree& pt) {
    Business_members_asset_access_delete_request ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* Business_members_asset_access_delete_request_H_ */
