/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdAccountCreateRequest.h
 *
 * 
 */

#ifndef AdAccountCreateRequest_H_
#define AdAccountCreateRequest_H_



#include "Country.h"
#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AdAccountCreateRequest 
{
public:
    AdAccountCreateRequest() = default;
    explicit AdAccountCreateRequest(boost::property_tree::ptree const& pt);
    virtual ~AdAccountCreateRequest() = default;

    AdAccountCreateRequest(const AdAccountCreateRequest& other) = default; // copy constructor
    AdAccountCreateRequest(AdAccountCreateRequest&& other) noexcept = default; // move constructor

    AdAccountCreateRequest& operator=(const AdAccountCreateRequest& other) = default; // copy assignment
    AdAccountCreateRequest& operator=(AdAccountCreateRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdAccountCreateRequest members

    /// <summary>
    /// 
    /// </summary>
    Country getCountry() const;
    void setCountry(Country value);

    /// <summary>
    /// Ad Account name.
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// Advertiser&#39;s owning user ID.
    /// </summary>
    std::string getOwnerUserId() const;
    void setOwnerUserId(std::string value);

protected:
    Country m_Country = Country{};
    std::string m_Name = "";
    std::string m_Owner_user_id = "";
};

std::vector<AdAccountCreateRequest> createAdAccountCreateRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdAccountCreateRequest>(const AdAccountCreateRequest& val) {
    return val.toPropertyTree();
}

template<>
inline AdAccountCreateRequest fromPt<AdAccountCreateRequest>(const boost::property_tree::ptree& pt) {
    AdAccountCreateRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdAccountCreateRequest_H_ */
