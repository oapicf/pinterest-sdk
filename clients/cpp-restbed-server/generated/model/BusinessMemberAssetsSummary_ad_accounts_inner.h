/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BusinessMemberAssetsSummary_ad_accounts_inner.h
 *
 * 
 */

#ifndef BusinessMemberAssetsSummary_ad_accounts_inner_H_
#define BusinessMemberAssetsSummary_ad_accounts_inner_H_



#include <string>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  BusinessMemberAssetsSummary_ad_accounts_inner 
{
public:
    BusinessMemberAssetsSummary_ad_accounts_inner() = default;
    explicit BusinessMemberAssetsSummary_ad_accounts_inner(boost::property_tree::ptree const& pt);
    virtual ~BusinessMemberAssetsSummary_ad_accounts_inner() = default;

    BusinessMemberAssetsSummary_ad_accounts_inner(const BusinessMemberAssetsSummary_ad_accounts_inner& other) = default; // copy constructor
    BusinessMemberAssetsSummary_ad_accounts_inner(BusinessMemberAssetsSummary_ad_accounts_inner&& other) noexcept = default; // move constructor

    BusinessMemberAssetsSummary_ad_accounts_inner& operator=(const BusinessMemberAssetsSummary_ad_accounts_inner& other) = default; // copy assignment
    BusinessMemberAssetsSummary_ad_accounts_inner& operator=(BusinessMemberAssetsSummary_ad_accounts_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// BusinessMemberAssetsSummary_ad_accounts_inner members

    /// <summary>
    /// Unique identifier of a business ad account.
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// Permission levels member or partner has on an asset.
    /// </summary>
    std::vector<std::string> getPermissions() const;
    void setPermissions(std::vector<std::string> value);

protected:
    std::string m_Id = "";
    std::vector<std::string> m_Permissions;
};

std::vector<BusinessMemberAssetsSummary_ad_accounts_inner> createBusinessMemberAssetsSummary_ad_accounts_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<BusinessMemberAssetsSummary_ad_accounts_inner>(const BusinessMemberAssetsSummary_ad_accounts_inner& val) {
    return val.toPropertyTree();
}

template<>
inline BusinessMemberAssetsSummary_ad_accounts_inner fromPt<BusinessMemberAssetsSummary_ad_accounts_inner>(const boost::property_tree::ptree& pt) {
    BusinessMemberAssetsSummary_ad_accounts_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* BusinessMemberAssetsSummary_ad_accounts_inner_H_ */
