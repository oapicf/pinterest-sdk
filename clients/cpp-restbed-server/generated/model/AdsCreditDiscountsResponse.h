/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdsCreditDiscountsResponse.h
 *
 * 
 */

#ifndef AdsCreditDiscountsResponse_H_
#define AdsCreditDiscountsResponse_H_



#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AdsCreditDiscountsResponse 
{
public:
    AdsCreditDiscountsResponse() = default;
    explicit AdsCreditDiscountsResponse(boost::property_tree::ptree const& pt);
    virtual ~AdsCreditDiscountsResponse() = default;

    AdsCreditDiscountsResponse(const AdsCreditDiscountsResponse& other) = default; // copy constructor
    AdsCreditDiscountsResponse(AdsCreditDiscountsResponse&& other) noexcept = default; // move constructor

    AdsCreditDiscountsResponse& operator=(const AdsCreditDiscountsResponse& other) = default; // copy assignment
    AdsCreditDiscountsResponse& operator=(AdsCreditDiscountsResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdsCreditDiscountsResponse members

    /// <summary>
    /// True if the offer code is currently active.
    /// </summary>
    bool isActive() const;
    void setActive(bool value);

    /// <summary>
    /// Advertiser ID the offer was applied to.
    /// </summary>
    std::string getAdvertiserId() const;
    void setAdvertiserId(std::string value);

    /// <summary>
    /// The type of discount of this credit
    /// </summary>
    std::string getDiscountType() const;
    void setDiscountType(std::string value);

    /// <summary>
    /// The discount applied in the offerâ€™s currency value.
    /// </summary>
    double getDiscountInMicroCurrency() const;
    void setDiscountInMicroCurrency(double value);

    /// <summary>
    /// Currency value for the discount.
    /// </summary>
    std::string getDiscountCurrency() const;
    void setDiscountCurrency(std::string value);

    /// <summary>
    /// Human readable title of the offer code.
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string value);

    /// <summary>
    /// The credits left to spend.
    /// </summary>
    double getRemainingDiscountInMicroCurrency() const;
    void setRemainingDiscountInMicroCurrency(double value);

protected:
    bool m_Active = false;
    std::string m_Advertiser_id = "";
    std::string m_DiscountType = "";
    double m_DiscountInMicroCurrency = 0.0;
    std::string m_DiscountCurrency = "";
    std::string m_Title = "";
    double m_RemainingDiscountInMicroCurrency = 0.0;
};

std::vector<AdsCreditDiscountsResponse> createAdsCreditDiscountsResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdsCreditDiscountsResponse>(const AdsCreditDiscountsResponse& val) {
    return val.toPropertyTree();
}

template<>
inline AdsCreditDiscountsResponse fromPt<AdsCreditDiscountsResponse>(const boost::property_tree::ptree& pt) {
    AdsCreditDiscountsResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdsCreditDiscountsResponse_H_ */
