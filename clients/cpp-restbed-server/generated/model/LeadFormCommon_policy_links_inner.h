/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LeadFormCommon_policy_links_inner.h
 *
 * 
 */

#ifndef LeadFormCommon_policy_links_inner_H_
#define LeadFormCommon_policy_links_inner_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  LeadFormCommon_policy_links_inner 
{
public:
    LeadFormCommon_policy_links_inner() = default;
    explicit LeadFormCommon_policy_links_inner(boost::property_tree::ptree const& pt);
    virtual ~LeadFormCommon_policy_links_inner() = default;

    LeadFormCommon_policy_links_inner(const LeadFormCommon_policy_links_inner& other) = default; // copy constructor
    LeadFormCommon_policy_links_inner(LeadFormCommon_policy_links_inner&& other) noexcept = default; // move constructor

    LeadFormCommon_policy_links_inner& operator=(const LeadFormCommon_policy_links_inner& other) = default; // copy assignment
    LeadFormCommon_policy_links_inner& operator=(LeadFormCommon_policy_links_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// LeadFormCommon_policy_links_inner members

    /// <summary>
    /// Policy label for an additional policy link.
    /// </summary>
    std::string getLabel() const;
    void setLabel(std::string value);

    /// <summary>
    /// Policy link for an additional policy link.
    /// </summary>
    std::string getLink() const;
    void setLink(std::string value);

protected:
    std::string m_Label = "";
    std::string m_Link = "";
};

std::vector<LeadFormCommon_policy_links_inner> createLeadFormCommon_policy_links_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<LeadFormCommon_policy_links_inner>(const LeadFormCommon_policy_links_inner& val) {
    return val.toPropertyTree();
}

template<>
inline LeadFormCommon_policy_links_inner fromPt<LeadFormCommon_policy_links_inner>(const boost::property_tree::ptree& pt) {
    LeadFormCommon_policy_links_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* LeadFormCommon_policy_links_inner_H_ */
