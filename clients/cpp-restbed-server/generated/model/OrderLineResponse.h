/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderLineResponse.h
 *
 * 
 */

#ifndef OrderLineResponse_H_
#define OrderLineResponse_H_



#include "OrderLine.h"
#include "OrderLineError.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrderLineResponse 
{
public:
    OrderLineResponse() = default;
    explicit OrderLineResponse(boost::property_tree::ptree const& pt);
    virtual ~OrderLineResponse() = default;

    OrderLineResponse(const OrderLineResponse& other) = default; // copy constructor
    OrderLineResponse(OrderLineResponse&& other) noexcept = default; // move constructor

    OrderLineResponse& operator=(const OrderLineResponse& other) = default; // copy assignment
    OrderLineResponse& operator=(OrderLineResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OrderLineResponse members

    /// <summary>
    /// Error list if update(s) fail.
    /// </summary>
    std::vector<OrderLineError> getErrors() const;
    void setErrors(std::vector<OrderLineError> value);

    /// <summary>
    /// Order Line object array.
    /// </summary>
    std::vector<OrderLine> getOrderLine() const;
    void setOrderLine(std::vector<OrderLine> value);

protected:
    std::vector<OrderLineError> m_Errors;
    std::vector<OrderLine> m_Order_line;
};

std::vector<OrderLineResponse> createOrderLineResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OrderLineResponse>(const OrderLineResponse& val) {
    return val.toPropertyTree();
}

template<>
inline OrderLineResponse fromPt<OrderLineResponse>(const boost::property_tree::ptree& pt) {
    OrderLineResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OrderLineResponse_H_ */
