/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpdateAssetGroupBody_asset_groups_to_update_inner.h
 *
 * 
 */

#ifndef UpdateAssetGroupBody_asset_groups_to_update_inner_H_
#define UpdateAssetGroupBody_asset_groups_to_update_inner_H_



#include "AssetGroupType.h"
#include <string>
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  UpdateAssetGroupBody_asset_groups_to_update_inner 
{
public:
    UpdateAssetGroupBody_asset_groups_to_update_inner() = default;
    explicit UpdateAssetGroupBody_asset_groups_to_update_inner(boost::property_tree::ptree const& pt);
    virtual ~UpdateAssetGroupBody_asset_groups_to_update_inner() = default;

    UpdateAssetGroupBody_asset_groups_to_update_inner(const UpdateAssetGroupBody_asset_groups_to_update_inner& other) = default; // copy constructor
    UpdateAssetGroupBody_asset_groups_to_update_inner(UpdateAssetGroupBody_asset_groups_to_update_inner&& other) noexcept = default; // move constructor

    UpdateAssetGroupBody_asset_groups_to_update_inner& operator=(const UpdateAssetGroupBody_asset_groups_to_update_inner& other) = default; // copy assignment
    UpdateAssetGroupBody_asset_groups_to_update_inner& operator=(UpdateAssetGroupBody_asset_groups_to_update_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// UpdateAssetGroupBody_asset_groups_to_update_inner members

    /// <summary>
    /// Unique identifier of the asset group to update.
    /// </summary>
    std::string getAssetGroupId() const;
    void setAssetGroupId(std::string value);

    /// <summary>
    /// Asset Group name
    /// </summary>
    std::string getName() const;
    void setName(std::string value);

    /// <summary>
    /// Asset group description
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string value);

    /// <summary>
    /// Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
    /// </summary>
    std::vector<AssetGroupType> getAssetGroupTypes() const;
    void setAssetGroupTypes(std::vector<AssetGroupType> value);

    /// <summary>
    /// A list of asset ids to add to the asset group.
    /// </summary>
    std::vector<std::string> getAssetsToAdd() const;
    void setAssetsToAdd(std::vector<std::string> value);

    /// <summary>
    /// A list of asset ids to remove from the asset group.
    /// </summary>
    std::vector<std::string> getAssetsToRemove() const;
    void setAssetsToRemove(std::vector<std::string> value);

protected:
    std::string m_Asset_group_id = "";
    std::string m_Name = "";
    std::string m_Description = "";
    std::vector<AssetGroupType> m_Asset_group_types;
    std::vector<std::string> m_Assets_to_add;
    std::vector<std::string> m_Assets_to_remove;
};

std::vector<UpdateAssetGroupBody_asset_groups_to_update_inner> createUpdateAssetGroupBody_asset_groups_to_update_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<UpdateAssetGroupBody_asset_groups_to_update_inner>(const UpdateAssetGroupBody_asset_groups_to_update_inner& val) {
    return val.toPropertyTree();
}

template<>
inline UpdateAssetGroupBody_asset_groups_to_update_inner fromPt<UpdateAssetGroupBody_asset_groups_to_update_inner>(const boost::property_tree::ptree& pt) {
    UpdateAssetGroupBody_asset_groups_to_update_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* UpdateAssetGroupBody_asset_groups_to_update_inner_H_ */
