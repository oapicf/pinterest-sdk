/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LeadFormQuestion.h
 *
 * 
 */

#ifndef LeadFormQuestion_H_
#define LeadFormQuestion_H_



#include "LeadFormQuestionFieldType.h"
#include <string>
#include <vector>
#include "LeadFormQuestionType.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  LeadFormQuestion 
{
public:
    LeadFormQuestion() = default;
    explicit LeadFormQuestion(boost::property_tree::ptree const& pt);
    virtual ~LeadFormQuestion() = default;

    LeadFormQuestion(const LeadFormQuestion& other) = default; // copy constructor
    LeadFormQuestion(LeadFormQuestion&& other) noexcept = default; // move constructor

    LeadFormQuestion& operator=(const LeadFormQuestion& other) = default; // copy assignment
    LeadFormQuestion& operator=(LeadFormQuestion&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// LeadFormQuestion members

    /// <summary>
    /// 
    /// </summary>
    LeadFormQuestionType getQuestionType() const;
    void setQuestionType(LeadFormQuestionType value);

    /// <summary>
    /// 
    /// </summary>
    LeadFormQuestionFieldType getCustomQuestionFieldType() const;
    void setCustomQuestionFieldType(LeadFormQuestionFieldType value);

    /// <summary>
    /// Question label for a custom question.
    /// </summary>
    std::string getCustomQuestionLabel() const;
    void setCustomQuestionLabel(std::string value);

    /// <summary>
    /// Question options for a custom question.
    /// </summary>
    std::vector<std::string> getCustomQuestionOptions() const;
    void setCustomQuestionOptions(std::vector<std::string> value);

protected:
    LeadFormQuestionType m_Question_type = LeadFormQuestionType{};
    LeadFormQuestionFieldType m_Custom_question_field_type = LeadFormQuestionFieldType{};
    std::string m_Custom_question_label = "";
    std::vector<std::string> m_Custom_question_options;
};

std::vector<LeadFormQuestion> createLeadFormQuestionVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<LeadFormQuestion>(const LeadFormQuestion& val) {
    return val.toPropertyTree();
}

template<>
inline LeadFormQuestion fromPt<LeadFormQuestion>(const boost::property_tree::ptree& pt) {
    LeadFormQuestion ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* LeadFormQuestion_H_ */
