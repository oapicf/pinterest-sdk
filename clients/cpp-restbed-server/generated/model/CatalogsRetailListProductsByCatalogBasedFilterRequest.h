/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsRetailListProductsByCatalogBasedFilterRequest.h
 *
 * Request object to list products for a given retail catalog_id and product group filter.
 */

#ifndef CatalogsRetailListProductsByCatalogBasedFilterRequest_H_
#define CatalogsRetailListProductsByCatalogBasedFilterRequest_H_



#include "Country.h"
#include <string>
#include "CatalogsProductGroupFilters.h"
#include "CatalogsLocale.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Request object to list products for a given retail catalog_id and product group filter.
/// </summary>
class  CatalogsRetailListProductsByCatalogBasedFilterRequest 
{
public:
    CatalogsRetailListProductsByCatalogBasedFilterRequest() = default;
    explicit CatalogsRetailListProductsByCatalogBasedFilterRequest(boost::property_tree::ptree const& pt);
    virtual ~CatalogsRetailListProductsByCatalogBasedFilterRequest() = default;

    CatalogsRetailListProductsByCatalogBasedFilterRequest(const CatalogsRetailListProductsByCatalogBasedFilterRequest& other) = default; // copy constructor
    CatalogsRetailListProductsByCatalogBasedFilterRequest(CatalogsRetailListProductsByCatalogBasedFilterRequest&& other) noexcept = default; // move constructor

    CatalogsRetailListProductsByCatalogBasedFilterRequest& operator=(const CatalogsRetailListProductsByCatalogBasedFilterRequest& other) = default; // copy assignment
    CatalogsRetailListProductsByCatalogBasedFilterRequest& operator=(CatalogsRetailListProductsByCatalogBasedFilterRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsRetailListProductsByCatalogBasedFilterRequest members

    /// <summary>
    /// Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one.
    /// </summary>
    std::string getCatalogType() const;
    void setCatalogType(std::string value);

    /// <summary>
    /// Catalog id pertaining to the retail product group.
    /// </summary>
    std::string getCatalogId() const;
    void setCatalogId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupFilters getFilters() const;
    void setFilters(CatalogsProductGroupFilters value);

    /// <summary>
    /// 
    /// </summary>
    Country getCountry() const;
    void setCountry(Country value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsLocale getLocale() const;
    void setLocale(CatalogsLocale value);

protected:
    std::string m_Catalog_type = "";
    std::string m_Catalog_id = "";
    CatalogsProductGroupFilters m_Filters;
    Country m_Country = Country{};
    CatalogsLocale m_Locale = CatalogsLocale{};
};

std::vector<CatalogsRetailListProductsByCatalogBasedFilterRequest> createCatalogsRetailListProductsByCatalogBasedFilterRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsRetailListProductsByCatalogBasedFilterRequest>(const CatalogsRetailListProductsByCatalogBasedFilterRequest& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsRetailListProductsByCatalogBasedFilterRequest fromPt<CatalogsRetailListProductsByCatalogBasedFilterRequest>(const boost::property_tree::ptree& pt) {
    CatalogsRetailListProductsByCatalogBasedFilterRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsRetailListProductsByCatalogBasedFilterRequest_H_ */
