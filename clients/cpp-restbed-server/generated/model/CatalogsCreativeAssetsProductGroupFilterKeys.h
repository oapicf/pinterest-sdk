/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsCreativeAssetsProductGroupFilterKeys.h
 *
 * 
 */

#ifndef CatalogsCreativeAssetsProductGroupFilterKeys_H_
#define CatalogsCreativeAssetsProductGroupFilterKeys_H_



#include "GoogleProductCategory0Filter.h"
#include "GoogleProductCategory6Filter.h"
#include "GoogleProductCategory4Filter.h"
#include "CustomLabel3Filter.h"
#include "CatalogsProductGroupMultipleStringListCriteria.h"
#include "CatalogsProductGroupMultipleMediaTypesCriteria.h"
#include "GoogleProductCategory3Filter.h"
#include "CatalogsProductGroupMultipleStringCriteria.h"
#include "CustomLabel2Filter.h"
#include "MediaTypeFilter.h"
#include "CustomLabel4Filter.h"
#include "GoogleProductCategory5Filter.h"
#include "CustomLabel1Filter.h"
#include "GoogleProductCategory2Filter.h"
#include "CreativeAssetsIdFilter.h"
#include "CustomLabel0Filter.h"
#include "GoogleProductCategory1Filter.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "CreativeAssetsIdFilter.h"
#include "CustomLabel0Filter.h"
#include "CustomLabel1Filter.h"
#include "CustomLabel2Filter.h"
#include "CustomLabel3Filter.h"
#include "CustomLabel4Filter.h"
#include "GoogleProductCategory6Filter.h"
#include "GoogleProductCategory5Filter.h"
#include "GoogleProductCategory4Filter.h"
#include "GoogleProductCategory3Filter.h"
#include "GoogleProductCategory2Filter.h"
#include "GoogleProductCategory1Filter.h"
#include "GoogleProductCategory0Filter.h"
#include "MediaTypeFilter.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CatalogsCreativeAssetsProductGroupFilterKeys : public CreativeAssetsIdFilter, public CustomLabel0Filter, public CustomLabel1Filter, public CustomLabel2Filter, public CustomLabel3Filter, public CustomLabel4Filter, public GoogleProductCategory6Filter, public GoogleProductCategory5Filter, public GoogleProductCategory4Filter, public GoogleProductCategory3Filter, public GoogleProductCategory2Filter, public GoogleProductCategory1Filter, public GoogleProductCategory0Filter, public MediaTypeFilter
{
public:
    CatalogsCreativeAssetsProductGroupFilterKeys() = default;
    explicit CatalogsCreativeAssetsProductGroupFilterKeys(boost::property_tree::ptree const& pt);
    virtual ~CatalogsCreativeAssetsProductGroupFilterKeys() = default;

    CatalogsCreativeAssetsProductGroupFilterKeys(const CatalogsCreativeAssetsProductGroupFilterKeys& other) = default; // copy constructor
    CatalogsCreativeAssetsProductGroupFilterKeys(CatalogsCreativeAssetsProductGroupFilterKeys&& other) noexcept = default; // move constructor

    CatalogsCreativeAssetsProductGroupFilterKeys& operator=(const CatalogsCreativeAssetsProductGroupFilterKeys& other) = default; // copy assignment
    CatalogsCreativeAssetsProductGroupFilterKeys& operator=(CatalogsCreativeAssetsProductGroupFilterKeys&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsCreativeAssetsProductGroupFilterKeys members

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCREATIVEASSETSID() const;
    void setCREATIVEASSETSID(CatalogsProductGroupMultipleStringCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL0() const;
    void setCUSTOMLABEL0(CatalogsProductGroupMultipleStringCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL1() const;
    void setCUSTOMLABEL1(CatalogsProductGroupMultipleStringCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL2() const;
    void setCUSTOMLABEL2(CatalogsProductGroupMultipleStringCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL3() const;
    void setCUSTOMLABEL3(CatalogsProductGroupMultipleStringCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL4() const;
    void setCUSTOMLABEL4(CatalogsProductGroupMultipleStringCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY6() const;
    void setGOOGLEPRODUCTCATEGORY6(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY5() const;
    void setGOOGLEPRODUCTCATEGORY5(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY4() const;
    void setGOOGLEPRODUCTCATEGORY4(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY3() const;
    void setGOOGLEPRODUCTCATEGORY3(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY2() const;
    void setGOOGLEPRODUCTCATEGORY2(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY1() const;
    void setGOOGLEPRODUCTCATEGORY1(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringListCriteria getGOOGLEPRODUCTCATEGORY0() const;
    void setGOOGLEPRODUCTCATEGORY0(CatalogsProductGroupMultipleStringListCriteria value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleMediaTypesCriteria getMEDIATYPE() const;
    void setMEDIATYPE(CatalogsProductGroupMultipleMediaTypesCriteria value);

protected:
    CatalogsProductGroupMultipleStringCriteria m_CREATIVE_ASSETS_ID = CatalogsProductGroupMultipleStringCriteria{};
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_0 = CatalogsProductGroupMultipleStringCriteria{};
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_1 = CatalogsProductGroupMultipleStringCriteria{};
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_2 = CatalogsProductGroupMultipleStringCriteria{};
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_3 = CatalogsProductGroupMultipleStringCriteria{};
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_4 = CatalogsProductGroupMultipleStringCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_6 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_5 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_4 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_3 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_2 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_1 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleStringListCriteria m_GOOGLE_PRODUCT_CATEGORY_0 = CatalogsProductGroupMultipleStringListCriteria{};
    CatalogsProductGroupMultipleMediaTypesCriteria m_MEDIA_TYPE = CatalogsProductGroupMultipleMediaTypesCriteria{};
};

std::vector<CatalogsCreativeAssetsProductGroupFilterKeys> createCatalogsCreativeAssetsProductGroupFilterKeysVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsCreativeAssetsProductGroupFilterKeys>(const CatalogsCreativeAssetsProductGroupFilterKeys& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsCreativeAssetsProductGroupFilterKeys fromPt<CatalogsCreativeAssetsProductGroupFilterKeys>(const boost::property_tree::ptree& pt) {
    CatalogsCreativeAssetsProductGroupFilterKeys ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsCreativeAssetsProductGroupFilterKeys_H_ */
