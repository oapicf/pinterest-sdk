/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MembersToDeleteBody_members_inner.h
 *
 * 
 */

#ifndef MembersToDeleteBody_members_inner_H_
#define MembersToDeleteBody_members_inner_H_



#include "BusinessRoleForMembers.h"
#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  MembersToDeleteBody_members_inner 
{
public:
    MembersToDeleteBody_members_inner() = default;
    explicit MembersToDeleteBody_members_inner(boost::property_tree::ptree const& pt);
    virtual ~MembersToDeleteBody_members_inner() = default;

    MembersToDeleteBody_members_inner(const MembersToDeleteBody_members_inner& other) = default; // copy constructor
    MembersToDeleteBody_members_inner(MembersToDeleteBody_members_inner&& other) noexcept = default; // move constructor

    MembersToDeleteBody_members_inner& operator=(const MembersToDeleteBody_members_inner& other) = default; // copy assignment
    MembersToDeleteBody_members_inner& operator=(MembersToDeleteBody_members_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// MembersToDeleteBody_members_inner members

    /// <summary>
    /// Unique identifier of the member
    /// </summary>
    std::string getMemberId() const;
    void setMemberId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    BusinessRoleForMembers getBusinessRole() const;
    void setBusinessRole(BusinessRoleForMembers value);

protected:
    std::string m_Member_id = "";
    BusinessRoleForMembers m_Business_role = BusinessRoleForMembers{};
};

std::vector<MembersToDeleteBody_members_inner> createMembersToDeleteBody_members_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<MembersToDeleteBody_members_inner>(const MembersToDeleteBody_members_inner& val) {
    return val.toPropertyTree();
}

template<>
inline MembersToDeleteBody_members_inner fromPt<MembersToDeleteBody_members_inner>(const boost::property_tree::ptree& pt) {
    MembersToDeleteBody_members_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* MembersToDeleteBody_members_inner_H_ */
