/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedsCreateRequest_default_locale.h
 *
 * The locale used within a feed for product descriptions.
 */

#ifndef CatalogsFeedsCreateRequest_default_locale_H_
#define CatalogsFeedsCreateRequest_default_locale_H_



#include "CatalogsLocale.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "CatalogsLocale.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// The locale used within a feed for product descriptions.
/// </summary>
class  CatalogsFeedsCreateRequest_default_locale : public CatalogsLocale
{
public:
    CatalogsFeedsCreateRequest_default_locale() = default;
    explicit CatalogsFeedsCreateRequest_default_locale(boost::property_tree::ptree const& pt);
    virtual ~CatalogsFeedsCreateRequest_default_locale() = default;

    CatalogsFeedsCreateRequest_default_locale(const CatalogsFeedsCreateRequest_default_locale& other) = default; // copy constructor
    CatalogsFeedsCreateRequest_default_locale(CatalogsFeedsCreateRequest_default_locale&& other) noexcept = default; // move constructor

    CatalogsFeedsCreateRequest_default_locale& operator=(const CatalogsFeedsCreateRequest_default_locale& other) = default; // copy assignment
    CatalogsFeedsCreateRequest_default_locale& operator=(CatalogsFeedsCreateRequest_default_locale&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsFeedsCreateRequest_default_locale members

protected:
};

std::vector<CatalogsFeedsCreateRequest_default_locale> createCatalogsFeedsCreateRequest_default_localeVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsFeedsCreateRequest_default_locale>(const CatalogsFeedsCreateRequest_default_locale& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsFeedsCreateRequest_default_locale fromPt<CatalogsFeedsCreateRequest_default_locale>(const boost::property_tree::ptree& pt) {
    CatalogsFeedsCreateRequest_default_locale ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsFeedsCreateRequest_default_locale_H_ */
