/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsCreateHotelItem.h
 *
 * A hotel item to be created.
 */

#ifndef CatalogsCreateHotelItem_H_
#define CatalogsCreateHotelItem_H_



#include <string>
#include "CatalogsHotelAttributes.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// A hotel item to be created.
/// </summary>
class  CatalogsCreateHotelItem 
{
public:
    CatalogsCreateHotelItem() = default;
    explicit CatalogsCreateHotelItem(boost::property_tree::ptree const& pt);
    virtual ~CatalogsCreateHotelItem() = default;

    CatalogsCreateHotelItem(const CatalogsCreateHotelItem& other) = default; // copy constructor
    CatalogsCreateHotelItem(CatalogsCreateHotelItem&& other) noexcept = default; // move constructor

    CatalogsCreateHotelItem& operator=(const CatalogsCreateHotelItem& other) = default; // copy assignment
    CatalogsCreateHotelItem& operator=(CatalogsCreateHotelItem&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsCreateHotelItem members

    /// <summary>
    /// The catalog hotel id in the merchant namespace
    /// </summary>
    std::string getHotelId() const;
    void setHotelId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getOperation() const;
    void setOperation(std::string value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsHotelAttributes getAttributes() const;
    void setAttributes(CatalogsHotelAttributes value);

protected:
    std::string m_Hotel_id = "";
    std::string m_Operation = "";
    CatalogsHotelAttributes m_Attributes;
};

std::vector<CatalogsCreateHotelItem> createCatalogsCreateHotelItemVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsCreateHotelItem>(const CatalogsCreateHotelItem& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsCreateHotelItem fromPt<CatalogsCreateHotelItem>(const boost::property_tree::ptree& pt) {
    CatalogsCreateHotelItem ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsCreateHotelItem_H_ */
