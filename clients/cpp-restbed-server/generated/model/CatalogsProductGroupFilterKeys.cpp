/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CatalogsProductGroupFilterKeys.h"

#include <string>
#include <vector>
#include <map>
#include <sstream>
#include <stdexcept>
#include <regex>
#include <boost/lexical_cast.hpp>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>
#include "helpers.h"

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

CatalogsProductGroupFilterKeys::CatalogsProductGroupFilterKeys(boost::property_tree::ptree const& pt)
{
        fromPropertyTree(pt);
}


std::string CatalogsProductGroupFilterKeys::toJsonString(bool prettyJson /* = false */) const
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
    // workaround inspired by: https://stackoverflow.com/a/56395440
    std::regex reg("\\\"([0-9]+\\.{0,1}[0-9]*)\\\"");
    std::string result = std::regex_replace(ss.str(), reg, "$1");
    return result;
}

void CatalogsProductGroupFilterKeys::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree CatalogsProductGroupFilterKeys::toPropertyTree() const
{
	ptree pt;
	ptree tmp_node;
	return pt;
}

void CatalogsProductGroupFilterKeys::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
}

CatalogsProductGroupPricingCriteria CatalogsProductGroupFilterKeys::getMINPRICE() const
{
    return m_MIN_PRICE;
}

void CatalogsProductGroupFilterKeys::setMINPRICE(CatalogsProductGroupPricingCriteria value)
{
    m_MIN_PRICE = value;
}


CatalogsProductGroupPricingCriteria CatalogsProductGroupFilterKeys::getMAXPRICE() const
{
    return m_MAX_PRICE;
}

void CatalogsProductGroupFilterKeys::setMAXPRICE(CatalogsProductGroupPricingCriteria value)
{
    m_MAX_PRICE = value;
}


CatalogsProductGroupCurrencyCriteria CatalogsProductGroupFilterKeys::getCURRENCY() const
{
    return m_CURRENCY;
}

void CatalogsProductGroupFilterKeys::setCURRENCY(CatalogsProductGroupCurrencyCriteria value)
{
    m_CURRENCY = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getITEMID() const
{
    return m_ITEM_ID;
}

void CatalogsProductGroupFilterKeys::setITEMID(CatalogsProductGroupMultipleStringCriteria value)
{
    m_ITEM_ID = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getAVAILABILITY() const
{
    return m_AVAILABILITY;
}

void CatalogsProductGroupFilterKeys::setAVAILABILITY(CatalogsProductGroupMultipleStringCriteria value)
{
    m_AVAILABILITY = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getBRAND() const
{
    return m_BRAND;
}

void CatalogsProductGroupFilterKeys::setBRAND(CatalogsProductGroupMultipleStringCriteria value)
{
    m_BRAND = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getCONDITION() const
{
    return m_CONDITION;
}

void CatalogsProductGroupFilterKeys::setCONDITION(CatalogsProductGroupMultipleStringCriteria value)
{
    m_CONDITION = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getCUSTOMLABEL0() const
{
    return m_CUSTOM_LABEL_0;
}

void CatalogsProductGroupFilterKeys::setCUSTOMLABEL0(CatalogsProductGroupMultipleStringCriteria value)
{
    m_CUSTOM_LABEL_0 = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getCUSTOMLABEL1() const
{
    return m_CUSTOM_LABEL_1;
}

void CatalogsProductGroupFilterKeys::setCUSTOMLABEL1(CatalogsProductGroupMultipleStringCriteria value)
{
    m_CUSTOM_LABEL_1 = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getCUSTOMLABEL2() const
{
    return m_CUSTOM_LABEL_2;
}

void CatalogsProductGroupFilterKeys::setCUSTOMLABEL2(CatalogsProductGroupMultipleStringCriteria value)
{
    m_CUSTOM_LABEL_2 = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getCUSTOMLABEL3() const
{
    return m_CUSTOM_LABEL_3;
}

void CatalogsProductGroupFilterKeys::setCUSTOMLABEL3(CatalogsProductGroupMultipleStringCriteria value)
{
    m_CUSTOM_LABEL_3 = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getCUSTOMLABEL4() const
{
    return m_CUSTOM_LABEL_4;
}

void CatalogsProductGroupFilterKeys::setCUSTOMLABEL4(CatalogsProductGroupMultipleStringCriteria value)
{
    m_CUSTOM_LABEL_4 = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getITEMGROUPID() const
{
    return m_ITEM_GROUP_ID;
}

void CatalogsProductGroupFilterKeys::setITEMGROUPID(CatalogsProductGroupMultipleStringCriteria value)
{
    m_ITEM_GROUP_ID = value;
}


CatalogsProductGroupMultipleGenderCriteria CatalogsProductGroupFilterKeys::getGENDER() const
{
    return m_GENDER;
}

void CatalogsProductGroupFilterKeys::setGENDER(CatalogsProductGroupMultipleGenderCriteria value)
{
    m_GENDER = value;
}


CatalogsProductGroupMultipleMediaTypesCriteria CatalogsProductGroupFilterKeys::getMEDIATYPE() const
{
    return m_MEDIA_TYPE;
}

void CatalogsProductGroupFilterKeys::setMEDIATYPE(CatalogsProductGroupMultipleMediaTypesCriteria value)
{
    m_MEDIA_TYPE = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getPRODUCTTYPE4() const
{
    return m_PRODUCT_TYPE_4;
}

void CatalogsProductGroupFilterKeys::setPRODUCTTYPE4(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_PRODUCT_TYPE_4 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getPRODUCTTYPE3() const
{
    return m_PRODUCT_TYPE_3;
}

void CatalogsProductGroupFilterKeys::setPRODUCTTYPE3(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_PRODUCT_TYPE_3 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getPRODUCTTYPE2() const
{
    return m_PRODUCT_TYPE_2;
}

void CatalogsProductGroupFilterKeys::setPRODUCTTYPE2(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_PRODUCT_TYPE_2 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getPRODUCTTYPE1() const
{
    return m_PRODUCT_TYPE_1;
}

void CatalogsProductGroupFilterKeys::setPRODUCTTYPE1(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_PRODUCT_TYPE_1 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getPRODUCTTYPE0() const
{
    return m_PRODUCT_TYPE_0;
}

void CatalogsProductGroupFilterKeys::setPRODUCTTYPE0(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_PRODUCT_TYPE_0 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY6() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_6;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY6(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_6 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY5() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_5;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY5(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_5 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY4() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_4;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY4(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_4 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY3() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_3;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY3(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_3 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY2() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_2;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY2(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_2 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY1() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_1;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY1(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_1 = value;
}


CatalogsProductGroupMultipleStringListCriteria CatalogsProductGroupFilterKeys::getGOOGLEPRODUCTCATEGORY0() const
{
    return m_GOOGLE_PRODUCT_CATEGORY_0;
}

void CatalogsProductGroupFilterKeys::setGOOGLEPRODUCTCATEGORY0(CatalogsProductGroupMultipleStringListCriteria value)
{
    m_GOOGLE_PRODUCT_CATEGORY_0 = value;
}


CatalogsProductGroupMultipleStringCriteria CatalogsProductGroupFilterKeys::getPRODUCTGROUP() const
{
    return m_PRODUCT_GROUP;
}

void CatalogsProductGroupFilterKeys::setPRODUCTGROUP(CatalogsProductGroupMultipleStringCriteria value)
{
    m_PRODUCT_GROUP = value;
}



std::vector<CatalogsProductGroupFilterKeys> createCatalogsProductGroupFilterKeysVectorFromJsonString(const std::string& json)
{
    std::stringstream sstream(json);
    boost::property_tree::ptree pt;
    boost::property_tree::json_parser::read_json(sstream,pt);

    auto vec = std::vector<CatalogsProductGroupFilterKeys>();
    for (const auto& child: pt) {
        vec.emplace_back(CatalogsProductGroupFilterKeys(child.second));
    }

    return vec;
}

}
}
}
}

