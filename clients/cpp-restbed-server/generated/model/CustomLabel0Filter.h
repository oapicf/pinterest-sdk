/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CustomLabel0Filter.h
 *
 * 
 */

#ifndef CustomLabel0Filter_H_
#define CustomLabel0Filter_H_



#include "CatalogsProductGroupMultipleStringCriteria.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CustomLabel0Filter 
{
public:
    CustomLabel0Filter() = default;
    explicit CustomLabel0Filter(boost::property_tree::ptree const& pt);
    virtual ~CustomLabel0Filter() = default;

    CustomLabel0Filter(const CustomLabel0Filter& other) = default; // copy constructor
    CustomLabel0Filter(CustomLabel0Filter&& other) noexcept = default; // move constructor

    CustomLabel0Filter& operator=(const CustomLabel0Filter& other) = default; // copy assignment
    CustomLabel0Filter& operator=(CustomLabel0Filter&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CustomLabel0Filter members

    /// <summary>
    /// 
    /// </summary>
    CatalogsProductGroupMultipleStringCriteria getCUSTOMLABEL0() const;
    void setCUSTOMLABEL0(CatalogsProductGroupMultipleStringCriteria value);

protected:
    CatalogsProductGroupMultipleStringCriteria m_CUSTOM_LABEL_0 = CatalogsProductGroupMultipleStringCriteria{};
};

std::vector<CustomLabel0Filter> createCustomLabel0FilterVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CustomLabel0Filter>(const CustomLabel0Filter& val) {
    return val.toPropertyTree();
}

template<>
inline CustomLabel0Filter fromPt<CustomLabel0Filter>(const boost::property_tree::ptree& pt) {
    CustomLabel0Filter ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CustomLabel0Filter_H_ */
