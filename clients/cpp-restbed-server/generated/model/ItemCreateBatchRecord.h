/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ItemCreateBatchRecord.h
 *
 * Object describing an item batch record to create items
 */

#ifndef ItemCreateBatchRecord_H_
#define ItemCreateBatchRecord_H_



#include "ItemAttributesRequest.h"
#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Object describing an item batch record to create items
/// </summary>
class  ItemCreateBatchRecord 
{
public:
    ItemCreateBatchRecord() = default;
    explicit ItemCreateBatchRecord(boost::property_tree::ptree const& pt);
    virtual ~ItemCreateBatchRecord() = default;

    ItemCreateBatchRecord(const ItemCreateBatchRecord& other) = default; // copy constructor
    ItemCreateBatchRecord(ItemCreateBatchRecord&& other) noexcept = default; // move constructor

    ItemCreateBatchRecord& operator=(const ItemCreateBatchRecord& other) = default; // copy assignment
    ItemCreateBatchRecord& operator=(ItemCreateBatchRecord&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// ItemCreateBatchRecord members

    /// <summary>
    /// The catalog item id in the merchant namespace
    /// </summary>
    std::string getItemId() const;
    void setItemId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    ItemAttributesRequest getAttributes() const;
    void setAttributes(ItemAttributesRequest value);

protected:
    std::string m_Item_id = "";
    ItemAttributesRequest m_Attributes;
};

std::vector<ItemCreateBatchRecord> createItemCreateBatchRecordVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<ItemCreateBatchRecord>(const ItemCreateBatchRecord& val) {
    return val.toPropertyTree();
}

template<>
inline ItemCreateBatchRecord fromPt<ItemCreateBatchRecord>(const boost::property_tree::ptree& pt) {
    ItemCreateBatchRecord ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* ItemCreateBatchRecord_H_ */
