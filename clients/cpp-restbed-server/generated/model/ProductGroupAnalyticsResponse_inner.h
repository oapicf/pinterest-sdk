/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ProductGroupAnalyticsResponse_inner.h
 *
 * 
 */

#ifndef ProductGroupAnalyticsResponse_inner_H_
#define ProductGroupAnalyticsResponse_inner_H_



#include <string>
#include <map>
#include "AnyType.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ProductGroupAnalyticsResponse_inner 
{
public:
    ProductGroupAnalyticsResponse_inner() = default;
    explicit ProductGroupAnalyticsResponse_inner(boost::property_tree::ptree const& pt);
    virtual ~ProductGroupAnalyticsResponse_inner() = default;

    ProductGroupAnalyticsResponse_inner(const ProductGroupAnalyticsResponse_inner& other) = default; // copy constructor
    ProductGroupAnalyticsResponse_inner(ProductGroupAnalyticsResponse_inner&& other) noexcept = default; // move constructor

    ProductGroupAnalyticsResponse_inner& operator=(const ProductGroupAnalyticsResponse_inner& other) = default; // copy assignment
    ProductGroupAnalyticsResponse_inner& operator=(ProductGroupAnalyticsResponse_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// ProductGroupAnalyticsResponse_inner members

    /// <summary>
    /// The ID of the product group that this metrics belongs to.
    /// </summary>
    std::string getPRODUCTGROUPID() const;
    void setPRODUCTGROUPID(std::string value);

    /// <summary>
    /// Current metrics date. Only returned when granularity is a time-based value (&#x60;DAY&#x60;, &#x60;HOUR&#x60;, &#x60;WEEK&#x60;, &#x60;MONTH&#x60;)
    /// </summary>
    std::string getDATE() const;
    void setDATE(std::string value);

protected:
    std::string m_PRODUCT_GROUP_ID = "";
    std::string m_DATE = "";
};

std::vector<ProductGroupAnalyticsResponse_inner> createProductGroupAnalyticsResponse_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<ProductGroupAnalyticsResponse_inner>(const ProductGroupAnalyticsResponse_inner& val) {
    return val.toPropertyTree();
}

template<>
inline ProductGroupAnalyticsResponse_inner fromPt<ProductGroupAnalyticsResponse_inner>(const boost::property_tree::ptree& pt) {
    ProductGroupAnalyticsResponse_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* ProductGroupAnalyticsResponse_inner_H_ */
