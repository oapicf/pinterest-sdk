/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserWebsiteSummary.h
 *
 * 
 */

#ifndef UserWebsiteSummary_H_
#define UserWebsiteSummary_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  UserWebsiteSummary 
{
public:
    UserWebsiteSummary() = default;
    explicit UserWebsiteSummary(boost::property_tree::ptree const& pt);
    virtual ~UserWebsiteSummary() = default;

    UserWebsiteSummary(const UserWebsiteSummary& other) = default; // copy constructor
    UserWebsiteSummary(UserWebsiteSummary&& other) noexcept = default; // move constructor

    UserWebsiteSummary& operator=(const UserWebsiteSummary& other) = default; // copy assignment
    UserWebsiteSummary& operator=(UserWebsiteSummary&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// UserWebsiteSummary members

    /// <summary>
    /// Website with path or domain only
    /// </summary>
    std::string getWebsite() const;
    void setWebsite(std::string value);

    /// <summary>
    /// Status of the verification process
    /// </summary>
    std::string getStatus() const;
    void setStatus(std::string value);

    /// <summary>
    /// UTC timestamp when the verification happened - sometimes missing
    /// </summary>
    std::string getVerifiedAt() const;
    void setVerifiedAt(std::string value);

protected:
    std::string m_Website = "";
    std::string m_Status = "";
    std::string m_Verified_at = "";
};

std::vector<UserWebsiteSummary> createUserWebsiteSummaryVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<UserWebsiteSummary>(const UserWebsiteSummary& val) {
    return val.toPropertyTree();
}

template<>
inline UserWebsiteSummary fromPt<UserWebsiteSummary>(const boost::property_tree::ptree& pt) {
    UserWebsiteSummary ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* UserWebsiteSummary_H_ */
