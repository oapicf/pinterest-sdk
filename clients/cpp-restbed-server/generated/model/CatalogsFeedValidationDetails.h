/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedValidationDetails.h
 *
 * 
 */

#ifndef CatalogsFeedValidationDetails_H_
#define CatalogsFeedValidationDetails_H_



#include "CatalogsFeedValidationWarnings.h"
#include "CatalogsFeedValidationErrors.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CatalogsFeedValidationDetails 
{
public:
    CatalogsFeedValidationDetails() = default;
    explicit CatalogsFeedValidationDetails(boost::property_tree::ptree const& pt);
    virtual ~CatalogsFeedValidationDetails() = default;

    CatalogsFeedValidationDetails(const CatalogsFeedValidationDetails& other) = default; // copy constructor
    CatalogsFeedValidationDetails(CatalogsFeedValidationDetails&& other) noexcept = default; // move constructor

    CatalogsFeedValidationDetails& operator=(const CatalogsFeedValidationDetails& other) = default; // copy assignment
    CatalogsFeedValidationDetails& operator=(CatalogsFeedValidationDetails&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsFeedValidationDetails members

    /// <summary>
    /// 
    /// </summary>
    CatalogsFeedValidationErrors getErrors() const;
    void setErrors(CatalogsFeedValidationErrors value);

    /// <summary>
    /// 
    /// </summary>
    CatalogsFeedValidationWarnings getWarnings() const;
    void setWarnings(CatalogsFeedValidationWarnings value);

protected:
    CatalogsFeedValidationErrors m_Errors;
    CatalogsFeedValidationWarnings m_Warnings;
};

std::vector<CatalogsFeedValidationDetails> createCatalogsFeedValidationDetailsVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsFeedValidationDetails>(const CatalogsFeedValidationDetails& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsFeedValidationDetails fromPt<CatalogsFeedValidationDetails>(const boost::property_tree::ptree& pt) {
    CatalogsFeedValidationDetails ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsFeedValidationDetails_H_ */
