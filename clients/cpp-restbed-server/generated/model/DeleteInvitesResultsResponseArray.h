/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DeleteInvitesResultsResponseArray.h
 *
 * Response to delete invites sent to Members or Partners, if there is an exception, return the exception mapped with the invite id
 */

#ifndef DeleteInvitesResultsResponseArray_H_
#define DeleteInvitesResultsResponseArray_H_



#include "DeleteInvitesResultsResponseArray_items_inner.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Response to delete invites sent to Members or Partners, if there is an exception, return the exception mapped with the invite id
/// </summary>
class  DeleteInvitesResultsResponseArray 
{
public:
    DeleteInvitesResultsResponseArray() = default;
    explicit DeleteInvitesResultsResponseArray(boost::property_tree::ptree const& pt);
    virtual ~DeleteInvitesResultsResponseArray() = default;

    DeleteInvitesResultsResponseArray(const DeleteInvitesResultsResponseArray& other) = default; // copy constructor
    DeleteInvitesResultsResponseArray(DeleteInvitesResultsResponseArray&& other) noexcept = default; // move constructor

    DeleteInvitesResultsResponseArray& operator=(const DeleteInvitesResultsResponseArray& other) = default; // copy assignment
    DeleteInvitesResultsResponseArray& operator=(DeleteInvitesResultsResponseArray&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// DeleteInvitesResultsResponseArray members

    /// <summary>
    /// List of invite/Request deletion status. If there is an error, an exception object will be returned. If the invite/request was successfully cancelled, an invite object will be returned for the invite that was cancelled.
    /// </summary>
    std::vector<DeleteInvitesResultsResponseArray_items_inner> getItems() const;
    void setItems(std::vector<DeleteInvitesResultsResponseArray_items_inner> value);

protected:
    std::vector<DeleteInvitesResultsResponseArray_items_inner> m_Items;
};

std::vector<DeleteInvitesResultsResponseArray> createDeleteInvitesResultsResponseArrayVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<DeleteInvitesResultsResponseArray>(const DeleteInvitesResultsResponseArray& val) {
    return val.toPropertyTree();
}

template<>
inline DeleteInvitesResultsResponseArray fromPt<DeleteInvitesResultsResponseArray>(const boost::property_tree::ptree& pt) {
    DeleteInvitesResultsResponseArray ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* DeleteInvitesResultsResponseArray_H_ */
