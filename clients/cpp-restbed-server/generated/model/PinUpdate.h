/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PinUpdate.h
 *
 * Pin fields for updates
 */

#ifndef PinUpdate_H_
#define PinUpdate_H_



#include <string>
#include <vector>
#include "PinUpdate_carousel_slots_inner.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Pin fields for updates
/// </summary>
class  PinUpdate 
{
public:
    PinUpdate() = default;
    explicit PinUpdate(boost::property_tree::ptree const& pt);
    virtual ~PinUpdate() = default;

    PinUpdate(const PinUpdate& other) = default; // copy constructor
    PinUpdate(PinUpdate&& other) noexcept = default; // move constructor

    PinUpdate& operator=(const PinUpdate& other) = default; // copy assignment
    PinUpdate& operator=(PinUpdate&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// PinUpdate members

    /// <summary>
    /// Pin&#39;s alternative text.
    /// </summary>
    std::string getAltText() const;
    void setAltText(std::string value);

    /// <summary>
    /// The id of the board to move the Pin onto.
    /// </summary>
    std::string getBoardId() const;
    void setBoardId(std::string value);

    /// <summary>
    /// &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/create-a-board-section\&quot;&gt;Board section&lt;/a&gt; ID.
    /// </summary>
    std::string getBoardSectionId() const;
    void setBoardSectionId(std::string value);

    /// <summary>
    /// Pin description - 800 characters maximum.
    /// </summary>
    std::string getDescription() const;
    void setDescription(std::string value);

    /// <summary>
    /// URL viewer is taken to when they click pin.
    /// </summary>
    std::string getLink() const;
    void setLink(std::string value);

    /// <summary>
    /// The native pin title that creators explicitly prefer to display.
    /// </summary>
    std::string getTitle() const;
    void setTitle(std::string value);

    /// <summary>
    /// Carousel Pin slots data.
    /// </summary>
    std::vector<PinUpdate_carousel_slots_inner> getCarouselSlots() const;
    void setCarouselSlots(std::vector<PinUpdate_carousel_slots_inner> value);

    /// <summary>
    /// Private note for this Pin. &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/article/add-notes-to-your-pins\&quot;&gt;Learn more&lt;/a&gt;.
    /// </summary>
    std::string getNote() const;
    void setNote(std::string value);

protected:
    std::string m_Alt_text = "";
    std::string m_Board_id = "";
    std::string m_Board_section_id = "";
    std::string m_Description = "";
    std::string m_Link = "";
    std::string m_Title = "";
    std::vector<PinUpdate_carousel_slots_inner> m_Carousel_slots;
    std::string m_Note = "";
};

std::vector<PinUpdate> createPinUpdateVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<PinUpdate>(const PinUpdate& val) {
    return val.toPropertyTree();
}

template<>
inline PinUpdate fromPt<PinUpdate>(const boost::property_tree::ptree& pt) {
    PinUpdate ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* PinUpdate_H_ */
