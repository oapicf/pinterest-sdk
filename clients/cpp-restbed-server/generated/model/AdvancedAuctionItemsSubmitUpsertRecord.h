/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdvancedAuctionItemsSubmitUpsertRecord.h
 *
 * Object describing an item bid option upsert operation
 */

#ifndef AdvancedAuctionItemsSubmitUpsertRecord_H_
#define AdvancedAuctionItemsSubmitUpsertRecord_H_



#include "Country.h"
#include <string>
#include "Language.h"
#include "AdvancedAuctionBidOptions.h"
#include "UpdateMaskBidOptionField.h"
#include <vector>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "AdvancedAuctionItem.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Object describing an item bid option upsert operation
/// </summary>
class  AdvancedAuctionItemsSubmitUpsertRecord : public AdvancedAuctionItem
{
public:
    AdvancedAuctionItemsSubmitUpsertRecord() = default;
    explicit AdvancedAuctionItemsSubmitUpsertRecord(boost::property_tree::ptree const& pt);
    virtual ~AdvancedAuctionItemsSubmitUpsertRecord() = default;

    AdvancedAuctionItemsSubmitUpsertRecord(const AdvancedAuctionItemsSubmitUpsertRecord& other) = default; // copy constructor
    AdvancedAuctionItemsSubmitUpsertRecord(AdvancedAuctionItemsSubmitUpsertRecord&& other) noexcept = default; // move constructor

    AdvancedAuctionItemsSubmitUpsertRecord& operator=(const AdvancedAuctionItemsSubmitUpsertRecord& other) = default; // copy assignment
    AdvancedAuctionItemsSubmitUpsertRecord& operator=(AdvancedAuctionItemsSubmitUpsertRecord&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// AdvancedAuctionItemsSubmitUpsertRecord members

    /// <summary>
    /// The catalog retail item id in the merchant namespace
    /// </summary>
    std::string getItemId() const;
    void setItemId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    Country getCountry() const;
    void setCountry(Country value);

    /// <summary>
    /// 
    /// </summary>
    Language getLanguage() const;
    void setLanguage(Language value);

    /// <summary>
    /// 
    /// </summary>
    AdvancedAuctionBidOptions getBidOptions() const;
    void setBidOptions(AdvancedAuctionBidOptions value);

    /// <summary>
    /// The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the &#x60;bid_options&#x60; object in the body will be set to &#x60;null&#x60;. If an item bid option record is being created, fields not specified in the update mask will be initialized to &#x60;null&#x60;.
    /// </summary>
    std::vector<UpdateMaskBidOptionField> getUpdateMask() const;
    void setUpdateMask(std::vector<UpdateMaskBidOptionField> value);

protected:
    std::string m_Item_id = "";
    Country m_Country = Country{};
    Language m_Language = Language{};
    AdvancedAuctionBidOptions m_Bid_options;
    std::vector<UpdateMaskBidOptionField> m_Update_mask;
};

std::vector<AdvancedAuctionItemsSubmitUpsertRecord> createAdvancedAuctionItemsSubmitUpsertRecordVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<AdvancedAuctionItemsSubmitUpsertRecord>(const AdvancedAuctionItemsSubmitUpsertRecord& val) {
    return val.toPropertyTree();
}

template<>
inline AdvancedAuctionItemsSubmitUpsertRecord fromPt<AdvancedAuctionItemsSubmitUpsertRecord>(const boost::property_tree::ptree& pt) {
    AdvancedAuctionItemsSubmitUpsertRecord ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* AdvancedAuctionItemsSubmitUpsertRecord_H_ */
