/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "SSIOCreateInsertionOrderRequest.h"

#include <string>
#include <vector>
#include <map>
#include <sstream>
#include <stdexcept>
#include <regex>
#include <algorithm>
#include <boost/lexical_cast.hpp>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>
#include "helpers.h"

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

SSIOCreateInsertionOrderRequest::SSIOCreateInsertionOrderRequest(boost::property_tree::ptree const& pt)
{
        fromPropertyTree(pt);
}


std::string SSIOCreateInsertionOrderRequest::toJsonString(bool prettyJson /* = false */) const
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
    // workaround inspired by: https://stackoverflow.com/a/56395440
    std::regex reg("\\\"([0-9]+\\.{0,1}[0-9]*)\\\"");
    std::string result = std::regex_replace(ss.str(), reg, "$1");
    return result;
}

void SSIOCreateInsertionOrderRequest::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree SSIOCreateInsertionOrderRequest::toPropertyTree() const
{
	ptree pt;
	ptree tmp_node;
	pt.put("start_date", m_Start_date);
	pt.put("end_date", m_End_date);
	pt.put("po_number", m_Po_number);
	pt.put("budget_amount", m_Budget_amount);
	pt.put("billing_contact_firstname", m_Billing_contact_firstname);
	pt.put("billing_contact_lastname", m_Billing_contact_lastname);
	pt.put("billing_contact_email", m_Billing_contact_email);
	pt.put("media_contact_firstname", m_Media_contact_firstname);
	pt.put("media_contact_lastname", m_Media_contact_lastname);
	pt.put("media_contact_email", m_Media_contact_email);
	pt.put("agency_link", m_Agency_link);
	pt.put("user_email", m_User_email);
	pt.put("accepted_terms_time", m_Accepted_terms_time);
	pt.put("pmp_id", m_Pmp_id);
	pt.put("order_name", m_Order_name);
	pt.put("order_line_type", m_Order_line_type);
	pt.put("accepted_terms_id", m_Accepted_terms_id);
	pt.put("billto_company_id", m_Billto_company_id);
	pt.put("billto_business_address_id", m_Billto_business_address_id);
	pt.put("billto_billing_address_id", m_Billto_billing_address_id);
	pt.put("estimated_monthly_spend", m_Estimated_monthly_spend);
	return pt;
}

void SSIOCreateInsertionOrderRequest::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Start_date = pt.get("start_date", "");
	m_End_date = pt.get("end_date", "");
	m_Po_number = pt.get("po_number", "");
	m_Budget_amount = pt.get("budget_amount", 0.0);
	m_Billing_contact_firstname = pt.get("billing_contact_firstname", "");
	m_Billing_contact_lastname = pt.get("billing_contact_lastname", "");
	m_Billing_contact_email = pt.get("billing_contact_email", "");
	m_Media_contact_firstname = pt.get("media_contact_firstname", "");
	m_Media_contact_lastname = pt.get("media_contact_lastname", "");
	m_Media_contact_email = pt.get("media_contact_email", "");
	m_Agency_link = pt.get("agency_link", "");
	m_User_email = pt.get("user_email", "");
	m_Accepted_terms_time = pt.get("accepted_terms_time", 0);
	m_Pmp_id = pt.get("pmp_id", "");
	m_Order_name = pt.get("order_name", "");
	setOrderLineType(pt.get("order_line_type", ""));
	m_Accepted_terms_id = pt.get("accepted_terms_id", "");
	m_Billto_company_id = pt.get("billto_company_id", "");
	m_Billto_business_address_id = pt.get("billto_business_address_id", "");
	m_Billto_billing_address_id = pt.get("billto_billing_address_id", "");
	m_Estimated_monthly_spend = pt.get("estimated_monthly_spend", 0.0);
}

std::string SSIOCreateInsertionOrderRequest::getStartDate() const
{
    return m_Start_date;
}

void SSIOCreateInsertionOrderRequest::setStartDate(std::string value)
{
    m_Start_date = value;
}


std::string SSIOCreateInsertionOrderRequest::getEndDate() const
{
    return m_End_date;
}

void SSIOCreateInsertionOrderRequest::setEndDate(std::string value)
{
    m_End_date = value;
}


std::string SSIOCreateInsertionOrderRequest::getPoNumber() const
{
    return m_Po_number;
}

void SSIOCreateInsertionOrderRequest::setPoNumber(std::string value)
{
    m_Po_number = value;
}


double SSIOCreateInsertionOrderRequest::getBudgetAmount() const
{
    return m_Budget_amount;
}

void SSIOCreateInsertionOrderRequest::setBudgetAmount(double value)
{
    m_Budget_amount = value;
}


std::string SSIOCreateInsertionOrderRequest::getBillingContactFirstname() const
{
    return m_Billing_contact_firstname;
}

void SSIOCreateInsertionOrderRequest::setBillingContactFirstname(std::string value)
{
    m_Billing_contact_firstname = value;
}


std::string SSIOCreateInsertionOrderRequest::getBillingContactLastname() const
{
    return m_Billing_contact_lastname;
}

void SSIOCreateInsertionOrderRequest::setBillingContactLastname(std::string value)
{
    m_Billing_contact_lastname = value;
}


std::string SSIOCreateInsertionOrderRequest::getBillingContactEmail() const
{
    return m_Billing_contact_email;
}

void SSIOCreateInsertionOrderRequest::setBillingContactEmail(std::string value)
{
    m_Billing_contact_email = value;
}


std::string SSIOCreateInsertionOrderRequest::getMediaContactFirstname() const
{
    return m_Media_contact_firstname;
}

void SSIOCreateInsertionOrderRequest::setMediaContactFirstname(std::string value)
{
    m_Media_contact_firstname = value;
}


std::string SSIOCreateInsertionOrderRequest::getMediaContactLastname() const
{
    return m_Media_contact_lastname;
}

void SSIOCreateInsertionOrderRequest::setMediaContactLastname(std::string value)
{
    m_Media_contact_lastname = value;
}


std::string SSIOCreateInsertionOrderRequest::getMediaContactEmail() const
{
    return m_Media_contact_email;
}

void SSIOCreateInsertionOrderRequest::setMediaContactEmail(std::string value)
{
    m_Media_contact_email = value;
}


std::string SSIOCreateInsertionOrderRequest::getAgencyLink() const
{
    return m_Agency_link;
}

void SSIOCreateInsertionOrderRequest::setAgencyLink(std::string value)
{
    m_Agency_link = value;
}


std::string SSIOCreateInsertionOrderRequest::getUserEmail() const
{
    return m_User_email;
}

void SSIOCreateInsertionOrderRequest::setUserEmail(std::string value)
{
    m_User_email = value;
}


int32_t SSIOCreateInsertionOrderRequest::getAcceptedTermsTime() const
{
    return m_Accepted_terms_time;
}

void SSIOCreateInsertionOrderRequest::setAcceptedTermsTime(int32_t value)
{
    m_Accepted_terms_time = value;
}


std::string SSIOCreateInsertionOrderRequest::getPmpId() const
{
    return m_Pmp_id;
}

void SSIOCreateInsertionOrderRequest::setPmpId(std::string value)
{
    m_Pmp_id = value;
}


std::string SSIOCreateInsertionOrderRequest::getOrderName() const
{
    return m_Order_name;
}

void SSIOCreateInsertionOrderRequest::setOrderName(std::string value)
{
    m_Order_name = value;
}


std::string SSIOCreateInsertionOrderRequest::getOrderLineType() const
{
    return m_Order_line_type;
}

void SSIOCreateInsertionOrderRequest::setOrderLineType(std::string value)
{
    static const std::array<std::string, 2> allowedValues = {
        "BUDGET", "PERPETUALS"
    };

    if (std::find(allowedValues.begin(), allowedValues.end(), value) != allowedValues.end()) {
		m_Order_line_type = value;
	} else {
		throw std::runtime_error("Value " + boost::lexical_cast<std::string>(value) + " not allowed");
	}
}


std::string SSIOCreateInsertionOrderRequest::getAcceptedTermsId() const
{
    return m_Accepted_terms_id;
}

void SSIOCreateInsertionOrderRequest::setAcceptedTermsId(std::string value)
{
    m_Accepted_terms_id = value;
}


std::string SSIOCreateInsertionOrderRequest::getBilltoCompanyId() const
{
    return m_Billto_company_id;
}

void SSIOCreateInsertionOrderRequest::setBilltoCompanyId(std::string value)
{
    m_Billto_company_id = value;
}


std::string SSIOCreateInsertionOrderRequest::getBilltoBusinessAddressId() const
{
    return m_Billto_business_address_id;
}

void SSIOCreateInsertionOrderRequest::setBilltoBusinessAddressId(std::string value)
{
    m_Billto_business_address_id = value;
}


std::string SSIOCreateInsertionOrderRequest::getBilltoBillingAddressId() const
{
    return m_Billto_billing_address_id;
}

void SSIOCreateInsertionOrderRequest::setBilltoBillingAddressId(std::string value)
{
    m_Billto_billing_address_id = value;
}


double SSIOCreateInsertionOrderRequest::getEstimatedMonthlySpend() const
{
    return m_Estimated_monthly_spend;
}

void SSIOCreateInsertionOrderRequest::setEstimatedMonthlySpend(double value)
{
    m_Estimated_monthly_spend = value;
}


Currency SSIOCreateInsertionOrderRequest::getCurrencyInfo() const
{
    return m_Currency_info;
}

void SSIOCreateInsertionOrderRequest::setCurrencyInfo(Currency value)
{
    m_Currency_info = value;
}



std::vector<SSIOCreateInsertionOrderRequest> createSSIOCreateInsertionOrderRequestVectorFromJsonString(const std::string& json)
{
    std::stringstream sstream(json);
    boost::property_tree::ptree pt;
    boost::property_tree::json_parser::read_json(sstream,pt);

    auto vec = std::vector<SSIOCreateInsertionOrderRequest>();
    for (const auto& child: pt) {
        vec.emplace_back(SSIOCreateInsertionOrderRequest(child.second));
    }

    return vec;
}

}
}
}
}

