/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * IntegrationLogsInvalidLogResponse_rejected_logs_inner.h
 *
 * 
 */

#ifndef IntegrationLogsInvalidLogResponse_rejected_logs_inner_H_
#define IntegrationLogsInvalidLogResponse_rejected_logs_inner_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  IntegrationLogsInvalidLogResponse_rejected_logs_inner 
{
public:
    IntegrationLogsInvalidLogResponse_rejected_logs_inner() = default;
    explicit IntegrationLogsInvalidLogResponse_rejected_logs_inner(boost::property_tree::ptree const& pt);
    virtual ~IntegrationLogsInvalidLogResponse_rejected_logs_inner() = default;

    IntegrationLogsInvalidLogResponse_rejected_logs_inner(const IntegrationLogsInvalidLogResponse_rejected_logs_inner& other) = default; // copy constructor
    IntegrationLogsInvalidLogResponse_rejected_logs_inner(IntegrationLogsInvalidLogResponse_rejected_logs_inner&& other) noexcept = default; // move constructor

    IntegrationLogsInvalidLogResponse_rejected_logs_inner& operator=(const IntegrationLogsInvalidLogResponse_rejected_logs_inner& other) = default; // copy assignment
    IntegrationLogsInvalidLogResponse_rejected_logs_inner& operator=(IntegrationLogsInvalidLogResponse_rejected_logs_inner&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// IntegrationLogsInvalidLogResponse_rejected_logs_inner members

    /// <summary>
    /// Index of the log in the batch.
    /// </summary>
    int32_t getLogIndex() const;
    void setLogIndex(int32_t value);

    /// <summary>
    /// The field name containing an invalid value.
    /// </summary>
    std::string getField() const;
    void setField(std::string value);

    /// <summary>
    /// The value that is invalid.
    /// </summary>
    std::string getValue() const;
    void setValue(std::string value);

    /// <summary>
    /// The reason the value is invalid.
    /// </summary>
    std::string getReason() const;
    void setReason(std::string value);

protected:
    int32_t m_Log_index = 0;
    std::string m_Field = "";
    std::string m_Value = "";
    std::string m_Reason = "";
};

std::vector<IntegrationLogsInvalidLogResponse_rejected_logs_inner> createIntegrationLogsInvalidLogResponse_rejected_logs_innerVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<IntegrationLogsInvalidLogResponse_rejected_logs_inner>(const IntegrationLogsInvalidLogResponse_rejected_logs_inner& val) {
    return val.toPropertyTree();
}

template<>
inline IntegrationLogsInvalidLogResponse_rejected_logs_inner fromPt<IntegrationLogsInvalidLogResponse_rejected_logs_inner>(const boost::property_tree::ptree& pt) {
    IntegrationLogsInvalidLogResponse_rejected_logs_inner ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* IntegrationLogsInvalidLogResponse_rejected_logs_inner_H_ */
