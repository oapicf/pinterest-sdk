/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsFeedIngestionWarnings.h
 *
 * 
 */

#ifndef CatalogsFeedIngestionWarnings_H_
#define CatalogsFeedIngestionWarnings_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  CatalogsFeedIngestionWarnings 
{
public:
    CatalogsFeedIngestionWarnings() = default;
    explicit CatalogsFeedIngestionWarnings(boost::property_tree::ptree const& pt);
    virtual ~CatalogsFeedIngestionWarnings() = default;

    CatalogsFeedIngestionWarnings(const CatalogsFeedIngestionWarnings& other) = default; // copy constructor
    CatalogsFeedIngestionWarnings(CatalogsFeedIngestionWarnings&& other) noexcept = default; // move constructor

    CatalogsFeedIngestionWarnings& operator=(const CatalogsFeedIngestionWarnings& other) = default; // copy assignment
    CatalogsFeedIngestionWarnings& operator=(CatalogsFeedIngestionWarnings&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsFeedIngestionWarnings members

    /// <summary>
    /// We experienced a technical difficulty and were unable to download some additional images. The next download attempt will happen in 24 hours.
    /// </summary>
    int32_t getADDITIONALIMAGELEVELINTERNALERROR() const;
    void setADDITIONALIMAGELEVELINTERNALERROR(int32_t value);

    /// <summary>
    /// Additional image files are unreadable. Please upload new files to continue.
    /// </summary>
    int32_t getADDITIONALIMAGEFILENOTACCESSIBLE() const;
    void setADDITIONALIMAGEFILENOTACCESSIBLE(int32_t value);

    /// <summary>
    /// Additional image files are unreadable. Please check your link and upload new files to continue.
    /// </summary>
    int32_t getADDITIONALIMAGEMALFORMEDURL() const;
    void setADDITIONALIMAGEMALFORMEDURL(int32_t value);

    /// <summary>
    /// Additional image files are unreadable. Please upload new files to continue.
    /// </summary>
    int32_t getADDITIONALIMAGEFILENOTFOUND() const;
    void setADDITIONALIMAGEFILENOTFOUND(int32_t value);

    /// <summary>
    /// Additional image files are unreadable. Please upload new files to continue.
    /// </summary>
    int32_t getADDITIONALIMAGEINVALIDFILE() const;
    void setADDITIONALIMAGEINVALIDFILE(int32_t value);

    /// <summary>
    /// price is not a supported column. Use base_price and sale_price instead.
    /// </summary>
    int32_t getHOTELPRICEHEADERISPRESENT() const;
    void setHOTELPRICEHEADERISPRESENT(int32_t value);

protected:
    int32_t m_ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR = 0;
    int32_t m_ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE = 0;
    int32_t m_ADDITIONAL_IMAGE_MALFORMED_URL = 0;
    int32_t m_ADDITIONAL_IMAGE_FILE_NOT_FOUND = 0;
    int32_t m_ADDITIONAL_IMAGE_INVALID_FILE = 0;
    int32_t m_HOTEL_PRICE_HEADER_IS_PRESENT = 0;
};

std::vector<CatalogsFeedIngestionWarnings> createCatalogsFeedIngestionWarningsVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsFeedIngestionWarnings>(const CatalogsFeedIngestionWarnings& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsFeedIngestionWarnings fromPt<CatalogsFeedIngestionWarnings>(const boost::property_tree::ptree& pt) {
    CatalogsFeedIngestionWarnings ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsFeedIngestionWarnings_H_ */
