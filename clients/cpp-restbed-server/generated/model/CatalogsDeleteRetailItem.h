/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CatalogsDeleteRetailItem.h
 *
 * An item to be deleted
 */

#ifndef CatalogsDeleteRetailItem_H_
#define CatalogsDeleteRetailItem_H_



#include <string>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// An item to be deleted
/// </summary>
class  CatalogsDeleteRetailItem 
{
public:
    CatalogsDeleteRetailItem() = default;
    explicit CatalogsDeleteRetailItem(boost::property_tree::ptree const& pt);
    virtual ~CatalogsDeleteRetailItem() = default;

    CatalogsDeleteRetailItem(const CatalogsDeleteRetailItem& other) = default; // copy constructor
    CatalogsDeleteRetailItem(CatalogsDeleteRetailItem&& other) noexcept = default; // move constructor

    CatalogsDeleteRetailItem& operator=(const CatalogsDeleteRetailItem& other) = default; // copy assignment
    CatalogsDeleteRetailItem& operator=(CatalogsDeleteRetailItem&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// CatalogsDeleteRetailItem members

    /// <summary>
    /// The catalog item id in the merchant namespace
    /// </summary>
    std::string getItemId() const;
    void setItemId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getOperation() const;
    void setOperation(std::string value);

protected:
    std::string m_Item_id = "";
    std::string m_Operation = "";
};

std::vector<CatalogsDeleteRetailItem> createCatalogsDeleteRetailItemVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<CatalogsDeleteRetailItem>(const CatalogsDeleteRetailItem& val) {
    return val.toPropertyTree();
}

template<>
inline CatalogsDeleteRetailItem fromPt<CatalogsDeleteRetailItem>(const boost::property_tree::ptree& pt) {
    CatalogsDeleteRetailItem ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* CatalogsDeleteRetailItem_H_ */
