/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Currency.h
 *
 * Currency Codes from ISO 4217
 */

#ifndef Currency_H_
#define Currency_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Currency Codes from ISO 4217
/// </summary>
class  Currency 
{
public:
    Currency() = default;
    explicit Currency(boost::property_tree::ptree const& pt);
    virtual ~Currency() = default;

    Currency(const Currency& other) = default; // copy constructor
    Currency(Currency&& other) noexcept = default; // move constructor

    Currency& operator=(const Currency& other) = default; // copy assignment
    Currency& operator=(Currency&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    std::string toString() const;
    void fromString(const std::string& str);

    /////////////////////////////////////////////
    /// Currency members
    std::string getEnumValue() const;
    void setEnumValue(const std::string& val);

protected:
    std::string m_CurrencyEnumValue;
};

std::vector<Currency> createCurrencyVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<Currency>(const Currency& val) {
    return val.toPropertyTree();
}

template<>
inline Currency fromPt<Currency>(const boost::property_tree::ptree& pt) {
    Currency ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* Currency_H_ */
