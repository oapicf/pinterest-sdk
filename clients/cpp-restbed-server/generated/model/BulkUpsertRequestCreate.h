/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.9.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BulkUpsertRequestCreate.h
 *
 * Request for creation of entities in bulk.
 */

#ifndef BulkUpsertRequestCreate_H_
#define BulkUpsertRequestCreate_H_



#include "ProductGroupPromotionCreateRequest.h"
#include "AdGroupCreateRequest.h"
#include "CampaignCreateRequest.h"
#include "AdCreateRequest.h"
#include <vector>
#include "KeywordsRequest.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Request for creation of entities in bulk.
/// </summary>
class  BulkUpsertRequestCreate 
{
public:
    BulkUpsertRequestCreate() = default;
    explicit BulkUpsertRequestCreate(boost::property_tree::ptree const& pt);
    virtual ~BulkUpsertRequestCreate() = default;

    BulkUpsertRequestCreate(const BulkUpsertRequestCreate& other) = default; // copy constructor
    BulkUpsertRequestCreate(BulkUpsertRequestCreate&& other) noexcept = default; // move constructor

    BulkUpsertRequestCreate& operator=(const BulkUpsertRequestCreate& other) = default; // copy assignment
    BulkUpsertRequestCreate& operator=(BulkUpsertRequestCreate&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// BulkUpsertRequestCreate members

    /// <summary>
    /// 
    /// </summary>
    std::vector<CampaignCreateRequest> getCampaigns() const;
    void setCampaigns(std::vector<CampaignCreateRequest> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<AdGroupCreateRequest> getAdGroups() const;
    void setAdGroups(std::vector<AdGroupCreateRequest> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<AdCreateRequest> getAds() const;
    void setAds(std::vector<AdCreateRequest> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<ProductGroupPromotionCreateRequest> getProductGroups() const;
    void setProductGroups(std::vector<ProductGroupPromotionCreateRequest> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<KeywordsRequest> getKeywords() const;
    void setKeywords(std::vector<KeywordsRequest> value);

protected:
    std::vector<CampaignCreateRequest> m_Campaigns;
    std::vector<AdGroupCreateRequest> m_Ad_groups;
    std::vector<AdCreateRequest> m_Ads;
    std::vector<ProductGroupPromotionCreateRequest> m_Product_groups;
    std::vector<KeywordsRequest> m_Keywords;
};

std::vector<BulkUpsertRequestCreate> createBulkUpsertRequestCreateVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<BulkUpsertRequestCreate>(const BulkUpsertRequestCreate& val) {
    return val.toPropertyTree();
}

template<>
inline BulkUpsertRequestCreate fromPt<BulkUpsertRequestCreate>(const boost::property_tree::ptree& pt) {
    BulkUpsertRequestCreate ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* BulkUpsertRequestCreate_H_ */
