/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.model

import org.openapitools.client.model.PlacementGroupType._

case class AdGroupAudienceSizingRequest(
  /* Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>. */
  autoTargetingEnabled: Option[Boolean] = None,
  /* <a href=\"/docs/redoc/#section/Placement-group\">Placement group</a>. */
  placementGroup: Option[PlacementGroupType] = None,
  /* Pin creative types filter. </p><strong>Note:</strong> SHOP_THE_PIN has been deprecated. Please use COLLECTION instead. */
  creativeTypes: Option[Seq[AdGroupAudienceSizingRequestEnums.CreativeTypes]] = None,
  targetingSpec: Option[TargetingSpec] = None,
  /* Targeted product group IDs. </p><strong>Note:</strong> This can only be combined with shopping/catalog sales campaigns. For more information, <a href=\"https://help.pinterest.com/en/business/article/shopping-ads#section-14571\" target=\"_blank\">click here</a>. SHOPPING_RETARGETING must be included in targeting_spec object or this field will be ignored. */
  productGroupIds: Option[Seq[String]] = None,
  /* Array of keyword objects. If the keywords field is missing, all keywords will be targeted. */
  keywords: Option[Seq[AdGroupAudienceSizingRequestKeywordsInner]] = None
)

object AdGroupAudienceSizingRequestEnums {

  type CreativeTypes = CreativeTypes.Value
  object CreativeTypes extends Enumeration {
    val REGULAR = Value("REGULAR")
    val VIDEO = Value("VIDEO")
    val SHOPPING = Value("SHOPPING")
    val CAROUSEL = Value("CAROUSEL")
    val MAXVIDEO = Value("MAX_VIDEO")
    val SHOPTHEPIN = Value("SHOP_THE_PIN")
    val COLLECTION = Value("COLLECTION")
    val IDEA = Value("IDEA")
  }

}
