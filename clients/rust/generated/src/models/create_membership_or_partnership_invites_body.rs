/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateMembershipOrPartnershipInvitesBody : Body to be used on path to send Members or Partners Invite or Request
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateMembershipOrPartnershipInvitesBody {
    /// The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
    #[serde(rename = "business_role")]
    pub business_role: BusinessRole,
    #[serde(rename = "invite_type")]
    pub invite_type: models::InviteType,
    /// A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE
    #[serde(rename = "members", skip_serializing_if = "Option::is_none")]
    pub members: Option<Vec<String>>,
    /// A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST
    #[serde(rename = "partners", skip_serializing_if = "Option::is_none")]
    pub partners: Option<Vec<String>>,
}

impl CreateMembershipOrPartnershipInvitesBody {
    /// Body to be used on path to send Members or Partners Invite or Request
    pub fn new(business_role: BusinessRole, invite_type: models::InviteType) -> CreateMembershipOrPartnershipInvitesBody {
        CreateMembershipOrPartnershipInvitesBody {
            business_role,
            invite_type,
            members: None,
            partners: None,
        }
    }
}
/// The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BusinessRole {
    #[serde(rename = "EMPLOYEE")]
    Employee,
    #[serde(rename = "BIZ_ADMIN")]
    BizAdmin,
    #[serde(rename = "PARTNER")]
    Partner,
}

impl Default for BusinessRole {
    fn default() -> BusinessRole {
        Self::Employee
    }
}

