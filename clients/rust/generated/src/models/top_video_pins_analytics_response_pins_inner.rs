/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TopVideoPinsAnalyticsResponsePinsInner : Array with metrics, status, and pin id for the requested metric
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TopVideoPinsAnalyticsResponsePinsInner {
    /// The metric name and daily value for each requested metric
    #[serde(rename = "metrics", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<std::collections::HashMap<String, f64>>,
    #[serde(rename = "data_status", skip_serializing_if = "Option::is_none")]
    pub data_status: Option<std::collections::HashMap<String, models::DataStatus>>,
    /// The pin id
    #[serde(rename = "pin_id", skip_serializing_if = "Option::is_none")]
    pub pin_id: Option<String>,
}

impl TopVideoPinsAnalyticsResponsePinsInner {
    /// Array with metrics, status, and pin id for the requested metric
    pub fn new() -> TopVideoPinsAnalyticsResponsePinsInner {
        TopVideoPinsAnalyticsResponsePinsInner {
            metrics: None,
            data_status: None,
            pin_id: None,
        }
    }
}

