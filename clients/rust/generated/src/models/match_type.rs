/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MatchType : Keyword match type
/// Keyword match type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MatchType {
    #[serde(rename = "BROAD")]
    Broad,
    #[serde(rename = "PHRASE")]
    Phrase,
    #[serde(rename = "EXACT")]
    Exact,
    #[serde(rename = "EXACT_NEGATIVE")]
    ExactNegative,
    #[serde(rename = "PHRASE_NEGATIVE")]
    PhraseNegative,

}

impl std::fmt::Display for MatchType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Broad => write!(f, "BROAD"),
            Self::Phrase => write!(f, "PHRASE"),
            Self::Exact => write!(f, "EXACT"),
            Self::ExactNegative => write!(f, "EXACT_NEGATIVE"),
            Self::PhraseNegative => write!(f, "PHRASE_NEGATIVE"),
        }
    }
}

impl Default for MatchType {
    fn default() -> MatchType {
        Self::Broad
    }
}

