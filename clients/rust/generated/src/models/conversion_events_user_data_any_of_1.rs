/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConversionEventsUserDataAnyOf1 {
    /// Sha256 hashes of lowercase version of user's email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
    #[serde(rename = "em", skip_serializing_if = "Option::is_none")]
    pub em: Option<Vec<String>>,
    /// Sha256 hashes of user's \"Google Advertising IDs\" (GAIDs) or \"Apple's Identifier for Advertisers\" (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
    #[serde(rename = "hashed_maids")]
    pub hashed_maids: Vec<String>,
    /// The user's IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
    #[serde(rename = "client_ip_address", skip_serializing_if = "Option::is_none")]
    pub client_ip_address: Option<String>,
    /// The user agent string of the user's web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
    #[serde(rename = "client_user_agent", skip_serializing_if = "Option::is_none")]
    pub client_user_agent: Option<String>,
}

impl ConversionEventsUserDataAnyOf1 {
    pub fn new(hashed_maids: Vec<String>) -> ConversionEventsUserDataAnyOf1 {
        ConversionEventsUserDataAnyOf1 {
            em: None,
            hashed_maids,
            client_ip_address: None,
            client_user_agent: None,
        }
    }
}

