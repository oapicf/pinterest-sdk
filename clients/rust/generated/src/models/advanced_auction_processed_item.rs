/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AdvancedAuctionProcessedItem : Object describing the result of an operation on an item bid option
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdvancedAuctionProcessedItem {
    #[serde(rename = "operation")]
    pub operation: models::AdvancedAuctionOperation,
    /// The catalog retail item id in the merchant namespace
    #[serde(rename = "item_id")]
    pub item_id: String,
    #[serde(rename = "country")]
    pub country: models::Country,
    #[serde(rename = "language")]
    pub language: models::Language,
    #[serde(rename = "bid_options")]
    pub bid_options: Box<models::AdvancedAuctionBidOptions>,
    /// The list of item bid option fields to be set or updated. Fields specified in the updated mask without a value specified in the `bid_options` object in the body will be set to `null`. If an item bid option record is being created, fields not specified in the update mask will be initialized to `null`.
    #[serde(rename = "update_mask", deserialize_with = "Option::deserialize")]
    pub update_mask: Option<Vec<models::UpdateMaskBidOptionField>>,
    /// Array with validation errors for the supplied item bid option modification operation. A non empty errors list means this single item operation was not applied.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::AdvancedAuctionOperationError>>,
}

impl AdvancedAuctionProcessedItem {
    /// Object describing the result of an operation on an item bid option
    pub fn new(operation: models::AdvancedAuctionOperation, item_id: String, country: models::Country, language: models::Language, bid_options: models::AdvancedAuctionBidOptions, update_mask: Option<Vec<models::UpdateMaskBidOptionField>>) -> AdvancedAuctionProcessedItem {
        AdvancedAuctionProcessedItem {
            operation,
            item_id,
            country,
            language,
            bid_options: Box::new(bid_options),
            update_mask,
            errors: None,
        }
    }
}

