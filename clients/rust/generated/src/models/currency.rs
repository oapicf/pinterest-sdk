/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Currency : Currency Codes from ISO 4217
/// Currency Codes from ISO 4217
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Currency {
    #[serde(rename = "UNK")]
    Unk,
    #[serde(rename = "USD")]
    Usd,
    #[serde(rename = "GBP")]
    Gbp,
    #[serde(rename = "CAD")]
    Cad,
    #[serde(rename = "EUR")]
    Eur,
    #[serde(rename = "AUD")]
    Aud,
    #[serde(rename = "NZD")]
    Nzd,
    #[serde(rename = "SEK")]
    Sek,
    #[serde(rename = "ILS")]
    Ils,
    #[serde(rename = "CHF")]
    Chf,
    #[serde(rename = "HKD")]
    Hkd,
    #[serde(rename = "JPY")]
    Jpy,
    #[serde(rename = "SGD")]
    Sgd,
    #[serde(rename = "KRW")]
    Krw,
    #[serde(rename = "NOK")]
    Nok,
    #[serde(rename = "DKK")]
    Dkk,
    #[serde(rename = "PLN")]
    Pln,
    #[serde(rename = "RON")]
    Ron,
    #[serde(rename = "HUF")]
    Huf,
    #[serde(rename = "CZK")]
    Czk,
    #[serde(rename = "BRL")]
    Brl,
    #[serde(rename = "MXN")]
    Mxn,
    #[serde(rename = "ARS")]
    Ars,
    #[serde(rename = "CLP")]
    Clp,
    #[serde(rename = "COP")]
    Cop,
    #[serde(rename = "INR")]
    Inr,
    #[serde(rename = "TRY")]
    Try,

}

impl std::fmt::Display for Currency {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unk => write!(f, "UNK"),
            Self::Usd => write!(f, "USD"),
            Self::Gbp => write!(f, "GBP"),
            Self::Cad => write!(f, "CAD"),
            Self::Eur => write!(f, "EUR"),
            Self::Aud => write!(f, "AUD"),
            Self::Nzd => write!(f, "NZD"),
            Self::Sek => write!(f, "SEK"),
            Self::Ils => write!(f, "ILS"),
            Self::Chf => write!(f, "CHF"),
            Self::Hkd => write!(f, "HKD"),
            Self::Jpy => write!(f, "JPY"),
            Self::Sgd => write!(f, "SGD"),
            Self::Krw => write!(f, "KRW"),
            Self::Nok => write!(f, "NOK"),
            Self::Dkk => write!(f, "DKK"),
            Self::Pln => write!(f, "PLN"),
            Self::Ron => write!(f, "RON"),
            Self::Huf => write!(f, "HUF"),
            Self::Czk => write!(f, "CZK"),
            Self::Brl => write!(f, "BRL"),
            Self::Mxn => write!(f, "MXN"),
            Self::Ars => write!(f, "ARS"),
            Self::Clp => write!(f, "CLP"),
            Self::Cop => write!(f, "COP"),
            Self::Inr => write!(f, "INR"),
            Self::Try => write!(f, "TRY"),
        }
    }
}

impl Default for Currency {
    fn default() -> Currency {
        Self::Unk
    }
}

