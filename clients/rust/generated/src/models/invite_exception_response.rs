/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InviteExceptionResponse : An exception object if there is an error performing the action. Will only be provided if there is an error.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InviteExceptionResponse {
    /// Unique identifier of the invite/request.
    #[serde(rename = "invite_or_request_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub invite_or_request_id: Option<Option<String>>,
    /// Error code associated with the error in performing the action on the invite/request.
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<i32>,
    /// Error message associated with the error in performing the action on the invite/request.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// A list of users' usernames or emails OR a list of partner ids that caused the error.
    #[serde(rename = "users_or_partner_ids", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub users_or_partner_ids: Option<Option<Vec<String>>>,
}

impl InviteExceptionResponse {
    /// An exception object if there is an error performing the action. Will only be provided if there is an error.
    pub fn new() -> InviteExceptionResponse {
        InviteExceptionResponse {
            invite_or_request_id: None,
            code: None,
            message: None,
            users_or_partner_ids: None,
        }
    }
}

