/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CatalogsRetailProductGroupProductCounts : Product counts for a Retail CatalogsProductGroup
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogsRetailProductGroupProductCounts {
    #[serde(rename = "catalog_type")]
    pub catalog_type: CatalogType,
    #[serde(rename = "in_stock")]
    pub in_stock: f64,
    #[serde(rename = "out_of_stock")]
    pub out_of_stock: f64,
    #[serde(rename = "preorder")]
    pub preorder: f64,
    #[serde(rename = "total")]
    pub total: f64,
    #[serde(rename = "videos", skip_serializing_if = "Option::is_none")]
    pub videos: Option<f64>,
}

impl CatalogsRetailProductGroupProductCounts {
    /// Product counts for a Retail CatalogsProductGroup
    pub fn new(catalog_type: CatalogType, in_stock: f64, out_of_stock: f64, preorder: f64, total: f64) -> CatalogsRetailProductGroupProductCounts {
        CatalogsRetailProductGroupProductCounts {
            catalog_type,
            in_stock,
            out_of_stock,
            preorder,
            total,
            videos: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CatalogType {
    #[serde(rename = "RETAIL")]
    Retail,
}

impl Default for CatalogType {
    fn default() -> CatalogType {
        Self::Retail
    }
}

