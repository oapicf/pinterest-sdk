/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeletePartnerAssetAccessBodyAccessesInner {
    /// Unique identifier of a business partner to update asset access to.
    #[serde(rename = "partner_id")]
    pub partner_id: String,
    /// Unique identifier of the business asset.
    #[serde(rename = "asset_id")]
    pub asset_id: String,
    /// If partner_type=INTERNAL, the deleted asset access is for the access the partner has to your business asset.<br> If partner_type=EXTERNAL, the deleted asset access is for the access you have to the partner's business asset.
    #[serde(rename = "partner_type", skip_serializing_if = "Option::is_none")]
    pub partner_type: Option<PartnerType>,
}

impl DeletePartnerAssetAccessBodyAccessesInner {
    pub fn new(partner_id: String, asset_id: String) -> DeletePartnerAssetAccessBodyAccessesInner {
        DeletePartnerAssetAccessBodyAccessesInner {
            partner_id,
            asset_id,
            partner_type: None,
        }
    }
}
/// If partner_type=INTERNAL, the deleted asset access is for the access the partner has to your business asset.<br> If partner_type=EXTERNAL, the deleted asset access is for the access you have to the partner's business asset.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PartnerType {
    #[serde(rename = "INTERNAL")]
    Internal,
    #[serde(rename = "EXTERNAL")]
    External,
}

impl Default for PartnerType {
    fn default() -> PartnerType {
        Self::Internal
    }
}

