/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CatalogsCreativeAssetsItemResponse : Object describing a hotel record
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogsCreativeAssetsItemResponse {
    #[serde(rename = "catalog_type")]
    pub catalog_type: models::CatalogsType,
    /// The catalog creative assets id in the merchant namespace
    #[serde(rename = "creative_assets_id", skip_serializing_if = "Option::is_none")]
    pub creative_assets_id: Option<String>,
    /// The pins mapped to the item
    #[serde(rename = "pins", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub pins: Option<Option<Vec<models::Pin>>>,
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Box<models::CatalogsCreativeAssetsAttributes>>,
}

impl CatalogsCreativeAssetsItemResponse {
    /// Object describing a hotel record
    pub fn new(catalog_type: models::CatalogsType) -> CatalogsCreativeAssetsItemResponse {
        CatalogsCreativeAssetsItemResponse {
            catalog_type,
            creative_assets_id: None,
            pins: None,
            attributes: None,
        }
    }
}

