/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VideoMetadata {
    #[serde(rename = "item_type", skip_serializing_if = "Option::is_none")]
    pub item_type: Option<String>,
    #[serde(rename = "cover_image_url", skip_serializing_if = "Option::is_none")]
    pub cover_image_url: Option<String>,
    /// Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
    #[serde(rename = "video_url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub video_url: Option<Option<String>>,
    /// Duration (in milliseconds)
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<f64>,
    /// Height (in pixels)
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<i32>,
    /// Width (in pixels)
    #[serde(rename = "width", skip_serializing_if = "Option::is_none")]
    pub width: Option<i32>,
}

impl VideoMetadata {
    pub fn new() -> VideoMetadata {
        VideoMetadata {
            item_type: None,
            cover_image_url: None,
            video_url: None,
            duration: None,
            height: None,
            width: None,
        }
    }
}

