/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConversionTagCommon {
    /// Ad account ID.
    #[serde(rename = "ad_account_id", skip_serializing_if = "Option::is_none")]
    pub ad_account_id: Option<String>,
    /// Tag code snippet.
    #[serde(rename = "code_snippet", skip_serializing_if = "Option::is_none")]
    pub code_snippet: Option<String>,
    #[serde(rename = "enhanced_match_status", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enhanced_match_status: Option<Option<models::EnhancedMatchStatusType>>,
    /// Tag ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Time for the last event fired.
    #[serde(rename = "last_fired_time_ms", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_fired_time_ms: Option<Option<f64>>,
    /// Conversion tag name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::EntityStatus>,
    /// Version number.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "configs", skip_serializing_if = "Option::is_none")]
    pub configs: Option<Box<models::ConversionTagConfigs>>,
}

impl ConversionTagCommon {
    pub fn new() -> ConversionTagCommon {
        ConversionTagCommon {
            ad_account_id: None,
            code_snippet: None,
            enhanced_match_status: None,
            id: None,
            last_fired_time_ms: None,
            name: None,
            status: None,
            version: None,
            configs: None,
        }
    }
}

