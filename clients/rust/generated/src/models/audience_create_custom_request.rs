/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AudienceCreateCustomRequest {
    /// Ad account ID.
    #[serde(rename = "ad_account_id", skip_serializing_if = "Option::is_none")]
    pub ad_account_id: Option<String>,
    /// Audience name.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "rule")]
    pub rule: Box<models::AudienceRule>,
    #[serde(rename = "sharing_type")]
    pub sharing_type: models::AudienceSharingType,
    #[serde(rename = "data_party")]
    pub data_party: models::AudienceDataParty,
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
}

impl AudienceCreateCustomRequest {
    pub fn new(name: String, rule: models::AudienceRule, sharing_type: models::AudienceSharingType, data_party: models::AudienceDataParty) -> AudienceCreateCustomRequest {
        AudienceCreateCustomRequest {
            ad_account_id: None,
            name,
            rule: Box::new(rule),
            sharing_type,
            data_party,
            category: None,
        }
    }
}

