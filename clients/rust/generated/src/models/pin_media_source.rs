/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PinMediaSource : Pin media source.
#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "source_type")]
pub enum PinMediaSource {
    #[serde(rename="image_base64")]
    ImageBase64(Box<models::PinMediaSourceImageBase64>),
    #[serde(rename="image_url")]
    ImageUrl(Box<models::PinMediaSourceImageUrl>),
    #[serde(rename="video_id")]
    VideoId(Box<models::PinMediaSourceVideoId>),
    #[serde(rename="multiple_image_base64")]
    MultipleImageBase64(Box<models::PinMediaSourceImagesBase64>),
    #[serde(rename="multiple_image_urls")]
    MultipleImageUrls(Box<models::PinMediaSourceImagesUrl>),
    #[serde(rename="pin_url")]
    PinUrl(Box<models::PinMediaSourcePinUrl>),
}

impl Default for PinMediaSource {
    fn default() -> Self {
        Self::ImageBase64(Default::default())
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentType {
    #[serde(rename = "image/jpeg")]
    Jpeg,
    #[serde(rename = "image/png")]
    Png,
}

impl Default for ContentType {
    fn default() -> ContentType {
        Self::Jpeg
    }
}
/// Content type for cover image Base64.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CoverImageContentType {
    #[serde(rename = "image/jpeg")]
    Jpeg,
    #[serde(rename = "image/png")]
    Png,
}

impl Default for CoverImageContentType {
    fn default() -> CoverImageContentType {
        Self::Jpeg
    }
}

