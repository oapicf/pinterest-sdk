/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetGroupBinding {
    /// Asset Group ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Asset Group name
    #[serde(rename = "asset_group_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub asset_group_name: Option<Option<String>>,
    /// Asset group description
    #[serde(rename = "asset_group_description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub asset_group_description: Option<Option<String>>,
    /// Asset group types
    #[serde(rename = "asset_group_types", skip_serializing_if = "Option::is_none")]
    pub asset_group_types: Option<Vec<String>>,
    /// A list of ad account IDs under the asset group
    #[serde(rename = "ad_accounts_ids", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ad_accounts_ids: Option<Option<Vec<String>>>,
    /// A list of profile IDs under asset group
    #[serde(rename = "profiles_ids", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub profiles_ids: Option<Option<Vec<String>>>,
    /// The creation time of the asset group
    #[serde(rename = "created_time", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<Option<i32>>,
    /// The last update time of the asset group
    #[serde(rename = "updated_time", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub updated_time: Option<Option<i32>>,
    /// The data of the business that owns the asset group.
    #[serde(rename = "owner", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub owner: Option<Option<Box<models::BusinessAccessUserSummary>>>,
    /// The data of the user that created the asset group.
    #[serde(rename = "created_by", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Option<Box<models::BusinessAccessUserSummary>>>,
}

impl AssetGroupBinding {
    pub fn new() -> AssetGroupBinding {
        AssetGroupBinding {
            id: None,
            asset_group_name: None,
            asset_group_description: None,
            asset_group_types: None,
            ad_accounts_ids: None,
            profiles_ids: None,
            created_time: None,
            updated_time: None,
            owner: None,
            created_by: None,
        }
    }
}

