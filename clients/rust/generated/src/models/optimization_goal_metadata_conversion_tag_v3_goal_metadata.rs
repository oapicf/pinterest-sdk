/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptimizationGoalMetadataConversionTagV3GoalMetadata {
    #[serde(rename = "attribution_windows", skip_serializing_if = "Option::is_none")]
    pub attribution_windows: Option<Box<models::OptimizationGoalMetadataConversionTagV3GoalMetadataAttributionWindows>>,
    #[serde(rename = "conversion_event", skip_serializing_if = "Option::is_none")]
    pub conversion_event: Option<ConversionEvent>,
    #[serde(rename = "conversion_tag_id", skip_serializing_if = "Option::is_none")]
    pub conversion_tag_id: Option<String>,
    #[serde(rename = "cpa_goal_value_in_micro_currency", skip_serializing_if = "Option::is_none")]
    pub cpa_goal_value_in_micro_currency: Option<String>,
    /// ROAS optimization is not supported
    #[serde(rename = "is_roas_optimized", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_roas_optimized: Option<Option<bool>>,
    /// Conversion learning model type
    #[serde(rename = "learning_mode_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub learning_mode_type: Option<Option<LearningModeType>>,
}

impl OptimizationGoalMetadataConversionTagV3GoalMetadata {
    pub fn new() -> OptimizationGoalMetadataConversionTagV3GoalMetadata {
        OptimizationGoalMetadataConversionTagV3GoalMetadata {
            attribution_windows: None,
            conversion_event: None,
            conversion_tag_id: None,
            cpa_goal_value_in_micro_currency: None,
            is_roas_optimized: None,
            learning_mode_type: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConversionEvent {
    #[serde(rename = "PAGE_VISIT")]
    PageVisit,
    #[serde(rename = "SIGNUP")]
    Signup,
    #[serde(rename = "CHECKOUT")]
    Checkout,
    #[serde(rename = "CUSTOM")]
    Custom,
    #[serde(rename = "VIEW_CATEGORY")]
    ViewCategory,
    #[serde(rename = "SEARCH")]
    Search,
    #[serde(rename = "ADD_TO_CART")]
    AddToCart,
    #[serde(rename = "WATCH_VIDEO")]
    WatchVideo,
    #[serde(rename = "LEAD")]
    Lead,
    #[serde(rename = "APP_INSTALL")]
    AppInstall,
}

impl Default for ConversionEvent {
    fn default() -> ConversionEvent {
        Self::PageVisit
    }
}
/// Conversion learning model type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LearningModeType {
    #[serde(rename = "NOT_ACTIVE")]
    NotActive,
    #[serde(rename = "ACTIVE")]
    Active,
}

impl Default for LearningModeType {
    fn default() -> LearningModeType {
        Self::NotActive
    }
}

