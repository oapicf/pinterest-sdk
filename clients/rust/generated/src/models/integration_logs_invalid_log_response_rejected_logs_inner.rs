/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IntegrationLogsInvalidLogResponseRejectedLogsInner {
    /// Index of the log in the batch.
    #[serde(rename = "log_index", skip_serializing_if = "Option::is_none")]
    pub log_index: Option<i32>,
    /// The field name containing an invalid value.
    #[serde(rename = "field")]
    pub field: String,
    /// The value that is invalid.
    #[serde(rename = "value")]
    pub value: String,
    /// The reason the value is invalid.
    #[serde(rename = "reason")]
    pub reason: String,
}

impl IntegrationLogsInvalidLogResponseRejectedLogsInner {
    pub fn new(field: String, value: String, reason: String) -> IntegrationLogsInvalidLogResponseRejectedLogsInner {
        IntegrationLogsInvalidLogResponseRejectedLogsInner {
            log_index: None,
            field,
            value,
            reason,
        }
    }
}

