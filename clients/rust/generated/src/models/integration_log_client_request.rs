/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IntegrationLogClientRequest : HTTP request details included in the log sent by the client.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IntegrationLogClientRequest {
    #[serde(rename = "method")]
    pub method: Method,
    /// HTTP request host from host header.
    #[serde(rename = "host")]
    pub host: String,
    /// HTTP request path.
    #[serde(rename = "path")]
    pub path: String,
    /// HTTP request headers as key-value pairs.
    #[serde(rename = "request_headers", skip_serializing_if = "Option::is_none")]
    pub request_headers: Option<std::collections::HashMap<String, String>>,
    /// HTTP response headers as key-value pairs.
    #[serde(rename = "response_headers", skip_serializing_if = "Option::is_none")]
    pub response_headers: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "response_status_code", skip_serializing_if = "Option::is_none")]
    pub response_status_code: Option<i32>,
}

impl IntegrationLogClientRequest {
    /// HTTP request details included in the log sent by the client.
    pub fn new(method: Method, host: String, path: String) -> IntegrationLogClientRequest {
        IntegrationLogClientRequest {
            method,
            host,
            path,
            request_headers: None,
            response_headers: None,
            response_status_code: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Method {
    #[serde(rename = "GET")]
    Get,
    #[serde(rename = "HEAD")]
    Head,
    #[serde(rename = "POST")]
    Post,
    #[serde(rename = "PUT")]
    Put,
    #[serde(rename = "DELETE")]
    Delete,
    #[serde(rename = "CONNECT")]
    Connect,
    #[serde(rename = "OPTIONS")]
    Options,
    #[serde(rename = "TRACE")]
    Trace,
    #[serde(rename = "PATCH")]
    Patch,
}

impl Default for Method {
    fn default() -> Method {
        Self::Get
    }
}

