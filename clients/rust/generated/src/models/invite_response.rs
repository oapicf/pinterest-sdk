/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InviteResponse {
    #[serde(rename = "assets_summary", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub assets_summary: Option<Option<Box<models::InviteAssetsSummary>>>,
    /// The access level a user would be granted on the business if the invite/request is accepted. This can be EMPLOYEE, BIZ_ADMIN, or PARTNER.
    #[serde(rename = "business_roles", skip_serializing_if = "Option::is_none")]
    pub business_roles: Option<Vec<String>>,
    /// Metadata for the business that created the invite/request.
    #[serde(rename = "created_by_business", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created_by_business: Option<Option<Box<models::BusinessAccessUserSummary>>>,
    /// Metadata for the user that created the invite/request.
    #[serde(rename = "created_by_user", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub created_by_user: Option<Option<Box<models::BusinessAccessUserSummary>>>,
    /// The time the invite/request was created. Returned in milliseconds.
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<i32>,
    /// Unique identifier of the invite/request.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "invite_data", skip_serializing_if = "Option::is_none")]
    pub invite_data: Option<Box<models::BaseInviteDataResponseInviteData>>,
    /// Indicates whether the invite/request was received.
    #[serde(rename = "is_received_invite", skip_serializing_if = "Option::is_none")]
    pub is_received_invite: Option<bool>,
    /// Metadata for the member/partner that was sent the invite/request.
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<models::BusinessAccessUserSummary>>,
}

impl InviteResponse {
    pub fn new() -> InviteResponse {
        InviteResponse {
            assets_summary: None,
            business_roles: None,
            created_by_business: None,
            created_by_user: None,
            created_time: None,
            id: None,
            invite_data: None,
            is_received_invite: None,
            user: None,
        }
    }
}

