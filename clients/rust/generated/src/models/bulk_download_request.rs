/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BulkDownloadRequest : Ad entities to get in bulk request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BulkDownloadRequest {
    /// All entity types specified will be downloaded. Fewer types result in faster downloads.
    #[serde(rename = "entity_types", skip_serializing_if = "Option::is_none")]
    pub entity_types: Option<Vec<models::BulkEntityType>>,
    /// All entities specified by these IDs as well as their children and grandchildren will be downloaded if the entity type is one of the types requested to be downloaded.
    #[serde(rename = "entity_ids", skip_serializing_if = "Option::is_none")]
    pub entity_ids: Option<Vec<String>>,
    /// Unix UTC timestamp to retrieve all entities that have changed since this time.
    #[serde(rename = "updated_since", skip_serializing_if = "Option::is_none")]
    pub updated_since: Option<String>,
    #[serde(rename = "campaign_filter", skip_serializing_if = "Option::is_none")]
    pub campaign_filter: Option<Box<models::BulkDownloadRequestCampaignFilter>>,
    #[serde(rename = "output_format", skip_serializing_if = "Option::is_none")]
    pub output_format: Option<models::BulkOutputFormat>,
}

impl BulkDownloadRequest {
    /// Ad entities to get in bulk request.
    pub fn new() -> BulkDownloadRequest {
        BulkDownloadRequest {
            entity_types: None,
            entity_ids: None,
            updated_since: None,
            campaign_filter: None,
            output_format: None,
        }
    }
}

