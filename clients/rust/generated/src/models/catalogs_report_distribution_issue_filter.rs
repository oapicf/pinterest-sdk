/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogsReportDistributionIssueFilter {
    #[serde(rename = "report_type")]
    pub report_type: ReportType,
    /// Unique identifier of a catalog. If not given, oldest catalog will be used
    #[serde(rename = "catalog_id", skip_serializing_if = "Option::is_none")]
    pub catalog_id: Option<String>,
}

impl CatalogsReportDistributionIssueFilter {
    pub fn new(report_type: ReportType) -> CatalogsReportDistributionIssueFilter {
        CatalogsReportDistributionIssueFilter {
            report_type,
            catalog_id: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReportType {
    #[serde(rename = "DISTRIBUTION_ISSUES")]
    DistributionIssues,
}

impl Default for ReportType {
    fn default() -> ReportType {
        Self::DistributionIssues
    }
}

