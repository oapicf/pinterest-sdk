/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogsUpdatableCreativeAssetsAttributes {
    /// The name of the creative assets.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// Brief description of the creative assets.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Link to the creative assets page.
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    /// IOS deep link to the creative assets page.
    #[serde(rename = "ios_deep_link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ios_deep_link: Option<Option<String>>,
    /// Link to the creative assets page.
    #[serde(rename = "android_deep_link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub android_deep_link: Option<Option<String>>,
    /// The categorization of the product based on the standardized Google Product Taxonomy. This is a set taxonomy. Both the text values and numeric codes are accepted.
    #[serde(rename = "google_product_category", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub google_product_category: Option<Option<String>>,
    /// Custom grouping of creative assets.
    #[serde(rename = "custom_label_0", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_label_0: Option<Option<String>>,
    /// Custom grouping of creative assets.
    #[serde(rename = "custom_label_1", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_label_1: Option<Option<String>>,
    /// Custom grouping of creative assets.
    #[serde(rename = "custom_label_2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_label_2: Option<Option<String>>,
    /// Custom grouping of creative assets.
    #[serde(rename = "custom_label_3", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_label_3: Option<Option<String>>,
    /// Custom grouping of creative assets.
    #[serde(rename = "custom_label_4", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_label_4: Option<Option<String>>,
    /// Visibility of the creative assets. Must be one of the following values (upper or lowercase): ‘visible’, ‘hidden’.
    #[serde(rename = "visibility", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub visibility: Option<Option<String>>,
}

impl CatalogsUpdatableCreativeAssetsAttributes {
    pub fn new() -> CatalogsUpdatableCreativeAssetsAttributes {
        CatalogsUpdatableCreativeAssetsAttributes {
            title: None,
            description: None,
            link: None,
            ios_deep_link: None,
            android_deep_link: None,
            google_product_category: None,
            custom_label_0: None,
            custom_label_1: None,
            custom_label_2: None,
            custom_label_3: None,
            custom_label_4: None,
            visibility: None,
        }
    }
}

