/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AudienceDemographics : Audience demographics
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AudienceDemographics {
    /// Ages distribution.
    #[serde(rename = "ages", skip_serializing_if = "Option::is_none")]
    pub ages: Option<Vec<models::AudienceDemographicValue>>,
    /// Gender distribution.
    #[serde(rename = "genders", skip_serializing_if = "Option::is_none")]
    pub genders: Option<Vec<models::AudienceDemographicValue>>,
    /// Device usage distribution.
    #[serde(rename = "devices", skip_serializing_if = "Option::is_none")]
    pub devices: Option<Vec<models::AudienceDemographicValue>>,
    /// Geographic metro area distribution.
    #[serde(rename = "metros", skip_serializing_if = "Option::is_none")]
    pub metros: Option<Vec<models::AudienceDemographicValue>>,
    /// Country area distribution.
    #[serde(rename = "countries", skip_serializing_if = "Option::is_none")]
    pub countries: Option<Vec<models::AudienceDemographicValue>>,
}

impl AudienceDemographics {
    /// Audience demographics
    pub fn new() -> AudienceDemographics {
        AudienceDemographics {
            ages: None,
            genders: None,
            devices: None,
            metros: None,
            countries: None,
        }
    }
}

