/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CatalogsProductGroupCreateRequest : Request object for creating a product group.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogsProductGroupCreateRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    /// boolean indicator of whether the product group is being featured or not
    #[serde(rename = "is_featured", skip_serializing_if = "Option::is_none")]
    pub is_featured: Option<bool>,
    #[serde(rename = "filters")]
    pub filters: Box<models::CatalogsProductGroupFiltersRequest>,
    /// Catalog Feed id pertaining to the catalog product group.
    #[serde(rename = "feed_id")]
    pub feed_id: String,
}

impl CatalogsProductGroupCreateRequest {
    /// Request object for creating a product group.
    pub fn new(name: String, filters: models::CatalogsProductGroupFiltersRequest, feed_id: String) -> CatalogsProductGroupCreateRequest {
        CatalogsProductGroupCreateRequest {
            name,
            description: None,
            is_featured: None,
            filters: Box::new(filters),
            feed_id,
        }
    }
}

