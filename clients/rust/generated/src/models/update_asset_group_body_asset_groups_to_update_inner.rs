/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateAssetGroupBodyAssetGroupsToUpdateInner {
    /// Unique identifier of the asset group to update.
    #[serde(rename = "asset_group_id")]
    pub asset_group_id: String,
    /// Asset Group name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Asset group description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.
    #[serde(rename = "asset_group_types", skip_serializing_if = "Option::is_none")]
    pub asset_group_types: Option<Vec<models::AssetGroupType>>,
    /// A list of asset ids to add to the asset group.
    #[serde(rename = "assets_to_add", skip_serializing_if = "Option::is_none")]
    pub assets_to_add: Option<Vec<String>>,
    /// A list of asset ids to remove from the asset group.
    #[serde(rename = "assets_to_remove", skip_serializing_if = "Option::is_none")]
    pub assets_to_remove: Option<Vec<String>>,
}

impl UpdateAssetGroupBodyAssetGroupsToUpdateInner {
    pub fn new(asset_group_id: String) -> UpdateAssetGroupBodyAssetGroupsToUpdateInner {
        UpdateAssetGroupBodyAssetGroupsToUpdateInner {
            asset_group_id,
            name: None,
            description: None,
            asset_group_types: None,
            assets_to_add: None,
            assets_to_remove: None,
        }
    }
}

