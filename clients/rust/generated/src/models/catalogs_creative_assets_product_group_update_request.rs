/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CatalogsCreativeAssetsProductGroupUpdateRequest : Request object for updating a creative assets product group.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CatalogsCreativeAssetsProductGroupUpdateRequest {
    #[serde(rename = "catalog_type", skip_serializing_if = "Option::is_none")]
    pub catalog_type: Option<CatalogType>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Box<models::CatalogsCreativeAssetsProductGroupFilters>>,
}

impl CatalogsCreativeAssetsProductGroupUpdateRequest {
    /// Request object for updating a creative assets product group.
    pub fn new() -> CatalogsCreativeAssetsProductGroupUpdateRequest {
        CatalogsCreativeAssetsProductGroupUpdateRequest {
            catalog_type: None,
            name: None,
            description: None,
            filters: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CatalogType {
    #[serde(rename = "CREATIVE_ASSETS")]
    CreativeAssets,
}

impl Default for CatalogType {
    fn default() -> CatalogType {
        Self::CreativeAssets
    }
}

