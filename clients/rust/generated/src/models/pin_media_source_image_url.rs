/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PinMediaSourceImageUrl : Image URL-based media source
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PinMediaSourceImageUrl {
    #[serde(rename = "source_type")]
    pub source_type: SourceType,
    #[serde(rename = "url")]
    pub url: String,
    /// Set the parameter to false to create the new simplified Pin instead of the standard pin. Currently the field is only available to a list of beta users.
    #[serde(rename = "is_standard", skip_serializing_if = "Option::is_none")]
    pub is_standard: Option<bool>,
}

impl PinMediaSourceImageUrl {
    /// Image URL-based media source
    pub fn new(source_type: SourceType, url: String) -> PinMediaSourceImageUrl {
        PinMediaSourceImageUrl {
            source_type,
            url,
            is_standard: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SourceType {
    #[serde(rename = "image_url")]
    ImageUrl,
}

impl Default for SourceType {
    fn default() -> SourceType {
        Self::ImageUrl
    }
}

