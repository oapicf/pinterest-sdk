/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Granularity : Granularity
/// Granularity
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Granularity {
    #[serde(rename = "TOTAL")]
    Total,
    #[serde(rename = "DAY")]
    Day,
    #[serde(rename = "HOUR")]
    Hour,
    #[serde(rename = "WEEK")]
    Week,
    #[serde(rename = "MONTH")]
    Month,

}

impl std::fmt::Display for Granularity {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Total => write!(f, "TOTAL"),
            Self::Day => write!(f, "DAY"),
            Self::Hour => write!(f, "HOUR"),
            Self::Week => write!(f, "WEEK"),
            Self::Month => write!(f, "MONTH"),
        }
    }
}

impl Default for Granularity {
    fn default() -> Granularity {
        Self::Total
    }
}

