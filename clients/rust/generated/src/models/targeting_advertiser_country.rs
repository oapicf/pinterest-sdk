/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TargetingAdvertiserCountry : Advertiser's ISO two character country code.
/// Advertiser's ISO two character country code.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TargetingAdvertiserCountry {
    #[serde(rename = "US")]
    Us,
    #[serde(rename = "GB")]
    Gb,
    #[serde(rename = "CA")]
    Ca,
    #[serde(rename = "IE")]
    Ie,
    #[serde(rename = "AU")]
    Au,
    #[serde(rename = "NZ")]
    Nz,
    #[serde(rename = "FR")]
    Fr,
    #[serde(rename = "SE")]
    Se,
    #[serde(rename = "IL")]
    Il,
    #[serde(rename = "DE")]
    De,
    #[serde(rename = "AT")]
    At,
    #[serde(rename = "IT")]
    It,
    #[serde(rename = "ES")]
    Es,
    #[serde(rename = "NL")]
    Nl,
    #[serde(rename = "BE")]
    Be,
    #[serde(rename = "PT")]
    Pt,
    #[serde(rename = "CH")]
    Ch,
    #[serde(rename = "HK")]
    Hk,
    #[serde(rename = "JP")]
    Jp,
    #[serde(rename = "KR")]
    Kr,
    #[serde(rename = "SG")]
    Sg,
    #[serde(rename = "NO")]
    No,
    #[serde(rename = "DK")]
    Dk,
    #[serde(rename = "FI")]
    Fi,
    #[serde(rename = "CY")]
    Cy,
    #[serde(rename = "LU")]
    Lu,
    #[serde(rename = "MT")]
    Mt,
    #[serde(rename = "PL")]
    Pl,
    #[serde(rename = "RO")]
    Ro,
    #[serde(rename = "HU")]
    Hu,
    #[serde(rename = "CZ")]
    Cz,
    #[serde(rename = "GR")]
    Gr,
    #[serde(rename = "SK")]
    Sk,
    #[serde(rename = "BR")]
    Br,
    #[serde(rename = "MX")]
    Mx,
    #[serde(rename = "AR")]
    Ar,
    #[serde(rename = "CL")]
    Cl,
    #[serde(rename = "CO")]
    Co,

}

impl std::fmt::Display for TargetingAdvertiserCountry {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Us => write!(f, "US"),
            Self::Gb => write!(f, "GB"),
            Self::Ca => write!(f, "CA"),
            Self::Ie => write!(f, "IE"),
            Self::Au => write!(f, "AU"),
            Self::Nz => write!(f, "NZ"),
            Self::Fr => write!(f, "FR"),
            Self::Se => write!(f, "SE"),
            Self::Il => write!(f, "IL"),
            Self::De => write!(f, "DE"),
            Self::At => write!(f, "AT"),
            Self::It => write!(f, "IT"),
            Self::Es => write!(f, "ES"),
            Self::Nl => write!(f, "NL"),
            Self::Be => write!(f, "BE"),
            Self::Pt => write!(f, "PT"),
            Self::Ch => write!(f, "CH"),
            Self::Hk => write!(f, "HK"),
            Self::Jp => write!(f, "JP"),
            Self::Kr => write!(f, "KR"),
            Self::Sg => write!(f, "SG"),
            Self::No => write!(f, "NO"),
            Self::Dk => write!(f, "DK"),
            Self::Fi => write!(f, "FI"),
            Self::Cy => write!(f, "CY"),
            Self::Lu => write!(f, "LU"),
            Self::Mt => write!(f, "MT"),
            Self::Pl => write!(f, "PL"),
            Self::Ro => write!(f, "RO"),
            Self::Hu => write!(f, "HU"),
            Self::Cz => write!(f, "CZ"),
            Self::Gr => write!(f, "GR"),
            Self::Sk => write!(f, "SK"),
            Self::Br => write!(f, "BR"),
            Self::Mx => write!(f, "MX"),
            Self::Ar => write!(f, "AR"),
            Self::Cl => write!(f, "CL"),
            Self::Co => write!(f, "CO"),
        }
    }
}

impl Default for TargetingAdvertiserCountry {
    fn default() -> TargetingAdvertiserCountry {
        Self::Us
    }
}

