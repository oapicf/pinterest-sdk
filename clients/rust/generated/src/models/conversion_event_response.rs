/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConversionEventResponse {
    #[serde(rename = "conversion_event", skip_serializing_if = "Option::is_none")]
    pub conversion_event: Option<models::ConversionTagType>,
    /// Id of the tag.
    #[serde(rename = "conversion_tag_id", skip_serializing_if = "Option::is_none")]
    pub conversion_tag_id: Option<String>,
    /// Id of the ad account.
    #[serde(rename = "ad_account_id", skip_serializing_if = "Option::is_none")]
    pub ad_account_id: Option<String>,
    /// Creation date in epoch format.
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<i32>,
}

impl ConversionEventResponse {
    pub fn new() -> ConversionEventResponse {
        ConversionEventResponse {
            conversion_event: None,
            conversion_tag_id: None,
            ad_account_id: None,
            created_time: None,
        }
    }
}

