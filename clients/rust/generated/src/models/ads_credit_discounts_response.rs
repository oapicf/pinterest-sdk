/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdsCreditDiscountsResponse {
    /// True if the offer code is currently active.
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    /// Advertiser ID the offer was applied to.
    #[serde(rename = "advertiser_id", skip_serializing_if = "Option::is_none")]
    pub advertiser_id: Option<String>,
    /// The type of discount of this credit
    #[serde(rename = "discountType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discount_type: Option<Option<DiscountType>>,
    /// The discount applied in the offerâ€™s currency value.
    #[serde(rename = "discountInMicroCurrency", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discount_in_micro_currency: Option<Option<f64>>,
    /// Currency value for the discount.
    #[serde(rename = "discountCurrency", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub discount_currency: Option<Option<String>>,
    /// Human readable title of the offer code.
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    /// The credits left to spend.
    #[serde(rename = "remainingDiscountInMicroCurrency", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub remaining_discount_in_micro_currency: Option<Option<f64>>,
}

impl AdsCreditDiscountsResponse {
    pub fn new() -> AdsCreditDiscountsResponse {
        AdsCreditDiscountsResponse {
            active: None,
            advertiser_id: None,
            discount_type: None,
            discount_in_micro_currency: None,
            discount_currency: None,
            title: None,
            remaining_discount_in_micro_currency: None,
        }
    }
}
/// The type of discount of this credit
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DiscountType {
    #[serde(rename = "COUPON")]
    Coupon,
    #[serde(rename = "CREDIT")]
    Credit,
    #[serde(rename = "COUPON_APPLIED")]
    CouponApplied,
    #[serde(rename = "CREDIT_APPLIED")]
    CreditApplied,
    #[serde(rename = "MARKETING_OFFER_CREDIT")]
    MarketingOfferCredit,
    #[serde(rename = "MARKETING_OFFER_CREDIT_APPLIED")]
    MarketingOfferCreditApplied,
    #[serde(rename = "GOODWILL_CREDIT")]
    GoodwillCredit,
    #[serde(rename = "GOODWILL_CREDIT_APPLIED")]
    GoodwillCreditApplied,
    #[serde(rename = "INTERNAL_CREDIT")]
    InternalCredit,
    #[serde(rename = "INTERNAL_CREDIT_APPLIED")]
    InternalCreditApplied,
    #[serde(rename = "PREPAID_CREDIT")]
    PrepaidCredit,
    #[serde(rename = "PREPAID_CREDIT_APPLIED")]
    PrepaidCreditApplied,
    #[serde(rename = "SALES_INCENTIVE_CREDIT")]
    SalesIncentiveCredit,
    #[serde(rename = "SALES_INCENTIVE_CREDIT_APPLIED")]
    SalesIncentiveCreditApplied,
    #[serde(rename = "CREDIT_EXPIRED")]
    CreditExpired,
    #[serde(rename = "FUTURE_CREDIT")]
    FutureCredit,
    #[serde(rename = "REFERRAL_CREDIT")]
    ReferralCredit,
    #[serde(rename = "INVOICE_SALES_INCENTIVE_CREDIT")]
    InvoiceSalesIncentiveCredit,
    #[serde(rename = "INVOICE_SALES_INCENTIVE_CREDIT_APPLIED")]
    InvoiceSalesIncentiveCreditApplied,
    #[serde(rename = "PREPAID_CREDIT_REFUND")]
    PrepaidCreditRefund,
}

impl Default for DiscountType {
    fn default() -> DiscountType {
        Self::Coupon
    }
}

