/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SummaryPin : Summarized pin information
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SummaryPin {
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<Box<models::PinMedia>>,
    #[serde(rename = "alt_text", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub alt_text: Option<Option<String>>,
    #[serde(rename = "link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub link: Option<Option<String>>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
}

impl SummaryPin {
    /// Summarized pin information
    pub fn new() -> SummaryPin {
        SummaryPin {
            media: None,
            alt_text: None,
            link: None,
            title: None,
            description: None,
        }
    }
}

