/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserWebsiteVerificationCode {
    /// Code to check against the user claiming the website
    #[serde(rename = "verification_code", skip_serializing_if = "Option::is_none")]
    pub verification_code: Option<String>,
    /// DNS TXT record to check against for the website to be claimed
    #[serde(rename = "dns_txt_record", skip_serializing_if = "Option::is_none")]
    pub dns_txt_record: Option<String>,
    /// Metatag the verification process searchs for the website to be claimed
    #[serde(rename = "metatag", skip_serializing_if = "Option::is_none")]
    pub metatag: Option<String>,
    /// File expected to find on the website being claimed
    #[serde(rename = "filename", skip_serializing_if = "Option::is_none")]
    pub filename: Option<String>,
    /// A full html file to upload to the website in order for it to be claimed
    #[serde(rename = "file_content", skip_serializing_if = "Option::is_none")]
    pub file_content: Option<String>,
}

impl UserWebsiteVerificationCode {
    pub fn new() -> UserWebsiteVerificationCode {
        UserWebsiteVerificationCode {
            verification_code: None,
            dns_txt_record: None,
            metatag: None,
            filename: None,
            file_content: None,
        }
    }
}

