/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AudienceType : Audience type
/// Audience type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AudienceType {
    #[serde(rename = "CUSTOMER_LIST")]
    CustomerList,
    #[serde(rename = "VISITOR")]
    Visitor,
    #[serde(rename = "ENGAGEMENT")]
    Engagement,
    #[serde(rename = "ACTALIKE")]
    Actalike,
    #[serde(rename = "PERSONA")]
    Persona,

}

impl std::fmt::Display for AudienceType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CustomerList => write!(f, "CUSTOMER_LIST"),
            Self::Visitor => write!(f, "VISITOR"),
            Self::Engagement => write!(f, "ENGAGEMENT"),
            Self::Actalike => write!(f, "ACTALIKE"),
            Self::Persona => write!(f, "PERSONA"),
        }
    }
}

impl Default for AudienceType {
    fn default() -> AudienceType {
        Self::CustomerList
    }
}

