/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreativeAssetsProcessingRecord : Object describing an item processing record
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreativeAssetsProcessingRecord {
    /// The catalog creative assets id in the merchant namespace
    #[serde(rename = "creative_assets_id", skip_serializing_if = "Option::is_none")]
    pub creative_assets_id: Option<String>,
    /// Array with the validation errors for the item processing record. A non empty errors list causes the item processing to fail.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::ItemValidationEvent>>,
    /// Array with the validation warnings for the item processing record
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::ItemValidationEvent>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::ItemProcessingStatus>,
}

impl CreativeAssetsProcessingRecord {
    /// Object describing an item processing record
    pub fn new() -> CreativeAssetsProcessingRecord {
        CreativeAssetsProcessingRecord {
            creative_assets_id: None,
            errors: None,
            warnings: None,
            status: None,
        }
    }
}

