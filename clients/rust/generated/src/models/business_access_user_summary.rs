/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BusinessAccessUserSummary : Metadata of the member/partner that has access to the asset.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BusinessAccessUserSummary {
    /// Email of the business member/partner.
    #[serde(rename = "email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email: Option<Option<String>>,
    /// Unique identifier of the business member/partner.
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<String>>,
    /// Username of the business member/partner.
    #[serde(rename = "username", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub username: Option<Option<String>>,
}

impl BusinessAccessUserSummary {
    /// Metadata of the member/partner that has access to the asset.
    pub fn new() -> BusinessAccessUserSummary {
        BusinessAccessUserSummary {
            email: None,
            id: None,
            username: None,
        }
    }
}

