/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Country : Country ID from ISO 3166-1 alpha-2.
/// Country ID from ISO 3166-1 alpha-2.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Country {
    #[serde(rename = "AD")]
    Ad,
    #[serde(rename = "AE")]
    Ae,
    #[serde(rename = "AF")]
    Af,
    #[serde(rename = "AG")]
    Ag,
    #[serde(rename = "AI")]
    Ai,
    #[serde(rename = "AL")]
    Al,
    #[serde(rename = "AM")]
    Am,
    #[serde(rename = "AO")]
    Ao,
    #[serde(rename = "AQ")]
    Aq,
    #[serde(rename = "AR")]
    Ar,
    #[serde(rename = "AS")]
    As,
    #[serde(rename = "AT")]
    At,
    #[serde(rename = "AU")]
    Au,
    #[serde(rename = "AW")]
    Aw,
    #[serde(rename = "AX")]
    Ax,
    #[serde(rename = "AZ")]
    Az,
    #[serde(rename = "BA")]
    Ba,
    #[serde(rename = "BB")]
    Bb,
    #[serde(rename = "BD")]
    Bd,
    #[serde(rename = "BE")]
    Be,
    #[serde(rename = "BF")]
    Bf,
    #[serde(rename = "BG")]
    Bg,
    #[serde(rename = "BH")]
    Bh,
    #[serde(rename = "BI")]
    Bi,
    #[serde(rename = "BJ")]
    Bj,
    #[serde(rename = "BL")]
    Bl,
    #[serde(rename = "BM")]
    Bm,
    #[serde(rename = "BN")]
    Bn,
    #[serde(rename = "BO")]
    Bo,
    #[serde(rename = "BQ")]
    Bq,
    #[serde(rename = "BR")]
    Br,
    #[serde(rename = "BS")]
    Bs,
    #[serde(rename = "BT")]
    Bt,
    #[serde(rename = "BV")]
    Bv,
    #[serde(rename = "BW")]
    Bw,
    #[serde(rename = "BY")]
    By,
    #[serde(rename = "BZ")]
    Bz,
    #[serde(rename = "CA")]
    Ca,
    #[serde(rename = "CC")]
    Cc,
    #[serde(rename = "CD")]
    Cd,
    #[serde(rename = "CF")]
    Cf,
    #[serde(rename = "CG")]
    Cg,
    #[serde(rename = "CH")]
    Ch,
    #[serde(rename = "CI")]
    Ci,
    #[serde(rename = "CK")]
    Ck,
    #[serde(rename = "CL")]
    Cl,
    #[serde(rename = "CM")]
    Cm,
    #[serde(rename = "CN")]
    Cn,
    #[serde(rename = "CO")]
    Co,
    #[serde(rename = "CR")]
    Cr,
    #[serde(rename = "CU")]
    Cu,
    #[serde(rename = "CV")]
    Cv,
    #[serde(rename = "CW")]
    Cw,
    #[serde(rename = "CX")]
    Cx,
    #[serde(rename = "CY")]
    Cy,
    #[serde(rename = "CZ")]
    Cz,
    #[serde(rename = "DE")]
    De,
    #[serde(rename = "DJ")]
    Dj,
    #[serde(rename = "DK")]
    Dk,
    #[serde(rename = "DM")]
    Dm,
    #[serde(rename = "DO")]
    Do,
    #[serde(rename = "DZ")]
    Dz,
    #[serde(rename = "EC")]
    Ec,
    #[serde(rename = "EE")]
    Ee,
    #[serde(rename = "EG")]
    Eg,
    #[serde(rename = "EH")]
    Eh,
    #[serde(rename = "ER")]
    Er,
    #[serde(rename = "ES")]
    Es,
    #[serde(rename = "ET")]
    Et,
    #[serde(rename = "FI")]
    Fi,
    #[serde(rename = "FJ")]
    Fj,
    #[serde(rename = "FK")]
    Fk,
    #[serde(rename = "FM")]
    Fm,
    #[serde(rename = "FO")]
    Fo,
    #[serde(rename = "FR")]
    Fr,
    #[serde(rename = "GA")]
    Ga,
    #[serde(rename = "GB")]
    Gb,
    #[serde(rename = "GD")]
    Gd,
    #[serde(rename = "GE")]
    Ge,
    #[serde(rename = "GF")]
    Gf,
    #[serde(rename = "GG")]
    Gg,
    #[serde(rename = "GH")]
    Gh,
    #[serde(rename = "GI")]
    Gi,
    #[serde(rename = "GL")]
    Gl,
    #[serde(rename = "GM")]
    Gm,
    #[serde(rename = "GN")]
    Gn,
    #[serde(rename = "GP")]
    Gp,
    #[serde(rename = "GQ")]
    Gq,
    #[serde(rename = "GR")]
    Gr,
    #[serde(rename = "GS")]
    Gs,
    #[serde(rename = "GT")]
    Gt,
    #[serde(rename = "GU")]
    Gu,
    #[serde(rename = "GW")]
    Gw,
    #[serde(rename = "GY")]
    Gy,
    #[serde(rename = "HK")]
    Hk,
    #[serde(rename = "HM")]
    Hm,
    #[serde(rename = "HN")]
    Hn,
    #[serde(rename = "HR")]
    Hr,
    #[serde(rename = "HT")]
    Ht,
    #[serde(rename = "HU")]
    Hu,
    #[serde(rename = "ID")]
    Id,
    #[serde(rename = "IE")]
    Ie,
    #[serde(rename = "IL")]
    Il,
    #[serde(rename = "IM")]
    Im,
    #[serde(rename = "IN")]
    In,
    #[serde(rename = "IO")]
    Io,
    #[serde(rename = "IQ")]
    Iq,
    #[serde(rename = "IR")]
    Ir,
    #[serde(rename = "IS")]
    Is,
    #[serde(rename = "IT")]
    It,
    #[serde(rename = "JE")]
    Je,
    #[serde(rename = "JM")]
    Jm,
    #[serde(rename = "JO")]
    Jo,
    #[serde(rename = "JP")]
    Jp,
    #[serde(rename = "KE")]
    Ke,
    #[serde(rename = "KG")]
    Kg,
    #[serde(rename = "KH")]
    Kh,
    #[serde(rename = "KI")]
    Ki,
    #[serde(rename = "KM")]
    Km,
    #[serde(rename = "KN")]
    Kn,
    #[serde(rename = "KR")]
    Kr,
    #[serde(rename = "KW")]
    Kw,
    #[serde(rename = "KY")]
    Ky,
    #[serde(rename = "KZ")]
    Kz,
    #[serde(rename = "LA")]
    La,
    #[serde(rename = "LB")]
    Lb,
    #[serde(rename = "LC")]
    Lc,
    #[serde(rename = "LI")]
    Li,
    #[serde(rename = "LK")]
    Lk,
    #[serde(rename = "LR")]
    Lr,
    #[serde(rename = "LS")]
    Ls,
    #[serde(rename = "LT")]
    Lt,
    #[serde(rename = "LU")]
    Lu,
    #[serde(rename = "LV")]
    Lv,
    #[serde(rename = "LY")]
    Ly,
    #[serde(rename = "MA")]
    Ma,
    #[serde(rename = "MC")]
    Mc,
    #[serde(rename = "MD")]
    Md,
    #[serde(rename = "ME")]
    Me,
    #[serde(rename = "MF")]
    Mf,
    #[serde(rename = "MG")]
    Mg,
    #[serde(rename = "MH")]
    Mh,
    #[serde(rename = "MK")]
    Mk,
    #[serde(rename = "ML")]
    Ml,
    #[serde(rename = "MM")]
    Mm,
    #[serde(rename = "MN")]
    Mn,
    #[serde(rename = "MO")]
    Mo,
    #[serde(rename = "MP")]
    Mp,
    #[serde(rename = "MQ")]
    Mq,
    #[serde(rename = "MR")]
    Mr,
    #[serde(rename = "MS")]
    Ms,
    #[serde(rename = "MT")]
    Mt,
    #[serde(rename = "MU")]
    Mu,
    #[serde(rename = "MV")]
    Mv,
    #[serde(rename = "MW")]
    Mw,
    #[serde(rename = "MX")]
    Mx,
    #[serde(rename = "MY")]
    My,
    #[serde(rename = "MZ")]
    Mz,
    #[serde(rename = "NA")]
    Na,
    #[serde(rename = "NC")]
    Nc,
    #[serde(rename = "NE")]
    Ne,
    #[serde(rename = "NF")]
    Nf,
    #[serde(rename = "NG")]
    Ng,
    #[serde(rename = "NI")]
    Ni,
    #[serde(rename = "NL")]
    Nl,
    #[serde(rename = "NO")]
    No,
    #[serde(rename = "NP")]
    Np,
    #[serde(rename = "NR")]
    Nr,
    #[serde(rename = "NU")]
    Nu,
    #[serde(rename = "NZ")]
    Nz,
    #[serde(rename = "OM")]
    Om,
    #[serde(rename = "PA")]
    Pa,
    #[serde(rename = "PE")]
    Pe,
    #[serde(rename = "PF")]
    Pf,
    #[serde(rename = "PG")]
    Pg,
    #[serde(rename = "PH")]
    Ph,
    #[serde(rename = "PK")]
    Pk,
    #[serde(rename = "PL")]
    Pl,
    #[serde(rename = "PM")]
    Pm,
    #[serde(rename = "PN")]
    Pn,
    #[serde(rename = "PR")]
    Pr,
    #[serde(rename = "PS")]
    Ps,
    #[serde(rename = "PT")]
    Pt,
    #[serde(rename = "PW")]
    Pw,
    #[serde(rename = "PY")]
    Py,
    #[serde(rename = "QA")]
    Qa,
    #[serde(rename = "RE")]
    Re,
    #[serde(rename = "RO")]
    Ro,
    #[serde(rename = "RS")]
    Rs,
    #[serde(rename = "RU")]
    Ru,
    #[serde(rename = "RW")]
    Rw,
    #[serde(rename = "SA")]
    Sa,
    #[serde(rename = "SB")]
    Sb,
    #[serde(rename = "SC")]
    Sc,
    #[serde(rename = "SD")]
    Sd,
    #[serde(rename = "SE")]
    Se,
    #[serde(rename = "SG")]
    Sg,
    #[serde(rename = "SH")]
    Sh,
    #[serde(rename = "SI")]
    Si,
    #[serde(rename = "SJ")]
    Sj,
    #[serde(rename = "SK")]
    Sk,
    #[serde(rename = "SL")]
    Sl,
    #[serde(rename = "SM")]
    Sm,
    #[serde(rename = "SN")]
    Sn,
    #[serde(rename = "SO")]
    So,
    #[serde(rename = "SR")]
    Sr,
    #[serde(rename = "SS")]
    Ss,
    #[serde(rename = "ST")]
    St,
    #[serde(rename = "SV")]
    Sv,
    #[serde(rename = "SX")]
    Sx,
    #[serde(rename = "SY")]
    Sy,
    #[serde(rename = "SZ")]
    Sz,
    #[serde(rename = "TC")]
    Tc,
    #[serde(rename = "TD")]
    Td,
    #[serde(rename = "TF")]
    Tf,
    #[serde(rename = "TG")]
    Tg,
    #[serde(rename = "TH")]
    Th,
    #[serde(rename = "TJ")]
    Tj,
    #[serde(rename = "TK")]
    Tk,
    #[serde(rename = "TL")]
    Tl,
    #[serde(rename = "TM")]
    Tm,
    #[serde(rename = "TN")]
    Tn,
    #[serde(rename = "TO")]
    To,
    #[serde(rename = "TR")]
    Tr,
    #[serde(rename = "TT")]
    Tt,
    #[serde(rename = "TV")]
    Tv,
    #[serde(rename = "TW")]
    Tw,
    #[serde(rename = "TZ")]
    Tz,
    #[serde(rename = "UA")]
    Ua,
    #[serde(rename = "UG")]
    Ug,
    #[serde(rename = "UM")]
    Um,
    #[serde(rename = "US")]
    Us,
    #[serde(rename = "UY")]
    Uy,
    #[serde(rename = "UZ")]
    Uz,
    #[serde(rename = "VA")]
    Va,
    #[serde(rename = "VC")]
    Vc,
    #[serde(rename = "VE")]
    Ve,
    #[serde(rename = "VG")]
    Vg,
    #[serde(rename = "VI")]
    Vi,
    #[serde(rename = "VN")]
    Vn,
    #[serde(rename = "VU")]
    Vu,
    #[serde(rename = "WF")]
    Wf,
    #[serde(rename = "WS")]
    Ws,
    #[serde(rename = "YE")]
    Ye,
    #[serde(rename = "YT")]
    Yt,
    #[serde(rename = "ZA")]
    Za,
    #[serde(rename = "ZM")]
    Zm,
    #[serde(rename = "ZW")]
    Zw,

}

impl std::fmt::Display for Country {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Ad => write!(f, "AD"),
            Self::Ae => write!(f, "AE"),
            Self::Af => write!(f, "AF"),
            Self::Ag => write!(f, "AG"),
            Self::Ai => write!(f, "AI"),
            Self::Al => write!(f, "AL"),
            Self::Am => write!(f, "AM"),
            Self::Ao => write!(f, "AO"),
            Self::Aq => write!(f, "AQ"),
            Self::Ar => write!(f, "AR"),
            Self::As => write!(f, "AS"),
            Self::At => write!(f, "AT"),
            Self::Au => write!(f, "AU"),
            Self::Aw => write!(f, "AW"),
            Self::Ax => write!(f, "AX"),
            Self::Az => write!(f, "AZ"),
            Self::Ba => write!(f, "BA"),
            Self::Bb => write!(f, "BB"),
            Self::Bd => write!(f, "BD"),
            Self::Be => write!(f, "BE"),
            Self::Bf => write!(f, "BF"),
            Self::Bg => write!(f, "BG"),
            Self::Bh => write!(f, "BH"),
            Self::Bi => write!(f, "BI"),
            Self::Bj => write!(f, "BJ"),
            Self::Bl => write!(f, "BL"),
            Self::Bm => write!(f, "BM"),
            Self::Bn => write!(f, "BN"),
            Self::Bo => write!(f, "BO"),
            Self::Bq => write!(f, "BQ"),
            Self::Br => write!(f, "BR"),
            Self::Bs => write!(f, "BS"),
            Self::Bt => write!(f, "BT"),
            Self::Bv => write!(f, "BV"),
            Self::Bw => write!(f, "BW"),
            Self::By => write!(f, "BY"),
            Self::Bz => write!(f, "BZ"),
            Self::Ca => write!(f, "CA"),
            Self::Cc => write!(f, "CC"),
            Self::Cd => write!(f, "CD"),
            Self::Cf => write!(f, "CF"),
            Self::Cg => write!(f, "CG"),
            Self::Ch => write!(f, "CH"),
            Self::Ci => write!(f, "CI"),
            Self::Ck => write!(f, "CK"),
            Self::Cl => write!(f, "CL"),
            Self::Cm => write!(f, "CM"),
            Self::Cn => write!(f, "CN"),
            Self::Co => write!(f, "CO"),
            Self::Cr => write!(f, "CR"),
            Self::Cu => write!(f, "CU"),
            Self::Cv => write!(f, "CV"),
            Self::Cw => write!(f, "CW"),
            Self::Cx => write!(f, "CX"),
            Self::Cy => write!(f, "CY"),
            Self::Cz => write!(f, "CZ"),
            Self::De => write!(f, "DE"),
            Self::Dj => write!(f, "DJ"),
            Self::Dk => write!(f, "DK"),
            Self::Dm => write!(f, "DM"),
            Self::Do => write!(f, "DO"),
            Self::Dz => write!(f, "DZ"),
            Self::Ec => write!(f, "EC"),
            Self::Ee => write!(f, "EE"),
            Self::Eg => write!(f, "EG"),
            Self::Eh => write!(f, "EH"),
            Self::Er => write!(f, "ER"),
            Self::Es => write!(f, "ES"),
            Self::Et => write!(f, "ET"),
            Self::Fi => write!(f, "FI"),
            Self::Fj => write!(f, "FJ"),
            Self::Fk => write!(f, "FK"),
            Self::Fm => write!(f, "FM"),
            Self::Fo => write!(f, "FO"),
            Self::Fr => write!(f, "FR"),
            Self::Ga => write!(f, "GA"),
            Self::Gb => write!(f, "GB"),
            Self::Gd => write!(f, "GD"),
            Self::Ge => write!(f, "GE"),
            Self::Gf => write!(f, "GF"),
            Self::Gg => write!(f, "GG"),
            Self::Gh => write!(f, "GH"),
            Self::Gi => write!(f, "GI"),
            Self::Gl => write!(f, "GL"),
            Self::Gm => write!(f, "GM"),
            Self::Gn => write!(f, "GN"),
            Self::Gp => write!(f, "GP"),
            Self::Gq => write!(f, "GQ"),
            Self::Gr => write!(f, "GR"),
            Self::Gs => write!(f, "GS"),
            Self::Gt => write!(f, "GT"),
            Self::Gu => write!(f, "GU"),
            Self::Gw => write!(f, "GW"),
            Self::Gy => write!(f, "GY"),
            Self::Hk => write!(f, "HK"),
            Self::Hm => write!(f, "HM"),
            Self::Hn => write!(f, "HN"),
            Self::Hr => write!(f, "HR"),
            Self::Ht => write!(f, "HT"),
            Self::Hu => write!(f, "HU"),
            Self::Id => write!(f, "ID"),
            Self::Ie => write!(f, "IE"),
            Self::Il => write!(f, "IL"),
            Self::Im => write!(f, "IM"),
            Self::In => write!(f, "IN"),
            Self::Io => write!(f, "IO"),
            Self::Iq => write!(f, "IQ"),
            Self::Ir => write!(f, "IR"),
            Self::Is => write!(f, "IS"),
            Self::It => write!(f, "IT"),
            Self::Je => write!(f, "JE"),
            Self::Jm => write!(f, "JM"),
            Self::Jo => write!(f, "JO"),
            Self::Jp => write!(f, "JP"),
            Self::Ke => write!(f, "KE"),
            Self::Kg => write!(f, "KG"),
            Self::Kh => write!(f, "KH"),
            Self::Ki => write!(f, "KI"),
            Self::Km => write!(f, "KM"),
            Self::Kn => write!(f, "KN"),
            Self::Kr => write!(f, "KR"),
            Self::Kw => write!(f, "KW"),
            Self::Ky => write!(f, "KY"),
            Self::Kz => write!(f, "KZ"),
            Self::La => write!(f, "LA"),
            Self::Lb => write!(f, "LB"),
            Self::Lc => write!(f, "LC"),
            Self::Li => write!(f, "LI"),
            Self::Lk => write!(f, "LK"),
            Self::Lr => write!(f, "LR"),
            Self::Ls => write!(f, "LS"),
            Self::Lt => write!(f, "LT"),
            Self::Lu => write!(f, "LU"),
            Self::Lv => write!(f, "LV"),
            Self::Ly => write!(f, "LY"),
            Self::Ma => write!(f, "MA"),
            Self::Mc => write!(f, "MC"),
            Self::Md => write!(f, "MD"),
            Self::Me => write!(f, "ME"),
            Self::Mf => write!(f, "MF"),
            Self::Mg => write!(f, "MG"),
            Self::Mh => write!(f, "MH"),
            Self::Mk => write!(f, "MK"),
            Self::Ml => write!(f, "ML"),
            Self::Mm => write!(f, "MM"),
            Self::Mn => write!(f, "MN"),
            Self::Mo => write!(f, "MO"),
            Self::Mp => write!(f, "MP"),
            Self::Mq => write!(f, "MQ"),
            Self::Mr => write!(f, "MR"),
            Self::Ms => write!(f, "MS"),
            Self::Mt => write!(f, "MT"),
            Self::Mu => write!(f, "MU"),
            Self::Mv => write!(f, "MV"),
            Self::Mw => write!(f, "MW"),
            Self::Mx => write!(f, "MX"),
            Self::My => write!(f, "MY"),
            Self::Mz => write!(f, "MZ"),
            Self::Na => write!(f, "NA"),
            Self::Nc => write!(f, "NC"),
            Self::Ne => write!(f, "NE"),
            Self::Nf => write!(f, "NF"),
            Self::Ng => write!(f, "NG"),
            Self::Ni => write!(f, "NI"),
            Self::Nl => write!(f, "NL"),
            Self::No => write!(f, "NO"),
            Self::Np => write!(f, "NP"),
            Self::Nr => write!(f, "NR"),
            Self::Nu => write!(f, "NU"),
            Self::Nz => write!(f, "NZ"),
            Self::Om => write!(f, "OM"),
            Self::Pa => write!(f, "PA"),
            Self::Pe => write!(f, "PE"),
            Self::Pf => write!(f, "PF"),
            Self::Pg => write!(f, "PG"),
            Self::Ph => write!(f, "PH"),
            Self::Pk => write!(f, "PK"),
            Self::Pl => write!(f, "PL"),
            Self::Pm => write!(f, "PM"),
            Self::Pn => write!(f, "PN"),
            Self::Pr => write!(f, "PR"),
            Self::Ps => write!(f, "PS"),
            Self::Pt => write!(f, "PT"),
            Self::Pw => write!(f, "PW"),
            Self::Py => write!(f, "PY"),
            Self::Qa => write!(f, "QA"),
            Self::Re => write!(f, "RE"),
            Self::Ro => write!(f, "RO"),
            Self::Rs => write!(f, "RS"),
            Self::Ru => write!(f, "RU"),
            Self::Rw => write!(f, "RW"),
            Self::Sa => write!(f, "SA"),
            Self::Sb => write!(f, "SB"),
            Self::Sc => write!(f, "SC"),
            Self::Sd => write!(f, "SD"),
            Self::Se => write!(f, "SE"),
            Self::Sg => write!(f, "SG"),
            Self::Sh => write!(f, "SH"),
            Self::Si => write!(f, "SI"),
            Self::Sj => write!(f, "SJ"),
            Self::Sk => write!(f, "SK"),
            Self::Sl => write!(f, "SL"),
            Self::Sm => write!(f, "SM"),
            Self::Sn => write!(f, "SN"),
            Self::So => write!(f, "SO"),
            Self::Sr => write!(f, "SR"),
            Self::Ss => write!(f, "SS"),
            Self::St => write!(f, "ST"),
            Self::Sv => write!(f, "SV"),
            Self::Sx => write!(f, "SX"),
            Self::Sy => write!(f, "SY"),
            Self::Sz => write!(f, "SZ"),
            Self::Tc => write!(f, "TC"),
            Self::Td => write!(f, "TD"),
            Self::Tf => write!(f, "TF"),
            Self::Tg => write!(f, "TG"),
            Self::Th => write!(f, "TH"),
            Self::Tj => write!(f, "TJ"),
            Self::Tk => write!(f, "TK"),
            Self::Tl => write!(f, "TL"),
            Self::Tm => write!(f, "TM"),
            Self::Tn => write!(f, "TN"),
            Self::To => write!(f, "TO"),
            Self::Tr => write!(f, "TR"),
            Self::Tt => write!(f, "TT"),
            Self::Tv => write!(f, "TV"),
            Self::Tw => write!(f, "TW"),
            Self::Tz => write!(f, "TZ"),
            Self::Ua => write!(f, "UA"),
            Self::Ug => write!(f, "UG"),
            Self::Um => write!(f, "UM"),
            Self::Us => write!(f, "US"),
            Self::Uy => write!(f, "UY"),
            Self::Uz => write!(f, "UZ"),
            Self::Va => write!(f, "VA"),
            Self::Vc => write!(f, "VC"),
            Self::Ve => write!(f, "VE"),
            Self::Vg => write!(f, "VG"),
            Self::Vi => write!(f, "VI"),
            Self::Vn => write!(f, "VN"),
            Self::Vu => write!(f, "VU"),
            Self::Wf => write!(f, "WF"),
            Self::Ws => write!(f, "WS"),
            Self::Ye => write!(f, "YE"),
            Self::Yt => write!(f, "YT"),
            Self::Za => write!(f, "ZA"),
            Self::Zm => write!(f, "ZM"),
            Self::Zw => write!(f, "ZW"),
        }
    }
}

impl Default for Country {
    fn default() -> Country {
        Self::Ad
    }
}

