/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PinCreate : Pin
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PinCreate {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub link: Option<Option<String>>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    /// Dominant pin color. Hex number, e.g. \\\"#6E7874\\\".
    #[serde(rename = "dominant_color", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub dominant_color: Option<Option<String>>,
    #[serde(rename = "alt_text", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub alt_text: Option<Option<String>>,
    /// The board to which this Pin belongs.
    #[serde(rename = "board_id", skip_serializing_if = "Option::is_none")]
    pub board_id: Option<String>,
    /// The board section to which this Pin belongs.
    #[serde(rename = "board_section_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub board_section_id: Option<Option<String>>,
    #[serde(rename = "board_owner", skip_serializing_if = "Option::is_none")]
    pub board_owner: Option<Box<models::BoardOwner>>,
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<Box<models::PinMedia>>,
    #[serde(rename = "media_source", skip_serializing_if = "Option::is_none")]
    pub media_source: Option<Box<models::PinMediaSource>>,
    /// The source pin id if this pin was saved from another pin. <a href=\"https://help.pinterest.com/article/save-pins-on-pinterest\">Learn more</a>.
    #[serde(rename = "parent_pin_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub parent_pin_id: Option<Option<String>>,
    /// Private note for this Pin. <a href=\"https://help.pinterest.com/en/article/add-notes-to-your-pins\">Learn more</a>.
    #[serde(rename = "note", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub note: Option<Option<String>>,
}

impl PinCreate {
    /// Pin
    pub fn new() -> PinCreate {
        PinCreate {
            id: None,
            created_at: None,
            link: None,
            title: None,
            description: None,
            dominant_color: None,
            alt_text: None,
            board_id: None,
            board_section_id: None,
            board_owner: None,
            media: None,
            media_source: None,
            parent_pin_id: None,
            note: None,
        }
    }
}

