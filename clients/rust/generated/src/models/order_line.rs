/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderLine {
    /// Order line ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Always \"orderline\".
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Ad account ID.
    #[serde(rename = "ad_account_id", skip_serializing_if = "Option::is_none")]
    pub ad_account_id: Option<String>,
    /// Purchase order ID.
    #[serde(rename = "purchase_order_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub purchase_order_id: Option<Option<String>>,
    /// Start time. Unix timestamp.
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<f64>,
    /// End time. Unix timestamp.
    #[serde(rename = "end_time", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<Option<f64>>,
    /// Order line budget in micro currency.
    #[serde(rename = "budget", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub budget: Option<Option<f64>>,
    /// Order line paid budget in micro currency.
    #[serde(rename = "paid_budget", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub paid_budget: Option<Option<f64>>,
    /// Order line status.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::OrderLineStatus>,
    /// Order line name.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// Order line paid type.
    #[serde(rename = "paid_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub paid_type: Option<Option<models::OrderLinePaidType>>,
    /// Associated List of campaign IDs.
    #[serde(rename = "campaign_ids")]
    pub campaign_ids: Vec<String>,
}

impl OrderLine {
    pub fn new(campaign_ids: Vec<String>) -> OrderLine {
        OrderLine {
            id: None,
            r#type: None,
            ad_account_id: None,
            purchase_order_id: None,
            start_time: None,
            end_time: None,
            budget: None,
            paid_budget: None,
            status: None,
            name: None,
            paid_type: None,
            campaign_ids,
        }
    }
}

