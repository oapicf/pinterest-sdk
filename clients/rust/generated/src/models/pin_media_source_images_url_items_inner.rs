/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PinMediaSourceImagesUrlItemsInner {
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Destination link for the image.
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    /// URL of image to upload.
    #[serde(rename = "url")]
    pub url: String,
}

impl PinMediaSourceImagesUrlItemsInner {
    pub fn new(url: String) -> PinMediaSourceImagesUrlItemsInner {
        PinMediaSourceImagesUrlItemsInner {
            title: None,
            description: None,
            link: None,
            url,
        }
    }
}

