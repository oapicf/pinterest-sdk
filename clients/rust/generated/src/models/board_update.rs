/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BoardUpdate : Board fields for updates
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BoardUpdate {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "privacy", skip_serializing_if = "Option::is_none")]
    pub privacy: Option<Privacy>,
}

impl BoardUpdate {
    /// Board fields for updates
    pub fn new() -> BoardUpdate {
        BoardUpdate {
            name: None,
            description: None,
            privacy: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Privacy {
    #[serde(rename = "PUBLIC")]
    Public,
    #[serde(rename = "SECRET")]
    Secret,
}

impl Default for Privacy {
    fn default() -> Privacy {
        Self::Public
    }
}

