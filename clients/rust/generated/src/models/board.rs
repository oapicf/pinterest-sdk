/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Board : Board
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Board {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Date and time of board creation.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Date and time of last board pins modified.
    #[serde(rename = "board_pins_modified_at", skip_serializing_if = "Option::is_none")]
    pub board_pins_modified_at: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    /// Count of collaborators on the board.
    #[serde(rename = "collaborator_count", skip_serializing_if = "Option::is_none")]
    pub collaborator_count: Option<i32>,
    /// Count of pins on the board.
    #[serde(rename = "pin_count", skip_serializing_if = "Option::is_none")]
    pub pin_count: Option<i32>,
    /// Board follower count.
    #[serde(rename = "follower_count", skip_serializing_if = "Option::is_none")]
    pub follower_count: Option<i32>,
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<Box<models::BoardMedia>>,
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<Box<models::BoardOwner>>,
    /// Privacy setting for a board. Learn more about <a href=\"https://help.pinterest.com/en/article/secret-boards\">secret boards</a> and <a href=\"https://help.pinterest.com/en/business/article/protected-boards\">protected boards</a>
    #[serde(rename = "privacy", skip_serializing_if = "Option::is_none")]
    pub privacy: Option<Privacy>,
}

impl Board {
    /// Board
    pub fn new(name: String) -> Board {
        Board {
            id: None,
            created_at: None,
            board_pins_modified_at: None,
            name,
            description: None,
            collaborator_count: None,
            pin_count: None,
            follower_count: None,
            media: None,
            owner: None,
            privacy: None,
        }
    }
}
/// Privacy setting for a board. Learn more about <a href=\"https://help.pinterest.com/en/article/secret-boards\">secret boards</a> and <a href=\"https://help.pinterest.com/en/business/article/protected-boards\">protected boards</a>
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Privacy {
    #[serde(rename = "PUBLIC")]
    Public,
    #[serde(rename = "PROTECTED")]
    Protected,
    #[serde(rename = "SECRET")]
    Secret,
}

impl Default for Privacy {
    fn default() -> Privacy {
        Self::Public
    }
}

