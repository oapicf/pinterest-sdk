/*
 * Pinterest REST API
 *
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMmmReportResponse {
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<f64>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<models::GetMmmReportResponseData>>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl GetMmmReportResponse {
    pub fn new() -> GetMmmReportResponse {
        GetMmmReportResponse {
            code: None,
            data: None,
            message: None,
            status: None,
        }
    }
}

