<?php

/**
 * Pinterest REST API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\TemplateResponse;

/**
 * TemplateResponseTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\TemplateResponse
 */
class TemplateResponseTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TemplateResponse"
     */
    public function testTemplateResponse()
    {
        $testTemplateResponse = new TemplateResponse();
        $namespacedClassname = TemplateResponse::getModelsNamespace() . '\\TemplateResponse';
        $this->assertSame('\\' . TemplateResponse::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        self::markTestIncomplete(
            'Test of "id" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "adAccountId"
     */
    public function testPropertyAdAccountId()
    {
        self::markTestIncomplete(
            'Test of "adAccountId" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "adAccountIds"
     */
    public function testPropertyAdAccountIds()
    {
        self::markTestIncomplete(
            'Test of "adAccountIds" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "userId"
     */
    public function testPropertyUserId()
    {
        self::markTestIncomplete(
            'Test of "userId" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        self::markTestIncomplete(
            'Test of "name" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "reportStartRelativeDaysInPast"
     */
    public function testPropertyReportStartRelativeDaysInPast()
    {
        self::markTestIncomplete(
            'Test of "reportStartRelativeDaysInPast" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "reportEndRelativeDaysInPast"
     */
    public function testPropertyReportEndRelativeDaysInPast()
    {
        self::markTestIncomplete(
            'Test of "reportEndRelativeDaysInPast" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "dateRange"
     */
    public function testPropertyDateRange()
    {
        self::markTestIncomplete(
            'Test of "dateRange" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "reportLevel"
     */
    public function testPropertyReportLevel()
    {
        self::markTestIncomplete(
            'Test of "reportLevel" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "reportFormat"
     */
    public function testPropertyReportFormat()
    {
        self::markTestIncomplete(
            'Test of "reportFormat" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "columns"
     */
    public function testPropertyColumns()
    {
        self::markTestIncomplete(
            'Test of "columns" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "granularity"
     */
    public function testPropertyGranularity()
    {
        self::markTestIncomplete(
            'Test of "granularity" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "viewWindowDays"
     */
    public function testPropertyViewWindowDays()
    {
        self::markTestIncomplete(
            'Test of "viewWindowDays" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "clickWindowDays"
     */
    public function testPropertyClickWindowDays()
    {
        self::markTestIncomplete(
            'Test of "clickWindowDays" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "engagementWindowDays"
     */
    public function testPropertyEngagementWindowDays()
    {
        self::markTestIncomplete(
            'Test of "engagementWindowDays" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "conversionReportTimeType"
     */
    public function testPropertyConversionReportTimeType()
    {
        self::markTestIncomplete(
            'Test of "conversionReportTimeType" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "filtersJson"
     */
    public function testPropertyFiltersJson()
    {
        self::markTestIncomplete(
            'Test of "filtersJson" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isOwnedByUser"
     */
    public function testPropertyIsOwnedByUser()
    {
        self::markTestIncomplete(
            'Test of "isOwnedByUser" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isScheduled"
     */
    public function testPropertyIsScheduled()
    {
        self::markTestIncomplete(
            'Test of "isScheduled" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "creationSource"
     */
    public function testPropertyCreationSource()
    {
        self::markTestIncomplete(
            'Test of "creationSource" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isDeleted"
     */
    public function testPropertyIsDeleted()
    {
        self::markTestIncomplete(
            'Test of "isDeleted" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "updatedTime"
     */
    public function testPropertyUpdatedTime()
    {
        self::markTestIncomplete(
            'Test of "updatedTime" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "customColumnIds"
     */
    public function testPropertyCustomColumnIds()
    {
        self::markTestIncomplete(
            'Test of "customColumnIds" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        self::markTestIncomplete(
            'Test of "type" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "ingestionSources"
     */
    public function testPropertyIngestionSources()
    {
        self::markTestIncomplete(
            'Test of "ingestionSources" property in "TemplateResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = TemplateResponse::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

