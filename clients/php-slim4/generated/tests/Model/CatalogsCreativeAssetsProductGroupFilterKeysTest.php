<?php

/**
 * Pinterest REST API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\CatalogsCreativeAssetsProductGroupFilterKeys;

/**
 * CatalogsCreativeAssetsProductGroupFilterKeysTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\CatalogsCreativeAssetsProductGroupFilterKeys
 */
class CatalogsCreativeAssetsProductGroupFilterKeysTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CatalogsCreativeAssetsProductGroupFilterKeys"
     */
    public function testCatalogsCreativeAssetsProductGroupFilterKeys()
    {
        $testCatalogsCreativeAssetsProductGroupFilterKeys = new CatalogsCreativeAssetsProductGroupFilterKeys();
        $namespacedClassname = CatalogsCreativeAssetsProductGroupFilterKeys::getModelsNamespace() . '\\CatalogsCreativeAssetsProductGroupFilterKeys';
        $this->assertSame('\\' . CatalogsCreativeAssetsProductGroupFilterKeys::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cREATIVEASSETSID"
     */
    public function testPropertyCREATIVEASSETSID()
    {
        self::markTestIncomplete(
            'Test of "cREATIVEASSETSID" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cUSTOMLABEL0"
     */
    public function testPropertyCUSTOMLABEL0()
    {
        self::markTestIncomplete(
            'Test of "cUSTOMLABEL0" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cUSTOMLABEL1"
     */
    public function testPropertyCUSTOMLABEL1()
    {
        self::markTestIncomplete(
            'Test of "cUSTOMLABEL1" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cUSTOMLABEL2"
     */
    public function testPropertyCUSTOMLABEL2()
    {
        self::markTestIncomplete(
            'Test of "cUSTOMLABEL2" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cUSTOMLABEL3"
     */
    public function testPropertyCUSTOMLABEL3()
    {
        self::markTestIncomplete(
            'Test of "cUSTOMLABEL3" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cUSTOMLABEL4"
     */
    public function testPropertyCUSTOMLABEL4()
    {
        self::markTestIncomplete(
            'Test of "cUSTOMLABEL4" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY6"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY6()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY6" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY5"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY5()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY5" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY4"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY4()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY4" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY3"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY3()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY3" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY2"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY2()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY2" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY1"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY1()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY1" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gOOGLEPRODUCTCATEGORY0"
     */
    public function testPropertyGOOGLEPRODUCTCATEGORY0()
    {
        self::markTestIncomplete(
            'Test of "gOOGLEPRODUCTCATEGORY0" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "mEDIATYPE"
     */
    public function testPropertyMEDIATYPE()
    {
        self::markTestIncomplete(
            'Test of "mEDIATYPE" property in "CatalogsCreativeAssetsProductGroupFilterKeys" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = CatalogsCreativeAssetsProductGroupFilterKeys::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

