<?php

/**
 * Pinterest REST API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\ConversionEventsDataInner;

/**
 * ConversionEventsDataInnerTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\ConversionEventsDataInner
 */
class ConversionEventsDataInnerTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ConversionEventsDataInner"
     */
    public function testConversionEventsDataInner()
    {
        $testConversionEventsDataInner = new ConversionEventsDataInner();
        $namespacedClassname = ConversionEventsDataInner::getModelsNamespace() . '\\ConversionEventsDataInner';
        $this->assertSame('\\' . ConversionEventsDataInner::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "eventName"
     */
    public function testPropertyEventName()
    {
        self::markTestIncomplete(
            'Test of "eventName" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "actionSource"
     */
    public function testPropertyActionSource()
    {
        self::markTestIncomplete(
            'Test of "actionSource" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "eventTime"
     */
    public function testPropertyEventTime()
    {
        self::markTestIncomplete(
            'Test of "eventTime" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "eventId"
     */
    public function testPropertyEventId()
    {
        self::markTestIncomplete(
            'Test of "eventId" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "eventSourceUrl"
     */
    public function testPropertyEventSourceUrl()
    {
        self::markTestIncomplete(
            'Test of "eventSourceUrl" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "optOut"
     */
    public function testPropertyOptOut()
    {
        self::markTestIncomplete(
            'Test of "optOut" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "partnerName"
     */
    public function testPropertyPartnerName()
    {
        self::markTestIncomplete(
            'Test of "partnerName" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "userData"
     */
    public function testPropertyUserData()
    {
        self::markTestIncomplete(
            'Test of "userData" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "customData"
     */
    public function testPropertyCustomData()
    {
        self::markTestIncomplete(
            'Test of "customData" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "appId"
     */
    public function testPropertyAppId()
    {
        self::markTestIncomplete(
            'Test of "appId" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "appName"
     */
    public function testPropertyAppName()
    {
        self::markTestIncomplete(
            'Test of "appName" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "appVersion"
     */
    public function testPropertyAppVersion()
    {
        self::markTestIncomplete(
            'Test of "appVersion" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deviceBrand"
     */
    public function testPropertyDeviceBrand()
    {
        self::markTestIncomplete(
            'Test of "deviceBrand" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deviceCarrier"
     */
    public function testPropertyDeviceCarrier()
    {
        self::markTestIncomplete(
            'Test of "deviceCarrier" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deviceModel"
     */
    public function testPropertyDeviceModel()
    {
        self::markTestIncomplete(
            'Test of "deviceModel" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deviceType"
     */
    public function testPropertyDeviceType()
    {
        self::markTestIncomplete(
            'Test of "deviceType" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "osVersion"
     */
    public function testPropertyOsVersion()
    {
        self::markTestIncomplete(
            'Test of "osVersion" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "wifi"
     */
    public function testPropertyWifi()
    {
        self::markTestIncomplete(
            'Test of "wifi" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "language"
     */
    public function testPropertyLanguage()
    {
        self::markTestIncomplete(
            'Test of "language" property in "ConversionEventsDataInner" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = ConversionEventsDataInner::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

