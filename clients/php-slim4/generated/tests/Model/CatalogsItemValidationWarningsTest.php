<?php

/**
 * Pinterest REST API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\CatalogsItemValidationWarnings;

/**
 * CatalogsItemValidationWarningsTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\CatalogsItemValidationWarnings
 */
class CatalogsItemValidationWarningsTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CatalogsItemValidationWarnings"
     */
    public function testCatalogsItemValidationWarnings()
    {
        $testCatalogsItemValidationWarnings = new CatalogsItemValidationWarnings();
        $namespacedClassname = CatalogsItemValidationWarnings::getModelsNamespace() . '\\CatalogsItemValidationWarnings';
        $this->assertSame('\\' . CatalogsItemValidationWarnings::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aDLINKFORMATWARNING"
     */
    public function testPropertyADLINKFORMATWARNING()
    {
        self::markTestIncomplete(
            'Test of "aDLINKFORMATWARNING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aDLINKSAMEASLINK"
     */
    public function testPropertyADLINKSAMEASLINK()
    {
        self::markTestIncomplete(
            'Test of "aDLINKSAMEASLINK" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aDDITIONALIMAGELINKLENGTHTOOLONG"
     */
    public function testPropertyADDITIONALIMAGELINKLENGTHTOOLONG()
    {
        self::markTestIncomplete(
            'Test of "aDDITIONALIMAGELINKLENGTHTOOLONG" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aDDITIONALIMAGELINKWARNING"
     */
    public function testPropertyADDITIONALIMAGELINKWARNING()
    {
        self::markTestIncomplete(
            'Test of "aDDITIONALIMAGELINKWARNING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aDWORDSFORMATWARNING"
     */
    public function testPropertyADWORDSFORMATWARNING()
    {
        self::markTestIncomplete(
            'Test of "aDWORDSFORMATWARNING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aDWORDSSAMEASLINK"
     */
    public function testPropertyADWORDSSAMEASLINK()
    {
        self::markTestIncomplete(
            'Test of "aDWORDSSAMEASLINK" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aGEGROUPINVALID"
     */
    public function testPropertyAGEGROUPINVALID()
    {
        self::markTestIncomplete(
            'Test of "aGEGROUPINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sIZESYSTEMINVALID"
     */
    public function testPropertySIZESYSTEMINVALID()
    {
        self::markTestIncomplete(
            'Test of "sIZESYSTEMINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aNDROIDDEEPLINKINVALID"
     */
    public function testPropertyANDROIDDEEPLINKINVALID()
    {
        self::markTestIncomplete(
            'Test of "aNDROIDDEEPLINKINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "aVAILABILITYDATEINVALID"
     */
    public function testPropertyAVAILABILITYDATEINVALID()
    {
        self::markTestIncomplete(
            'Test of "aVAILABILITYDATEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cOUNTRYDOESNOTMAPTOCURRENCY"
     */
    public function testPropertyCOUNTRYDOESNOTMAPTOCURRENCY()
    {
        self::markTestIncomplete(
            'Test of "cOUNTRYDOESNOTMAPTOCURRENCY" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cUSTOMLABELLENGTHTOOLONG"
     */
    public function testPropertyCUSTOMLABELLENGTHTOOLONG()
    {
        self::markTestIncomplete(
            'Test of "cUSTOMLABELLENGTHTOOLONG" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "dESCRIPTIONLENGTHTOOLONG"
     */
    public function testPropertyDESCRIPTIONLENGTHTOOLONG()
    {
        self::markTestIncomplete(
            'Test of "dESCRIPTIONLENGTHTOOLONG" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "eXPIRATIONDATEINVALID"
     */
    public function testPropertyEXPIRATIONDATEINVALID()
    {
        self::markTestIncomplete(
            'Test of "eXPIRATIONDATEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gENDERINVALID"
     */
    public function testPropertyGENDERINVALID()
    {
        self::markTestIncomplete(
            'Test of "gENDERINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gTININVALID"
     */
    public function testPropertyGTININVALID()
    {
        self::markTestIncomplete(
            'Test of "gTININVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "iMAGELINKWARNING"
     */
    public function testPropertyIMAGELINKWARNING()
    {
        self::markTestIncomplete(
            'Test of "iMAGELINKWARNING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "iOSDEEPLINKINVALID"
     */
    public function testPropertyIOSDEEPLINKINVALID()
    {
        self::markTestIncomplete(
            'Test of "iOSDEEPLINKINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "iSBUNDLEINVALID"
     */
    public function testPropertyISBUNDLEINVALID()
    {
        self::markTestIncomplete(
            'Test of "iSBUNDLEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "iTEMADDITIONALIMAGEDOWNLOADFAILURE"
     */
    public function testPropertyITEMADDITIONALIMAGEDOWNLOADFAILURE()
    {
        self::markTestIncomplete(
            'Test of "iTEMADDITIONALIMAGEDOWNLOADFAILURE" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "lINKFORMATWARNING"
     */
    public function testPropertyLINKFORMATWARNING()
    {
        self::markTestIncomplete(
            'Test of "lINKFORMATWARNING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "mINADPRICEINVALID"
     */
    public function testPropertyMINADPRICEINVALID()
    {
        self::markTestIncomplete(
            'Test of "mINADPRICEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "mPNINVALID"
     */
    public function testPropertyMPNINVALID()
    {
        self::markTestIncomplete(
            'Test of "mPNINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "mULTIPACKINVALID"
     */
    public function testPropertyMULTIPACKINVALID()
    {
        self::markTestIncomplete(
            'Test of "mULTIPACKINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "oPTIONALCONDITIONINVALID"
     */
    public function testPropertyOPTIONALCONDITIONINVALID()
    {
        self::markTestIncomplete(
            'Test of "oPTIONALCONDITIONINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "oPTIONALCONDITIONMISSING"
     */
    public function testPropertyOPTIONALCONDITIONMISSING()
    {
        self::markTestIncomplete(
            'Test of "oPTIONALCONDITIONMISSING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "oPTIONALPRODUCTCATEGORYINVALID"
     */
    public function testPropertyOPTIONALPRODUCTCATEGORYINVALID()
    {
        self::markTestIncomplete(
            'Test of "oPTIONALPRODUCTCATEGORYINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "oPTIONALPRODUCTCATEGORYMISSING"
     */
    public function testPropertyOPTIONALPRODUCTCATEGORYMISSING()
    {
        self::markTestIncomplete(
            'Test of "oPTIONALPRODUCTCATEGORYMISSING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "pRODUCTCATEGORYDEPTHWARNING"
     */
    public function testPropertyPRODUCTCATEGORYDEPTHWARNING()
    {
        self::markTestIncomplete(
            'Test of "pRODUCTCATEGORYDEPTHWARNING" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "pRODUCTTYPELENGTHTOOLONG"
     */
    public function testPropertyPRODUCTTYPELENGTHTOOLONG()
    {
        self::markTestIncomplete(
            'Test of "pRODUCTTYPELENGTHTOOLONG" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sALESPRICEINVALID"
     */
    public function testPropertySALESPRICEINVALID()
    {
        self::markTestIncomplete(
            'Test of "sALESPRICEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sALESPRICETOOLOW"
     */
    public function testPropertySALESPRICETOOLOW()
    {
        self::markTestIncomplete(
            'Test of "sALESPRICETOOLOW" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sALESPRICETOOHIGH"
     */
    public function testPropertySALESPRICETOOHIGH()
    {
        self::markTestIncomplete(
            'Test of "sALESPRICETOOHIGH" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sALEDATEINVALID"
     */
    public function testPropertySALEDATEINVALID()
    {
        self::markTestIncomplete(
            'Test of "sALEDATEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sHIPPINGINVALID"
     */
    public function testPropertySHIPPINGINVALID()
    {
        self::markTestIncomplete(
            'Test of "sHIPPINGINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sHIPPINGHEIGHTINVALID"
     */
    public function testPropertySHIPPINGHEIGHTINVALID()
    {
        self::markTestIncomplete(
            'Test of "sHIPPINGHEIGHTINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sHIPPINGWEIGHTINVALID"
     */
    public function testPropertySHIPPINGWEIGHTINVALID()
    {
        self::markTestIncomplete(
            'Test of "sHIPPINGWEIGHTINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sHIPPINGWIDTHINVALID"
     */
    public function testPropertySHIPPINGWIDTHINVALID()
    {
        self::markTestIncomplete(
            'Test of "sHIPPINGWIDTHINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "sIZETYPEINVALID"
     */
    public function testPropertySIZETYPEINVALID()
    {
        self::markTestIncomplete(
            'Test of "sIZETYPEINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "tAXINVALID"
     */
    public function testPropertyTAXINVALID()
    {
        self::markTestIncomplete(
            'Test of "tAXINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "tITLELENGTHTOOLONG"
     */
    public function testPropertyTITLELENGTHTOOLONG()
    {
        self::markTestIncomplete(
            'Test of "tITLELENGTHTOOLONG" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "tOOMANYADDITIONALIMAGELINKS"
     */
    public function testPropertyTOOMANYADDITIONALIMAGELINKS()
    {
        self::markTestIncomplete(
            'Test of "tOOMANYADDITIONALIMAGELINKS" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "uTMSOURCEAUTOCORRECTED"
     */
    public function testPropertyUTMSOURCEAUTOCORRECTED()
    {
        self::markTestIncomplete(
            'Test of "uTMSOURCEAUTOCORRECTED" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "wEIGHTUNITINVALID"
     */
    public function testPropertyWEIGHTUNITINVALID()
    {
        self::markTestIncomplete(
            'Test of "wEIGHTUNITINVALID" property in "CatalogsItemValidationWarnings" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = CatalogsItemValidationWarnings::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

