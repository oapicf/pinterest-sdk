<?php

/**
 * Pinterest REST API
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Pinterest's REST API
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\AdResponse;

/**
 * AdResponseTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\AdResponse
 */
class AdResponseTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "AdResponse"
     */
    public function testAdResponse()
    {
        $testAdResponse = new AdResponse();
        $namespacedClassname = AdResponse::getModelsNamespace() . '\\AdResponse';
        $this->assertSame('\\' . AdResponse::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "adGroupId"
     */
    public function testPropertyAdGroupId()
    {
        self::markTestIncomplete(
            'Test of "adGroupId" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "androidDeepLink"
     */
    public function testPropertyAndroidDeepLink()
    {
        self::markTestIncomplete(
            'Test of "androidDeepLink" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "carouselAndroidDeepLinks"
     */
    public function testPropertyCarouselAndroidDeepLinks()
    {
        self::markTestIncomplete(
            'Test of "carouselAndroidDeepLinks" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "carouselDestinationUrls"
     */
    public function testPropertyCarouselDestinationUrls()
    {
        self::markTestIncomplete(
            'Test of "carouselDestinationUrls" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "carouselIosDeepLinks"
     */
    public function testPropertyCarouselIosDeepLinks()
    {
        self::markTestIncomplete(
            'Test of "carouselIosDeepLinks" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "clickTrackingUrl"
     */
    public function testPropertyClickTrackingUrl()
    {
        self::markTestIncomplete(
            'Test of "clickTrackingUrl" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "creativeType"
     */
    public function testPropertyCreativeType()
    {
        self::markTestIncomplete(
            'Test of "creativeType" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "destinationUrl"
     */
    public function testPropertyDestinationUrl()
    {
        self::markTestIncomplete(
            'Test of "destinationUrl" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "iosDeepLink"
     */
    public function testPropertyIosDeepLink()
    {
        self::markTestIncomplete(
            'Test of "iosDeepLink" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isPinDeleted"
     */
    public function testPropertyIsPinDeleted()
    {
        self::markTestIncomplete(
            'Test of "isPinDeleted" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isRemovable"
     */
    public function testPropertyIsRemovable()
    {
        self::markTestIncomplete(
            'Test of "isRemovable" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        self::markTestIncomplete(
            'Test of "name" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        self::markTestIncomplete(
            'Test of "status" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "trackingUrls"
     */
    public function testPropertyTrackingUrls()
    {
        self::markTestIncomplete(
            'Test of "trackingUrls" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "viewTrackingUrl"
     */
    public function testPropertyViewTrackingUrl()
    {
        self::markTestIncomplete(
            'Test of "viewTrackingUrl" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "leadFormId"
     */
    public function testPropertyLeadFormId()
    {
        self::markTestIncomplete(
            'Test of "leadFormId" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "gridClickType"
     */
    public function testPropertyGridClickType()
    {
        self::markTestIncomplete(
            'Test of "gridClickType" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "customizableCtaType"
     */
    public function testPropertyCustomizableCtaType()
    {
        self::markTestIncomplete(
            'Test of "customizableCtaType" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "quizPinData"
     */
    public function testPropertyQuizPinData()
    {
        self::markTestIncomplete(
            'Test of "quizPinData" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "pinId"
     */
    public function testPropertyPinId()
    {
        self::markTestIncomplete(
            'Test of "pinId" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "adAccountId"
     */
    public function testPropertyAdAccountId()
    {
        self::markTestIncomplete(
            'Test of "adAccountId" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "campaignId"
     */
    public function testPropertyCampaignId()
    {
        self::markTestIncomplete(
            'Test of "campaignId" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "collectionItemsDestinationUrlTemplate"
     */
    public function testPropertyCollectionItemsDestinationUrlTemplate()
    {
        self::markTestIncomplete(
            'Test of "collectionItemsDestinationUrlTemplate" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "createdTime"
     */
    public function testPropertyCreatedTime()
    {
        self::markTestIncomplete(
            'Test of "createdTime" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        self::markTestIncomplete(
            'Test of "id" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "rejectedReasons"
     */
    public function testPropertyRejectedReasons()
    {
        self::markTestIncomplete(
            'Test of "rejectedReasons" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "rejectionLabels"
     */
    public function testPropertyRejectionLabels()
    {
        self::markTestIncomplete(
            'Test of "rejectionLabels" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "reviewStatus"
     */
    public function testPropertyReviewStatus()
    {
        self::markTestIncomplete(
            'Test of "reviewStatus" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        self::markTestIncomplete(
            'Test of "type" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "updatedTime"
     */
    public function testPropertyUpdatedTime()
    {
        self::markTestIncomplete(
            'Test of "updatedTime" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "summaryStatus"
     */
    public function testPropertySummaryStatus()
    {
        self::markTestIncomplete(
            'Test of "summaryStatus" property in "AdResponse" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = AdResponse::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

