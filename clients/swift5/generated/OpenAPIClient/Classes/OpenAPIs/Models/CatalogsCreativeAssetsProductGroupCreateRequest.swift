//
// CatalogsCreativeAssetsProductGroupCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Request object for creating a creative assets product group. */
public struct CatalogsCreativeAssetsProductGroupCreateRequest: Codable, JSONEncodable, Hashable {

    public enum CatalogType: String, Codable, CaseIterable {
        case creativeAssets = "CREATIVE_ASSETS"
    }
    static let catalogIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    public var catalogType: CatalogType
    public var name: String
    public var description: String?
    public var filters: CatalogsCreativeAssetsProductGroupFilters
    /** Catalog id pertaining to the creative assets product group. */
    public var catalogId: String

    public init(catalogType: CatalogType, name: String, description: String? = nil, filters: CatalogsCreativeAssetsProductGroupFilters, catalogId: String) {
        self.catalogType = catalogType
        self.name = name
        self.description = description
        self.filters = filters
        self.catalogId = catalogId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case catalogType = "catalog_type"
        case name
        case description
        case filters
        case catalogId = "catalog_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(catalogType, forKey: .catalogType)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(filters, forKey: .filters)
        try container.encode(catalogId, forKey: .catalogId)
    }
}

