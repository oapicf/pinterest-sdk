//
// BaseInviteDataResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BaseInviteDataResponse: Codable, JSONEncodable, Hashable {

    static let idRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    /** Unique identifier of the invite/request. */
    public var id: String?
    public var inviteData: BaseInviteDataResponseInviteData?
    /** Indicates whether the invite/request was received. */
    public var isReceivedInvite: Bool?
    /** Metadata for the member/partner that was sent the invite/request. */
    public var user: BusinessAccessUserSummary?

    public init(id: String? = nil, inviteData: BaseInviteDataResponseInviteData? = nil, isReceivedInvite: Bool? = nil, user: BusinessAccessUserSummary? = nil) {
        self.id = id
        self.inviteData = inviteData
        self.isReceivedInvite = isReceivedInvite
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case inviteData = "invite_data"
        case isReceivedInvite = "is_received_invite"
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(inviteData, forKey: .inviteData)
        try container.encodeIfPresent(isReceivedInvite, forKey: .isReceivedInvite)
        try container.encodeIfPresent(user, forKey: .user)
    }
}

