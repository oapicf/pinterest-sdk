//
// CatalogsItemsFilters.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public enum CatalogsItemsFilters: Codable, JSONEncodable, Hashable {
    case typeCatalogsCreativeAssetsItemsFilter(CatalogsCreativeAssetsItemsFilter)
    case typeCatalogsHotelItemsFilter(CatalogsHotelItemsFilter)
    case typeCatalogsRetailItemsFilter(CatalogsRetailItemsFilter)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeCatalogsCreativeAssetsItemsFilter(let value):
            try container.encode(value)
        case .typeCatalogsHotelItemsFilter(let value):
            try container.encode(value)
        case .typeCatalogsRetailItemsFilter(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(CatalogsCreativeAssetsItemsFilter.self) {
            self = .typeCatalogsCreativeAssetsItemsFilter(value)
        } else if let value = try? container.decode(CatalogsHotelItemsFilter.self) {
            self = .typeCatalogsHotelItemsFilter(value)
        } else if let value = try? container.decode(CatalogsRetailItemsFilter.self) {
            self = .typeCatalogsRetailItemsFilter(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of CatalogsItemsFilters"))
        }
    }
}

