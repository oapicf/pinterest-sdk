//
// CatalogsItemsBatch.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Object describing the catalogs items batch */
public enum CatalogsItemsBatch: Codable, JSONEncodable, Hashable {
    case typeCatalogsCreativeAssetsItemsBatch(CatalogsCreativeAssetsItemsBatch)
    case typeCatalogsHotelItemsBatch(CatalogsHotelItemsBatch)
    case typeCatalogsRetailItemsBatch(CatalogsRetailItemsBatch)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeCatalogsCreativeAssetsItemsBatch(let value):
            try container.encode(value)
        case .typeCatalogsHotelItemsBatch(let value):
            try container.encode(value)
        case .typeCatalogsRetailItemsBatch(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(CatalogsCreativeAssetsItemsBatch.self) {
            self = .typeCatalogsCreativeAssetsItemsBatch(value)
        } else if let value = try? container.decode(CatalogsHotelItemsBatch.self) {
            self = .typeCatalogsHotelItemsBatch(value)
        } else if let value = try? container.decode(CatalogsRetailItemsBatch.self) {
            self = .typeCatalogsRetailItemsBatch(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of CatalogsItemsBatch"))
        }
    }
}

