//
// CatalogsItemsUpsertBatchRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Request object to upsert catalogs items */
public struct CatalogsItemsUpsertBatchRequest: Codable, JSONEncodable, Hashable {

    static let itemsRule = ArrayRule(minItems: 1, maxItems: 1000, uniqueItems: false)
    public var country: Country
    public var language: CatalogsItemsRequestLanguage
    public var operation: BatchOperation
    /** Array with catalogs items */
    public var items: [ItemUpsertBatchRecord]

    public init(country: Country, language: CatalogsItemsRequestLanguage, operation: BatchOperation, items: [ItemUpsertBatchRecord]) {
        self.country = country
        self.language = language
        self.operation = operation
        self.items = items
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case country
        case language
        case operation
        case items
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(country, forKey: .country)
        try container.encode(language, forKey: .language)
        try container.encode(operation, forKey: .operation)
        try container.encode(items, forKey: .items)
    }
}

