//
// CatalogsCreativeAssetsProductGroupProductCounts.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Product counts for a Creative Assets CatalogsProductGroup */
public struct CatalogsCreativeAssetsProductGroupProductCounts: Codable, JSONEncodable, Hashable {

    public enum CatalogType: String, Codable, CaseIterable {
        case creativeAssets = "CREATIVE_ASSETS"
    }
    static let totalRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let videosRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var catalogType: CatalogType
    public var total: Double
    public var videos: Double

    public init(catalogType: CatalogType, total: Double, videos: Double) {
        self.catalogType = catalogType
        self.total = total
        self.videos = videos
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case catalogType = "catalog_type"
        case total
        case videos
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(catalogType, forKey: .catalogType)
        try container.encode(total, forKey: .total)
        try container.encode(videos, forKey: .videos)
    }
}

