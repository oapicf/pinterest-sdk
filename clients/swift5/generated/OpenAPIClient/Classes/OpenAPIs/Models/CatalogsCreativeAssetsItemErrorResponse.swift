//
// CatalogsCreativeAssetsItemErrorResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Object describing a creative assets item error */
public struct CatalogsCreativeAssetsItemErrorResponse: Codable, JSONEncodable, Hashable {

    public var catalogType: CatalogsType
    /** The catalog creative assets id in the merchant namespace */
    public var creativeAssetsId: String?
    /** Array with the errors for the item id requested */
    public var errors: [ItemValidationEvent]?

    public init(catalogType: CatalogsType, creativeAssetsId: String? = nil, errors: [ItemValidationEvent]? = nil) {
        self.catalogType = catalogType
        self.creativeAssetsId = creativeAssetsId
        self.errors = errors
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case catalogType = "catalog_type"
        case creativeAssetsId = "creative_assets_id"
        case errors
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(catalogType, forKey: .catalogType)
        try container.encodeIfPresent(creativeAssetsId, forKey: .creativeAssetsId)
        try container.encodeIfPresent(errors, forKey: .errors)
    }
}

