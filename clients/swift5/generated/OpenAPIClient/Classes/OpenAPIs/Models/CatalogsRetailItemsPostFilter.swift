//
// CatalogsRetailItemsPostFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CatalogsRetailItemsPostFilter: Codable, JSONEncodable, Hashable {

    public enum CatalogType: String, Codable, CaseIterable {
        case retail = "RETAIL"
    }
    static let itemIdsRule = ArrayRule(minItems: 1, maxItems: 1000, uniqueItems: false)
    static let catalogIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    public var catalogType: CatalogType
    public var itemIds: [String]
    /** Catalog id pertaining to the retail item. If not provided, default to oldest retail catalog */
    public var catalogId: String?

    public init(catalogType: CatalogType, itemIds: [String], catalogId: String? = nil) {
        self.catalogType = catalogType
        self.itemIds = itemIds
        self.catalogId = catalogId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case catalogType = "catalog_type"
        case itemIds = "item_ids"
        case catalogId = "catalog_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(catalogType, forKey: .catalogType)
        try container.encode(itemIds, forKey: .itemIds)
        try container.encodeIfPresent(catalogId, forKey: .catalogId)
    }
}

