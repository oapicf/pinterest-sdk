//
// LeadsExportCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LeadsExportCreateRequest: Codable, JSONEncodable, Hashable {

    static let startDateRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^(\\d{4})-(\\d{2})-(\\d{2})$/")
    static let endDateRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^(\\d{4})-(\\d{2})-(\\d{2})$/")
    static let adIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    /** Export leads collected on and after start date (UTC). Format: YYYY-MM-DD */
    public var startDate: String
    /** Export leads collected on and before end date (UTC). Format: YYYY-MM-DD */
    public var endDate: String
    /** ID for the ad collecting leads */
    public var adId: String

    public init(startDate: String, endDate: String, adId: String) {
        self.startDate = startDate
        self.endDate = endDate
        self.adId = adId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startDate = "start_date"
        case endDate = "end_date"
        case adId = "ad_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(startDate, forKey: .startDate)
        try container.encode(endDate, forKey: .endDate)
        try container.encode(adId, forKey: .adId)
    }
}

