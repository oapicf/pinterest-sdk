//
// Catalog.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Catalog entity */
public struct Catalog: Codable, JSONEncodable, Hashable {

    static let idRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    public var createdAt: Date
    /** ID of the catalog entity. */
    public var id: String
    public var updatedAt: Date
    /** A human-friendly name associated to a catalog entity. */
    public var name: String?
    public var catalogType: CatalogsType

    public init(createdAt: Date, id: String, updatedAt: Date, name: String?, catalogType: CatalogsType) {
        self.createdAt = createdAt
        self.id = id
        self.updatedAt = updatedAt
        self.name = name
        self.catalogType = catalogType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case createdAt = "created_at"
        case id
        case updatedAt = "updated_at"
        case name
        case catalogType = "catalog_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(id, forKey: .id)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encode(name, forKey: .name)
        try container.encode(catalogType, forKey: .catalogType)
    }
}

