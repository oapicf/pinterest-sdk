//
// CatalogsRetailProductGroupUpdateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Request object for updating a retail product group. */
public struct CatalogsRetailProductGroupUpdateRequest: Codable, JSONEncodable, Hashable {

    public enum CatalogType: String, Codable, CaseIterable {
        case retail = "RETAIL"
    }
    /** Retail catalog based product group is available only for selected partners at the moment. If you are not eligible, please use feed based one. */
    public var catalogType: CatalogType?
    public var name: String?
    public var description: String?
    public var filters: CatalogsProductGroupFiltersRequest?
    public var country: Country?
    public var locale: CatalogsLocale?

    public init(catalogType: CatalogType? = nil, name: String? = nil, description: String? = nil, filters: CatalogsProductGroupFiltersRequest? = nil, country: Country? = nil, locale: CatalogsLocale? = nil) {
        self.catalogType = catalogType
        self.name = name
        self.description = description
        self.filters = filters
        self.country = country
        self.locale = locale
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case catalogType = "catalog_type"
        case name
        case description
        case filters
        case country
        case locale
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(catalogType, forKey: .catalogType)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(filters, forKey: .filters)
        try container.encodeIfPresent(country, forKey: .country)
        try container.encodeIfPresent(locale, forKey: .locale)
    }
}

