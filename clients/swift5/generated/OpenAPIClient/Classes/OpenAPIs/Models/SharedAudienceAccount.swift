//
// SharedAudienceAccount.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SharedAudienceAccount: Codable, JSONEncodable, Hashable {

    public enum AccountType: String, Codable, CaseIterable {
        case adAccount = "AD_ACCOUNT"
        case businessAccount = "BUSINESS_ACCOUNT"
    }
    static let accountIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\d+$/")
    /** Account ID (ad account or business ID). */
    public var accountId: String
    /** Account name. */
    public var accountName: String
    /** account type */
    public var accountType: AccountType
    /** Epoch timestamp in seconds for the shared audience event */
    public var sharedOnTimestamp: Int

    public init(accountId: String, accountName: String, accountType: AccountType, sharedOnTimestamp: Int) {
        self.accountId = accountId
        self.accountName = accountName
        self.accountType = accountType
        self.sharedOnTimestamp = sharedOnTimestamp
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accountId = "account_id"
        case accountName = "account_name"
        case accountType = "account_type"
        case sharedOnTimestamp = "shared_on_timestamp"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(accountId, forKey: .accountId)
        try container.encode(accountName, forKey: .accountName)
        try container.encode(accountType, forKey: .accountType)
        try container.encode(sharedOnTimestamp, forKey: .sharedOnTimestamp)
    }
}

