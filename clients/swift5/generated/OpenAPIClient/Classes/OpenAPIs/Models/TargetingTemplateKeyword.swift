//
// TargetingTemplateKeyword.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TargetingTemplateKeyword: Codable, JSONEncodable, Hashable {

    public var matchType: MatchType?
    /** The keyword targeting (120 chars max). */
    public var value: String?

    public init(matchType: MatchType? = nil, value: String? = nil) {
        self.matchType = matchType
        self.value = value
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case matchType = "match_type"
        case value
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(matchType, forKey: .matchType)
        try container.encodeIfPresent(value, forKey: .value)
    }
}

