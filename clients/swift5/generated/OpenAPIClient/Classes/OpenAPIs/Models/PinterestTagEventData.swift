//
// PinterestTagEventData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Optional for VISITOR &#x60;audience_type&#x60;. With the Pinterest tag, you can use event data to capture event details from your website. This object lists all the available predefined event data fields in the Pinterest tag. You can include these event data fields as part of a VISITOR audience’ s &#x60;rule&#x60;; however, you **must** specify an &#x60;event&#x60; for the &#x60;event_data&#x60; fields to be evaluated. Besides what’s listed, you can also create your own set of &#x60;event_data&#x60; fields and define their usages or purposes according to your website needs. However, the benefit of using the predefined event data fields is that we can provide various metrics based on those fields&#39; data.&lt;br&gt;Examples per &#x60;event&#x60; type:&lt;br&gt;&#x60;pagevisit&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;page_name\&quot;: \&quot;My online store 123 | view items | shoe\&quot; }&lt;br&gt;&#x60;signup&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;lead_type\&quot;: \&quot;New release promotion\&quot; }&lt;br&gt;&#x60;checkout&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;value\&quot;: 116, \&quot;order_quantity\&quot;: 2, \&quot;currency\&quot;: \&quot;USD\&quot;, \&quot;line_items\&quot;: [ { \&quot;product_name\&quot;: \&quot;Pillows (Set of 2)\&quot;, \&quot;product_id\&quot;: \&quot;11\&quot;, \&quot;product_price\&quot;: 48, \&quot;product_quantity\&quot;: 1 }, { \&quot;product_name\&quot;: \&quot;Pillows, Large (Set of 2)\&quot;, \&quot;product_id\&quot;: \&quot;15\&quot;, \&quot;product_price\&quot;: 68, \&quot;product_quantity\&quot;: 1 } ] }&lt;br&gt;&#x60;addtocart&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;value\&quot;: 499, \&quot;order_quantity\&quot;: 1, \&quot;currency\&quot;: \&quot;USD\&quot;, \&quot;line_items\&quot;: [ { \&quot;product_name\&quot;: \&quot;Red leather boots\&quot;, \&quot;product_id\&quot;: \&quot;3486\&quot;, \&quot;product_category\&quot;: \&quot;shoe\&quot;, \&quot;product_variant_id\&quot;: \&quot;JB11103000\&quot;, \&quot;product_price\&quot;: 499, \&quot;product_quantity\&quot;: \&quot;1\&quot; , \&quot;product_brand\&quot;: \&quot;My brand\&quot; }]}&lt;br&gt;&#x60;watchvideo&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;video_title\&quot;: \&quot;My Product Video 01\&quot; }&lt;br&gt;&#x60;lead&#x60;&lt;br&gt;\&quot;event_data\&quot;: { \&quot;lead_type\&quot;: \&quot;Newsletter\&quot; } */
public struct PinterestTagEventData: Codable, JSONEncodable, Hashable {

    public var currency: Currency?
    /** Promotion code. For example, \"Newsletter\". */
    public var leadType: String?
    public var lineItems: LineItem?
    /** Order ID. For example, \"X-151481\". */
    public var orderId: String?
    /** Order quantity. For example, 1. */
    public var orderQuantity: Int?
    /** Page name. For example, \"Our Favorite Pins on Pinterest\". */
    public var pageName: String?
    /** Promotion code. For example, \"WINTER10\". */
    public var promoCode: String?
    /** Property. For example, \"Athleta\". */
    public var property: String?
    /** Search query string. For example, \"boots\". */
    public var searchQuery: String?
    /** Product value. For example, \"199.98\" */
    public var value: String?
    /** Video title. For example, \"How to style your Parker Boots\". */
    public var videoTitle: String?

    public init(currency: Currency? = nil, leadType: String? = nil, lineItems: LineItem? = nil, orderId: String? = nil, orderQuantity: Int? = nil, pageName: String? = nil, promoCode: String? = nil, property: String? = nil, searchQuery: String? = nil, value: String? = nil, videoTitle: String? = nil) {
        self.currency = currency
        self.leadType = leadType
        self.lineItems = lineItems
        self.orderId = orderId
        self.orderQuantity = orderQuantity
        self.pageName = pageName
        self.promoCode = promoCode
        self.property = property
        self.searchQuery = searchQuery
        self.value = value
        self.videoTitle = videoTitle
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case currency
        case leadType = "lead_type"
        case lineItems = "line_items"
        case orderId = "order_id"
        case orderQuantity = "order_quantity"
        case pageName = "page_name"
        case promoCode = "promo_code"
        case property
        case searchQuery = "search_query"
        case value
        case videoTitle = "video_title"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(currency, forKey: .currency)
        try container.encodeIfPresent(leadType, forKey: .leadType)
        try container.encodeIfPresent(lineItems, forKey: .lineItems)
        try container.encodeIfPresent(orderId, forKey: .orderId)
        try container.encodeIfPresent(orderQuantity, forKey: .orderQuantity)
        try container.encodeIfPresent(pageName, forKey: .pageName)
        try container.encodeIfPresent(promoCode, forKey: .promoCode)
        try container.encodeIfPresent(property, forKey: .property)
        try container.encodeIfPresent(searchQuery, forKey: .searchQuery)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(videoTitle, forKey: .videoTitle)
    }
}

