//
// AdCommon.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Creation fields */
public struct AdCommon: Codable, JSONEncodable, Hashable {

    public enum CustomizableCtaType: String, Codable, CaseIterable {
        case getOffer = "GET_OFFER"
        case learnMore = "LEARN_MORE"
        case orderNow = "ORDER_NOW"
        case shopNow = "SHOP_NOW"
        case signUp = "SIGN_UP"
        case subscribe = "SUBSCRIBE"
        case buyNow = "BUY_NOW"
        case contactUs = "CONTACT_US"
        case getQuote = "GET_QUOTE"
        case visitSite = "VISIT_SITE"
        case applyNow = "APPLY_NOW"
        case bookNow = "BOOK_NOW"
        case requestDemo = "REQUEST_DEMO"
        case registerNow = "REGISTER_NOW"
        case findADealer = "FIND_A_DEALER"
        case addToCart = "ADD_TO_CART"
        case watchNow = "WATCH_NOW"
        case readMore = "READ_MORE"
    }
    static let adGroupIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^(AG)?\\d+$/")
    static let leadFormIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^(AG)?\\d+$/")
    /** ID of the ad group that contains the ad. */
    public var adGroupId: String?
    /** Deep link URL for Android devices. */
    public var androidDeepLink: String?
    /** Comma-separated deep links for the carousel pin on Android. */
    public var carouselAndroidDeepLinks: [String]?
    /** Comma-separated destination URLs for the carousel pin to promote. */
    public var carouselDestinationUrls: [String]?
    /** Comma-separated deep links for the carousel pin on iOS. */
    public var carouselIosDeepLinks: [String]?
    /** Tracking url for the ad clicks. */
    public var clickTrackingUrl: String?
    public var creativeType: CreativeType?
    /** Destination URL. */
    public var destinationUrl: String?
    /** Deep link URL for iOS devices. */
    public var iosDeepLink: String?
    /** Is original pin deleted? */
    public var isPinDeleted: Bool?
    /** Is pin repinnable? */
    public var isRemovable: Bool?
    /** Name of the ad - 255 chars max. */
    public var name: String?
    public var status: EntityStatus?
    public var trackingUrls: TrackingUrls?
    /** Tracking URL for ad impressions. */
    public var viewTrackingUrl: String?
    /** Lead form ID for lead ad generation. */
    public var leadFormId: String?
    public var gridClickType: GridClickType?
    /** Select a call to action (CTA) to display below your ad. Available only for ads with direct links enabled. CTA options for consideration and conversion campaigns are LEARN_MORE, SHOP_NOW, BOOK_NOW, SIGN_UP, VISIT_SITE, BUY_NOW, GET_OFFER, ORDER_NOW, ADD_TO_CART (for conversion campaigns with add to cart conversion events only) */
    public var customizableCtaType: CustomizableCtaType?
    /** Before creating a quiz ad, you must create an organic Pin using POST/Create Pin for each result in the quiz. Quiz ads cannot be saved by a Pinner. Quiz ad results can be saved. */
    public var quizPinData: QuizPinData?

    public init(adGroupId: String? = nil, androidDeepLink: String? = nil, carouselAndroidDeepLinks: [String]? = nil, carouselDestinationUrls: [String]? = nil, carouselIosDeepLinks: [String]? = nil, clickTrackingUrl: String? = nil, creativeType: CreativeType? = nil, destinationUrl: String? = nil, iosDeepLink: String? = nil, isPinDeleted: Bool? = nil, isRemovable: Bool? = nil, name: String? = nil, status: EntityStatus? = nil, trackingUrls: TrackingUrls? = nil, viewTrackingUrl: String? = nil, leadFormId: String? = nil, gridClickType: GridClickType? = nil, customizableCtaType: CustomizableCtaType? = nil, quizPinData: QuizPinData? = nil) {
        self.adGroupId = adGroupId
        self.androidDeepLink = androidDeepLink
        self.carouselAndroidDeepLinks = carouselAndroidDeepLinks
        self.carouselDestinationUrls = carouselDestinationUrls
        self.carouselIosDeepLinks = carouselIosDeepLinks
        self.clickTrackingUrl = clickTrackingUrl
        self.creativeType = creativeType
        self.destinationUrl = destinationUrl
        self.iosDeepLink = iosDeepLink
        self.isPinDeleted = isPinDeleted
        self.isRemovable = isRemovable
        self.name = name
        self.status = status
        self.trackingUrls = trackingUrls
        self.viewTrackingUrl = viewTrackingUrl
        self.leadFormId = leadFormId
        self.gridClickType = gridClickType
        self.customizableCtaType = customizableCtaType
        self.quizPinData = quizPinData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case adGroupId = "ad_group_id"
        case androidDeepLink = "android_deep_link"
        case carouselAndroidDeepLinks = "carousel_android_deep_links"
        case carouselDestinationUrls = "carousel_destination_urls"
        case carouselIosDeepLinks = "carousel_ios_deep_links"
        case clickTrackingUrl = "click_tracking_url"
        case creativeType = "creative_type"
        case destinationUrl = "destination_url"
        case iosDeepLink = "ios_deep_link"
        case isPinDeleted = "is_pin_deleted"
        case isRemovable = "is_removable"
        case name
        case status
        case trackingUrls = "tracking_urls"
        case viewTrackingUrl = "view_tracking_url"
        case leadFormId = "lead_form_id"
        case gridClickType = "grid_click_type"
        case customizableCtaType = "customizable_cta_type"
        case quizPinData = "quiz_pin_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(adGroupId, forKey: .adGroupId)
        try container.encodeIfPresent(androidDeepLink, forKey: .androidDeepLink)
        try container.encodeIfPresent(carouselAndroidDeepLinks, forKey: .carouselAndroidDeepLinks)
        try container.encodeIfPresent(carouselDestinationUrls, forKey: .carouselDestinationUrls)
        try container.encodeIfPresent(carouselIosDeepLinks, forKey: .carouselIosDeepLinks)
        try container.encodeIfPresent(clickTrackingUrl, forKey: .clickTrackingUrl)
        try container.encodeIfPresent(creativeType, forKey: .creativeType)
        try container.encodeIfPresent(destinationUrl, forKey: .destinationUrl)
        try container.encodeIfPresent(iosDeepLink, forKey: .iosDeepLink)
        try container.encodeIfPresent(isPinDeleted, forKey: .isPinDeleted)
        try container.encodeIfPresent(isRemovable, forKey: .isRemovable)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(trackingUrls, forKey: .trackingUrls)
        try container.encodeIfPresent(viewTrackingUrl, forKey: .viewTrackingUrl)
        try container.encodeIfPresent(leadFormId, forKey: .leadFormId)
        try container.encodeIfPresent(gridClickType, forKey: .gridClickType)
        try container.encodeIfPresent(customizableCtaType, forKey: .customizableCtaType)
        try container.encodeIfPresent(quizPinData, forKey: .quizPinData)
    }
}

