//
// DeletePartnerAssetAccessBodyAccessesInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DeletePartnerAssetAccessBodyAccessesInner: Codable, JSONEncodable, Hashable {

    public enum PartnerType: String, Codable, CaseIterable {
        case _internal = "INTERNAL"
        case external = "EXTERNAL"
    }
    static let partnerIdRule = StringRule(minLength: nil, maxLength: 25, pattern: "/^\\d+$/")
    static let assetIdRule = StringRule(minLength: nil, maxLength: 25, pattern: "/^\\d+$/")
    /** Unique identifier of a business partner to update asset access to. */
    public var partnerId: String
    /** Unique identifier of the business asset. */
    public var assetId: String
    /** If partner_type=INTERNAL, the deleted asset access is for the access the partner has to your business asset.<br> If partner_type=EXTERNAL, the deleted asset access is for the access you have to the partner's business asset. */
    public var partnerType: PartnerType? = ._internal

    public init(partnerId: String, assetId: String, partnerType: PartnerType? = ._internal) {
        self.partnerId = partnerId
        self.assetId = assetId
        self.partnerType = partnerType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case partnerId = "partner_id"
        case assetId = "asset_id"
        case partnerType = "partner_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(partnerId, forKey: .partnerId)
        try container.encode(assetId, forKey: .assetId)
        try container.encodeIfPresent(partnerType, forKey: .partnerType)
    }
}

