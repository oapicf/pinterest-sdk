//
// BusinessAccessInviteAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BusinessAccessInviteAPI {

    /**
     Create a request to access an existing partner's assets.
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter createAssetAccessRequestBody: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetAccessRequestsCreate(businessId: String, createAssetAccessRequestBody: CreateAssetAccessRequestBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreateAssetAccessRequestResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return assetAccessRequestsCreateWithRequestBuilder(businessId: businessId, createAssetAccessRequestBody: createAssetAccessRequestBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a request to access an existing partner's assets.
     - POST /businesses/{business_id}/requests/assets/access
     - Create a request to access an existing partner's assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter createAssetAccessRequestBody: (body)  
     - returns: RequestBuilder<CreateAssetAccessRequestResponse> 
     */
    open class func assetAccessRequestsCreateWithRequestBuilder(businessId: String, createAssetAccessRequestBody: CreateAssetAccessRequestBody) -> RequestBuilder<CreateAssetAccessRequestResponse> {
        var localVariablePath = "/businesses/{business_id}/requests/assets/access"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createAssetAccessRequestBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateAssetAccessRequestResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Cancel invites/requests
     
     - parameter businessId: (path) Business id 
     - parameter cancelInvitesBody: (body) A list with invite ids 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cancelInvitesOrRequests(businessId: String, cancelInvitesBody: CancelInvitesBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: DeleteInvitesResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return cancelInvitesOrRequestsWithRequestBuilder(businessId: businessId, cancelInvitesBody: cancelInvitesBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Cancel invites/requests
     - DELETE /businesses/{business_id}/invites
     - Cancel membership/partnership invites and/or requests.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Business id 
     - parameter cancelInvitesBody: (body) A list with invite ids 
     - returns: RequestBuilder<DeleteInvitesResultsResponseArray> 
     */
    open class func cancelInvitesOrRequestsWithRequestBuilder(businessId: String, cancelInvitesBody: CancelInvitesBody) -> RequestBuilder<DeleteInvitesResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/invites"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: cancelInvitesBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DeleteInvitesResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update invite/request with an asset permission
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter createAssetInvitesRequest: (body) A list of invites/requests together with the asset permissions to be assigned to the invite/request.  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createAssetInvites(businessId: String, createAssetInvitesRequest: CreateAssetInvitesRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateInvitesResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return createAssetInvitesWithRequestBuilder(businessId: businessId, createAssetInvitesRequest: createAssetInvitesRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update invite/request with an asset permission
     - POST /businesses/{business_id}/invites/assets/access
     - Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner's asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \"Create a request to access an existing partner's assets\" to request access to your   partner's assets.     - invite_type=\"PARTNER_REQUEST\" - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \"Assign/Update partner asset permissions\" to assign a partner access to   new assets.     - invite_type=\"PARTNER_INVITE\" - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \"Assign/Update member asset permissions\" to assign a member access to new   assets.     - invite_type=\"MEMBER_INVITE\"  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter createAssetInvitesRequest: (body) A list of invites/requests together with the asset permissions to be assigned to the invite/request.  
     - returns: RequestBuilder<UpdateInvitesResultsResponseArray> 
     */
    open class func createAssetInvitesWithRequestBuilder(businessId: String, createAssetInvitesRequest: CreateAssetInvitesRequest) -> RequestBuilder<UpdateInvitesResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/invites/assets/access"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createAssetInvitesRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateInvitesResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create invites or requests
     
     - parameter businessId: (path) Business id 
     - parameter createMembershipOrPartnershipInvitesBody: (body) An object with the properties: invite_type, partners, members, business_role 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createMembershipOrPartnershipInvites(businessId: String, createMembershipOrPartnershipInvitesBody: CreateMembershipOrPartnershipInvitesBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreateInvitesResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return createMembershipOrPartnershipInvitesWithRequestBuilder(businessId: businessId, createMembershipOrPartnershipInvitesBody: createMembershipOrPartnershipInvitesBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create invites or requests
     - POST /businesses/{business_id}/invites
     - Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type=\"MEMBER_INVITE\"     - business_role=\"EMPLOYEE\" OR business_role=\"BIZ_ADMIN\" (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type=\"PARTNER_INVITE\"     - business_role=\"PARTNER\"     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type=\"PARTNER_REQUEST\"     - business_role=\"PARTNER\"     - partners
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Business id 
     - parameter createMembershipOrPartnershipInvitesBody: (body) An object with the properties: invite_type, partners, members, business_role 
     - returns: RequestBuilder<CreateInvitesResultsResponseArray> 
     */
    open class func createMembershipOrPartnershipInvitesWithRequestBuilder(businessId: String, createMembershipOrPartnershipInvitesBody: CreateMembershipOrPartnershipInvitesBody) -> RequestBuilder<CreateInvitesResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/invites"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createMembershipOrPartnershipInvitesBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateInvitesResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter inviteStatus
     */
    public enum InviteStatus_getInvites: String, CaseIterable {
        case pending = "PENDING"
        case expired = "EXPIRED"
    }

    /**
     Get invites/requests
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter isMember: (query) A boolean field to indicate whether the invite is to create a partnership or a membership. (optional, default to true)
     - parameter inviteStatus: (query) A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned. (optional)
     - parameter inviteType: (query) Invite type to filter invites by. Only invites of the specified type will be returned. (optional)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getInvites(businessId: String, isMember: Bool? = nil, inviteStatus: [InviteStatus_getInvites]? = nil, inviteType: InviteType? = nil, bookmark: String? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetInvites200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return getInvitesWithRequestBuilder(businessId: businessId, isMember: isMember, inviteStatus: inviteStatus, inviteType: inviteType, bookmark: bookmark, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get invites/requests
     - GET /businesses/{business_id}/invites
     - Get the membership/partnership invites and/or requests for the authorized user.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter isMember: (query) A boolean field to indicate whether the invite is to create a partnership or a membership. (optional, default to true)
     - parameter inviteStatus: (query) A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned. (optional)
     - parameter inviteType: (query) Invite type to filter invites by. Only invites of the specified type will be returned. (optional)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - returns: RequestBuilder<GetInvites200Response> 
     */
    open class func getInvitesWithRequestBuilder(businessId: String, isMember: Bool? = nil, inviteStatus: [InviteStatus_getInvites]? = nil, inviteType: InviteType? = nil, bookmark: String? = nil, pageSize: Int? = nil) -> RequestBuilder<GetInvites200Response> {
        var localVariablePath = "/businesses/{business_id}/invites"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "is_member": (wrappedValue: isMember?.encodeToJSON(), isExplode: true),
            "invite_status": (wrappedValue: inviteStatus?.encodeToJSON(), isExplode: true),
            "invite_type": (wrappedValue: inviteType?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetInvites200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Accept or decline an invite/request
     
     - parameter authRespondInvitesBody: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func respondBusinessAccessInvites(authRespondInvitesBody: AuthRespondInvitesBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: RespondToInvitesResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return respondBusinessAccessInvitesWithRequestBuilder(authRespondInvitesBody: authRespondInvitesBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Accept or decline an invite/request
     - PATCH /businesses/invites
     - Accept or decline invites or requests.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter authRespondInvitesBody: (body)  
     - returns: RequestBuilder<RespondToInvitesResponseArray> 
     */
    open class func respondBusinessAccessInvitesWithRequestBuilder(authRespondInvitesBody: AuthRespondInvitesBody) -> RequestBuilder<RespondToInvitesResponseArray> {
        let localVariablePath = "/businesses/invites"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: authRespondInvitesBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RespondToInvitesResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
