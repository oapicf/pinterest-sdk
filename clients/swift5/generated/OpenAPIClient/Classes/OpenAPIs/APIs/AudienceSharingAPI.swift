//
// AudienceSharingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AudienceSharingAPI {

    /**
     List accounts with access to an audience owned by an ad account
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter audienceId: (query) Unique identifier of the audience to use to filter the results. 
     - parameter accountType: (query) Filter accounts by account type. 
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func adAccountsAudiencesSharedAccountsList(adAccountId: String, audienceId: String, accountType: AudienceAccountType, pageSize: Int? = nil, bookmark: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AdAccountsAudiencesSharedAccountsList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return adAccountsAudiencesSharedAccountsListWithRequestBuilder(adAccountId: adAccountId, audienceId: audienceId, accountType: accountType, pageSize: pageSize, bookmark: bookmark).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List accounts with access to an audience owned by an ad account
     - GET /ad_accounts/{ad_account_id}/audiences/shared/accounts
     - List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter audienceId: (query) Unique identifier of the audience to use to filter the results. 
     - parameter accountType: (query) Filter accounts by account type. 
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - returns: RequestBuilder<AdAccountsAudiencesSharedAccountsList200Response> 
     */
    open class func adAccountsAudiencesSharedAccountsListWithRequestBuilder(adAccountId: String, audienceId: String, accountType: AudienceAccountType, pageSize: Int? = nil, bookmark: String? = nil) -> RequestBuilder<AdAccountsAudiencesSharedAccountsList200Response> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/audiences/shared/accounts"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "audience_id": (wrappedValue: audienceId.encodeToJSON(), isExplode: true),
            "account_type": (wrappedValue: accountType.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AdAccountsAudiencesSharedAccountsList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     List accounts with access to an audience owned by a business
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter audienceId: (query) Unique identifier of the audience to use to filter the results. 
     - parameter accountType: (query) Filter accounts by account type. 
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessAccountAudiencesSharedAccountsList(businessId: String, audienceId: String, accountType: AudienceAccountType, pageSize: Int? = nil, bookmark: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AdAccountsAudiencesSharedAccountsList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return businessAccountAudiencesSharedAccountsListWithRequestBuilder(businessId: businessId, audienceId: audienceId, accountType: accountType, pageSize: pageSize, bookmark: bookmark).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List accounts with access to an audience owned by a business
     - GET /businesses/{business_id}/audiences/shared/accounts
     - List all ad accounts and/or businesses that have access to a specific audience. The audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business. If the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter audienceId: (query) Unique identifier of the audience to use to filter the results. 
     - parameter accountType: (query) Filter accounts by account type. 
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - returns: RequestBuilder<AdAccountsAudiencesSharedAccountsList200Response> 
     */
    open class func businessAccountAudiencesSharedAccountsListWithRequestBuilder(businessId: String, audienceId: String, accountType: AudienceAccountType, pageSize: Int? = nil, bookmark: String? = nil) -> RequestBuilder<AdAccountsAudiencesSharedAccountsList200Response> {
        var localVariablePath = "/businesses/{business_id}/audiences/shared/accounts"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "audience_id": (wrappedValue: audienceId.encodeToJSON(), isExplode: true),
            "account_type": (wrappedValue: accountType.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AdAccountsAudiencesSharedAccountsList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter order
     */
    public enum Order_sharedAudiencesForBusinessList: String, CaseIterable {
        case ascending = "ASCENDING"
        case descending = "DESCENDING"
    }

    /**
     List received audiences for a business
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter order: (query) The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func sharedAudiencesForBusinessList(businessId: String, bookmark: String? = nil, order: Order_sharedAudiencesForBusinessList? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AudiencesList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return sharedAudiencesForBusinessListWithRequestBuilder(businessId: businessId, bookmark: bookmark, order: order, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List received audiences for a business
     - GET /businesses/{business_id}/audiences
     - Get a list of received audiences for the given business.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter order: (query) The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - returns: RequestBuilder<AudiencesList200Response> 
     */
    open class func sharedAudiencesForBusinessListWithRequestBuilder(businessId: String, bookmark: String? = nil, order: Order_sharedAudiencesForBusinessList? = nil, pageSize: Int? = nil) -> RequestBuilder<AudiencesList200Response> {
        var localVariablePath = "/businesses/{business_id}/audiences"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "order": (wrappedValue: order?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AudiencesList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update audience sharing between ad accounts
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter sharedAudience: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateAdAccountToAdAccountSharedAudience(adAccountId: String, sharedAudience: SharedAudience, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SharedAudienceResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return updateAdAccountToAdAccountSharedAudienceWithRequestBuilder(adAccountId: adAccountId, sharedAudience: sharedAudience).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update audience sharing between ad accounts
     - PATCH /ad_accounts/{ad_account_id}/audiences/ad_accounts/shared
     - From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same <a href='https://help.pinterest.com/en/business/article/create-and-manage-accounts'>Pinterest Business Hierarchy</a> as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter sharedAudience: (body)  
     - returns: RequestBuilder<SharedAudienceResponse> 
     */
    open class func updateAdAccountToAdAccountSharedAudienceWithRequestBuilder(adAccountId: String, sharedAudience: SharedAudience) -> RequestBuilder<SharedAudienceResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sharedAudience)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharedAudienceResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update audience sharing from an ad account to businesses
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter businessSharedAudience: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateAdAccountToBusinessSharedAudience(adAccountId: String, businessSharedAudience: BusinessSharedAudience, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessSharedAudienceResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return updateAdAccountToBusinessSharedAudienceWithRequestBuilder(adAccountId: adAccountId, businessSharedAudience: businessSharedAudience).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update audience sharing from an ad account to businesses
     - PATCH /ad_accounts/{ad_account_id}/audiences/businesses/shared
     - From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter businessSharedAudience: (body)  
     - returns: RequestBuilder<BusinessSharedAudienceResponse> 
     */
    open class func updateAdAccountToBusinessSharedAudienceWithRequestBuilder(adAccountId: String, businessSharedAudience: BusinessSharedAudience) -> RequestBuilder<BusinessSharedAudienceResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/audiences/businesses/shared"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: businessSharedAudience)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessSharedAudienceResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update audience sharing from a business to ad accounts
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter sharedAudience: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateBusinessToAdAccountSharedAudience(businessId: String, sharedAudience: SharedAudience, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SharedAudienceResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return updateBusinessToAdAccountSharedAudienceWithRequestBuilder(businessId: businessId, sharedAudience: sharedAudience).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update audience sharing from a business to ad accounts
     - PATCH /businesses/{business_id}/audiences/ad_accounts/shared
     - From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. <ul> <li>If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.</li> <li>If the business is the recipient of the audience, it can share with any of its owned ad accounts.</li> </ul> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter sharedAudience: (body)  
     - returns: RequestBuilder<SharedAudienceResponse> 
     */
    open class func updateBusinessToAdAccountSharedAudienceWithRequestBuilder(businessId: String, sharedAudience: SharedAudience) -> RequestBuilder<SharedAudienceResponse> {
        var localVariablePath = "/businesses/{business_id}/audiences/ad_accounts/shared"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sharedAudience)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SharedAudienceResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update audience sharing between businesses
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter businessSharedAudience: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateBusinessToBusinessSharedAudience(businessId: String, businessSharedAudience: BusinessSharedAudience, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessSharedAudienceResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return updateBusinessToBusinessSharedAudienceWithRequestBuilder(businessId: businessId, businessSharedAudience: businessSharedAudience).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update audience sharing between businesses
     - PATCH /businesses/{business_id}/audiences/businesses/shared
     - From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter businessSharedAudience: (body)  
     - returns: RequestBuilder<BusinessSharedAudienceResponse> 
     */
    open class func updateBusinessToBusinessSharedAudienceWithRequestBuilder(businessId: String, businessSharedAudience: BusinessSharedAudience) -> RequestBuilder<BusinessSharedAudienceResponse> {
        var localVariablePath = "/businesses/{business_id}/audiences/businesses/shared"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: businessSharedAudience)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessSharedAudienceResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
