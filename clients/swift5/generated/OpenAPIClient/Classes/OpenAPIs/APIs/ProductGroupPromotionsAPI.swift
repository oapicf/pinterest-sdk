//
// ProductGroupPromotionsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ProductGroupPromotionsAPI {

    /**
     Create product group promotions
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionCreateRequest: (body) List of Product Group Promotions to create, size limit [1, 30]. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func productGroupPromotionsCreate(adAccountId: String, productGroupPromotionCreateRequest: ProductGroupPromotionCreateRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ProductGroupPromotionResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return productGroupPromotionsCreateWithRequestBuilder(adAccountId: adAccountId, productGroupPromotionCreateRequest: productGroupPromotionCreateRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create product group promotions
     - POST /ad_accounts/{ad_account_id}/product_group_promotions
     - Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a 'product group promotion.')
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionCreateRequest: (body) List of Product Group Promotions to create, size limit [1, 30]. 
     - returns: RequestBuilder<ProductGroupPromotionResponse> 
     */
    open class func productGroupPromotionsCreateWithRequestBuilder(adAccountId: String, productGroupPromotionCreateRequest: ProductGroupPromotionCreateRequest) -> RequestBuilder<ProductGroupPromotionResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/product_group_promotions"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: productGroupPromotionCreateRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProductGroupPromotionResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get a product group promotion by id
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionId: (path) Unique identifier of a product group promotion 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func productGroupPromotionsGet(adAccountId: String, productGroupPromotionId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ProductGroupPromotionResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return productGroupPromotionsGetWithRequestBuilder(adAccountId: adAccountId, productGroupPromotionId: productGroupPromotionId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a product group promotion by id
     - GET /ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}
     - Get a product group promotion by id
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionId: (path) Unique identifier of a product group promotion 
     - returns: RequestBuilder<ProductGroupPromotionResponse> 
     */
    open class func productGroupPromotionsGetWithRequestBuilder(adAccountId: String, productGroupPromotionId: String) -> RequestBuilder<ProductGroupPromotionResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let productGroupPromotionIdPreEscape = "\(APIHelper.mapValueToPathItem(productGroupPromotionId))"
        let productGroupPromotionIdPostEscape = productGroupPromotionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{product_group_promotion_id}", with: productGroupPromotionIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProductGroupPromotionResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter entityStatuses
     */
    public enum EntityStatuses_productGroupPromotionsList: String, CaseIterable {
        case active = "ACTIVE"
        case paused = "PAUSED"
        case archived = "ARCHIVED"
        case draft = "DRAFT"
        case deletedDraft = "DELETED_DRAFT"
    }

    /**
     * enum for parameter order
     */
    public enum Order_productGroupPromotionsList: String, CaseIterable {
        case ascending = "ASCENDING"
        case descending = "DESCENDING"
    }

    /**
     Get product group promotions
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionIds: (query) List of Product group promotion Ids. (optional)
     - parameter entityStatuses: (query) Entity status (optional)
     - parameter adGroupId: (query) Ad group Id. (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter order: (query) The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func productGroupPromotionsList(adAccountId: String, productGroupPromotionIds: [String]? = nil, entityStatuses: [EntityStatuses_productGroupPromotionsList]? = nil, adGroupId: String? = nil, pageSize: Int? = nil, order: Order_productGroupPromotionsList? = nil, bookmark: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ProductGroupPromotionsList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return productGroupPromotionsListWithRequestBuilder(adAccountId: adAccountId, productGroupPromotionIds: productGroupPromotionIds, entityStatuses: entityStatuses, adGroupId: adGroupId, pageSize: pageSize, order: order, bookmark: bookmark).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get product group promotions
     - GET /ad_accounts/{ad_account_id}/product_group_promotions
     - List existing product group promotions associated with an ad account.  Include either ad_group_id or product_group_promotion_ids in your request.  <b>Note:</b> ad_group_ids and product_group_promotion_ids are mutually exclusive parameters. Only provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionIds: (query) List of Product group promotion Ids. (optional)
     - parameter entityStatuses: (query) Entity status (optional)
     - parameter adGroupId: (query) Ad group Id. (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter order: (query) The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items. (optional)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - returns: RequestBuilder<ProductGroupPromotionsList200Response> 
     */
    open class func productGroupPromotionsListWithRequestBuilder(adAccountId: String, productGroupPromotionIds: [String]? = nil, entityStatuses: [EntityStatuses_productGroupPromotionsList]? = nil, adGroupId: String? = nil, pageSize: Int? = nil, order: Order_productGroupPromotionsList? = nil, bookmark: String? = nil) -> RequestBuilder<ProductGroupPromotionsList200Response> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/product_group_promotions"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "product_group_promotion_ids": (wrappedValue: productGroupPromotionIds?.encodeToJSON(), isExplode: true),
            "entity_statuses": (wrappedValue: entityStatuses?.encodeToJSON(), isExplode: true),
            "ad_group_id": (wrappedValue: adGroupId?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "order": (wrappedValue: order?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProductGroupPromotionsList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update product group promotions
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionUpdateRequest: (body) Parameters to update Product group promotions 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func productGroupPromotionsUpdate(adAccountId: String, productGroupPromotionUpdateRequest: ProductGroupPromotionUpdateRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ProductGroupPromotionResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return productGroupPromotionsUpdateWithRequestBuilder(adAccountId: adAccountId, productGroupPromotionUpdateRequest: productGroupPromotionUpdateRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update product group promotions
     - PATCH /ad_accounts/{ad_account_id}/product_group_promotions
     - Update multiple existing Product Group Promotions (by product_group_id)
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter productGroupPromotionUpdateRequest: (body) Parameters to update Product group promotions 
     - returns: RequestBuilder<ProductGroupPromotionResponse> 
     */
    open class func productGroupPromotionsUpdateWithRequestBuilder(adAccountId: String, productGroupPromotionUpdateRequest: ProductGroupPromotionUpdateRequest) -> RequestBuilder<ProductGroupPromotionResponse> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/product_group_promotions"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: productGroupPromotionUpdateRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProductGroupPromotionResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter columns
     */
    public enum Columns_productGroupsAnalytics: String, CaseIterable {
        case spendInMicroDollar = "SPEND_IN_MICRO_DOLLAR"
        case paidImpression = "PAID_IMPRESSION"
        case spendInDollar = "SPEND_IN_DOLLAR"
        case cpcInMicroDollar = "CPC_IN_MICRO_DOLLAR"
        case ecpcInMicroDollar = "ECPC_IN_MICRO_DOLLAR"
        case ecpcInDollar = "ECPC_IN_DOLLAR"
        case ctr = "CTR"
        case ectr = "ECTR"
        case campaignName = "CAMPAIGN_NAME"
        case pinId = "PIN_ID"
        case totalEngagement = "TOTAL_ENGAGEMENT"
        case engagement1 = "ENGAGEMENT_1"
        case engagement2 = "ENGAGEMENT_2"
        case ecpeInDollar = "ECPE_IN_DOLLAR"
        case engagementRate = "ENGAGEMENT_RATE"
        case eengagementRate = "EENGAGEMENT_RATE"
        case ecpmInMicroDollar = "ECPM_IN_MICRO_DOLLAR"
        case repinRate = "REPIN_RATE"
        case ctr2 = "CTR_2"
        case campaignId = "CAMPAIGN_ID"
        case advertiserId = "ADVERTISER_ID"
        case adAccountId = "AD_ACCOUNT_ID"
        case pinPromotionId = "PIN_PROMOTION_ID"
        case adId = "AD_ID"
        case adGroupId = "AD_GROUP_ID"
        case campaignEntityStatus = "CAMPAIGN_ENTITY_STATUS"
        case campaignObjectiveType = "CAMPAIGN_OBJECTIVE_TYPE"
        case cpmInMicroDollar = "CPM_IN_MICRO_DOLLAR"
        case cpmInDollar = "CPM_IN_DOLLAR"
        case adGroupEntityStatus = "AD_GROUP_ENTITY_STATUS"
        case orderLineId = "ORDER_LINE_ID"
        case orderLineName = "ORDER_LINE_NAME"
        case clickthrough1 = "CLICKTHROUGH_1"
        case repin1 = "REPIN_1"
        case impression1 = "IMPRESSION_1"
        case impression1Gross = "IMPRESSION_1_GROSS"
        case clickthrough1Gross = "CLICKTHROUGH_1_GROSS"
        case outboundClick1 = "OUTBOUND_CLICK_1"
        case clickthrough2 = "CLICKTHROUGH_2"
        case repin2 = "REPIN_2"
        case impression2 = "IMPRESSION_2"
        case outboundClick2 = "OUTBOUND_CLICK_2"
        case totalClickthrough = "TOTAL_CLICKTHROUGH"
        case totalImpression = "TOTAL_IMPRESSION"
        case totalImpressionUser = "TOTAL_IMPRESSION_USER"
        case totalImpressionFrequency = "TOTAL_IMPRESSION_FREQUENCY"
        case costPerOutboundClickInDollar = "COST_PER_OUTBOUND_CLICK_IN_DOLLAR"
        case totalEngagementSignup = "TOTAL_ENGAGEMENT_SIGNUP"
        case totalEngagementCheckout = "TOTAL_ENGAGEMENT_CHECKOUT"
        case totalEngagementLead = "TOTAL_ENGAGEMENT_LEAD"
        case totalClickSignup = "TOTAL_CLICK_SIGNUP"
        case totalClickCheckout = "TOTAL_CLICK_CHECKOUT"
        case totalClickAddToCart = "TOTAL_CLICK_ADD_TO_CART"
        case totalClickLead = "TOTAL_CLICK_LEAD"
        case totalViewSignup = "TOTAL_VIEW_SIGNUP"
        case totalViewCheckout = "TOTAL_VIEW_CHECKOUT"
        case totalViewAddToCart = "TOTAL_VIEW_ADD_TO_CART"
        case totalViewLead = "TOTAL_VIEW_LEAD"
        case totalConversions = "TOTAL_CONVERSIONS"
        case totalEngagementSignupValueInMicroDollar = "TOTAL_ENGAGEMENT_SIGNUP_VALUE_IN_MICRO_DOLLAR"
        case totalEngagementCheckoutValueInMicroDollar = "TOTAL_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalClickSignupValueInMicroDollar = "TOTAL_CLICK_SIGNUP_VALUE_IN_MICRO_DOLLAR"
        case totalClickCheckoutValueInMicroDollar = "TOTAL_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalViewSignupValueInMicroDollar = "TOTAL_VIEW_SIGNUP_VALUE_IN_MICRO_DOLLAR"
        case totalViewCheckoutValueInMicroDollar = "TOTAL_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalWebSessions = "TOTAL_WEB_SESSIONS"
        case webSessions1 = "WEB_SESSIONS_1"
        case webSessions2 = "WEB_SESSIONS_2"
        case campaignLifetimeSpendCap = "CAMPAIGN_LIFETIME_SPEND_CAP"
        case campaignDailySpendCap = "CAMPAIGN_DAILY_SPEND_CAP"
        case totalPageVisit = "TOTAL_PAGE_VISIT"
        case totalSignup = "TOTAL_SIGNUP"
        case totalCheckout = "TOTAL_CHECKOUT"
        case totalCustom = "TOTAL_CUSTOM"
        case totalLead = "TOTAL_LEAD"
        case totalSignupValueInMicroDollar = "TOTAL_SIGNUP_VALUE_IN_MICRO_DOLLAR"
        case totalCheckoutValueInMicroDollar = "TOTAL_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalCustomValueInMicroDollar = "TOTAL_CUSTOM_VALUE_IN_MICRO_DOLLAR"
        case pageVisitCostPerAction = "PAGE_VISIT_COST_PER_ACTION"
        case pageVisitRoas = "PAGE_VISIT_ROAS"
        case checkoutRoas = "CHECKOUT_ROAS"
        case customRoas = "CUSTOM_ROAS"
        case videoMrcViews1 = "VIDEO_MRC_VIEWS_1"
        case video3secViews2 = "VIDEO_3SEC_VIEWS_2"
        case videoP100Complete2 = "VIDEO_P100_COMPLETE_2"
        case videoP0Combined2 = "VIDEO_P0_COMBINED_2"
        case videoP25Combined2 = "VIDEO_P25_COMBINED_2"
        case videoP50Combined2 = "VIDEO_P50_COMBINED_2"
        case videoP75Combined2 = "VIDEO_P75_COMBINED_2"
        case videoP95Combined2 = "VIDEO_P95_COMBINED_2"
        case videoMrcViews2 = "VIDEO_MRC_VIEWS_2"
        case paidVideoViewableRate = "PAID_VIDEO_VIEWABLE_RATE"
        case videoLength = "VIDEO_LENGTH"
        case ecpvInDollar = "ECPV_IN_DOLLAR"
        case ecpcvInDollar = "ECPCV_IN_DOLLAR"
        case ecpcvP95InDollar = "ECPCV_P95_IN_DOLLAR"
        case totalVideo3secViews = "TOTAL_VIDEO_3SEC_VIEWS"
        case totalVideoP100Complete = "TOTAL_VIDEO_P100_COMPLETE"
        case totalVideoP0Combined = "TOTAL_VIDEO_P0_COMBINED"
        case totalVideoP25Combined = "TOTAL_VIDEO_P25_COMBINED"
        case totalVideoP50Combined = "TOTAL_VIDEO_P50_COMBINED"
        case totalVideoP75Combined = "TOTAL_VIDEO_P75_COMBINED"
        case totalVideoP95Combined = "TOTAL_VIDEO_P95_COMBINED"
        case totalVideoMrcViews = "TOTAL_VIDEO_MRC_VIEWS"
        case totalVideoAvgWatchtimeInSecond = "TOTAL_VIDEO_AVG_WATCHTIME_IN_SECOND"
        case totalRepinRate = "TOTAL_REPIN_RATE"
        case webCheckoutCostPerAction = "WEB_CHECKOUT_COST_PER_ACTION"
        case webCheckoutRoas = "WEB_CHECKOUT_ROAS"
        case totalWebCheckout = "TOTAL_WEB_CHECKOUT"
        case totalWebCheckoutValueInMicroDollar = "TOTAL_WEB_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalWebClickCheckout = "TOTAL_WEB_CLICK_CHECKOUT"
        case totalWebClickCheckoutValueInMicroDollar = "TOTAL_WEB_CLICK_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalWebEngagementCheckout = "TOTAL_WEB_ENGAGEMENT_CHECKOUT"
        case totalWebEngagementCheckoutValueInMicroDollar = "TOTAL_WEB_ENGAGEMENT_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case totalWebViewCheckout = "TOTAL_WEB_VIEW_CHECKOUT"
        case totalWebViewCheckoutValueInMicroDollar = "TOTAL_WEB_VIEW_CHECKOUT_VALUE_IN_MICRO_DOLLAR"
        case inappCheckoutCostPerAction = "INAPP_CHECKOUT_COST_PER_ACTION"
        case totalOfflineCheckout = "TOTAL_OFFLINE_CHECKOUT"
        case ideaPinProductTagVisit1 = "IDEA_PIN_PRODUCT_TAG_VISIT_1"
        case ideaPinProductTagVisit2 = "IDEA_PIN_PRODUCT_TAG_VISIT_2"
        case totalIdeaPinProductTagVisit = "TOTAL_IDEA_PIN_PRODUCT_TAG_VISIT"
        case leads = "LEADS"
        case costPerLead = "COST_PER_LEAD"
        case quizCompleted = "QUIZ_COMPLETED"
        case quizPinResultOpen = "QUIZ_PIN_RESULT_OPEN"
        case quizCompletionRate = "QUIZ_COMPLETION_RATE"
        case showcasePinClickthrough = "SHOWCASE_PIN_CLICKTHROUGH"
        case showcaseSubpageClickthrough = "SHOWCASE_SUBPAGE_CLICKTHROUGH"
        case showcaseSubpinClickthrough = "SHOWCASE_SUBPIN_CLICKTHROUGH"
        case showcaseSubpageImpression = "SHOWCASE_SUBPAGE_IMPRESSION"
        case showcaseSubpinImpression = "SHOWCASE_SUBPIN_IMPRESSION"
        case showcaseSubpageSwipeLeft = "SHOWCASE_SUBPAGE_SWIPE_LEFT"
        case showcaseSubpageSwipeRight = "SHOWCASE_SUBPAGE_SWIPE_RIGHT"
        case showcaseSubpinSwipeLeft = "SHOWCASE_SUBPIN_SWIPE_LEFT"
        case showcaseSubpinSwipeRight = "SHOWCASE_SUBPIN_SWIPE_RIGHT"
        case showcaseSubpageRepin = "SHOWCASE_SUBPAGE_REPIN"
        case showcaseSubpinRepin = "SHOWCASE_SUBPIN_REPIN"
        case showcaseSubpageCloseup = "SHOWCASE_SUBPAGE_CLOSEUP"
        case showcaseCardThumbnailSwipeForward = "SHOWCASE_CARD_THUMBNAIL_SWIPE_FORWARD"
        case showcaseCardThumbnailSwipeBackward = "SHOWCASE_CARD_THUMBNAIL_SWIPE_BACKWARD"
        case showcaseAverageSubpageCloseupPerSession = "SHOWCASE_AVERAGE_SUBPAGE_CLOSEUP_PER_SESSION"
        case totalCheckoutConversionRate = "TOTAL_CHECKOUT_CONVERSION_RATE"
        case totalViewCategoryConversionRate = "TOTAL_VIEW_CATEGORY_CONVERSION_RATE"
        case totalAddToCartConversionRate = "TOTAL_ADD_TO_CART_CONVERSION_RATE"
        case totalSignupConversionRate = "TOTAL_SIGNUP_CONVERSION_RATE"
        case totalPageVisitConversionRate = "TOTAL_PAGE_VISIT_CONVERSION_RATE"
        case totalLeadConversionRate = "TOTAL_LEAD_CONVERSION_RATE"
        case totalSearchConversionRate = "TOTAL_SEARCH_CONVERSION_RATE"
        case totalWatchVideoConversionRate = "TOTAL_WATCH_VIDEO_CONVERSION_RATE"
        case totalUnknownConversionRate = "TOTAL_UNKNOWN_CONVERSION_RATE"
        case totalCustomConversionRate = "TOTAL_CUSTOM_CONVERSION_RATE"
    }

    /**
     * enum for parameter clickWindowDays
     */
    public enum ClickWindowDays_productGroupsAnalytics: Int, CaseIterable {
        case _0 = 0
        case _1 = 1
        case _7 = 7
        case _14 = 14
        case _30 = 30
        case _60 = 60
    }

    /**
     * enum for parameter engagementWindowDays
     */
    public enum EngagementWindowDays_productGroupsAnalytics: Int, CaseIterable {
        case _0 = 0
        case _1 = 1
        case _7 = 7
        case _14 = 14
        case _30 = 30
        case _60 = 60
    }

    /**
     * enum for parameter viewWindowDays
     */
    public enum ViewWindowDays_productGroupsAnalytics: Int, CaseIterable {
        case _0 = 0
        case _1 = 1
        case _7 = 7
        case _14 = 14
        case _30 = 30
        case _60 = 60
    }

    /**
     * enum for parameter conversionReportTime
     */
    public enum ConversionReportTime_productGroupsAnalytics: String, CaseIterable {
        case adAction = "TIME_OF_AD_ACTION"
        case conversion = "TIME_OF_CONVERSION"
    }

    /**
     Get product group analytics
     
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. 
     - parameter productGroupIds: (query) List of Product group Ids to use to filter the results. 
     - parameter columns: (query) Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned 
     - parameter granularity: (query) TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly 
     - parameter clickWindowDays: (query) Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to ._30)
     - parameter engagementWindowDays: (query) Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to ._30)
     - parameter viewWindowDays: (query) Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to ._1)
     - parameter conversionReportTime: (query) The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to .timeOfAdAction)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func productGroupsAnalytics(adAccountId: String, startDate: Date, endDate: Date, productGroupIds: [String], columns: [Columns_productGroupsAnalytics], granularity: Granularity, clickWindowDays: ClickWindowDays_productGroupsAnalytics? = nil, engagementWindowDays: EngagementWindowDays_productGroupsAnalytics? = nil, viewWindowDays: ViewWindowDays_productGroupsAnalytics? = nil, conversionReportTime: ConversionReportTime_productGroupsAnalytics? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [ProductGroupAnalyticsResponseInner]?, _ error: Error?) -> Void)) -> RequestTask {
        return productGroupsAnalyticsWithRequestBuilder(adAccountId: adAccountId, startDate: startDate, endDate: endDate, productGroupIds: productGroupIds, columns: columns, granularity: granularity, clickWindowDays: clickWindowDays, engagementWindowDays: engagementWindowDays, viewWindowDays: viewWindowDays, conversionReportTime: conversionReportTime).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get product group analytics
     - GET /ad_accounts/{ad_account_id}/product_groups/analytics
     - Get analytics for the specified product groups in the specified <code>ad_account_id</code>, filtered by the specified options. - The token's user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a>: Admin, Analyst, Campaign Manager. - If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days. - If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter adAccountId: (path) Unique identifier of an ad account. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. 
     - parameter productGroupIds: (query) List of Product group Ids to use to filter the results. 
     - parameter columns: (query) Columns to retrieve, encoded as a comma-separated string. **NOTE**: Any metrics defined as MICRO_DOLLARS returns a value based on the advertiser profile&#39;s currency field. For USD,($1/1,000,000, or $0.000001 - one one-ten-thousandth of a cent). it&#39;s microdollars. Otherwise, it&#39;s in microunits of the advertiser&#39;s currency.&lt;br/&gt;For example, if the advertiser&#39;s currency is GBP (British pound sterling), all MICRO_DOLLARS fields will be in GBP microunits (1/1,000,000 British pound).&lt;br/&gt;If a column has no value, it may not be returned 
     - parameter granularity: (query) TOTAL - metrics are aggregated over the specified date range.&lt;br&gt; DAY - metrics are broken down daily.&lt;br&gt; HOUR - metrics are broken down hourly.&lt;br&gt;WEEKLY - metrics are broken down weekly.&lt;br&gt;MONTHLY - metrics are broken down monthly 
     - parameter clickWindowDays: (query) Number of days to use as the conversion attribution window for a pin click action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to ._30)
     - parameter engagementWindowDays: (query) Number of days to use as the conversion attribution window for an engagement action. Engagements include saves, closeups, link clicks, and carousel card swipes. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;30&#x60; days. (optional, default to ._30)
     - parameter viewWindowDays: (query) Number of days to use as the conversion attribution window for a view action. Applies to Pinterest Tag conversion metrics. Prior conversion tags use their defined attribution windows. If not specified, defaults to &#x60;1&#x60; day. (optional, default to ._1)
     - parameter conversionReportTime: (query) The date by which the conversion metrics returned from this endpoint will be reported. There are two dates associated with a conversion event: the date that the user interacted with the ad, and the date that the user completed a conversion event. (optional, default to .timeOfAdAction)
     - returns: RequestBuilder<[ProductGroupAnalyticsResponseInner]> 
     */
    open class func productGroupsAnalyticsWithRequestBuilder(adAccountId: String, startDate: Date, endDate: Date, productGroupIds: [String], columns: [Columns_productGroupsAnalytics], granularity: Granularity, clickWindowDays: ClickWindowDays_productGroupsAnalytics? = nil, engagementWindowDays: EngagementWindowDays_productGroupsAnalytics? = nil, viewWindowDays: ViewWindowDays_productGroupsAnalytics? = nil, conversionReportTime: ConversionReportTime_productGroupsAnalytics? = nil) -> RequestBuilder<[ProductGroupAnalyticsResponseInner]> {
        var localVariablePath = "/ad_accounts/{ad_account_id}/product_groups/analytics"
        let adAccountIdPreEscape = "\(APIHelper.mapValueToPathItem(adAccountId))"
        let adAccountIdPostEscape = adAccountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ad_account_id}", with: adAccountIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start_date": (wrappedValue: startDate.encodeToJSON(), isExplode: true),
            "end_date": (wrappedValue: endDate.encodeToJSON(), isExplode: true),
            "product_group_ids": (wrappedValue: productGroupIds.encodeToJSON(), isExplode: true),
            "columns": (wrappedValue: columns.encodeToJSON(), isExplode: false),
            "granularity": (wrappedValue: granularity.encodeToJSON(), isExplode: true),
            "click_window_days": (wrappedValue: clickWindowDays?.encodeToJSON(), isExplode: true),
            "engagement_window_days": (wrappedValue: engagementWindowDays?.encodeToJSON(), isExplode: true),
            "view_window_days": (wrappedValue: viewWindowDays?.encodeToJSON(), isExplode: true),
            "conversion_report_time": (wrappedValue: conversionReportTime?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[ProductGroupAnalyticsResponseInner]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
