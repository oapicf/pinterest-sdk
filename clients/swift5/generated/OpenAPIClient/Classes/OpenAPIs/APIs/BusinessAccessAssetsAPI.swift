//
// BusinessAccessAssetsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BusinessAccessAssetsAPI {

    /**
     Create a new asset group.
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter createAssetGroupBody: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetGroupCreate(businessId: String, createAssetGroupBody: CreateAssetGroupBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreateAssetGroupResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return assetGroupCreateWithRequestBuilder(businessId: businessId, createAssetGroupBody: createAssetGroupBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a new asset group.
     - POST /businesses/{business_id}/asset_groups
     - Create a new asset group with the specified parameters. - An <a href=\"https://help.pinterest.com/en/business/article/asset-groups\">asset group</a> is a custom group of assets based on how youâ€™d like to manage your accounts.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter createAssetGroupBody: (body)  
     - returns: RequestBuilder<CreateAssetGroupResponse> 
     */
    open class func assetGroupCreateWithRequestBuilder(businessId: String, createAssetGroupBody: CreateAssetGroupBody) -> RequestBuilder<CreateAssetGroupResponse> {
        var localVariablePath = "/businesses/{business_id}/asset_groups"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createAssetGroupBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateAssetGroupResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete asset groups.
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter deleteAssetGroupBody: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetGroupDelete(businessId: String, deleteAssetGroupBody: DeleteAssetGroupBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: DeleteAssetGroupResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return assetGroupDeleteWithRequestBuilder(businessId: businessId, deleteAssetGroupBody: deleteAssetGroupBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete asset groups.
     - DELETE /businesses/{business_id}/asset_groups
     - Delete a batch of asset groups.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter deleteAssetGroupBody: (body)  
     - returns: RequestBuilder<DeleteAssetGroupResponse> 
     */
    open class func assetGroupDeleteWithRequestBuilder(businessId: String, deleteAssetGroupBody: DeleteAssetGroupBody) -> RequestBuilder<DeleteAssetGroupResponse> {
        var localVariablePath = "/businesses/{business_id}/asset_groups"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: deleteAssetGroupBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DeleteAssetGroupResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update asset groups.
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter updateAssetGroupBody: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetGroupUpdate(businessId: String, updateAssetGroupBody: UpdateAssetGroupBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateAssetGroupResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return assetGroupUpdateWithRequestBuilder(businessId: businessId, updateAssetGroupBody: updateAssetGroupBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update asset groups.
     - PATCH /businesses/{business_id}/asset_groups
     - Update a batch of asset groups with the specified parameters.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter updateAssetGroupBody: (body)  
     - returns: RequestBuilder<UpdateAssetGroupResponse> 
     */
    open class func assetGroupUpdateWithRequestBuilder(businessId: String, updateAssetGroupBody: UpdateAssetGroupBody) -> RequestBuilder<UpdateAssetGroupResponse> {
        var localVariablePath = "/businesses/{business_id}/asset_groups"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateAssetGroupBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateAssetGroupResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get members with access to asset
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter assetId: (path) Unique identifier of a business asset. 
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessAssetMembersGet(businessId: String, assetId: String, bookmark: String? = nil, pageSize: Int? = nil, startIndex: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessAssetMembersGet200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return businessAssetMembersGetWithRequestBuilder(businessId: businessId, assetId: assetId, bookmark: bookmark, pageSize: pageSize, startIndex: startIndex).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get members with access to asset
     - GET /businesses/{business_id}/assets/{asset_id}/members
     - Get all the members the requesting business has granted access to on the given asset.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter assetId: (path) Unique identifier of a business asset. 
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - returns: RequestBuilder<BusinessAssetMembersGet200Response> 
     */
    open class func businessAssetMembersGetWithRequestBuilder(businessId: String, assetId: String, bookmark: String? = nil, pageSize: Int? = nil, startIndex: Int? = nil) -> RequestBuilder<BusinessAssetMembersGet200Response> {
        var localVariablePath = "/businesses/{business_id}/assets/{asset_id}/members"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let assetIdPreEscape = "\(APIHelper.mapValueToPathItem(assetId))"
        let assetIdPostEscape = assetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{asset_id}", with: assetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "start_index": (wrappedValue: startIndex?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessAssetMembersGet200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get partners with access to asset
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter assetId: (path) Unique identifier of a business asset. 
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessAssetPartnersGet(businessId: String, assetId: String, startIndex: Int? = nil, bookmark: String? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessAssetPartnersGet200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return businessAssetPartnersGetWithRequestBuilder(businessId: businessId, assetId: assetId, startIndex: startIndex, bookmark: bookmark, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get partners with access to asset
     - GET /businesses/{business_id}/assets/{asset_id}/partners
     - Get all the partners the requesting business has granted access to on the given asset. Note: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with you cannot be shared with a different partner.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter assetId: (path) Unique identifier of a business asset. 
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - returns: RequestBuilder<BusinessAssetPartnersGet200Response> 
     */
    open class func businessAssetPartnersGetWithRequestBuilder(businessId: String, assetId: String, startIndex: Int? = nil, bookmark: String? = nil, pageSize: Int? = nil) -> RequestBuilder<BusinessAssetPartnersGet200Response> {
        var localVariablePath = "/businesses/{business_id}/assets/{asset_id}/partners"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let assetIdPreEscape = "\(APIHelper.mapValueToPathItem(assetId))"
        let assetIdPostEscape = assetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{asset_id}", with: assetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start_index": (wrappedValue: startIndex?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessAssetPartnersGet200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter assetType
     */
    public enum AssetType_businessAssetsGet: String, CaseIterable {
        case adAccount = "AD_ACCOUNT"
        case profile = "PROFILE"
        case assetGroup = "ASSET_GROUP"
    }

    /**
     List business assets
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter permissions: (query) A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned. (optional)
     - parameter childAssetId: (query) A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child. (optional)
     - parameter assetGroupId: (query) An asset group unique identifier. Used to fetch assets contained within the specified asset group. (optional)
     - parameter assetType: (query) A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to .adAccount)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessAssetsGet(businessId: String, permissions: [PermissionsWithOwner]? = nil, childAssetId: String? = nil, assetGroupId: String? = nil, assetType: AssetType_businessAssetsGet? = nil, startIndex: Int? = nil, bookmark: String? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessAssetsGet200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return businessAssetsGetWithRequestBuilder(businessId: businessId, permissions: permissions, childAssetId: childAssetId, assetGroupId: assetGroupId, assetType: assetType, startIndex: startIndex, bookmark: bookmark, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List business assets
     - GET /businesses/{business_id}/assets
     - Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter permissions: (query) A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned. (optional)
     - parameter childAssetId: (query) A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child. (optional)
     - parameter assetGroupId: (query) An asset group unique identifier. Used to fetch assets contained within the specified asset group. (optional)
     - parameter assetType: (query) A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to .adAccount)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - returns: RequestBuilder<BusinessAssetsGet200Response> 
     */
    open class func businessAssetsGetWithRequestBuilder(businessId: String, permissions: [PermissionsWithOwner]? = nil, childAssetId: String? = nil, assetGroupId: String? = nil, assetType: AssetType_businessAssetsGet? = nil, startIndex: Int? = nil, bookmark: String? = nil, pageSize: Int? = nil) -> RequestBuilder<BusinessAssetsGet200Response> {
        var localVariablePath = "/businesses/{business_id}/assets"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "permissions": (wrappedValue: permissions?.encodeToJSON(), isExplode: true),
            "child_asset_id": (wrappedValue: childAssetId?.encodeToJSON(), isExplode: true),
            "asset_group_id": (wrappedValue: assetGroupId?.encodeToJSON(), isExplode: true),
            "asset_type": (wrappedValue: assetType?.encodeToJSON(), isExplode: true),
            "start_index": (wrappedValue: startIndex?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessAssetsGet200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter assetType
     */
    public enum AssetType_businessMemberAssetsGet: String, CaseIterable {
        case adAccount = "AD_ACCOUNT"
        case profile = "PROFILE"
        case assetGroup = "ASSET_GROUP"
    }

    /**
     Get assets assigned to a member
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter memberId: (path) The member id to fetch assets for. 
     - parameter assetType: (query) A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to .adAccount)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessMemberAssetsGet(businessId: String, memberId: String, assetType: AssetType_businessMemberAssetsGet? = nil, startIndex: Int? = nil, bookmark: String? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessMemberAssetsGet200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return businessMemberAssetsGetWithRequestBuilder(businessId: businessId, memberId: memberId, assetType: assetType, startIndex: startIndex, bookmark: bookmark, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get assets assigned to a member
     - GET /businesses/{business_id}/members/{member_id}/assets
     - Get assets on which you assigned asset permissions to the given member. Can be used to: - get all assets, regardless of asset type or - get assets of one asset type by using the asset_type query. The return response will include the permissions the member has to that asset and the asset type.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter memberId: (path) The member id to fetch assets for. 
     - parameter assetType: (query) A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to .adAccount)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - returns: RequestBuilder<BusinessMemberAssetsGet200Response> 
     */
    open class func businessMemberAssetsGetWithRequestBuilder(businessId: String, memberId: String, assetType: AssetType_businessMemberAssetsGet? = nil, startIndex: Int? = nil, bookmark: String? = nil, pageSize: Int? = nil) -> RequestBuilder<BusinessMemberAssetsGet200Response> {
        var localVariablePath = "/businesses/{business_id}/members/{member_id}/assets"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let memberIdPreEscape = "\(APIHelper.mapValueToPathItem(memberId))"
        let memberIdPostEscape = memberIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{member_id}", with: memberIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "asset_type": (wrappedValue: assetType?.encodeToJSON(), isExplode: true),
            "start_index": (wrappedValue: startIndex?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessMemberAssetsGet200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete member access to asset
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter businessMembersAssetAccessDeleteRequest: (body) List member assset permissions to delete. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessMembersAssetAccessDelete(businessId: String, businessMembersAssetAccessDeleteRequest: BusinessMembersAssetAccessDeleteRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: DeleteMemberAccessResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return businessMembersAssetAccessDeleteWithRequestBuilder(businessId: businessId, businessMembersAssetAccessDeleteRequest: businessMembersAssetAccessDeleteRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete member access to asset
     - DELETE /businesses/{business_id}/members/assets/access
     - Terminate multiple members' access to an asset.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter businessMembersAssetAccessDeleteRequest: (body) List member assset permissions to delete. 
     - returns: RequestBuilder<DeleteMemberAccessResultsResponseArray> 
     */
    open class func businessMembersAssetAccessDeleteWithRequestBuilder(businessId: String, businessMembersAssetAccessDeleteRequest: BusinessMembersAssetAccessDeleteRequest) -> RequestBuilder<DeleteMemberAccessResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/members/assets/access"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: businessMembersAssetAccessDeleteRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DeleteMemberAccessResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Assign/Update member asset permissions
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter updateMemberAssetAccessBody: (body) List of member asset permissions to create or update. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessMembersAssetAccessUpdate(businessId: String, updateMemberAssetAccessBody: UpdateMemberAssetAccessBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateMemberAssetsResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return businessMembersAssetAccessUpdateWithRequestBuilder(businessId: businessId, updateMemberAssetAccessBody: updateMemberAssetAccessBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Assign/Update member asset permissions
     - PATCH /businesses/{business_id}/members/assets/access
     - Grant multiple members access to assets and/or update multiple member's exisiting permissions to an asset. Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE. 
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter updateMemberAssetAccessBody: (body) List of member asset permissions to create or update. 
     - returns: RequestBuilder<UpdateMemberAssetsResultsResponseArray> 
     */
    open class func businessMembersAssetAccessUpdateWithRequestBuilder(businessId: String, updateMemberAssetAccessBody: UpdateMemberAssetAccessBody) -> RequestBuilder<UpdateMemberAssetsResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/members/assets/access"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateMemberAssetAccessBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateMemberAssetsResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter assetType
     */
    public enum AssetType_businessPartnerAssetAccessGet: String, CaseIterable {
        case adAccount = "AD_ACCOUNT"
        case profile = "PROFILE"
        case assetGroup = "ASSET_GROUP"
    }

    /**
     Get assets assigned to a partner or assets assigned by a partner
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter partnerId: (path) The partner id to be bound to the Business 
     - parameter partnerType: (query) Specifies whether to fetch internal or external (shared) partners. If partner_type&#x3D;INTERNAL, the asset being queried is for accesses the partner has to your business assets.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the asset being queried is for the accesses you have to the partner&#39;s business asset. (optional)
     - parameter assetType: (query) A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to .adAccount)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func businessPartnerAssetAccessGet(businessId: String, partnerId: String, partnerType: PartnerType? = nil, assetType: AssetType_businessPartnerAssetAccessGet? = nil, startIndex: Int? = nil, pageSize: Int? = nil, bookmark: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BusinessPartnerAssetAccessGet200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return businessPartnerAssetAccessGetWithRequestBuilder(businessId: businessId, partnerId: partnerId, partnerType: partnerType, assetType: assetType, startIndex: startIndex, pageSize: pageSize, bookmark: bookmark).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get assets assigned to a partner or assets assigned by a partner
     - GET /businesses/{business_id}/partners/{partner_id}/assets
     - Can be used to get the business assets your partner has granted you access to or the business assets you have granted your partner access to. If you specify: - partner_type=INTERNAL, you will retrieve your business assets that the partner has access to. - partner_type=EXTERNAL, you will retrieve the partner's business assets that the partner has granted you access to.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter partnerId: (path) The partner id to be bound to the Business 
     - parameter partnerType: (query) Specifies whether to fetch internal or external (shared) partners. If partner_type&#x3D;INTERNAL, the asset being queried is for accesses the partner has to your business assets.&lt;br&gt; If partner_type&#x3D;EXTERNAL, the asset being queried is for the accesses you have to the partner&#39;s business asset. (optional)
     - parameter assetType: (query) A resource type to filter the assets by. Only assets of the specified type will be returned. (optional, default to .adAccount)
     - parameter startIndex: (query) An index to start fetching the results from. Only the results starting from this index will be returned. (optional, default to 0)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - returns: RequestBuilder<BusinessPartnerAssetAccessGet200Response> 
     */
    open class func businessPartnerAssetAccessGetWithRequestBuilder(businessId: String, partnerId: String, partnerType: PartnerType? = nil, assetType: AssetType_businessPartnerAssetAccessGet? = nil, startIndex: Int? = nil, pageSize: Int? = nil, bookmark: String? = nil) -> RequestBuilder<BusinessPartnerAssetAccessGet200Response> {
        var localVariablePath = "/businesses/{business_id}/partners/{partner_id}/assets"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let partnerIdPreEscape = "\(APIHelper.mapValueToPathItem(partnerId))"
        let partnerIdPostEscape = partnerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partner_id}", with: partnerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "partner_type": (wrappedValue: partnerType?.encodeToJSON(), isExplode: true),
            "asset_type": (wrappedValue: assetType?.encodeToJSON(), isExplode: true),
            "start_index": (wrappedValue: startIndex?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BusinessPartnerAssetAccessGet200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete partner access to asset
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter deletePartnerAssetAccessBody: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deletePartnerAssetAccessHandlerImpl(businessId: String, deletePartnerAssetAccessBody: DeletePartnerAssetAccessBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: DeletePartnerAssetsResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return deletePartnerAssetAccessHandlerImplWithRequestBuilder(businessId: businessId, deletePartnerAssetAccessBody: deletePartnerAssetAccessBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete partner access to asset
     - DELETE /businesses/{business_id}/partners/assets
     - Terminate multiple partners' access to an asset. If - partner_type=INTERNAL: You will terminate a partner's asset access to your business assets. - partner_type=EXTERNAL: You will terminate your own access to your partner's business assets.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter deletePartnerAssetAccessBody: (body)  
     - returns: RequestBuilder<DeletePartnerAssetsResultsResponseArray> 
     */
    open class func deletePartnerAssetAccessHandlerImplWithRequestBuilder(businessId: String, deletePartnerAssetAccessBody: DeletePartnerAssetAccessBody) -> RequestBuilder<DeletePartnerAssetsResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/partners/assets"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: deletePartnerAssetAccessBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DeletePartnerAssetsResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Assign/Update partner asset permissions
     
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter updatePartnerAssetAccessBody: (body) A list of assets and permissions to assign to your partners. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updatePartnerAssetAccessHandlerImpl(businessId: String, updatePartnerAssetAccessBody: UpdatePartnerAssetAccessBody, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UpdatePartnerAssetsResultsResponseArray?, _ error: Error?) -> Void)) -> RequestTask {
        return updatePartnerAssetAccessHandlerImplWithRequestBuilder(businessId: businessId, updatePartnerAssetAccessBody: updatePartnerAssetAccessBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Assign/Update partner asset permissions
     - PATCH /businesses/{business_id}/partners/assets
     - Grant multiple partners access to assets and/or update multiple partner's exisiting permissions to an asset. If your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them. To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview  Note: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter businessId: (path) Unique identifier of the requesting business. 
     - parameter updatePartnerAssetAccessBody: (body) A list of assets and permissions to assign to your partners. 
     - returns: RequestBuilder<UpdatePartnerAssetsResultsResponseArray> 
     */
    open class func updatePartnerAssetAccessHandlerImplWithRequestBuilder(businessId: String, updatePartnerAssetAccessBody: UpdatePartnerAssetAccessBody) -> RequestBuilder<UpdatePartnerAssetsResultsResponseArray> {
        var localVariablePath = "/businesses/{business_id}/partners/assets"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{business_id}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updatePartnerAssetAccessBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdatePartnerAssetsResultsResponseArray>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
