//
// PinsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PinsAPI {

    /**
     * enum for parameter appTypes
     */
    public enum AppTypes_multiPinsAnalytics: String, CaseIterable {
        case all = "ALL"
        case mobile = "MOBILE"
        case tablet = "TABLET"
        case web = "WEB"
    }

    /**
     Get multiple Pin analytics
     
     - parameter pinIds: (query) List of Pin IDs. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. 
     - parameter metricTypes: (query) Pin metric types to get data for. 
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func multiPinsAnalytics(pinIds: [String], startDate: Date, endDate: Date, metricTypes: [PinsAnalyticsMetricTypesParameterInner], appTypes: AppTypes_multiPinsAnalytics? = nil, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [String: Dictionary]?, _ error: Error?) -> Void)) -> RequestTask {
        return multiPinsAnalyticsWithRequestBuilder(pinIds: pinIds, startDate: startDate, endDate: endDate, metricTypes: metricTypes, appTypes: appTypes, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get multiple Pin analytics
     - GET /pins/analytics
     - <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>  Get analytics for multiple pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - The maximum number of pins supported in a single request is 100. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.  If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - OAuth:
       - type: oauth2
       - name: client_credentials
     - parameter pinIds: (query) List of Pin IDs. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. 
     - parameter metricTypes: (query) Pin metric types to get data for. 
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<[String: Dictionary]> 
     */
    open class func multiPinsAnalyticsWithRequestBuilder(pinIds: [String], startDate: Date, endDate: Date, metricTypes: [PinsAnalyticsMetricTypesParameterInner], appTypes: AppTypes_multiPinsAnalytics? = nil, adAccountId: String? = nil) -> RequestBuilder<[String: Dictionary]> {
        let localVariablePath = "/pins/analytics"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pin_ids": (wrappedValue: pinIds.encodeToJSON(), isExplode: true),
            "start_date": (wrappedValue: startDate.encodeToJSON(), isExplode: true),
            "end_date": (wrappedValue: endDate.encodeToJSON(), isExplode: true),
            "app_types": (wrappedValue: appTypes?.encodeToJSON(), isExplode: true),
            "metric_types": (wrappedValue: metricTypes.encodeToJSON(), isExplode: false),
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[String: Dictionary]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter appTypes
     */
    public enum AppTypes_pinsAnalytics: String, CaseIterable {
        case all = "ALL"
        case mobile = "MOBILE"
        case tablet = "TABLET"
        case web = "WEB"
    }

    /**
     * enum for parameter splitField
     */
    public enum SplitField_pinsAnalytics: String, CaseIterable {
        case noSplit = "NO_SPLIT"
        case appType = "APP_TYPE"
    }

    /**
     Get Pin analytics
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. 
     - parameter metricTypes: (query) Pin metric types to get data for. VIDEO_MRC_VIEW are Video views, VIDEO_V50_WATCH_TIME is Total play time. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt;, Profile visits and Follows will only be available for Idea Pins. These metrics are available for all Pin formats since then. Keep in mind this cannot have ALL if split_field is set to any value other than &lt;code&gt;NO_SPLIT&lt;/code&gt;. 
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter splitField: (query) How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to .noSplit)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsAnalytics(pinId: String, startDate: Date, endDate: Date, metricTypes: [PinsAnalyticsMetricTypesParameterInner], appTypes: AppTypes_pinsAnalytics? = nil, splitField: SplitField_pinsAnalytics? = nil, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [String: PinAnalyticsMetricsResponse]?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsAnalyticsWithRequestBuilder(pinId: pinId, startDate: startDate, endDate: endDate, metricTypes: metricTypes, appTypes: appTypes, splitField: splitField, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Pin analytics
     - GET /pins/{pin_id}/analytics
     - Get analytics for a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\"/docs/api/v5/#operation/ad_accounts/list\">List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Admin, Analyst. - For Pins on secret boards: Admin.  If Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - OAuth:
       - type: oauth2
       - name: client_credentials
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter startDate: (query) Metric report start date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days back from today. 
     - parameter endDate: (query) Metric report end date (UTC). Format: YYYY-MM-DD. Cannot be more than 90 days past start_date. 
     - parameter metricTypes: (query) Pin metric types to get data for. VIDEO_MRC_VIEW are Video views, VIDEO_V50_WATCH_TIME is Total play time. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt;, Profile visits and Follows will only be available for Idea Pins. These metrics are available for all Pin formats since then. Keep in mind this cannot have ALL if split_field is set to any value other than &lt;code&gt;NO_SPLIT&lt;/code&gt;. 
     - parameter appTypes: (query) Apps or devices to get data for, default is all. (optional, default to .all)
     - parameter splitField: (query) How to split the data into groups. Not including this param means data won&#39;t be split. (optional, default to .noSplit)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<[String: PinAnalyticsMetricsResponse]> 
     */
    open class func pinsAnalyticsWithRequestBuilder(pinId: String, startDate: Date, endDate: Date, metricTypes: [PinsAnalyticsMetricTypesParameterInner], appTypes: AppTypes_pinsAnalytics? = nil, splitField: SplitField_pinsAnalytics? = nil, adAccountId: String? = nil) -> RequestBuilder<[String: PinAnalyticsMetricsResponse]> {
        var localVariablePath = "/pins/{pin_id}/analytics"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "start_date": (wrappedValue: startDate.encodeToJSON(), isExplode: true),
            "end_date": (wrappedValue: endDate.encodeToJSON(), isExplode: true),
            "app_types": (wrappedValue: appTypes?.encodeToJSON(), isExplode: true),
            "metric_types": (wrappedValue: metricTypes.encodeToJSON(), isExplode: false),
            "split_field": (wrappedValue: splitField?.encodeToJSON(), isExplode: false),
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[String: PinAnalyticsMetricsResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create Pin
     
     - parameter pinCreate: (body) Create a new Pin. 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsCreate(pinCreate: PinCreate, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Pin?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsCreateWithRequestBuilder(pinCreate: pinCreate, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create Pin
     - POST /pins
     - Create a Pin on a board or board section owned by the \"operation user_account\".  Note: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).  - This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/web-features/add-ons-overview/'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/api-features/content-overview/'>Content App Solutions Guide</a>.  <strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinCreate: (body) Create a new Pin. 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Pin> 
     */
    open class func pinsCreateWithRequestBuilder(pinCreate: PinCreate, adAccountId: String? = nil) -> RequestBuilder<Pin> {
        let localVariablePath = "/pins"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: pinCreate)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Pin>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete Pin
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsDelete(pinId: String, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsDeleteWithRequestBuilder(pinId: pinId, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Pin
     - DELETE /pins/{pin_id}
     - Delete a Pins owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func pinsDeleteWithRequestBuilder(pinId: String, adAccountId: String? = nil) -> RequestBuilder<Void> {
        var localVariablePath = "/pins/{pin_id}"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Pin
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter pinMetrics: (query) Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsGet(pinId: String, pinMetrics: Bool? = nil, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Pin?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsGetWithRequestBuilder(pinId: pinId, pinMetrics: pinMetrics, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Pin
     - GET /pins/{pin_id}
     - Get a Pin owned by the \"operation user_account\" - or on a group board that has been shared with this account. - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - OAuth:
       - type: oauth2
       - name: client_credentials
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter pinMetrics: (query) Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Pin> 
     */
    open class func pinsGetWithRequestBuilder(pinId: String, pinMetrics: Bool? = nil, adAccountId: String? = nil) -> RequestBuilder<Pin> {
        var localVariablePath = "/pins/{pin_id}"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "pin_metrics": (wrappedValue: pinMetrics?.encodeToJSON(), isExplode: true),
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Pin>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter pinFilter
     */
    public enum PinFilter_pinsList: String, CaseIterable {
        case excludeNative = "exclude_native"
        case excludeRepins = "exclude_repins"
        case hasBeenPromoted = "has_been_promoted"
    }

    /**
     * enum for parameter pinType
     */
    public enum PinType_pinsList: String, CaseIterable {
        case _private = "PRIVATE"
    }

    /**
     * enum for parameter creativeTypes
     */
    public enum CreativeTypes_pinsList: String, CaseIterable {
        case regular = "REGULAR"
        case video = "VIDEO"
        case shopping = "SHOPPING"
        case carousel = "CAROUSEL"
        case maxVideo = "MAX_VIDEO"
        case shopThePin = "SHOP_THE_PIN"
        case collection = "COLLECTION"
        case idea = "IDEA"
    }

    /**
     List Pins
     
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter pinFilter: (query) Pin filter. (optional)
     - parameter includeProtectedPins: (query) Specify if return pins from protected boards (optional, default to false)
     - parameter pinType: (query) The type of pins to return, currently only enabled for private pins (optional)
     - parameter creativeTypes: (query) Pin creative types filter. &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SHOP_THE_PIN has been deprecated. Please use COLLECTION instead. (optional)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter pinMetrics: (query) Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsList(bookmark: String? = nil, pageSize: Int? = nil, pinFilter: PinFilter_pinsList? = nil, includeProtectedPins: Bool? = nil, pinType: PinType_pinsList? = nil, creativeTypes: [CreativeTypes_pinsList]? = nil, adAccountId: String? = nil, pinMetrics: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: PinsList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsListWithRequestBuilder(bookmark: bookmark, pageSize: pageSize, pinFilter: pinFilter, includeProtectedPins: includeProtectedPins, pinType: pinType, creativeTypes: creativeTypes, adAccountId: adAccountId, pinMetrics: pinMetrics).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Pins
     - GET /pins
     - Get a list of the Pins owned by the \"operation user_account\".   - By default, the \"operation user_account\" is the token user_account.   - All Pins owned by the \"operation user_account\" are included, regardless of who owns the board they are on. Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the \"operation user_account\".  Disclaimer: there are known performance issues when filtering by field <code>creative_type</code> and including protected pins. If your request is timing out in this scenario we encourage you to use <a href='/docs/api/v5/#operation/boards/list_pins'>GET List Pins on Board</a>.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - OAuth:
       - type: oauth2
       - name: client_credentials
     - parameter bookmark: (query) Cursor used to fetch the next page of items (optional)
     - parameter pageSize: (query) Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;&#39;/docs/reference/pagination/&#39;&gt;Pagination&lt;/a&gt; for more information. (optional, default to 25)
     - parameter pinFilter: (query) Pin filter. (optional)
     - parameter includeProtectedPins: (query) Specify if return pins from protected boards (optional, default to false)
     - parameter pinType: (query) The type of pins to return, currently only enabled for private pins (optional)
     - parameter creativeTypes: (query) Pin creative types filter. &lt;/p&gt;&lt;strong&gt;Note:&lt;/strong&gt; SHOP_THE_PIN has been deprecated. Please use COLLECTION instead. (optional)
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter pinMetrics: (query) Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then. (optional, default to false)
     - returns: RequestBuilder<PinsList200Response> 
     */
    open class func pinsListWithRequestBuilder(bookmark: String? = nil, pageSize: Int? = nil, pinFilter: PinFilter_pinsList? = nil, includeProtectedPins: Bool? = nil, pinType: PinType_pinsList? = nil, creativeTypes: [CreativeTypes_pinsList]? = nil, adAccountId: String? = nil, pinMetrics: Bool? = nil) -> RequestBuilder<PinsList200Response> {
        let localVariablePath = "/pins"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "bookmark": (wrappedValue: bookmark?.encodeToJSON(), isExplode: true),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: true),
            "pin_filter": (wrappedValue: pinFilter?.encodeToJSON(), isExplode: true),
            "include_protected_pins": (wrappedValue: includeProtectedPins?.encodeToJSON(), isExplode: true),
            "pin_type": (wrappedValue: pinType?.encodeToJSON(), isExplode: true),
            "creative_types": (wrappedValue: creativeTypes?.encodeToJSON(), isExplode: true),
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
            "pin_metrics": (wrappedValue: pinMetrics?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PinsList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Save Pin
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter pinsSaveRequest: (body) Request object used to save an existing pin 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsSave(pinId: String, pinsSaveRequest: PinsSaveRequest, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Pin?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsSaveWithRequestBuilder(pinId: pinId, pinsSaveRequest: pinsSaveRequest, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Save Pin
     - POST /pins/{pin_id}/save
     - Save a Pin on a board or board section owned by the \"operation user_account\". - By default, the \"operation user_account\" is the token user_account. Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.  - Any Pin type can be saved: image Pin, video Pin, Idea Pin, product Pin, etc. - Any public Pin can be saved given a pin ID.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter pinsSaveRequest: (body) Request object used to save an existing pin 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Pin> 
     */
    open class func pinsSaveWithRequestBuilder(pinId: String, pinsSaveRequest: PinsSaveRequest, adAccountId: String? = nil) -> RequestBuilder<Pin> {
        var localVariablePath = "/pins/{pin_id}/save"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: pinsSaveRequest)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Pin>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update Pin
     
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter pinUpdate: (body)  
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pinsUpdate(pinId: String, pinUpdate: PinUpdate, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Pin?, _ error: Error?) -> Void)) -> RequestTask {
        return pinsUpdateWithRequestBuilder(pinId: pinId, pinUpdate: pinUpdate, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Update Pin
     - PATCH /pins/{pin_id}
     - Update a pin owned by the \"operating user_account\". - By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account:  - For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager. - For Pins on secret boards: Owner, Admin.  <strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter pinId: (path) Unique identifier of a Pin. 
     - parameter pinUpdate: (body)  
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<Pin> 
     */
    open class func pinsUpdateWithRequestBuilder(pinId: String, pinUpdate: PinUpdate, adAccountId: String? = nil) -> RequestBuilder<Pin> {
        var localVariablePath = "/pins/{pin_id}"
        let pinIdPreEscape = "\(APIHelper.mapValueToPathItem(pinId))"
        let pinIdPostEscape = pinIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pin_id}", with: pinIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: pinUpdate)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Pin>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
