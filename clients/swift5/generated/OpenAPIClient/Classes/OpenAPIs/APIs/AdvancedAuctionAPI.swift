//
// AdvancedAuctionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AdvancedAuctionAPI {

    /**
     Get item bid options (POST)
     
     - parameter advancedAuctionItemsGetRequest: (body) Request object used to get bid options values for a batch of retail catalog items 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func advancedAuctionItemsGetPost(advancedAuctionItemsGetRequest: AdvancedAuctionItemsGetRequest, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AdvancedAuctionItems?, _ error: Error?) -> Void)) -> RequestTask {
        return advancedAuctionItemsGetPostWithRequestBuilder(advancedAuctionItemsGetRequest: advancedAuctionItemsGetRequest, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get item bid options (POST)
     - POST /advanced_auction/items/get
     - Get the bid options for a batch of retail catalog items.  The catalog must be owned by the \"operation user_account\". <a href=\"/docs/api-features/shopping-overview/#Update%20items%20in%20batch\" target=\"_blank\">See detailed documentation here.</a> By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: `Owner`, `Admin`.  This endpoint is not available to all users.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter advancedAuctionItemsGetRequest: (body) Request object used to get bid options values for a batch of retail catalog items 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<AdvancedAuctionItems> 
     */
    open class func advancedAuctionItemsGetPostWithRequestBuilder(advancedAuctionItemsGetRequest: AdvancedAuctionItemsGetRequest, adAccountId: String? = nil) -> RequestBuilder<AdvancedAuctionItems> {
        let localVariablePath = "/advanced_auction/items/get"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: advancedAuctionItemsGetRequest)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AdvancedAuctionItems>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Operate on item level bid options
     
     - parameter advancedAuctionItemsSubmitRequest: (body) Request object used to upsert or delete bid options for a batch of retail catalog items 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func advancedAuctionItemsSubmitPost(advancedAuctionItemsSubmitRequest: AdvancedAuctionItemsSubmitRequest, adAccountId: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AdvancedAuctionProcessedItems?, _ error: Error?) -> Void)) -> RequestTask {
        return advancedAuctionItemsSubmitPostWithRequestBuilder(advancedAuctionItemsSubmitRequest: advancedAuctionItemsSubmitRequest, adAccountId: adAccountId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Operate on item level bid options
     - POST /advanced_auction/items/submit
     - This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type `CATALOG_SALES` and ad groups using bid_strategy_type `MAX_BID`.  The catalog must be owned by the \"operation user_account\". <a href=\"/docs/api-features/modify-items-in-batch/\" target=\"_blank\">See detailed documentation here.</a> By default, the \"operation user_account\" is the token user_account.  Optional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: `Owner`, `Admin`.  This endpoint is not available to all users.
     - OAuth:
       - type: oauth2
       - name: pinterest_oauth2
     - parameter advancedAuctionItemsSubmitRequest: (body) Request object used to upsert or delete bid options for a batch of retail catalog items 
     - parameter adAccountId: (query) Unique identifier of an ad account. (optional)
     - returns: RequestBuilder<AdvancedAuctionProcessedItems> 
     */
    open class func advancedAuctionItemsSubmitPostWithRequestBuilder(advancedAuctionItemsSubmitRequest: AdvancedAuctionItemsSubmitRequest, adAccountId: String? = nil) -> RequestBuilder<AdvancedAuctionProcessedItems> {
        let localVariablePath = "/advanced_auction/items/submit"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: advancedAuctionItemsSubmitRequest)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ad_account_id": (wrappedValue: adAccountId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AdvancedAuctionProcessedItems>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
