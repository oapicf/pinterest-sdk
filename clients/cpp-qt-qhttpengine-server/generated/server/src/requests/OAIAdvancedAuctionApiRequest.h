/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIAdvancedAuctionApiRequest_H
#define OAI_OAIAdvancedAuctionApiRequest_H

#include <QObject>
#include <QStringList>
#include <QMultiMap>
#include <QNetworkReply>
#include <QSharedPointer>

#include <qhttpengine/socket.h>
#include "OAIAdvancedAuctionItems.h"
#include "OAIAdvancedAuctionItemsGetRequest.h"
#include "OAIAdvancedAuctionItemsSubmitRequest.h"
#include "OAIAdvancedAuctionProcessedItems.h"
#include "OAIError.h"
#include <QString>
#include "OAIAdvancedAuctionApiHandler.h"

namespace OpenAPI {

class OAIAdvancedAuctionApiRequest : public QObject
{
    Q_OBJECT

public:
    OAIAdvancedAuctionApiRequest(QHttpEngine::Socket *s, QSharedPointer<OAIAdvancedAuctionApiHandler> handler);
    virtual ~OAIAdvancedAuctionApiRequest();

    void advancedAuctionItemsGet_postRequest();
    void advancedAuctionItemsSubmit_postRequest();
    

    void advancedAuctionItemsGet_postResponse(const OAIAdvancedAuctionItems& res);
    void advancedAuctionItemsSubmit_postResponse(const OAIAdvancedAuctionProcessedItems& res);
    

    void advancedAuctionItemsGet_postError(const OAIAdvancedAuctionItems& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void advancedAuctionItemsSubmit_postError(const OAIAdvancedAuctionProcessedItems& res, QNetworkReply::NetworkError error_type, QString& error_str);
    

    void sendCustomResponse(QByteArray & res, QNetworkReply::NetworkError error_type);

    void sendCustomResponse(QIODevice *res, QNetworkReply::NetworkError error_type);

    QMap<QString, QString> getRequestHeaders() const;

    QHttpEngine::Socket* getRawSocket();

    void setResponseHeaders(const QMultiMap<QString,QString>& headers);

Q_SIGNALS:
    void advancedAuctionItemsGet_post(OAIAdvancedAuctionItemsGetRequest oai_advanced_auction_items_get_request, QString ad_account_id);
    void advancedAuctionItemsSubmit_post(OAIAdvancedAuctionItemsSubmitRequest oai_advanced_auction_items_submit_request, QString ad_account_id);
    

private:
    QMap<QString, QString> requestHeaders;
    QMap<QString, QString> responseHeaders;
    QHttpEngine::Socket  *socket;
    QSharedPointer<OAIAdvancedAuctionApiHandler> handler;

    inline void setSocketResponseHeaders(){
        QHttpEngine::Socket::HeaderMap resHeaders;
        for(auto itr = responseHeaders.begin(); itr != responseHeaders.end(); ++itr) {
            resHeaders.insert(itr.key().toUtf8(), itr.value().toUtf8());
        }
        socket->setHeaders(resHeaders);
    }
};

}

#endif // OAI_OAIAdvancedAuctionApiRequest_H
