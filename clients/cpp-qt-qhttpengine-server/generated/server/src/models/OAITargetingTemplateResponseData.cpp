/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetingTemplateResponseData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetingTemplateResponseData::OAITargetingTemplateResponseData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetingTemplateResponseData::OAITargetingTemplateResponseData() {
    this->initializeModel();
}

OAITargetingTemplateResponseData::~OAITargetingTemplateResponseData() {}

void OAITargetingTemplateResponseData::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_auto_targeting_enabled_isSet = false;
    m_auto_targeting_enabled_isValid = false;

    m_targeting_attributes_isSet = false;
    m_targeting_attributes_isValid = false;

    m_placement_group_isSet = false;
    m_placement_group_isValid = false;

    m_keywords_isSet = false;
    m_keywords_isValid = false;

    m_tracking_urls_isSet = false;
    m_tracking_urls_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_updated_time_isSet = false;
    m_updated_time_isValid = false;

    m_ad_account_id_isSet = false;
    m_ad_account_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_sizing_isSet = false;
    m_sizing_isValid = false;
}

void OAITargetingTemplateResponseData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetingTemplateResponseData::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_auto_targeting_enabled_isValid = ::OpenAPI::fromJsonValue(auto_targeting_enabled, json[QString("auto_targeting_enabled")]);
    m_auto_targeting_enabled_isSet = !json[QString("auto_targeting_enabled")].isNull() && m_auto_targeting_enabled_isValid;

    m_targeting_attributes_isValid = ::OpenAPI::fromJsonValue(targeting_attributes, json[QString("targeting_attributes")]);
    m_targeting_attributes_isSet = !json[QString("targeting_attributes")].isNull() && m_targeting_attributes_isValid;

    m_placement_group_isValid = ::OpenAPI::fromJsonValue(placement_group, json[QString("placement_group")]);
    m_placement_group_isSet = !json[QString("placement_group")].isNull() && m_placement_group_isValid;

    m_keywords_isValid = ::OpenAPI::fromJsonValue(keywords, json[QString("keywords")]);
    m_keywords_isSet = !json[QString("keywords")].isNull() && m_keywords_isValid;

    m_tracking_urls_isValid = ::OpenAPI::fromJsonValue(tracking_urls, json[QString("tracking_urls")]);
    m_tracking_urls_isSet = !json[QString("tracking_urls")].isNull() && m_tracking_urls_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_updated_time_isValid = ::OpenAPI::fromJsonValue(updated_time, json[QString("updated_time")]);
    m_updated_time_isSet = !json[QString("updated_time")].isNull() && m_updated_time_isValid;

    m_ad_account_id_isValid = ::OpenAPI::fromJsonValue(ad_account_id, json[QString("ad_account_id")]);
    m_ad_account_id_isSet = !json[QString("ad_account_id")].isNull() && m_ad_account_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_sizing_isValid = ::OpenAPI::fromJsonValue(sizing, json[QString("sizing")]);
    m_sizing_isSet = !json[QString("sizing")].isNull() && m_sizing_isValid;
}

QString OAITargetingTemplateResponseData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetingTemplateResponseData::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_auto_targeting_enabled_isSet) {
        obj.insert(QString("auto_targeting_enabled"), ::OpenAPI::toJsonValue(auto_targeting_enabled));
    }
    if (targeting_attributes.isSet()) {
        obj.insert(QString("targeting_attributes"), ::OpenAPI::toJsonValue(targeting_attributes));
    }
    if (placement_group.isSet()) {
        obj.insert(QString("placement_group"), ::OpenAPI::toJsonValue(placement_group));
    }
    if (keywords.size() > 0) {
        obj.insert(QString("keywords"), ::OpenAPI::toJsonValue(keywords));
    }
    if (tracking_urls.isSet()) {
        obj.insert(QString("tracking_urls"), ::OpenAPI::toJsonValue(tracking_urls));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(created_time));
    }
    if (m_updated_time_isSet) {
        obj.insert(QString("updated_time"), ::OpenAPI::toJsonValue(updated_time));
    }
    if (m_ad_account_id_isSet) {
        obj.insert(QString("ad_account_id"), ::OpenAPI::toJsonValue(ad_account_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(status));
    }
    if (sizing.isSet()) {
        obj.insert(QString("sizing"), ::OpenAPI::toJsonValue(sizing));
    }
    return obj;
}

QString OAITargetingTemplateResponseData::getName() const {
    return name;
}
void OAITargetingTemplateResponseData::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAITargetingTemplateResponseData::is_name_Set() const{
    return m_name_isSet;
}

bool OAITargetingTemplateResponseData::is_name_Valid() const{
    return m_name_isValid;
}

bool OAITargetingTemplateResponseData::isAutoTargetingEnabled() const {
    return auto_targeting_enabled;
}
void OAITargetingTemplateResponseData::setAutoTargetingEnabled(const bool &auto_targeting_enabled) {
    this->auto_targeting_enabled = auto_targeting_enabled;
    this->m_auto_targeting_enabled_isSet = true;
}

bool OAITargetingTemplateResponseData::is_auto_targeting_enabled_Set() const{
    return m_auto_targeting_enabled_isSet;
}

bool OAITargetingTemplateResponseData::is_auto_targeting_enabled_Valid() const{
    return m_auto_targeting_enabled_isValid;
}

OAITargetingSpec OAITargetingTemplateResponseData::getTargetingAttributes() const {
    return targeting_attributes;
}
void OAITargetingTemplateResponseData::setTargetingAttributes(const OAITargetingSpec &targeting_attributes) {
    this->targeting_attributes = targeting_attributes;
    this->m_targeting_attributes_isSet = true;
}

bool OAITargetingTemplateResponseData::is_targeting_attributes_Set() const{
    return m_targeting_attributes_isSet;
}

bool OAITargetingTemplateResponseData::is_targeting_attributes_Valid() const{
    return m_targeting_attributes_isValid;
}

OAIPlacementGroupType OAITargetingTemplateResponseData::getPlacementGroup() const {
    return placement_group;
}
void OAITargetingTemplateResponseData::setPlacementGroup(const OAIPlacementGroupType &placement_group) {
    this->placement_group = placement_group;
    this->m_placement_group_isSet = true;
}

bool OAITargetingTemplateResponseData::is_placement_group_Set() const{
    return m_placement_group_isSet;
}

bool OAITargetingTemplateResponseData::is_placement_group_Valid() const{
    return m_placement_group_isValid;
}

QList<OAITargetingTemplateKeyword> OAITargetingTemplateResponseData::getKeywords() const {
    return keywords;
}
void OAITargetingTemplateResponseData::setKeywords(const QList<OAITargetingTemplateKeyword> &keywords) {
    this->keywords = keywords;
    this->m_keywords_isSet = true;
}

bool OAITargetingTemplateResponseData::is_keywords_Set() const{
    return m_keywords_isSet;
}

bool OAITargetingTemplateResponseData::is_keywords_Valid() const{
    return m_keywords_isValid;
}

OAITrackingUrls OAITargetingTemplateResponseData::getTrackingUrls() const {
    return tracking_urls;
}
void OAITargetingTemplateResponseData::setTrackingUrls(const OAITrackingUrls &tracking_urls) {
    this->tracking_urls = tracking_urls;
    this->m_tracking_urls_isSet = true;
}

bool OAITargetingTemplateResponseData::is_tracking_urls_Set() const{
    return m_tracking_urls_isSet;
}

bool OAITargetingTemplateResponseData::is_tracking_urls_Valid() const{
    return m_tracking_urls_isValid;
}

QString OAITargetingTemplateResponseData::getId() const {
    return id;
}
void OAITargetingTemplateResponseData::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAITargetingTemplateResponseData::is_id_Set() const{
    return m_id_isSet;
}

bool OAITargetingTemplateResponseData::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAITargetingTemplateResponseData::getCreatedTime() const {
    return created_time;
}
void OAITargetingTemplateResponseData::setCreatedTime(const qint32 &created_time) {
    this->created_time = created_time;
    this->m_created_time_isSet = true;
}

bool OAITargetingTemplateResponseData::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAITargetingTemplateResponseData::is_created_time_Valid() const{
    return m_created_time_isValid;
}

qint32 OAITargetingTemplateResponseData::getUpdatedTime() const {
    return updated_time;
}
void OAITargetingTemplateResponseData::setUpdatedTime(const qint32 &updated_time) {
    this->updated_time = updated_time;
    this->m_updated_time_isSet = true;
}

bool OAITargetingTemplateResponseData::is_updated_time_Set() const{
    return m_updated_time_isSet;
}

bool OAITargetingTemplateResponseData::is_updated_time_Valid() const{
    return m_updated_time_isValid;
}

QString OAITargetingTemplateResponseData::getAdAccountId() const {
    return ad_account_id;
}
void OAITargetingTemplateResponseData::setAdAccountId(const QString &ad_account_id) {
    this->ad_account_id = ad_account_id;
    this->m_ad_account_id_isSet = true;
}

bool OAITargetingTemplateResponseData::is_ad_account_id_Set() const{
    return m_ad_account_id_isSet;
}

bool OAITargetingTemplateResponseData::is_ad_account_id_Valid() const{
    return m_ad_account_id_isValid;
}

QString OAITargetingTemplateResponseData::getStatus() const {
    return status;
}
void OAITargetingTemplateResponseData::setStatus(const QString &status) {
    this->status = status;
    this->m_status_isSet = true;
}

bool OAITargetingTemplateResponseData::is_status_Set() const{
    return m_status_isSet;
}

bool OAITargetingTemplateResponseData::is_status_Valid() const{
    return m_status_isValid;
}

OAITargetingTemplateAudienceSizing OAITargetingTemplateResponseData::getSizing() const {
    return sizing;
}
void OAITargetingTemplateResponseData::setSizing(const OAITargetingTemplateAudienceSizing &sizing) {
    this->sizing = sizing;
    this->m_sizing_isSet = true;
}

bool OAITargetingTemplateResponseData::is_sizing_Set() const{
    return m_sizing_isSet;
}

bool OAITargetingTemplateResponseData::is_sizing_Valid() const{
    return m_sizing_isValid;
}

bool OAITargetingTemplateResponseData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_targeting_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (targeting_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (placement_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (keywords.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (tracking_urls.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ad_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (sizing.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetingTemplateResponseData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
