/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogsDbItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogsDbItem::OAICatalogsDbItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogsDbItem::OAICatalogsDbItem() {
    this->initializeModel();
}

OAICatalogsDbItem::~OAICatalogsDbItem() {}

void OAICatalogsDbItem::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAICatalogsDbItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogsDbItem::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAICatalogsDbItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogsDbItem::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(updated_at));
    }
    return obj;
}

QDateTime OAICatalogsDbItem::getCreatedAt() const {
    return created_at;
}
void OAICatalogsDbItem::setCreatedAt(const QDateTime &created_at) {
    this->created_at = created_at;
    this->m_created_at_isSet = true;
}

bool OAICatalogsDbItem::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICatalogsDbItem::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICatalogsDbItem::getId() const {
    return id;
}
void OAICatalogsDbItem::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAICatalogsDbItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAICatalogsDbItem::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAICatalogsDbItem::getUpdatedAt() const {
    return updated_at;
}
void OAICatalogsDbItem::setUpdatedAt(const QDateTime &updated_at) {
    this->updated_at = updated_at;
    this->m_updated_at_isSet = true;
}

bool OAICatalogsDbItem::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICatalogsDbItem::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAICatalogsDbItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogsDbItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_id_isValid && m_updated_at_isValid && true;
}

} // namespace OpenAPI
