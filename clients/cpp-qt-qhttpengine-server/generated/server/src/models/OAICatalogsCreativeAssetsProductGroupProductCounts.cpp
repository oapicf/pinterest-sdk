/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogsCreativeAssetsProductGroupProductCounts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogsCreativeAssetsProductGroupProductCounts::OAICatalogsCreativeAssetsProductGroupProductCounts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogsCreativeAssetsProductGroupProductCounts::OAICatalogsCreativeAssetsProductGroupProductCounts() {
    this->initializeModel();
}

OAICatalogsCreativeAssetsProductGroupProductCounts::~OAICatalogsCreativeAssetsProductGroupProductCounts() {}

void OAICatalogsCreativeAssetsProductGroupProductCounts::initializeModel() {

    m_catalog_type_isSet = false;
    m_catalog_type_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_videos_isSet = false;
    m_videos_isValid = false;
}

void OAICatalogsCreativeAssetsProductGroupProductCounts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogsCreativeAssetsProductGroupProductCounts::fromJsonObject(QJsonObject json) {

    m_catalog_type_isValid = ::OpenAPI::fromJsonValue(catalog_type, json[QString("catalog_type")]);
    m_catalog_type_isSet = !json[QString("catalog_type")].isNull() && m_catalog_type_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_videos_isValid = ::OpenAPI::fromJsonValue(videos, json[QString("videos")]);
    m_videos_isSet = !json[QString("videos")].isNull() && m_videos_isValid;
}

QString OAICatalogsCreativeAssetsProductGroupProductCounts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogsCreativeAssetsProductGroupProductCounts::asJsonObject() const {
    QJsonObject obj;
    if (m_catalog_type_isSet) {
        obj.insert(QString("catalog_type"), ::OpenAPI::toJsonValue(catalog_type));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(total));
    }
    if (m_videos_isSet) {
        obj.insert(QString("videos"), ::OpenAPI::toJsonValue(videos));
    }
    return obj;
}

QString OAICatalogsCreativeAssetsProductGroupProductCounts::getCatalogType() const {
    return catalog_type;
}
void OAICatalogsCreativeAssetsProductGroupProductCounts::setCatalogType(const QString &catalog_type) {
    this->catalog_type = catalog_type;
    this->m_catalog_type_isSet = true;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::is_catalog_type_Set() const{
    return m_catalog_type_isSet;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::is_catalog_type_Valid() const{
    return m_catalog_type_isValid;
}

double OAICatalogsCreativeAssetsProductGroupProductCounts::getTotal() const {
    return total;
}
void OAICatalogsCreativeAssetsProductGroupProductCounts::setTotal(const double &total) {
    this->total = total;
    this->m_total_isSet = true;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::is_total_Set() const{
    return m_total_isSet;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::is_total_Valid() const{
    return m_total_isValid;
}

double OAICatalogsCreativeAssetsProductGroupProductCounts::getVideos() const {
    return videos;
}
void OAICatalogsCreativeAssetsProductGroupProductCounts::setVideos(const double &videos) {
    this->videos = videos;
    this->m_videos_isSet = true;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::is_videos_Set() const{
    return m_videos_isSet;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::is_videos_Valid() const{
    return m_videos_isValid;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_catalog_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_videos_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogsCreativeAssetsProductGroupProductCounts::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_catalog_type_isValid && m_total_isValid && m_videos_isValid && true;
}

} // namespace OpenAPI
