/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPinMediaWithImage_allOf_images.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPinMediaWithImage_allOf_images::OAIPinMediaWithImage_allOf_images(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPinMediaWithImage_allOf_images::OAIPinMediaWithImage_allOf_images() {
    this->initializeModel();
}

OAIPinMediaWithImage_allOf_images::~OAIPinMediaWithImage_allOf_images() {}

void OAIPinMediaWithImage_allOf_images::initializeModel() {

    m_r_150x150_isSet = false;
    m_r_150x150_isValid = false;

    m_r_400x300_isSet = false;
    m_r_400x300_isValid = false;

    m_r_600x_isSet = false;
    m_r_600x_isValid = false;

    m_r_1200x_isSet = false;
    m_r_1200x_isValid = false;
}

void OAIPinMediaWithImage_allOf_images::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPinMediaWithImage_allOf_images::fromJsonObject(QJsonObject json) {

    m_r_150x150_isValid = ::OpenAPI::fromJsonValue(r_150x150, json[QString("150x150")]);
    m_r_150x150_isSet = !json[QString("150x150")].isNull() && m_r_150x150_isValid;

    m_r_400x300_isValid = ::OpenAPI::fromJsonValue(r_400x300, json[QString("400x300")]);
    m_r_400x300_isSet = !json[QString("400x300")].isNull() && m_r_400x300_isValid;

    m_r_600x_isValid = ::OpenAPI::fromJsonValue(r_600x, json[QString("600x")]);
    m_r_600x_isSet = !json[QString("600x")].isNull() && m_r_600x_isValid;

    m_r_1200x_isValid = ::OpenAPI::fromJsonValue(r_1200x, json[QString("1200x")]);
    m_r_1200x_isSet = !json[QString("1200x")].isNull() && m_r_1200x_isValid;
}

QString OAIPinMediaWithImage_allOf_images::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPinMediaWithImage_allOf_images::asJsonObject() const {
    QJsonObject obj;
    if (m_r_150x150_isSet) {
        obj.insert(QString("150x150"), ::OpenAPI::toJsonValue(r_150x150));
    }
    if (m_r_400x300_isSet) {
        obj.insert(QString("400x300"), ::OpenAPI::toJsonValue(r_400x300));
    }
    if (m_r_600x_isSet) {
        obj.insert(QString("600x"), ::OpenAPI::toJsonValue(r_600x));
    }
    if (m_r_1200x_isSet) {
        obj.insert(QString("1200x"), ::OpenAPI::toJsonValue(r_1200x));
    }
    return obj;
}

OAIObject OAIPinMediaWithImage_allOf_images::getR150x150() const {
    return r_150x150;
}
void OAIPinMediaWithImage_allOf_images::setR150x150(const OAIObject &r_150x150) {
    this->r_150x150 = r_150x150;
    this->m_r_150x150_isSet = true;
}

bool OAIPinMediaWithImage_allOf_images::is_r_150x150_Set() const{
    return m_r_150x150_isSet;
}

bool OAIPinMediaWithImage_allOf_images::is_r_150x150_Valid() const{
    return m_r_150x150_isValid;
}

OAIObject OAIPinMediaWithImage_allOf_images::getR400x300() const {
    return r_400x300;
}
void OAIPinMediaWithImage_allOf_images::setR400x300(const OAIObject &r_400x300) {
    this->r_400x300 = r_400x300;
    this->m_r_400x300_isSet = true;
}

bool OAIPinMediaWithImage_allOf_images::is_r_400x300_Set() const{
    return m_r_400x300_isSet;
}

bool OAIPinMediaWithImage_allOf_images::is_r_400x300_Valid() const{
    return m_r_400x300_isValid;
}

OAIObject OAIPinMediaWithImage_allOf_images::getR600x() const {
    return r_600x;
}
void OAIPinMediaWithImage_allOf_images::setR600x(const OAIObject &r_600x) {
    this->r_600x = r_600x;
    this->m_r_600x_isSet = true;
}

bool OAIPinMediaWithImage_allOf_images::is_r_600x_Set() const{
    return m_r_600x_isSet;
}

bool OAIPinMediaWithImage_allOf_images::is_r_600x_Valid() const{
    return m_r_600x_isValid;
}

OAIObject OAIPinMediaWithImage_allOf_images::getR1200x() const {
    return r_1200x;
}
void OAIPinMediaWithImage_allOf_images::setR1200x(const OAIObject &r_1200x) {
    this->r_1200x = r_1200x;
    this->m_r_1200x_isSet = true;
}

bool OAIPinMediaWithImage_allOf_images::is_r_1200x_Set() const{
    return m_r_1200x_isSet;
}

bool OAIPinMediaWithImage_allOf_images::is_r_1200x_Valid() const{
    return m_r_1200x_isValid;
}

bool OAIPinMediaWithImage_allOf_images::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_150x150_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_400x300_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_600x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_1200x_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPinMediaWithImage_allOf_images::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
