/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeywordMetricsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeywordMetricsResponse::OAIKeywordMetricsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeywordMetricsResponse::OAIKeywordMetricsResponse() {
    this->initializeModel();
}

OAIKeywordMetricsResponse::~OAIKeywordMetricsResponse() {}

void OAIKeywordMetricsResponse::initializeModel() {

    m_keyword_isSet = false;
    m_keyword_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;
}

void OAIKeywordMetricsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeywordMetricsResponse::fromJsonObject(QJsonObject json) {

    m_keyword_isValid = ::OpenAPI::fromJsonValue(keyword, json[QString("keyword")]);
    m_keyword_isSet = !json[QString("keyword")].isNull() && m_keyword_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;
}

QString OAIKeywordMetricsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeywordMetricsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_keyword_isSet) {
        obj.insert(QString("keyword"), ::OpenAPI::toJsonValue(keyword));
    }
    if (metrics.isSet()) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(metrics));
    }
    return obj;
}

QString OAIKeywordMetricsResponse::getKeyword() const {
    return keyword;
}
void OAIKeywordMetricsResponse::setKeyword(const QString &keyword) {
    this->keyword = keyword;
    this->m_keyword_isSet = true;
}

bool OAIKeywordMetricsResponse::is_keyword_Set() const{
    return m_keyword_isSet;
}

bool OAIKeywordMetricsResponse::is_keyword_Valid() const{
    return m_keyword_isValid;
}

OAIKeywordMetrics OAIKeywordMetricsResponse::getMetrics() const {
    return metrics;
}
void OAIKeywordMetricsResponse::setMetrics(const OAIKeywordMetrics &metrics) {
    this->metrics = metrics;
    this->m_metrics_isSet = true;
}

bool OAIKeywordMetricsResponse::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIKeywordMetricsResponse::is_metrics_Valid() const{
    return m_metrics_isValid;
}

bool OAIKeywordMetricsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_keyword_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeywordMetricsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
