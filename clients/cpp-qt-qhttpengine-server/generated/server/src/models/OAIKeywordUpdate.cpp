/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeywordUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeywordUpdate::OAIKeywordUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeywordUpdate::OAIKeywordUpdate() {
    this->initializeModel();
}

OAIKeywordUpdate::~OAIKeywordUpdate() {}

void OAIKeywordUpdate::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_archived_isSet = false;
    m_archived_isValid = false;

    m_bid_isSet = false;
    m_bid_isValid = false;
}

void OAIKeywordUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeywordUpdate::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_archived_isValid = ::OpenAPI::fromJsonValue(archived, json[QString("archived")]);
    m_archived_isSet = !json[QString("archived")].isNull() && m_archived_isValid;

    m_bid_isValid = ::OpenAPI::fromJsonValue(bid, json[QString("bid")]);
    m_bid_isSet = !json[QString("bid")].isNull() && m_bid_isValid;
}

QString OAIKeywordUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeywordUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_archived_isSet) {
        obj.insert(QString("archived"), ::OpenAPI::toJsonValue(archived));
    }
    if (m_bid_isSet) {
        obj.insert(QString("bid"), ::OpenAPI::toJsonValue(bid));
    }
    return obj;
}

QString OAIKeywordUpdate::getId() const {
    return id;
}
void OAIKeywordUpdate::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIKeywordUpdate::is_id_Set() const{
    return m_id_isSet;
}

bool OAIKeywordUpdate::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIKeywordUpdate::isArchived() const {
    return archived;
}
void OAIKeywordUpdate::setArchived(const bool &archived) {
    this->archived = archived;
    this->m_archived_isSet = true;
}

bool OAIKeywordUpdate::is_archived_Set() const{
    return m_archived_isSet;
}

bool OAIKeywordUpdate::is_archived_Valid() const{
    return m_archived_isValid;
}

qint32 OAIKeywordUpdate::getBid() const {
    return bid;
}
void OAIKeywordUpdate::setBid(const qint32 &bid) {
    this->bid = bid;
    this->m_bid_isSet = true;
}

bool OAIKeywordUpdate::is_bid_Set() const{
    return m_bid_isSet;
}

bool OAIKeywordUpdate::is_bid_Valid() const{
    return m_bid_isValid;
}

bool OAIKeywordUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_archived_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeywordUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && true;
}

} // namespace OpenAPI
