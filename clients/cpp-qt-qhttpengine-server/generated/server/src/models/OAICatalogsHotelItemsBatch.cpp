/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogsHotelItemsBatch.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogsHotelItemsBatch::OAICatalogsHotelItemsBatch(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogsHotelItemsBatch::OAICatalogsHotelItemsBatch() {
    this->initializeModel();
}

OAICatalogsHotelItemsBatch::~OAICatalogsHotelItemsBatch() {}

void OAICatalogsHotelItemsBatch::initializeModel() {

    m_batch_id_isSet = false;
    m_batch_id_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_completed_time_isSet = false;
    m_completed_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_catalog_type_isSet = false;
    m_catalog_type_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;
}

void OAICatalogsHotelItemsBatch::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogsHotelItemsBatch::fromJsonObject(QJsonObject json) {

    m_batch_id_isValid = ::OpenAPI::fromJsonValue(batch_id, json[QString("batch_id")]);
    m_batch_id_isSet = !json[QString("batch_id")].isNull() && m_batch_id_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_completed_time_isValid = ::OpenAPI::fromJsonValue(completed_time, json[QString("completed_time")]);
    m_completed_time_isSet = !json[QString("completed_time")].isNull() && m_completed_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_catalog_type_isValid = ::OpenAPI::fromJsonValue(catalog_type, json[QString("catalog_type")]);
    m_catalog_type_isSet = !json[QString("catalog_type")].isNull() && m_catalog_type_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;
}

QString OAICatalogsHotelItemsBatch::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogsHotelItemsBatch::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_id_isSet) {
        obj.insert(QString("batch_id"), ::OpenAPI::toJsonValue(batch_id));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(created_time));
    }
    if (m_completed_time_isSet) {
        obj.insert(QString("completed_time"), ::OpenAPI::toJsonValue(completed_time));
    }
    if (status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(status));
    }
    if (catalog_type.isSet()) {
        obj.insert(QString("catalog_type"), ::OpenAPI::toJsonValue(catalog_type));
    }
    if (items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(items));
    }
    return obj;
}

QString OAICatalogsHotelItemsBatch::getBatchId() const {
    return batch_id;
}
void OAICatalogsHotelItemsBatch::setBatchId(const QString &batch_id) {
    this->batch_id = batch_id;
    this->m_batch_id_isSet = true;
}

bool OAICatalogsHotelItemsBatch::is_batch_id_Set() const{
    return m_batch_id_isSet;
}

bool OAICatalogsHotelItemsBatch::is_batch_id_Valid() const{
    return m_batch_id_isValid;
}

QDateTime OAICatalogsHotelItemsBatch::getCreatedTime() const {
    return created_time;
}
void OAICatalogsHotelItemsBatch::setCreatedTime(const QDateTime &created_time) {
    this->created_time = created_time;
    this->m_created_time_isSet = true;
}

bool OAICatalogsHotelItemsBatch::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAICatalogsHotelItemsBatch::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QDateTime OAICatalogsHotelItemsBatch::getCompletedTime() const {
    return completed_time;
}
void OAICatalogsHotelItemsBatch::setCompletedTime(const QDateTime &completed_time) {
    this->completed_time = completed_time;
    this->m_completed_time_isSet = true;
}

bool OAICatalogsHotelItemsBatch::is_completed_time_Set() const{
    return m_completed_time_isSet;
}

bool OAICatalogsHotelItemsBatch::is_completed_time_Valid() const{
    return m_completed_time_isValid;
}

OAIBatchOperationStatus OAICatalogsHotelItemsBatch::getStatus() const {
    return status;
}
void OAICatalogsHotelItemsBatch::setStatus(const OAIBatchOperationStatus &status) {
    this->status = status;
    this->m_status_isSet = true;
}

bool OAICatalogsHotelItemsBatch::is_status_Set() const{
    return m_status_isSet;
}

bool OAICatalogsHotelItemsBatch::is_status_Valid() const{
    return m_status_isValid;
}

OAICatalogsType OAICatalogsHotelItemsBatch::getCatalogType() const {
    return catalog_type;
}
void OAICatalogsHotelItemsBatch::setCatalogType(const OAICatalogsType &catalog_type) {
    this->catalog_type = catalog_type;
    this->m_catalog_type_isSet = true;
}

bool OAICatalogsHotelItemsBatch::is_catalog_type_Set() const{
    return m_catalog_type_isSet;
}

bool OAICatalogsHotelItemsBatch::is_catalog_type_Valid() const{
    return m_catalog_type_isValid;
}

QList<OAIHotelProcessingRecord> OAICatalogsHotelItemsBatch::getItems() const {
    return items;
}
void OAICatalogsHotelItemsBatch::setItems(const QList<OAIHotelProcessingRecord> &items) {
    this->items = items;
    this->m_items_isSet = true;
}

bool OAICatalogsHotelItemsBatch::is_items_Set() const{
    return m_items_isSet;
}

bool OAICatalogsHotelItemsBatch::is_items_Valid() const{
    return m_items_isValid;
}

bool OAICatalogsHotelItemsBatch::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (catalog_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogsHotelItemsBatch::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_catalog_type_isValid && true;
}

} // namespace OpenAPI
