/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeadFormQuestion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeadFormQuestion::OAILeadFormQuestion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeadFormQuestion::OAILeadFormQuestion() {
    this->initializeModel();
}

OAILeadFormQuestion::~OAILeadFormQuestion() {}

void OAILeadFormQuestion::initializeModel() {

    m_question_type_isSet = false;
    m_question_type_isValid = false;

    m_custom_question_field_type_isSet = false;
    m_custom_question_field_type_isValid = false;

    m_custom_question_label_isSet = false;
    m_custom_question_label_isValid = false;

    m_custom_question_options_isSet = false;
    m_custom_question_options_isValid = false;
}

void OAILeadFormQuestion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeadFormQuestion::fromJsonObject(QJsonObject json) {

    m_question_type_isValid = ::OpenAPI::fromJsonValue(question_type, json[QString("question_type")]);
    m_question_type_isSet = !json[QString("question_type")].isNull() && m_question_type_isValid;

    m_custom_question_field_type_isValid = ::OpenAPI::fromJsonValue(custom_question_field_type, json[QString("custom_question_field_type")]);
    m_custom_question_field_type_isSet = !json[QString("custom_question_field_type")].isNull() && m_custom_question_field_type_isValid;

    m_custom_question_label_isValid = ::OpenAPI::fromJsonValue(custom_question_label, json[QString("custom_question_label")]);
    m_custom_question_label_isSet = !json[QString("custom_question_label")].isNull() && m_custom_question_label_isValid;

    m_custom_question_options_isValid = ::OpenAPI::fromJsonValue(custom_question_options, json[QString("custom_question_options")]);
    m_custom_question_options_isSet = !json[QString("custom_question_options")].isNull() && m_custom_question_options_isValid;
}

QString OAILeadFormQuestion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeadFormQuestion::asJsonObject() const {
    QJsonObject obj;
    if (question_type.isSet()) {
        obj.insert(QString("question_type"), ::OpenAPI::toJsonValue(question_type));
    }
    if (custom_question_field_type.isSet()) {
        obj.insert(QString("custom_question_field_type"), ::OpenAPI::toJsonValue(custom_question_field_type));
    }
    if (m_custom_question_label_isSet) {
        obj.insert(QString("custom_question_label"), ::OpenAPI::toJsonValue(custom_question_label));
    }
    if (custom_question_options.size() > 0) {
        obj.insert(QString("custom_question_options"), ::OpenAPI::toJsonValue(custom_question_options));
    }
    return obj;
}

OAILeadFormQuestionType OAILeadFormQuestion::getQuestionType() const {
    return question_type;
}
void OAILeadFormQuestion::setQuestionType(const OAILeadFormQuestionType &question_type) {
    this->question_type = question_type;
    this->m_question_type_isSet = true;
}

bool OAILeadFormQuestion::is_question_type_Set() const{
    return m_question_type_isSet;
}

bool OAILeadFormQuestion::is_question_type_Valid() const{
    return m_question_type_isValid;
}

OAILeadFormQuestionFieldType OAILeadFormQuestion::getCustomQuestionFieldType() const {
    return custom_question_field_type;
}
void OAILeadFormQuestion::setCustomQuestionFieldType(const OAILeadFormQuestionFieldType &custom_question_field_type) {
    this->custom_question_field_type = custom_question_field_type;
    this->m_custom_question_field_type_isSet = true;
}

bool OAILeadFormQuestion::is_custom_question_field_type_Set() const{
    return m_custom_question_field_type_isSet;
}

bool OAILeadFormQuestion::is_custom_question_field_type_Valid() const{
    return m_custom_question_field_type_isValid;
}

QString OAILeadFormQuestion::getCustomQuestionLabel() const {
    return custom_question_label;
}
void OAILeadFormQuestion::setCustomQuestionLabel(const QString &custom_question_label) {
    this->custom_question_label = custom_question_label;
    this->m_custom_question_label_isSet = true;
}

bool OAILeadFormQuestion::is_custom_question_label_Set() const{
    return m_custom_question_label_isSet;
}

bool OAILeadFormQuestion::is_custom_question_label_Valid() const{
    return m_custom_question_label_isValid;
}

QList<QString> OAILeadFormQuestion::getCustomQuestionOptions() const {
    return custom_question_options;
}
void OAILeadFormQuestion::setCustomQuestionOptions(const QList<QString> &custom_question_options) {
    this->custom_question_options = custom_question_options;
    this->m_custom_question_options_isSet = true;
}

bool OAILeadFormQuestion::is_custom_question_options_Set() const{
    return m_custom_question_options_isSet;
}

bool OAILeadFormQuestion::is_custom_question_options_Valid() const{
    return m_custom_question_options_isValid;
}

bool OAILeadFormQuestion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (question_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (custom_question_field_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_question_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (custom_question_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeadFormQuestion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
