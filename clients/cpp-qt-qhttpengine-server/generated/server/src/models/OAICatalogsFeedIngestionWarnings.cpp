/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogsFeedIngestionWarnings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogsFeedIngestionWarnings::OAICatalogsFeedIngestionWarnings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogsFeedIngestionWarnings::OAICatalogsFeedIngestionWarnings() {
    this->initializeModel();
}

OAICatalogsFeedIngestionWarnings::~OAICatalogsFeedIngestionWarnings() {}

void OAICatalogsFeedIngestionWarnings::initializeModel() {

    m_additional_image_level_internal_error_isSet = false;
    m_additional_image_level_internal_error_isValid = false;

    m_additional_image_file_not_accessible_isSet = false;
    m_additional_image_file_not_accessible_isValid = false;

    m_additional_image_malformed_url_isSet = false;
    m_additional_image_malformed_url_isValid = false;

    m_additional_image_file_not_found_isSet = false;
    m_additional_image_file_not_found_isValid = false;

    m_additional_image_invalid_file_isSet = false;
    m_additional_image_invalid_file_isValid = false;

    m_hotel_price_header_is_present_isSet = false;
    m_hotel_price_header_is_present_isValid = false;
}

void OAICatalogsFeedIngestionWarnings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogsFeedIngestionWarnings::fromJsonObject(QJsonObject json) {

    m_additional_image_level_internal_error_isValid = ::OpenAPI::fromJsonValue(additional_image_level_internal_error, json[QString("ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR")]);
    m_additional_image_level_internal_error_isSet = !json[QString("ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR")].isNull() && m_additional_image_level_internal_error_isValid;

    m_additional_image_file_not_accessible_isValid = ::OpenAPI::fromJsonValue(additional_image_file_not_accessible, json[QString("ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE")]);
    m_additional_image_file_not_accessible_isSet = !json[QString("ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE")].isNull() && m_additional_image_file_not_accessible_isValid;

    m_additional_image_malformed_url_isValid = ::OpenAPI::fromJsonValue(additional_image_malformed_url, json[QString("ADDITIONAL_IMAGE_MALFORMED_URL")]);
    m_additional_image_malformed_url_isSet = !json[QString("ADDITIONAL_IMAGE_MALFORMED_URL")].isNull() && m_additional_image_malformed_url_isValid;

    m_additional_image_file_not_found_isValid = ::OpenAPI::fromJsonValue(additional_image_file_not_found, json[QString("ADDITIONAL_IMAGE_FILE_NOT_FOUND")]);
    m_additional_image_file_not_found_isSet = !json[QString("ADDITIONAL_IMAGE_FILE_NOT_FOUND")].isNull() && m_additional_image_file_not_found_isValid;

    m_additional_image_invalid_file_isValid = ::OpenAPI::fromJsonValue(additional_image_invalid_file, json[QString("ADDITIONAL_IMAGE_INVALID_FILE")]);
    m_additional_image_invalid_file_isSet = !json[QString("ADDITIONAL_IMAGE_INVALID_FILE")].isNull() && m_additional_image_invalid_file_isValid;

    m_hotel_price_header_is_present_isValid = ::OpenAPI::fromJsonValue(hotel_price_header_is_present, json[QString("HOTEL_PRICE_HEADER_IS_PRESENT")]);
    m_hotel_price_header_is_present_isSet = !json[QString("HOTEL_PRICE_HEADER_IS_PRESENT")].isNull() && m_hotel_price_header_is_present_isValid;
}

QString OAICatalogsFeedIngestionWarnings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogsFeedIngestionWarnings::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_image_level_internal_error_isSet) {
        obj.insert(QString("ADDITIONAL_IMAGE_LEVEL_INTERNAL_ERROR"), ::OpenAPI::toJsonValue(additional_image_level_internal_error));
    }
    if (m_additional_image_file_not_accessible_isSet) {
        obj.insert(QString("ADDITIONAL_IMAGE_FILE_NOT_ACCESSIBLE"), ::OpenAPI::toJsonValue(additional_image_file_not_accessible));
    }
    if (m_additional_image_malformed_url_isSet) {
        obj.insert(QString("ADDITIONAL_IMAGE_MALFORMED_URL"), ::OpenAPI::toJsonValue(additional_image_malformed_url));
    }
    if (m_additional_image_file_not_found_isSet) {
        obj.insert(QString("ADDITIONAL_IMAGE_FILE_NOT_FOUND"), ::OpenAPI::toJsonValue(additional_image_file_not_found));
    }
    if (m_additional_image_invalid_file_isSet) {
        obj.insert(QString("ADDITIONAL_IMAGE_INVALID_FILE"), ::OpenAPI::toJsonValue(additional_image_invalid_file));
    }
    if (m_hotel_price_header_is_present_isSet) {
        obj.insert(QString("HOTEL_PRICE_HEADER_IS_PRESENT"), ::OpenAPI::toJsonValue(hotel_price_header_is_present));
    }
    return obj;
}

qint32 OAICatalogsFeedIngestionWarnings::getAdditionalImageLevelInternalError() const {
    return additional_image_level_internal_error;
}
void OAICatalogsFeedIngestionWarnings::setAdditionalImageLevelInternalError(const qint32 &additional_image_level_internal_error) {
    this->additional_image_level_internal_error = additional_image_level_internal_error;
    this->m_additional_image_level_internal_error_isSet = true;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_level_internal_error_Set() const{
    return m_additional_image_level_internal_error_isSet;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_level_internal_error_Valid() const{
    return m_additional_image_level_internal_error_isValid;
}

qint32 OAICatalogsFeedIngestionWarnings::getAdditionalImageFileNotAccessible() const {
    return additional_image_file_not_accessible;
}
void OAICatalogsFeedIngestionWarnings::setAdditionalImageFileNotAccessible(const qint32 &additional_image_file_not_accessible) {
    this->additional_image_file_not_accessible = additional_image_file_not_accessible;
    this->m_additional_image_file_not_accessible_isSet = true;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_file_not_accessible_Set() const{
    return m_additional_image_file_not_accessible_isSet;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_file_not_accessible_Valid() const{
    return m_additional_image_file_not_accessible_isValid;
}

qint32 OAICatalogsFeedIngestionWarnings::getAdditionalImageMalformedUrl() const {
    return additional_image_malformed_url;
}
void OAICatalogsFeedIngestionWarnings::setAdditionalImageMalformedUrl(const qint32 &additional_image_malformed_url) {
    this->additional_image_malformed_url = additional_image_malformed_url;
    this->m_additional_image_malformed_url_isSet = true;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_malformed_url_Set() const{
    return m_additional_image_malformed_url_isSet;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_malformed_url_Valid() const{
    return m_additional_image_malformed_url_isValid;
}

qint32 OAICatalogsFeedIngestionWarnings::getAdditionalImageFileNotFound() const {
    return additional_image_file_not_found;
}
void OAICatalogsFeedIngestionWarnings::setAdditionalImageFileNotFound(const qint32 &additional_image_file_not_found) {
    this->additional_image_file_not_found = additional_image_file_not_found;
    this->m_additional_image_file_not_found_isSet = true;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_file_not_found_Set() const{
    return m_additional_image_file_not_found_isSet;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_file_not_found_Valid() const{
    return m_additional_image_file_not_found_isValid;
}

qint32 OAICatalogsFeedIngestionWarnings::getAdditionalImageInvalidFile() const {
    return additional_image_invalid_file;
}
void OAICatalogsFeedIngestionWarnings::setAdditionalImageInvalidFile(const qint32 &additional_image_invalid_file) {
    this->additional_image_invalid_file = additional_image_invalid_file;
    this->m_additional_image_invalid_file_isSet = true;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_invalid_file_Set() const{
    return m_additional_image_invalid_file_isSet;
}

bool OAICatalogsFeedIngestionWarnings::is_additional_image_invalid_file_Valid() const{
    return m_additional_image_invalid_file_isValid;
}

qint32 OAICatalogsFeedIngestionWarnings::getHotelPriceHeaderIsPresent() const {
    return hotel_price_header_is_present;
}
void OAICatalogsFeedIngestionWarnings::setHotelPriceHeaderIsPresent(const qint32 &hotel_price_header_is_present) {
    this->hotel_price_header_is_present = hotel_price_header_is_present;
    this->m_hotel_price_header_is_present_isSet = true;
}

bool OAICatalogsFeedIngestionWarnings::is_hotel_price_header_is_present_Set() const{
    return m_hotel_price_header_is_present_isSet;
}

bool OAICatalogsFeedIngestionWarnings::is_hotel_price_header_is_present_Valid() const{
    return m_hotel_price_header_is_present_isValid;
}

bool OAICatalogsFeedIngestionWarnings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_image_level_internal_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_image_file_not_accessible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_image_malformed_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_image_file_not_found_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_image_invalid_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel_price_header_is_present_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogsFeedIngestionWarnings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
