/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermissionsWithOwner.h
 *
 * 
 */

#ifndef OAIPermissionsWithOwner_H
#define OAIPermissionsWithOwner_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPermissionsWithOwner : public OAIEnum {
public:
    OAIPermissionsWithOwner();
    OAIPermissionsWithOwner(QString json);
    ~OAIPermissionsWithOwner() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIPermissionsWithOwner {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        ADMIN, 
        ANALYST, 
        FINANCE_MANAGER, 
        AUDIENCE_MANAGER, 
        CAMPAIGN_MANAGER, 
        CATALOGS_MANAGER, 
        CATALOGS_VIEWER, 
        PROFILE_PUBLISHER, 
        OWNER
    };
    OAIPermissionsWithOwner::eOAIPermissionsWithOwner getValue() const;
    void setValue(const OAIPermissionsWithOwner::eOAIPermissionsWithOwner& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIPermissionsWithOwner m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermissionsWithOwner)

#endif // OAIPermissionsWithOwner_H
