/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntegrationLog.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntegrationLog::OAIIntegrationLog(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntegrationLog::OAIIntegrationLog() {
    this->initializeModel();
}

OAIIntegrationLog::~OAIIntegrationLog() {}

void OAIIntegrationLog::initializeModel() {

    m_client_timestamp_isSet = false;
    m_client_timestamp_isValid = false;

    m_event_type_isSet = false;
    m_event_type_isValid = false;

    m_log_level_isSet = false;
    m_log_level_isValid = false;

    m_external_business_id_isSet = false;
    m_external_business_id_isValid = false;

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_tag_id_isSet = false;
    m_tag_id_isValid = false;

    m_feed_profile_id_isSet = false;
    m_feed_profile_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_app_version_number_isSet = false;
    m_app_version_number_isValid = false;

    m_platform_version_number_isSet = false;
    m_platform_version_number_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_request_isSet = false;
    m_request_isValid = false;
}

void OAIIntegrationLog::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntegrationLog::fromJsonObject(QJsonObject json) {

    m_client_timestamp_isValid = ::OpenAPI::fromJsonValue(client_timestamp, json[QString("client_timestamp")]);
    m_client_timestamp_isSet = !json[QString("client_timestamp")].isNull() && m_client_timestamp_isValid;

    m_event_type_isValid = ::OpenAPI::fromJsonValue(event_type, json[QString("event_type")]);
    m_event_type_isSet = !json[QString("event_type")].isNull() && m_event_type_isValid;

    m_log_level_isValid = ::OpenAPI::fromJsonValue(log_level, json[QString("log_level")]);
    m_log_level_isSet = !json[QString("log_level")].isNull() && m_log_level_isValid;

    m_external_business_id_isValid = ::OpenAPI::fromJsonValue(external_business_id, json[QString("external_business_id")]);
    m_external_business_id_isSet = !json[QString("external_business_id")].isNull() && m_external_business_id_isValid;

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(advertiser_id, json[QString("advertiser_id")]);
    m_advertiser_id_isSet = !json[QString("advertiser_id")].isNull() && m_advertiser_id_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(merchant_id, json[QString("merchant_id")]);
    m_merchant_id_isSet = !json[QString("merchant_id")].isNull() && m_merchant_id_isValid;

    m_tag_id_isValid = ::OpenAPI::fromJsonValue(tag_id, json[QString("tag_id")]);
    m_tag_id_isSet = !json[QString("tag_id")].isNull() && m_tag_id_isValid;

    m_feed_profile_id_isValid = ::OpenAPI::fromJsonValue(feed_profile_id, json[QString("feed_profile_id")]);
    m_feed_profile_id_isSet = !json[QString("feed_profile_id")].isNull() && m_feed_profile_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_app_version_number_isValid = ::OpenAPI::fromJsonValue(app_version_number, json[QString("app_version_number")]);
    m_app_version_number_isSet = !json[QString("app_version_number")].isNull() && m_app_version_number_isValid;

    m_platform_version_number_isValid = ::OpenAPI::fromJsonValue(platform_version_number, json[QString("platform_version_number")]);
    m_platform_version_number_isSet = !json[QString("platform_version_number")].isNull() && m_platform_version_number_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_request_isValid = ::OpenAPI::fromJsonValue(request, json[QString("request")]);
    m_request_isSet = !json[QString("request")].isNull() && m_request_isValid;
}

QString OAIIntegrationLog::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntegrationLog::asJsonObject() const {
    QJsonObject obj;
    if (m_client_timestamp_isSet) {
        obj.insert(QString("client_timestamp"), ::OpenAPI::toJsonValue(client_timestamp));
    }
    if (m_event_type_isSet) {
        obj.insert(QString("event_type"), ::OpenAPI::toJsonValue(event_type));
    }
    if (m_log_level_isSet) {
        obj.insert(QString("log_level"), ::OpenAPI::toJsonValue(log_level));
    }
    if (m_external_business_id_isSet) {
        obj.insert(QString("external_business_id"), ::OpenAPI::toJsonValue(external_business_id));
    }
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiser_id"), ::OpenAPI::toJsonValue(advertiser_id));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchant_id"), ::OpenAPI::toJsonValue(merchant_id));
    }
    if (m_tag_id_isSet) {
        obj.insert(QString("tag_id"), ::OpenAPI::toJsonValue(tag_id));
    }
    if (m_feed_profile_id_isSet) {
        obj.insert(QString("feed_profile_id"), ::OpenAPI::toJsonValue(feed_profile_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(message));
    }
    if (m_app_version_number_isSet) {
        obj.insert(QString("app_version_number"), ::OpenAPI::toJsonValue(app_version_number));
    }
    if (m_platform_version_number_isSet) {
        obj.insert(QString("platform_version_number"), ::OpenAPI::toJsonValue(platform_version_number));
    }
    if (error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(error));
    }
    if (request.isSet()) {
        obj.insert(QString("request"), ::OpenAPI::toJsonValue(request));
    }
    return obj;
}

qint32 OAIIntegrationLog::getClientTimestamp() const {
    return client_timestamp;
}
void OAIIntegrationLog::setClientTimestamp(const qint32 &client_timestamp) {
    this->client_timestamp = client_timestamp;
    this->m_client_timestamp_isSet = true;
}

bool OAIIntegrationLog::is_client_timestamp_Set() const{
    return m_client_timestamp_isSet;
}

bool OAIIntegrationLog::is_client_timestamp_Valid() const{
    return m_client_timestamp_isValid;
}

QString OAIIntegrationLog::getEventType() const {
    return event_type;
}
void OAIIntegrationLog::setEventType(const QString &event_type) {
    this->event_type = event_type;
    this->m_event_type_isSet = true;
}

bool OAIIntegrationLog::is_event_type_Set() const{
    return m_event_type_isSet;
}

bool OAIIntegrationLog::is_event_type_Valid() const{
    return m_event_type_isValid;
}

QString OAIIntegrationLog::getLogLevel() const {
    return log_level;
}
void OAIIntegrationLog::setLogLevel(const QString &log_level) {
    this->log_level = log_level;
    this->m_log_level_isSet = true;
}

bool OAIIntegrationLog::is_log_level_Set() const{
    return m_log_level_isSet;
}

bool OAIIntegrationLog::is_log_level_Valid() const{
    return m_log_level_isValid;
}

QString OAIIntegrationLog::getExternalBusinessId() const {
    return external_business_id;
}
void OAIIntegrationLog::setExternalBusinessId(const QString &external_business_id) {
    this->external_business_id = external_business_id;
    this->m_external_business_id_isSet = true;
}

bool OAIIntegrationLog::is_external_business_id_Set() const{
    return m_external_business_id_isSet;
}

bool OAIIntegrationLog::is_external_business_id_Valid() const{
    return m_external_business_id_isValid;
}

QString OAIIntegrationLog::getAdvertiserId() const {
    return advertiser_id;
}
void OAIIntegrationLog::setAdvertiserId(const QString &advertiser_id) {
    this->advertiser_id = advertiser_id;
    this->m_advertiser_id_isSet = true;
}

bool OAIIntegrationLog::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAIIntegrationLog::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

QString OAIIntegrationLog::getMerchantId() const {
    return merchant_id;
}
void OAIIntegrationLog::setMerchantId(const QString &merchant_id) {
    this->merchant_id = merchant_id;
    this->m_merchant_id_isSet = true;
}

bool OAIIntegrationLog::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIIntegrationLog::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAIIntegrationLog::getTagId() const {
    return tag_id;
}
void OAIIntegrationLog::setTagId(const QString &tag_id) {
    this->tag_id = tag_id;
    this->m_tag_id_isSet = true;
}

bool OAIIntegrationLog::is_tag_id_Set() const{
    return m_tag_id_isSet;
}

bool OAIIntegrationLog::is_tag_id_Valid() const{
    return m_tag_id_isValid;
}

QString OAIIntegrationLog::getFeedProfileId() const {
    return feed_profile_id;
}
void OAIIntegrationLog::setFeedProfileId(const QString &feed_profile_id) {
    this->feed_profile_id = feed_profile_id;
    this->m_feed_profile_id_isSet = true;
}

bool OAIIntegrationLog::is_feed_profile_id_Set() const{
    return m_feed_profile_id_isSet;
}

bool OAIIntegrationLog::is_feed_profile_id_Valid() const{
    return m_feed_profile_id_isValid;
}

QString OAIIntegrationLog::getMessage() const {
    return message;
}
void OAIIntegrationLog::setMessage(const QString &message) {
    this->message = message;
    this->m_message_isSet = true;
}

bool OAIIntegrationLog::is_message_Set() const{
    return m_message_isSet;
}

bool OAIIntegrationLog::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIIntegrationLog::getAppVersionNumber() const {
    return app_version_number;
}
void OAIIntegrationLog::setAppVersionNumber(const QString &app_version_number) {
    this->app_version_number = app_version_number;
    this->m_app_version_number_isSet = true;
}

bool OAIIntegrationLog::is_app_version_number_Set() const{
    return m_app_version_number_isSet;
}

bool OAIIntegrationLog::is_app_version_number_Valid() const{
    return m_app_version_number_isValid;
}

QString OAIIntegrationLog::getPlatformVersionNumber() const {
    return platform_version_number;
}
void OAIIntegrationLog::setPlatformVersionNumber(const QString &platform_version_number) {
    this->platform_version_number = platform_version_number;
    this->m_platform_version_number_isSet = true;
}

bool OAIIntegrationLog::is_platform_version_number_Set() const{
    return m_platform_version_number_isSet;
}

bool OAIIntegrationLog::is_platform_version_number_Valid() const{
    return m_platform_version_number_isValid;
}

OAIIntegrationLogClientError OAIIntegrationLog::getError() const {
    return error;
}
void OAIIntegrationLog::setError(const OAIIntegrationLogClientError &error) {
    this->error = error;
    this->m_error_isSet = true;
}

bool OAIIntegrationLog::is_error_Set() const{
    return m_error_isSet;
}

bool OAIIntegrationLog::is_error_Valid() const{
    return m_error_isValid;
}

OAIIntegrationLogClientRequest OAIIntegrationLog::getRequest() const {
    return request;
}
void OAIIntegrationLog::setRequest(const OAIIntegrationLogClientRequest &request) {
    this->request = request;
    this->m_request_isSet = true;
}

bool OAIIntegrationLog::is_request_Set() const{
    return m_request_isSet;
}

bool OAIIntegrationLog::is_request_Valid() const{
    return m_request_isValid;
}

bool OAIIntegrationLog::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_business_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feed_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntegrationLog::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_timestamp_isValid && m_event_type_isValid && m_log_level_isValid && true;
}

} // namespace OpenAPI
