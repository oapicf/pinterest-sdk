/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeadsExportResponseData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeadsExportResponseData::OAILeadsExportResponseData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeadsExportResponseData::OAILeadsExportResponseData() {
    this->initializeModel();
}

OAILeadsExportResponseData::~OAILeadsExportResponseData() {}

void OAILeadsExportResponseData::initializeModel() {

    m_export_status_isSet = false;
    m_export_status_isValid = false;

    m_download_url_isSet = false;
    m_download_url_isValid = false;
}

void OAILeadsExportResponseData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeadsExportResponseData::fromJsonObject(QJsonObject json) {

    m_export_status_isValid = ::OpenAPI::fromJsonValue(export_status, json[QString("export_status")]);
    m_export_status_isSet = !json[QString("export_status")].isNull() && m_export_status_isValid;

    m_download_url_isValid = ::OpenAPI::fromJsonValue(download_url, json[QString("download_url")]);
    m_download_url_isSet = !json[QString("download_url")].isNull() && m_download_url_isValid;
}

QString OAILeadsExportResponseData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeadsExportResponseData::asJsonObject() const {
    QJsonObject obj;
    if (export_status.isSet()) {
        obj.insert(QString("export_status"), ::OpenAPI::toJsonValue(export_status));
    }
    if (m_download_url_isSet) {
        obj.insert(QString("download_url"), ::OpenAPI::toJsonValue(download_url));
    }
    return obj;
}

OAILeadsExportStatus OAILeadsExportResponseData::getExportStatus() const {
    return export_status;
}
void OAILeadsExportResponseData::setExportStatus(const OAILeadsExportStatus &export_status) {
    this->export_status = export_status;
    this->m_export_status_isSet = true;
}

bool OAILeadsExportResponseData::is_export_status_Set() const{
    return m_export_status_isSet;
}

bool OAILeadsExportResponseData::is_export_status_Valid() const{
    return m_export_status_isValid;
}

QString OAILeadsExportResponseData::getDownloadUrl() const {
    return download_url;
}
void OAILeadsExportResponseData::setDownloadUrl(const QString &download_url) {
    this->download_url = download_url;
    this->m_download_url_isSet = true;
}

bool OAILeadsExportResponseData::is_download_url_Set() const{
    return m_download_url_isSet;
}

bool OAILeadsExportResponseData::is_download_url_Valid() const{
    return m_download_url_isValid;
}

bool OAILeadsExportResponseData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (export_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeadsExportResponseData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
