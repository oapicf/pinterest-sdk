/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrendingKeywordsResponse_trends_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrendingKeywordsResponse_trends_inner::OAITrendingKeywordsResponse_trends_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrendingKeywordsResponse_trends_inner::OAITrendingKeywordsResponse_trends_inner() {
    this->initializeModel();
}

OAITrendingKeywordsResponse_trends_inner::~OAITrendingKeywordsResponse_trends_inner() {}

void OAITrendingKeywordsResponse_trends_inner::initializeModel() {

    m_keyword_isSet = false;
    m_keyword_isValid = false;

    m_pct_growth_wow_isSet = false;
    m_pct_growth_wow_isValid = false;

    m_pct_growth_mom_isSet = false;
    m_pct_growth_mom_isValid = false;

    m_pct_growth_yoy_isSet = false;
    m_pct_growth_yoy_isValid = false;

    m_time_series_isSet = false;
    m_time_series_isValid = false;
}

void OAITrendingKeywordsResponse_trends_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrendingKeywordsResponse_trends_inner::fromJsonObject(QJsonObject json) {

    m_keyword_isValid = ::OpenAPI::fromJsonValue(keyword, json[QString("keyword")]);
    m_keyword_isSet = !json[QString("keyword")].isNull() && m_keyword_isValid;

    m_pct_growth_wow_isValid = ::OpenAPI::fromJsonValue(pct_growth_wow, json[QString("pct_growth_wow")]);
    m_pct_growth_wow_isSet = !json[QString("pct_growth_wow")].isNull() && m_pct_growth_wow_isValid;

    m_pct_growth_mom_isValid = ::OpenAPI::fromJsonValue(pct_growth_mom, json[QString("pct_growth_mom")]);
    m_pct_growth_mom_isSet = !json[QString("pct_growth_mom")].isNull() && m_pct_growth_mom_isValid;

    m_pct_growth_yoy_isValid = ::OpenAPI::fromJsonValue(pct_growth_yoy, json[QString("pct_growth_yoy")]);
    m_pct_growth_yoy_isSet = !json[QString("pct_growth_yoy")].isNull() && m_pct_growth_yoy_isValid;

    m_time_series_isValid = ::OpenAPI::fromJsonValue(time_series, json[QString("time_series")]);
    m_time_series_isSet = !json[QString("time_series")].isNull() && m_time_series_isValid;
}

QString OAITrendingKeywordsResponse_trends_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrendingKeywordsResponse_trends_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_keyword_isSet) {
        obj.insert(QString("keyword"), ::OpenAPI::toJsonValue(keyword));
    }
    if (m_pct_growth_wow_isSet) {
        obj.insert(QString("pct_growth_wow"), ::OpenAPI::toJsonValue(pct_growth_wow));
    }
    if (m_pct_growth_mom_isSet) {
        obj.insert(QString("pct_growth_mom"), ::OpenAPI::toJsonValue(pct_growth_mom));
    }
    if (m_pct_growth_yoy_isSet) {
        obj.insert(QString("pct_growth_yoy"), ::OpenAPI::toJsonValue(pct_growth_yoy));
    }
    if (time_series.isSet()) {
        obj.insert(QString("time_series"), ::OpenAPI::toJsonValue(time_series));
    }
    return obj;
}

QString OAITrendingKeywordsResponse_trends_inner::getKeyword() const {
    return keyword;
}
void OAITrendingKeywordsResponse_trends_inner::setKeyword(const QString &keyword) {
    this->keyword = keyword;
    this->m_keyword_isSet = true;
}

bool OAITrendingKeywordsResponse_trends_inner::is_keyword_Set() const{
    return m_keyword_isSet;
}

bool OAITrendingKeywordsResponse_trends_inner::is_keyword_Valid() const{
    return m_keyword_isValid;
}

qint32 OAITrendingKeywordsResponse_trends_inner::getPctGrowthWow() const {
    return pct_growth_wow;
}
void OAITrendingKeywordsResponse_trends_inner::setPctGrowthWow(const qint32 &pct_growth_wow) {
    this->pct_growth_wow = pct_growth_wow;
    this->m_pct_growth_wow_isSet = true;
}

bool OAITrendingKeywordsResponse_trends_inner::is_pct_growth_wow_Set() const{
    return m_pct_growth_wow_isSet;
}

bool OAITrendingKeywordsResponse_trends_inner::is_pct_growth_wow_Valid() const{
    return m_pct_growth_wow_isValid;
}

qint32 OAITrendingKeywordsResponse_trends_inner::getPctGrowthMom() const {
    return pct_growth_mom;
}
void OAITrendingKeywordsResponse_trends_inner::setPctGrowthMom(const qint32 &pct_growth_mom) {
    this->pct_growth_mom = pct_growth_mom;
    this->m_pct_growth_mom_isSet = true;
}

bool OAITrendingKeywordsResponse_trends_inner::is_pct_growth_mom_Set() const{
    return m_pct_growth_mom_isSet;
}

bool OAITrendingKeywordsResponse_trends_inner::is_pct_growth_mom_Valid() const{
    return m_pct_growth_mom_isValid;
}

qint32 OAITrendingKeywordsResponse_trends_inner::getPctGrowthYoy() const {
    return pct_growth_yoy;
}
void OAITrendingKeywordsResponse_trends_inner::setPctGrowthYoy(const qint32 &pct_growth_yoy) {
    this->pct_growth_yoy = pct_growth_yoy;
    this->m_pct_growth_yoy_isSet = true;
}

bool OAITrendingKeywordsResponse_trends_inner::is_pct_growth_yoy_Set() const{
    return m_pct_growth_yoy_isSet;
}

bool OAITrendingKeywordsResponse_trends_inner::is_pct_growth_yoy_Valid() const{
    return m_pct_growth_yoy_isValid;
}

OAITrendingKeywordsResponse_trends_inner_time_series OAITrendingKeywordsResponse_trends_inner::getTimeSeries() const {
    return time_series;
}
void OAITrendingKeywordsResponse_trends_inner::setTimeSeries(const OAITrendingKeywordsResponse_trends_inner_time_series &time_series) {
    this->time_series = time_series;
    this->m_time_series_isSet = true;
}

bool OAITrendingKeywordsResponse_trends_inner::is_time_series_Set() const{
    return m_time_series_isSet;
}

bool OAITrendingKeywordsResponse_trends_inner::is_time_series_Valid() const{
    return m_time_series_isValid;
}

bool OAITrendingKeywordsResponse_trends_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_keyword_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pct_growth_wow_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pct_growth_mom_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pct_growth_yoy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (time_series.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrendingKeywordsResponse_trends_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
