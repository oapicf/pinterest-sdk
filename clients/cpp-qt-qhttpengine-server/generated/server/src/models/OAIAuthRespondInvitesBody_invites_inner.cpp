/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthRespondInvitesBody_invites_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthRespondInvitesBody_invites_inner::OAIAuthRespondInvitesBody_invites_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthRespondInvitesBody_invites_inner::OAIAuthRespondInvitesBody_invites_inner() {
    this->initializeModel();
}

OAIAuthRespondInvitesBody_invites_inner::~OAIAuthRespondInvitesBody_invites_inner() {}

void OAIAuthRespondInvitesBody_invites_inner::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_invite_id_isSet = false;
    m_invite_id_isValid = false;
}

void OAIAuthRespondInvitesBody_invites_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthRespondInvitesBody_invites_inner::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_invite_id_isValid = ::OpenAPI::fromJsonValue(invite_id, json[QString("invite_id")]);
    m_invite_id_isSet = !json[QString("invite_id")].isNull() && m_invite_id_isValid;
}

QString OAIAuthRespondInvitesBody_invites_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthRespondInvitesBody_invites_inner::asJsonObject() const {
    QJsonObject obj;
    if (action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(action));
    }
    if (m_invite_id_isSet) {
        obj.insert(QString("invite_id"), ::OpenAPI::toJsonValue(invite_id));
    }
    return obj;
}

OAIAuthRespondInvitesBody_invites_inner_action OAIAuthRespondInvitesBody_invites_inner::getAction() const {
    return action;
}
void OAIAuthRespondInvitesBody_invites_inner::setAction(const OAIAuthRespondInvitesBody_invites_inner_action &action) {
    this->action = action;
    this->m_action_isSet = true;
}

bool OAIAuthRespondInvitesBody_invites_inner::is_action_Set() const{
    return m_action_isSet;
}

bool OAIAuthRespondInvitesBody_invites_inner::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIAuthRespondInvitesBody_invites_inner::getInviteId() const {
    return invite_id;
}
void OAIAuthRespondInvitesBody_invites_inner::setInviteId(const QString &invite_id) {
    this->invite_id = invite_id;
    this->m_invite_id_isSet = true;
}

bool OAIAuthRespondInvitesBody_invites_inner::is_invite_id_Set() const{
    return m_invite_id_isSet;
}

bool OAIAuthRespondInvitesBody_invites_inner::is_invite_id_Valid() const{
    return m_invite_id_isValid;
}

bool OAIAuthRespondInvitesBody_invites_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invite_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthRespondInvitesBody_invites_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_isValid && m_invite_id_isValid && true;
}

} // namespace OpenAPI
