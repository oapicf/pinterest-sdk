/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeadFormQuestionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeadFormQuestionType::OAILeadFormQuestionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeadFormQuestionType::OAILeadFormQuestionType() {
    this->initializeModel();
}

OAILeadFormQuestionType::~OAILeadFormQuestionType() {}

void OAILeadFormQuestionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILeadFormQuestionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILeadFormQuestionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CUSTOM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::CUSTOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FULL_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::FULL_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FIRST_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::FIRST_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAST_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::LAST_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EMAIL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PHONE_NUMBER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::PHONE_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZIP_CODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::ZIP_CODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GENDER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::GENDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CITY", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::CITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COUNTRY", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::COUNTRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STATE_PROVINCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::STATE_PROVINCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ADDRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::ADDRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DATE_OF_BIRTH", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::DATE_OF_BIRTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AGE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILeadFormQuestionType::AGE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILeadFormQuestionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILeadFormQuestionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILeadFormQuestionType::CUSTOM:
            val = "CUSTOM";
            break;
        case eOAILeadFormQuestionType::FULL_NAME:
            val = "FULL_NAME";
            break;
        case eOAILeadFormQuestionType::FIRST_NAME:
            val = "FIRST_NAME";
            break;
        case eOAILeadFormQuestionType::LAST_NAME:
            val = "LAST_NAME";
            break;
        case eOAILeadFormQuestionType::EMAIL:
            val = "EMAIL";
            break;
        case eOAILeadFormQuestionType::PHONE_NUMBER:
            val = "PHONE_NUMBER";
            break;
        case eOAILeadFormQuestionType::ZIP_CODE:
            val = "ZIP_CODE";
            break;
        case eOAILeadFormQuestionType::GENDER:
            val = "GENDER";
            break;
        case eOAILeadFormQuestionType::CITY:
            val = "CITY";
            break;
        case eOAILeadFormQuestionType::COUNTRY:
            val = "COUNTRY";
            break;
        case eOAILeadFormQuestionType::STATE_PROVINCE:
            val = "STATE_PROVINCE";
            break;
        case eOAILeadFormQuestionType::ADDRESS:
            val = "ADDRESS";
            break;
        case eOAILeadFormQuestionType::DATE_OF_BIRTH:
            val = "DATE_OF_BIRTH";
            break;
        case eOAILeadFormQuestionType::AGE:
            val = "AGE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILeadFormQuestionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILeadFormQuestionType::eOAILeadFormQuestionType OAILeadFormQuestionType::getValue() const {
    return m_value;
}

void OAILeadFormQuestionType::setValue(const OAILeadFormQuestionType::eOAILeadFormQuestionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILeadFormQuestionType::isSet() const {
    
    return m_value_isSet;
}

bool OAILeadFormQuestionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
