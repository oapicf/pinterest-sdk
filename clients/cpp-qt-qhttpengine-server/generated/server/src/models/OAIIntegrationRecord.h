/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntegrationRecord.h
 *
 * Integration record
 */

#ifndef OAIIntegrationRecord_H
#define OAIIntegrationRecord_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntegrationRecord : public OAIObject {
public:
    OAIIntegrationRecord();
    OAIIntegrationRecord(QString json);
    ~OAIIntegrationRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getExternalBusinessId() const;
    void setExternalBusinessId(const QString &external_business_id);
    bool is_external_business_id_Set() const;
    bool is_external_business_id_Valid() const;

    QString getConnectedMerchantId() const;
    void setConnectedMerchantId(const QString &connected_merchant_id);
    bool is_connected_merchant_id_Set() const;
    bool is_connected_merchant_id_Valid() const;

    QString getConnectedUserId() const;
    void setConnectedUserId(const QString &connected_user_id);
    bool is_connected_user_id_Set() const;
    bool is_connected_user_id_Valid() const;

    QString getConnectedAdvertiserId() const;
    void setConnectedAdvertiserId(const QString &connected_advertiser_id);
    bool is_connected_advertiser_id_Set() const;
    bool is_connected_advertiser_id_Valid() const;

    QString getConnectedLbaId() const;
    void setConnectedLbaId(const QString &connected_lba_id);
    bool is_connected_lba_id_Set() const;
    bool is_connected_lba_id_Valid() const;

    QString getConnectedTagId() const;
    void setConnectedTagId(const QString &connected_tag_id);
    bool is_connected_tag_id_Set() const;
    bool is_connected_tag_id_Valid() const;

    QString getPartnerAccessToken() const;
    void setPartnerAccessToken(const QString &partner_access_token);
    bool is_partner_access_token_Set() const;
    bool is_partner_access_token_Valid() const;

    QString getPartnerRefreshToken() const;
    void setPartnerRefreshToken(const QString &partner_refresh_token);
    bool is_partner_refresh_token_Set() const;
    bool is_partner_refresh_token_Valid() const;

    QString getPartnerPrimaryEmail() const;
    void setPartnerPrimaryEmail(const QString &partner_primary_email);
    bool is_partner_primary_email_Set() const;
    bool is_partner_primary_email_Valid() const;

    qint32 getPartnerAccessTokenExpiry() const;
    void setPartnerAccessTokenExpiry(const qint32 &partner_access_token_expiry);
    bool is_partner_access_token_expiry_Set() const;
    bool is_partner_access_token_expiry_Valid() const;

    qint32 getPartnerRefreshTokenExpiry() const;
    void setPartnerRefreshTokenExpiry(const qint32 &partner_refresh_token_expiry);
    bool is_partner_refresh_token_expiry_Set() const;
    bool is_partner_refresh_token_expiry_Valid() const;

    QString getScopes() const;
    void setScopes(const QString &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getPartnerMetadata() const;
    void setPartnerMetadata(const QString &partner_metadata);
    bool is_partner_metadata_Set() const;
    bool is_partner_metadata_Valid() const;

    QString getAdditionalId1() const;
    void setAdditionalId1(const QString &additional_id_1);
    bool is_additional_id_1_Set() const;
    bool is_additional_id_1_Valid() const;

    qint32 getCreatedTime() const;
    void setCreatedTime(const qint32 &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    qint32 getUpdatedTime() const;
    void setUpdatedTime(const qint32 &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString external_business_id;
    bool m_external_business_id_isSet;
    bool m_external_business_id_isValid;

    QString connected_merchant_id;
    bool m_connected_merchant_id_isSet;
    bool m_connected_merchant_id_isValid;

    QString connected_user_id;
    bool m_connected_user_id_isSet;
    bool m_connected_user_id_isValid;

    QString connected_advertiser_id;
    bool m_connected_advertiser_id_isSet;
    bool m_connected_advertiser_id_isValid;

    QString connected_lba_id;
    bool m_connected_lba_id_isSet;
    bool m_connected_lba_id_isValid;

    QString connected_tag_id;
    bool m_connected_tag_id_isSet;
    bool m_connected_tag_id_isValid;

    QString partner_access_token;
    bool m_partner_access_token_isSet;
    bool m_partner_access_token_isValid;

    QString partner_refresh_token;
    bool m_partner_refresh_token_isSet;
    bool m_partner_refresh_token_isValid;

    QString partner_primary_email;
    bool m_partner_primary_email_isSet;
    bool m_partner_primary_email_isValid;

    qint32 partner_access_token_expiry;
    bool m_partner_access_token_expiry_isSet;
    bool m_partner_access_token_expiry_isValid;

    qint32 partner_refresh_token_expiry;
    bool m_partner_refresh_token_expiry_isSet;
    bool m_partner_refresh_token_expiry_isValid;

    QString scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString partner_metadata;
    bool m_partner_metadata_isSet;
    bool m_partner_metadata_isValid;

    QString additional_id_1;
    bool m_additional_id_1_isSet;
    bool m_additional_id_1_isValid;

    qint32 created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    qint32 updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntegrationRecord)

#endif // OAIIntegrationRecord_H
