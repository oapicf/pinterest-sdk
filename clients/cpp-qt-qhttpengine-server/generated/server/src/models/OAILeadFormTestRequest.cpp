/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeadFormTestRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeadFormTestRequest::OAILeadFormTestRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeadFormTestRequest::OAILeadFormTestRequest() {
    this->initializeModel();
}

OAILeadFormTestRequest::~OAILeadFormTestRequest() {}

void OAILeadFormTestRequest::initializeModel() {

    m_answers_isSet = false;
    m_answers_isValid = false;
}

void OAILeadFormTestRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeadFormTestRequest::fromJsonObject(QJsonObject json) {

    m_answers_isValid = ::OpenAPI::fromJsonValue(answers, json[QString("answers")]);
    m_answers_isSet = !json[QString("answers")].isNull() && m_answers_isValid;
}

QString OAILeadFormTestRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeadFormTestRequest::asJsonObject() const {
    QJsonObject obj;
    if (answers.size() > 0) {
        obj.insert(QString("answers"), ::OpenAPI::toJsonValue(answers));
    }
    return obj;
}

QList<QString> OAILeadFormTestRequest::getAnswers() const {
    return answers;
}
void OAILeadFormTestRequest::setAnswers(const QList<QString> &answers) {
    this->answers = answers;
    this->m_answers_isSet = true;
}

bool OAILeadFormTestRequest::is_answers_Set() const{
    return m_answers_isSet;
}

bool OAILeadFormTestRequest::is_answers_Valid() const{
    return m_answers_isValid;
}

bool OAILeadFormTestRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (answers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeadFormTestRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_answers_isValid && true;
}

} // namespace OpenAPI
