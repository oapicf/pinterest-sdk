/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogsHotelAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogsHotelAddress::OAICatalogsHotelAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogsHotelAddress::OAICatalogsHotelAddress() {
    this->initializeModel();
}

OAICatalogsHotelAddress::~OAICatalogsHotelAddress() {}

void OAICatalogsHotelAddress::initializeModel() {

    m_addr1_isSet = false;
    m_addr1_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;
}

void OAICatalogsHotelAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogsHotelAddress::fromJsonObject(QJsonObject json) {

    m_addr1_isValid = ::OpenAPI::fromJsonValue(addr1, json[QString("addr1")]);
    m_addr1_isSet = !json[QString("addr1")].isNull() && m_addr1_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;
}

QString OAICatalogsHotelAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogsHotelAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_addr1_isSet) {
        obj.insert(QString("addr1"), ::OpenAPI::toJsonValue(addr1));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(city));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(region));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(country));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(postal_code));
    }
    return obj;
}

QString OAICatalogsHotelAddress::getAddr1() const {
    return addr1;
}
void OAICatalogsHotelAddress::setAddr1(const QString &addr1) {
    this->addr1 = addr1;
    this->m_addr1_isSet = true;
}

bool OAICatalogsHotelAddress::is_addr1_Set() const{
    return m_addr1_isSet;
}

bool OAICatalogsHotelAddress::is_addr1_Valid() const{
    return m_addr1_isValid;
}

QString OAICatalogsHotelAddress::getCity() const {
    return city;
}
void OAICatalogsHotelAddress::setCity(const QString &city) {
    this->city = city;
    this->m_city_isSet = true;
}

bool OAICatalogsHotelAddress::is_city_Set() const{
    return m_city_isSet;
}

bool OAICatalogsHotelAddress::is_city_Valid() const{
    return m_city_isValid;
}

QString OAICatalogsHotelAddress::getRegion() const {
    return region;
}
void OAICatalogsHotelAddress::setRegion(const QString &region) {
    this->region = region;
    this->m_region_isSet = true;
}

bool OAICatalogsHotelAddress::is_region_Set() const{
    return m_region_isSet;
}

bool OAICatalogsHotelAddress::is_region_Valid() const{
    return m_region_isValid;
}

QString OAICatalogsHotelAddress::getCountry() const {
    return country;
}
void OAICatalogsHotelAddress::setCountry(const QString &country) {
    this->country = country;
    this->m_country_isSet = true;
}

bool OAICatalogsHotelAddress::is_country_Set() const{
    return m_country_isSet;
}

bool OAICatalogsHotelAddress::is_country_Valid() const{
    return m_country_isValid;
}

QString OAICatalogsHotelAddress::getPostalCode() const {
    return postal_code;
}
void OAICatalogsHotelAddress::setPostalCode(const QString &postal_code) {
    this->postal_code = postal_code;
    this->m_postal_code_isSet = true;
}

bool OAICatalogsHotelAddress::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAICatalogsHotelAddress::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

bool OAICatalogsHotelAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_addr1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogsHotelAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
