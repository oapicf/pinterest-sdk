/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItemAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItemAttributes::OAIItemAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItemAttributes::OAIItemAttributes() {
    this->initializeModel();
}

OAIItemAttributes::~OAIItemAttributes() {}

void OAIItemAttributes::initializeModel() {

    m_ad_link_isSet = false;
    m_ad_link_isValid = false;

    m_adult_isSet = false;
    m_adult_isValid = false;

    m_age_group_isSet = false;
    m_age_group_isValid = false;

    m_availability_isSet = false;
    m_availability_isValid = false;

    m_average_review_rating_isSet = false;
    m_average_review_rating_isValid = false;

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_checkout_enabled_isSet = false;
    m_checkout_enabled_isValid = false;

    m_color_isSet = false;
    m_color_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;

    m_custom_label_0_isSet = false;
    m_custom_label_0_isValid = false;

    m_custom_label_1_isSet = false;
    m_custom_label_1_isValid = false;

    m_custom_label_2_isSet = false;
    m_custom_label_2_isValid = false;

    m_custom_label_3_isSet = false;
    m_custom_label_3_isValid = false;

    m_custom_label_4_isSet = false;
    m_custom_label_4_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_free_shipping_label_isSet = false;
    m_free_shipping_label_isValid = false;

    m_free_shipping_limit_isSet = false;
    m_free_shipping_limit_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_google_product_category_isSet = false;
    m_google_product_category_isValid = false;

    m_gtin_isSet = false;
    m_gtin_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_item_group_id_isSet = false;
    m_item_group_id_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_material_isSet = false;
    m_material_isValid = false;

    m_min_ad_price_isSet = false;
    m_min_ad_price_isValid = false;

    m_mobile_link_isSet = false;
    m_mobile_link_isValid = false;

    m_mpn_isSet = false;
    m_mpn_isValid = false;

    m_number_of_ratings_isSet = false;
    m_number_of_ratings_isValid = false;

    m_number_of_reviews_isSet = false;
    m_number_of_reviews_isValid = false;

    m_pattern_isSet = false;
    m_pattern_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_sale_price_isSet = false;
    m_sale_price_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_shipping_height_isSet = false;
    m_shipping_height_isValid = false;

    m_shipping_weight_isSet = false;
    m_shipping_weight_isValid = false;

    m_shipping_width_isSet = false;
    m_shipping_width_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_size_system_isSet = false;
    m_size_system_isValid = false;

    m_size_type_isSet = false;
    m_size_type_isValid = false;

    m_tax_isSet = false;
    m_tax_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_variant_names_isSet = false;
    m_variant_names_isValid = false;

    m_variant_values_isSet = false;
    m_variant_values_isValid = false;

    m_additional_image_link_isSet = false;
    m_additional_image_link_isValid = false;

    m_image_link_isSet = false;
    m_image_link_isValid = false;

    m_video_link_isSet = false;
    m_video_link_isValid = false;
}

void OAIItemAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItemAttributes::fromJsonObject(QJsonObject json) {

    m_ad_link_isValid = ::OpenAPI::fromJsonValue(ad_link, json[QString("ad_link")]);
    m_ad_link_isSet = !json[QString("ad_link")].isNull() && m_ad_link_isValid;

    m_adult_isValid = ::OpenAPI::fromJsonValue(adult, json[QString("adult")]);
    m_adult_isSet = !json[QString("adult")].isNull() && m_adult_isValid;

    m_age_group_isValid = ::OpenAPI::fromJsonValue(age_group, json[QString("age_group")]);
    m_age_group_isSet = !json[QString("age_group")].isNull() && m_age_group_isValid;

    m_availability_isValid = ::OpenAPI::fromJsonValue(availability, json[QString("availability")]);
    m_availability_isSet = !json[QString("availability")].isNull() && m_availability_isValid;

    m_average_review_rating_isValid = ::OpenAPI::fromJsonValue(average_review_rating, json[QString("average_review_rating")]);
    m_average_review_rating_isSet = !json[QString("average_review_rating")].isNull() && m_average_review_rating_isValid;

    m_brand_isValid = ::OpenAPI::fromJsonValue(brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_checkout_enabled_isValid = ::OpenAPI::fromJsonValue(checkout_enabled, json[QString("checkout_enabled")]);
    m_checkout_enabled_isSet = !json[QString("checkout_enabled")].isNull() && m_checkout_enabled_isValid;

    m_color_isValid = ::OpenAPI::fromJsonValue(color, json[QString("color")]);
    m_color_isSet = !json[QString("color")].isNull() && m_color_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;

    m_custom_label_0_isValid = ::OpenAPI::fromJsonValue(custom_label_0, json[QString("custom_label_0")]);
    m_custom_label_0_isSet = !json[QString("custom_label_0")].isNull() && m_custom_label_0_isValid;

    m_custom_label_1_isValid = ::OpenAPI::fromJsonValue(custom_label_1, json[QString("custom_label_1")]);
    m_custom_label_1_isSet = !json[QString("custom_label_1")].isNull() && m_custom_label_1_isValid;

    m_custom_label_2_isValid = ::OpenAPI::fromJsonValue(custom_label_2, json[QString("custom_label_2")]);
    m_custom_label_2_isSet = !json[QString("custom_label_2")].isNull() && m_custom_label_2_isValid;

    m_custom_label_3_isValid = ::OpenAPI::fromJsonValue(custom_label_3, json[QString("custom_label_3")]);
    m_custom_label_3_isSet = !json[QString("custom_label_3")].isNull() && m_custom_label_3_isValid;

    m_custom_label_4_isValid = ::OpenAPI::fromJsonValue(custom_label_4, json[QString("custom_label_4")]);
    m_custom_label_4_isSet = !json[QString("custom_label_4")].isNull() && m_custom_label_4_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_free_shipping_label_isValid = ::OpenAPI::fromJsonValue(free_shipping_label, json[QString("free_shipping_label")]);
    m_free_shipping_label_isSet = !json[QString("free_shipping_label")].isNull() && m_free_shipping_label_isValid;

    m_free_shipping_limit_isValid = ::OpenAPI::fromJsonValue(free_shipping_limit, json[QString("free_shipping_limit")]);
    m_free_shipping_limit_isSet = !json[QString("free_shipping_limit")].isNull() && m_free_shipping_limit_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_google_product_category_isValid = ::OpenAPI::fromJsonValue(google_product_category, json[QString("google_product_category")]);
    m_google_product_category_isSet = !json[QString("google_product_category")].isNull() && m_google_product_category_isValid;

    m_gtin_isValid = ::OpenAPI::fromJsonValue(gtin, json[QString("gtin")]);
    m_gtin_isSet = !json[QString("gtin")].isNull() && m_gtin_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_item_group_id_isValid = ::OpenAPI::fromJsonValue(item_group_id, json[QString("item_group_id")]);
    m_item_group_id_isSet = !json[QString("item_group_id")].isNull() && m_item_group_id_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(last_updated_time, json[QString("last_updated_time")]);
    m_last_updated_time_isSet = !json[QString("last_updated_time")].isNull() && m_last_updated_time_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_material_isValid = ::OpenAPI::fromJsonValue(material, json[QString("material")]);
    m_material_isSet = !json[QString("material")].isNull() && m_material_isValid;

    m_min_ad_price_isValid = ::OpenAPI::fromJsonValue(min_ad_price, json[QString("min_ad_price")]);
    m_min_ad_price_isSet = !json[QString("min_ad_price")].isNull() && m_min_ad_price_isValid;

    m_mobile_link_isValid = ::OpenAPI::fromJsonValue(mobile_link, json[QString("mobile_link")]);
    m_mobile_link_isSet = !json[QString("mobile_link")].isNull() && m_mobile_link_isValid;

    m_mpn_isValid = ::OpenAPI::fromJsonValue(mpn, json[QString("mpn")]);
    m_mpn_isSet = !json[QString("mpn")].isNull() && m_mpn_isValid;

    m_number_of_ratings_isValid = ::OpenAPI::fromJsonValue(number_of_ratings, json[QString("number_of_ratings")]);
    m_number_of_ratings_isSet = !json[QString("number_of_ratings")].isNull() && m_number_of_ratings_isValid;

    m_number_of_reviews_isValid = ::OpenAPI::fromJsonValue(number_of_reviews, json[QString("number_of_reviews")]);
    m_number_of_reviews_isSet = !json[QString("number_of_reviews")].isNull() && m_number_of_reviews_isValid;

    m_pattern_isValid = ::OpenAPI::fromJsonValue(pattern, json[QString("pattern")]);
    m_pattern_isSet = !json[QString("pattern")].isNull() && m_pattern_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(product_type, json[QString("product_type")]);
    m_product_type_isSet = !json[QString("product_type")].isNull() && m_product_type_isValid;

    m_sale_price_isValid = ::OpenAPI::fromJsonValue(sale_price, json[QString("sale_price")]);
    m_sale_price_isSet = !json[QString("sale_price")].isNull() && m_sale_price_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_shipping_height_isValid = ::OpenAPI::fromJsonValue(shipping_height, json[QString("shipping_height")]);
    m_shipping_height_isSet = !json[QString("shipping_height")].isNull() && m_shipping_height_isValid;

    m_shipping_weight_isValid = ::OpenAPI::fromJsonValue(shipping_weight, json[QString("shipping_weight")]);
    m_shipping_weight_isSet = !json[QString("shipping_weight")].isNull() && m_shipping_weight_isValid;

    m_shipping_width_isValid = ::OpenAPI::fromJsonValue(shipping_width, json[QString("shipping_width")]);
    m_shipping_width_isSet = !json[QString("shipping_width")].isNull() && m_shipping_width_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_size_system_isValid = ::OpenAPI::fromJsonValue(size_system, json[QString("size_system")]);
    m_size_system_isSet = !json[QString("size_system")].isNull() && m_size_system_isValid;

    m_size_type_isValid = ::OpenAPI::fromJsonValue(size_type, json[QString("size_type")]);
    m_size_type_isSet = !json[QString("size_type")].isNull() && m_size_type_isValid;

    m_tax_isValid = ::OpenAPI::fromJsonValue(tax, json[QString("tax")]);
    m_tax_isSet = !json[QString("tax")].isNull() && m_tax_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_variant_names_isValid = ::OpenAPI::fromJsonValue(variant_names, json[QString("variant_names")]);
    m_variant_names_isSet = !json[QString("variant_names")].isNull() && m_variant_names_isValid;

    m_variant_values_isValid = ::OpenAPI::fromJsonValue(variant_values, json[QString("variant_values")]);
    m_variant_values_isSet = !json[QString("variant_values")].isNull() && m_variant_values_isValid;

    m_additional_image_link_isValid = ::OpenAPI::fromJsonValue(additional_image_link, json[QString("additional_image_link")]);
    m_additional_image_link_isSet = !json[QString("additional_image_link")].isNull() && m_additional_image_link_isValid;

    m_image_link_isValid = ::OpenAPI::fromJsonValue(image_link, json[QString("image_link")]);
    m_image_link_isSet = !json[QString("image_link")].isNull() && m_image_link_isValid;

    m_video_link_isValid = ::OpenAPI::fromJsonValue(video_link, json[QString("video_link")]);
    m_video_link_isSet = !json[QString("video_link")].isNull() && m_video_link_isValid;
}

QString OAIItemAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItemAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_link_isSet) {
        obj.insert(QString("ad_link"), ::OpenAPI::toJsonValue(ad_link));
    }
    if (m_adult_isSet) {
        obj.insert(QString("adult"), ::OpenAPI::toJsonValue(adult));
    }
    if (m_age_group_isSet) {
        obj.insert(QString("age_group"), ::OpenAPI::toJsonValue(age_group));
    }
    if (m_availability_isSet) {
        obj.insert(QString("availability"), ::OpenAPI::toJsonValue(availability));
    }
    if (m_average_review_rating_isSet) {
        obj.insert(QString("average_review_rating"), ::OpenAPI::toJsonValue(average_review_rating));
    }
    if (m_brand_isSet) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(brand));
    }
    if (m_checkout_enabled_isSet) {
        obj.insert(QString("checkout_enabled"), ::OpenAPI::toJsonValue(checkout_enabled));
    }
    if (m_color_isSet) {
        obj.insert(QString("color"), ::OpenAPI::toJsonValue(color));
    }
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(condition));
    }
    if (m_custom_label_0_isSet) {
        obj.insert(QString("custom_label_0"), ::OpenAPI::toJsonValue(custom_label_0));
    }
    if (m_custom_label_1_isSet) {
        obj.insert(QString("custom_label_1"), ::OpenAPI::toJsonValue(custom_label_1));
    }
    if (m_custom_label_2_isSet) {
        obj.insert(QString("custom_label_2"), ::OpenAPI::toJsonValue(custom_label_2));
    }
    if (m_custom_label_3_isSet) {
        obj.insert(QString("custom_label_3"), ::OpenAPI::toJsonValue(custom_label_3));
    }
    if (m_custom_label_4_isSet) {
        obj.insert(QString("custom_label_4"), ::OpenAPI::toJsonValue(custom_label_4));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(description));
    }
    if (m_free_shipping_label_isSet) {
        obj.insert(QString("free_shipping_label"), ::OpenAPI::toJsonValue(free_shipping_label));
    }
    if (m_free_shipping_limit_isSet) {
        obj.insert(QString("free_shipping_limit"), ::OpenAPI::toJsonValue(free_shipping_limit));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(gender));
    }
    if (m_google_product_category_isSet) {
        obj.insert(QString("google_product_category"), ::OpenAPI::toJsonValue(google_product_category));
    }
    if (m_gtin_isSet) {
        obj.insert(QString("gtin"), ::OpenAPI::toJsonValue(gtin));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_item_group_id_isSet) {
        obj.insert(QString("item_group_id"), ::OpenAPI::toJsonValue(item_group_id));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("last_updated_time"), ::OpenAPI::toJsonValue(last_updated_time));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(link));
    }
    if (m_material_isSet) {
        obj.insert(QString("material"), ::OpenAPI::toJsonValue(material));
    }
    if (m_min_ad_price_isSet) {
        obj.insert(QString("min_ad_price"), ::OpenAPI::toJsonValue(min_ad_price));
    }
    if (m_mobile_link_isSet) {
        obj.insert(QString("mobile_link"), ::OpenAPI::toJsonValue(mobile_link));
    }
    if (m_mpn_isSet) {
        obj.insert(QString("mpn"), ::OpenAPI::toJsonValue(mpn));
    }
    if (m_number_of_ratings_isSet) {
        obj.insert(QString("number_of_ratings"), ::OpenAPI::toJsonValue(number_of_ratings));
    }
    if (m_number_of_reviews_isSet) {
        obj.insert(QString("number_of_reviews"), ::OpenAPI::toJsonValue(number_of_reviews));
    }
    if (m_pattern_isSet) {
        obj.insert(QString("pattern"), ::OpenAPI::toJsonValue(pattern));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(price));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("product_type"), ::OpenAPI::toJsonValue(product_type));
    }
    if (m_sale_price_isSet) {
        obj.insert(QString("sale_price"), ::OpenAPI::toJsonValue(sale_price));
    }
    if (m_shipping_isSet) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(shipping));
    }
    if (m_shipping_height_isSet) {
        obj.insert(QString("shipping_height"), ::OpenAPI::toJsonValue(shipping_height));
    }
    if (m_shipping_weight_isSet) {
        obj.insert(QString("shipping_weight"), ::OpenAPI::toJsonValue(shipping_weight));
    }
    if (m_shipping_width_isSet) {
        obj.insert(QString("shipping_width"), ::OpenAPI::toJsonValue(shipping_width));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(size));
    }
    if (m_size_system_isSet) {
        obj.insert(QString("size_system"), ::OpenAPI::toJsonValue(size_system));
    }
    if (m_size_type_isSet) {
        obj.insert(QString("size_type"), ::OpenAPI::toJsonValue(size_type));
    }
    if (m_tax_isSet) {
        obj.insert(QString("tax"), ::OpenAPI::toJsonValue(tax));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(title));
    }
    if (variant_names.size() > 0) {
        obj.insert(QString("variant_names"), ::OpenAPI::toJsonValue(variant_names));
    }
    if (variant_values.size() > 0) {
        obj.insert(QString("variant_values"), ::OpenAPI::toJsonValue(variant_values));
    }
    if (additional_image_link.size() > 0) {
        obj.insert(QString("additional_image_link"), ::OpenAPI::toJsonValue(additional_image_link));
    }
    if (image_link.size() > 0) {
        obj.insert(QString("image_link"), ::OpenAPI::toJsonValue(image_link));
    }
    if (m_video_link_isSet) {
        obj.insert(QString("video_link"), ::OpenAPI::toJsonValue(video_link));
    }
    return obj;
}

QString OAIItemAttributes::getAdLink() const {
    return ad_link;
}
void OAIItemAttributes::setAdLink(const QString &ad_link) {
    this->ad_link = ad_link;
    this->m_ad_link_isSet = true;
}

bool OAIItemAttributes::is_ad_link_Set() const{
    return m_ad_link_isSet;
}

bool OAIItemAttributes::is_ad_link_Valid() const{
    return m_ad_link_isValid;
}

bool OAIItemAttributes::isAdult() const {
    return adult;
}
void OAIItemAttributes::setAdult(const bool &adult) {
    this->adult = adult;
    this->m_adult_isSet = true;
}

bool OAIItemAttributes::is_adult_Set() const{
    return m_adult_isSet;
}

bool OAIItemAttributes::is_adult_Valid() const{
    return m_adult_isValid;
}

QString OAIItemAttributes::getAgeGroup() const {
    return age_group;
}
void OAIItemAttributes::setAgeGroup(const QString &age_group) {
    this->age_group = age_group;
    this->m_age_group_isSet = true;
}

bool OAIItemAttributes::is_age_group_Set() const{
    return m_age_group_isSet;
}

bool OAIItemAttributes::is_age_group_Valid() const{
    return m_age_group_isValid;
}

QString OAIItemAttributes::getAvailability() const {
    return availability;
}
void OAIItemAttributes::setAvailability(const QString &availability) {
    this->availability = availability;
    this->m_availability_isSet = true;
}

bool OAIItemAttributes::is_availability_Set() const{
    return m_availability_isSet;
}

bool OAIItemAttributes::is_availability_Valid() const{
    return m_availability_isValid;
}

double OAIItemAttributes::getAverageReviewRating() const {
    return average_review_rating;
}
void OAIItemAttributes::setAverageReviewRating(const double &average_review_rating) {
    this->average_review_rating = average_review_rating;
    this->m_average_review_rating_isSet = true;
}

bool OAIItemAttributes::is_average_review_rating_Set() const{
    return m_average_review_rating_isSet;
}

bool OAIItemAttributes::is_average_review_rating_Valid() const{
    return m_average_review_rating_isValid;
}

QString OAIItemAttributes::getBrand() const {
    return brand;
}
void OAIItemAttributes::setBrand(const QString &brand) {
    this->brand = brand;
    this->m_brand_isSet = true;
}

bool OAIItemAttributes::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIItemAttributes::is_brand_Valid() const{
    return m_brand_isValid;
}

bool OAIItemAttributes::isCheckoutEnabled() const {
    return checkout_enabled;
}
void OAIItemAttributes::setCheckoutEnabled(const bool &checkout_enabled) {
    this->checkout_enabled = checkout_enabled;
    this->m_checkout_enabled_isSet = true;
}

bool OAIItemAttributes::is_checkout_enabled_Set() const{
    return m_checkout_enabled_isSet;
}

bool OAIItemAttributes::is_checkout_enabled_Valid() const{
    return m_checkout_enabled_isValid;
}

QString OAIItemAttributes::getColor() const {
    return color;
}
void OAIItemAttributes::setColor(const QString &color) {
    this->color = color;
    this->m_color_isSet = true;
}

bool OAIItemAttributes::is_color_Set() const{
    return m_color_isSet;
}

bool OAIItemAttributes::is_color_Valid() const{
    return m_color_isValid;
}

QString OAIItemAttributes::getCondition() const {
    return condition;
}
void OAIItemAttributes::setCondition(const QString &condition) {
    this->condition = condition;
    this->m_condition_isSet = true;
}

bool OAIItemAttributes::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIItemAttributes::is_condition_Valid() const{
    return m_condition_isValid;
}

QString OAIItemAttributes::getCustomLabel0() const {
    return custom_label_0;
}
void OAIItemAttributes::setCustomLabel0(const QString &custom_label_0) {
    this->custom_label_0 = custom_label_0;
    this->m_custom_label_0_isSet = true;
}

bool OAIItemAttributes::is_custom_label_0_Set() const{
    return m_custom_label_0_isSet;
}

bool OAIItemAttributes::is_custom_label_0_Valid() const{
    return m_custom_label_0_isValid;
}

QString OAIItemAttributes::getCustomLabel1() const {
    return custom_label_1;
}
void OAIItemAttributes::setCustomLabel1(const QString &custom_label_1) {
    this->custom_label_1 = custom_label_1;
    this->m_custom_label_1_isSet = true;
}

bool OAIItemAttributes::is_custom_label_1_Set() const{
    return m_custom_label_1_isSet;
}

bool OAIItemAttributes::is_custom_label_1_Valid() const{
    return m_custom_label_1_isValid;
}

QString OAIItemAttributes::getCustomLabel2() const {
    return custom_label_2;
}
void OAIItemAttributes::setCustomLabel2(const QString &custom_label_2) {
    this->custom_label_2 = custom_label_2;
    this->m_custom_label_2_isSet = true;
}

bool OAIItemAttributes::is_custom_label_2_Set() const{
    return m_custom_label_2_isSet;
}

bool OAIItemAttributes::is_custom_label_2_Valid() const{
    return m_custom_label_2_isValid;
}

QString OAIItemAttributes::getCustomLabel3() const {
    return custom_label_3;
}
void OAIItemAttributes::setCustomLabel3(const QString &custom_label_3) {
    this->custom_label_3 = custom_label_3;
    this->m_custom_label_3_isSet = true;
}

bool OAIItemAttributes::is_custom_label_3_Set() const{
    return m_custom_label_3_isSet;
}

bool OAIItemAttributes::is_custom_label_3_Valid() const{
    return m_custom_label_3_isValid;
}

QString OAIItemAttributes::getCustomLabel4() const {
    return custom_label_4;
}
void OAIItemAttributes::setCustomLabel4(const QString &custom_label_4) {
    this->custom_label_4 = custom_label_4;
    this->m_custom_label_4_isSet = true;
}

bool OAIItemAttributes::is_custom_label_4_Set() const{
    return m_custom_label_4_isSet;
}

bool OAIItemAttributes::is_custom_label_4_Valid() const{
    return m_custom_label_4_isValid;
}

QString OAIItemAttributes::getDescription() const {
    return description;
}
void OAIItemAttributes::setDescription(const QString &description) {
    this->description = description;
    this->m_description_isSet = true;
}

bool OAIItemAttributes::is_description_Set() const{
    return m_description_isSet;
}

bool OAIItemAttributes::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIItemAttributes::isFreeShippingLabel() const {
    return free_shipping_label;
}
void OAIItemAttributes::setFreeShippingLabel(const bool &free_shipping_label) {
    this->free_shipping_label = free_shipping_label;
    this->m_free_shipping_label_isSet = true;
}

bool OAIItemAttributes::is_free_shipping_label_Set() const{
    return m_free_shipping_label_isSet;
}

bool OAIItemAttributes::is_free_shipping_label_Valid() const{
    return m_free_shipping_label_isValid;
}

QString OAIItemAttributes::getFreeShippingLimit() const {
    return free_shipping_limit;
}
void OAIItemAttributes::setFreeShippingLimit(const QString &free_shipping_limit) {
    this->free_shipping_limit = free_shipping_limit;
    this->m_free_shipping_limit_isSet = true;
}

bool OAIItemAttributes::is_free_shipping_limit_Set() const{
    return m_free_shipping_limit_isSet;
}

bool OAIItemAttributes::is_free_shipping_limit_Valid() const{
    return m_free_shipping_limit_isValid;
}

QString OAIItemAttributes::getGender() const {
    return gender;
}
void OAIItemAttributes::setGender(const QString &gender) {
    this->gender = gender;
    this->m_gender_isSet = true;
}

bool OAIItemAttributes::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIItemAttributes::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIItemAttributes::getGoogleProductCategory() const {
    return google_product_category;
}
void OAIItemAttributes::setGoogleProductCategory(const QString &google_product_category) {
    this->google_product_category = google_product_category;
    this->m_google_product_category_isSet = true;
}

bool OAIItemAttributes::is_google_product_category_Set() const{
    return m_google_product_category_isSet;
}

bool OAIItemAttributes::is_google_product_category_Valid() const{
    return m_google_product_category_isValid;
}

qint32 OAIItemAttributes::getGtin() const {
    return gtin;
}
void OAIItemAttributes::setGtin(const qint32 &gtin) {
    this->gtin = gtin;
    this->m_gtin_isSet = true;
}

bool OAIItemAttributes::is_gtin_Set() const{
    return m_gtin_isSet;
}

bool OAIItemAttributes::is_gtin_Valid() const{
    return m_gtin_isValid;
}

QString OAIItemAttributes::getId() const {
    return id;
}
void OAIItemAttributes::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIItemAttributes::is_id_Set() const{
    return m_id_isSet;
}

bool OAIItemAttributes::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIItemAttributes::getItemGroupId() const {
    return item_group_id;
}
void OAIItemAttributes::setItemGroupId(const QString &item_group_id) {
    this->item_group_id = item_group_id;
    this->m_item_group_id_isSet = true;
}

bool OAIItemAttributes::is_item_group_id_Set() const{
    return m_item_group_id_isSet;
}

bool OAIItemAttributes::is_item_group_id_Valid() const{
    return m_item_group_id_isValid;
}

qint64 OAIItemAttributes::getLastUpdatedTime() const {
    return last_updated_time;
}
void OAIItemAttributes::setLastUpdatedTime(const qint64 &last_updated_time) {
    this->last_updated_time = last_updated_time;
    this->m_last_updated_time_isSet = true;
}

bool OAIItemAttributes::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIItemAttributes::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

QString OAIItemAttributes::getLink() const {
    return link;
}
void OAIItemAttributes::setLink(const QString &link) {
    this->link = link;
    this->m_link_isSet = true;
}

bool OAIItemAttributes::is_link_Set() const{
    return m_link_isSet;
}

bool OAIItemAttributes::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIItemAttributes::getMaterial() const {
    return material;
}
void OAIItemAttributes::setMaterial(const QString &material) {
    this->material = material;
    this->m_material_isSet = true;
}

bool OAIItemAttributes::is_material_Set() const{
    return m_material_isSet;
}

bool OAIItemAttributes::is_material_Valid() const{
    return m_material_isValid;
}

QString OAIItemAttributes::getMinAdPrice() const {
    return min_ad_price;
}
void OAIItemAttributes::setMinAdPrice(const QString &min_ad_price) {
    this->min_ad_price = min_ad_price;
    this->m_min_ad_price_isSet = true;
}

bool OAIItemAttributes::is_min_ad_price_Set() const{
    return m_min_ad_price_isSet;
}

bool OAIItemAttributes::is_min_ad_price_Valid() const{
    return m_min_ad_price_isValid;
}

QString OAIItemAttributes::getMobileLink() const {
    return mobile_link;
}
void OAIItemAttributes::setMobileLink(const QString &mobile_link) {
    this->mobile_link = mobile_link;
    this->m_mobile_link_isSet = true;
}

bool OAIItemAttributes::is_mobile_link_Set() const{
    return m_mobile_link_isSet;
}

bool OAIItemAttributes::is_mobile_link_Valid() const{
    return m_mobile_link_isValid;
}

QString OAIItemAttributes::getMpn() const {
    return mpn;
}
void OAIItemAttributes::setMpn(const QString &mpn) {
    this->mpn = mpn;
    this->m_mpn_isSet = true;
}

bool OAIItemAttributes::is_mpn_Set() const{
    return m_mpn_isSet;
}

bool OAIItemAttributes::is_mpn_Valid() const{
    return m_mpn_isValid;
}

qint32 OAIItemAttributes::getNumberOfRatings() const {
    return number_of_ratings;
}
void OAIItemAttributes::setNumberOfRatings(const qint32 &number_of_ratings) {
    this->number_of_ratings = number_of_ratings;
    this->m_number_of_ratings_isSet = true;
}

bool OAIItemAttributes::is_number_of_ratings_Set() const{
    return m_number_of_ratings_isSet;
}

bool OAIItemAttributes::is_number_of_ratings_Valid() const{
    return m_number_of_ratings_isValid;
}

qint32 OAIItemAttributes::getNumberOfReviews() const {
    return number_of_reviews;
}
void OAIItemAttributes::setNumberOfReviews(const qint32 &number_of_reviews) {
    this->number_of_reviews = number_of_reviews;
    this->m_number_of_reviews_isSet = true;
}

bool OAIItemAttributes::is_number_of_reviews_Set() const{
    return m_number_of_reviews_isSet;
}

bool OAIItemAttributes::is_number_of_reviews_Valid() const{
    return m_number_of_reviews_isValid;
}

QString OAIItemAttributes::getPattern() const {
    return pattern;
}
void OAIItemAttributes::setPattern(const QString &pattern) {
    this->pattern = pattern;
    this->m_pattern_isSet = true;
}

bool OAIItemAttributes::is_pattern_Set() const{
    return m_pattern_isSet;
}

bool OAIItemAttributes::is_pattern_Valid() const{
    return m_pattern_isValid;
}

QString OAIItemAttributes::getPrice() const {
    return price;
}
void OAIItemAttributes::setPrice(const QString &price) {
    this->price = price;
    this->m_price_isSet = true;
}

bool OAIItemAttributes::is_price_Set() const{
    return m_price_isSet;
}

bool OAIItemAttributes::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIItemAttributes::getProductType() const {
    return product_type;
}
void OAIItemAttributes::setProductType(const QString &product_type) {
    this->product_type = product_type;
    this->m_product_type_isSet = true;
}

bool OAIItemAttributes::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIItemAttributes::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QString OAIItemAttributes::getSalePrice() const {
    return sale_price;
}
void OAIItemAttributes::setSalePrice(const QString &sale_price) {
    this->sale_price = sale_price;
    this->m_sale_price_isSet = true;
}

bool OAIItemAttributes::is_sale_price_Set() const{
    return m_sale_price_isSet;
}

bool OAIItemAttributes::is_sale_price_Valid() const{
    return m_sale_price_isValid;
}

QString OAIItemAttributes::getShipping() const {
    return shipping;
}
void OAIItemAttributes::setShipping(const QString &shipping) {
    this->shipping = shipping;
    this->m_shipping_isSet = true;
}

bool OAIItemAttributes::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIItemAttributes::is_shipping_Valid() const{
    return m_shipping_isValid;
}

QString OAIItemAttributes::getShippingHeight() const {
    return shipping_height;
}
void OAIItemAttributes::setShippingHeight(const QString &shipping_height) {
    this->shipping_height = shipping_height;
    this->m_shipping_height_isSet = true;
}

bool OAIItemAttributes::is_shipping_height_Set() const{
    return m_shipping_height_isSet;
}

bool OAIItemAttributes::is_shipping_height_Valid() const{
    return m_shipping_height_isValid;
}

QString OAIItemAttributes::getShippingWeight() const {
    return shipping_weight;
}
void OAIItemAttributes::setShippingWeight(const QString &shipping_weight) {
    this->shipping_weight = shipping_weight;
    this->m_shipping_weight_isSet = true;
}

bool OAIItemAttributes::is_shipping_weight_Set() const{
    return m_shipping_weight_isSet;
}

bool OAIItemAttributes::is_shipping_weight_Valid() const{
    return m_shipping_weight_isValid;
}

QString OAIItemAttributes::getShippingWidth() const {
    return shipping_width;
}
void OAIItemAttributes::setShippingWidth(const QString &shipping_width) {
    this->shipping_width = shipping_width;
    this->m_shipping_width_isSet = true;
}

bool OAIItemAttributes::is_shipping_width_Set() const{
    return m_shipping_width_isSet;
}

bool OAIItemAttributes::is_shipping_width_Valid() const{
    return m_shipping_width_isValid;
}

QString OAIItemAttributes::getSize() const {
    return size;
}
void OAIItemAttributes::setSize(const QString &size) {
    this->size = size;
    this->m_size_isSet = true;
}

bool OAIItemAttributes::is_size_Set() const{
    return m_size_isSet;
}

bool OAIItemAttributes::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIItemAttributes::getSizeSystem() const {
    return size_system;
}
void OAIItemAttributes::setSizeSystem(const QString &size_system) {
    this->size_system = size_system;
    this->m_size_system_isSet = true;
}

bool OAIItemAttributes::is_size_system_Set() const{
    return m_size_system_isSet;
}

bool OAIItemAttributes::is_size_system_Valid() const{
    return m_size_system_isValid;
}

QString OAIItemAttributes::getSizeType() const {
    return size_type;
}
void OAIItemAttributes::setSizeType(const QString &size_type) {
    this->size_type = size_type;
    this->m_size_type_isSet = true;
}

bool OAIItemAttributes::is_size_type_Set() const{
    return m_size_type_isSet;
}

bool OAIItemAttributes::is_size_type_Valid() const{
    return m_size_type_isValid;
}

QString OAIItemAttributes::getTax() const {
    return tax;
}
void OAIItemAttributes::setTax(const QString &tax) {
    this->tax = tax;
    this->m_tax_isSet = true;
}

bool OAIItemAttributes::is_tax_Set() const{
    return m_tax_isSet;
}

bool OAIItemAttributes::is_tax_Valid() const{
    return m_tax_isValid;
}

QString OAIItemAttributes::getTitle() const {
    return title;
}
void OAIItemAttributes::setTitle(const QString &title) {
    this->title = title;
    this->m_title_isSet = true;
}

bool OAIItemAttributes::is_title_Set() const{
    return m_title_isSet;
}

bool OAIItemAttributes::is_title_Valid() const{
    return m_title_isValid;
}

QList<QString> OAIItemAttributes::getVariantNames() const {
    return variant_names;
}
void OAIItemAttributes::setVariantNames(const QList<QString> &variant_names) {
    this->variant_names = variant_names;
    this->m_variant_names_isSet = true;
}

bool OAIItemAttributes::is_variant_names_Set() const{
    return m_variant_names_isSet;
}

bool OAIItemAttributes::is_variant_names_Valid() const{
    return m_variant_names_isValid;
}

QList<QString> OAIItemAttributes::getVariantValues() const {
    return variant_values;
}
void OAIItemAttributes::setVariantValues(const QList<QString> &variant_values) {
    this->variant_values = variant_values;
    this->m_variant_values_isSet = true;
}

bool OAIItemAttributes::is_variant_values_Set() const{
    return m_variant_values_isSet;
}

bool OAIItemAttributes::is_variant_values_Valid() const{
    return m_variant_values_isValid;
}

QList<QString> OAIItemAttributes::getAdditionalImageLink() const {
    return additional_image_link;
}
void OAIItemAttributes::setAdditionalImageLink(const QList<QString> &additional_image_link) {
    this->additional_image_link = additional_image_link;
    this->m_additional_image_link_isSet = true;
}

bool OAIItemAttributes::is_additional_image_link_Set() const{
    return m_additional_image_link_isSet;
}

bool OAIItemAttributes::is_additional_image_link_Valid() const{
    return m_additional_image_link_isValid;
}

QList<QString> OAIItemAttributes::getImageLink() const {
    return image_link;
}
void OAIItemAttributes::setImageLink(const QList<QString> &image_link) {
    this->image_link = image_link;
    this->m_image_link_isSet = true;
}

bool OAIItemAttributes::is_image_link_Set() const{
    return m_image_link_isSet;
}

bool OAIItemAttributes::is_image_link_Valid() const{
    return m_image_link_isValid;
}

QString OAIItemAttributes::getVideoLink() const {
    return video_link;
}
void OAIItemAttributes::setVideoLink(const QString &video_link) {
    this->video_link = video_link;
    this->m_video_link_isSet = true;
}

bool OAIItemAttributes::is_video_link_Set() const{
    return m_video_link_isSet;
}

bool OAIItemAttributes::is_video_link_Valid() const{
    return m_video_link_isValid;
}

bool OAIItemAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adult_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_age_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_availability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_review_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_checkout_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label_0_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_label_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_shipping_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_shipping_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_product_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gtin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_material_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_ad_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mpn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_ratings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_reviews_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sale_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_width_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (variant_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (variant_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (additional_image_link.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (image_link.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItemAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
