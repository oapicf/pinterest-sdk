/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetingTemplateCommon.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetingTemplateCommon::OAITargetingTemplateCommon(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetingTemplateCommon::OAITargetingTemplateCommon() {
    this->initializeModel();
}

OAITargetingTemplateCommon::~OAITargetingTemplateCommon() {}

void OAITargetingTemplateCommon::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_auto_targeting_enabled_isSet = false;
    m_auto_targeting_enabled_isValid = false;

    m_targeting_attributes_isSet = false;
    m_targeting_attributes_isValid = false;

    m_placement_group_isSet = false;
    m_placement_group_isValid = false;

    m_keywords_isSet = false;
    m_keywords_isValid = false;

    m_tracking_urls_isSet = false;
    m_tracking_urls_isValid = false;
}

void OAITargetingTemplateCommon::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetingTemplateCommon::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_auto_targeting_enabled_isValid = ::OpenAPI::fromJsonValue(auto_targeting_enabled, json[QString("auto_targeting_enabled")]);
    m_auto_targeting_enabled_isSet = !json[QString("auto_targeting_enabled")].isNull() && m_auto_targeting_enabled_isValid;

    m_targeting_attributes_isValid = ::OpenAPI::fromJsonValue(targeting_attributes, json[QString("targeting_attributes")]);
    m_targeting_attributes_isSet = !json[QString("targeting_attributes")].isNull() && m_targeting_attributes_isValid;

    m_placement_group_isValid = ::OpenAPI::fromJsonValue(placement_group, json[QString("placement_group")]);
    m_placement_group_isSet = !json[QString("placement_group")].isNull() && m_placement_group_isValid;

    m_keywords_isValid = ::OpenAPI::fromJsonValue(keywords, json[QString("keywords")]);
    m_keywords_isSet = !json[QString("keywords")].isNull() && m_keywords_isValid;

    m_tracking_urls_isValid = ::OpenAPI::fromJsonValue(tracking_urls, json[QString("tracking_urls")]);
    m_tracking_urls_isSet = !json[QString("tracking_urls")].isNull() && m_tracking_urls_isValid;
}

QString OAITargetingTemplateCommon::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetingTemplateCommon::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_auto_targeting_enabled_isSet) {
        obj.insert(QString("auto_targeting_enabled"), ::OpenAPI::toJsonValue(auto_targeting_enabled));
    }
    if (targeting_attributes.isSet()) {
        obj.insert(QString("targeting_attributes"), ::OpenAPI::toJsonValue(targeting_attributes));
    }
    if (placement_group.isSet()) {
        obj.insert(QString("placement_group"), ::OpenAPI::toJsonValue(placement_group));
    }
    if (keywords.size() > 0) {
        obj.insert(QString("keywords"), ::OpenAPI::toJsonValue(keywords));
    }
    if (tracking_urls.isSet()) {
        obj.insert(QString("tracking_urls"), ::OpenAPI::toJsonValue(tracking_urls));
    }
    return obj;
}

QString OAITargetingTemplateCommon::getName() const {
    return name;
}
void OAITargetingTemplateCommon::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAITargetingTemplateCommon::is_name_Set() const{
    return m_name_isSet;
}

bool OAITargetingTemplateCommon::is_name_Valid() const{
    return m_name_isValid;
}

bool OAITargetingTemplateCommon::isAutoTargetingEnabled() const {
    return auto_targeting_enabled;
}
void OAITargetingTemplateCommon::setAutoTargetingEnabled(const bool &auto_targeting_enabled) {
    this->auto_targeting_enabled = auto_targeting_enabled;
    this->m_auto_targeting_enabled_isSet = true;
}

bool OAITargetingTemplateCommon::is_auto_targeting_enabled_Set() const{
    return m_auto_targeting_enabled_isSet;
}

bool OAITargetingTemplateCommon::is_auto_targeting_enabled_Valid() const{
    return m_auto_targeting_enabled_isValid;
}

OAITargetingSpec OAITargetingTemplateCommon::getTargetingAttributes() const {
    return targeting_attributes;
}
void OAITargetingTemplateCommon::setTargetingAttributes(const OAITargetingSpec &targeting_attributes) {
    this->targeting_attributes = targeting_attributes;
    this->m_targeting_attributes_isSet = true;
}

bool OAITargetingTemplateCommon::is_targeting_attributes_Set() const{
    return m_targeting_attributes_isSet;
}

bool OAITargetingTemplateCommon::is_targeting_attributes_Valid() const{
    return m_targeting_attributes_isValid;
}

OAIPlacementGroupType OAITargetingTemplateCommon::getPlacementGroup() const {
    return placement_group;
}
void OAITargetingTemplateCommon::setPlacementGroup(const OAIPlacementGroupType &placement_group) {
    this->placement_group = placement_group;
    this->m_placement_group_isSet = true;
}

bool OAITargetingTemplateCommon::is_placement_group_Set() const{
    return m_placement_group_isSet;
}

bool OAITargetingTemplateCommon::is_placement_group_Valid() const{
    return m_placement_group_isValid;
}

QList<OAITargetingTemplateKeyword> OAITargetingTemplateCommon::getKeywords() const {
    return keywords;
}
void OAITargetingTemplateCommon::setKeywords(const QList<OAITargetingTemplateKeyword> &keywords) {
    this->keywords = keywords;
    this->m_keywords_isSet = true;
}

bool OAITargetingTemplateCommon::is_keywords_Set() const{
    return m_keywords_isSet;
}

bool OAITargetingTemplateCommon::is_keywords_Valid() const{
    return m_keywords_isValid;
}

OAITrackingUrls OAITargetingTemplateCommon::getTrackingUrls() const {
    return tracking_urls;
}
void OAITargetingTemplateCommon::setTrackingUrls(const OAITrackingUrls &tracking_urls) {
    this->tracking_urls = tracking_urls;
    this->m_tracking_urls_isSet = true;
}

bool OAITargetingTemplateCommon::is_tracking_urls_Set() const{
    return m_tracking_urls_isSet;
}

bool OAITargetingTemplateCommon::is_tracking_urls_Valid() const{
    return m_tracking_urls_isValid;
}

bool OAITargetingTemplateCommon::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_targeting_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (targeting_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (placement_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (keywords.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (tracking_urls.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetingTemplateCommon::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
