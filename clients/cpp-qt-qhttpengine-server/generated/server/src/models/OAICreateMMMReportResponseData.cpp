/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMMMReportResponseData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMMMReportResponseData::OAICreateMMMReportResponseData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMMMReportResponseData::OAICreateMMMReportResponseData() {
    this->initializeModel();
}

OAICreateMMMReportResponseData::~OAICreateMMMReportResponseData() {}

void OAICreateMMMReportResponseData::initializeModel() {

    m_report_status_isSet = false;
    m_report_status_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICreateMMMReportResponseData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMMMReportResponseData::fromJsonObject(QJsonObject json) {

    m_report_status_isValid = ::OpenAPI::fromJsonValue(report_status, json[QString("report_status")]);
    m_report_status_isSet = !json[QString("report_status")].isNull() && m_report_status_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICreateMMMReportResponseData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMMMReportResponseData::asJsonObject() const {
    QJsonObject obj;
    if (report_status.isSet()) {
        obj.insert(QString("report_status"), ::OpenAPI::toJsonValue(report_status));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(token));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(message));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(status));
    }
    return obj;
}

OAIBulkReportingJobStatus OAICreateMMMReportResponseData::getReportStatus() const {
    return report_status;
}
void OAICreateMMMReportResponseData::setReportStatus(const OAIBulkReportingJobStatus &report_status) {
    this->report_status = report_status;
    this->m_report_status_isSet = true;
}

bool OAICreateMMMReportResponseData::is_report_status_Set() const{
    return m_report_status_isSet;
}

bool OAICreateMMMReportResponseData::is_report_status_Valid() const{
    return m_report_status_isValid;
}

QString OAICreateMMMReportResponseData::getToken() const {
    return token;
}
void OAICreateMMMReportResponseData::setToken(const QString &token) {
    this->token = token;
    this->m_token_isSet = true;
}

bool OAICreateMMMReportResponseData::is_token_Set() const{
    return m_token_isSet;
}

bool OAICreateMMMReportResponseData::is_token_Valid() const{
    return m_token_isValid;
}

QString OAICreateMMMReportResponseData::getMessage() const {
    return message;
}
void OAICreateMMMReportResponseData::setMessage(const QString &message) {
    this->message = message;
    this->m_message_isSet = true;
}

bool OAICreateMMMReportResponseData::is_message_Set() const{
    return m_message_isSet;
}

bool OAICreateMMMReportResponseData::is_message_Valid() const{
    return m_message_isValid;
}

QString OAICreateMMMReportResponseData::getStatus() const {
    return status;
}
void OAICreateMMMReportResponseData::setStatus(const QString &status) {
    this->status = status;
    this->m_status_isSet = true;
}

bool OAICreateMMMReportResponseData::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateMMMReportResponseData::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICreateMMMReportResponseData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (report_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMMMReportResponseData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
