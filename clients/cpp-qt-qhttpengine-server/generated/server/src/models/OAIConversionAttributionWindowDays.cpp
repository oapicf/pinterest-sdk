/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversionAttributionWindowDays.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversionAttributionWindowDays::OAIConversionAttributionWindowDays(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversionAttributionWindowDays::OAIConversionAttributionWindowDays() {
    this->initializeModel();
}

OAIConversionAttributionWindowDays::~OAIConversionAttributionWindowDays() {}

void OAIConversionAttributionWindowDays::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConversionAttributionWindowDays::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConversionAttributionWindowDays::fromJson(QString jsonString) {
    
    if ( jsonString.compare(QString::number(0), Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversionAttributionWindowDays::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(1), Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversionAttributionWindowDays::_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(7), Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversionAttributionWindowDays::_7;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(14), Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversionAttributionWindowDays::_14;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(30), Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversionAttributionWindowDays::_30;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(60), Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversionAttributionWindowDays::_60;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConversionAttributionWindowDays::fromJsonValue(QJsonValue json) {
m_value = static_cast<eOAIConversionAttributionWindowDays>(json.toInt());
}

QString OAIConversionAttributionWindowDays::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConversionAttributionWindowDays::_0:
            val = QString::number(0);
            break;
        case eOAIConversionAttributionWindowDays::_1:
            val = QString::number(1);
            break;
        case eOAIConversionAttributionWindowDays::_7:
            val = QString::number(7);
            break;
        case eOAIConversionAttributionWindowDays::_14:
            val = QString::number(14);
            break;
        case eOAIConversionAttributionWindowDays::_30:
            val = QString::number(30);
            break;
        case eOAIConversionAttributionWindowDays::_60:
            val = QString::number(60);
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConversionAttributionWindowDays::asJsonValue() const {
    
    return QJsonValue(static_cast<int>(m_value));
}


OAIConversionAttributionWindowDays::eOAIConversionAttributionWindowDays OAIConversionAttributionWindowDays::getValue() const {
    return m_value;
}

void OAIConversionAttributionWindowDays::setValue(const OAIConversionAttributionWindowDays::eOAIConversionAttributionWindowDays& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConversionAttributionWindowDays::isSet() const {
    
    return m_value_isSet;
}

bool OAIConversionAttributionWindowDays::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
