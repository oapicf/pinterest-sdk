/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConditionFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConditionFilter::OAIConditionFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConditionFilter::OAIConditionFilter() {
    this->initializeModel();
}

OAIConditionFilter::~OAIConditionFilter() {}

void OAIConditionFilter::initializeModel() {

    m_condition_isSet = false;
    m_condition_isValid = false;
}

void OAIConditionFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConditionFilter::fromJsonObject(QJsonObject json) {

    m_condition_isValid = ::OpenAPI::fromJsonValue(condition, json[QString("CONDITION")]);
    m_condition_isSet = !json[QString("CONDITION")].isNull() && m_condition_isValid;
}

QString OAIConditionFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConditionFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_condition_isSet) {
        obj.insert(QString("CONDITION"), ::OpenAPI::toJsonValue(condition));
    }
    return obj;
}

OAICatalogsProductGroupMultipleStringCriteria OAIConditionFilter::getCondition() const {
    return condition;
}
void OAIConditionFilter::setCondition(const OAICatalogsProductGroupMultipleStringCriteria &condition) {
    this->condition = condition;
    this->m_condition_isSet = true;
}

bool OAIConditionFilter::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIConditionFilter::is_condition_Valid() const{
    return m_condition_isValid;
}

bool OAIConditionFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConditionFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_condition_isValid && true;
}

} // namespace OpenAPI
