/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdsCreditRedeemRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdsCreditRedeemRequest::OAIAdsCreditRedeemRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdsCreditRedeemRequest::OAIAdsCreditRedeemRequest() {
    this->initializeModel();
}

OAIAdsCreditRedeemRequest::~OAIAdsCreditRedeemRequest() {}

void OAIAdsCreditRedeemRequest::initializeModel() {

    m_offer_code_hash_isSet = false;
    m_offer_code_hash_isValid = false;

    m_validate_only_isSet = false;
    m_validate_only_isValid = false;
}

void OAIAdsCreditRedeemRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdsCreditRedeemRequest::fromJsonObject(QJsonObject json) {

    m_offer_code_hash_isValid = ::OpenAPI::fromJsonValue(offer_code_hash, json[QString("offerCodeHash")]);
    m_offer_code_hash_isSet = !json[QString("offerCodeHash")].isNull() && m_offer_code_hash_isValid;

    m_validate_only_isValid = ::OpenAPI::fromJsonValue(validate_only, json[QString("validateOnly")]);
    m_validate_only_isSet = !json[QString("validateOnly")].isNull() && m_validate_only_isValid;
}

QString OAIAdsCreditRedeemRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdsCreditRedeemRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_offer_code_hash_isSet) {
        obj.insert(QString("offerCodeHash"), ::OpenAPI::toJsonValue(offer_code_hash));
    }
    if (m_validate_only_isSet) {
        obj.insert(QString("validateOnly"), ::OpenAPI::toJsonValue(validate_only));
    }
    return obj;
}

QString OAIAdsCreditRedeemRequest::getOfferCodeHash() const {
    return offer_code_hash;
}
void OAIAdsCreditRedeemRequest::setOfferCodeHash(const QString &offer_code_hash) {
    this->offer_code_hash = offer_code_hash;
    this->m_offer_code_hash_isSet = true;
}

bool OAIAdsCreditRedeemRequest::is_offer_code_hash_Set() const{
    return m_offer_code_hash_isSet;
}

bool OAIAdsCreditRedeemRequest::is_offer_code_hash_Valid() const{
    return m_offer_code_hash_isValid;
}

bool OAIAdsCreditRedeemRequest::isValidateOnly() const {
    return validate_only;
}
void OAIAdsCreditRedeemRequest::setValidateOnly(const bool &validate_only) {
    this->validate_only = validate_only;
    this->m_validate_only_isSet = true;
}

bool OAIAdsCreditRedeemRequest::is_validate_only_Set() const{
    return m_validate_only_isSet;
}

bool OAIAdsCreditRedeemRequest::is_validate_only_Valid() const{
    return m_validate_only_isValid;
}

bool OAIAdsCreditRedeemRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offer_code_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validate_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdsCreditRedeemRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_offer_code_hash_isValid && m_validate_only_isValid && true;
}

} // namespace OpenAPI
