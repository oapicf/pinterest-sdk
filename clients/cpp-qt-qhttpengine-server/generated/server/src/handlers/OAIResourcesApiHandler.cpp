/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIResourcesApiHandler.h"
#include "OAIResourcesApiRequest.h"

namespace OpenAPI {

OAIResourcesApiHandler::OAIResourcesApiHandler(){

}

OAIResourcesApiHandler::~OAIResourcesApiHandler(){

}

void OAIResourcesApiHandler::adAccountCountries_get() {
    auto reqObj = qobject_cast<OAIResourcesApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIAdAccountsCountryResponse res;
        reqObj->adAccountCountries_getResponse(res);
    }
}
void OAIResourcesApiHandler::deliveryMetrics_get(QString report_type) {
    Q_UNUSED(report_type);
    auto reqObj = qobject_cast<OAIResourcesApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeliveryMetricsResponse res;
        reqObj->deliveryMetrics_getResponse(res);
    }
}
void OAIResourcesApiHandler::interestTargetingOptions_get(QString interest_id) {
    Q_UNUSED(interest_id);
    auto reqObj = qobject_cast<OAIResourcesApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAISingleInterestTargetingOptionResponse res;
        reqObj->interestTargetingOptions_getResponse(res);
    }
}
void OAIResourcesApiHandler::leadFormQuestions_get() {
    auto reqObj = qobject_cast<OAIResourcesApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        
        reqObj->leadFormQuestions_getResponse();
    }
}
void OAIResourcesApiHandler::metricsReadyState_get(QString date) {
    Q_UNUSED(date);
    auto reqObj = qobject_cast<OAIResourcesApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIBookClosedResponse res;
        reqObj->metricsReadyState_getResponse(res);
    }
}
void OAIResourcesApiHandler::targetingOptions_get(QString targeting_type, QString client_id, QString oauth_signature, QString timestamp, QString ad_account_id) {
    Q_UNUSED(targeting_type);
    Q_UNUSED(client_id);
    Q_UNUSED(oauth_signature);
    Q_UNUSED(timestamp);
    Q_UNUSED(ad_account_id);
    auto reqObj = qobject_cast<OAIResourcesApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        QList<OAIObject> res;
        reqObj->targetingOptions_getResponse(res);
    }
}


}
