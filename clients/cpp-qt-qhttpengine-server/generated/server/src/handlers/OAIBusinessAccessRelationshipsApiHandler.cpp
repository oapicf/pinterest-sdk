/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIBusinessAccessRelationshipsApiHandler.h"
#include "OAIBusinessAccessRelationshipsApiRequest.h"

namespace OpenAPI {

OAIBusinessAccessRelationshipsApiHandler::OAIBusinessAccessRelationshipsApiHandler(){

}

OAIBusinessAccessRelationshipsApiHandler::~OAIBusinessAccessRelationshipsApiHandler(){

}

void OAIBusinessAccessRelationshipsApiHandler::deleteBusinessMembership(QString business_id, OAIMembersToDeleteBody oai_members_to_delete_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_members_to_delete_body);
    auto reqObj = qobject_cast<OAIBusinessAccessRelationshipsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeletedMembersResponse res;
        reqObj->deleteBusinessMembershipResponse(res);
    }
}
void OAIBusinessAccessRelationshipsApiHandler::deleteBusinessPartners(QString business_id, OAIDeletePartnersRequest oai_delete_partners_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_delete_partners_request);
    auto reqObj = qobject_cast<OAIBusinessAccessRelationshipsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeletePartnersResponse res;
        reqObj->deleteBusinessPartnersResponse(res);
    }
}
void OAIBusinessAccessRelationshipsApiHandler::get_businessEmployers(qint32 page_size, QString bookmark) {
    Q_UNUSED(page_size);
    Q_UNUSED(bookmark);
    auto reqObj = qobject_cast<OAIBusinessAccessRelationshipsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGet_business_employers_200_response res;
        reqObj->get_businessEmployersResponse(res);
    }
}
void OAIBusinessAccessRelationshipsApiHandler::get_businessMembers(QString business_id, bool assets_summary, QList<OAIMemberBusinessRole> business_roles, QString member_ids, qint32 start_index, QString bookmark, qint32 page_size) {
    Q_UNUSED(business_id);
    Q_UNUSED(assets_summary);
    Q_UNUSED(business_roles);
    Q_UNUSED(member_ids);
    Q_UNUSED(start_index);
    Q_UNUSED(bookmark);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAIBusinessAccessRelationshipsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGet_business_members_200_response res;
        reqObj->get_businessMembersResponse(res);
    }
}
void OAIBusinessAccessRelationshipsApiHandler::get_businessPartners(QString business_id, bool assets_summary, OAIPartnerType partner_type, QString partner_ids, qint32 start_index, qint32 page_size, QString bookmark) {
    Q_UNUSED(business_id);
    Q_UNUSED(assets_summary);
    Q_UNUSED(partner_type);
    Q_UNUSED(partner_ids);
    Q_UNUSED(start_index);
    Q_UNUSED(page_size);
    Q_UNUSED(bookmark);
    auto reqObj = qobject_cast<OAIBusinessAccessRelationshipsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGet_business_partners_200_response res;
        reqObj->get_businessPartnersResponse(res);
    }
}
void OAIBusinessAccessRelationshipsApiHandler::update_businessMemberships(QString business_id, QList<OAIUpdateMemberBusinessRoleBody> oai_update_member_business_role_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_update_member_business_role_body);
    auto reqObj = qobject_cast<OAIBusinessAccessRelationshipsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIUpdateMemberResultsResponseArray res;
        reqObj->update_businessMembershipsResponse(res);
    }
}


}
