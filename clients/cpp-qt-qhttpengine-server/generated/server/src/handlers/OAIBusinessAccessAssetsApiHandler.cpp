/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIBusinessAccessAssetsApiHandler.h"
#include "OAIBusinessAccessAssetsApiRequest.h"

namespace OpenAPI {

OAIBusinessAccessAssetsApiHandler::OAIBusinessAccessAssetsApiHandler(){

}

OAIBusinessAccessAssetsApiHandler::~OAIBusinessAccessAssetsApiHandler(){

}

void OAIBusinessAccessAssetsApiHandler::assetGroup_create(QString business_id, OAICreateAssetGroupBody oai_create_asset_group_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_create_asset_group_body);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAICreateAssetGroupResponse res;
        reqObj->assetGroup_createResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::assetGroup_delete(QString business_id, OAIDeleteAssetGroupBody oai_delete_asset_group_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_delete_asset_group_body);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeleteAssetGroupResponse res;
        reqObj->assetGroup_deleteResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::assetGroup_update(QString business_id, OAIUpdateAssetGroupBody oai_update_asset_group_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_update_asset_group_body);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIUpdateAssetGroupResponse res;
        reqObj->assetGroup_updateResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessAssetMembers_get(QString business_id, QString asset_id, QString bookmark, qint32 page_size, qint32 start_index) {
    Q_UNUSED(business_id);
    Q_UNUSED(asset_id);
    Q_UNUSED(bookmark);
    Q_UNUSED(page_size);
    Q_UNUSED(start_index);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIBusiness_asset_members_get_200_response res;
        reqObj->businessAssetMembers_getResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessAssetPartners_get(QString business_id, QString asset_id, qint32 start_index, QString bookmark, qint32 page_size) {
    Q_UNUSED(business_id);
    Q_UNUSED(asset_id);
    Q_UNUSED(start_index);
    Q_UNUSED(bookmark);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIBusiness_asset_partners_get_200_response res;
        reqObj->businessAssetPartners_getResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessAssets_get(QString business_id, QList<OAIPermissionsWithOwner> permissions, QString child_asset_id, QString asset_group_id, QString asset_type, qint32 start_index, QString bookmark, qint32 page_size) {
    Q_UNUSED(business_id);
    Q_UNUSED(permissions);
    Q_UNUSED(child_asset_id);
    Q_UNUSED(asset_group_id);
    Q_UNUSED(asset_type);
    Q_UNUSED(start_index);
    Q_UNUSED(bookmark);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIBusiness_assets_get_200_response res;
        reqObj->businessAssets_getResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessMemberAssets_get(QString business_id, QString member_id, QString asset_type, qint32 start_index, QString bookmark, qint32 page_size) {
    Q_UNUSED(business_id);
    Q_UNUSED(member_id);
    Q_UNUSED(asset_type);
    Q_UNUSED(start_index);
    Q_UNUSED(bookmark);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIBusiness_member_assets_get_200_response res;
        reqObj->businessMemberAssets_getResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessMembersAssetAccess_delete(QString business_id, OAIBusiness_members_asset_access_delete_request oai_business_members_asset_access_delete_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_business_members_asset_access_delete_request);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeleteMemberAccessResultsResponseArray res;
        reqObj->businessMembersAssetAccess_deleteResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessMembersAssetAccess_update(QString business_id, OAIUpdateMemberAssetAccessBody oai_update_member_asset_access_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_update_member_asset_access_body);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIUpdateMemberAssetsResultsResponseArray res;
        reqObj->businessMembersAssetAccess_updateResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::businessPartnerAssetAccess_get(QString business_id, QString partner_id, OAIPartnerType partner_type, QString asset_type, qint32 start_index, qint32 page_size, QString bookmark) {
    Q_UNUSED(business_id);
    Q_UNUSED(partner_id);
    Q_UNUSED(partner_type);
    Q_UNUSED(asset_type);
    Q_UNUSED(start_index);
    Q_UNUSED(page_size);
    Q_UNUSED(bookmark);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIBusiness_partner_asset_access_get_200_response res;
        reqObj->businessPartnerAssetAccess_getResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::deletePartnerAssetAccessHandlerImpl(QString business_id, OAIDeletePartnerAssetAccessBody oai_delete_partner_asset_access_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_delete_partner_asset_access_body);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeletePartnerAssetsResultsResponseArray res;
        reqObj->deletePartnerAssetAccessHandlerImplResponse(res);
    }
}
void OAIBusinessAccessAssetsApiHandler::updatePartnerAssetAccessHandlerImpl(QString business_id, OAIUpdatePartnerAssetAccessBody oai_update_partner_asset_access_body) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_update_partner_asset_access_body);
    auto reqObj = qobject_cast<OAIBusinessAccessAssetsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIUpdatePartnerAssetsResultsResponseArray res;
        reqObj->updatePartnerAssetAccessHandlerImplResponse(res);
    }
}


}
