/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAICustomerListsApiHandler.h"
#include "OAICustomerListsApiRequest.h"

namespace OpenAPI {

OAICustomerListsApiHandler::OAICustomerListsApiHandler(){

}

OAICustomerListsApiHandler::~OAICustomerListsApiHandler(){

}

void OAICustomerListsApiHandler::customerLists_create(QString ad_account_id, OAICustomerListRequest oai_customer_list_request) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(oai_customer_list_request);
    auto reqObj = qobject_cast<OAICustomerListsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAICustomerList res;
        reqObj->customerLists_createResponse(res);
    }
}
void OAICustomerListsApiHandler::customerLists_get(QString ad_account_id, QString customer_list_id) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(customer_list_id);
    auto reqObj = qobject_cast<OAICustomerListsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAICustomerList res;
        reqObj->customerLists_getResponse(res);
    }
}
void OAICustomerListsApiHandler::customerLists_list(QString ad_account_id, qint32 page_size, QString order, QString bookmark) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(page_size);
    Q_UNUSED(order);
    Q_UNUSED(bookmark);
    auto reqObj = qobject_cast<OAICustomerListsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAICustomer_lists_list_200_response res;
        reqObj->customerLists_listResponse(res);
    }
}
void OAICustomerListsApiHandler::customerLists_update(QString ad_account_id, QString customer_list_id, OAICustomerListUpdateRequest oai_customer_list_update_request) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(customer_list_id);
    Q_UNUSED(oai_customer_list_update_request);
    auto reqObj = qobject_cast<OAICustomerListsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAICustomerList res;
        reqObj->customerLists_updateResponse(res);
    }
}


}
