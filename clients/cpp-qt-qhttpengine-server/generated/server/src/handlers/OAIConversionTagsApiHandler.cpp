/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIConversionTagsApiHandler.h"
#include "OAIConversionTagsApiRequest.h"

namespace OpenAPI {

OAIConversionTagsApiHandler::OAIConversionTagsApiHandler(){

}

OAIConversionTagsApiHandler::~OAIConversionTagsApiHandler(){

}

void OAIConversionTagsApiHandler::conversionTags_create(QString ad_account_id, OAIConversionTagCreate oai_conversion_tag_create) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(oai_conversion_tag_create);
    auto reqObj = qobject_cast<OAIConversionTagsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIConversionTagResponse res;
        reqObj->conversionTags_createResponse(res);
    }
}
void OAIConversionTagsApiHandler::conversionTags_get(QString ad_account_id, QString conversion_tag_id) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(conversion_tag_id);
    auto reqObj = qobject_cast<OAIConversionTagsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIConversionTagResponse res;
        reqObj->conversionTags_getResponse(res);
    }
}
void OAIConversionTagsApiHandler::conversionTags_list(QString ad_account_id, bool filter_deleted) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(filter_deleted);
    auto reqObj = qobject_cast<OAIConversionTagsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIConversionTagListResponse res;
        reqObj->conversionTags_listResponse(res);
    }
}
void OAIConversionTagsApiHandler::ocpmEligibleConversionTags_get(QString ad_account_id) {
    Q_UNUSED(ad_account_id);
    auto reqObj = qobject_cast<OAIConversionTagsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        QMap<QString, QList<OAIConversionEventResponse>> res;
        reqObj->ocpmEligibleConversionTags_getResponse(res);
    }
}
void OAIConversionTagsApiHandler::pageVisitConversionTags_get(QString ad_account_id, qint32 page_size, QString order, QString bookmark) {
    Q_UNUSED(ad_account_id);
    Q_UNUSED(page_size);
    Q_UNUSED(order);
    Q_UNUSED(bookmark);
    auto reqObj = qobject_cast<OAIConversionTagsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIPage_visit_conversion_tags_get_200_response res;
        reqObj->pageVisitConversionTags_getResponse(res);
    }
}


}
