/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>


#include "OAIApiRouter.h"
#include "OAIAdAccountsApiRequest.h"
#include "OAIAdGroupsApiRequest.h"
#include "OAIAdsApiRequest.h"
#include "OAIAdvancedAuctionApiRequest.h"
#include "OAIAudienceInsightsApiRequest.h"
#include "OAIAudienceSharingApiRequest.h"
#include "OAIAudiencesApiRequest.h"
#include "OAIBillingApiRequest.h"
#include "OAIBoardsApiRequest.h"
#include "OAIBulkApiRequest.h"
#include "OAIBusinessAccessAssetsApiRequest.h"
#include "OAIBusinessAccessInviteApiRequest.h"
#include "OAIBusinessAccessRelationshipsApiRequest.h"
#include "OAICampaignsApiRequest.h"
#include "OAICatalogsApiRequest.h"
#include "OAIConversionEventsApiRequest.h"
#include "OAIConversionTagsApiRequest.h"
#include "OAICustomerListsApiRequest.h"
#include "OAIIntegrationsApiRequest.h"
#include "OAIKeywordsApiRequest.h"
#include "OAILeadAdsApiRequest.h"
#include "OAILeadFormsApiRequest.h"
#include "OAILeadsExportApiRequest.h"
#include "OAIMediaApiRequest.h"
#include "OAIOauthApiRequest.h"
#include "OAIOrderLinesApiRequest.h"
#include "OAIPinsApiRequest.h"
#include "OAIProductGroupPromotionsApiRequest.h"
#include "OAIResourcesApiRequest.h"
#include "OAISearchApiRequest.h"
#include "OAITargetingTemplateApiRequest.h"
#include "OAITermsApiRequest.h"
#include "OAITermsOfServiceApiRequest.h"
#include "OAIUserAccountApiRequest.h"


namespace OpenAPI {

OAIApiRouter::OAIApiRouter() {
    createApiHandlers();
}

OAIApiRouter::~OAIApiRouter(){

}

void OAIApiRouter::createApiHandlers() { 
    mOAIAdAccountsApiHandler = QSharedPointer<OAIAdAccountsApiHandler>::create();
    mOAIAdGroupsApiHandler = QSharedPointer<OAIAdGroupsApiHandler>::create();
    mOAIAdsApiHandler = QSharedPointer<OAIAdsApiHandler>::create();
    mOAIAdvancedAuctionApiHandler = QSharedPointer<OAIAdvancedAuctionApiHandler>::create();
    mOAIAudienceInsightsApiHandler = QSharedPointer<OAIAudienceInsightsApiHandler>::create();
    mOAIAudienceSharingApiHandler = QSharedPointer<OAIAudienceSharingApiHandler>::create();
    mOAIAudiencesApiHandler = QSharedPointer<OAIAudiencesApiHandler>::create();
    mOAIBillingApiHandler = QSharedPointer<OAIBillingApiHandler>::create();
    mOAIBoardsApiHandler = QSharedPointer<OAIBoardsApiHandler>::create();
    mOAIBulkApiHandler = QSharedPointer<OAIBulkApiHandler>::create();
    mOAIBusinessAccessAssetsApiHandler = QSharedPointer<OAIBusinessAccessAssetsApiHandler>::create();
    mOAIBusinessAccessInviteApiHandler = QSharedPointer<OAIBusinessAccessInviteApiHandler>::create();
    mOAIBusinessAccessRelationshipsApiHandler = QSharedPointer<OAIBusinessAccessRelationshipsApiHandler>::create();
    mOAICampaignsApiHandler = QSharedPointer<OAICampaignsApiHandler>::create();
    mOAICatalogsApiHandler = QSharedPointer<OAICatalogsApiHandler>::create();
    mOAIConversionEventsApiHandler = QSharedPointer<OAIConversionEventsApiHandler>::create();
    mOAIConversionTagsApiHandler = QSharedPointer<OAIConversionTagsApiHandler>::create();
    mOAICustomerListsApiHandler = QSharedPointer<OAICustomerListsApiHandler>::create();
    mOAIIntegrationsApiHandler = QSharedPointer<OAIIntegrationsApiHandler>::create();
    mOAIKeywordsApiHandler = QSharedPointer<OAIKeywordsApiHandler>::create();
    mOAILeadAdsApiHandler = QSharedPointer<OAILeadAdsApiHandler>::create();
    mOAILeadFormsApiHandler = QSharedPointer<OAILeadFormsApiHandler>::create();
    mOAILeadsExportApiHandler = QSharedPointer<OAILeadsExportApiHandler>::create();
    mOAIMediaApiHandler = QSharedPointer<OAIMediaApiHandler>::create();
    mOAIOauthApiHandler = QSharedPointer<OAIOauthApiHandler>::create();
    mOAIOrderLinesApiHandler = QSharedPointer<OAIOrderLinesApiHandler>::create();
    mOAIPinsApiHandler = QSharedPointer<OAIPinsApiHandler>::create();
    mOAIProductGroupPromotionsApiHandler = QSharedPointer<OAIProductGroupPromotionsApiHandler>::create();
    mOAIResourcesApiHandler = QSharedPointer<OAIResourcesApiHandler>::create();
    mOAISearchApiHandler = QSharedPointer<OAISearchApiHandler>::create();
    mOAITargetingTemplateApiHandler = QSharedPointer<OAITargetingTemplateApiHandler>::create();
    mOAITermsApiHandler = QSharedPointer<OAITermsApiHandler>::create();
    mOAITermsOfServiceApiHandler = QSharedPointer<OAITermsOfServiceApiHandler>::create();
    mOAIUserAccountApiHandler = QSharedPointer<OAIUserAccountApiHandler>::create();
}


void OAIApiRouter::setOAIAdAccountsApiHandler(QSharedPointer<OAIAdAccountsApiHandler> handler){
    mOAIAdAccountsApiHandler = handler;
}
void OAIApiRouter::setOAIAdGroupsApiHandler(QSharedPointer<OAIAdGroupsApiHandler> handler){
    mOAIAdGroupsApiHandler = handler;
}
void OAIApiRouter::setOAIAdsApiHandler(QSharedPointer<OAIAdsApiHandler> handler){
    mOAIAdsApiHandler = handler;
}
void OAIApiRouter::setOAIAdvancedAuctionApiHandler(QSharedPointer<OAIAdvancedAuctionApiHandler> handler){
    mOAIAdvancedAuctionApiHandler = handler;
}
void OAIApiRouter::setOAIAudienceInsightsApiHandler(QSharedPointer<OAIAudienceInsightsApiHandler> handler){
    mOAIAudienceInsightsApiHandler = handler;
}
void OAIApiRouter::setOAIAudienceSharingApiHandler(QSharedPointer<OAIAudienceSharingApiHandler> handler){
    mOAIAudienceSharingApiHandler = handler;
}
void OAIApiRouter::setOAIAudiencesApiHandler(QSharedPointer<OAIAudiencesApiHandler> handler){
    mOAIAudiencesApiHandler = handler;
}
void OAIApiRouter::setOAIBillingApiHandler(QSharedPointer<OAIBillingApiHandler> handler){
    mOAIBillingApiHandler = handler;
}
void OAIApiRouter::setOAIBoardsApiHandler(QSharedPointer<OAIBoardsApiHandler> handler){
    mOAIBoardsApiHandler = handler;
}
void OAIApiRouter::setOAIBulkApiHandler(QSharedPointer<OAIBulkApiHandler> handler){
    mOAIBulkApiHandler = handler;
}
void OAIApiRouter::setOAIBusinessAccessAssetsApiHandler(QSharedPointer<OAIBusinessAccessAssetsApiHandler> handler){
    mOAIBusinessAccessAssetsApiHandler = handler;
}
void OAIApiRouter::setOAIBusinessAccessInviteApiHandler(QSharedPointer<OAIBusinessAccessInviteApiHandler> handler){
    mOAIBusinessAccessInviteApiHandler = handler;
}
void OAIApiRouter::setOAIBusinessAccessRelationshipsApiHandler(QSharedPointer<OAIBusinessAccessRelationshipsApiHandler> handler){
    mOAIBusinessAccessRelationshipsApiHandler = handler;
}
void OAIApiRouter::setOAICampaignsApiHandler(QSharedPointer<OAICampaignsApiHandler> handler){
    mOAICampaignsApiHandler = handler;
}
void OAIApiRouter::setOAICatalogsApiHandler(QSharedPointer<OAICatalogsApiHandler> handler){
    mOAICatalogsApiHandler = handler;
}
void OAIApiRouter::setOAIConversionEventsApiHandler(QSharedPointer<OAIConversionEventsApiHandler> handler){
    mOAIConversionEventsApiHandler = handler;
}
void OAIApiRouter::setOAIConversionTagsApiHandler(QSharedPointer<OAIConversionTagsApiHandler> handler){
    mOAIConversionTagsApiHandler = handler;
}
void OAIApiRouter::setOAICustomerListsApiHandler(QSharedPointer<OAICustomerListsApiHandler> handler){
    mOAICustomerListsApiHandler = handler;
}
void OAIApiRouter::setOAIIntegrationsApiHandler(QSharedPointer<OAIIntegrationsApiHandler> handler){
    mOAIIntegrationsApiHandler = handler;
}
void OAIApiRouter::setOAIKeywordsApiHandler(QSharedPointer<OAIKeywordsApiHandler> handler){
    mOAIKeywordsApiHandler = handler;
}
void OAIApiRouter::setOAILeadAdsApiHandler(QSharedPointer<OAILeadAdsApiHandler> handler){
    mOAILeadAdsApiHandler = handler;
}
void OAIApiRouter::setOAILeadFormsApiHandler(QSharedPointer<OAILeadFormsApiHandler> handler){
    mOAILeadFormsApiHandler = handler;
}
void OAIApiRouter::setOAILeadsExportApiHandler(QSharedPointer<OAILeadsExportApiHandler> handler){
    mOAILeadsExportApiHandler = handler;
}
void OAIApiRouter::setOAIMediaApiHandler(QSharedPointer<OAIMediaApiHandler> handler){
    mOAIMediaApiHandler = handler;
}
void OAIApiRouter::setOAIOauthApiHandler(QSharedPointer<OAIOauthApiHandler> handler){
    mOAIOauthApiHandler = handler;
}
void OAIApiRouter::setOAIOrderLinesApiHandler(QSharedPointer<OAIOrderLinesApiHandler> handler){
    mOAIOrderLinesApiHandler = handler;
}
void OAIApiRouter::setOAIPinsApiHandler(QSharedPointer<OAIPinsApiHandler> handler){
    mOAIPinsApiHandler = handler;
}
void OAIApiRouter::setOAIProductGroupPromotionsApiHandler(QSharedPointer<OAIProductGroupPromotionsApiHandler> handler){
    mOAIProductGroupPromotionsApiHandler = handler;
}
void OAIApiRouter::setOAIResourcesApiHandler(QSharedPointer<OAIResourcesApiHandler> handler){
    mOAIResourcesApiHandler = handler;
}
void OAIApiRouter::setOAISearchApiHandler(QSharedPointer<OAISearchApiHandler> handler){
    mOAISearchApiHandler = handler;
}
void OAIApiRouter::setOAITargetingTemplateApiHandler(QSharedPointer<OAITargetingTemplateApiHandler> handler){
    mOAITargetingTemplateApiHandler = handler;
}
void OAIApiRouter::setOAITermsApiHandler(QSharedPointer<OAITermsApiHandler> handler){
    mOAITermsApiHandler = handler;
}
void OAIApiRouter::setOAITermsOfServiceApiHandler(QSharedPointer<OAITermsOfServiceApiHandler> handler){
    mOAITermsOfServiceApiHandler = handler;
}
void OAIApiRouter::setOAIUserAccountApiHandler(QSharedPointer<OAIUserAccountApiHandler> handler){
    mOAIUserAccountApiHandler = handler;
}

void OAIApiRouter::setUpRoutes() {
    
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/ad_accounts").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
            reqObj->adAccounts_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/ad_accounts").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
            reqObj->adAccounts_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/advanced_auction/items/get").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIAdvancedAuctionApiRequest(socket, mOAIAdvancedAuctionApiHandler);
            reqObj->advancedAuctionItemsGet_postRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/advanced_auction/items/submit").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIAdvancedAuctionApiRequest(socket, mOAIAdvancedAuctionApiHandler);
            reqObj->advancedAuctionItemsSubmit_postRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/boards").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
            reqObj->boards_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/boards").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
            reqObj->boards_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("PATCH").arg("/v5/businesses/invites").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBusinessAccessInviteApiRequest(socket, mOAIBusinessAccessInviteApiHandler);
            reqObj->respondBusinessAccessInvitesRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/businesses/employers").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIBusinessAccessRelationshipsApiRequest(socket, mOAIBusinessAccessRelationshipsApiHandler);
            reqObj->get_businessEmployersRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/product_groups").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->catalogsProductGroups_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/product_groups/multiple").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->catalogsProductGroups_createManyRequest();
    });
    Routes.insert(QString("%1 %2").arg("DELETE").arg("/v5/catalogs/product_groups/multiple").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->catalogsProductGroups_deleteManyRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/catalogs/product_groups").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->catalogsProductGroups_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->catalogs_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/catalogs").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->catalogs_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/feeds").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->feeds_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/catalogs/feeds").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->feeds_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/items/batch").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->itemsBatch_postRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/catalogs/items").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->items_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/items").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->items_postRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/products/get_by_product_group_filters").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->productsByProductGroupFilter_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/catalogs/reports").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->reports_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/catalogs/reports").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->reports_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/catalogs/reports/stats").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
            reqObj->reports_statsRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/integrations/commerce").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
            reqObj->integrationsCommerce_postRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/integrations/logs").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
            reqObj->integrationsLogs_postRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/integrations").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
            reqObj->integrations_getListRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/media").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIMediaApiRequest(socket, mOAIMediaApiHandler);
            reqObj->media_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/media").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIMediaApiRequest(socket, mOAIMediaApiHandler);
            reqObj->media_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/oauth/token").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIOauthApiRequest(socket, mOAIOauthApiHandler);
            reqObj->oauth_tokenRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/pins/analytics").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
            reqObj->multiPins_analyticsRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/pins").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
            reqObj->pins_createRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/pins").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
            reqObj->pins_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/resources/ad_account_countries").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIResourcesApiRequest(socket, mOAIResourcesApiHandler);
            reqObj->adAccountCountries_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/resources/delivery_metrics").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIResourcesApiRequest(socket, mOAIResourcesApiHandler);
            reqObj->deliveryMetrics_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/resources/lead_form_questions").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIResourcesApiRequest(socket, mOAIResourcesApiHandler);
            reqObj->leadFormQuestions_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/resources/metrics_ready_state").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIResourcesApiRequest(socket, mOAIResourcesApiHandler);
            reqObj->metricsReadyState_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/search/partner/pins").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAISearchApiRequest(socket, mOAISearchApiHandler);
            reqObj->searchPartnerPinsRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/search/boards").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAISearchApiRequest(socket, mOAISearchApiHandler);
            reqObj->searchUserBoards_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/search/pins").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAISearchApiRequest(socket, mOAISearchApiHandler);
            reqObj->searchUserPins_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/terms/related").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAITermsApiRequest(socket, mOAITermsApiHandler);
            reqObj->termsRelated_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/terms/suggested").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAITermsApiRequest(socket, mOAITermsApiHandler);
            reqObj->termsSuggested_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/following/boards").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->boardsUserFollows_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/followers").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->followers_listRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/businesses").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->linkedBusinessAccounts_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("DELETE").arg("/v5/user_account/websites").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->unverifyWebsite_deleteRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/analytics").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->userAccount_analyticsRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/analytics/top_pins").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->userAccount_analytics_topPinsRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/analytics/top_video_pins").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->userAccount_analytics_topVideoPinsRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->userAccount_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/following").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->userFollowing_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/websites").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->userWebsites_getRequest();
    });
    Routes.insert(QString("%1 %2").arg("POST").arg("/v5/user_account/websites").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->verifyWebsite_updateRequest();
    });
    Routes.insert(QString("%1 %2").arg("GET").arg("/v5/user_account/websites/verification").toLower(), [this](QHttpEngine::Socket *socket) {
            auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
            reqObj->websiteVerification_getRequest();
    });
}

void OAIApiRouter::processRequest(QHttpEngine::Socket *socket){
    if( handleRequest(socket) ){
        return;
    }
    if( handleRequestAndExtractPathParam(socket) ){
        return;
    }
    socket->setStatusCode(QHttpEngine::Socket::NotFound);
    if(socket->isOpen()){
        socket->writeHeaders();
        socket->close();
    }
}

bool OAIApiRouter::handleRequest(QHttpEngine::Socket *socket){
    auto reqPath = QString("%1 %2").arg(fromQHttpEngineMethod(socket->method())).arg(socket->path()).toLower();
    if ( Routes.contains(reqPath) ) {
        Routes.value(reqPath).operator()(socket);
        return true;
    }
    return false;
}

bool OAIApiRouter::handleRequestAndExtractPathParam(QHttpEngine::Socket *socket){
    auto reqPath = QString("%1 %2").arg(fromQHttpEngineMethod(socket->method())).arg(socket->path()).toLower();
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/targeting_analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->adAccountTargetingAnalytics_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->adAccount_analyticsRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->adAccounts_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/mmm_reports").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->analytics_createMmmReportRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/reports").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->analytics_createReportRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/templates/{template_id}/reports").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString template_id = match.captured(QString("template_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->analytics_createTemplateReportRequest(ad_account_id, template_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/mmm_reports").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->analytics_getMmmReportRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/reports").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->analytics_getReportRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/ad_accounts/{ad_account_id}/sandbox").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->sandbox_deleteRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/templates").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdAccountsApiRequest(socket, mOAIAdAccountsApiHandler);
                reqObj->templates_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/bid_floor").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroupsBidFloor_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ad_groups/targeting_analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroupsTargetingAnalytics_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ad_groups/analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroups_analyticsRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/ad_groups/audience_sizing").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroups_audienceSizingRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/ad_groups").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroups_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ad_groups/{ad_group_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString ad_group_id = match.captured(QString("ad_group_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroups_getRequest(ad_account_id, ad_group_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ad_groups").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroups_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/ad_groups").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdGroupsApiRequest(socket, mOAIAdGroupsApiHandler);
                reqObj->adGroups_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/ad_previews").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->adPreviews_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ads/targeting_analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->adTargetingAnalytics_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ads/analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->ads_analyticsRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/ads").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->ads_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ads/{ad_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString ad_id = match.captured(QString("ad_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->ads_getRequest(ad_account_id, ad_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ads").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->ads_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/ads").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAdsApiRequest(socket, mOAIAdsApiHandler);
                reqObj->ads_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/insights/audiences").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudienceInsightsApiRequest(socket, mOAIAudienceInsightsApiHandler);
                reqObj->audienceInsightsScopeAndType_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/audience_insights").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudienceInsightsApiRequest(socket, mOAIAudienceInsightsApiHandler);
                reqObj->audienceInsights_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/audiences/shared/accounts").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->adAccountsAudiencesSharedAccounts_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/audiences/shared/accounts").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->businessAccountAudiencesSharedAccounts_listRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/audiences").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->sharedAudiencesForBusiness_listRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->updateAdAccountToAdAccountSharedAudienceRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/audiences/businesses/shared").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->updateAdAccountToBusinessSharedAudienceRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/businesses/{business_id}/audiences/ad_accounts/shared").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->updateBusinessToAdAccountSharedAudienceRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/businesses/{business_id}/audiences/businesses/shared").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIAudienceSharingApiRequest(socket, mOAIAudienceSharingApiHandler);
                reqObj->updateBusinessToBusinessSharedAudienceRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/audiences").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudiencesApiRequest(socket, mOAIAudiencesApiHandler);
                reqObj->audiences_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/audiences/custom").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudiencesApiRequest(socket, mOAIAudiencesApiHandler);
                reqObj->audiences_createCustomRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/audiences/{audience_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString audience_id = match.captured(QString("audience_id").toLower());
                auto reqObj = new OAIAudiencesApiRequest(socket, mOAIAudiencesApiHandler);
                reqObj->audiences_getRequest(ad_account_id, audience_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/audiences").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIAudiencesApiRequest(socket, mOAIAudiencesApiHandler);
                reqObj->audiences_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/audiences/{audience_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString audience_id = match.captured(QString("audience_id").toLower());
                auto reqObj = new OAIAudiencesApiRequest(socket, mOAIAudiencesApiHandler);
                reqObj->audiences_updateRequest(ad_account_id, audience_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/ads_credit/redeem").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->adsCredit_redeemRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ads_credit/discounts").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->adsCreditsDiscounts_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/billing_profiles").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->billingProfiles_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ssio/accounts").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->ssioAccounts_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/ssio/insertion_orders").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->ssioInsertionOrder_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/ssio/insertion_orders").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->ssioInsertionOrder_editRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ssio/insertion_orders/status").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->ssioInsertionOrdersStatus_getByAdAccountRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString pin_order_id = match.captured(QString("pin_order_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->ssioInsertionOrdersStatus_getByPinOrderIdRequest(ad_account_id, pin_order_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/ssio/order_lines").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBillingApiRequest(socket, mOAIBillingApiHandler);
                reqObj->ssioOrderLines_getByAdAccountRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/boards/{board_id}/sections").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boardSections_createRequest(board_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/boards/{board_id}/sections/{section_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                QString section_id = match.captured(QString("section_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boardSections_deleteRequest(board_id, section_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/boards/{board_id}/sections").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boardSections_listRequest(board_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/boards/{board_id}/sections/{section_id}/pins").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                QString section_id = match.captured(QString("section_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boardSections_listPinsRequest(board_id, section_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/boards/{board_id}/sections/{section_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                QString section_id = match.captured(QString("section_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boardSections_updateRequest(board_id, section_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/boards/{board_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boards_deleteRequest(board_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/boards/{board_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boards_getRequest(board_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/boards/{board_id}/pins").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boards_listPinsRequest(board_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/boards/{board_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString board_id = match.captured(QString("board_id").toLower());
                auto reqObj = new OAIBoardsApiRequest(socket, mOAIBoardsApiHandler);
                reqObj->boards_updateRequest(board_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/bulk/download").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBulkApiRequest(socket, mOAIBulkApiHandler);
                reqObj->bulkDownload_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString bulk_request_id = match.captured(QString("bulk_request_id").toLower());
                auto reqObj = new OAIBulkApiRequest(socket, mOAIBulkApiHandler);
                reqObj->bulkRequest_getRequest(ad_account_id, bulk_request_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/bulk/upsert").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIBulkApiRequest(socket, mOAIBulkApiHandler);
                reqObj->bulkUpsert_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/businesses/{business_id}/asset_groups").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->assetGroup_createRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/businesses/{business_id}/asset_groups").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->assetGroup_deleteRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/businesses/{business_id}/asset_groups").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->assetGroup_updateRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/assets/{asset_id}/members").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                QString asset_id = match.captured(QString("asset_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessAssetMembers_getRequest(business_id, asset_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/assets/{asset_id}/partners").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                QString asset_id = match.captured(QString("asset_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessAssetPartners_getRequest(business_id, asset_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/assets").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessAssets_getRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/members/{member_id}/assets").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                QString member_id = match.captured(QString("member_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessMemberAssets_getRequest(business_id, member_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/businesses/{business_id}/members/assets/access").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessMembersAssetAccess_deleteRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/businesses/{business_id}/members/assets/access").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessMembersAssetAccess_updateRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/partners/{partner_id}/assets").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                QString partner_id = match.captured(QString("partner_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->businessPartnerAssetAccess_getRequest(business_id, partner_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/businesses/{business_id}/partners/assets").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->deletePartnerAssetAccessHandlerImplRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/businesses/{business_id}/partners/assets").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessAssetsApiRequest(socket, mOAIBusinessAccessAssetsApiHandler);
                reqObj->updatePartnerAssetAccessHandlerImplRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/businesses/{business_id}/requests/assets/access").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessInviteApiRequest(socket, mOAIBusinessAccessInviteApiHandler);
                reqObj->assetAccessRequests_createRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/businesses/{business_id}/invites").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessInviteApiRequest(socket, mOAIBusinessAccessInviteApiHandler);
                reqObj->cancelInvitesOrRequestsRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/businesses/{business_id}/invites/assets/access").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessInviteApiRequest(socket, mOAIBusinessAccessInviteApiHandler);
                reqObj->createAssetInvitesRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/businesses/{business_id}/invites").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessInviteApiRequest(socket, mOAIBusinessAccessInviteApiHandler);
                reqObj->createMembershipOrPartnershipInvitesRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/invites").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessInviteApiRequest(socket, mOAIBusinessAccessInviteApiHandler);
                reqObj->get_invitesRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/businesses/{business_id}/members").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessRelationshipsApiRequest(socket, mOAIBusinessAccessRelationshipsApiHandler);
                reqObj->deleteBusinessMembershipRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/businesses/{business_id}/partners").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessRelationshipsApiRequest(socket, mOAIBusinessAccessRelationshipsApiHandler);
                reqObj->deleteBusinessPartnersRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/members").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessRelationshipsApiRequest(socket, mOAIBusinessAccessRelationshipsApiHandler);
                reqObj->get_businessMembersRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/businesses/{business_id}/partners").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessRelationshipsApiRequest(socket, mOAIBusinessAccessRelationshipsApiHandler);
                reqObj->get_businessPartnersRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/businesses/{business_id}/members").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString business_id = match.captured(QString("business_id").toLower());
                auto reqObj = new OAIBusinessAccessRelationshipsApiRequest(socket, mOAIBusinessAccessRelationshipsApiHandler);
                reqObj->update_businessMembershipsRequest(business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/campaigns/targeting_analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICampaignsApiRequest(socket, mOAICampaignsApiHandler);
                reqObj->campaignTargetingAnalytics_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/campaigns/analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICampaignsApiRequest(socket, mOAICampaignsApiHandler);
                reqObj->campaigns_analyticsRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/campaigns").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICampaignsApiRequest(socket, mOAICampaignsApiHandler);
                reqObj->campaigns_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/campaigns/{campaign_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString campaign_id = match.captured(QString("campaign_id").toLower());
                auto reqObj = new OAICampaignsApiRequest(socket, mOAICampaignsApiHandler);
                reqObj->campaigns_getRequest(ad_account_id, campaign_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/campaigns").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICampaignsApiRequest(socket, mOAICampaignsApiHandler);
                reqObj->campaigns_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/campaigns").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICampaignsApiRequest(socket, mOAICampaignsApiHandler);
                reqObj->campaigns_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/product_groups/{product_group_id}/products").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString product_group_id = match.captured(QString("product_group_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->catalogsProductGroupPins_listRequest(product_group_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/catalogs/product_groups/{product_group_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString product_group_id = match.captured(QString("product_group_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->catalogsProductGroups_deleteRequest(product_group_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/product_groups/{product_group_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString product_group_id = match.captured(QString("product_group_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->catalogsProductGroups_getRequest(product_group_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/product_groups/{product_group_id}/product_counts").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString product_group_id = match.captured(QString("product_group_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->catalogsProductGroups_productCountsGetRequest(product_group_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/catalogs/product_groups/{product_group_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString product_group_id = match.captured(QString("product_group_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->catalogsProductGroups_updateRequest(product_group_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/feeds/{feed_id}/processing_results").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString feed_id = match.captured(QString("feed_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->feedProcessingResults_listRequest(feed_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/catalogs/feeds/{feed_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString feed_id = match.captured(QString("feed_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->feeds_deleteRequest(feed_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/feeds/{feed_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString feed_id = match.captured(QString("feed_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->feeds_getRequest(feed_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/catalogs/feeds/{feed_id}/ingest").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString feed_id = match.captured(QString("feed_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->feeds_ingestRequest(feed_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/catalogs/feeds/{feed_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString feed_id = match.captured(QString("feed_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->feeds_updateRequest(feed_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/items/batch/{batch_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString batch_id = match.captured(QString("batch_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->itemsBatch_getRequest(batch_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/catalogs/processing_results/{processing_result_id}/item_issues").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString processing_result_id = match.captured(QString("processing_result_id").toLower());
                auto reqObj = new OAICatalogsApiRequest(socket, mOAICatalogsApiHandler);
                reqObj->itemsIssues_listRequest(processing_result_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/events").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIConversionEventsApiRequest(socket, mOAIConversionEventsApiHandler);
                reqObj->events_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/conversion_tags").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIConversionTagsApiRequest(socket, mOAIConversionTagsApiHandler);
                reqObj->conversionTags_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString conversion_tag_id = match.captured(QString("conversion_tag_id").toLower());
                auto reqObj = new OAIConversionTagsApiRequest(socket, mOAIConversionTagsApiHandler);
                reqObj->conversionTags_getRequest(ad_account_id, conversion_tag_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/conversion_tags").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIConversionTagsApiRequest(socket, mOAIConversionTagsApiHandler);
                reqObj->conversionTags_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIConversionTagsApiRequest(socket, mOAIConversionTagsApiHandler);
                reqObj->ocpmEligibleConversionTags_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/conversion_tags/page_visit").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIConversionTagsApiRequest(socket, mOAIConversionTagsApiHandler);
                reqObj->pageVisitConversionTags_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/customer_lists").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICustomerListsApiRequest(socket, mOAICustomerListsApiHandler);
                reqObj->customerLists_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString customer_list_id = match.captured(QString("customer_list_id").toLower());
                auto reqObj = new OAICustomerListsApiRequest(socket, mOAICustomerListsApiHandler);
                reqObj->customerLists_getRequest(ad_account_id, customer_list_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/customer_lists").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAICustomerListsApiRequest(socket, mOAICustomerListsApiHandler);
                reqObj->customerLists_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString customer_list_id = match.captured(QString("customer_list_id").toLower());
                auto reqObj = new OAICustomerListsApiRequest(socket, mOAICustomerListsApiHandler);
                reqObj->customerLists_updateRequest(ad_account_id, customer_list_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/integrations/commerce/{external_business_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString external_business_id = match.captured(QString("external_business_id").toLower());
                auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
                reqObj->integrationsCommerce_delRequest(external_business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/integrations/commerce/{external_business_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString external_business_id = match.captured(QString("external_business_id").toLower());
                auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
                reqObj->integrationsCommerce_getRequest(external_business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/integrations/commerce/{external_business_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString external_business_id = match.captured(QString("external_business_id").toLower());
                auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
                reqObj->integrationsCommerce_patchRequest(external_business_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/integrations/{id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString id = match.captured(QString("id").toLower());
                auto reqObj = new OAIIntegrationsApiRequest(socket, mOAIIntegrationsApiHandler);
                reqObj->integrations_getByIdRequest(id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/keywords/metrics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIKeywordsApiRequest(socket, mOAIKeywordsApiHandler);
                reqObj->countryKeywordsMetrics_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/keywords").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIKeywordsApiRequest(socket, mOAIKeywordsApiHandler);
                reqObj->keywords_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/keywords").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIKeywordsApiRequest(socket, mOAIKeywordsApiHandler);
                reqObj->keywords_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/keywords").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIKeywordsApiRequest(socket, mOAIKeywordsApiHandler);
                reqObj->keywords_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/trends/keywords/{region}/top/{trend_type}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString region = match.captured(QString("region").toLower());
                QString trend_type = match.captured(QString("trend_type").toLower());
                auto reqObj = new OAIKeywordsApiRequest(socket, mOAIKeywordsApiHandler);
                reqObj->trendingKeywords_listRequest(region, trend_type);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString subscription_id = match.captured(QString("subscription_id").toLower());
                auto reqObj = new OAILeadAdsApiRequest(socket, mOAILeadAdsApiHandler);
                reqObj->adAccountsSubscriptions_delByIdRequest(ad_account_id, subscription_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString subscription_id = match.captured(QString("subscription_id").toLower());
                auto reqObj = new OAILeadAdsApiRequest(socket, mOAILeadAdsApiHandler);
                reqObj->adAccountsSubscriptions_getByIdRequest(ad_account_id, subscription_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/leads/subscriptions").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAILeadAdsApiRequest(socket, mOAILeadAdsApiHandler);
                reqObj->adAccountsSubscriptions_getListRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/leads/subscriptions").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAILeadAdsApiRequest(socket, mOAILeadAdsApiHandler);
                reqObj->adAccountsSubscriptions_postRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString lead_form_id = match.captured(QString("lead_form_id").toLower());
                auto reqObj = new OAILeadFormsApiRequest(socket, mOAILeadFormsApiHandler);
                reqObj->leadFormTest_createRequest(ad_account_id, lead_form_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString lead_form_id = match.captured(QString("lead_form_id").toLower());
                auto reqObj = new OAILeadFormsApiRequest(socket, mOAILeadFormsApiHandler);
                reqObj->leadForm_getRequest(ad_account_id, lead_form_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/lead_forms").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAILeadFormsApiRequest(socket, mOAILeadFormsApiHandler);
                reqObj->leadForms_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/lead_forms").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAILeadFormsApiRequest(socket, mOAILeadFormsApiHandler);
                reqObj->leadForms_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/lead_forms").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAILeadFormsApiRequest(socket, mOAILeadFormsApiHandler);
                reqObj->leadForms_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/leads_export").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAILeadsExportApiRequest(socket, mOAILeadsExportApiHandler);
                reqObj->leadsExport_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/leads_export/{leads_export_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString leads_export_id = match.captured(QString("leads_export_id").toLower());
                auto reqObj = new OAILeadsExportApiRequest(socket, mOAILeadsExportApiHandler);
                reqObj->leadsExport_getRequest(ad_account_id, leads_export_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/media/{media_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString media_id = match.captured(QString("media_id").toLower());
                auto reqObj = new OAIMediaApiRequest(socket, mOAIMediaApiHandler);
                reqObj->media_getRequest(media_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/order_lines/{order_line_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString order_line_id = match.captured(QString("order_line_id").toLower());
                auto reqObj = new OAIOrderLinesApiRequest(socket, mOAIOrderLinesApiHandler);
                reqObj->orderLines_getRequest(ad_account_id, order_line_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/order_lines").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIOrderLinesApiRequest(socket, mOAIOrderLinesApiHandler);
                reqObj->orderLines_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/pins/{pin_id}/analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString pin_id = match.captured(QString("pin_id").toLower());
                auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
                reqObj->pins_analyticsRequest(pin_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("DELETE").arg("/v5/pins/{pin_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString pin_id = match.captured(QString("pin_id").toLower());
                auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
                reqObj->pins_deleteRequest(pin_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/pins/{pin_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString pin_id = match.captured(QString("pin_id").toLower());
                auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
                reqObj->pins_getRequest(pin_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/pins/{pin_id}/save").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString pin_id = match.captured(QString("pin_id").toLower());
                auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
                reqObj->pins_saveRequest(pin_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/pins/{pin_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString pin_id = match.captured(QString("pin_id").toLower());
                auto reqObj = new OAIPinsApiRequest(socket, mOAIPinsApiHandler);
                reqObj->pins_updateRequest(pin_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/product_group_promotions").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIProductGroupPromotionsApiRequest(socket, mOAIProductGroupPromotionsApiHandler);
                reqObj->productGroupPromotions_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                QString product_group_promotion_id = match.captured(QString("product_group_promotion_id").toLower());
                auto reqObj = new OAIProductGroupPromotionsApiRequest(socket, mOAIProductGroupPromotionsApiHandler);
                reqObj->productGroupPromotions_getRequest(ad_account_id, product_group_promotion_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/product_group_promotions").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIProductGroupPromotionsApiRequest(socket, mOAIProductGroupPromotionsApiHandler);
                reqObj->productGroupPromotions_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/product_group_promotions").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIProductGroupPromotionsApiRequest(socket, mOAIProductGroupPromotionsApiHandler);
                reqObj->productGroupPromotions_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/product_groups/analytics").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAIProductGroupPromotionsApiRequest(socket, mOAIProductGroupPromotionsApiHandler);
                reqObj->productGroups_analyticsRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/resources/targeting/interests/{interest_id}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString interest_id = match.captured(QString("interest_id").toLower());
                auto reqObj = new OAIResourcesApiRequest(socket, mOAIResourcesApiHandler);
                reqObj->interestTargetingOptions_getRequest(interest_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/resources/targeting/{targeting_type}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString targeting_type = match.captured(QString("targeting_type").toLower());
                auto reqObj = new OAIResourcesApiRequest(socket, mOAIResourcesApiHandler);
                reqObj->targetingOptions_getRequest(targeting_type);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/ad_accounts/{ad_account_id}/targeting_templates").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAITargetingTemplateApiRequest(socket, mOAITargetingTemplateApiHandler);
                reqObj->targetingTemplate_createRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/targeting_templates").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAITargetingTemplateApiRequest(socket, mOAITargetingTemplateApiHandler);
                reqObj->targetingTemplate_listRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("PATCH").arg("/v5/ad_accounts/{ad_account_id}/targeting_templates").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAITargetingTemplateApiRequest(socket, mOAITargetingTemplateApiHandler);
                reqObj->targetingTemplate_updateRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/ad_accounts/{ad_account_id}/terms_of_service").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ad_account_id = match.captured(QString("ad_account_id").toLower());
                auto reqObj = new OAITermsOfServiceApiRequest(socket, mOAITermsOfServiceApiHandler);
                reqObj->termsOfService_getRequest(ad_account_id);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("POST").arg("/v5/user_account/following/{username}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString username = match.captured(QString("username").toLower());
                auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
                reqObj->followUser_updateRequest(username);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/v5/users/{username}/interests/follow").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString username = match.captured(QString("username").toLower());
                auto reqObj = new OAIUserAccountApiRequest(socket, mOAIUserAccountApiHandler);
                reqObj->userAccount_followedInterestsRequest(username);
                return true;
            }
        }
    }
    return false;
}

}
