/**
 * Pinterest REST API
 * Pinterest's REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIIntegrationsApiHandler.h"
#include "OAIIntegrationsApiRequest.h"

namespace OpenAPI {

OAIIntegrationsApiHandler::OAIIntegrationsApiHandler(){

}

OAIIntegrationsApiHandler::~OAIIntegrationsApiHandler(){

}

void OAIIntegrationsApiHandler::integrationsCommerce_del(QString external_business_id) {
    Q_UNUSED(external_business_id);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        
        reqObj->integrationsCommerce_delResponse();
    }
}
void OAIIntegrationsApiHandler::integrationsCommerce_get(QString external_business_id) {
    Q_UNUSED(external_business_id);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIIntegrationMetadata res;
        reqObj->integrationsCommerce_getResponse(res);
    }
}
void OAIIntegrationsApiHandler::integrationsCommerce_patch(QString external_business_id, OAIIntegrationRequestPatch oai_integration_request_patch) {
    Q_UNUSED(external_business_id);
    Q_UNUSED(oai_integration_request_patch);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIIntegrationMetadata res;
        reqObj->integrationsCommerce_patchResponse(res);
    }
}
void OAIIntegrationsApiHandler::integrationsCommerce_post(OAIIntegrationRequest oai_integration_request) {
    Q_UNUSED(oai_integration_request);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIIntegrationMetadata res;
        reqObj->integrationsCommerce_postResponse(res);
    }
}
void OAIIntegrationsApiHandler::integrationsLogs_post(OAIIntegrationLogsRequest oai_integration_logs_request) {
    Q_UNUSED(oai_integration_logs_request);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIIntegrationLogsSuccessResponse res;
        reqObj->integrationsLogs_postResponse(res);
    }
}
void OAIIntegrationsApiHandler::integrations_getById(QString id) {
    Q_UNUSED(id);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIIntegrationRecord res;
        reqObj->integrations_getByIdResponse(res);
    }
}
void OAIIntegrationsApiHandler::integrations_getList(QString bookmark, qint32 page_size) {
    Q_UNUSED(bookmark);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAIIntegrationsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIIntegrations_get_list_200_response res;
        reqObj->integrations_getListResponse(res);
    }
}


}
