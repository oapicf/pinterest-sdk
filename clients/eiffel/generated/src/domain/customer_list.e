note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CUSTOMER_LIST




feature --Access

    ad_account_id: detachable STRING_32
      -- Associated ad account ID.
    created_time: REAL_32
      -- Creation time. Unix timestamp in seconds.
    id: detachable STRING_32
      -- Customer list ID.
    name: detachable STRING_32
      -- Customer list name.
    num_batches: REAL_32
      -- Total number of list updates.  List creation counts as one batch. Each <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append</a> or <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call counts as another. List creation via the Ads Manager UI could result in more than one batch since the UI breaks up large lists.
    num_removed_user_records: REAL_32
      -- Number of removed user records. In a <a href=\"/docs/redoc/#operation/ads_v3_customer_list_remove_handler_PUT\">Remove API</a> call, this counter increases even if the user is not found in the list.
    num_uploaded_user_records: REAL_32
      -- Number of uploaded user records. In an <a href=\"/docs/redoc/#operation/ads_v3_customer_list_add_handler_PUT\">Append API</a> call, this counter increases even if the uploaded user is already in the list.
    status: detachable STRING_32
      -- Customer list status. TOO_SMALL - the list has less than 100 Pinterest users.
    type: detachable STRING_32
      -- Always \"customerlist\".
    updated_time: REAL_32
      -- Last update time. Unix timestamp in seconds.
    exceptions: detachable ANY
      -- Customer list errors

feature -- Change Element

    set_ad_account_id (a_name: like ad_account_id)
        -- Set 'ad_account_id' with 'a_name'.
      do
        ad_account_id := a_name
      ensure
        ad_account_id_set: ad_account_id = a_name
      end

    set_created_time (a_name: like created_time)
        -- Set 'created_time' with 'a_name'.
      do
        created_time := a_name
      ensure
        created_time_set: created_time = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_num_batches (a_name: like num_batches)
        -- Set 'num_batches' with 'a_name'.
      do
        num_batches := a_name
      ensure
        num_batches_set: num_batches = a_name
      end

    set_num_removed_user_records (a_name: like num_removed_user_records)
        -- Set 'num_removed_user_records' with 'a_name'.
      do
        num_removed_user_records := a_name
      ensure
        num_removed_user_records_set: num_removed_user_records = a_name
      end

    set_num_uploaded_user_records (a_name: like num_uploaded_user_records)
        -- Set 'num_uploaded_user_records' with 'a_name'.
      do
        num_uploaded_user_records := a_name
      ensure
        num_uploaded_user_records_set: num_uploaded_user_records = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_updated_time (a_name: like updated_time)
        -- Set 'updated_time' with 'a_name'.
      do
        updated_time := a_name
      ensure
        updated_time_set: updated_time = a_name
      end

    set_exceptions (a_name: like exceptions)
        -- Set 'exceptions' with 'a_name'.
      do
        exceptions := a_name
      ensure
        exceptions_set: exceptions = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CUSTOMER_LIST%N")
        if attached ad_account_id as l_ad_account_id then
          Result.append ("%Nad_account_id:")
          Result.append (l_ad_account_id.out)
          Result.append ("%N")
        end
        if attached created_time as l_created_time then
          Result.append ("%Ncreated_time:")
          Result.append (l_created_time.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached num_batches as l_num_batches then
          Result.append ("%Nnum_batches:")
          Result.append (l_num_batches.out)
          Result.append ("%N")
        end
        if attached num_removed_user_records as l_num_removed_user_records then
          Result.append ("%Nnum_removed_user_records:")
          Result.append (l_num_removed_user_records.out)
          Result.append ("%N")
        end
        if attached num_uploaded_user_records as l_num_uploaded_user_records then
          Result.append ("%Nnum_uploaded_user_records:")
          Result.append (l_num_uploaded_user_records.out)
          Result.append ("%N")
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached updated_time as l_updated_time then
          Result.append ("%Nupdated_time:")
          Result.append (l_updated_time.out)
          Result.append ("%N")
        end
        if attached exceptions as l_exceptions then
          Result.append ("%Nexceptions:")
          Result.append (l_exceptions.out)
          Result.append ("%N")
        end
      end
end

