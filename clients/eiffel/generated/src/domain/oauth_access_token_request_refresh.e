note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OAUTH_ACCESS_TOKEN_REQUEST_REFRESH




feature --Access

    grant_type: detachable STRING_32
      
    refresh_token: detachable STRING_32
      
    scope: detachable STRING_32
      
    refresh_on: BOOLEAN
      -- Setting this field to <code>true</code> will add a new refresh token to your 200 response, as well as the refresh_token_expires_in and refresh_token_expires_at fields. To see the structure of this payload, set the 200 response_type to \"everlasting_refresh\".

feature -- Change Element

    set_grant_type (a_name: like grant_type)
        -- Set 'grant_type' with 'a_name'.
      do
        grant_type := a_name
      ensure
        grant_type_set: grant_type = a_name
      end

    set_refresh_token (a_name: like refresh_token)
        -- Set 'refresh_token' with 'a_name'.
      do
        refresh_token := a_name
      ensure
        refresh_token_set: refresh_token = a_name
      end

    set_scope (a_name: like scope)
        -- Set 'scope' with 'a_name'.
      do
        scope := a_name
      ensure
        scope_set: scope = a_name
      end

    set_refresh_on (a_name: like refresh_on)
        -- Set 'refresh_on' with 'a_name'.
      do
        refresh_on := a_name
      ensure
        refresh_on_set: refresh_on = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OAUTH_ACCESS_TOKEN_REQUEST_REFRESH%N")
        if attached grant_type as l_grant_type then
          Result.append ("%Ngrant_type:")
          Result.append (l_grant_type.out)
          Result.append ("%N")
        end
        if attached refresh_token as l_refresh_token then
          Result.append ("%Nrefresh_token:")
          Result.append (l_refresh_token.out)
          Result.append ("%N")
        end
        if attached scope as l_scope then
          Result.append ("%Nscope:")
          Result.append (l_scope.out)
          Result.append ("%N")
        end
        if attached refresh_on as l_refresh_on then
          Result.append ("%Nrefresh_on:")
          Result.append (l_refresh_on.out)
          Result.append ("%N")
        end
      end
end

