note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class AUDIENCE_DEMOGRAPHICS




feature --Access

    ages: detachable LIST [AUDIENCE_DEMOGRAPHIC_VALUE]
      -- Ages distribution.
    genders: detachable LIST [AUDIENCE_DEMOGRAPHIC_VALUE]
      -- Gender distribution.
    devices: detachable LIST [AUDIENCE_DEMOGRAPHIC_VALUE]
      -- Device usage distribution.
    metros: detachable LIST [AUDIENCE_DEMOGRAPHIC_VALUE]
      -- Geographic metro area distribution.
    countries: detachable LIST [AUDIENCE_DEMOGRAPHIC_VALUE]
      -- Country area distribution.

feature -- Change Element

    set_ages (a_name: like ages)
        -- Set 'ages' with 'a_name'.
      do
        ages := a_name
      ensure
        ages_set: ages = a_name
      end

    set_genders (a_name: like genders)
        -- Set 'genders' with 'a_name'.
      do
        genders := a_name
      ensure
        genders_set: genders = a_name
      end

    set_devices (a_name: like devices)
        -- Set 'devices' with 'a_name'.
      do
        devices := a_name
      ensure
        devices_set: devices = a_name
      end

    set_metros (a_name: like metros)
        -- Set 'metros' with 'a_name'.
      do
        metros := a_name
      ensure
        metros_set: metros = a_name
      end

    set_countries (a_name: like countries)
        -- Set 'countries' with 'a_name'.
      do
        countries := a_name
      ensure
        countries_set: countries = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass AUDIENCE_DEMOGRAPHICS%N")
        if attached ages as l_ages then
          across l_ages as ic loop
            Result.append ("%N ages:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached genders as l_genders then
          across l_genders as ic loop
            Result.append ("%N genders:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached devices as l_devices then
          across l_devices as ic loop
            Result.append ("%N devices:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached metros as l_metros then
          across l_metros as ic loop
            Result.append ("%N metros:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached countries as l_countries then
          across l_countries as ic loop
            Result.append ("%N countries:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

