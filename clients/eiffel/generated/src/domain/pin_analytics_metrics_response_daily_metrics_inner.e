note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class PIN_ANALYTICS_METRICS_RESPONSE_DAILY_METRICS_INNER




feature --Access

    data_status: detachable DATA_STATUS
      
    date: detachable STRING_32
      -- Metrics date (UTC): YYYY-MM-DD.
    metrics: detachable STRING_TABLE [REAL_32]
      -- The metric name and daily value for each requested metric

feature -- Change Element

    set_data_status (a_name: like data_status)
        -- Set 'data_status' with 'a_name'.
      do
        data_status := a_name
      ensure
        data_status_set: data_status = a_name
      end

    set_date (a_name: like date)
        -- Set 'date' with 'a_name'.
      do
        date := a_name
      ensure
        date_set: date = a_name
      end

    set_metrics (a_name: like metrics)
        -- Set 'metrics' with 'a_name'.
      do
        metrics := a_name
      ensure
        metrics_set: metrics = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PIN_ANALYTICS_METRICS_RESPONSE_DAILY_METRICS_INNER%N")
        if attached data_status as l_data_status then
          Result.append ("%Ndata_status:")
          Result.append (l_data_status.out)
          Result.append ("%N")
        end
        if attached date as l_date then
          Result.append ("%Ndate:")
          Result.append (l_date.out)
          Result.append ("%N")
        end
        if attached metrics as l_metrics then
          Result.append ("%Nmetrics:")
          across l_metrics as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

