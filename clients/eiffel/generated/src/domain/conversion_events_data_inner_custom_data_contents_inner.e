note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CONVERSION_EVENTS_DATA_INNER_CUSTOM_DATA_CONTENTS_INNER




feature --Access

    id: detachable STRING_32
      -- The id of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
    item_price: detachable STRING_32
      -- The price of a product. Accepted as a string in the request; it will be parsed into a double. This is the original item value before any discount. We recommend using this if you are a merchant for PageVisit, AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
    quantity: INTEGER_64
      -- The amount of a product. We recommend using this if you are a merchant for AddToCart and Checkouts. For detail, please check <a href=\"https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\" target=\"_blank\">here</a> (Install the Pinterest tag section).
    item_name: detachable STRING_32
      -- The name of a product.
    item_category: detachable STRING_32
      -- The category of a product.
    item_brand: detachable STRING_32
      -- The brand of a product.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_item_price (a_name: like item_price)
        -- Set 'item_price' with 'a_name'.
      do
        item_price := a_name
      ensure
        item_price_set: item_price = a_name
      end

    set_quantity (a_name: like quantity)
        -- Set 'quantity' with 'a_name'.
      do
        quantity := a_name
      ensure
        quantity_set: quantity = a_name
      end

    set_item_name (a_name: like item_name)
        -- Set 'item_name' with 'a_name'.
      do
        item_name := a_name
      ensure
        item_name_set: item_name = a_name
      end

    set_item_category (a_name: like item_category)
        -- Set 'item_category' with 'a_name'.
      do
        item_category := a_name
      ensure
        item_category_set: item_category = a_name
      end

    set_item_brand (a_name: like item_brand)
        -- Set 'item_brand' with 'a_name'.
      do
        item_brand := a_name
      ensure
        item_brand_set: item_brand = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CONVERSION_EVENTS_DATA_INNER_CUSTOM_DATA_CONTENTS_INNER%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached item_price as l_item_price then
          Result.append ("%Nitem_price:")
          Result.append (l_item_price.out)
          Result.append ("%N")
        end
        if attached quantity as l_quantity then
          Result.append ("%Nquantity:")
          Result.append (l_quantity.out)
          Result.append ("%N")
        end
        if attached item_name as l_item_name then
          Result.append ("%Nitem_name:")
          Result.append (l_item_name.out)
          Result.append ("%N")
        end
        if attached item_category as l_item_category then
          Result.append ("%Nitem_category:")
          Result.append (l_item_category.out)
          Result.append ("%N")
        end
        if attached item_brand as l_item_brand then
          Result.append ("%Nitem_brand:")
          Result.append (l_item_brand.out)
          Result.append ("%N")
        end
      end
end

