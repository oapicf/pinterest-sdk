note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class TARGETING_TEMPLATE_COMMON




feature --Access

    name: detachable STRING_32
      -- targeting template name
    auto_targeting_enabled: BOOLEAN
      -- Enable auto-targeting for ad group. Also known as <a href=\"https://help.pinterest.com/en/business/article/expanded-targeting\" target=\"_blank\">\"expanded targeting\"</a>.
    targeting_attributes: detachable TARGETING_SPEC
      
    placement_group: detachable PLACEMENT_GROUP_TYPE
      
    keywords: detachable LIST [TARGETING_TEMPLATE_KEYWORD]
      
    tracking_urls: detachable TRACKING_URLS
      

feature -- Change Element

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_auto_targeting_enabled (a_name: like auto_targeting_enabled)
        -- Set 'auto_targeting_enabled' with 'a_name'.
      do
        auto_targeting_enabled := a_name
      ensure
        auto_targeting_enabled_set: auto_targeting_enabled = a_name
      end

    set_targeting_attributes (a_name: like targeting_attributes)
        -- Set 'targeting_attributes' with 'a_name'.
      do
        targeting_attributes := a_name
      ensure
        targeting_attributes_set: targeting_attributes = a_name
      end

    set_placement_group (a_name: like placement_group)
        -- Set 'placement_group' with 'a_name'.
      do
        placement_group := a_name
      ensure
        placement_group_set: placement_group = a_name
      end

    set_keywords (a_name: like keywords)
        -- Set 'keywords' with 'a_name'.
      do
        keywords := a_name
      ensure
        keywords_set: keywords = a_name
      end

    set_tracking_urls (a_name: like tracking_urls)
        -- Set 'tracking_urls' with 'a_name'.
      do
        tracking_urls := a_name
      ensure
        tracking_urls_set: tracking_urls = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass TARGETING_TEMPLATE_COMMON%N")
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached auto_targeting_enabled as l_auto_targeting_enabled then
          Result.append ("%Nauto_targeting_enabled:")
          Result.append (l_auto_targeting_enabled.out)
          Result.append ("%N")
        end
        if attached targeting_attributes as l_targeting_attributes then
          Result.append ("%Ntargeting_attributes:")
          Result.append (l_targeting_attributes.out)
          Result.append ("%N")
        end
        if attached placement_group as l_placement_group then
          Result.append ("%Nplacement_group:")
          Result.append (l_placement_group.out)
          Result.append ("%N")
        end
        if attached keywords as l_keywords then
          across l_keywords as ic loop
            Result.append ("%N keywords:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached tracking_urls as l_tracking_urls then
          Result.append ("%Ntracking_urls:")
          Result.append (l_tracking_urls.out)
          Result.append ("%N")
        end
      end
end

