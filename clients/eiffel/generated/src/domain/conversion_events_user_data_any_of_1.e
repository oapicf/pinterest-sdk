note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CONVERSION_EVENTS_USER_DATA_ANY_OF_1




feature --Access

    em: detachable LIST [STRING_32]
      -- Sha256 hashes of lowercase version of user's email addresses. Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
    hashed_maids: detachable LIST [STRING_32]
      -- Sha256 hashes of user's \"Google Advertising IDs\" (GAIDs) or \"Apple's Identifier for Advertisers\" (IDFAs). Used for matching. We highly recommend this on checkout events at least. It may improve reporting performance such as ROAS/CPA. The string should be in the UTF-8 format.
    client_ip_address: detachable STRING_32
      -- The user's IP address, which can be either in IPv4 or IPv6 format. Used for matching. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.
    client_user_agent: detachable STRING_32
      -- The user agent string of the user's web browser. We highly recommend this for all events. It may improve reporting performance such as ROAS/CPA.

feature -- Change Element

    set_em (a_name: like em)
        -- Set 'em' with 'a_name'.
      do
        em := a_name
      ensure
        em_set: em = a_name
      end

    set_hashed_maids (a_name: like hashed_maids)
        -- Set 'hashed_maids' with 'a_name'.
      do
        hashed_maids := a_name
      ensure
        hashed_maids_set: hashed_maids = a_name
      end

    set_client_ip_address (a_name: like client_ip_address)
        -- Set 'client_ip_address' with 'a_name'.
      do
        client_ip_address := a_name
      ensure
        client_ip_address_set: client_ip_address = a_name
      end

    set_client_user_agent (a_name: like client_user_agent)
        -- Set 'client_user_agent' with 'a_name'.
      do
        client_user_agent := a_name
      ensure
        client_user_agent_set: client_user_agent = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CONVERSION_EVENTS_USER_DATA_ANY_OF_1%N")
        if attached em as l_em then
          across l_em as ic loop
            Result.append ("%N em:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached hashed_maids as l_hashed_maids then
          across l_hashed_maids as ic loop
            Result.append ("%N hashed_maids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached client_ip_address as l_client_ip_address then
          Result.append ("%Nclient_ip_address:")
          Result.append (l_client_ip_address.out)
          Result.append ("%N")
        end
        if attached client_user_agent as l_client_user_agent then
          Result.append ("%Nclient_user_agent:")
          Result.append (l_client_user_agent.out)
          Result.append ("%N")
        end
      end
end

