note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class BASE_INVITE_DATA_RESPONSE_INVITE_DATA




feature --Access

    invite_expiration: INTEGER_32
      -- The date and time when the invite/request will expire. Returned in milliseconds.
    invite_status: detachable STRING_32
      -- The current status of the invite. The invite can be in one of the following states PENDING, ACCEPTED, DECLINED, CANCELLED, EXPIRED.
    invite_type: detachable STRING_32
      -- The type of invite. <br>'MEMBER_INVITE' is to invite a member to access your business assets. <br>'PARTNER_INVITE' is to invite a partner to access your business assets. <br>'PARTNER_REQUEST' is to request access a partner's business assets.
    last_updated_time: INTEGER_32
      -- The date and time the invite/request was last updated. Returned in milliseconds.
    sent_at: INTEGER_32
      -- The date and time the invite/request was sent/created. Returned in milliseconds.

feature -- Change Element

    set_invite_expiration (a_name: like invite_expiration)
        -- Set 'invite_expiration' with 'a_name'.
      do
        invite_expiration := a_name
      ensure
        invite_expiration_set: invite_expiration = a_name
      end

    set_invite_status (a_name: like invite_status)
        -- Set 'invite_status' with 'a_name'.
      do
        invite_status := a_name
      ensure
        invite_status_set: invite_status = a_name
      end

    set_invite_type (a_name: like invite_type)
        -- Set 'invite_type' with 'a_name'.
      do
        invite_type := a_name
      ensure
        invite_type_set: invite_type = a_name
      end

    set_last_updated_time (a_name: like last_updated_time)
        -- Set 'last_updated_time' with 'a_name'.
      do
        last_updated_time := a_name
      ensure
        last_updated_time_set: last_updated_time = a_name
      end

    set_sent_at (a_name: like sent_at)
        -- Set 'sent_at' with 'a_name'.
      do
        sent_at := a_name
      ensure
        sent_at_set: sent_at = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass BASE_INVITE_DATA_RESPONSE_INVITE_DATA%N")
        if attached invite_expiration as l_invite_expiration then
          Result.append ("%Ninvite_expiration:")
          Result.append (l_invite_expiration.out)
          Result.append ("%N")
        end
        if attached invite_status as l_invite_status then
          Result.append ("%Ninvite_status:")
          Result.append (l_invite_status.out)
          Result.append ("%N")
        end
        if attached invite_type as l_invite_type then
          Result.append ("%Ninvite_type:")
          Result.append (l_invite_type.out)
          Result.append ("%N")
        end
        if attached last_updated_time as l_last_updated_time then
          Result.append ("%Nlast_updated_time:")
          Result.append (l_last_updated_time.out)
          Result.append ("%N")
        end
        if attached sent_at as l_sent_at then
          Result.append ("%Nsent_at:")
          Result.append (l_sent_at.out)
          Result.append ("%N")
        end
      end
end

