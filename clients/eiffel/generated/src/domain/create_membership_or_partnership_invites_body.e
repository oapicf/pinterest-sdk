note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CREATE_MEMBERSHIP_OR_PARTNERSHIP_INVITES_BODY




feature --Access

    business_role: detachable STRING_32
      -- The business access level to grant member/partner. Note, values are case-sensitive. - EMPLOYEE: Can only view and access assets you assign them to. They cannot see details about other employees, partners, or other assets. - BIZ_ADMIN: Have full control of roles and can add employees and partners as well as grant asset access. - PARTNER: Can only view and access assets you assign them to/or they assign to you.
    invite_type: detachable INVITE_TYPE
      
    members: detachable LIST [STRING_32]
      -- A list of usernames, emails, or a mix of them. Should be used if invite_type is MEMBER_INVITE
    partners: detachable LIST [STRING_32]
      -- A list of partner_id. Should be used if invite_type is PARTNER_INVITE or PARTNER_REQUEST

feature -- Change Element

    set_business_role (a_name: like business_role)
        -- Set 'business_role' with 'a_name'.
      do
        business_role := a_name
      ensure
        business_role_set: business_role = a_name
      end

    set_invite_type (a_name: like invite_type)
        -- Set 'invite_type' with 'a_name'.
      do
        invite_type := a_name
      ensure
        invite_type_set: invite_type = a_name
      end

    set_members (a_name: like members)
        -- Set 'members' with 'a_name'.
      do
        members := a_name
      ensure
        members_set: members = a_name
      end

    set_partners (a_name: like partners)
        -- Set 'partners' with 'a_name'.
      do
        partners := a_name
      ensure
        partners_set: partners = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CREATE_MEMBERSHIP_OR_PARTNERSHIP_INVITES_BODY%N")
        if attached business_role as l_business_role then
          Result.append ("%Nbusiness_role:")
          Result.append (l_business_role.out)
          Result.append ("%N")
        end
        if attached invite_type as l_invite_type then
          Result.append ("%Ninvite_type:")
          Result.append (l_invite_type.out)
          Result.append ("%N")
        end
        if attached members as l_members then
          across l_members as ic loop
            Result.append ("%N members:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached partners as l_partners then
          across l_partners as ic loop
            Result.append ("%N partners:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

