note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CREATE_ASSET_GROUP_BODY




feature --Access

    asset_group_name: detachable STRING_32
      -- Asset Group name
    asset_group_description: detachable STRING_32
      -- Asset group description
    asset_group_types: detachable LIST [ASSET_GROUP_TYPE]
      -- Asset Group Types. Note: The asset group types are used for user reference and categorization purposes only and do not impact the functionality of the asset group.

feature -- Change Element

    set_asset_group_name (a_name: like asset_group_name)
        -- Set 'asset_group_name' with 'a_name'.
      do
        asset_group_name := a_name
      ensure
        asset_group_name_set: asset_group_name = a_name
      end

    set_asset_group_description (a_name: like asset_group_description)
        -- Set 'asset_group_description' with 'a_name'.
      do
        asset_group_description := a_name
      ensure
        asset_group_description_set: asset_group_description = a_name
      end

    set_asset_group_types (a_name: like asset_group_types)
        -- Set 'asset_group_types' with 'a_name'.
      do
        asset_group_types := a_name
      ensure
        asset_group_types_set: asset_group_types = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CREATE_ASSET_GROUP_BODY%N")
        if attached asset_group_name as l_asset_group_name then
          Result.append ("%Nasset_group_name:")
          Result.append (l_asset_group_name.out)
          Result.append ("%N")
        end
        if attached asset_group_description as l_asset_group_description then
          Result.append ("%Nasset_group_description:")
          Result.append (l_asset_group_description.out)
          Result.append ("%N")
        end
        if attached asset_group_types as l_asset_group_types then
          across l_asset_group_types as ic loop
            Result.append ("%N asset_group_types:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

