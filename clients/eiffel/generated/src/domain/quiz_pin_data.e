note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class QUIZ_PIN_DATA




feature --Access

    questions: detachable LIST [QUIZ_PIN_QUESTION]
      
    results: detachable LIST [QUIZ_PIN_RESULT]
      
    tie_breaker_type: detachable STRING_32
      -- Quiz ad tie breaker type, default is RANDOM
    tie_breaker_custom_result: detachable QUIZ_PIN_RESULT
      

feature -- Change Element

    set_questions (a_name: like questions)
        -- Set 'questions' with 'a_name'.
      do
        questions := a_name
      ensure
        questions_set: questions = a_name
      end

    set_results (a_name: like results)
        -- Set 'results' with 'a_name'.
      do
        results := a_name
      ensure
        results_set: results = a_name
      end

    set_tie_breaker_type (a_name: like tie_breaker_type)
        -- Set 'tie_breaker_type' with 'a_name'.
      do
        tie_breaker_type := a_name
      ensure
        tie_breaker_type_set: tie_breaker_type = a_name
      end

    set_tie_breaker_custom_result (a_name: like tie_breaker_custom_result)
        -- Set 'tie_breaker_custom_result' with 'a_name'.
      do
        tie_breaker_custom_result := a_name
      ensure
        tie_breaker_custom_result_set: tie_breaker_custom_result = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass QUIZ_PIN_DATA%N")
        if attached questions as l_questions then
          across l_questions as ic loop
            Result.append ("%N questions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached results as l_results then
          across l_results as ic loop
            Result.append ("%N results:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached tie_breaker_type as l_tie_breaker_type then
          Result.append ("%Ntie_breaker_type:")
          Result.append (l_tie_breaker_type.out)
          Result.append ("%N")
        end
        if attached tie_breaker_custom_result as l_tie_breaker_custom_result then
          Result.append ("%Ntie_breaker_custom_result:")
          Result.append (l_tie_breaker_custom_result.out)
          Result.append ("%N")
        end
      end
end

