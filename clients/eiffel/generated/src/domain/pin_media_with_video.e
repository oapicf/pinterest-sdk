note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class PIN_MEDIA_WITH_VIDEO

inherit


  PIN_MEDIA

feature --Access

    images: detachable PIN_MEDIA_WITH_IMAGE_ALL_OF_IMAGES
      
    cover_image_url: detachable STRING_32
      
    video_url: detachable STRING_32
      -- Video url (720p). </p><strong>Note:</strong> This field is limited and not available to all apps.
    duration: REAL_32
      -- Duration (in milliseconds)
    height: INTEGER_32
      -- Height (in pixels)
    width: INTEGER_32
      -- Width (in pixels)

feature -- Change Element

    set_images (a_name: like images)
        -- Set 'images' with 'a_name'.
      do
        images := a_name
      ensure
        images_set: images = a_name
      end

    set_cover_image_url (a_name: like cover_image_url)
        -- Set 'cover_image_url' with 'a_name'.
      do
        cover_image_url := a_name
      ensure
        cover_image_url_set: cover_image_url = a_name
      end

    set_video_url (a_name: like video_url)
        -- Set 'video_url' with 'a_name'.
      do
        video_url := a_name
      ensure
        video_url_set: video_url = a_name
      end

    set_duration (a_name: like duration)
        -- Set 'duration' with 'a_name'.
      do
        duration := a_name
      ensure
        duration_set: duration = a_name
      end

    set_height (a_name: like height)
        -- Set 'height' with 'a_name'.
      do
        height := a_name
      ensure
        height_set: height = a_name
      end

    set_width (a_name: like width)
        -- Set 'width' with 'a_name'.
      do
        width := a_name
      ensure
        width_set: width = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append(out_PinMedia)
        Result.append("%Nclass PIN_MEDIA_WITH_VIDEO%N")
        if attached images as l_images then
          Result.append ("%Nimages:")
          Result.append (l_images.out)
          Result.append ("%N")
        end
        if attached cover_image_url as l_cover_image_url then
          Result.append ("%Ncover_image_url:")
          Result.append (l_cover_image_url.out)
          Result.append ("%N")
        end
        if attached video_url as l_video_url then
          Result.append ("%Nvideo_url:")
          Result.append (l_video_url.out)
          Result.append ("%N")
        end
        if attached duration as l_duration then
          Result.append ("%Nduration:")
          Result.append (l_duration.out)
          Result.append ("%N")
        end
        if attached height as l_height then
          Result.append ("%Nheight:")
          Result.append (l_height.out)
          Result.append ("%N")
        end
        if attached width as l_width then
          Result.append ("%Nwidth:")
          Result.append (l_width.out)
          Result.append ("%N")
        end
      end
end

