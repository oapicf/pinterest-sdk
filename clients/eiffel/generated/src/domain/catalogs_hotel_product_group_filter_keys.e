note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CATALOGS_HOTEL_PRODUCT_GROUP_FILTER_KEYS




feature --Access

    PRICE: detachable CATALOGS_PRODUCT_GROUP_PRICING_CURRENCY_CRITERIA
      
    HOTEL_ID: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    BRAND: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    c_us_to_m__la_be_l_0: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    c_us_to_m__la_be_l_1: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    c_us_to_m__la_be_l_2: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    c_us_to_m__la_be_l_3: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    c_us_to_m__la_be_l_4: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_STRING_CRITERIA
      
    COUNTRY: detachable CATALOGS_PRODUCT_GROUP_MULTIPLE_COUNTRIES_CRITERIA
      

feature -- Change Element

    set_PRICE (a_name: like PRICE)
        -- Set 'PRICE' with 'a_name'.
      do
        PRICE := a_name
      ensure
        PRICE_set: PRICE = a_name
      end

    set_HOTEL_ID (a_name: like HOTEL_ID)
        -- Set 'HOTEL_ID' with 'a_name'.
      do
        HOTEL_ID := a_name
      ensure
        HOTEL_ID_set: HOTEL_ID = a_name
      end

    set_BRAND (a_name: like BRAND)
        -- Set 'BRAND' with 'a_name'.
      do
        BRAND := a_name
      ensure
        BRAND_set: BRAND = a_name
      end

    set_c_us_to_m__la_be_l_0 (a_name: like c_us_to_m__la_be_l_0)
        -- Set 'c_us_to_m__la_be_l_0' with 'a_name'.
      do
        c_us_to_m__la_be_l_0 := a_name
      ensure
        c_us_to_m__la_be_l_0_set: c_us_to_m__la_be_l_0 = a_name
      end

    set_c_us_to_m__la_be_l_1 (a_name: like c_us_to_m__la_be_l_1)
        -- Set 'c_us_to_m__la_be_l_1' with 'a_name'.
      do
        c_us_to_m__la_be_l_1 := a_name
      ensure
        c_us_to_m__la_be_l_1_set: c_us_to_m__la_be_l_1 = a_name
      end

    set_c_us_to_m__la_be_l_2 (a_name: like c_us_to_m__la_be_l_2)
        -- Set 'c_us_to_m__la_be_l_2' with 'a_name'.
      do
        c_us_to_m__la_be_l_2 := a_name
      ensure
        c_us_to_m__la_be_l_2_set: c_us_to_m__la_be_l_2 = a_name
      end

    set_c_us_to_m__la_be_l_3 (a_name: like c_us_to_m__la_be_l_3)
        -- Set 'c_us_to_m__la_be_l_3' with 'a_name'.
      do
        c_us_to_m__la_be_l_3 := a_name
      ensure
        c_us_to_m__la_be_l_3_set: c_us_to_m__la_be_l_3 = a_name
      end

    set_c_us_to_m__la_be_l_4 (a_name: like c_us_to_m__la_be_l_4)
        -- Set 'c_us_to_m__la_be_l_4' with 'a_name'.
      do
        c_us_to_m__la_be_l_4 := a_name
      ensure
        c_us_to_m__la_be_l_4_set: c_us_to_m__la_be_l_4 = a_name
      end

    set_COUNTRY (a_name: like COUNTRY)
        -- Set 'COUNTRY' with 'a_name'.
      do
        COUNTRY := a_name
      ensure
        COUNTRY_set: COUNTRY = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CATALOGS_HOTEL_PRODUCT_GROUP_FILTER_KEYS%N")
        if attached PRICE as l_PRICE then
          Result.append ("%NPRICE:")
          Result.append (l_PRICE.out)
          Result.append ("%N")
        end
        if attached HOTEL_ID as l_HOTEL_ID then
          Result.append ("%NHOTEL_ID:")
          Result.append (l_HOTEL_ID.out)
          Result.append ("%N")
        end
        if attached BRAND as l_BRAND then
          Result.append ("%NBRAND:")
          Result.append (l_BRAND.out)
          Result.append ("%N")
        end
        if attached c_us_to_m__la_be_l_0 as l_c_us_to_m__la_be_l_0 then
          Result.append ("%Nc_us_to_m__la_be_l_0:")
          Result.append (l_c_us_to_m__la_be_l_0.out)
          Result.append ("%N")
        end
        if attached c_us_to_m__la_be_l_1 as l_c_us_to_m__la_be_l_1 then
          Result.append ("%Nc_us_to_m__la_be_l_1:")
          Result.append (l_c_us_to_m__la_be_l_1.out)
          Result.append ("%N")
        end
        if attached c_us_to_m__la_be_l_2 as l_c_us_to_m__la_be_l_2 then
          Result.append ("%Nc_us_to_m__la_be_l_2:")
          Result.append (l_c_us_to_m__la_be_l_2.out)
          Result.append ("%N")
        end
        if attached c_us_to_m__la_be_l_3 as l_c_us_to_m__la_be_l_3 then
          Result.append ("%Nc_us_to_m__la_be_l_3:")
          Result.append (l_c_us_to_m__la_be_l_3.out)
          Result.append ("%N")
        end
        if attached c_us_to_m__la_be_l_4 as l_c_us_to_m__la_be_l_4 then
          Result.append ("%Nc_us_to_m__la_be_l_4:")
          Result.append (l_c_us_to_m__la_be_l_4.out)
          Result.append ("%N")
        end
        if attached COUNTRY as l_COUNTRY then
          Result.append ("%NCOUNTRY:")
          Result.append (l_COUNTRY.out)
          Result.append ("%N")
        end
      end
end

