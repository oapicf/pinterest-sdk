note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class MEDIA_UPLOAD_ALL_OF_UPLOAD_PARAMETERS




feature --Access

    x_amz_date: detachable STRING_32
      
    x_amz_signature: detachable STRING_32
      
    x_amz_security_token: detachable STRING_32
      
    x_amz_algorithm: detachable STRING_32
      
    key: detachable STRING_32
      
    policy: detachable STRING_32
      
    x_amz_credential: detachable STRING_32
      
    content__type: detachable STRING_32
      

feature -- Change Element

    set_x_amz_date (a_name: like x_amz_date)
        -- Set 'x_amz_date' with 'a_name'.
      do
        x_amz_date := a_name
      ensure
        x_amz_date_set: x_amz_date = a_name
      end

    set_x_amz_signature (a_name: like x_amz_signature)
        -- Set 'x_amz_signature' with 'a_name'.
      do
        x_amz_signature := a_name
      ensure
        x_amz_signature_set: x_amz_signature = a_name
      end

    set_x_amz_security_token (a_name: like x_amz_security_token)
        -- Set 'x_amz_security_token' with 'a_name'.
      do
        x_amz_security_token := a_name
      ensure
        x_amz_security_token_set: x_amz_security_token = a_name
      end

    set_x_amz_algorithm (a_name: like x_amz_algorithm)
        -- Set 'x_amz_algorithm' with 'a_name'.
      do
        x_amz_algorithm := a_name
      ensure
        x_amz_algorithm_set: x_amz_algorithm = a_name
      end

    set_key (a_name: like key)
        -- Set 'key' with 'a_name'.
      do
        key := a_name
      ensure
        key_set: key = a_name
      end

    set_policy (a_name: like policy)
        -- Set 'policy' with 'a_name'.
      do
        policy := a_name
      ensure
        policy_set: policy = a_name
      end

    set_x_amz_credential (a_name: like x_amz_credential)
        -- Set 'x_amz_credential' with 'a_name'.
      do
        x_amz_credential := a_name
      ensure
        x_amz_credential_set: x_amz_credential = a_name
      end

    set_content__type (a_name: like content__type)
        -- Set 'content__type' with 'a_name'.
      do
        content__type := a_name
      ensure
        content__type_set: content__type = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass MEDIA_UPLOAD_ALL_OF_UPLOAD_PARAMETERS%N")
        if attached x_amz_date as l_x_amz_date then
          Result.append ("%Nx_amz_date:")
          Result.append (l_x_amz_date.out)
          Result.append ("%N")
        end
        if attached x_amz_signature as l_x_amz_signature then
          Result.append ("%Nx_amz_signature:")
          Result.append (l_x_amz_signature.out)
          Result.append ("%N")
        end
        if attached x_amz_security_token as l_x_amz_security_token then
          Result.append ("%Nx_amz_security_token:")
          Result.append (l_x_amz_security_token.out)
          Result.append ("%N")
        end
        if attached x_amz_algorithm as l_x_amz_algorithm then
          Result.append ("%Nx_amz_algorithm:")
          Result.append (l_x_amz_algorithm.out)
          Result.append ("%N")
        end
        if attached key as l_key then
          Result.append ("%Nkey:")
          Result.append (l_key.out)
          Result.append ("%N")
        end
        if attached policy as l_policy then
          Result.append ("%Npolicy:")
          Result.append (l_policy.out)
          Result.append ("%N")
        end
        if attached x_amz_credential as l_x_amz_credential then
          Result.append ("%Nx_amz_credential:")
          Result.append (l_x_amz_credential.out)
          Result.append ("%N")
        end
        if attached content__type as l_content__type then
          Result.append ("%Ncontent__type:")
          Result.append (l_content__type.out)
          Result.append ("%N")
        end
      end
end

