note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class LINE_ITEM




feature --Access

    product_brand: detachable STRING_32
      -- Product brand. For example, \"Parker\".
    product_category: detachable STRING_32
      -- Product category. For example, \"Shoes\".
    product_id: INTEGER_32
      -- Product ID. For example, 1414.
    product_name: detachable STRING_32
      -- Product name. For example, \"Parker Boots\".
    product_price: detachable STRING_32
      -- Product price. For example, \"99.99\".
    product_quantity: INTEGER_32
      -- Product quantity. For example, 2.
    product_variant: detachable STRING_32
      -- Product variant. For example, \"Red\".
    product_variant_id: detachable STRING_32
      -- Product variant ID. For example, \"1414-34832\".

feature -- Change Element

    set_product_brand (a_name: like product_brand)
        -- Set 'product_brand' with 'a_name'.
      do
        product_brand := a_name
      ensure
        product_brand_set: product_brand = a_name
      end

    set_product_category (a_name: like product_category)
        -- Set 'product_category' with 'a_name'.
      do
        product_category := a_name
      ensure
        product_category_set: product_category = a_name
      end

    set_product_id (a_name: like product_id)
        -- Set 'product_id' with 'a_name'.
      do
        product_id := a_name
      ensure
        product_id_set: product_id = a_name
      end

    set_product_name (a_name: like product_name)
        -- Set 'product_name' with 'a_name'.
      do
        product_name := a_name
      ensure
        product_name_set: product_name = a_name
      end

    set_product_price (a_name: like product_price)
        -- Set 'product_price' with 'a_name'.
      do
        product_price := a_name
      ensure
        product_price_set: product_price = a_name
      end

    set_product_quantity (a_name: like product_quantity)
        -- Set 'product_quantity' with 'a_name'.
      do
        product_quantity := a_name
      ensure
        product_quantity_set: product_quantity = a_name
      end

    set_product_variant (a_name: like product_variant)
        -- Set 'product_variant' with 'a_name'.
      do
        product_variant := a_name
      ensure
        product_variant_set: product_variant = a_name
      end

    set_product_variant_id (a_name: like product_variant_id)
        -- Set 'product_variant_id' with 'a_name'.
      do
        product_variant_id := a_name
      ensure
        product_variant_id_set: product_variant_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass LINE_ITEM%N")
        if attached product_brand as l_product_brand then
          Result.append ("%Nproduct_brand:")
          Result.append (l_product_brand.out)
          Result.append ("%N")
        end
        if attached product_category as l_product_category then
          Result.append ("%Nproduct_category:")
          Result.append (l_product_category.out)
          Result.append ("%N")
        end
        if attached product_id as l_product_id then
          Result.append ("%Nproduct_id:")
          Result.append (l_product_id.out)
          Result.append ("%N")
        end
        if attached product_name as l_product_name then
          Result.append ("%Nproduct_name:")
          Result.append (l_product_name.out)
          Result.append ("%N")
        end
        if attached product_price as l_product_price then
          Result.append ("%Nproduct_price:")
          Result.append (l_product_price.out)
          Result.append ("%N")
        end
        if attached product_quantity as l_product_quantity then
          Result.append ("%Nproduct_quantity:")
          Result.append (l_product_quantity.out)
          Result.append ("%N")
        end
        if attached product_variant as l_product_variant then
          Result.append ("%Nproduct_variant:")
          Result.append (l_product_variant.out)
          Result.append ("%N")
        end
        if attached product_variant_id as l_product_variant_id then
          Result.append ("%Nproduct_variant_id:")
          Result.append (l_product_variant_id.out)
          Result.append ("%N")
        end
      end
end

