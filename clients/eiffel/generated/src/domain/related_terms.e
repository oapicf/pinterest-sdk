note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class RELATED_TERMS




feature --Access

    id: detachable STRING_32
      -- First input term. For example, if you pass \"?terms=clothes,workout\", then id will be \"clothes\"
    related_term_count: INTEGER_32
      -- Total number of related terms returned
    related_terms_list: detachable LIST [RELATED_TERMS_RELATED_TERMS_LIST_INNER]
      -- The id of the advertiser.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_related_term_count (a_name: like related_term_count)
        -- Set 'related_term_count' with 'a_name'.
      do
        related_term_count := a_name
      ensure
        related_term_count_set: related_term_count = a_name
      end

    set_related_terms_list (a_name: like related_terms_list)
        -- Set 'related_terms_list' with 'a_name'.
      do
        related_terms_list := a_name
      ensure
        related_terms_list_set: related_terms_list = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass RELATED_TERMS%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached related_term_count as l_related_term_count then
          Result.append ("%Nrelated_term_count:")
          Result.append (l_related_term_count.out)
          Result.append ("%N")
        end
        if attached related_terms_list as l_related_terms_list then
          across l_related_terms_list as ic loop
            Result.append ("%N related_terms_list:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

