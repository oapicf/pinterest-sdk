note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CATALOGS_CREATIVE_ASSETS_PRODUCT_GROUP




feature --Access

    catalog_type: detachable STRING_32
      
    id: detachable STRING_32
      -- ID of the creative assets product group.
    name: detachable STRING_32
      -- Name of creative assets product group
    description: detachable STRING_32
      
    filters: detachable CATALOGS_CREATIVE_ASSETS_PRODUCT_GROUP_FILTERS
      
    created_at: INTEGER_32
      -- Unix timestamp in seconds of when catalog product group was created.
    updated_at: INTEGER_32
      -- Unix timestamp in seconds of last time catalog product group was updated.
    catalog_id: detachable STRING_32
      -- Catalog id pertaining to the creative assets product group.

feature -- Change Element

    set_catalog_type (a_name: like catalog_type)
        -- Set 'catalog_type' with 'a_name'.
      do
        catalog_type := a_name
      ensure
        catalog_type_set: catalog_type = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_description (a_name: like description)
        -- Set 'description' with 'a_name'.
      do
        description := a_name
      ensure
        description_set: description = a_name
      end

    set_filters (a_name: like filters)
        -- Set 'filters' with 'a_name'.
      do
        filters := a_name
      ensure
        filters_set: filters = a_name
      end

    set_created_at (a_name: like created_at)
        -- Set 'created_at' with 'a_name'.
      do
        created_at := a_name
      ensure
        created_at_set: created_at = a_name
      end

    set_updated_at (a_name: like updated_at)
        -- Set 'updated_at' with 'a_name'.
      do
        updated_at := a_name
      ensure
        updated_at_set: updated_at = a_name
      end

    set_catalog_id (a_name: like catalog_id)
        -- Set 'catalog_id' with 'a_name'.
      do
        catalog_id := a_name
      ensure
        catalog_id_set: catalog_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CATALOGS_CREATIVE_ASSETS_PRODUCT_GROUP%N")
        if attached catalog_type as l_catalog_type then
          Result.append ("%Ncatalog_type:")
          Result.append (l_catalog_type.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached description as l_description then
          Result.append ("%Ndescription:")
          Result.append (l_description.out)
          Result.append ("%N")
        end
        if attached filters as l_filters then
          Result.append ("%Nfilters:")
          Result.append (l_filters.out)
          Result.append ("%N")
        end
        if attached created_at as l_created_at then
          Result.append ("%Ncreated_at:")
          Result.append (l_created_at.out)
          Result.append ("%N")
        end
        if attached updated_at as l_updated_at then
          Result.append ("%Nupdated_at:")
          Result.append (l_updated_at.out)
          Result.append ("%N")
        end
        if attached catalog_id as l_catalog_id then
          Result.append ("%Ncatalog_id:")
          Result.append (l_catalog_id.out)
          Result.append ("%N")
        end
      end
end

