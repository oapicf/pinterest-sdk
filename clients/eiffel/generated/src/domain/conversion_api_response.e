note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CONVERSION_API_RESPONSE




feature --Access

    num_events_received: INTEGER_32
      -- Total number of events received in the request.
    num_events_processed: INTEGER_32
      -- Number of events that were successfully processed from the events.
    events: detachable LIST [CONVERSION_API_RESPONSE_EVENTS_INNER]
      -- Specific messages for each event received. The order will match the order in which the events were received in the request.

feature -- Change Element

    set_num_events_received (a_name: like num_events_received)
        -- Set 'num_events_received' with 'a_name'.
      do
        num_events_received := a_name
      ensure
        num_events_received_set: num_events_received = a_name
      end

    set_num_events_processed (a_name: like num_events_processed)
        -- Set 'num_events_processed' with 'a_name'.
      do
        num_events_processed := a_name
      ensure
        num_events_processed_set: num_events_processed = a_name
      end

    set_events (a_name: like events)
        -- Set 'events' with 'a_name'.
      do
        events := a_name
      ensure
        events_set: events = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CONVERSION_API_RESPONSE%N")
        if attached num_events_received as l_num_events_received then
          Result.append ("%Nnum_events_received:")
          Result.append (l_num_events_received.out)
          Result.append ("%N")
        end
        if attached num_events_processed as l_num_events_processed then
          Result.append ("%Nnum_events_processed:")
          Result.append (l_num_events_processed.out)
          Result.append ("%N")
        end
        if attached events as l_events then
          across l_events as ic loop
            Result.append ("%N events:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

