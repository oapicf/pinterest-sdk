note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class INVITE_EXCEPTION_RESPONSE




feature --Access

    invite_or_request_id: detachable STRING_32
      -- Unique identifier of the invite/request.
    code: INTEGER_32
      -- Error code associated with the error in performing the action on the invite/request.
    message: detachable STRING_32
      -- Error message associated with the error in performing the action on the invite/request.
    users_or_partner_ids: detachable LIST [STRING_32]
      -- A list of users' usernames or emails OR a list of partner ids that caused the error.

feature -- Change Element

    set_invite_or_request_id (a_name: like invite_or_request_id)
        -- Set 'invite_or_request_id' with 'a_name'.
      do
        invite_or_request_id := a_name
      ensure
        invite_or_request_id_set: invite_or_request_id = a_name
      end

    set_code (a_name: like code)
        -- Set 'code' with 'a_name'.
      do
        code := a_name
      ensure
        code_set: code = a_name
      end

    set_message (a_name: like message)
        -- Set 'message' with 'a_name'.
      do
        message := a_name
      ensure
        message_set: message = a_name
      end

    set_users_or_partner_ids (a_name: like users_or_partner_ids)
        -- Set 'users_or_partner_ids' with 'a_name'.
      do
        users_or_partner_ids := a_name
      ensure
        users_or_partner_ids_set: users_or_partner_ids = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass INVITE_EXCEPTION_RESPONSE%N")
        if attached invite_or_request_id as l_invite_or_request_id then
          Result.append ("%Ninvite_or_request_id:")
          Result.append (l_invite_or_request_id.out)
          Result.append ("%N")
        end
        if attached code as l_code then
          Result.append ("%Ncode:")
          Result.append (l_code.out)
          Result.append ("%N")
        end
        if attached message as l_message then
          Result.append ("%Nmessage:")
          Result.append (l_message.out)
          Result.append ("%N")
        end
        if attached users_or_partner_ids as l_users_or_partner_ids then
          across l_users_or_partner_ids as ic loop
            Result.append ("%N users_or_partner_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

