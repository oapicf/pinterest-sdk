note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OAUTH_ACCESS_TOKEN_RESPONSE_CODE




feature --Access

    response_type: detachable STRING_32
      
    access_token: detachable STRING_32
      
    token_type: detachable STRING_32
      
    expires_in: INTEGER_32
      
    scope: detachable STRING_32
      
    refresh_token: detachable STRING_32
      
    refresh_token_expires_in: INTEGER_32
      

feature -- Change Element

    set_response_type (a_name: like response_type)
        -- Set 'response_type' with 'a_name'.
      do
        response_type := a_name
      ensure
        response_type_set: response_type = a_name
      end

    set_access_token (a_name: like access_token)
        -- Set 'access_token' with 'a_name'.
      do
        access_token := a_name
      ensure
        access_token_set: access_token = a_name
      end

    set_token_type (a_name: like token_type)
        -- Set 'token_type' with 'a_name'.
      do
        token_type := a_name
      ensure
        token_type_set: token_type = a_name
      end

    set_expires_in (a_name: like expires_in)
        -- Set 'expires_in' with 'a_name'.
      do
        expires_in := a_name
      ensure
        expires_in_set: expires_in = a_name
      end

    set_scope (a_name: like scope)
        -- Set 'scope' with 'a_name'.
      do
        scope := a_name
      ensure
        scope_set: scope = a_name
      end

    set_refresh_token (a_name: like refresh_token)
        -- Set 'refresh_token' with 'a_name'.
      do
        refresh_token := a_name
      ensure
        refresh_token_set: refresh_token = a_name
      end

    set_refresh_token_expires_in (a_name: like refresh_token_expires_in)
        -- Set 'refresh_token_expires_in' with 'a_name'.
      do
        refresh_token_expires_in := a_name
      ensure
        refresh_token_expires_in_set: refresh_token_expires_in = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OAUTH_ACCESS_TOKEN_RESPONSE_CODE%N")
        if attached response_type as l_response_type then
          Result.append ("%Nresponse_type:")
          Result.append (l_response_type.out)
          Result.append ("%N")
        end
        if attached access_token as l_access_token then
          Result.append ("%Naccess_token:")
          Result.append (l_access_token.out)
          Result.append ("%N")
        end
        if attached token_type as l_token_type then
          Result.append ("%Ntoken_type:")
          Result.append (l_token_type.out)
          Result.append ("%N")
        end
        if attached expires_in as l_expires_in then
          Result.append ("%Nexpires_in:")
          Result.append (l_expires_in.out)
          Result.append ("%N")
        end
        if attached scope as l_scope then
          Result.append ("%Nscope:")
          Result.append (l_scope.out)
          Result.append ("%N")
        end
        if attached refresh_token as l_refresh_token then
          Result.append ("%Nrefresh_token:")
          Result.append (l_refresh_token.out)
          Result.append ("%N")
        end
        if attached refresh_token_expires_in as l_refresh_token_expires_in then
          Result.append ("%Nrefresh_token_expires_in:")
          Result.append (l_refresh_token_expires_in.out)
          Result.append ("%N")
        end
      end
end

