note
 description:"[
		Pinterest REST API
 		Pinterest's REST API
  		The version of the OpenAPI document: 5.14.0
 	    Contact: blah+oapicf@cliffano.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class SSIO_ACCOUNT_ITEM




feature --Access

    id: detachable STRING_32
      -- Salesforce id for billto_info
    io_terms_id: detachable STRING_32
      -- Salesforce id for IO Terms and Conditions
    io_terms: detachable STRING_32
      -- Salesforce text for IO Terms and Conditions
    us_terms_id: detachable STRING_32
      -- Salesforce id for US Terms and Conditions
    us_terms: detachable STRING_32
      -- Salesforce text for US Terms and Conditions
    row_terms_id: detachable STRING_32
      -- Salesforce id for Rest of the World Terms and Conditions
    row_terms: detachable STRING_32
      -- Salesforce text for Rest of the World Terms and Conditions
    io_type: detachable STRING_32
      -- Insertion Order Type - Pinterest Paper or Agency Paper
    addresses: detachable LIST [SSIO_ACCOUNT_ADDRESS]
      -- Address information that is associated with this account.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_io_terms_id (a_name: like io_terms_id)
        -- Set 'io_terms_id' with 'a_name'.
      do
        io_terms_id := a_name
      ensure
        io_terms_id_set: io_terms_id = a_name
      end

    set_io_terms (a_name: like io_terms)
        -- Set 'io_terms' with 'a_name'.
      do
        io_terms := a_name
      ensure
        io_terms_set: io_terms = a_name
      end

    set_us_terms_id (a_name: like us_terms_id)
        -- Set 'us_terms_id' with 'a_name'.
      do
        us_terms_id := a_name
      ensure
        us_terms_id_set: us_terms_id = a_name
      end

    set_us_terms (a_name: like us_terms)
        -- Set 'us_terms' with 'a_name'.
      do
        us_terms := a_name
      ensure
        us_terms_set: us_terms = a_name
      end

    set_row_terms_id (a_name: like row_terms_id)
        -- Set 'row_terms_id' with 'a_name'.
      do
        row_terms_id := a_name
      ensure
        row_terms_id_set: row_terms_id = a_name
      end

    set_row_terms (a_name: like row_terms)
        -- Set 'row_terms' with 'a_name'.
      do
        row_terms := a_name
      ensure
        row_terms_set: row_terms = a_name
      end

    set_io_type (a_name: like io_type)
        -- Set 'io_type' with 'a_name'.
      do
        io_type := a_name
      ensure
        io_type_set: io_type = a_name
      end

    set_addresses (a_name: like addresses)
        -- Set 'addresses' with 'a_name'.
      do
        addresses := a_name
      ensure
        addresses_set: addresses = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass SSIO_ACCOUNT_ITEM%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached io_terms_id as l_io_terms_id then
          Result.append ("%Nio_terms_id:")
          Result.append (l_io_terms_id.out)
          Result.append ("%N")
        end
        if attached io_terms as l_io_terms then
          Result.append ("%Nio_terms:")
          Result.append (l_io_terms.out)
          Result.append ("%N")
        end
        if attached us_terms_id as l_us_terms_id then
          Result.append ("%Nus_terms_id:")
          Result.append (l_us_terms_id.out)
          Result.append ("%N")
        end
        if attached us_terms as l_us_terms then
          Result.append ("%Nus_terms:")
          Result.append (l_us_terms.out)
          Result.append ("%N")
        end
        if attached row_terms_id as l_row_terms_id then
          Result.append ("%Nrow_terms_id:")
          Result.append (l_row_terms_id.out)
          Result.append ("%N")
        end
        if attached row_terms as l_row_terms then
          Result.append ("%Nrow_terms:")
          Result.append (l_row_terms.out)
          Result.append ("%N")
        end
        if attached io_type as l_io_type then
          Result.append ("%Nio_type:")
          Result.append (l_io_type.out)
          Result.append ("%N")
        end
        if attached addresses as l_addresses then
          across l_addresses as ic loop
            Result.append ("%N addresses:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

